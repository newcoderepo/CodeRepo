nohup: ignoring input
================================================================================
Summary of training process:
Dataset                : Cifar10
Batch size             : 64
Learing rate           : 0.001
Number of total clients: 100
Split method           : quantity
Split parameter        : 5.0
Clients per round      : 10
Number of global rounds: 100
Number of local rounds : 10
Feature from layer     : -1
Feature percentage     : 0.1
Local training loss    : CE_CE_KL
Loss of beta           : 1.0
Algorithm              : FedFea
Modelname              : MOBNET
Mode                   : training
Seed                   : 0
================================================================================
Files already downloaded and verified
Files already downloaded and verified
Class frequencies:
client,class0,class1,class2,class3,class4,class5,class6,class7,class8,class9,Amount
Client   0,0.158,0.219,0.00,0.00,0.00,0.215,0.00,0.00,0.198,0.210,520
Client   1,0.00,0.224,0.194,0.00,0.00,0.00,0.177,0.191,0.00,0.214,509
Client   2,0.00,0.00,0.191,0.00,0.193,0.217,0.00,0.188,0.00,0.211,517
Client   3,0.167,0.232,0.00,0.222,0.00,0.00,0.183,0.197,0.00,0.00,492
Client   4,0.00,0.224,0.00,0.00,0.196,0.00,0.176,0.190,0.00,0.214,510
Client   5,0.158,0.219,0.00,0.210,0.00,0.215,0.00,0.00,0.198,0.00,520
Client   6,0.00,0.00,0.00,0.215,0.00,0.00,0.178,0.191,0.201,0.215,507
Client   7,0.00,0.218,0.00,0.00,0.00,0.215,0.172,0.186,0.00,0.209,522
Client   8,0.162,0.225,0.00,0.215,0.197,0.00,0.00,0.00,0.201,0.00,507
Client   9,0.165,0.00,0.197,0.219,0.201,0.00,0.00,0.00,0.00,0.219,498
Client  10,0.168,0.00,0.201,0.00,0.00,0.00,0.00,0.199,0.209,0.223,488
Client  11,0.00,0.220,0.00,0.210,0.00,0.00,0.173,0.187,0.00,0.210,519
Client  12,0.00,0.00,0.190,0.00,0.194,0.217,0.00,0.186,0.00,0.212,515
Client  13,0.170,0.00,0.204,0.227,0.00,0.00,0.187,0.00,0.212,0.00,481
Client  14,0.165,0.00,0.00,0.220,0.202,0.00,0.00,0.194,0.00,0.220,496
Client  15,0.00,0.214,0.00,0.205,0.00,0.209,0.00,0.180,0.192,0.00,532
Client  16,0.169,0.00,0.00,0.00,0.206,0.229,0.186,0.00,0.210,0.00,485
Client  17,0.00,0.00,0.197,0.00,0.00,0.223,0.181,0.193,0.205,0.00,497
Client  18,0.168,0.00,0.00,0.00,0.204,0.00,0.00,0.196,0.209,0.223,489
Client  19,0.164,0.228,0.196,0.00,0.00,0.00,0.00,0.192,0.00,0.218,499
Client  20,0.168,0.00,0.00,0.00,0.204,0.00,0.00,0.196,0.209,0.223,489
Client  21,0.162,0.226,0.194,0.00,0.00,0.00,0.00,0.00,0.202,0.216,505
Client  22,0.00,0.225,0.193,0.215,0.00,0.00,0.178,0.189,0.00,0.00,507
Client  23,0.168,0.00,0.201,0.223,0.00,0.00,0.184,0.00,0.00,0.223,488
Client  24,0.176,0.00,0.210,0.00,0.215,0.00,0.193,0.206,0.00,0.00,466
Client  25,0.165,0.229,0.00,0.00,0.201,0.223,0.181,0.00,0.00,0.00,497
Client  26,0.00,0.222,0.191,0.00,0.195,0.216,0.175,0.00,0.00,0.00,513
Client  27,0.164,0.00,0.00,0.00,0.00,0.222,0.00,0.192,0.204,0.218,500
Client  28,0.165,0.00,0.00,0.219,0.00,0.00,0.00,0.193,0.205,0.219,498
Client  29,0.00,0.221,0.00,0.00,0.194,0.00,0.175,0.00,0.198,0.212,515
Client  30,0.168,0.00,0.201,0.00,0.00,0.00,0.00,0.197,0.209,0.224,487
Client  31,0.00,0.218,0.00,0.00,0.191,0.212,0.00,0.184,0.195,0.00,523
Client  32,0.164,0.00,0.196,0.218,0.200,0.222,0.00,0.00,0.00,0.00,500
Client  33,0.163,0.227,0.195,0.217,0.199,0.00,0.00,0.00,0.00,0.00,503
Client  34,0.176,0.00,0.210,0.00,0.215,0.00,0.193,0.206,0.00,0.00,466
Client  35,0.163,0.00,0.00,0.216,0.198,0.220,0.00,0.00,0.202,0.00,504
Client  36,0.168,0.00,0.201,0.224,0.00,0.00,0.183,0.00,0.00,0.224,487
Client  37,0.00,0.219,0.00,0.209,0.192,0.00,0.00,0.184,0.196,0.00,521
Client  38,0.00,0.00,0.00,0.215,0.00,0.219,0.176,0.189,0.201,0.00,507
Client  39,0.165,0.00,0.197,0.219,0.201,0.00,0.00,0.00,0.00,0.219,498
Client  40,0.166,0.00,0.00,0.221,0.00,0.225,0.181,0.00,0.207,0.00,493
Client  41,0.164,0.228,0.196,0.00,0.00,0.222,0.00,0.192,0.00,0.00,501
Client  42,0.165,0.230,0.198,0.00,0.202,0.00,0.00,0.00,0.206,0.00,496
Client  43,0.00,0.224,0.00,0.215,0.197,0.00,0.175,0.189,0.00,0.00,508
Client  44,0.172,0.00,0.205,0.00,0.209,0.00,0.186,0.00,0.00,0.228,478
Client  45,0.168,0.00,0.00,0.00,0.00,0.228,0.183,0.197,0.00,0.224,487
Client  46,0.168,0.00,0.00,0.223,0.204,0.00,0.182,0.00,0.00,0.223,489
Client  47,0.164,0.00,0.00,0.218,0.00,0.222,0.00,0.192,0.204,0.00,500
Client  48,0.00,0.00,0.00,0.00,0.00,0.219,0.176,0.189,0.201,0.215,507
Client  49,0.00,0.00,0.193,0.00,0.197,0.219,0.176,0.00,0.00,0.215,507
Client  50,0.176,0.00,0.210,0.00,0.00,0.00,0.191,0.206,0.218,0.00,467
Client  51,0.166,0.231,0.198,0.00,0.00,0.225,0.180,0.00,0.00,0.00,494
Client  52,0.00,0.213,0.184,0.00,0.00,0.208,0.00,0.00,0.191,0.204,534
Client  53,0.00,0.215,0.185,0.206,0.189,0.00,0.00,0.00,0.00,0.206,530
Client  54,0.176,0.00,0.211,0.00,0.215,0.00,0.191,0.206,0.00,0.00,465
Client  55,0.00,0.00,0.00,0.216,0.198,0.220,0.176,0.190,0.00,0.00,505
Client  56,0.172,0.00,0.00,0.229,0.210,0.00,0.187,0.202,0.00,0.00,476
Client  57,0.00,0.00,0.195,0.00,0.00,0.221,0.177,0.191,0.00,0.217,503
Client  58,0.00,0.00,0.197,0.00,0.201,0.00,0.179,0.00,0.205,0.219,498
Client  59,0.160,0.222,0.00,0.212,0.195,0.00,0.00,0.00,0.00,0.212,514
Client  60,0.166,0.00,0.199,0.00,0.203,0.225,0.00,0.00,0.207,0.00,493
Client  61,0.00,0.216,0.185,0.206,0.189,0.00,0.00,0.00,0.00,0.204,529
Client  62,0.00,0.227,0.195,0.00,0.199,0.00,0.177,0.00,0.203,0.00,503
Client  63,0.165,0.00,0.00,0.219,0.00,0.00,0.00,0.193,0.205,0.217,497
Client  64,0.166,0.00,0.199,0.00,0.203,0.225,0.00,0.00,0.207,0.00,493
Client  65,0.167,0.00,0.00,0.00,0.00,0.226,0.181,0.00,0.207,0.220,492
Client  66,0.172,0.00,0.00,0.229,0.210,0.00,0.187,0.202,0.00,0.00,476
Client  67,0.170,0.237,0.00,0.00,0.208,0.00,0.185,0.200,0.00,0.00,481
Client  68,0.00,0.00,0.196,0.00,0.200,0.222,0.178,0.00,0.204,0.00,500
Client  69,0.166,0.00,0.198,0.00,0.00,0.224,0.00,0.194,0.00,0.218,495
Client  70,0.167,0.230,0.200,0.00,0.00,0.00,0.00,0.196,0.208,0.00,491
Client  71,0.00,0.217,0.00,0.00,0.192,0.213,0.171,0.00,0.00,0.207,521
Client  72,0.00,0.00,0.190,0.00,0.00,0.216,0.00,0.186,0.198,0.210,515
Client  73,0.159,0.219,0.00,0.211,0.00,0.215,0.00,0.00,0.197,0.00,517
Client  74,0.164,0.00,0.00,0.218,0.200,0.00,0.00,0.00,0.204,0.216,501
Client  75,0.00,0.00,0.194,0.213,0.198,0.219,0.176,0.00,0.00,0.00,506
Client  76,0.171,0.00,0.204,0.00,0.208,0.231,0.185,0.00,0.00,0.00,480
Client  77,0.164,0.00,0.00,0.216,0.00,0.222,0.00,0.192,0.204,0.00,499
Client  78,0.00,0.218,0.00,0.208,0.193,0.00,0.00,0.185,0.197,0.00,519
Client  79,0.169,0.00,0.202,0.223,0.00,0.00,0.184,0.00,0.00,0.223,485
Client  80,0.165,0.227,0.00,0.00,0.00,0.223,0.179,0.00,0.205,0.00,497
Client  81,0.00,0.213,0.00,0.00,0.00,0.209,0.00,0.181,0.192,0.204,530
Client  82,0.00,0.219,0.190,0.209,0.00,0.00,0.172,0.00,0.00,0.209,516
Client  83,0.160,0.221,0.191,0.211,0.00,0.217,0.00,0.00,0.00,0.00,512
Client  84,0.176,0.00,0.211,0.00,0.215,0.00,0.191,0.206,0.00,0.00,465
Client  85,0.00,0.00,0.00,0.00,0.201,0.223,0.179,0.193,0.205,0.00,498
Client  86,0.00,0.222,0.00,0.213,0.00,0.00,0.175,0.189,0.201,0.00,508
Client  87,0.169,0.00,0.00,0.222,0.00,0.228,0.183,0.198,0.00,0.00,486
Client  88,0.00,0.00,0.197,0.00,0.201,0.00,0.179,0.00,0.205,0.217,497
Client  89,0.00,0.214,0.186,0.205,0.190,0.00,0.00,0.00,0.00,0.205,527
Client  90,0.170,0.00,0.00,0.224,0.00,0.00,0.184,0.199,0.00,0.224,483
Client  91,0.166,0.229,0.00,0.219,0.00,0.00,0.180,0.00,0.206,0.00,494
Client  92,0.00,0.218,0.189,0.208,0.00,0.214,0.171,0.00,0.00,0.00,519
Client  93,0.00,0.00,0.199,0.219,0.00,0.00,0.181,0.195,0.207,0.00,493
Client  94,0.169,0.233,0.00,0.00,0.206,0.00,0.183,0.00,0.210,0.00,486
Client  95,0.164,0.226,0.196,0.00,0.00,0.222,0.00,0.192,0.00,0.00,500
Client  96,0.171,0.235,0.00,0.00,0.208,0.00,0.185,0.200,0.00,0.00,480
Client  97,0.169,0.00,0.00,0.00,0.00,0.232,0.186,0.200,0.213,0.00,479
Client  98,0.00,0.00,0.189,0.208,0.193,0.214,0.00,0.00,0.197,0.00,519
Client  99,0.166,0.231,0.200,0.00,0.00,0.00,0.182,0.00,0.00,0.221,489
0 [0 1 5 8 9] [0 1 5 8 9] [2 3 4 6 7]
0 training: Counter({1: 114, 5: 112, 9: 109, 8: 103, 0: 82}) testing iid: Counter({8: 1000, 0: 1000, 1: 1000, 9: 1000, 5: 1000})
1 [1 2 6 7 9] [1 2 6 7 9] [0 3 4 5 8]
1 training: Counter({1: 114, 9: 109, 2: 99, 7: 97, 6: 90}) testing iid: Counter({6: 1000, 1: 1000, 9: 1000, 7: 1000, 2: 1000})
2 [2 4 5 7 9] [2 4 5 7 9] [0 1 3 6 8]
2 training: Counter({5: 112, 9: 109, 4: 100, 2: 99, 7: 97}) testing iid: Counter({9: 1000, 5: 1000, 7: 1000, 4: 1000, 2: 1000})
3 [0 1 3 6 7] [0 1 3 6 7] [2 4 5 8 9]
3 training: Counter({1: 114, 3: 109, 7: 97, 6: 90, 0: 82}) testing iid: Counter({3: 1000, 0: 1000, 6: 1000, 1: 1000, 7: 1000})
4 [1 4 6 7 9] [1 4 6 7 9] [0 2 3 5 8]
4 training: Counter({1: 114, 9: 109, 4: 100, 7: 97, 6: 90}) testing iid: Counter({6: 1000, 1: 1000, 9: 1000, 7: 1000, 4: 1000})
5 [0 1 3 5 8] [0 1 3 5 8] [2 4 6 7 9]
5 training: Counter({1: 114, 5: 112, 3: 109, 8: 103, 0: 82}) testing iid: Counter({3: 1000, 8: 1000, 0: 1000, 1: 1000, 5: 1000})
6 [3 6 7 8 9] [3 6 7 8 9] [0 1 2 4 5]
6 training: Counter({3: 109, 9: 109, 8: 102, 7: 97, 6: 90}) testing iid: Counter({3: 1000, 8: 1000, 6: 1000, 9: 1000, 7: 1000})
7 [1 5 6 7 9] [1 5 6 7 9] [0 2 3 4 8]
7 training: Counter({1: 114, 5: 112, 9: 109, 7: 97, 6: 90}) testing iid: Counter({6: 1000, 1: 1000, 9: 1000, 5: 1000, 7: 1000})
8 [0 1 3 4 8] [0 1 3 4 8] [2 5 6 7 9]
8 training: Counter({1: 114, 3: 109, 8: 102, 4: 100, 0: 82}) testing iid: Counter({3: 1000, 8: 1000, 0: 1000, 1: 1000, 4: 1000})
9 [0 2 3 4 9] [0 2 3 4 9] [1 5 6 7 8]
9 training: Counter({3: 109, 9: 109, 4: 100, 2: 98, 0: 82}) testing iid: Counter({3: 1000, 0: 1000, 9: 1000, 4: 1000, 2: 1000})
10 [0 2 7 8 9] [0 2 7 8 9] [1 3 4 5 6]
10 training: Counter({9: 109, 8: 102, 2: 98, 7: 97, 0: 82}) testing iid: Counter({8: 1000, 0: 1000, 9: 1000, 7: 1000, 2: 1000})
11 [1 3 6 7 9] [1 3 6 7 9] [0 2 4 5 8]
11 training: Counter({1: 114, 3: 109, 9: 109, 7: 97, 6: 90}) testing iid: Counter({3: 1000, 6: 1000, 1: 1000, 9: 1000, 7: 1000})
12 [2 4 5 7 9] [2 4 5 7 9] [0 1 3 6 8]
12 training: Counter({5: 112, 9: 109, 4: 100, 2: 98, 7: 96}) testing iid: Counter({9: 1000, 5: 1000, 7: 1000, 4: 1000, 2: 1000})
13 [0 2 3 6 8] [0 2 3 6 8] [1 4 5 7 9]
13 training: Counter({3: 109, 8: 102, 2: 98, 6: 90, 0: 82}) testing iid: Counter({3: 1000, 8: 1000, 0: 1000, 6: 1000, 2: 1000})
14 [0 3 4 7 9] [0 3 4 7 9] [1 2 5 6 8]
14 training: Counter({3: 109, 9: 109, 4: 100, 7: 96, 0: 82}) testing iid: Counter({3: 1000, 0: 1000, 9: 1000, 7: 1000, 4: 1000})
15 [1 3 5 7 8] [1 3 5 7 8] [0 2 4 6 9]
15 training: Counter({1: 114, 5: 111, 3: 109, 8: 102, 7: 96}) testing iid: Counter({3: 1000, 8: 1000, 1: 1000, 5: 1000, 7: 1000})
16 [0 4 5 6 8] [0 4 5 6 8] [1 2 3 7 9]
16 training: Counter({5: 111, 8: 102, 4: 100, 6: 90, 0: 82}) testing iid: Counter({8: 1000, 0: 1000, 6: 1000, 5: 1000, 4: 1000})
17 [2 5 6 7 8] [2 5 6 7 8] [0 1 3 4 9]
17 training: Counter({5: 111, 8: 102, 2: 98, 7: 96, 6: 90}) testing iid: Counter({8: 1000, 6: 1000, 5: 1000, 7: 1000, 2: 1000})
18 [0 4 7 8 9] [0 4 7 8 9] [1 2 3 5 6]
18 training: Counter({9: 109, 8: 102, 4: 100, 7: 96, 0: 82}) testing iid: Counter({8: 1000, 0: 1000, 9: 1000, 7: 1000, 4: 1000})
19 [0 1 2 7 9] [0 1 2 7 9] [3 4 5 6 8]
19 training: Counter({1: 114, 9: 109, 2: 98, 7: 96, 0: 82}) testing iid: Counter({0: 1000, 1: 1000, 9: 1000, 7: 1000, 2: 1000})
20 [0 4 7 8 9] [0 4 7 8 9] [1 2 3 5 6]
20 training: Counter({9: 109, 8: 102, 4: 100, 7: 96, 0: 82}) testing iid: Counter({8: 1000, 0: 1000, 9: 1000, 7: 1000, 4: 1000})
21 [0 1 2 8 9] [0 1 2 8 9] [3 4 5 6 7]
21 training: Counter({1: 114, 9: 109, 8: 102, 2: 98, 0: 82}) testing iid: Counter({8: 1000, 0: 1000, 1: 1000, 9: 1000, 2: 1000})
22 [1 2 3 6 7] [1 2 3 6 7] [0 4 5 8 9]
22 training: Counter({1: 114, 3: 109, 2: 98, 7: 96, 6: 90}) testing iid: Counter({3: 1000, 6: 1000, 1: 1000, 7: 1000, 2: 1000})
23 [0 2 3 6 9] [0 2 3 6 9] [1 4 5 7 8]
23 training: Counter({3: 109, 9: 109, 2: 98, 6: 90, 0: 82}) testing iid: Counter({3: 1000, 0: 1000, 6: 1000, 9: 1000, 2: 1000})
24 [0 2 4 6 7] [0 2 4 6 7] [1 3 5 8 9]
24 training: Counter({4: 100, 2: 98, 7: 96, 6: 90, 0: 82}) testing iid: Counter({0: 1000, 6: 1000, 7: 1000, 4: 1000, 2: 1000})
25 [0 1 4 5 6] [0 1 4 5 6] [2 3 7 8 9]
25 training: Counter({1: 114, 5: 111, 4: 100, 6: 90, 0: 82}) testing iid: Counter({0: 1000, 6: 1000, 1: 1000, 5: 1000, 4: 1000})
26 [1 2 4 5 6] [1 2 4 5 6] [0 3 7 8 9]
26 training: Counter({1: 114, 5: 111, 4: 100, 2: 98, 6: 90}) testing iid: Counter({6: 1000, 1: 1000, 5: 1000, 4: 1000, 2: 1000})
27 [0 5 7 8 9] [0 5 7 8 9] [1 2 3 4 6]
27 training: Counter({5: 111, 9: 109, 8: 102, 7: 96, 0: 82}) testing iid: Counter({8: 1000, 0: 1000, 9: 1000, 5: 1000, 7: 1000})
28 [0 3 7 8 9] [0 3 7 8 9] [1 2 4 5 6]
28 training: Counter({3: 109, 9: 109, 8: 102, 7: 96, 0: 82}) testing iid: Counter({3: 1000, 8: 1000, 0: 1000, 9: 1000, 7: 1000})
29 [1 4 6 8 9] [1 4 6 8 9] [0 2 3 5 7]
29 training: Counter({1: 114, 9: 109, 8: 102, 4: 100, 6: 90}) testing iid: Counter({8: 1000, 6: 1000, 1: 1000, 9: 1000, 4: 1000})
30 [0 2 7 8 9] [0 2 7 8 9] [1 3 4 5 6]
30 training: Counter({9: 109, 8: 102, 2: 98, 7: 96, 0: 82}) testing iid: Counter({8: 1000, 0: 1000, 9: 1000, 7: 1000, 2: 1000})
31 [1 4 5 7 8] [1 4 5 7 8] [0 2 3 6 9]
31 training: Counter({1: 114, 5: 111, 8: 102, 4: 100, 7: 96}) testing iid: Counter({8: 1000, 1: 1000, 5: 1000, 7: 1000, 4: 1000})
32 [0 2 3 4 5] [0 2 3 4 5] [1 6 7 8 9]
32 training: Counter({5: 111, 3: 109, 4: 100, 2: 98, 0: 82}) testing iid: Counter({3: 1000, 0: 1000, 5: 1000, 4: 1000, 2: 1000})
33 [0 1 2 3 4] [0 1 2 3 4] [5 6 7 8 9]
33 training: Counter({1: 114, 3: 109, 4: 100, 2: 98, 0: 82}) testing iid: Counter({3: 1000, 0: 1000, 1: 1000, 4: 1000, 2: 1000})
34 [0 2 4 6 7] [0 2 4 6 7] [1 3 5 8 9]
34 training: Counter({4: 100, 2: 98, 7: 96, 6: 90, 0: 82}) testing iid: Counter({0: 1000, 6: 1000, 7: 1000, 4: 1000, 2: 1000})
35 [0 3 4 5 8] [0 3 4 5 8] [1 2 6 7 9]
35 training: Counter({5: 111, 3: 109, 8: 102, 4: 100, 0: 82}) testing iid: Counter({3: 1000, 8: 1000, 0: 1000, 5: 1000, 4: 1000})
36 [0 2 3 6 9] [0 2 3 6 9] [1 4 5 7 8]
36 training: Counter({3: 109, 9: 109, 2: 98, 6: 89, 0: 82}) testing iid: Counter({3: 1000, 0: 1000, 6: 1000, 9: 1000, 2: 1000})
37 [1 3 4 7 8] [1 3 4 7 8] [0 2 5 6 9]
37 training: Counter({1: 114, 3: 109, 8: 102, 4: 100, 7: 96}) testing iid: Counter({3: 1000, 8: 1000, 1: 1000, 7: 1000, 4: 1000})
38 [3 5 6 7 8] [3 5 6 7 8] [0 1 2 4 9]
38 training: Counter({5: 111, 3: 109, 8: 102, 7: 96, 6: 89}) testing iid: Counter({3: 1000, 8: 1000, 6: 1000, 5: 1000, 7: 1000})
39 [0 2 3 4 9] [0 2 3 4 9] [1 5 6 7 8]
39 training: Counter({3: 109, 9: 109, 4: 100, 2: 98, 0: 82}) testing iid: Counter({3: 1000, 0: 1000, 9: 1000, 4: 1000, 2: 1000})
40 [0 3 5 6 8] [0 3 5 6 8] [1 2 4 7 9]
40 training: Counter({5: 111, 3: 109, 8: 102, 6: 89, 0: 82}) testing iid: Counter({3: 1000, 8: 1000, 0: 1000, 6: 1000, 5: 1000})
41 [0 1 2 5 7] [0 1 2 5 7] [3 4 6 8 9]
41 training: Counter({1: 114, 5: 111, 2: 98, 7: 96, 0: 82}) testing iid: Counter({0: 1000, 1: 1000, 5: 1000, 7: 1000, 2: 1000})
42 [0 1 2 4 8] [0 1 2 4 8] [3 5 6 7 9]
42 training: Counter({1: 114, 8: 102, 4: 100, 2: 98, 0: 82}) testing iid: Counter({8: 1000, 0: 1000, 1: 1000, 4: 1000, 2: 1000})
43 [1 3 4 6 7] [1 3 4 6 7] [0 2 5 8 9]
43 training: Counter({1: 114, 3: 109, 4: 100, 7: 96, 6: 89}) testing iid: Counter({3: 1000, 6: 1000, 1: 1000, 7: 1000, 4: 1000})
44 [0 2 4 6 9] [0 2 4 6 9] [1 3 5 7 8]
44 training: Counter({9: 109, 4: 100, 2: 98, 6: 89, 0: 82}) testing iid: Counter({0: 1000, 6: 1000, 9: 1000, 4: 1000, 2: 1000})
45 [0 5 6 7 9] [0 5 6 7 9] [1 2 3 4 8]
45 training: Counter({5: 111, 9: 109, 7: 96, 6: 89, 0: 82}) testing iid: Counter({0: 1000, 6: 1000, 9: 1000, 5: 1000, 7: 1000})
46 [0 3 4 6 9] [0 3 4 6 9] [1 2 5 7 8]
46 training: Counter({3: 109, 9: 109, 4: 100, 6: 89, 0: 82}) testing iid: Counter({3: 1000, 0: 1000, 6: 1000, 9: 1000, 4: 1000})
47 [0 3 5 7 8] [0 3 5 7 8] [1 2 4 6 9]
47 training: Counter({5: 111, 3: 109, 8: 102, 7: 96, 0: 82}) testing iid: Counter({3: 1000, 8: 1000, 0: 1000, 5: 1000, 7: 1000})
48 [5 6 7 8 9] [5 6 7 8 9] [0 1 2 3 4]
48 training: Counter({5: 111, 9: 109, 8: 102, 7: 96, 6: 89}) testing iid: Counter({8: 1000, 6: 1000, 9: 1000, 5: 1000, 7: 1000})
49 [2 4 5 6 9] [2 4 5 6 9] [0 1 3 7 8]
49 training: Counter({5: 111, 9: 109, 4: 100, 2: 98, 6: 89}) testing iid: Counter({6: 1000, 9: 1000, 5: 1000, 4: 1000, 2: 1000})
50 [0 2 6 7 8] [0 2 6 7 8] [1 3 4 5 9]
50 training: Counter({8: 102, 2: 98, 7: 96, 6: 89, 0: 82}) testing iid: Counter({8: 1000, 0: 1000, 6: 1000, 7: 1000, 2: 1000})
51 [0 1 2 5 6] [0 1 2 5 6] [3 4 7 8 9]
51 training: Counter({1: 114, 5: 111, 2: 98, 6: 89, 0: 82}) testing iid: Counter({0: 1000, 6: 1000, 1: 1000, 5: 1000, 2: 1000})
52 [1 2 5 8 9] [1 2 5 8 9] [0 3 4 6 7]
52 training: Counter({1: 114, 5: 111, 9: 109, 8: 102, 2: 98}) testing iid: Counter({8: 1000, 1: 1000, 9: 1000, 5: 1000, 2: 1000})
53 [1 2 3 4 9] [1 2 3 4 9] [0 5 6 7 8]
53 training: Counter({1: 114, 3: 109, 9: 109, 4: 100, 2: 98}) testing iid: Counter({3: 1000, 1: 1000, 9: 1000, 4: 1000, 2: 1000})
54 [0 2 4 6 7] [0 2 4 6 7] [1 3 5 8 9]
54 training: Counter({4: 100, 2: 98, 7: 96, 6: 89, 0: 82}) testing iid: Counter({0: 1000, 6: 1000, 7: 1000, 4: 1000, 2: 1000})
55 [3 4 5 6 7] [3 4 5 6 7] [0 1 2 8 9]
55 training: Counter({5: 111, 3: 109, 4: 100, 7: 96, 6: 89}) testing iid: Counter({3: 1000, 6: 1000, 5: 1000, 7: 1000, 4: 1000})
56 [0 3 4 6 7] [0 3 4 6 7] [1 2 5 8 9]
56 training: Counter({3: 109, 4: 100, 7: 96, 6: 89, 0: 82}) testing iid: Counter({3: 1000, 0: 1000, 6: 1000, 7: 1000, 4: 1000})
57 [2 5 6 7 9] [2 5 6 7 9] [0 1 3 4 8]
57 training: Counter({5: 111, 9: 109, 2: 98, 7: 96, 6: 89}) testing iid: Counter({6: 1000, 9: 1000, 5: 1000, 7: 1000, 2: 1000})
58 [2 4 6 8 9] [2 4 6 8 9] [0 1 3 5 7]
58 training: Counter({9: 109, 8: 102, 4: 100, 2: 98, 6: 89}) testing iid: Counter({8: 1000, 6: 1000, 9: 1000, 4: 1000, 2: 1000})
59 [0 1 3 4 9] [0 1 3 4 9] [2 5 6 7 8]
59 training: Counter({1: 114, 3: 109, 9: 109, 4: 100, 0: 82}) testing iid: Counter({3: 1000, 0: 1000, 1: 1000, 9: 1000, 4: 1000})
60 [0 2 4 5 8] [0 2 4 5 8] [1 3 6 7 9]
60 training: Counter({5: 111, 8: 102, 4: 100, 2: 98, 0: 82}) testing iid: Counter({8: 1000, 0: 1000, 5: 1000, 4: 1000, 2: 1000})
61 [1 2 3 4 9] [1 2 3 4 9] [0 5 6 7 8]
61 training: Counter({1: 114, 3: 109, 9: 108, 4: 100, 2: 98}) testing iid: Counter({3: 1000, 1: 1000, 9: 1000, 4: 1000, 2: 1000})
62 [1 2 4 6 8] [1 2 4 6 8] [0 3 5 7 9]
62 training: Counter({1: 114, 8: 102, 4: 100, 2: 98, 6: 89}) testing iid: Counter({8: 1000, 6: 1000, 1: 1000, 4: 1000, 2: 1000})
63 [0 3 7 8 9] [0 3 7 8 9] [1 2 4 5 6]
63 training: Counter({3: 109, 9: 108, 8: 102, 7: 96, 0: 82}) testing iid: Counter({3: 1000, 8: 1000, 0: 1000, 9: 1000, 7: 1000})
64 [0 2 4 5 8] [0 2 4 5 8] [1 3 6 7 9]
64 training: Counter({5: 111, 8: 102, 4: 100, 2: 98, 0: 82}) testing iid: Counter({8: 1000, 0: 1000, 5: 1000, 4: 1000, 2: 1000})
65 [0 5 6 8 9] [0 5 6 8 9] [1 2 3 4 7]
65 training: Counter({5: 111, 9: 108, 8: 102, 6: 89, 0: 82}) testing iid: Counter({8: 1000, 0: 1000, 6: 1000, 9: 1000, 5: 1000})
66 [0 3 4 6 7] [0 3 4 6 7] [1 2 5 8 9]
66 training: Counter({3: 109, 4: 100, 7: 96, 6: 89, 0: 82}) testing iid: Counter({3: 1000, 0: 1000, 6: 1000, 7: 1000, 4: 1000})
67 [0 1 4 6 7] [0 1 4 6 7] [2 3 5 8 9]
67 training: Counter({1: 114, 4: 100, 7: 96, 6: 89, 0: 82}) testing iid: Counter({0: 1000, 6: 1000, 1: 1000, 7: 1000, 4: 1000})
68 [2 4 5 6 8] [2 4 5 6 8] [0 1 3 7 9]
68 training: Counter({5: 111, 8: 102, 4: 100, 2: 98, 6: 89}) testing iid: Counter({8: 1000, 6: 1000, 5: 1000, 4: 1000, 2: 1000})
69 [0 2 5 7 9] [0 2 5 7 9] [1 3 4 6 8]
69 training: Counter({5: 111, 9: 108, 2: 98, 7: 96, 0: 82}) testing iid: Counter({0: 1000, 9: 1000, 5: 1000, 7: 1000, 2: 1000})
70 [0 1 2 7 8] [0 1 2 7 8] [3 4 5 6 9]
70 training: Counter({1: 113, 8: 102, 2: 98, 7: 96, 0: 82}) testing iid: Counter({8: 1000, 0: 1000, 1: 1000, 7: 1000, 2: 1000})
71 [1 4 5 6 9] [1 4 5 6 9] [0 2 3 7 8]
71 training: Counter({1: 113, 5: 111, 9: 108, 4: 100, 6: 89}) testing iid: Counter({6: 1000, 1: 1000, 9: 1000, 5: 1000, 4: 1000})
72 [2 5 7 8 9] [2 5 7 8 9] [0 1 3 4 6]
72 training: Counter({5: 111, 9: 108, 8: 102, 2: 98, 7: 96}) testing iid: Counter({8: 1000, 9: 1000, 5: 1000, 7: 1000, 2: 1000})
73 [0 1 3 5 8] [0 1 3 5 8] [2 4 6 7 9]
73 training: Counter({1: 113, 5: 111, 3: 109, 8: 102, 0: 82}) testing iid: Counter({3: 1000, 8: 1000, 0: 1000, 1: 1000, 5: 1000})
74 [0 3 4 8 9] [0 3 4 8 9] [1 2 5 6 7]
74 training: Counter({3: 109, 9: 108, 8: 102, 4: 100, 0: 82}) testing iid: Counter({3: 1000, 8: 1000, 0: 1000, 9: 1000, 4: 1000})
75 [2 3 4 5 6] [2 3 4 5 6] [0 1 7 8 9]
75 training: Counter({5: 111, 3: 108, 4: 100, 2: 98, 6: 89}) testing iid: Counter({3: 1000, 6: 1000, 5: 1000, 4: 1000, 2: 1000})
76 [0 2 4 5 6] [0 2 4 5 6] [1 3 7 8 9]
76 training: Counter({5: 111, 4: 100, 2: 98, 6: 89, 0: 82}) testing iid: Counter({0: 1000, 6: 1000, 5: 1000, 4: 1000, 2: 1000})
77 [0 3 5 7 8] [0 3 5 7 8] [1 2 4 6 9]
77 training: Counter({5: 111, 3: 108, 8: 102, 7: 96, 0: 82}) testing iid: Counter({3: 1000, 8: 1000, 0: 1000, 5: 1000, 7: 1000})
78 [1 3 4 7 8] [1 3 4 7 8] [0 2 5 6 9]
78 training: Counter({1: 113, 3: 108, 8: 102, 4: 100, 7: 96}) testing iid: Counter({3: 1000, 8: 1000, 1: 1000, 7: 1000, 4: 1000})
79 [0 2 3 6 9] [0 2 3 6 9] [1 4 5 7 8]
79 training: Counter({3: 108, 9: 108, 2: 98, 6: 89, 0: 82}) testing iid: Counter({3: 1000, 0: 1000, 6: 1000, 9: 1000, 2: 1000})
80 [0 1 5 6 8] [0 1 5 6 8] [2 3 4 7 9]
80 training: Counter({1: 113, 5: 111, 8: 102, 6: 89, 0: 82}) testing iid: Counter({8: 1000, 0: 1000, 6: 1000, 1: 1000, 5: 1000})
81 [1 5 7 8 9] [1 5 7 8 9] [0 2 3 4 6]
81 training: Counter({1: 113, 5: 111, 9: 108, 8: 102, 7: 96}) testing iid: Counter({8: 1000, 1: 1000, 9: 1000, 5: 1000, 7: 1000})
82 [1 2 3 6 9] [1 2 3 6 9] [0 4 5 7 8]
82 training: Counter({1: 113, 3: 108, 9: 108, 2: 98, 6: 89}) testing iid: Counter({3: 1000, 6: 1000, 1: 1000, 9: 1000, 2: 1000})
83 [0 1 2 3 5] [0 1 2 3 5] [4 6 7 8 9]
83 training: Counter({1: 113, 5: 111, 3: 108, 2: 98, 0: 82}) testing iid: Counter({3: 1000, 0: 1000, 1: 1000, 5: 1000, 2: 1000})
84 [0 2 4 6 7] [0 2 4 6 7] [1 3 5 8 9]
84 training: Counter({4: 100, 2: 98, 7: 96, 6: 89, 0: 82}) testing iid: Counter({0: 1000, 6: 1000, 7: 1000, 4: 1000, 2: 1000})
85 [4 5 6 7 8] [4 5 6 7 8] [0 1 2 3 9]
85 training: Counter({5: 111, 8: 102, 4: 100, 7: 96, 6: 89}) testing iid: Counter({8: 1000, 6: 1000, 5: 1000, 7: 1000, 4: 1000})
86 [1 3 6 7 8] [1 3 6 7 8] [0 2 4 5 9]
86 training: Counter({1: 113, 3: 108, 8: 102, 7: 96, 6: 89}) testing iid: Counter({3: 1000, 8: 1000, 6: 1000, 1: 1000, 7: 1000})
87 [0 3 5 6 7] [0 3 5 6 7] [1 2 4 8 9]
87 training: Counter({5: 111, 3: 108, 7: 96, 6: 89, 0: 82}) testing iid: Counter({3: 1000, 0: 1000, 6: 1000, 5: 1000, 7: 1000})
88 [2 4 6 8 9] [2 4 6 8 9] [0 1 3 5 7]
88 training: Counter({9: 108, 8: 102, 4: 100, 2: 98, 6: 89}) testing iid: Counter({8: 1000, 6: 1000, 9: 1000, 4: 1000, 2: 1000})
89 [1 2 3 4 9] [1 2 3 4 9] [0 5 6 7 8]
89 training: Counter({1: 113, 3: 108, 9: 108, 4: 100, 2: 98}) testing iid: Counter({3: 1000, 1: 1000, 9: 1000, 4: 1000, 2: 1000})
90 [0 3 6 7 9] [0 3 6 7 9] [1 2 4 5 8]
90 training: Counter({3: 108, 9: 108, 7: 96, 6: 89, 0: 82}) testing iid: Counter({3: 1000, 0: 1000, 6: 1000, 9: 1000, 7: 1000})
91 [0 1 3 6 8] [0 1 3 6 8] [2 4 5 7 9]
91 training: Counter({1: 113, 3: 108, 8: 102, 6: 89, 0: 82}) testing iid: Counter({3: 1000, 8: 1000, 0: 1000, 6: 1000, 1: 1000})
92 [1 2 3 5 6] [1 2 3 5 6] [0 4 7 8 9]
92 training: Counter({1: 113, 5: 111, 3: 108, 2: 98, 6: 89}) testing iid: Counter({3: 1000, 6: 1000, 1: 1000, 5: 1000, 2: 1000})
93 [2 3 6 7 8] [2 3 6 7 8] [0 1 4 5 9]
93 training: Counter({3: 108, 8: 102, 2: 98, 7: 96, 6: 89}) testing iid: Counter({3: 1000, 8: 1000, 6: 1000, 7: 1000, 2: 1000})
94 [0 1 4 6 8] [0 1 4 6 8] [2 3 5 7 9]
94 training: Counter({1: 113, 8: 102, 4: 100, 6: 89, 0: 82}) testing iid: Counter({8: 1000, 0: 1000, 6: 1000, 1: 1000, 4: 1000})
95 [0 1 2 5 7] [0 1 2 5 7] [3 4 6 8 9]
95 training: Counter({1: 113, 5: 111, 2: 98, 7: 96, 0: 82}) testing iid: Counter({0: 1000, 1: 1000, 5: 1000, 7: 1000, 2: 1000})
96 [0 1 4 6 7] [0 1 4 6 7] [2 3 5 8 9]
96 training: Counter({1: 113, 4: 100, 7: 96, 6: 89, 0: 82}) testing iid: Counter({0: 1000, 6: 1000, 1: 1000, 7: 1000, 4: 1000})
97 [0 5 6 7 8] [0 5 6 7 8] [1 2 3 4 9]
97 training: Counter({5: 111, 8: 102, 7: 96, 6: 89, 0: 81}) testing iid: Counter({8: 1000, 0: 1000, 6: 1000, 5: 1000, 7: 1000})
98 [2 3 4 5 8] [2 3 4 5 8] [0 1 6 7 9]
98 training: Counter({5: 111, 3: 108, 8: 102, 4: 100, 2: 98}) testing iid: Counter({3: 1000, 8: 1000, 5: 1000, 4: 1000, 2: 1000})
99 [0 1 2 6 9] [0 1 2 6 9] [3 4 5 7 8]
99 training: Counter({1: 113, 9: 108, 2: 98, 6: 89, 0: 81}) testing iid: Counter({0: 1000, 6: 1000, 1: 1000, 9: 1000, 2: 1000})
Num_samples of Training set per client: [520, 509, 517, 492, 510, 520, 507, 522, 507, 498, 488, 519, 515, 481, 496, 532, 485, 497, 489, 499, 489, 505, 507, 488, 466, 497, 513, 500, 498, 515, 487, 523, 500, 503, 466, 504, 487, 521, 507, 498, 493, 501, 496, 508, 478, 487, 489, 500, 507, 507, 467, 494, 534, 530, 465, 505, 476, 503, 498, 514, 493, 529, 503, 497, 493, 492, 476, 481, 500, 495, 491, 521, 515, 517, 501, 506, 480, 499, 519, 485, 497, 530, 516, 512, 465, 498, 508, 486, 497, 527, 483, 494, 519, 493, 486, 500, 480, 479, 519, 489]
Total_training_samples: 50000
Global test set: 10000
Finish Generating Samples, distribution saved
MobileNetV2(
  (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (layers): Sequential(
    (0): Block(
      (conv1): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): Block(
      (conv1): Conv2d(16, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=96, bias=False)
      (bn2): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(96, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(16, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (2): Block(
      (conv1): Conv2d(24, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=144, bias=False)
      (bn2): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(144, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (3): Block(
      (conv1): Conv2d(24, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(144, 144, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=144, bias=False)
      (bn2): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(144, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (4): Block(
      (conv1): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
      (bn2): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(192, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (5): Block(
      (conv1): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
      (bn2): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(192, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (6): Block(
      (conv1): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(192, 192, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=192, bias=False)
      (bn2): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(192, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (7): Block(
      (conv1): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
      (bn2): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (8): Block(
      (conv1): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
      (bn2): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (9): Block(
      (conv1): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
      (bn2): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (10): Block(
      (conv1): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
      (bn2): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(384, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(64, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (11): Block(
      (conv1): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)
      (bn2): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (12): Block(
      (conv1): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)
      (bn2): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (13): Block(
      (conv1): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(576, 576, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=576, bias=False)
      (bn2): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(576, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (14): Block(
      (conv1): Conv2d(160, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(960, 960, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=960, bias=False)
      (bn2): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(960, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (15): Block(
      (conv1): Conv2d(160, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(960, 960, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=960, bias=False)
      (bn2): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(960, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (16): Block(
      (conv1): Conv2d(160, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(960, 960, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=960, bias=False)
      (bn2): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(960, 320, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(160, 320, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (conv2): Conv2d(320, 1280, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn2): BatchNorm2d(1280, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (linear): Linear(in_features=1280, out_features=10, bias=True)
)
number of parameters: 2296922
clients initializting...
output size: 10
  0%|          | 0/100 [00:00<?, ?it/s]  1%|          | 1/100 [00:00<01:10,  1.40it/s]  2%|▏         | 2/100 [00:01<01:10,  1.40it/s]  3%|▎         | 3/100 [00:02<01:10,  1.38it/s]  4%|▍         | 4/100 [00:02<01:08,  1.39it/s]  5%|▌         | 5/100 [00:03<01:08,  1.40it/s]  6%|▌         | 6/100 [00:04<01:07,  1.40it/s]  7%|▋         | 7/100 [00:05<01:06,  1.40it/s]  8%|▊         | 8/100 [00:05<01:05,  1.40it/s]  9%|▉         | 9/100 [00:06<01:05,  1.40it/s] 10%|█         | 10/100 [00:07<01:04,  1.40it/s] 11%|█         | 11/100 [00:07<01:03,  1.40it/s] 12%|█▏        | 12/100 [00:08<01:03,  1.39it/s] 13%|█▎        | 13/100 [00:09<01:02,  1.39it/s] 14%|█▍        | 14/100 [00:10<01:01,  1.39it/s] 15%|█▌        | 15/100 [00:10<01:00,  1.40it/s] 16%|█▌        | 16/100 [00:11<01:00,  1.40it/s] 17%|█▋        | 17/100 [00:12<00:59,  1.40it/s] 18%|█▊        | 18/100 [00:12<00:59,  1.39it/s] 19%|█▉        | 19/100 [00:13<00:58,  1.39it/s] 20%|██        | 20/100 [00:14<00:57,  1.39it/s] 21%|██        | 21/100 [00:15<00:56,  1.39it/s] 22%|██▏       | 22/100 [00:15<00:56,  1.39it/s] 23%|██▎       | 23/100 [00:16<00:55,  1.38it/s] 24%|██▍       | 24/100 [00:17<00:55,  1.37it/s] 25%|██▌       | 25/100 [00:18<00:54,  1.37it/s] 26%|██▌       | 26/100 [00:18<00:53,  1.37it/s] 27%|██▋       | 27/100 [00:19<00:52,  1.38it/s] 28%|██▊       | 28/100 [00:20<00:52,  1.38it/s] 29%|██▉       | 29/100 [00:20<00:50,  1.40it/s] 30%|███       | 30/100 [00:21<00:49,  1.41it/s] 31%|███       | 31/100 [00:25<01:58,  1.72s/it] 32%|███▏      | 32/100 [00:26<01:36,  1.42s/it] 33%|███▎      | 33/100 [00:27<01:20,  1.21s/it] 34%|███▍      | 34/100 [00:27<01:09,  1.06s/it] 35%|███▌      | 35/100 [00:28<01:02,  1.05it/s] 36%|███▌      | 36/100 [00:29<00:56,  1.13it/s] 37%|███▋      | 37/100 [00:29<00:52,  1.21it/s] 38%|███▊      | 38/100 [00:30<00:49,  1.26it/s] 39%|███▉      | 39/100 [00:31<00:47,  1.30it/s] 40%|████      | 40/100 [00:32<00:45,  1.33it/s] 41%|████      | 41/100 [00:32<00:43,  1.35it/s] 42%|████▏     | 42/100 [00:33<00:42,  1.36it/s] 43%|████▎     | 43/100 [00:34<00:41,  1.38it/s] 44%|████▍     | 44/100 [00:34<00:40,  1.39it/s] 45%|████▌     | 45/100 [00:35<00:39,  1.40it/s] 46%|████▌     | 46/100 [00:36<00:38,  1.40it/s] 47%|████▋     | 47/100 [00:37<00:37,  1.40it/s] 48%|████▊     | 48/100 [00:37<00:37,  1.40it/s] 49%|████▉     | 49/100 [00:38<00:36,  1.39it/s] 50%|█████     | 50/100 [00:39<00:36,  1.38it/s] 51%|█████     | 51/100 [00:39<00:35,  1.38it/s] 52%|█████▏    | 52/100 [00:40<00:34,  1.38it/s] 53%|█████▎    | 53/100 [00:41<00:34,  1.38it/s] 54%|█████▍    | 54/100 [00:42<00:33,  1.38it/s] 55%|█████▌    | 55/100 [00:42<00:32,  1.39it/s] 56%|█████▌    | 56/100 [00:43<00:31,  1.38it/s] 57%|█████▋    | 57/100 [00:44<00:31,  1.38it/s] 58%|█████▊    | 58/100 [00:45<00:30,  1.38it/s] 59%|█████▉    | 59/100 [00:45<00:30,  1.35it/s] 60%|██████    | 60/100 [00:46<00:29,  1.34it/s] 61%|██████    | 61/100 [00:47<00:29,  1.34it/s] 62%|██████▏   | 62/100 [00:48<00:28,  1.35it/s] 63%|██████▎   | 63/100 [00:52<01:06,  1.81s/it] 64%|██████▍   | 64/100 [00:53<00:53,  1.50s/it] 65%|██████▌   | 65/100 [00:53<00:44,  1.27s/it] 66%|██████▌   | 66/100 [00:54<00:37,  1.11s/it] 67%|██████▋   | 67/100 [00:55<00:32,  1.00it/s] 68%|██████▊   | 68/100 [00:56<00:29,  1.09it/s] 69%|██████▉   | 69/100 [00:56<00:26,  1.17it/s] 70%|███████   | 70/100 [00:57<00:24,  1.23it/s] 71%|███████   | 71/100 [00:58<00:22,  1.26it/s] 72%|███████▏  | 72/100 [00:58<00:21,  1.29it/s] 73%|███████▎  | 73/100 [00:59<00:20,  1.33it/s] 74%|███████▍  | 74/100 [01:00<00:19,  1.35it/s] 75%|███████▌  | 75/100 [01:01<00:18,  1.36it/s] 76%|███████▌  | 76/100 [01:01<00:17,  1.37it/s] 77%|███████▋  | 77/100 [01:02<00:16,  1.36it/s] 78%|███████▊  | 78/100 [01:03<00:16,  1.35it/s] 79%|███████▉  | 79/100 [01:04<00:15,  1.35it/s] 80%|████████  | 80/100 [01:04<00:14,  1.36it/s] 81%|████████  | 81/100 [01:05<00:13,  1.36it/s] 82%|████████▏ | 82/100 [01:06<00:13,  1.38it/s] 83%|████████▎ | 83/100 [01:06<00:12,  1.38it/s] 84%|████████▍ | 84/100 [01:07<00:11,  1.38it/s] 85%|████████▌ | 85/100 [01:08<00:10,  1.38it/s] 86%|████████▌ | 86/100 [01:09<00:10,  1.38it/s] 87%|████████▋ | 87/100 [01:09<00:09,  1.37it/s] 88%|████████▊ | 88/100 [01:10<00:08,  1.37it/s] 89%|████████▉ | 89/100 [01:11<00:08,  1.37it/s] 90%|█████████ | 90/100 [01:12<00:07,  1.38it/s] 91%|█████████ | 91/100 [01:12<00:06,  1.37it/s] 92%|█████████▏| 92/100 [01:13<00:05,  1.36it/s] 93%|█████████▎| 93/100 [01:14<00:05,  1.36it/s] 94%|█████████▍| 94/100 [01:14<00:04,  1.38it/s] 95%|█████████▌| 95/100 [01:15<00:03,  1.38it/s] 96%|█████████▌| 96/100 [01:16<00:02,  1.37it/s] 97%|█████████▋| 97/100 [01:20<00:05,  1.81s/it] 98%|█████████▊| 98/100 [01:21<00:02,  1.49s/it] 99%|█████████▉| 99/100 [01:22<00:01,  1.26s/it]100%|██████████| 100/100 [01:22<00:00,  1.09s/it]100%|██████████| 100/100 [01:22<00:00,  1.21it/s]
Number of users per round / total users: 10  /  100
Finished creating FL server.
=== Training starts: algorithm FedFea ===
-------------Round number:  0  -------------
selected users: [26, 86, 2, 55, 75, 93, 16, 73, 54, 95]
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([46, 3, 32, 32]) torch.Size([46])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 496
Local adapation with distilling: 0.001
training loss: tensor(2.8177) feature loss: tensor(0.5384)
Local adapation with distilling: 0.001
training loss: tensor(2.8115) feature loss: tensor(0.5045)
Local adapation with distilling: 0.001
training loss: tensor(2.9197) feature loss: tensor(0.4942)
Local adapation with distilling: 0.001
training loss: tensor(2.8673) feature loss: tensor(0.4979)
Local adapation with distilling: 0.001
training loss: tensor(2.8325) feature loss: tensor(0.4996)
Local adapation with distilling: 0.001
training loss: tensor(2.8427) feature loss: tensor(0.4938)
Local adapation with distilling: 0.001
training loss: tensor(2.8009) feature loss: tensor(0.5033)
Local adapation with distilling: 0.001
training loss: tensor(2.9346) feature loss: tensor(0.4866)
Local adapation with distilling: 0.001
training loss: tensor(2.9801) feature loss: tensor(0.4735)
Local adapation with distilling: 0.001
training loss: tensor(2.8099) feature loss: tensor(0.5039)
Global Model Acc on global data: 0.1008 length of data: 10000
save a model
-------------Round number:  1  -------------
selected users: [80, 84, 33, 81, 93, 17, 36, 82, 69, 65]
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([46, 3, 32, 32]) torch.Size([46])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([53, 3, 32, 32]) torch.Size([53])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
all data: 493
Local adapation with distilling: 0.000982
training loss: tensor(2.3310) feature loss: tensor(0.7412)
Local adapation with distilling: 0.000982
training loss: tensor(2.3025) feature loss: tensor(0.6364)
Local adapation with distilling: 0.000982
training loss: tensor(2.2958) feature loss: tensor(0.6638)
Local adapation with distilling: 0.000982
training loss: tensor(2.3210) feature loss: tensor(0.7540)
Local adapation with distilling: 0.000982
training loss: tensor(2.2605) feature loss: tensor(0.6881)
Local adapation with distilling: 0.000982
training loss: tensor(2.2249) feature loss: tensor(0.6918)
Local adapation with distilling: 0.000982
training loss: tensor(2.2549) feature loss: tensor(0.7104)
Local adapation with distilling: 0.000982
training loss: tensor(2.3968) feature loss: tensor(0.7194)
Local adapation with distilling: 0.000982
training loss: tensor(2.2572) feature loss: tensor(0.7273)
Local adapation with distilling: 0.000982
training loss: tensor(2.2778) feature loss: tensor(0.7520)
Global Model Acc on global data: 0.1785 length of data: 10000
save a model
-------------Round number:  2  -------------
selected users: [83, 30, 56, 24, 16, 23, 2, 27, 28, 13]
random features: torch.Size([57, 3, 32, 32]) torch.Size([57])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([46, 3, 32, 32]) torch.Size([46])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
all data: 492
Local adapation with distilling: 0.000964
training loss: tensor(1.7352) feature loss: tensor(0.7174)
Local adapation with distilling: 0.000964
training loss: tensor(1.8370) feature loss: tensor(0.7177)
Local adapation with distilling: 0.000964
training loss: tensor(1.8323) feature loss: tensor(0.6950)
Local adapation with distilling: 0.000964
training loss: tensor(1.8481) feature loss: tensor(0.6429)
Local adapation with distilling: 0.000964
training loss: tensor(1.7913) feature loss: tensor(0.6779)
Local adapation with distilling: 0.000964
training loss: tensor(1.8093) feature loss: tensor(0.6860)
Local adapation with distilling: 0.000964
training loss: tensor(1.9214) feature loss: tensor(0.6908)
Local adapation with distilling: 0.000964
training loss: tensor(1.8123) feature loss: tensor(0.7567)
Local adapation with distilling: 0.000964
training loss: tensor(1.8418) feature loss: tensor(0.7637)
Local adapation with distilling: 0.000964
training loss: tensor(1.7971) feature loss: tensor(0.6715)
Global Model Acc on global data: 0.2567 length of data: 10000
save a model
-------------Round number:  3  -------------
selected users: [93, 67, 6, 64, 96, 83, 98, 42, 25, 15]
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([57, 3, 32, 32]) torch.Size([57])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([53, 3, 32, 32]) torch.Size([53])
all data: 503
Local adapation with distilling: 0.000946
training loss: tensor(1.5001) feature loss: tensor(0.6388)
Local adapation with distilling: 0.000946
training loss: tensor(1.5964) feature loss: tensor(0.7162)
Local adapation with distilling: 0.000946
training loss: tensor(1.6013) feature loss: tensor(0.6810)
Local adapation with distilling: 0.000946
training loss: tensor(1.6164) feature loss: tensor(0.6666)
Local adapation with distilling: 0.000946
training loss: tensor(1.6413) feature loss: tensor(0.7145)
Local adapation with distilling: 0.000946
training loss: tensor(1.4953) feature loss: tensor(0.7217)
Local adapation with distilling: 0.000946
training loss: tensor(1.6401) feature loss: tensor(0.6478)
Local adapation with distilling: 0.000946
training loss: tensor(1.6129) feature loss: tensor(0.6919)
Local adapation with distilling: 0.000946
training loss: tensor(1.6027) feature loss: tensor(0.7177)
Local adapation with distilling: 0.000946
training loss: tensor(1.6178) feature loss: tensor(0.7600)
Global Model Acc on global data: 0.297 length of data: 10000
save a model
-------------Round number:  4  -------------
selected users: [20, 10, 96, 16, 63, 24, 53, 97, 41, 47]
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([46, 3, 32, 32]) torch.Size([46])
random features: torch.Size([53, 3, 32, 32]) torch.Size([53])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 487
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.3441) feature loss: tensor(0.6540)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.4021) feature loss: tensor(0.6863)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.3270) feature loss: tensor(0.6527)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.3079) feature loss: tensor(0.6201)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.4413) feature loss: tensor(0.6947)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.3961) feature loss: tensor(0.6248)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.4263) feature loss: tensor(0.6641)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.3679) feature loss: tensor(0.6680)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.3731) feature loss: tensor(0.7009)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.3998) feature loss: tensor(0.6635)
Global Model Acc on global data: 0.3257 length of data: 10000
save a model
-------------Round number:  5  -------------
selected users: [66, 32, 46, 28, 74, 23, 10, 20, 17, 35]
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 487
Local adapation with distilling: 0.00091
training loss: tensor(1.1776) feature loss: tensor(0.5632)
Local adapation with distilling: 0.00091
training loss: tensor(1.2421) feature loss: tensor(0.5964)
Local adapation with distilling: 0.00091
training loss: tensor(1.1679) feature loss: tensor(0.5835)
Local adapation with distilling: 0.00091
training loss: tensor(1.1907) feature loss: tensor(0.6037)
Local adapation with distilling: 0.00091
training loss: tensor(1.1995) feature loss: tensor(0.5929)
Local adapation with distilling: 0.00091
training loss: tensor(1.2098) feature loss: tensor(0.6234)
Local adapation with distilling: 0.00091
training loss: tensor(1.1521) feature loss: tensor(0.5937)
Local adapation with distilling: 0.00091
training loss: tensor(1.0995) feature loss: tensor(0.5631)
Local adapation with distilling: 0.00091
training loss: tensor(1.1927) feature loss: tensor(0.5723)
Local adapation with distilling: 0.00091
training loss: tensor(1.1804) feature loss: tensor(0.5733)
Global Model Acc on global data: 0.3419 length of data: 10000
save a model
-------------Round number:  6  -------------
selected users: [17, 34, 0, 45, 60, 86, 20, 47, 44, 81]
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([46, 3, 32, 32]) torch.Size([46])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([53, 3, 32, 32]) torch.Size([53])
all data: 492
Local adapation with distilling: 0.000892
training loss: tensor(1.0918) feature loss: tensor(0.6015)
Local adapation with distilling: 0.000892
training loss: tensor(1.2044) feature loss: tensor(0.5672)
Local adapation with distilling: 0.000892
training loss: tensor(1.3141) feature loss: tensor(0.6611)
Local adapation with distilling: 0.000892
training loss: tensor(1.1520) feature loss: tensor(0.6290)
Local adapation with distilling: 0.000892
training loss: tensor(1.1561) feature loss: tensor(0.5957)
Local adapation with distilling: 0.000892
training loss: tensor(1.2443) feature loss: tensor(0.6565)
Local adapation with distilling: 0.000892
training loss: tensor(1.0562) feature loss: tensor(0.5791)
Local adapation with distilling: 0.000892
training loss: tensor(1.1148) feature loss: tensor(0.6057)
Local adapation with distilling: 0.000892
training loss: tensor(1.1922) feature loss: tensor(0.6025)
Local adapation with distilling: 0.000892
training loss: tensor(1.2333) feature loss: tensor(0.6653)
Global Model Acc on global data: 0.3754 length of data: 10000
save a model
-------------Round number:  7  -------------
selected users: [37, 26, 78, 91, 49, 15, 93, 71, 86, 22]
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([53, 3, 32, 32]) torch.Size([53])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 507
Local adapation with distilling: 0.000874
training loss: tensor(1.1152) feature loss: tensor(0.6094)
Local adapation with distilling: 0.000874
training loss: tensor(1.4345) feature loss: tensor(0.6157)
Local adapation with distilling: 0.000874
training loss: tensor(1.1177) feature loss: tensor(0.6171)
Local adapation with distilling: 0.000874
training loss: tensor(1.0712) feature loss: tensor(0.6294)
Local adapation with distilling: 0.000874
training loss: tensor(1.1133) feature loss: tensor(0.5680)
Local adapation with distilling: 0.000874
training loss: tensor(1.0712) feature loss: tensor(0.6436)
Local adapation with distilling: 0.000874
training loss: tensor(1.0324) feature loss: tensor(0.5606)
Local adapation with distilling: 0.000874
training loss: tensor(1.1936) feature loss: tensor(0.6031)
Local adapation with distilling: 0.000874
training loss: tensor(0.9957) feature loss: tensor(0.6468)
Local adapation with distilling: 0.000874
training loss: tensor(1.1246) feature loss: tensor(0.6599)
Global Model Acc on global data: 0.4136 length of data: 10000
save a model
-------------Round number:  8  -------------
selected users: [17, 23, 1, 44, 55, 99, 86, 29, 62, 33]
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 493
Local adapation with distilling: 0.000856
training loss: tensor(0.8822) feature loss: tensor(0.4763)
Local adapation with distilling: 0.000856
training loss: tensor(0.9782) feature loss: tensor(0.5546)
Local adapation with distilling: 0.000856
training loss: tensor(1.0001) feature loss: tensor(0.5538)
Local adapation with distilling: 0.000856
training loss: tensor(0.9491) feature loss: tensor(0.5106)
Local adapation with distilling: 0.000856
training loss: tensor(1.0384) feature loss: tensor(0.4832)
Local adapation with distilling: 0.000856
training loss: tensor(0.9882) feature loss: tensor(0.5578)
Local adapation with distilling: 0.000856
training loss: tensor(0.8746) feature loss: tensor(0.4919)
Local adapation with distilling: 0.000856
training loss: tensor(1.0710) feature loss: tensor(0.5170)
Local adapation with distilling: 0.000856
training loss: tensor(0.9690) feature loss: tensor(0.5148)
Local adapation with distilling: 0.000856
training loss: tensor(1.0273) feature loss: tensor(0.5504)
Global Model Acc on global data: 0.4282 length of data: 10000
save a model
-------------Round number:  9  -------------
selected users: [75, 42, 46, 68, 3, 39, 23, 20, 70, 73]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
all data: 491
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.9758) feature loss: tensor(0.4535)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.9249) feature loss: tensor(0.5069)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.8824) feature loss: tensor(0.4631)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.9271) feature loss: tensor(0.4638)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.9318) feature loss: tensor(0.5130)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.9340) feature loss: tensor(0.5223)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.8733) feature loss: tensor(0.5021)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.8538) feature loss: tensor(0.4752)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.9579) feature loss: tensor(0.5192)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(1.0160) feature loss: tensor(0.5291)
Global Model Acc on global data: 0.4477 length of data: 10000
save a model
-------------Round number:  10  -------------
selected users: [19, 14, 43, 37, 66, 3, 79, 41, 38, 68]
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 494
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.9478) feature loss: tensor(0.5254)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.9080) feature loss: tensor(0.4836)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.8927) feature loss: tensor(0.5050)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.8688) feature loss: tensor(0.4970)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.9061) feature loss: tensor(0.4619)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.8551) feature loss: tensor(0.5357)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.9060) feature loss: tensor(0.5010)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.9222) feature loss: tensor(0.5443)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.8985) feature loss: tensor(0.4582)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.8618) feature loss: tensor(0.4417)
Global Model Acc on global data: 0.4637 length of data: 10000
save a model
-------------Round number:  11  -------------
selected users: [46, 49, 22, 58, 41, 98, 62, 29, 30, 51]
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
all data: 496
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.7484) feature loss: tensor(0.4185)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.8022) feature loss: tensor(0.4438)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.8030) feature loss: tensor(0.4280)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.7757) feature loss: tensor(0.4233)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.7674) feature loss: tensor(0.4538)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.8559) feature loss: tensor(0.4285)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.7567) feature loss: tensor(0.4277)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.9424) feature loss: tensor(0.4464)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.7984) feature loss: tensor(0.4352)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.8224) feature loss: tensor(0.4687)
Global Model Acc on global data: 0.4757 length of data: 10000
save a model
-------------Round number:  12  -------------
selected users: [17, 41, 92, 14, 68, 31, 89, 15, 21, 60]
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([53, 3, 32, 32]) torch.Size([53])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
all data: 505
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.7611) feature loss: tensor(0.4174)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.7365) feature loss: tensor(0.4743)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.8814) feature loss: tensor(0.4819)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.7838) feature loss: tensor(0.4371)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.7340) feature loss: tensor(0.4108)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.8297) feature loss: tensor(0.4431)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.8105) feature loss: tensor(0.4576)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.8183) feature loss: tensor(0.4983)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.8512) feature loss: tensor(0.4624)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.8081) feature loss: tensor(0.4210)
Global Model Acc on global data: 0.489 length of data: 10000
save a model
-------------Round number:  13  -------------
selected users: [37, 62, 83, 14, 43, 9, 44, 31, 69, 57]
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([57, 3, 32, 32]) torch.Size([57])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 505
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.7304) feature loss: tensor(0.4099)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.6853) feature loss: tensor(0.4047)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.7431) feature loss: tensor(0.4434)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.6899) feature loss: tensor(0.4175)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.7180) feature loss: tensor(0.4128)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.7608) feature loss: tensor(0.4231)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.7295) feature loss: tensor(0.3996)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.7137) feature loss: tensor(0.4038)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.7854) feature loss: tensor(0.4499)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.7711) feature loss: tensor(0.4405)
Global Model Acc on global data: 0.4953 length of data: 10000
save a model
-------------Round number:  14  -------------
selected users: [24, 39, 35, 44, 55, 70, 82, 40, 91, 65]
random features: torch.Size([46, 3, 32, 32]) torch.Size([46])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
all data: 489
Local adapation with distilling: 0.000748
training loss: tensor(0.8276) feature loss: tensor(0.4087)
Local adapation with distilling: 0.000748
training loss: tensor(0.7571) feature loss: tensor(0.4280)
Local adapation with distilling: 0.000748
training loss: tensor(0.8313) feature loss: tensor(0.4325)
Local adapation with distilling: 0.000748
training loss: tensor(0.7046) feature loss: tensor(0.4077)
Local adapation with distilling: 0.000748
training loss: tensor(0.8399) feature loss: tensor(0.4347)
Local adapation with distilling: 0.000748
training loss: tensor(0.8276) feature loss: tensor(0.4466)
Local adapation with distilling: 0.000748
training loss: tensor(0.8755) feature loss: tensor(0.4616)
Local adapation with distilling: 0.000748
training loss: tensor(0.8112) feature loss: tensor(0.4092)
Local adapation with distilling: 0.000748
training loss: tensor(0.8204) feature loss: tensor(0.4548)
Local adapation with distilling: 0.000748
training loss: tensor(0.7960) feature loss: tensor(0.4583)
Global Model Acc on global data: 0.5132 length of data: 10000
save a model
-------------Round number:  15  -------------
selected users: [84, 36, 57, 51, 46, 78, 93, 14, 11, 59]
random features: torch.Size([46, 3, 32, 32]) torch.Size([46])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
all data: 492
Local adapation with distilling: 0.00073
training loss: tensor(0.7412) feature loss: tensor(0.3856)
Local adapation with distilling: 0.00073
training loss: tensor(0.7061) feature loss: tensor(0.4121)
Local adapation with distilling: 0.00073
training loss: tensor(0.6772) feature loss: tensor(0.3893)
Local adapation with distilling: 0.00073
training loss: tensor(0.7114) feature loss: tensor(0.4144)
Local adapation with distilling: 0.00073
training loss: tensor(0.6389) feature loss: tensor(0.3774)
Local adapation with distilling: 0.00073
training loss: tensor(0.7388) feature loss: tensor(0.4051)
Local adapation with distilling: 0.00073
training loss: tensor(0.6990) feature loss: tensor(0.3772)
Local adapation with distilling: 0.00073
training loss: tensor(0.6259) feature loss: tensor(0.3671)
Local adapation with distilling: 0.00073
training loss: tensor(0.7496) feature loss: tensor(0.4402)
Local adapation with distilling: 0.00073
training loss: tensor(0.9826) feature loss: tensor(0.4163)
Global Model Acc on global data: 0.5305 length of data: 10000
save a model
-------------Round number:  16  -------------
selected users: [7, 25, 71, 42, 47, 29, 63, 88, 50, 9]
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([46, 3, 32, 32]) torch.Size([46])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
all data: 496
Local adapation with distilling: 0.000712
training loss: tensor(0.7359) feature loss: tensor(0.4085)
Local adapation with distilling: 0.000712
training loss: tensor(0.7281) feature loss: tensor(0.4148)
Local adapation with distilling: 0.000712
training loss: tensor(0.7214) feature loss: tensor(0.4074)
Local adapation with distilling: 0.000712
training loss: tensor(0.6998) feature loss: tensor(0.3815)
Local adapation with distilling: 0.000712
training loss: tensor(0.7599) feature loss: tensor(0.3797)
Local adapation with distilling: 0.000712
training loss: tensor(0.7535) feature loss: tensor(0.4010)
Local adapation with distilling: 0.000712
training loss: tensor(0.7134) feature loss: tensor(0.3941)
Local adapation with distilling: 0.000712
training loss: tensor(0.6861) feature loss: tensor(0.3634)
Local adapation with distilling: 0.000712
training loss: tensor(0.7379) feature loss: tensor(0.3940)
Local adapation with distilling: 0.000712
training loss: tensor(0.6936) feature loss: tensor(0.3795)
Global Model Acc on global data: 0.5415 length of data: 10000
save a model
-------------Round number:  17  -------------
selected users: [71, 28, 9, 4, 73, 34, 94, 92, 47, 37]
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([46, 3, 32, 32]) torch.Size([46])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
all data: 499
Local adapation with distilling: 0.000694
training loss: tensor(0.6751) feature loss: tensor(0.3808)
Local adapation with distilling: 0.000694
training loss: tensor(0.7101) feature loss: tensor(0.3760)
Local adapation with distilling: 0.000694
training loss: tensor(0.6247) feature loss: tensor(0.3457)
Local adapation with distilling: 0.000694
training loss: tensor(0.7010) feature loss: tensor(0.3707)
Local adapation with distilling: 0.000694
training loss: tensor(0.7567) feature loss: tensor(0.4017)
Local adapation with distilling: 0.000694
training loss: tensor(0.7353) feature loss: tensor(0.3513)
Local adapation with distilling: 0.000694
training loss: tensor(0.6854) feature loss: tensor(0.3672)
Local adapation with distilling: 0.000694
training loss: tensor(0.7151) feature loss: tensor(0.4035)
Local adapation with distilling: 0.000694
training loss: tensor(0.6860) feature loss: tensor(0.3540)
Local adapation with distilling: 0.000694
training loss: tensor(0.6434) feature loss: tensor(0.3718)
Global Model Acc on global data: 0.5295 length of data: 10000
-------------Round number:  18  -------------
selected users: [53, 47, 43, 54, 33, 48, 0, 12, 44, 91]
random features: torch.Size([53, 3, 32, 32]) torch.Size([53])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([46, 3, 32, 32]) torch.Size([46])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
all data: 498
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.7695) feature loss: tensor(0.4414)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.6964) feature loss: tensor(0.4033)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.6954) feature loss: tensor(0.4417)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.8141) feature loss: tensor(0.4124)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.7531) feature loss: tensor(0.4539)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.7426) feature loss: tensor(0.4391)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.7952) feature loss: tensor(0.4312)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.9220) feature loss: tensor(0.4500)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.6947) feature loss: tensor(0.4049)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.7197) feature loss: tensor(0.4292)
Global Model Acc on global data: 0.5521 length of data: 10000
save a model
-------------Round number:  19  -------------
selected users: [85, 72, 16, 18, 2, 38, 90, 30, 83, 61]
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([57, 3, 32, 32]) torch.Size([57])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
all data: 502
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.7773) feature loss: tensor(0.4216)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.9796) feature loss: tensor(0.4671)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.7821) feature loss: tensor(0.4140)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.7794) feature loss: tensor(0.4237)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.8340) feature loss: tensor(0.4547)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.7520) feature loss: tensor(0.3896)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.7708) feature loss: tensor(0.4590)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.7563) feature loss: tensor(0.4160)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.7485) feature loss: tensor(0.4371)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.7665) feature loss: tensor(0.4188)
Global Model Acc on global data: 0.5555 length of data: 10000
save a model
-------------Round number:  20  -------------
selected users: [70, 74, 2, 44, 56, 48, 12, 36, 0, 49]
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 495
Local adapation with distilling: 0.00064
training loss: tensor(0.6227) feature loss: tensor(0.3316)
Local adapation with distilling: 0.00064
training loss: tensor(0.6236) feature loss: tensor(0.3194)
Local adapation with distilling: 0.00064
training loss: tensor(0.6442) feature loss: tensor(0.3220)
Local adapation with distilling: 0.00064
training loss: tensor(0.5158) feature loss: tensor(0.3317)
Local adapation with distilling: 0.00064
training loss: tensor(0.6549) feature loss: tensor(0.3065)
Local adapation with distilling: 0.00064
training loss: tensor(0.5630) feature loss: tensor(0.3289)
Local adapation with distilling: 0.00064
training loss: tensor(0.8356) feature loss: tensor(0.3318)
Local adapation with distilling: 0.00064
training loss: tensor(0.5975) feature loss: tensor(0.3477)
Local adapation with distilling: 0.00064
training loss: tensor(0.6459) feature loss: tensor(0.3339)
Local adapation with distilling: 0.00064
training loss: tensor(0.5916) feature loss: tensor(0.3269)
Global Model Acc on global data: 0.5547 length of data: 10000
-------------Round number:  21  -------------
selected users: [23, 81, 85, 34, 62, 46, 42, 31, 93, 11]
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([53, 3, 32, 32]) torch.Size([53])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([46, 3, 32, 32]) torch.Size([46])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
all data: 495
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.6389) feature loss: tensor(0.3552)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.6423) feature loss: tensor(0.3775)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.6030) feature loss: tensor(0.3455)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.6595) feature loss: tensor(0.3466)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.6167) feature loss: tensor(0.3837)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.5870) feature loss: tensor(0.3584)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.6522) feature loss: tensor(0.3770)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.6423) feature loss: tensor(0.3635)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.6186) feature loss: tensor(0.3486)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.6811) feature loss: tensor(0.3667)
Global Model Acc on global data: 0.5754 length of data: 10000
save a model
-------------Round number:  22  -------------
selected users: [2, 49, 82, 31, 37, 12, 87, 42, 99, 85]
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
all data: 501
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.5946) feature loss: tensor(0.3129)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.5563) feature loss: tensor(0.3270)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.6574) feature loss: tensor(0.3211)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.5371) feature loss: tensor(0.3239)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.5421) feature loss: tensor(0.3092)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.6672) feature loss: tensor(0.3243)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.6558) feature loss: tensor(0.3139)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.5380) feature loss: tensor(0.3204)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.6178) feature loss: tensor(0.3183)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.5062) feature loss: tensor(0.2816)
Global Model Acc on global data: 0.5774 length of data: 10000
save a model
-------------Round number:  23  -------------
selected users: [26, 80, 82, 68, 77, 37, 3, 55, 20, 17]
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
all data: 498
Local adapation with distilling: 0.000586
training loss: tensor(1.0172) feature loss: tensor(0.3622)
Local adapation with distilling: 0.000586
training loss: tensor(0.6372) feature loss: tensor(0.3477)
Local adapation with distilling: 0.000586
training loss: tensor(0.6641) feature loss: tensor(0.3397)
Local adapation with distilling: 0.000586
training loss: tensor(0.6195) feature loss: tensor(0.3015)
Local adapation with distilling: 0.000586
training loss: tensor(0.6672) feature loss: tensor(0.3325)
Local adapation with distilling: 0.000586
training loss: tensor(0.5780) feature loss: tensor(0.3575)
Local adapation with distilling: 0.000586
training loss: tensor(0.6037) feature loss: tensor(0.3718)
Local adapation with distilling: 0.000586
training loss: tensor(0.6740) feature loss: tensor(0.3112)
Local adapation with distilling: 0.000586
training loss: tensor(0.6243) feature loss: tensor(0.3445)
Local adapation with distilling: 0.000586
training loss: tensor(0.5978) feature loss: tensor(0.3115)
Global Model Acc on global data: 0.5866 length of data: 10000
save a model
-------------Round number:  24  -------------
selected users: [26, 31, 37, 86, 76, 14, 88, 48, 71, 67]
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
all data: 501
Local adapation with distilling: 0.000568
training loss: tensor(0.9284) feature loss: tensor(0.2763)
Local adapation with distilling: 0.000568
training loss: tensor(0.4893) feature loss: tensor(0.2689)
Local adapation with distilling: 0.000568
training loss: tensor(0.4419) feature loss: tensor(0.2761)
Local adapation with distilling: 0.000568
training loss: tensor(0.5050) feature loss: tensor(0.2721)
Local adapation with distilling: 0.000568
training loss: tensor(0.5949) feature loss: tensor(0.2582)
Local adapation with distilling: 0.000568
training loss: tensor(0.5063) feature loss: tensor(0.2727)
Local adapation with distilling: 0.000568
training loss: tensor(0.5054) feature loss: tensor(0.2613)
Local adapation with distilling: 0.000568
training loss: tensor(0.4734) feature loss: tensor(0.2707)
Local adapation with distilling: 0.000568
training loss: tensor(0.4828) feature loss: tensor(0.2924)
Local adapation with distilling: 0.000568
training loss: tensor(0.5356) feature loss: tensor(0.2752)
Global Model Acc on global data: 0.5827 length of data: 10000
-------------Round number:  25  -------------
selected users: [41, 29, 33, 65, 74, 6, 57, 89, 87, 98]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
all data: 501
Local adapation with distilling: 0.00055
training loss: tensor(0.6175) feature loss: tensor(0.3292)
Local adapation with distilling: 0.00055
training loss: tensor(0.7898) feature loss: tensor(0.3379)
Local adapation with distilling: 0.00055
training loss: tensor(0.6244) feature loss: tensor(0.3579)
Local adapation with distilling: 0.00055
training loss: tensor(0.6114) feature loss: tensor(0.3419)
Local adapation with distilling: 0.00055
training loss: tensor(0.5967) feature loss: tensor(0.3169)
Local adapation with distilling: 0.00055
training loss: tensor(0.6268) feature loss: tensor(0.3503)
Local adapation with distilling: 0.00055
training loss: tensor(0.6112) feature loss: tensor(0.3331)
Local adapation with distilling: 0.00055
training loss: tensor(0.6135) feature loss: tensor(0.3610)
Local adapation with distilling: 0.00055
training loss: tensor(0.6347) feature loss: tensor(0.3257)
Local adapation with distilling: 0.00055
training loss: tensor(0.6544) feature loss: tensor(0.3207)
Global Model Acc on global data: 0.6 length of data: 10000
save a model
-------------Round number:  26  -------------
selected users: [8, 69, 84, 41, 25, 5, 63, 95, 33, 70]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([46, 3, 32, 32]) torch.Size([46])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
all data: 494
Local adapation with distilling: 0.000532
training loss: tensor(0.6231) feature loss: tensor(0.3402)
Local adapation with distilling: 0.000532
training loss: tensor(0.6280) feature loss: tensor(0.3375)
Local adapation with distilling: 0.000532
training loss: tensor(0.6428) feature loss: tensor(0.3120)
Local adapation with distilling: 0.000532
training loss: tensor(0.5545) feature loss: tensor(0.3393)
Local adapation with distilling: 0.000532
training loss: tensor(0.5856) feature loss: tensor(0.3428)
Local adapation with distilling: 0.000532
training loss: tensor(0.6749) feature loss: tensor(0.3497)
Local adapation with distilling: 0.000532
training loss: tensor(0.6064) feature loss: tensor(0.3288)
Local adapation with distilling: 0.000532
training loss: tensor(0.6377) feature loss: tensor(0.3810)
Local adapation with distilling: 0.000532
training loss: tensor(0.5637) feature loss: tensor(0.3274)
Local adapation with distilling: 0.000532
training loss: tensor(0.6016) feature loss: tensor(0.3700)
Global Model Acc on global data: 0.6019 length of data: 10000
save a model
-------------Round number:  27  -------------
selected users: [89, 68, 43, 50, 40, 95, 27, 85, 22, 44]
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([46, 3, 32, 32]) torch.Size([46])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
all data: 493
Local adapation with distilling: 0.000514
training loss: tensor(0.5273) feature loss: tensor(0.2887)
Local adapation with distilling: 0.000514
training loss: tensor(0.5239) feature loss: tensor(0.2547)
Local adapation with distilling: 0.000514
training loss: tensor(0.5195) feature loss: tensor(0.2901)
Local adapation with distilling: 0.000514
training loss: tensor(0.5560) feature loss: tensor(0.2530)
Local adapation with distilling: 0.000514
training loss: tensor(0.5514) feature loss: tensor(0.2561)
Local adapation with distilling: 0.000514
training loss: tensor(0.5190) feature loss: tensor(0.3109)
Local adapation with distilling: 0.000514
training loss: tensor(0.5420) feature loss: tensor(0.2925)
Local adapation with distilling: 0.000514
training loss: tensor(0.4819) feature loss: tensor(0.2480)
Local adapation with distilling: 0.000514
training loss: tensor(0.5711) feature loss: tensor(0.3246)
Local adapation with distilling: 0.000514
training loss: tensor(0.4840) feature loss: tensor(0.2654)
Global Model Acc on global data: 0.6089 length of data: 10000
save a model
-------------Round number:  28  -------------
selected users: [67, 14, 0, 86, 13, 18, 30, 36, 52, 95]
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([53, 3, 32, 32]) torch.Size([53])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 494
Local adapation with distilling: 0.000496
training loss: tensor(0.5540) feature loss: tensor(0.3201)
Local adapation with distilling: 0.000496
training loss: tensor(0.5228) feature loss: tensor(0.3185)
Local adapation with distilling: 0.000496
training loss: tensor(0.5516) feature loss: tensor(0.3130)
Local adapation with distilling: 0.000496
training loss: tensor(0.5283) feature loss: tensor(0.3335)
Local adapation with distilling: 0.000496
training loss: tensor(0.6389) feature loss: tensor(0.2835)
Local adapation with distilling: 0.000496
training loss: tensor(0.5675) feature loss: tensor(0.2898)
Local adapation with distilling: 0.000496
training loss: tensor(0.5446) feature loss: tensor(0.2856)
Local adapation with distilling: 0.000496
training loss: tensor(0.5451) feature loss: tensor(0.3167)
Local adapation with distilling: 0.000496
training loss: tensor(0.5650) feature loss: tensor(0.3136)
Local adapation with distilling: 0.000496
training loss: tensor(0.5273) feature loss: tensor(0.3230)
Global Model Acc on global data: 0.613 length of data: 10000
save a model
-------------Round number:  29  -------------
selected users: [73, 8, 10, 7, 19, 71, 92, 25, 38, 12]
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
all data: 503
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.5429) feature loss: tensor(0.2807)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.5125) feature loss: tensor(0.2770)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.5533) feature loss: tensor(0.2516)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.5260) feature loss: tensor(0.2699)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.5673) feature loss: tensor(0.2748)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.5080) feature loss: tensor(0.2762)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.5524) feature loss: tensor(0.2957)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.4878) feature loss: tensor(0.2796)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.5473) feature loss: tensor(0.2537)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.7268) feature loss: tensor(0.2691)
Global Model Acc on global data: 0.618 length of data: 10000
save a model
-------------Round number:  30  -------------
selected users: [20, 91, 34, 52, 8, 74, 21, 88, 80, 89]
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([46, 3, 32, 32]) torch.Size([46])
random features: torch.Size([53, 3, 32, 32]) torch.Size([53])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
all data: 496
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.4712) feature loss: tensor(0.2411)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.4686) feature loss: tensor(0.2622)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.5144) feature loss: tensor(0.2344)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.4558) feature loss: tensor(0.2668)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.4490) feature loss: tensor(0.2466)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.4621) feature loss: tensor(0.2396)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.4848) feature loss: tensor(0.2654)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.4598) feature loss: tensor(0.2616)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.4901) feature loss: tensor(0.2648)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.4512) feature loss: tensor(0.2679)
Global Model Acc on global data: 0.6153 length of data: 10000
-------------Round number:  31  -------------
selected users: [17, 33, 76, 3, 56, 0, 37, 8, 60, 67]
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
all data: 494
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.5100) feature loss: tensor(0.2382)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.4866) feature loss: tensor(0.2749)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.5352) feature loss: tensor(0.2571)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.4900) feature loss: tensor(0.2873)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.5825) feature loss: tensor(0.2612)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.4708) feature loss: tensor(0.2693)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.4397) feature loss: tensor(0.2597)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.4234) feature loss: tensor(0.2847)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.5413) feature loss: tensor(0.2540)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.4667) feature loss: tensor(0.2683)
Global Model Acc on global data: 0.6137 length of data: 10000
-------------Round number:  32  -------------
selected users: [22, 39, 85, 97, 55, 33, 80, 13, 27, 96]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
all data: 490
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.5053) feature loss: tensor(0.2767)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.5381) feature loss: tensor(0.2558)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.4544) feature loss: tensor(0.2366)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.5392) feature loss: tensor(0.2471)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.5695) feature loss: tensor(0.2279)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.4551) feature loss: tensor(0.2595)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.4558) feature loss: tensor(0.2828)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.5352) feature loss: tensor(0.2275)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.5035) feature loss: tensor(0.2708)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.5187) feature loss: tensor(0.2691)
Global Model Acc on global data: 0.6182 length of data: 10000
save a model
-------------Round number:  33  -------------
selected users: [56, 90, 95, 82, 60, 71, 6, 81, 2, 70]
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([53, 3, 32, 32]) torch.Size([53])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
all data: 500
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.5276) feature loss: tensor(0.2629)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.5375) feature loss: tensor(0.2824)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.4765) feature loss: tensor(0.2963)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.5434) feature loss: tensor(0.2959)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.5229) feature loss: tensor(0.2510)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.4963) feature loss: tensor(0.2825)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.5211) feature loss: tensor(0.2752)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.5151) feature loss: tensor(0.3070)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.6623) feature loss: tensor(0.2707)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.4969) feature loss: tensor(0.2728)
Global Model Acc on global data: 0.6292 length of data: 10000
save a model
-------------Round number:  34  -------------
selected users: [14, 74, 15, 4, 32, 59, 91, 10, 50, 53]
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([53, 3, 32, 32]) torch.Size([53])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([46, 3, 32, 32]) torch.Size([46])
random features: torch.Size([53, 3, 32, 32]) torch.Size([53])
all data: 500
Local adapation with distilling: 0.000388
training loss: tensor(0.4820) feature loss: tensor(0.2624)
Local adapation with distilling: 0.000388
training loss: tensor(0.4836) feature loss: tensor(0.2579)
Local adapation with distilling: 0.000388
training loss: tensor(0.5338) feature loss: tensor(0.2735)
Local adapation with distilling: 0.000388
training loss: tensor(0.5390) feature loss: tensor(0.2962)
Local adapation with distilling: 0.000388
training loss: tensor(0.6388) feature loss: tensor(0.2582)
Local adapation with distilling: 0.000388
training loss: tensor(0.6617) feature loss: tensor(0.2734)
Local adapation with distilling: 0.000388
training loss: tensor(0.4831) feature loss: tensor(0.2840)
Local adapation with distilling: 0.000388
training loss: tensor(0.5277) feature loss: tensor(0.2520)
Local adapation with distilling: 0.000388
training loss: tensor(0.5460) feature loss: tensor(0.2448)
Local adapation with distilling: 0.000388
training loss: tensor(0.5350) feature loss: tensor(0.2821)
Global Model Acc on global data: 0.6269 length of data: 10000
-------------Round number:  35  -------------
selected users: [40, 71, 98, 27, 70, 31, 10, 24, 51, 35]
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([46, 3, 32, 32]) torch.Size([46])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 496
Local adapation with distilling: 0.00037
training loss: tensor(0.4993) feature loss: tensor(0.2211)
Local adapation with distilling: 0.00037
training loss: tensor(0.4445) feature loss: tensor(0.2483)
Local adapation with distilling: 0.00037
training loss: tensor(0.5686) feature loss: tensor(0.2269)
Local adapation with distilling: 0.00037
training loss: tensor(0.4529) feature loss: tensor(0.2390)
Local adapation with distilling: 0.00037
training loss: tensor(0.4366) feature loss: tensor(0.2421)
Local adapation with distilling: 0.00037
training loss: tensor(0.4608) feature loss: tensor(0.2674)
Local adapation with distilling: 0.00037
training loss: tensor(0.4370) feature loss: tensor(0.2318)
Local adapation with distilling: 0.00037
training loss: tensor(0.5506) feature loss: tensor(0.2179)
Local adapation with distilling: 0.00037
training loss: tensor(0.5004) feature loss: tensor(0.2716)
Local adapation with distilling: 0.00037
training loss: tensor(0.5616) feature loss: tensor(0.2218)
Global Model Acc on global data: 0.6345 length of data: 10000
save a model
-------------Round number:  36  -------------
selected users: [59, 42, 2, 27, 28, 75, 58, 68, 52, 74]
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([53, 3, 32, 32]) torch.Size([53])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 502
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.5630) feature loss: tensor(0.2546)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.4654) feature loss: tensor(0.2506)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.5306) feature loss: tensor(0.2539)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.4059) feature loss: tensor(0.2568)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.4842) feature loss: tensor(0.2566)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.6706) feature loss: tensor(0.2241)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.5015) feature loss: tensor(0.2459)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.4786) feature loss: tensor(0.2262)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.4531) feature loss: tensor(0.2547)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.4043) feature loss: tensor(0.2571)
Global Model Acc on global data: 0.6402 length of data: 10000
save a model
-------------Round number:  37  -------------
selected users: [61, 49, 86, 78, 5, 91, 81, 82, 89, 18]
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([53, 3, 32, 32]) torch.Size([53])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
all data: 508
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.4622) feature loss: tensor(0.2230)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.4551) feature loss: tensor(0.2134)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.4106) feature loss: tensor(0.2422)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.4756) feature loss: tensor(0.2204)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.4615) feature loss: tensor(0.2210)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.3876) feature loss: tensor(0.2190)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.4145) feature loss: tensor(0.2238)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.5252) feature loss: tensor(0.2469)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.3965) feature loss: tensor(0.2139)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.4472) feature loss: tensor(0.2093)
Global Model Acc on global data: 0.6281 length of data: 10000
-------------Round number:  38  -------------
selected users: [40, 73, 49, 45, 64, 16, 69, 17, 72, 66]
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
all data: 491
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.5216) feature loss: tensor(0.2779)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.5564) feature loss: tensor(0.2867)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.5086) feature loss: tensor(0.2940)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.5861) feature loss: tensor(0.3293)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.6164) feature loss: tensor(0.2868)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.5691) feature loss: tensor(0.3072)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.5642) feature loss: tensor(0.3202)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.5128) feature loss: tensor(0.2863)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.6536) feature loss: tensor(0.3347)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.6278) feature loss: tensor(0.2509)
Global Model Acc on global data: 0.635 length of data: 10000
-------------Round number:  39  -------------
selected users: [22, 53, 84, 57, 87, 58, 29, 21, 85, 79]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([53, 3, 32, 32]) torch.Size([53])
random features: torch.Size([46, 3, 32, 32]) torch.Size([46])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
all data: 494
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.4742) feature loss: tensor(0.2679)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.4854) feature loss: tensor(0.2542)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.5427) feature loss: tensor(0.2338)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.4813) feature loss: tensor(0.2431)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.5263) feature loss: tensor(0.2198)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.4747) feature loss: tensor(0.2371)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.5971) feature loss: tensor(0.2612)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.4914) feature loss: tensor(0.2508)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.4247) feature loss: tensor(0.2156)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.5279) feature loss: tensor(0.2303)
Global Model Acc on global data: 0.6436 length of data: 10000
save a model
-------------Round number:  40  -------------
selected users: [79, 75, 63, 15, 38, 11, 40, 45, 39, 62]
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([53, 3, 32, 32]) torch.Size([53])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 497
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.5104) feature loss: tensor(0.2607)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.6139) feature loss: tensor(0.2281)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.5143) feature loss: tensor(0.2668)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.4987) feature loss: tensor(0.2714)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.5030) feature loss: tensor(0.2270)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.5974) feature loss: tensor(0.2898)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.4486) feature loss: tensor(0.2288)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.5174) feature loss: tensor(0.2619)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.5179) feature loss: tensor(0.2737)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.5186) feature loss: tensor(0.2538)
Global Model Acc on global data: 0.6405 length of data: 10000
-------------Round number:  41  -------------
selected users: [42, 94, 37, 6, 79, 32, 24, 0, 33, 93]
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([46, 3, 32, 32]) torch.Size([46])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
all data: 494
Local adapation with distilling: 0.000262
training loss: tensor(0.4189) feature loss: tensor(0.2368)
Local adapation with distilling: 0.000262
training loss: tensor(0.4594) feature loss: tensor(0.2164)
Local adapation with distilling: 0.000262
training loss: tensor(0.3955) feature loss: tensor(0.2107)
Local adapation with distilling: 0.000262
training loss: tensor(0.4202) feature loss: tensor(0.2031)
Local adapation with distilling: 0.000262
training loss: tensor(0.4179) feature loss: tensor(0.2078)
Local adapation with distilling: 0.000262
training loss: tensor(0.5238) feature loss: tensor(0.2005)
Local adapation with distilling: 0.000262
training loss: tensor(0.4959) feature loss: tensor(0.1942)
Local adapation with distilling: 0.000262
training loss: tensor(0.4353) feature loss: tensor(0.2246)
Local adapation with distilling: 0.000262
training loss: tensor(0.4218) feature loss: tensor(0.2321)
Local adapation with distilling: 0.000262
training loss: tensor(0.4689) feature loss: tensor(0.1969)
Global Model Acc on global data: 0.6446 length of data: 10000
save a model
-------------Round number:  42  -------------
selected users: [83, 53, 70, 45, 44, 39, 22, 80, 10, 0]
random features: torch.Size([57, 3, 32, 32]) torch.Size([57])
random features: torch.Size([53, 3, 32, 32]) torch.Size([53])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
all data: 502
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.4717) feature loss: tensor(0.2323)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.4242) feature loss: tensor(0.2245)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.3933) feature loss: tensor(0.2132)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.4335) feature loss: tensor(0.2133)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.4264) feature loss: tensor(0.2086)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.4188) feature loss: tensor(0.2076)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.4170) feature loss: tensor(0.2096)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.4288) feature loss: tensor(0.2210)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.4063) feature loss: tensor(0.2089)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.4225) feature loss: tensor(0.2370)
Global Model Acc on global data: 0.6475 length of data: 10000
save a model
-------------Round number:  43  -------------
selected users: [20, 2, 15, 22, 57, 91, 69, 55, 11, 79]
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([53, 3, 32, 32]) torch.Size([53])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
all data: 499
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.3968) feature loss: tensor(0.1942)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.3899) feature loss: tensor(0.1868)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.3726) feature loss: tensor(0.2038)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.3492) feature loss: tensor(0.2028)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.3754) feature loss: tensor(0.2120)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.3554) feature loss: tensor(0.1983)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.4019) feature loss: tensor(0.2165)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.4761) feature loss: tensor(0.1845)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.4442) feature loss: tensor(0.2128)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.3585) feature loss: tensor(0.2120)
Global Model Acc on global data: 0.6493 length of data: 10000
save a model
-------------Round number:  44  -------------
selected users: [42, 54, 27, 93, 39, 65, 7, 26, 24, 60]
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([46, 3, 32, 32]) torch.Size([46])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([46, 3, 32, 32]) torch.Size([46])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
all data: 490
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.3936) feature loss: tensor(0.2043)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.5175) feature loss: tensor(0.1964)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.3662) feature loss: tensor(0.1895)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.4038) feature loss: tensor(0.1845)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.3756) feature loss: tensor(0.2071)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.4102) feature loss: tensor(0.1998)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.4384) feature loss: tensor(0.2040)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.8551) feature loss: tensor(0.2161)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.4409) feature loss: tensor(0.1821)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.4224) feature loss: tensor(0.1804)
Global Model Acc on global data: 0.6522 length of data: 10000
save a model
-------------Round number:  45  -------------
selected users: [0, 1, 62, 76, 37, 99, 78, 38, 2, 84]
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([46, 3, 32, 32]) torch.Size([46])
all data: 498
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.3261) feature loss: tensor(0.1712)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.4253) feature loss: tensor(0.1812)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.3552) feature loss: tensor(0.1862)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.4133) feature loss: tensor(0.1566)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.3537) feature loss: tensor(0.1791)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.4129) feature loss: tensor(0.1855)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.4026) feature loss: tensor(0.1882)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.3716) feature loss: tensor(0.1533)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.3780) feature loss: tensor(0.1648)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.4066) feature loss: tensor(0.1563)
Global Model Acc on global data: 0.6528 length of data: 10000
save a model
-------------Round number:  46  -------------
selected users: [71, 33, 37, 10, 44, 34, 24, 98, 73, 95]
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([46, 3, 32, 32]) torch.Size([46])
random features: torch.Size([46, 3, 32, 32]) torch.Size([46])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 493
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.3686) feature loss: tensor(0.1864)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.3682) feature loss: tensor(0.1928)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.3320) feature loss: tensor(0.1959)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.3702) feature loss: tensor(0.1889)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.3501) feature loss: tensor(0.1781)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.4272) feature loss: tensor(0.1727)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.3676) feature loss: tensor(0.1674)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.4617) feature loss: tensor(0.1745)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.4716) feature loss: tensor(0.2017)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.3770) feature loss: tensor(0.2035)
Global Model Acc on global data: 0.653 length of data: 10000
save a model
-------------Round number:  47  -------------
selected users: [17, 90, 94, 86, 63, 5, 38, 14, 40, 47]
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 494
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.3896) feature loss: tensor(0.1794)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.4538) feature loss: tensor(0.2219)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.4250) feature loss: tensor(0.2077)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.3890) feature loss: tensor(0.2093)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.4044) feature loss: tensor(0.2144)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.4712) feature loss: tensor(0.2287)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.3718) feature loss: tensor(0.1969)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.4032) feature loss: tensor(0.2011)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.3595) feature loss: tensor(0.1838)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.4633) feature loss: tensor(0.2051)
Global Model Acc on global data: 0.65 length of data: 10000
-------------Round number:  48  -------------
selected users: [93, 5, 71, 9, 11, 79, 69, 8, 59, 63]
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
all data: 500
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.3579) feature loss: tensor(0.1571)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.3661) feature loss: tensor(0.1786)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.3483) feature loss: tensor(0.1723)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.4487) feature loss: tensor(0.1877)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.3907) feature loss: tensor(0.1770)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.3606) feature loss: tensor(0.1735)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.3959) feature loss: tensor(0.1804)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.3607) feature loss: tensor(0.1734)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.6506) feature loss: tensor(0.1779)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.3417) feature loss: tensor(0.1678)
Global Model Acc on global data: 0.6489 length of data: 10000
-------------Round number:  49  -------------
selected users: [76, 25, 28, 75, 81, 47, 41, 22, 29, 1]
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([53, 3, 32, 32]) torch.Size([53])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.4622) feature loss: tensor(0.1787)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.4555) feature loss: tensor(0.2082)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.4781) feature loss: tensor(0.1870)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.5963) feature loss: tensor(0.1722)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.4153) feature loss: tensor(0.1999)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.4485) feature loss: tensor(0.1745)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.4624) feature loss: tensor(0.2101)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.3805) feature loss: tensor(0.1960)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.5900) feature loss: tensor(0.1999)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.5112) feature loss: tensor(0.1977)
Global Model Acc on global data: 0.654 length of data: 10000
save a model
-------------Round number:  50  -------------
selected users: [80, 79, 25, 15, 39, 40, 53, 17, 57, 50]
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([53, 3, 32, 32]) torch.Size([53])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([53, 3, 32, 32]) torch.Size([53])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([46, 3, 32, 32]) torch.Size([46])
all data: 495
Local adapation with distilling: 0.0001
training loss: tensor(0.3632) feature loss: tensor(0.1723)
Local adapation with distilling: 0.0001
training loss: tensor(0.3411) feature loss: tensor(0.1737)
Local adapation with distilling: 0.0001
training loss: tensor(0.3743) feature loss: tensor(0.1616)
Local adapation with distilling: 0.0001
training loss: tensor(0.3509) feature loss: tensor(0.1686)
Local adapation with distilling: 0.0001
training loss: tensor(0.3568) feature loss: tensor(0.1674)
Local adapation with distilling: 0.0001
training loss: tensor(0.3184) feature loss: tensor(0.1568)
Local adapation with distilling: 0.0001
training loss: tensor(0.3770) feature loss: tensor(0.1774)
Local adapation with distilling: 0.0001
training loss: tensor(0.3418) feature loss: tensor(0.1475)
Local adapation with distilling: 0.0001
training loss: tensor(0.3615) feature loss: tensor(0.1598)
Local adapation with distilling: 0.0001
training loss: tensor(0.4318) feature loss: tensor(0.1470)
Global Model Acc on global data: 0.6548 length of data: 10000
save a model
-------------Round number:  51  -------------
selected users: [71, 43, 11, 83, 78, 19, 80, 4, 79, 75]
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([57, 3, 32, 32]) torch.Size([57])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 508
Local adapation with distilling: 0.0001
training loss: tensor(0.3487) feature loss: tensor(0.1773)
Local adapation with distilling: 0.0001
training loss: tensor(0.4236) feature loss: tensor(0.1889)
Local adapation with distilling: 0.0001
training loss: tensor(0.4735) feature loss: tensor(0.1821)
Local adapation with distilling: 0.0001
training loss: tensor(0.4252) feature loss: tensor(0.1924)
Local adapation with distilling: 0.0001
training loss: tensor(0.4328) feature loss: tensor(0.1748)
Local adapation with distilling: 0.0001
training loss: tensor(0.4938) feature loss: tensor(0.1823)
Local adapation with distilling: 0.0001
training loss: tensor(0.3636) feature loss: tensor(0.1697)
Local adapation with distilling: 0.0001
training loss: tensor(0.4374) feature loss: tensor(0.1809)
Local adapation with distilling: 0.0001
training loss: tensor(0.3237) feature loss: tensor(0.1703)
Local adapation with distilling: 0.0001
training loss: tensor(0.4602) feature loss: tensor(0.1554)
Global Model Acc on global data: 0.6524 length of data: 10000
-------------Round number:  52  -------------
selected users: [82, 8, 44, 19, 2, 73, 37, 89, 67, 18]
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
all data: 499
Local adapation with distilling: 0.0001
training loss: tensor(0.3006) feature loss: tensor(0.1374)
Local adapation with distilling: 0.0001
training loss: tensor(0.2675) feature loss: tensor(0.1330)
Local adapation with distilling: 0.0001
training loss: tensor(0.2767) feature loss: tensor(0.1328)
Local adapation with distilling: 0.0001
training loss: tensor(0.3293) feature loss: tensor(0.1451)
Local adapation with distilling: 0.0001
training loss: tensor(0.3105) feature loss: tensor(0.1277)
Local adapation with distilling: 0.0001
training loss: tensor(0.3545) feature loss: tensor(0.1332)
Local adapation with distilling: 0.0001
training loss: tensor(0.2357) feature loss: tensor(0.1283)
Local adapation with distilling: 0.0001
training loss: tensor(0.2743) feature loss: tensor(0.1473)
Local adapation with distilling: 0.0001
training loss: tensor(0.3161) feature loss: tensor(0.1326)
Local adapation with distilling: 0.0001
training loss: tensor(0.3614) feature loss: tensor(0.1310)
Global Model Acc on global data: 0.6547 length of data: 10000
-------------Round number:  53  -------------
selected users: [19, 78, 64, 3, 71, 32, 68, 42, 55, 97]
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
all data: 496
Local adapation with distilling: 0.0001
training loss: tensor(0.3996) feature loss: tensor(0.1863)
Local adapation with distilling: 0.0001
training loss: tensor(0.4152) feature loss: tensor(0.1833)
Local adapation with distilling: 0.0001
training loss: tensor(0.5192) feature loss: tensor(0.1674)
Local adapation with distilling: 0.0001
training loss: tensor(0.4361) feature loss: tensor(0.1937)
Local adapation with distilling: 0.0001
training loss: tensor(0.3139) feature loss: tensor(0.1779)
Local adapation with distilling: 0.0001
training loss: tensor(0.5090) feature loss: tensor(0.1703)
Local adapation with distilling: 0.0001
training loss: tensor(0.4552) feature loss: tensor(0.1708)
Local adapation with distilling: 0.0001
training loss: tensor(0.3645) feature loss: tensor(0.1808)
Local adapation with distilling: 0.0001
training loss: tensor(0.4446) feature loss: tensor(0.1647)
Local adapation with distilling: 0.0001
training loss: tensor(0.4949) feature loss: tensor(0.1707)
Global Model Acc on global data: 0.6535 length of data: 10000
-------------Round number:  54  -------------
selected users: [36, 70, 48, 94, 81, 46, 38, 29, 34, 22]
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([53, 3, 32, 32]) torch.Size([53])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([46, 3, 32, 32]) torch.Size([46])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 493
Local adapation with distilling: 0.0001
training loss: tensor(0.3804) feature loss: tensor(0.1649)
Local adapation with distilling: 0.0001
training loss: tensor(0.3171) feature loss: tensor(0.1557)
Local adapation with distilling: 0.0001
training loss: tensor(0.3621) feature loss: tensor(0.1543)
Local adapation with distilling: 0.0001
training loss: tensor(0.3335) feature loss: tensor(0.1539)
Local adapation with distilling: 0.0001
training loss: tensor(0.3162) feature loss: tensor(0.1586)
Local adapation with distilling: 0.0001
training loss: tensor(0.3931) feature loss: tensor(0.1630)
Local adapation with distilling: 0.0001
training loss: tensor(0.3009) feature loss: tensor(0.1357)
Local adapation with distilling: 0.0001
training loss: tensor(0.4658) feature loss: tensor(0.1544)
Local adapation with distilling: 0.0001
training loss: tensor(0.3585) feature loss: tensor(0.1276)
Local adapation with distilling: 0.0001
training loss: tensor(0.2742) feature loss: tensor(0.1559)
Global Model Acc on global data: 0.6546 length of data: 10000
-------------Round number:  55  -------------
selected users: [28, 92, 98, 95, 84, 34, 38, 76, 17, 78]
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([46, 3, 32, 32]) torch.Size([46])
random features: torch.Size([46, 3, 32, 32]) torch.Size([46])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
all data: 491
Local adapation with distilling: 0.0001
training loss: tensor(0.4077) feature loss: tensor(0.1875)
Local adapation with distilling: 0.0001
training loss: tensor(0.5016) feature loss: tensor(0.1935)
Local adapation with distilling: 0.0001
training loss: tensor(0.4387) feature loss: tensor(0.1667)
Local adapation with distilling: 0.0001
training loss: tensor(0.3459) feature loss: tensor(0.1833)
Local adapation with distilling: 0.0001
training loss: tensor(0.3753) feature loss: tensor(0.1723)
Local adapation with distilling: 0.0001
training loss: tensor(0.3559) feature loss: tensor(0.1517)
Local adapation with distilling: 0.0001
training loss: tensor(0.2966) feature loss: tensor(0.1611)
Local adapation with distilling: 0.0001
training loss: tensor(0.3665) feature loss: tensor(0.1655)
Local adapation with distilling: 0.0001
training loss: tensor(0.3050) feature loss: tensor(0.1569)
Local adapation with distilling: 0.0001
training loss: tensor(0.4126) feature loss: tensor(0.1766)
Global Model Acc on global data: 0.6516 length of data: 10000
-------------Round number:  56  -------------
selected users: [92, 79, 23, 68, 52, 38, 73, 9, 59, 27]
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([53, 3, 32, 32]) torch.Size([53])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 501
Local adapation with distilling: 0.0001
training loss: tensor(0.3724) feature loss: tensor(0.1616)
Local adapation with distilling: 0.0001
training loss: tensor(0.2611) feature loss: tensor(0.1526)
Local adapation with distilling: 0.0001
training loss: tensor(0.4214) feature loss: tensor(0.1543)
Local adapation with distilling: 0.0001
training loss: tensor(0.3116) feature loss: tensor(0.1320)
Local adapation with distilling: 0.0001
training loss: tensor(0.3207) feature loss: tensor(0.1466)
Local adapation with distilling: 0.0001
training loss: tensor(0.2401) feature loss: tensor(0.1299)
Local adapation with distilling: 0.0001
training loss: tensor(0.3367) feature loss: tensor(0.1412)
Local adapation with distilling: 0.0001
training loss: tensor(0.3652) feature loss: tensor(0.1518)
Local adapation with distilling: 0.0001
training loss: tensor(0.5588) feature loss: tensor(0.1555)
Local adapation with distilling: 0.0001
training loss: tensor(0.2911) feature loss: tensor(0.1425)
Global Model Acc on global data: 0.6495 length of data: 10000
-------------Round number:  57  -------------
selected users: [52, 17, 41, 3, 8, 98, 59, 20, 67, 7]
random features: torch.Size([53, 3, 32, 32]) torch.Size([53])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
all data: 501
Local adapation with distilling: 0.0001
training loss: tensor(0.3188) feature loss: tensor(0.1623)
Local adapation with distilling: 0.0001
training loss: tensor(0.2815) feature loss: tensor(0.1423)
Local adapation with distilling: 0.0001
training loss: tensor(0.3428) feature loss: tensor(0.1674)
Local adapation with distilling: 0.0001
training loss: tensor(0.3569) feature loss: tensor(0.1677)
Local adapation with distilling: 0.0001
training loss: tensor(0.3046) feature loss: tensor(0.1580)
Local adapation with distilling: 0.0001
training loss: tensor(0.3522) feature loss: tensor(0.1435)
Local adapation with distilling: 0.0001
training loss: tensor(0.5916) feature loss: tensor(0.1639)
Local adapation with distilling: 0.0001
training loss: tensor(0.3467) feature loss: tensor(0.1552)
Local adapation with distilling: 0.0001
training loss: tensor(0.3389) feature loss: tensor(0.1704)
Local adapation with distilling: 0.0001
training loss: tensor(0.3912) feature loss: tensor(0.1653)
Global Model Acc on global data: 0.6542 length of data: 10000
-------------Round number:  58  -------------
selected users: [43, 58, 8, 31, 70, 45, 69, 95, 50, 4]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([46, 3, 32, 32]) torch.Size([46])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
all data: 494
Local adapation with distilling: 0.0001
training loss: tensor(0.3495) feature loss: tensor(0.1782)
Local adapation with distilling: 0.0001
training loss: tensor(0.3957) feature loss: tensor(0.1738)
Local adapation with distilling: 0.0001
training loss: tensor(0.2967) feature loss: tensor(0.1637)
Local adapation with distilling: 0.0001
training loss: tensor(0.3604) feature loss: tensor(0.1776)
Local adapation with distilling: 0.0001
training loss: tensor(0.3077) feature loss: tensor(0.1592)
Local adapation with distilling: 0.0001
training loss: tensor(0.3767) feature loss: tensor(0.1689)
Local adapation with distilling: 0.0001
training loss: tensor(0.3459) feature loss: tensor(0.1804)
Local adapation with distilling: 0.0001
training loss: tensor(0.3075) feature loss: tensor(0.1775)
Local adapation with distilling: 0.0001
training loss: tensor(0.3701) feature loss: tensor(0.1474)
Local adapation with distilling: 0.0001
training loss: tensor(0.3606) feature loss: tensor(0.1701)
Global Model Acc on global data: 0.6552 length of data: 10000
save a model
-------------Round number:  59  -------------
selected users: [38, 46, 24, 87, 30, 85, 16, 96, 18, 99]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([46, 3, 32, 32]) torch.Size([46])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
all data: 481
Local adapation with distilling: 0.0001
training loss: tensor(0.2834) feature loss: tensor(0.1634)
Local adapation with distilling: 0.0001
training loss: tensor(0.3933) feature loss: tensor(0.1736)
Local adapation with distilling: 0.0001
training loss: tensor(0.3342) feature loss: tensor(0.1584)
Local adapation with distilling: 0.0001
training loss: tensor(0.4344) feature loss: tensor(0.1636)
Local adapation with distilling: 0.0001
training loss: tensor(0.4083) feature loss: tensor(0.1804)
Local adapation with distilling: 0.0001
training loss: tensor(0.3257) feature loss: tensor(0.1725)
Local adapation with distilling: 0.0001
training loss: tensor(0.4067) feature loss: tensor(0.1677)
Local adapation with distilling: 0.0001
training loss: tensor(0.4239) feature loss: tensor(0.1963)
Local adapation with distilling: 0.0001
training loss: tensor(0.3797) feature loss: tensor(0.1769)
Local adapation with distilling: 0.0001
training loss: tensor(0.4157) feature loss: tensor(0.1962)
Global Model Acc on global data: 0.6512 length of data: 10000
-------------Round number:  60  -------------
selected users: [88, 4, 79, 14, 55, 3, 19, 28, 94, 25]
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
all data: 491
Local adapation with distilling: 0.0001
training loss: tensor(0.3259) feature loss: tensor(0.1534)
Local adapation with distilling: 0.0001
training loss: tensor(0.2789) feature loss: tensor(0.1493)
Local adapation with distilling: 0.0001
training loss: tensor(0.2363) feature loss: tensor(0.1405)
Local adapation with distilling: 0.0001
training loss: tensor(0.2740) feature loss: tensor(0.1405)
Local adapation with distilling: 0.0001
training loss: tensor(0.3193) feature loss: tensor(0.1231)
Local adapation with distilling: 0.0001
training loss: tensor(0.2710) feature loss: tensor(0.1505)
Local adapation with distilling: 0.0001
training loss: tensor(0.2804) feature loss: tensor(0.1395)
Local adapation with distilling: 0.0001
training loss: tensor(0.3012) feature loss: tensor(0.1481)
Local adapation with distilling: 0.0001
training loss: tensor(0.2795) feature loss: tensor(0.1429)
Local adapation with distilling: 0.0001
training loss: tensor(0.2726) feature loss: tensor(0.1453)
Global Model Acc on global data: 0.6531 length of data: 10000
-------------Round number:  61  -------------
selected users: [83, 1, 55, 9, 31, 28, 96, 29, 86, 63]
random features: torch.Size([57, 3, 32, 32]) torch.Size([57])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
all data: 505
Local adapation with distilling: 0.0001
training loss: tensor(0.4010) feature loss: tensor(0.2069)
Local adapation with distilling: 0.0001
training loss: tensor(0.4077) feature loss: tensor(0.1952)
Local adapation with distilling: 0.0001
training loss: tensor(0.3518) feature loss: tensor(0.1658)
Local adapation with distilling: 0.0001
training loss: tensor(0.4090) feature loss: tensor(0.1912)
Local adapation with distilling: 0.0001
training loss: tensor(0.3652) feature loss: tensor(0.2001)
Local adapation with distilling: 0.0001
training loss: tensor(0.3506) feature loss: tensor(0.1783)
Local adapation with distilling: 0.0001
training loss: tensor(0.4159) feature loss: tensor(0.1888)
Local adapation with distilling: 0.0001
training loss: tensor(0.4159) feature loss: tensor(0.1879)
Local adapation with distilling: 0.0001
training loss: tensor(0.3524) feature loss: tensor(0.1914)
Local adapation with distilling: 0.0001
training loss: tensor(0.3452) feature loss: tensor(0.1798)
Global Model Acc on global data: 0.6554 length of data: 10000
save a model
-------------Round number:  62  -------------
selected users: [76, 48, 62, 80, 29, 99, 60, 89, 39, 69]
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
all data: 495
Local adapation with distilling: 0.0001
training loss: tensor(0.3084) feature loss: tensor(0.1308)
Local adapation with distilling: 0.0001
training loss: tensor(0.3002) feature loss: tensor(0.1600)
Local adapation with distilling: 0.0001
training loss: tensor(0.3110) feature loss: tensor(0.1510)
Local adapation with distilling: 0.0001
training loss: tensor(0.2688) feature loss: tensor(0.1521)
Local adapation with distilling: 0.0001
training loss: tensor(0.4744) feature loss: tensor(0.1483)
Local adapation with distilling: 0.0001
training loss: tensor(0.3108) feature loss: tensor(0.1468)
Local adapation with distilling: 0.0001
training loss: tensor(0.3211) feature loss: tensor(0.1331)
Local adapation with distilling: 0.0001
training loss: tensor(0.2743) feature loss: tensor(0.1497)
Local adapation with distilling: 0.0001
training loss: tensor(0.2692) feature loss: tensor(0.1423)
Local adapation with distilling: 0.0001
training loss: tensor(0.2851) feature loss: tensor(0.1517)
Global Model Acc on global data: 0.6561 length of data: 10000
save a model
-------------Round number:  63  -------------
selected users: [64, 59, 63, 2, 80, 20, 18, 48, 72, 51]
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
all data: 495
Local adapation with distilling: 0.0001
training loss: tensor(0.3230) feature loss: tensor(0.1301)
Local adapation with distilling: 0.0001
training loss: tensor(0.6481) feature loss: tensor(0.1387)
Local adapation with distilling: 0.0001
training loss: tensor(0.2538) feature loss: tensor(0.1315)
Local adapation with distilling: 0.0001
training loss: tensor(0.2860) feature loss: tensor(0.1332)
Local adapation with distilling: 0.0001
training loss: tensor(0.2293) feature loss: tensor(0.1352)
Local adapation with distilling: 0.0001
training loss: tensor(0.2463) feature loss: tensor(0.1242)
Local adapation with distilling: 0.0001
training loss: tensor(0.2762) feature loss: tensor(0.1277)
Local adapation with distilling: 0.0001
training loss: tensor(0.2580) feature loss: tensor(0.1458)
Local adapation with distilling: 0.0001
training loss: tensor(0.4360) feature loss: tensor(0.1440)
Local adapation with distilling: 0.0001
training loss: tensor(0.3553) feature loss: tensor(0.1537)
Global Model Acc on global data: 0.6526 length of data: 10000
-------------Round number:  64  -------------
selected users: [17, 22, 60, 92, 23, 19, 71, 94, 40, 49]
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 495
Local adapation with distilling: 0.0001
training loss: tensor(0.2247) feature loss: tensor(0.1343)
Local adapation with distilling: 0.0001
training loss: tensor(0.2548) feature loss: tensor(0.1466)
Local adapation with distilling: 0.0001
training loss: tensor(0.2510) feature loss: tensor(0.1285)
Local adapation with distilling: 0.0001
training loss: tensor(0.3611) feature loss: tensor(0.1565)
Local adapation with distilling: 0.0001
training loss: tensor(0.3765) feature loss: tensor(0.1579)
Local adapation with distilling: 0.0001
training loss: tensor(0.2692) feature loss: tensor(0.1466)
Local adapation with distilling: 0.0001
training loss: tensor(0.2455) feature loss: tensor(0.1444)
Local adapation with distilling: 0.0001
training loss: tensor(0.2614) feature loss: tensor(0.1449)
Local adapation with distilling: 0.0001
training loss: tensor(0.2363) feature loss: tensor(0.1379)
Local adapation with distilling: 0.0001
training loss: tensor(0.2898) feature loss: tensor(0.1400)
Global Model Acc on global data: 0.6547 length of data: 10000
-------------Round number:  65  -------------
selected users: [37, 81, 39, 61, 76, 90, 27, 86, 28, 69]
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([53, 3, 32, 32]) torch.Size([53])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.2663) feature loss: tensor(0.1582)
Local adapation with distilling: 0.0001
training loss: tensor(0.2767) feature loss: tensor(0.1620)
Local adapation with distilling: 0.0001
training loss: tensor(0.2708) feature loss: tensor(0.1599)
Local adapation with distilling: 0.0001
training loss: tensor(0.3965) feature loss: tensor(0.1674)
Local adapation with distilling: 0.0001
training loss: tensor(0.2771) feature loss: tensor(0.1397)
Local adapation with distilling: 0.0001
training loss: tensor(0.3363) feature loss: tensor(0.1619)
Local adapation with distilling: 0.0001
training loss: tensor(0.2559) feature loss: tensor(0.1506)
Local adapation with distilling: 0.0001
training loss: tensor(0.2942) feature loss: tensor(0.1576)
Local adapation with distilling: 0.0001
training loss: tensor(0.2868) feature loss: tensor(0.1535)
Local adapation with distilling: 0.0001
training loss: tensor(0.2696) feature loss: tensor(0.1526)
Global Model Acc on global data: 0.6553 length of data: 10000
-------------Round number:  66  -------------
selected users: [8, 93, 4, 5, 52, 41, 0, 73, 88, 68]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([53, 3, 32, 32]) torch.Size([53])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 507
Local adapation with distilling: 0.0001
training loss: tensor(0.2245) feature loss: tensor(0.1392)
Local adapation with distilling: 0.0001
training loss: tensor(0.2719) feature loss: tensor(0.1193)
Local adapation with distilling: 0.0001
training loss: tensor(0.2609) feature loss: tensor(0.1367)
Local adapation with distilling: 0.0001
training loss: tensor(0.3117) feature loss: tensor(0.1378)
Local adapation with distilling: 0.0001
training loss: tensor(0.2403) feature loss: tensor(0.1366)
Local adapation with distilling: 0.0001
training loss: tensor(0.2618) feature loss: tensor(0.1453)
Local adapation with distilling: 0.0001
training loss: tensor(0.2566) feature loss: tensor(0.1315)
Local adapation with distilling: 0.0001
training loss: tensor(0.3102) feature loss: tensor(0.1306)
Local adapation with distilling: 0.0001
training loss: tensor(0.2813) feature loss: tensor(0.1360)
Local adapation with distilling: 0.0001
training loss: tensor(0.2746) feature loss: tensor(0.1196)
Global Model Acc on global data: 0.6526 length of data: 10000
-------------Round number:  67  -------------
selected users: [17, 24, 64, 93, 97, 29, 3, 70, 82, 11]
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([46, 3, 32, 32]) torch.Size([46])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
all data: 491
Local adapation with distilling: 0.0001
training loss: tensor(0.2358) feature loss: tensor(0.1428)
Local adapation with distilling: 0.0001
training loss: tensor(0.2958) feature loss: tensor(0.1351)
Local adapation with distilling: 0.0001
training loss: tensor(0.3265) feature loss: tensor(0.1498)
Local adapation with distilling: 0.0001
training loss: tensor(0.2740) feature loss: tensor(0.1408)
Local adapation with distilling: 0.0001
training loss: tensor(0.3368) feature loss: tensor(0.1491)
Local adapation with distilling: 0.0001
training loss: tensor(0.3614) feature loss: tensor(0.1519)
Local adapation with distilling: 0.0001
training loss: tensor(0.2846) feature loss: tensor(0.1733)
Local adapation with distilling: 0.0001
training loss: tensor(0.2686) feature loss: tensor(0.1535)
Local adapation with distilling: 0.0001
training loss: tensor(0.3247) feature loss: tensor(0.1534)
Local adapation with distilling: 0.0001
training loss: tensor(0.3514) feature loss: tensor(0.1568)
Global Model Acc on global data: 0.6566 length of data: 10000
save a model
-------------Round number:  68  -------------
selected users: [29, 30, 16, 5, 38, 71, 76, 94, 99, 95]
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 495
Local adapation with distilling: 0.0001
training loss: tensor(0.3259) feature loss: tensor(0.1088)
Local adapation with distilling: 0.0001
training loss: tensor(0.2399) feature loss: tensor(0.1072)
Local adapation with distilling: 0.0001
training loss: tensor(0.2473) feature loss: tensor(0.0958)
Local adapation with distilling: 0.0001
training loss: tensor(0.2429) feature loss: tensor(0.1069)
Local adapation with distilling: 0.0001
training loss: tensor(0.1749) feature loss: tensor(0.0987)
Local adapation with distilling: 0.0001
training loss: tensor(0.1892) feature loss: tensor(0.1108)
Local adapation with distilling: 0.0001
training loss: tensor(0.1936) feature loss: tensor(0.1001)
Local adapation with distilling: 0.0001
training loss: tensor(0.1933) feature loss: tensor(0.1050)
Local adapation with distilling: 0.0001
training loss: tensor(0.2227) feature loss: tensor(0.1172)
Local adapation with distilling: 0.0001
training loss: tensor(0.1942) feature loss: tensor(0.1143)
Global Model Acc on global data: 0.6569 length of data: 10000
save a model
-------------Round number:  69  -------------
selected users: [72, 31, 13, 83, 33, 8, 26, 89, 64, 97]
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([57, 3, 32, 32]) torch.Size([57])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
all data: 507
Local adapation with distilling: 0.0001
training loss: tensor(0.6199) feature loss: tensor(0.1584)
Local adapation with distilling: 0.0001
training loss: tensor(0.2973) feature loss: tensor(0.1688)
Local adapation with distilling: 0.0001
training loss: tensor(0.4367) feature loss: tensor(0.1455)
Local adapation with distilling: 0.0001
training loss: tensor(0.3261) feature loss: tensor(0.1744)
Local adapation with distilling: 0.0001
training loss: tensor(0.3058) feature loss: tensor(0.1706)
Local adapation with distilling: 0.0001
training loss: tensor(0.2635) feature loss: tensor(0.1562)
Local adapation with distilling: 0.0001
training loss: tensor(0.6159) feature loss: tensor(0.1639)
Local adapation with distilling: 0.0001
training loss: tensor(0.2979) feature loss: tensor(0.1700)
Local adapation with distilling: 0.0001
training loss: tensor(0.2966) feature loss: tensor(0.1502)
Local adapation with distilling: 0.0001
training loss: tensor(0.3157) feature loss: tensor(0.1489)
Global Model Acc on global data: 0.6518 length of data: 10000
-------------Round number:  70  -------------
selected users: [81, 43, 88, 32, 50, 71, 73, 55, 42, 2]
random features: torch.Size([53, 3, 32, 32]) torch.Size([53])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([46, 3, 32, 32]) torch.Size([46])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
all data: 501
Local adapation with distilling: 0.0001
training loss: tensor(0.2245) feature loss: tensor(0.1378)
Local adapation with distilling: 0.0001
training loss: tensor(0.2780) feature loss: tensor(0.1429)
Local adapation with distilling: 0.0001
training loss: tensor(0.2627) feature loss: tensor(0.1388)
Local adapation with distilling: 0.0001
training loss: tensor(0.3360) feature loss: tensor(0.1269)
Local adapation with distilling: 0.0001
training loss: tensor(0.2680) feature loss: tensor(0.1256)
Local adapation with distilling: 0.0001
training loss: tensor(0.2101) feature loss: tensor(0.1321)
Local adapation with distilling: 0.0001
training loss: tensor(0.3002) feature loss: tensor(0.1383)
Local adapation with distilling: 0.0001
training loss: tensor(0.2575) feature loss: tensor(0.1191)
Local adapation with distilling: 0.0001
training loss: tensor(0.2340) feature loss: tensor(0.1349)
Local adapation with distilling: 0.0001
training loss: tensor(0.2835) feature loss: tensor(0.1353)
Global Model Acc on global data: 0.6577 length of data: 10000
save a model
-------------Round number:  71  -------------
selected users: [41, 84, 98, 42, 75, 25, 60, 19, 52, 29]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([46, 3, 32, 32]) torch.Size([46])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([53, 3, 32, 32]) torch.Size([53])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
all data: 497
Local adapation with distilling: 0.0001
training loss: tensor(0.2238) feature loss: tensor(0.1381)
Local adapation with distilling: 0.0001
training loss: tensor(0.2788) feature loss: tensor(0.1175)
Local adapation with distilling: 0.0001
training loss: tensor(0.2963) feature loss: tensor(0.1184)
Local adapation with distilling: 0.0001
training loss: tensor(0.2096) feature loss: tensor(0.1311)
Local adapation with distilling: 0.0001
training loss: tensor(0.3279) feature loss: tensor(0.1141)
Local adapation with distilling: 0.0001
training loss: tensor(0.2280) feature loss: tensor(0.1302)
Local adapation with distilling: 0.0001
training loss: tensor(0.2140) feature loss: tensor(0.1147)
Local adapation with distilling: 0.0001
training loss: tensor(0.2391) feature loss: tensor(0.1255)
Local adapation with distilling: 0.0001
training loss: tensor(0.2190) feature loss: tensor(0.1240)
Local adapation with distilling: 0.0001
training loss: tensor(0.2844) feature loss: tensor(0.1237)
Global Model Acc on global data: 0.6504 length of data: 10000
-------------Round number:  72  -------------
selected users: [76, 82, 43, 16, 84, 95, 78, 91, 30, 22]
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([46, 3, 32, 32]) torch.Size([46])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 491
Local adapation with distilling: 0.0001
training loss: tensor(0.1963) feature loss: tensor(0.1196)
Local adapation with distilling: 0.0001
training loss: tensor(0.3298) feature loss: tensor(0.1380)
Local adapation with distilling: 0.0001
training loss: tensor(0.2487) feature loss: tensor(0.1410)
Local adapation with distilling: 0.0001
training loss: tensor(0.2576) feature loss: tensor(0.1228)
Local adapation with distilling: 0.0001
training loss: tensor(0.2490) feature loss: tensor(0.1244)
Local adapation with distilling: 0.0001
training loss: tensor(0.2186) feature loss: tensor(0.1431)
Local adapation with distilling: 0.0001
training loss: tensor(0.2826) feature loss: tensor(0.1380)
Local adapation with distilling: 0.0001
training loss: tensor(0.2499) feature loss: tensor(0.1380)
Local adapation with distilling: 0.0001
training loss: tensor(0.2640) feature loss: tensor(0.1338)
Local adapation with distilling: 0.0001
training loss: tensor(0.2171) feature loss: tensor(0.1377)
Global Model Acc on global data: 0.6569 length of data: 10000
-------------Round number:  73  -------------
selected users: [49, 14, 34, 70, 90, 35, 68, 76, 80, 9]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([46, 3, 32, 32]) torch.Size([46])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
all data: 488
Local adapation with distilling: 0.0001
training loss: tensor(0.3280) feature loss: tensor(0.1754)
Local adapation with distilling: 0.0001
training loss: tensor(0.3210) feature loss: tensor(0.1721)
Local adapation with distilling: 0.0001
training loss: tensor(0.3247) feature loss: tensor(0.1607)
Local adapation with distilling: 0.0001
training loss: tensor(0.2816) feature loss: tensor(0.1702)
Local adapation with distilling: 0.0001
training loss: tensor(0.3476) feature loss: tensor(0.1705)
Local adapation with distilling: 0.0001
training loss: tensor(0.4607) feature loss: tensor(0.1643)
Local adapation with distilling: 0.0001
training loss: tensor(0.2967) feature loss: tensor(0.1517)
Local adapation with distilling: 0.0001
training loss: tensor(0.2499) feature loss: tensor(0.1533)
Local adapation with distilling: 0.0001
training loss: tensor(0.2909) feature loss: tensor(0.1781)
Local adapation with distilling: 0.0001
training loss: tensor(0.3348) feature loss: tensor(0.1855)
Global Model Acc on global data: 0.6646 length of data: 10000
save a model
-------------Round number:  74  -------------
selected users: [85, 64, 63, 80, 6, 12, 43, 17, 7, 8]
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 498
Local adapation with distilling: 0.0001
training loss: tensor(0.2542) feature loss: tensor(0.1395)
Local adapation with distilling: 0.0001
training loss: tensor(0.2715) feature loss: tensor(0.1309)
Local adapation with distilling: 0.0001
training loss: tensor(0.2729) feature loss: tensor(0.1526)
Local adapation with distilling: 0.0001
training loss: tensor(0.2490) feature loss: tensor(0.1521)
Local adapation with distilling: 0.0001
training loss: tensor(0.3323) feature loss: tensor(0.1532)
Local adapation with distilling: 0.0001
training loss: tensor(0.6037) feature loss: tensor(0.1577)
Local adapation with distilling: 0.0001
training loss: tensor(0.2701) feature loss: tensor(0.1502)
Local adapation with distilling: 0.0001
training loss: tensor(0.2231) feature loss: tensor(0.1345)
Local adapation with distilling: 0.0001
training loss: tensor(0.3305) feature loss: tensor(0.1493)
Local adapation with distilling: 0.0001
training loss: tensor(0.2389) feature loss: tensor(0.1510)
Global Model Acc on global data: 0.6627 length of data: 10000
-------------Round number:  75  -------------
selected users: [36, 7, 6, 45, 56, 54, 22, 37, 53, 68]
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([46, 3, 32, 32]) torch.Size([46])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([53, 3, 32, 32]) torch.Size([53])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 496
Local adapation with distilling: 0.0001
training loss: tensor(0.3361) feature loss: tensor(0.1638)
Local adapation with distilling: 0.0001
training loss: tensor(0.3017) feature loss: tensor(0.1596)
Local adapation with distilling: 0.0001
training loss: tensor(0.2861) feature loss: tensor(0.1535)
Local adapation with distilling: 0.0001
training loss: tensor(0.2978) feature loss: tensor(0.1518)
Local adapation with distilling: 0.0001
training loss: tensor(0.3605) feature loss: tensor(0.1506)
Local adapation with distilling: 0.0001
training loss: tensor(0.4410) feature loss: tensor(0.1404)
Local adapation with distilling: 0.0001
training loss: tensor(0.2416) feature loss: tensor(0.1546)
Local adapation with distilling: 0.0001
training loss: tensor(0.2472) feature loss: tensor(0.1508)
Local adapation with distilling: 0.0001
training loss: tensor(0.3031) feature loss: tensor(0.1584)
Local adapation with distilling: 0.0001
training loss: tensor(0.2565) feature loss: tensor(0.1380)
Global Model Acc on global data: 0.667 length of data: 10000
save a model
-------------Round number:  76  -------------
selected users: [38, 37, 32, 50, 10, 94, 19, 44, 86, 23]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([46, 3, 32, 32]) torch.Size([46])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
all data: 488
Local adapation with distilling: 0.0001
training loss: tensor(0.2152) feature loss: tensor(0.1358)
Local adapation with distilling: 0.0001
training loss: tensor(0.2235) feature loss: tensor(0.1518)
Local adapation with distilling: 0.0001
training loss: tensor(0.3272) feature loss: tensor(0.1324)
Local adapation with distilling: 0.0001
training loss: tensor(0.2681) feature loss: tensor(0.1389)
Local adapation with distilling: 0.0001
training loss: tensor(0.2732) feature loss: tensor(0.1432)
Local adapation with distilling: 0.0001
training loss: tensor(0.2466) feature loss: tensor(0.1592)
Local adapation with distilling: 0.0001
training loss: tensor(0.2432) feature loss: tensor(0.1537)
Local adapation with distilling: 0.0001
training loss: tensor(0.2543) feature loss: tensor(0.1423)
Local adapation with distilling: 0.0001
training loss: tensor(0.2411) feature loss: tensor(0.1514)
Local adapation with distilling: 0.0001
training loss: tensor(0.3248) feature loss: tensor(0.1587)
Global Model Acc on global data: 0.6589 length of data: 10000
-------------Round number:  77  -------------
selected users: [5, 93, 41, 96, 16, 42, 81, 91, 50, 58]
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([53, 3, 32, 32]) torch.Size([53])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([46, 3, 32, 32]) torch.Size([46])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
all data: 493
Local adapation with distilling: 0.0001
training loss: tensor(0.3138) feature loss: tensor(0.1602)
Local adapation with distilling: 0.0001
training loss: tensor(0.2333) feature loss: tensor(0.1304)
Local adapation with distilling: 0.0001
training loss: tensor(0.2481) feature loss: tensor(0.1550)
Local adapation with distilling: 0.0001
training loss: tensor(0.3026) feature loss: tensor(0.1541)
Local adapation with distilling: 0.0001
training loss: tensor(0.2658) feature loss: tensor(0.1380)
Local adapation with distilling: 0.0001
training loss: tensor(0.2417) feature loss: tensor(0.1504)
Local adapation with distilling: 0.0001
training loss: tensor(0.2423) feature loss: tensor(0.1514)
Local adapation with distilling: 0.0001
training loss: tensor(0.2574) feature loss: tensor(0.1537)
Local adapation with distilling: 0.0001
training loss: tensor(0.2436) feature loss: tensor(0.1356)
Local adapation with distilling: 0.0001
training loss: tensor(0.3017) feature loss: tensor(0.1523)
Global Model Acc on global data: 0.6603 length of data: 10000
-------------Round number:  78  -------------
selected users: [9, 46, 7, 63, 15, 2, 74, 31, 5, 36]
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([53, 3, 32, 32]) torch.Size([53])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
all data: 504
Local adapation with distilling: 0.0001
training loss: tensor(0.3002) feature loss: tensor(0.1579)
Local adapation with distilling: 0.0001
training loss: tensor(0.3248) feature loss: tensor(0.1592)
Local adapation with distilling: 0.0001
training loss: tensor(0.3320) feature loss: tensor(0.1578)
Local adapation with distilling: 0.0001
training loss: tensor(0.2556) feature loss: tensor(0.1541)
Local adapation with distilling: 0.0001
training loss: tensor(0.2886) feature loss: tensor(0.1621)
Local adapation with distilling: 0.0001
training loss: tensor(0.2978) feature loss: tensor(0.1479)
Local adapation with distilling: 0.0001
training loss: tensor(0.3084) feature loss: tensor(0.1562)
Local adapation with distilling: 0.0001
training loss: tensor(0.2899) feature loss: tensor(0.1633)
Local adapation with distilling: 0.0001
training loss: tensor(0.2752) feature loss: tensor(0.1613)
Local adapation with distilling: 0.0001
training loss: tensor(0.3082) feature loss: tensor(0.1664)
Global Model Acc on global data: 0.6646 length of data: 10000
-------------Round number:  79  -------------
selected users: [68, 18, 86, 60, 56, 32, 30, 24, 45, 92]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([46, 3, 32, 32]) torch.Size([46])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
all data: 487
Local adapation with distilling: 0.0001
training loss: tensor(0.2512) feature loss: tensor(0.1636)
Local adapation with distilling: 0.0001
training loss: tensor(0.2803) feature loss: tensor(0.1737)
Local adapation with distilling: 0.0001
training loss: tensor(0.2542) feature loss: tensor(0.1819)
Local adapation with distilling: 0.0001
training loss: tensor(0.2539) feature loss: tensor(0.1530)
Local adapation with distilling: 0.0001
training loss: tensor(0.3274) feature loss: tensor(0.1542)
Local adapation with distilling: 0.0001
training loss: tensor(0.3121) feature loss: tensor(0.1536)
Local adapation with distilling: 0.0001
training loss: tensor(0.2674) feature loss: tensor(0.1766)
Local adapation with distilling: 0.0001
training loss: tensor(0.2707) feature loss: tensor(0.1485)
Local adapation with distilling: 0.0001
training loss: tensor(0.2878) feature loss: tensor(0.1769)
Local adapation with distilling: 0.0001
training loss: tensor(0.3731) feature loss: tensor(0.1740)
Global Model Acc on global data: 0.662 length of data: 10000
-------------Round number:  80  -------------
selected users: [37, 65, 95, 53, 66, 30, 73, 85, 45, 36]
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([53, 3, 32, 32]) torch.Size([53])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
all data: 495
Local adapation with distilling: 0.0001
training loss: tensor(0.1842) feature loss: tensor(0.1378)
Local adapation with distilling: 0.0001
training loss: tensor(0.2779) feature loss: tensor(0.1393)
Local adapation with distilling: 0.0001
training loss: tensor(0.2084) feature loss: tensor(0.1325)
Local adapation with distilling: 0.0001
training loss: tensor(0.2381) feature loss: tensor(0.1344)
Local adapation with distilling: 0.0001
training loss: tensor(0.3925) feature loss: tensor(0.1210)
Local adapation with distilling: 0.0001
training loss: tensor(0.2100) feature loss: tensor(0.1233)
Local adapation with distilling: 0.0001
training loss: tensor(0.2624) feature loss: tensor(0.1391)
Local adapation with distilling: 0.0001
training loss: tensor(0.2038) feature loss: tensor(0.1190)
Local adapation with distilling: 0.0001
training loss: tensor(0.2173) feature loss: tensor(0.1287)
Local adapation with distilling: 0.0001
training loss: tensor(0.2368) feature loss: tensor(0.1338)
Global Model Acc on global data: 0.6672 length of data: 10000
save a model
-------------Round number:  81  -------------
selected users: [73, 89, 41, 78, 51, 21, 30, 69, 8, 5]
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
all data: 502
Local adapation with distilling: 0.0001
training loss: tensor(0.2704) feature loss: tensor(0.1248)
Local adapation with distilling: 0.0001
training loss: tensor(0.2161) feature loss: tensor(0.1274)
Local adapation with distilling: 0.0001
training loss: tensor(0.2000) feature loss: tensor(0.1251)
Local adapation with distilling: 0.0001
training loss: tensor(0.2596) feature loss: tensor(0.1265)
Local adapation with distilling: 0.0001
training loss: tensor(0.2972) feature loss: tensor(0.1318)
Local adapation with distilling: 0.0001
training loss: tensor(0.2824) feature loss: tensor(0.1267)
Local adapation with distilling: 0.0001
training loss: tensor(0.1972) feature loss: tensor(0.1176)
Local adapation with distilling: 0.0001
training loss: tensor(0.2043) feature loss: tensor(0.1240)
Local adapation with distilling: 0.0001
training loss: tensor(0.1924) feature loss: tensor(0.1217)
Local adapation with distilling: 0.0001
training loss: tensor(0.2129) feature loss: tensor(0.1240)
Global Model Acc on global data: 0.6603 length of data: 10000
-------------Round number:  82  -------------
selected users: [72, 33, 58, 2, 55, 84, 54, 75, 28, 40]
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([46, 3, 32, 32]) torch.Size([46])
random features: torch.Size([46, 3, 32, 32]) torch.Size([46])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
all data: 491
Local adapation with distilling: 0.0001
training loss: tensor(0.4751) feature loss: tensor(0.1643)
Local adapation with distilling: 0.0001
training loss: tensor(0.2693) feature loss: tensor(0.1757)
Local adapation with distilling: 0.0001
training loss: tensor(0.3241) feature loss: tensor(0.1710)
Local adapation with distilling: 0.0001
training loss: tensor(0.3295) feature loss: tensor(0.1706)
Local adapation with distilling: 0.0001
training loss: tensor(0.2816) feature loss: tensor(0.1543)
Local adapation with distilling: 0.0001
training loss: tensor(0.2770) feature loss: tensor(0.1515)
Local adapation with distilling: 0.0001
training loss: tensor(0.3662) feature loss: tensor(0.1592)
Local adapation with distilling: 0.0001
training loss: tensor(0.3509) feature loss: tensor(0.1496)
Local adapation with distilling: 0.0001
training loss: tensor(0.2722) feature loss: tensor(0.1711)
Local adapation with distilling: 0.0001
training loss: tensor(0.2406) feature loss: tensor(0.1523)
Global Model Acc on global data: 0.6606 length of data: 10000
-------------Round number:  83  -------------
selected users: [6, 65, 95, 84, 61, 12, 30, 69, 35, 1]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([46, 3, 32, 32]) torch.Size([46])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 495
Local adapation with distilling: 0.0001
training loss: tensor(0.2926) feature loss: tensor(0.1697)
Local adapation with distilling: 0.0001
training loss: tensor(0.3072) feature loss: tensor(0.1605)
Local adapation with distilling: 0.0001
training loss: tensor(0.2543) feature loss: tensor(0.1676)
Local adapation with distilling: 0.0001
training loss: tensor(0.2630) feature loss: tensor(0.1498)
Local adapation with distilling: 0.0001
training loss: tensor(0.3625) feature loss: tensor(0.1764)
Local adapation with distilling: 0.0001
training loss: tensor(0.4533) feature loss: tensor(0.1583)
Local adapation with distilling: 0.0001
training loss: tensor(0.2443) feature loss: tensor(0.1516)
Local adapation with distilling: 0.0001
training loss: tensor(0.2591) feature loss: tensor(0.1586)
Local adapation with distilling: 0.0001
training loss: tensor(0.3694) feature loss: tensor(0.1464)
Local adapation with distilling: 0.0001
training loss: tensor(0.3247) feature loss: tensor(0.1637)
Global Model Acc on global data: 0.6613 length of data: 10000
-------------Round number:  84  -------------
selected users: [94, 55, 80, 1, 90, 11, 32, 8, 6, 82]
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
all data: 497
Local adapation with distilling: 0.0001
training loss: tensor(0.2181) feature loss: tensor(0.1350)
Local adapation with distilling: 0.0001
training loss: tensor(0.2226) feature loss: tensor(0.1148)
Local adapation with distilling: 0.0001
training loss: tensor(0.2057) feature loss: tensor(0.1292)
Local adapation with distilling: 0.0001
training loss: tensor(0.2382) feature loss: tensor(0.1301)
Local adapation with distilling: 0.0001
training loss: tensor(0.2388) feature loss: tensor(0.1318)
Local adapation with distilling: 0.0001
training loss: tensor(0.2466) feature loss: tensor(0.1296)
Local adapation with distilling: 0.0001
training loss: tensor(0.2482) feature loss: tensor(0.1139)
Local adapation with distilling: 0.0001
training loss: tensor(0.1900) feature loss: tensor(0.1221)
Local adapation with distilling: 0.0001
training loss: tensor(0.2195) feature loss: tensor(0.1310)
Local adapation with distilling: 0.0001
training loss: tensor(0.2872) feature loss: tensor(0.1287)
Global Model Acc on global data: 0.6651 length of data: 10000
-------------Round number:  85  -------------
selected users: [81, 25, 40, 87, 41, 23, 10, 89, 50, 54]
random features: torch.Size([53, 3, 32, 32]) torch.Size([53])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([46, 3, 32, 32]) torch.Size([46])
random features: torch.Size([46, 3, 32, 32]) torch.Size([46])
all data: 489
Local adapation with distilling: 0.0001
training loss: tensor(0.2020) feature loss: tensor(0.1253)
Local adapation with distilling: 0.0001
training loss: tensor(0.2274) feature loss: tensor(0.1353)
Local adapation with distilling: 0.0001
training loss: tensor(0.1882) feature loss: tensor(0.1197)
Local adapation with distilling: 0.0001
training loss: tensor(0.2899) feature loss: tensor(0.1160)
Local adapation with distilling: 0.0001
training loss: tensor(0.1965) feature loss: tensor(0.1349)
Local adapation with distilling: 0.0001
training loss: tensor(0.2692) feature loss: tensor(0.1290)
Local adapation with distilling: 0.0001
training loss: tensor(0.2260) feature loss: tensor(0.1306)
Local adapation with distilling: 0.0001
training loss: tensor(0.2057) feature loss: tensor(0.1320)
Local adapation with distilling: 0.0001
training loss: tensor(0.2025) feature loss: tensor(0.1207)
Local adapation with distilling: 0.0001
training loss: tensor(0.2741) feature loss: tensor(0.1201)
Global Model Acc on global data: 0.6678 length of data: 10000
save a model
-------------Round number:  86  -------------
selected users: [69, 74, 34, 68, 42, 0, 32, 88, 8, 3]
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([46, 3, 32, 32]) torch.Size([46])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
all data: 494
Local adapation with distilling: 0.0001
training loss: tensor(0.1807) feature loss: tensor(0.1144)
Local adapation with distilling: 0.0001
training loss: tensor(0.2134) feature loss: tensor(0.1184)
Local adapation with distilling: 0.0001
training loss: tensor(0.2166) feature loss: tensor(0.1105)
Local adapation with distilling: 0.0001
training loss: tensor(0.1822) feature loss: tensor(0.1043)
Local adapation with distilling: 0.0001
training loss: tensor(0.1859) feature loss: tensor(0.1239)
Local adapation with distilling: 0.0001
training loss: tensor(0.2043) feature loss: tensor(0.1203)
Local adapation with distilling: 0.0001
training loss: tensor(0.1996) feature loss: tensor(0.1058)
Local adapation with distilling: 0.0001
training loss: tensor(0.2111) feature loss: tensor(0.1198)
Local adapation with distilling: 0.0001
training loss: tensor(0.1627) feature loss: tensor(0.1173)
Local adapation with distilling: 0.0001
training loss: tensor(0.2102) feature loss: tensor(0.1217)
Global Model Acc on global data: 0.6667 length of data: 10000
-------------Round number:  87  -------------
selected users: [16, 81, 85, 32, 39, 25, 26, 29, 65, 7]
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([53, 3, 32, 32]) torch.Size([53])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
all data: 501
Local adapation with distilling: 0.0001
training loss: tensor(0.2034) feature loss: tensor(0.1080)
Local adapation with distilling: 0.0001
training loss: tensor(0.1797) feature loss: tensor(0.1249)
Local adapation with distilling: 0.0001
training loss: tensor(0.1772) feature loss: tensor(0.1077)
Local adapation with distilling: 0.0001
training loss: tensor(0.1881) feature loss: tensor(0.1074)
Local adapation with distilling: 0.0001
training loss: tensor(0.2043) feature loss: tensor(0.1159)
Local adapation with distilling: 0.0001
training loss: tensor(0.1922) feature loss: tensor(0.1212)
Local adapation with distilling: 0.0001
training loss: tensor(0.5574) feature loss: tensor(0.1300)
Local adapation with distilling: 0.0001
training loss: tensor(0.3059) feature loss: tensor(0.1246)
Local adapation with distilling: 0.0001
training loss: tensor(0.2087) feature loss: tensor(0.1183)
Local adapation with distilling: 0.0001
training loss: tensor(0.2193) feature loss: tensor(0.1214)
Global Model Acc on global data: 0.6627 length of data: 10000
-------------Round number:  88  -------------
selected users: [95, 53, 43, 84, 2, 74, 55, 31, 54, 97]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([53, 3, 32, 32]) torch.Size([53])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([46, 3, 32, 32]) torch.Size([46])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([46, 3, 32, 32]) torch.Size([46])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
all data: 495
Local adapation with distilling: 0.0001
training loss: tensor(0.1988) feature loss: tensor(0.1363)
Local adapation with distilling: 0.0001
training loss: tensor(0.2194) feature loss: tensor(0.1424)
Local adapation with distilling: 0.0001
training loss: tensor(0.2157) feature loss: tensor(0.1395)
Local adapation with distilling: 0.0001
training loss: tensor(0.2071) feature loss: tensor(0.1222)
Local adapation with distilling: 0.0001
training loss: tensor(0.2152) feature loss: tensor(0.1224)
Local adapation with distilling: 0.0001
training loss: tensor(0.2178) feature loss: tensor(0.1314)
Local adapation with distilling: 0.0001
training loss: tensor(0.2070) feature loss: tensor(0.1163)
Local adapation with distilling: 0.0001
training loss: tensor(0.2135) feature loss: tensor(0.1316)
Local adapation with distilling: 0.0001
training loss: tensor(0.2653) feature loss: tensor(0.1226)
Local adapation with distilling: 0.0001
training loss: tensor(0.2450) feature loss: tensor(0.1243)
Global Model Acc on global data: 0.6621 length of data: 10000
-------------Round number:  89  -------------
selected users: [65, 21, 87, 6, 46, 74, 44, 60, 72, 5]
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
all data: 494
Local adapation with distilling: 0.0001
training loss: tensor(0.2022) feature loss: tensor(0.1264)
Local adapation with distilling: 0.0001
training loss: tensor(0.2725) feature loss: tensor(0.1238)
Local adapation with distilling: 0.0001
training loss: tensor(0.2605) feature loss: tensor(0.1085)
Local adapation with distilling: 0.0001
training loss: tensor(0.2045) feature loss: tensor(0.1243)
Local adapation with distilling: 0.0001
training loss: tensor(0.2433) feature loss: tensor(0.1345)
Local adapation with distilling: 0.0001
training loss: tensor(0.1997) feature loss: tensor(0.1189)
Local adapation with distilling: 0.0001
training loss: tensor(0.2095) feature loss: tensor(0.1183)
Local adapation with distilling: 0.0001
training loss: tensor(0.2003) feature loss: tensor(0.1082)
Local adapation with distilling: 0.0001
training loss: tensor(0.3334) feature loss: tensor(0.1277)
Local adapation with distilling: 0.0001
training loss: tensor(0.2389) feature loss: tensor(0.1249)
Global Model Acc on global data: 0.6617 length of data: 10000
-------------Round number:  90  -------------
selected users: [25, 85, 96, 89, 65, 94, 5, 35, 36, 92]
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
all data: 496
Local adapation with distilling: 0.0001
training loss: tensor(0.1939) feature loss: tensor(0.1285)
Local adapation with distilling: 0.0001
training loss: tensor(0.1818) feature loss: tensor(0.1085)
Local adapation with distilling: 0.0001
training loss: tensor(0.2593) feature loss: tensor(0.1299)
Local adapation with distilling: 0.0001
training loss: tensor(0.1968) feature loss: tensor(0.1313)
Local adapation with distilling: 0.0001
training loss: tensor(0.1900) feature loss: tensor(0.1154)
Local adapation with distilling: 0.0001
training loss: tensor(0.1891) feature loss: tensor(0.1229)
Local adapation with distilling: 0.0001
training loss: tensor(0.1878) feature loss: tensor(0.1268)
Local adapation with distilling: 0.0001
training loss: tensor(0.2639) feature loss: tensor(0.1132)
Local adapation with distilling: 0.0001
training loss: tensor(0.2187) feature loss: tensor(0.1263)
Local adapation with distilling: 0.0001
training loss: tensor(0.2831) feature loss: tensor(0.1273)
Global Model Acc on global data: 0.6611 length of data: 10000
-------------Round number:  91  -------------
selected users: [75, 25, 3, 52, 78, 54, 59, 26, 62, 97]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([53, 3, 32, 32]) torch.Size([53])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([46, 3, 32, 32]) torch.Size([46])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
all data: 497
Local adapation with distilling: 0.0001
training loss: tensor(0.2857) feature loss: tensor(0.1159)
Local adapation with distilling: 0.0001
training loss: tensor(0.2088) feature loss: tensor(0.1322)
Local adapation with distilling: 0.0001
training loss: tensor(0.2350) feature loss: tensor(0.1299)
Local adapation with distilling: 0.0001
training loss: tensor(0.2365) feature loss: tensor(0.1330)
Local adapation with distilling: 0.0001
training loss: tensor(0.2466) feature loss: tensor(0.1335)
Local adapation with distilling: 0.0001
training loss: tensor(0.2609) feature loss: tensor(0.1153)
Local adapation with distilling: 0.0001
training loss: tensor(0.5954) feature loss: tensor(0.1345)
Local adapation with distilling: 0.0001
training loss: tensor(0.5711) feature loss: tensor(0.1372)
Local adapation with distilling: 0.0001
training loss: tensor(0.2568) feature loss: tensor(0.1335)
Local adapation with distilling: 0.0001
training loss: tensor(0.2422) feature loss: tensor(0.1222)
Global Model Acc on global data: 0.662 length of data: 10000
-------------Round number:  92  -------------
selected users: [25, 99, 73, 61, 66, 36, 23, 83, 77, 6]
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([57, 3, 32, 32]) torch.Size([57])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 499
Local adapation with distilling: 0.0001
training loss: tensor(0.2316) feature loss: tensor(0.1462)
Local adapation with distilling: 0.0001
training loss: tensor(0.2927) feature loss: tensor(0.1490)
Local adapation with distilling: 0.0001
training loss: tensor(0.2645) feature loss: tensor(0.1429)
Local adapation with distilling: 0.0001
training loss: tensor(0.3076) feature loss: tensor(0.1522)
Local adapation with distilling: 0.0001
training loss: tensor(0.3760) feature loss: tensor(0.1364)
Local adapation with distilling: 0.0001
training loss: tensor(0.2559) feature loss: tensor(0.1444)
Local adapation with distilling: 0.0001
training loss: tensor(0.2930) feature loss: tensor(0.1538)
Local adapation with distilling: 0.0001
training loss: tensor(0.2915) feature loss: tensor(0.1548)
Local adapation with distilling: 0.0001
training loss: tensor(0.4444) feature loss: tensor(0.1385)
Local adapation with distilling: 0.0001
training loss: tensor(0.2491) feature loss: tensor(0.1465)
Global Model Acc on global data: 0.6614 length of data: 10000
-------------Round number:  93  -------------
selected users: [75, 82, 56, 27, 42, 35, 1, 97, 66, 61]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
all data: 493
Local adapation with distilling: 0.0001
training loss: tensor(0.2792) feature loss: tensor(0.1426)
Local adapation with distilling: 0.0001
training loss: tensor(0.3129) feature loss: tensor(0.1601)
Local adapation with distilling: 0.0001
training loss: tensor(0.3019) feature loss: tensor(0.1413)
Local adapation with distilling: 0.0001
training loss: tensor(0.2693) feature loss: tensor(0.1531)
Local adapation with distilling: 0.0001
training loss: tensor(0.2517) feature loss: tensor(0.1640)
Local adapation with distilling: 0.0001
training loss: tensor(0.2978) feature loss: tensor(0.1433)
Local adapation with distilling: 0.0001
training loss: tensor(0.2850) feature loss: tensor(0.1689)
Local adapation with distilling: 0.0001
training loss: tensor(0.2663) feature loss: tensor(0.1471)
Local adapation with distilling: 0.0001
training loss: tensor(0.3235) feature loss: tensor(0.1451)
Local adapation with distilling: 0.0001
training loss: tensor(0.2880) feature loss: tensor(0.1680)
Global Model Acc on global data: 0.6614 length of data: 10000
-------------Round number:  94  -------------
selected users: [13, 73, 5, 18, 99, 48, 23, 4, 35, 17]
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
all data: 495
Local adapation with distilling: 0.0001
training loss: tensor(0.3586) feature loss: tensor(0.1258)
Local adapation with distilling: 0.0001
training loss: tensor(0.2842) feature loss: tensor(0.1336)
Local adapation with distilling: 0.0001
training loss: tensor(0.2633) feature loss: tensor(0.1390)
Local adapation with distilling: 0.0001
training loss: tensor(0.2608) feature loss: tensor(0.1356)
Local adapation with distilling: 0.0001
training loss: tensor(0.2591) feature loss: tensor(0.1411)
Local adapation with distilling: 0.0001
training loss: tensor(0.2681) feature loss: tensor(0.1393)
Local adapation with distilling: 0.0001
training loss: tensor(0.2507) feature loss: tensor(0.1464)
Local adapation with distilling: 0.0001
training loss: tensor(0.2693) feature loss: tensor(0.1476)
Local adapation with distilling: 0.0001
training loss: tensor(0.2434) feature loss: tensor(0.1359)
Local adapation with distilling: 0.0001
training loss: tensor(0.2202) feature loss: tensor(0.1301)
Global Model Acc on global data: 0.6634 length of data: 10000
-------------Round number:  95  -------------
selected users: [88, 9, 1, 60, 95, 26, 45, 71, 44, 21]
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 495
Local adapation with distilling: 0.0001
training loss: tensor(0.1965) feature loss: tensor(0.1128)
Local adapation with distilling: 0.0001
training loss: tensor(0.2142) feature loss: tensor(0.1134)
Local adapation with distilling: 0.0001
training loss: tensor(0.1858) feature loss: tensor(0.1057)
Local adapation with distilling: 0.0001
training loss: tensor(0.1701) feature loss: tensor(0.0983)
Local adapation with distilling: 0.0001
training loss: tensor(0.1702) feature loss: tensor(0.1138)
Local adapation with distilling: 0.0001
training loss: tensor(0.4377) feature loss: tensor(0.1127)
Local adapation with distilling: 0.0001
training loss: tensor(0.1915) feature loss: tensor(0.1051)
Local adapation with distilling: 0.0001
training loss: tensor(0.1758) feature loss: tensor(0.1047)
Local adapation with distilling: 0.0001
training loss: tensor(0.1761) feature loss: tensor(0.1070)
Local adapation with distilling: 0.0001
training loss: tensor(0.2080) feature loss: tensor(0.1137)
Global Model Acc on global data: 0.6637 length of data: 10000
-------------Round number:  96  -------------
selected users: [41, 28, 52, 15, 87, 17, 75, 42, 45, 49]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([53, 3, 32, 32]) torch.Size([53])
random features: torch.Size([53, 3, 32, 32]) torch.Size([53])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 499
Local adapation with distilling: 0.0001
training loss: tensor(0.1844) feature loss: tensor(0.1308)
Local adapation with distilling: 0.0001
training loss: tensor(0.2208) feature loss: tensor(0.1238)
Local adapation with distilling: 0.0001
training loss: tensor(0.1957) feature loss: tensor(0.1229)
Local adapation with distilling: 0.0001
training loss: tensor(0.2336) feature loss: tensor(0.1291)
Local adapation with distilling: 0.0001
training loss: tensor(0.2371) feature loss: tensor(0.1221)
Local adapation with distilling: 0.0001
training loss: tensor(0.1781) feature loss: tensor(0.1112)
Local adapation with distilling: 0.0001
training loss: tensor(0.2250) feature loss: tensor(0.1153)
Local adapation with distilling: 0.0001
training loss: tensor(0.1880) feature loss: tensor(0.1272)
Local adapation with distilling: 0.0001
training loss: tensor(0.1978) feature loss: tensor(0.1154)
Local adapation with distilling: 0.0001
training loss: tensor(0.2312) feature loss: tensor(0.1213)
Global Model Acc on global data: 0.6654 length of data: 10000
-------------Round number:  97  -------------
selected users: [31, 43, 64, 56, 85, 2, 70, 21, 34, 50]
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([46, 3, 32, 32]) torch.Size([46])
random features: torch.Size([46, 3, 32, 32]) torch.Size([46])
all data: 489
Local adapation with distilling: 0.0001
training loss: tensor(0.2070) feature loss: tensor(0.1327)
Local adapation with distilling: 0.0001
training loss: tensor(0.2221) feature loss: tensor(0.1258)
Local adapation with distilling: 0.0001
training loss: tensor(0.2249) feature loss: tensor(0.1195)
Local adapation with distilling: 0.0001
training loss: tensor(0.2444) feature loss: tensor(0.1195)
Local adapation with distilling: 0.0001
training loss: tensor(0.1782) feature loss: tensor(0.1131)
Local adapation with distilling: 0.0001
training loss: tensor(0.2195) feature loss: tensor(0.1227)
Local adapation with distilling: 0.0001
training loss: tensor(0.1998) feature loss: tensor(0.1343)
Local adapation with distilling: 0.0001
training loss: tensor(0.2290) feature loss: tensor(0.1225)
Local adapation with distilling: 0.0001
training loss: tensor(0.2120) feature loss: tensor(0.1222)
Local adapation with distilling: 0.0001
training loss: tensor(0.2027) feature loss: tensor(0.1147)
Global Model Acc on global data: 0.6668 length of data: 10000
-------------Round number:  98  -------------
selected users: [11, 48, 97, 14, 22, 36, 99, 47, 33, 81]
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([53, 3, 32, 32]) torch.Size([53])
all data: 496
Local adapation with distilling: 0.0001
training loss: tensor(0.2385) feature loss: tensor(0.1202)
Local adapation with distilling: 0.0001
training loss: tensor(0.1937) feature loss: tensor(0.1079)
Local adapation with distilling: 0.0001
training loss: tensor(0.1787) feature loss: tensor(0.1032)
Local adapation with distilling: 0.0001
training loss: tensor(0.2258) feature loss: tensor(0.1099)
Local adapation with distilling: 0.0001
training loss: tensor(0.1918) feature loss: tensor(0.1166)
Local adapation with distilling: 0.0001
training loss: tensor(0.1964) feature loss: tensor(0.1116)
Local adapation with distilling: 0.0001
training loss: tensor(0.2061) feature loss: tensor(0.1218)
Local adapation with distilling: 0.0001
training loss: tensor(0.2834) feature loss: tensor(0.1111)
Local adapation with distilling: 0.0001
training loss: tensor(0.2160) feature loss: tensor(0.1182)
Local adapation with distilling: 0.0001
training loss: tensor(0.1735) feature loss: tensor(0.1119)
Global Model Acc on global data: 0.669 length of data: 10000
save a model
-------------Round number:  99  -------------
selected users: [14, 34, 30, 78, 16, 15, 91, 38, 10, 85]
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([46, 3, 32, 32]) torch.Size([46])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([53, 3, 32, 32]) torch.Size([53])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
all data: 491
Local adapation with distilling: 0.0001
training loss: tensor(0.1681) feature loss: tensor(0.1122)
Local adapation with distilling: 0.0001
training loss: tensor(0.1549) feature loss: tensor(0.0988)
Local adapation with distilling: 0.0001
training loss: tensor(0.1458) feature loss: tensor(0.1015)
Local adapation with distilling: 0.0001
training loss: tensor(0.1625) feature loss: tensor(0.1091)
Local adapation with distilling: 0.0001
training loss: tensor(0.1678) feature loss: tensor(0.0922)
Local adapation with distilling: 0.0001
training loss: tensor(0.1614) feature loss: tensor(0.1078)
Local adapation with distilling: 0.0001
training loss: tensor(0.1696) feature loss: tensor(0.1124)
Local adapation with distilling: 0.0001
training loss: tensor(0.1412) feature loss: tensor(0.0966)
Local adapation with distilling: 0.0001
training loss: tensor(0.1634) feature loss: tensor(0.1043)
Local adapation with distilling: 0.0001
training loss: tensor(0.1309) feature loss: tensor(0.0916)
Global Model Acc on global data: 0.6654 length of data: 10000
================================================================================
Summary of training process:
Dataset                : Cifar10
Batch size             : 64
Learing rate           : 0.001
Number of total clients: 100
Split method           : quantity
Split parameter        : 5.0
Clients per round      : 10
Number of global rounds: 100
Number of local rounds : 10
Feature from layer     : 0
Feature percentage     : 0.1
Local training loss    : CE_CE_KL
Loss of beta           : 1.0
Algorithm              : FedFea
Modelname              : MOBNET
Mode                   : training
Seed                   : 0
================================================================================
Files already downloaded and verified
Files already downloaded and verified
Class frequencies:
client,class0,class1,class2,class3,class4,class5,class6,class7,class8,class9,Amount
Client   0,0.158,0.219,0.00,0.00,0.00,0.215,0.00,0.00,0.198,0.210,520
Client   1,0.00,0.224,0.194,0.00,0.00,0.00,0.177,0.191,0.00,0.214,509
Client   2,0.00,0.00,0.191,0.00,0.193,0.217,0.00,0.188,0.00,0.211,517
Client   3,0.167,0.232,0.00,0.222,0.00,0.00,0.183,0.197,0.00,0.00,492
Client   4,0.00,0.224,0.00,0.00,0.196,0.00,0.176,0.190,0.00,0.214,510
Client   5,0.158,0.219,0.00,0.210,0.00,0.215,0.00,0.00,0.198,0.00,520
Client   6,0.00,0.00,0.00,0.215,0.00,0.00,0.178,0.191,0.201,0.215,507
Client   7,0.00,0.218,0.00,0.00,0.00,0.215,0.172,0.186,0.00,0.209,522
Client   8,0.162,0.225,0.00,0.215,0.197,0.00,0.00,0.00,0.201,0.00,507
Client   9,0.165,0.00,0.197,0.219,0.201,0.00,0.00,0.00,0.00,0.219,498
Client  10,0.168,0.00,0.201,0.00,0.00,0.00,0.00,0.199,0.209,0.223,488
Client  11,0.00,0.220,0.00,0.210,0.00,0.00,0.173,0.187,0.00,0.210,519
Client  12,0.00,0.00,0.190,0.00,0.194,0.217,0.00,0.186,0.00,0.212,515
Client  13,0.170,0.00,0.204,0.227,0.00,0.00,0.187,0.00,0.212,0.00,481
Client  14,0.165,0.00,0.00,0.220,0.202,0.00,0.00,0.194,0.00,0.220,496
Client  15,0.00,0.214,0.00,0.205,0.00,0.209,0.00,0.180,0.192,0.00,532
Client  16,0.169,0.00,0.00,0.00,0.206,0.229,0.186,0.00,0.210,0.00,485
Client  17,0.00,0.00,0.197,0.00,0.00,0.223,0.181,0.193,0.205,0.00,497
Client  18,0.168,0.00,0.00,0.00,0.204,0.00,0.00,0.196,0.209,0.223,489
Client  19,0.164,0.228,0.196,0.00,0.00,0.00,0.00,0.192,0.00,0.218,499
Client  20,0.168,0.00,0.00,0.00,0.204,0.00,0.00,0.196,0.209,0.223,489
Client  21,0.162,0.226,0.194,0.00,0.00,0.00,0.00,0.00,0.202,0.216,505
Client  22,0.00,0.225,0.193,0.215,0.00,0.00,0.178,0.189,0.00,0.00,507
Client  23,0.168,0.00,0.201,0.223,0.00,0.00,0.184,0.00,0.00,0.223,488
Client  24,0.176,0.00,0.210,0.00,0.215,0.00,0.193,0.206,0.00,0.00,466
Client  25,0.165,0.229,0.00,0.00,0.201,0.223,0.181,0.00,0.00,0.00,497
Client  26,0.00,0.222,0.191,0.00,0.195,0.216,0.175,0.00,0.00,0.00,513
Client  27,0.164,0.00,0.00,0.00,0.00,0.222,0.00,0.192,0.204,0.218,500
Client  28,0.165,0.00,0.00,0.219,0.00,0.00,0.00,0.193,0.205,0.219,498
Client  29,0.00,0.221,0.00,0.00,0.194,0.00,0.175,0.00,0.198,0.212,515
Client  30,0.168,0.00,0.201,0.00,0.00,0.00,0.00,0.197,0.209,0.224,487
Client  31,0.00,0.218,0.00,0.00,0.191,0.212,0.00,0.184,0.195,0.00,523
Client  32,0.164,0.00,0.196,0.218,0.200,0.222,0.00,0.00,0.00,0.00,500
Client  33,0.163,0.227,0.195,0.217,0.199,0.00,0.00,0.00,0.00,0.00,503
Client  34,0.176,0.00,0.210,0.00,0.215,0.00,0.193,0.206,0.00,0.00,466
Client  35,0.163,0.00,0.00,0.216,0.198,0.220,0.00,0.00,0.202,0.00,504
Client  36,0.168,0.00,0.201,0.224,0.00,0.00,0.183,0.00,0.00,0.224,487
Client  37,0.00,0.219,0.00,0.209,0.192,0.00,0.00,0.184,0.196,0.00,521
Client  38,0.00,0.00,0.00,0.215,0.00,0.219,0.176,0.189,0.201,0.00,507
Client  39,0.165,0.00,0.197,0.219,0.201,0.00,0.00,0.00,0.00,0.219,498
Client  40,0.166,0.00,0.00,0.221,0.00,0.225,0.181,0.00,0.207,0.00,493
Client  41,0.164,0.228,0.196,0.00,0.00,0.222,0.00,0.192,0.00,0.00,501
Client  42,0.165,0.230,0.198,0.00,0.202,0.00,0.00,0.00,0.206,0.00,496
Client  43,0.00,0.224,0.00,0.215,0.197,0.00,0.175,0.189,0.00,0.00,508
Client  44,0.172,0.00,0.205,0.00,0.209,0.00,0.186,0.00,0.00,0.228,478
Client  45,0.168,0.00,0.00,0.00,0.00,0.228,0.183,0.197,0.00,0.224,487
Client  46,0.168,0.00,0.00,0.223,0.204,0.00,0.182,0.00,0.00,0.223,489
Client  47,0.164,0.00,0.00,0.218,0.00,0.222,0.00,0.192,0.204,0.00,500
Client  48,0.00,0.00,0.00,0.00,0.00,0.219,0.176,0.189,0.201,0.215,507
Client  49,0.00,0.00,0.193,0.00,0.197,0.219,0.176,0.00,0.00,0.215,507
Client  50,0.176,0.00,0.210,0.00,0.00,0.00,0.191,0.206,0.218,0.00,467
Client  51,0.166,0.231,0.198,0.00,0.00,0.225,0.180,0.00,0.00,0.00,494
Client  52,0.00,0.213,0.184,0.00,0.00,0.208,0.00,0.00,0.191,0.204,534
Client  53,0.00,0.215,0.185,0.206,0.189,0.00,0.00,0.00,0.00,0.206,530
Client  54,0.176,0.00,0.211,0.00,0.215,0.00,0.191,0.206,0.00,0.00,465
Client  55,0.00,0.00,0.00,0.216,0.198,0.220,0.176,0.190,0.00,0.00,505
Client  56,0.172,0.00,0.00,0.229,0.210,0.00,0.187,0.202,0.00,0.00,476
Client  57,0.00,0.00,0.195,0.00,0.00,0.221,0.177,0.191,0.00,0.217,503
Client  58,0.00,0.00,0.197,0.00,0.201,0.00,0.179,0.00,0.205,0.219,498
Client  59,0.160,0.222,0.00,0.212,0.195,0.00,0.00,0.00,0.00,0.212,514
Client  60,0.166,0.00,0.199,0.00,0.203,0.225,0.00,0.00,0.207,0.00,493
Client  61,0.00,0.216,0.185,0.206,0.189,0.00,0.00,0.00,0.00,0.204,529
Client  62,0.00,0.227,0.195,0.00,0.199,0.00,0.177,0.00,0.203,0.00,503
Client  63,0.165,0.00,0.00,0.219,0.00,0.00,0.00,0.193,0.205,0.217,497
Client  64,0.166,0.00,0.199,0.00,0.203,0.225,0.00,0.00,0.207,0.00,493
Client  65,0.167,0.00,0.00,0.00,0.00,0.226,0.181,0.00,0.207,0.220,492
Client  66,0.172,0.00,0.00,0.229,0.210,0.00,0.187,0.202,0.00,0.00,476
Client  67,0.170,0.237,0.00,0.00,0.208,0.00,0.185,0.200,0.00,0.00,481
Client  68,0.00,0.00,0.196,0.00,0.200,0.222,0.178,0.00,0.204,0.00,500
Client  69,0.166,0.00,0.198,0.00,0.00,0.224,0.00,0.194,0.00,0.218,495
Client  70,0.167,0.230,0.200,0.00,0.00,0.00,0.00,0.196,0.208,0.00,491
Client  71,0.00,0.217,0.00,0.00,0.192,0.213,0.171,0.00,0.00,0.207,521
Client  72,0.00,0.00,0.190,0.00,0.00,0.216,0.00,0.186,0.198,0.210,515
Client  73,0.159,0.219,0.00,0.211,0.00,0.215,0.00,0.00,0.197,0.00,517
Client  74,0.164,0.00,0.00,0.218,0.200,0.00,0.00,0.00,0.204,0.216,501
Client  75,0.00,0.00,0.194,0.213,0.198,0.219,0.176,0.00,0.00,0.00,506
Client  76,0.171,0.00,0.204,0.00,0.208,0.231,0.185,0.00,0.00,0.00,480
Client  77,0.164,0.00,0.00,0.216,0.00,0.222,0.00,0.192,0.204,0.00,499
Client  78,0.00,0.218,0.00,0.208,0.193,0.00,0.00,0.185,0.197,0.00,519
Client  79,0.169,0.00,0.202,0.223,0.00,0.00,0.184,0.00,0.00,0.223,485
Client  80,0.165,0.227,0.00,0.00,0.00,0.223,0.179,0.00,0.205,0.00,497
Client  81,0.00,0.213,0.00,0.00,0.00,0.209,0.00,0.181,0.192,0.204,530
Client  82,0.00,0.219,0.190,0.209,0.00,0.00,0.172,0.00,0.00,0.209,516
Client  83,0.160,0.221,0.191,0.211,0.00,0.217,0.00,0.00,0.00,0.00,512
Client  84,0.176,0.00,0.211,0.00,0.215,0.00,0.191,0.206,0.00,0.00,465
Client  85,0.00,0.00,0.00,0.00,0.201,0.223,0.179,0.193,0.205,0.00,498
Client  86,0.00,0.222,0.00,0.213,0.00,0.00,0.175,0.189,0.201,0.00,508
Client  87,0.169,0.00,0.00,0.222,0.00,0.228,0.183,0.198,0.00,0.00,486
Client  88,0.00,0.00,0.197,0.00,0.201,0.00,0.179,0.00,0.205,0.217,497
Client  89,0.00,0.214,0.186,0.205,0.190,0.00,0.00,0.00,0.00,0.205,527
Client  90,0.170,0.00,0.00,0.224,0.00,0.00,0.184,0.199,0.00,0.224,483
Client  91,0.166,0.229,0.00,0.219,0.00,0.00,0.180,0.00,0.206,0.00,494
Client  92,0.00,0.218,0.189,0.208,0.00,0.214,0.171,0.00,0.00,0.00,519
Client  93,0.00,0.00,0.199,0.219,0.00,0.00,0.181,0.195,0.207,0.00,493
Client  94,0.169,0.233,0.00,0.00,0.206,0.00,0.183,0.00,0.210,0.00,486
Client  95,0.164,0.226,0.196,0.00,0.00,0.222,0.00,0.192,0.00,0.00,500
Client  96,0.171,0.235,0.00,0.00,0.208,0.00,0.185,0.200,0.00,0.00,480
Client  97,0.169,0.00,0.00,0.00,0.00,0.232,0.186,0.200,0.213,0.00,479
Client  98,0.00,0.00,0.189,0.208,0.193,0.214,0.00,0.00,0.197,0.00,519
Client  99,0.166,0.231,0.200,0.00,0.00,0.00,0.182,0.00,0.00,0.221,489
0 [0 1 5 8 9] [0 1 5 8 9] [2 3 4 6 7]
0 training: Counter({1: 114, 5: 112, 9: 109, 8: 103, 0: 82}) testing iid: Counter({8: 1000, 0: 1000, 1: 1000, 9: 1000, 5: 1000})
1 [1 2 6 7 9] [1 2 6 7 9] [0 3 4 5 8]
1 training: Counter({1: 114, 9: 109, 2: 99, 7: 97, 6: 90}) testing iid: Counter({6: 1000, 1: 1000, 9: 1000, 7: 1000, 2: 1000})
2 [2 4 5 7 9] [2 4 5 7 9] [0 1 3 6 8]
2 training: Counter({5: 112, 9: 109, 4: 100, 2: 99, 7: 97}) testing iid: Counter({9: 1000, 5: 1000, 7: 1000, 4: 1000, 2: 1000})
3 [0 1 3 6 7] [0 1 3 6 7] [2 4 5 8 9]
3 training: Counter({1: 114, 3: 109, 7: 97, 6: 90, 0: 82}) testing iid: Counter({3: 1000, 0: 1000, 6: 1000, 1: 1000, 7: 1000})
4 [1 4 6 7 9] [1 4 6 7 9] [0 2 3 5 8]
4 training: Counter({1: 114, 9: 109, 4: 100, 7: 97, 6: 90}) testing iid: Counter({6: 1000, 1: 1000, 9: 1000, 7: 1000, 4: 1000})
5 [0 1 3 5 8] [0 1 3 5 8] [2 4 6 7 9]
5 training: Counter({1: 114, 5: 112, 3: 109, 8: 103, 0: 82}) testing iid: Counter({3: 1000, 8: 1000, 0: 1000, 1: 1000, 5: 1000})
6 [3 6 7 8 9] [3 6 7 8 9] [0 1 2 4 5]
6 training: Counter({3: 109, 9: 109, 8: 102, 7: 97, 6: 90}) testing iid: Counter({3: 1000, 8: 1000, 6: 1000, 9: 1000, 7: 1000})
7 [1 5 6 7 9] [1 5 6 7 9] [0 2 3 4 8]
7 training: Counter({1: 114, 5: 112, 9: 109, 7: 97, 6: 90}) testing iid: Counter({6: 1000, 1: 1000, 9: 1000, 5: 1000, 7: 1000})
8 [0 1 3 4 8] [0 1 3 4 8] [2 5 6 7 9]
8 training: Counter({1: 114, 3: 109, 8: 102, 4: 100, 0: 82}) testing iid: Counter({3: 1000, 8: 1000, 0: 1000, 1: 1000, 4: 1000})
9 [0 2 3 4 9] [0 2 3 4 9] [1 5 6 7 8]
9 training: Counter({3: 109, 9: 109, 4: 100, 2: 98, 0: 82}) testing iid: Counter({3: 1000, 0: 1000, 9: 1000, 4: 1000, 2: 1000})
10 [0 2 7 8 9] [0 2 7 8 9] [1 3 4 5 6]
10 training: Counter({9: 109, 8: 102, 2: 98, 7: 97, 0: 82}) testing iid: Counter({8: 1000, 0: 1000, 9: 1000, 7: 1000, 2: 1000})
11 [1 3 6 7 9] [1 3 6 7 9] [0 2 4 5 8]
11 training: Counter({1: 114, 3: 109, 9: 109, 7: 97, 6: 90}) testing iid: Counter({3: 1000, 6: 1000, 1: 1000, 9: 1000, 7: 1000})
12 [2 4 5 7 9] [2 4 5 7 9] [0 1 3 6 8]
12 training: Counter({5: 112, 9: 109, 4: 100, 2: 98, 7: 96}) testing iid: Counter({9: 1000, 5: 1000, 7: 1000, 4: 1000, 2: 1000})
13 [0 2 3 6 8] [0 2 3 6 8] [1 4 5 7 9]
13 training: Counter({3: 109, 8: 102, 2: 98, 6: 90, 0: 82}) testing iid: Counter({3: 1000, 8: 1000, 0: 1000, 6: 1000, 2: 1000})
14 [0 3 4 7 9] [0 3 4 7 9] [1 2 5 6 8]
14 training: Counter({3: 109, 9: 109, 4: 100, 7: 96, 0: 82}) testing iid: Counter({3: 1000, 0: 1000, 9: 1000, 7: 1000, 4: 1000})
15 [1 3 5 7 8] [1 3 5 7 8] [0 2 4 6 9]
15 training: Counter({1: 114, 5: 111, 3: 109, 8: 102, 7: 96}) testing iid: Counter({3: 1000, 8: 1000, 1: 1000, 5: 1000, 7: 1000})
16 [0 4 5 6 8] [0 4 5 6 8] [1 2 3 7 9]
16 training: Counter({5: 111, 8: 102, 4: 100, 6: 90, 0: 82}) testing iid: Counter({8: 1000, 0: 1000, 6: 1000, 5: 1000, 4: 1000})
17 [2 5 6 7 8] [2 5 6 7 8] [0 1 3 4 9]
17 training: Counter({5: 111, 8: 102, 2: 98, 7: 96, 6: 90}) testing iid: Counter({8: 1000, 6: 1000, 5: 1000, 7: 1000, 2: 1000})
18 [0 4 7 8 9] [0 4 7 8 9] [1 2 3 5 6]
18 training: Counter({9: 109, 8: 102, 4: 100, 7: 96, 0: 82}) testing iid: Counter({8: 1000, 0: 1000, 9: 1000, 7: 1000, 4: 1000})
19 [0 1 2 7 9] [0 1 2 7 9] [3 4 5 6 8]
19 training: Counter({1: 114, 9: 109, 2: 98, 7: 96, 0: 82}) testing iid: Counter({0: 1000, 1: 1000, 9: 1000, 7: 1000, 2: 1000})
20 [0 4 7 8 9] [0 4 7 8 9] [1 2 3 5 6]
20 training: Counter({9: 109, 8: 102, 4: 100, 7: 96, 0: 82}) testing iid: Counter({8: 1000, 0: 1000, 9: 1000, 7: 1000, 4: 1000})
21 [0 1 2 8 9] [0 1 2 8 9] [3 4 5 6 7]
21 training: Counter({1: 114, 9: 109, 8: 102, 2: 98, 0: 82}) testing iid: Counter({8: 1000, 0: 1000, 1: 1000, 9: 1000, 2: 1000})
22 [1 2 3 6 7] [1 2 3 6 7] [0 4 5 8 9]
22 training: Counter({1: 114, 3: 109, 2: 98, 7: 96, 6: 90}) testing iid: Counter({3: 1000, 6: 1000, 1: 1000, 7: 1000, 2: 1000})
23 [0 2 3 6 9] [0 2 3 6 9] [1 4 5 7 8]
23 training: Counter({3: 109, 9: 109, 2: 98, 6: 90, 0: 82}) testing iid: Counter({3: 1000, 0: 1000, 6: 1000, 9: 1000, 2: 1000})
24 [0 2 4 6 7] [0 2 4 6 7] [1 3 5 8 9]
24 training: Counter({4: 100, 2: 98, 7: 96, 6: 90, 0: 82}) testing iid: Counter({0: 1000, 6: 1000, 7: 1000, 4: 1000, 2: 1000})
25 [0 1 4 5 6] [0 1 4 5 6] [2 3 7 8 9]
25 training: Counter({1: 114, 5: 111, 4: 100, 6: 90, 0: 82}) testing iid: Counter({0: 1000, 6: 1000, 1: 1000, 5: 1000, 4: 1000})
26 [1 2 4 5 6] [1 2 4 5 6] [0 3 7 8 9]
26 training: Counter({1: 114, 5: 111, 4: 100, 2: 98, 6: 90}) testing iid: Counter({6: 1000, 1: 1000, 5: 1000, 4: 1000, 2: 1000})
27 [0 5 7 8 9] [0 5 7 8 9] [1 2 3 4 6]
27 training: Counter({5: 111, 9: 109, 8: 102, 7: 96, 0: 82}) testing iid: Counter({8: 1000, 0: 1000, 9: 1000, 5: 1000, 7: 1000})
28 [0 3 7 8 9] [0 3 7 8 9] [1 2 4 5 6]
28 training: Counter({3: 109, 9: 109, 8: 102, 7: 96, 0: 82}) testing iid: Counter({3: 1000, 8: 1000, 0: 1000, 9: 1000, 7: 1000})
29 [1 4 6 8 9] [1 4 6 8 9] [0 2 3 5 7]
29 training: Counter({1: 114, 9: 109, 8: 102, 4: 100, 6: 90}) testing iid: Counter({8: 1000, 6: 1000, 1: 1000, 9: 1000, 4: 1000})
30 [0 2 7 8 9] [0 2 7 8 9] [1 3 4 5 6]
30 training: Counter({9: 109, 8: 102, 2: 98, 7: 96, 0: 82}) testing iid: Counter({8: 1000, 0: 1000, 9: 1000, 7: 1000, 2: 1000})
31 [1 4 5 7 8] [1 4 5 7 8] [0 2 3 6 9]
31 training: Counter({1: 114, 5: 111, 8: 102, 4: 100, 7: 96}) testing iid: Counter({8: 1000, 1: 1000, 5: 1000, 7: 1000, 4: 1000})
32 [0 2 3 4 5] [0 2 3 4 5] [1 6 7 8 9]
32 training: Counter({5: 111, 3: 109, 4: 100, 2: 98, 0: 82}) testing iid: Counter({3: 1000, 0: 1000, 5: 1000, 4: 1000, 2: 1000})
33 [0 1 2 3 4] [0 1 2 3 4] [5 6 7 8 9]
33 training: Counter({1: 114, 3: 109, 4: 100, 2: 98, 0: 82}) testing iid: Counter({3: 1000, 0: 1000, 1: 1000, 4: 1000, 2: 1000})
34 [0 2 4 6 7] [0 2 4 6 7] [1 3 5 8 9]
34 training: Counter({4: 100, 2: 98, 7: 96, 6: 90, 0: 82}) testing iid: Counter({0: 1000, 6: 1000, 7: 1000, 4: 1000, 2: 1000})
35 [0 3 4 5 8] [0 3 4 5 8] [1 2 6 7 9]
35 training: Counter({5: 111, 3: 109, 8: 102, 4: 100, 0: 82}) testing iid: Counter({3: 1000, 8: 1000, 0: 1000, 5: 1000, 4: 1000})
36 [0 2 3 6 9] [0 2 3 6 9] [1 4 5 7 8]
36 training: Counter({3: 109, 9: 109, 2: 98, 6: 89, 0: 82}) testing iid: Counter({3: 1000, 0: 1000, 6: 1000, 9: 1000, 2: 1000})
37 [1 3 4 7 8] [1 3 4 7 8] [0 2 5 6 9]
37 training: Counter({1: 114, 3: 109, 8: 102, 4: 100, 7: 96}) testing iid: Counter({3: 1000, 8: 1000, 1: 1000, 7: 1000, 4: 1000})
38 [3 5 6 7 8] [3 5 6 7 8] [0 1 2 4 9]
38 training: Counter({5: 111, 3: 109, 8: 102, 7: 96, 6: 89}) testing iid: Counter({3: 1000, 8: 1000, 6: 1000, 5: 1000, 7: 1000})
39 [0 2 3 4 9] [0 2 3 4 9] [1 5 6 7 8]
39 training: Counter({3: 109, 9: 109, 4: 100, 2: 98, 0: 82}) testing iid: Counter({3: 1000, 0: 1000, 9: 1000, 4: 1000, 2: 1000})
40 [0 3 5 6 8] [0 3 5 6 8] [1 2 4 7 9]
40 training: Counter({5: 111, 3: 109, 8: 102, 6: 89, 0: 82}) testing iid: Counter({3: 1000, 8: 1000, 0: 1000, 6: 1000, 5: 1000})
41 [0 1 2 5 7] [0 1 2 5 7] [3 4 6 8 9]
41 training: Counter({1: 114, 5: 111, 2: 98, 7: 96, 0: 82}) testing iid: Counter({0: 1000, 1: 1000, 5: 1000, 7: 1000, 2: 1000})
42 [0 1 2 4 8] [0 1 2 4 8] [3 5 6 7 9]
42 training: Counter({1: 114, 8: 102, 4: 100, 2: 98, 0: 82}) testing iid: Counter({8: 1000, 0: 1000, 1: 1000, 4: 1000, 2: 1000})
43 [1 3 4 6 7] [1 3 4 6 7] [0 2 5 8 9]
43 training: Counter({1: 114, 3: 109, 4: 100, 7: 96, 6: 89}) testing iid: Counter({3: 1000, 6: 1000, 1: 1000, 7: 1000, 4: 1000})
44 [0 2 4 6 9] [0 2 4 6 9] [1 3 5 7 8]
44 training: Counter({9: 109, 4: 100, 2: 98, 6: 89, 0: 82}) testing iid: Counter({0: 1000, 6: 1000, 9: 1000, 4: 1000, 2: 1000})
45 [0 5 6 7 9] [0 5 6 7 9] [1 2 3 4 8]
45 training: Counter({5: 111, 9: 109, 7: 96, 6: 89, 0: 82}) testing iid: Counter({0: 1000, 6: 1000, 9: 1000, 5: 1000, 7: 1000})
46 [0 3 4 6 9] [0 3 4 6 9] [1 2 5 7 8]
46 training: Counter({3: 109, 9: 109, 4: 100, 6: 89, 0: 82}) testing iid: Counter({3: 1000, 0: 1000, 6: 1000, 9: 1000, 4: 1000})
47 [0 3 5 7 8] [0 3 5 7 8] [1 2 4 6 9]
47 training: Counter({5: 111, 3: 109, 8: 102, 7: 96, 0: 82}) testing iid: Counter({3: 1000, 8: 1000, 0: 1000, 5: 1000, 7: 1000})
48 [5 6 7 8 9] [5 6 7 8 9] [0 1 2 3 4]
48 training: Counter({5: 111, 9: 109, 8: 102, 7: 96, 6: 89}) testing iid: Counter({8: 1000, 6: 1000, 9: 1000, 5: 1000, 7: 1000})
49 [2 4 5 6 9] [2 4 5 6 9] [0 1 3 7 8]
49 training: Counter({5: 111, 9: 109, 4: 100, 2: 98, 6: 89}) testing iid: Counter({6: 1000, 9: 1000, 5: 1000, 4: 1000, 2: 1000})
50 [0 2 6 7 8] [0 2 6 7 8] [1 3 4 5 9]
50 training: Counter({8: 102, 2: 98, 7: 96, 6: 89, 0: 82}) testing iid: Counter({8: 1000, 0: 1000, 6: 1000, 7: 1000, 2: 1000})
51 [0 1 2 5 6] [0 1 2 5 6] [3 4 7 8 9]
51 training: Counter({1: 114, 5: 111, 2: 98, 6: 89, 0: 82}) testing iid: Counter({0: 1000, 6: 1000, 1: 1000, 5: 1000, 2: 1000})
52 [1 2 5 8 9] [1 2 5 8 9] [0 3 4 6 7]
52 training: Counter({1: 114, 5: 111, 9: 109, 8: 102, 2: 98}) testing iid: Counter({8: 1000, 1: 1000, 9: 1000, 5: 1000, 2: 1000})
53 [1 2 3 4 9] [1 2 3 4 9] [0 5 6 7 8]
53 training: Counter({1: 114, 3: 109, 9: 109, 4: 100, 2: 98}) testing iid: Counter({3: 1000, 1: 1000, 9: 1000, 4: 1000, 2: 1000})
54 [0 2 4 6 7] [0 2 4 6 7] [1 3 5 8 9]
54 training: Counter({4: 100, 2: 98, 7: 96, 6: 89, 0: 82}) testing iid: Counter({0: 1000, 6: 1000, 7: 1000, 4: 1000, 2: 1000})
55 [3 4 5 6 7] [3 4 5 6 7] [0 1 2 8 9]
55 training: Counter({5: 111, 3: 109, 4: 100, 7: 96, 6: 89}) testing iid: Counter({3: 1000, 6: 1000, 5: 1000, 7: 1000, 4: 1000})
56 [0 3 4 6 7] [0 3 4 6 7] [1 2 5 8 9]
56 training: Counter({3: 109, 4: 100, 7: 96, 6: 89, 0: 82}) testing iid: Counter({3: 1000, 0: 1000, 6: 1000, 7: 1000, 4: 1000})
57 [2 5 6 7 9] [2 5 6 7 9] [0 1 3 4 8]
57 training: Counter({5: 111, 9: 109, 2: 98, 7: 96, 6: 89}) testing iid: Counter({6: 1000, 9: 1000, 5: 1000, 7: 1000, 2: 1000})
58 [2 4 6 8 9] [2 4 6 8 9] [0 1 3 5 7]
58 training: Counter({9: 109, 8: 102, 4: 100, 2: 98, 6: 89}) testing iid: Counter({8: 1000, 6: 1000, 9: 1000, 4: 1000, 2: 1000})
59 [0 1 3 4 9] [0 1 3 4 9] [2 5 6 7 8]
59 training: Counter({1: 114, 3: 109, 9: 109, 4: 100, 0: 82}) testing iid: Counter({3: 1000, 0: 1000, 1: 1000, 9: 1000, 4: 1000})
60 [0 2 4 5 8] [0 2 4 5 8] [1 3 6 7 9]
60 training: Counter({5: 111, 8: 102, 4: 100, 2: 98, 0: 82}) testing iid: Counter({8: 1000, 0: 1000, 5: 1000, 4: 1000, 2: 1000})
61 [1 2 3 4 9] [1 2 3 4 9] [0 5 6 7 8]
61 training: Counter({1: 114, 3: 109, 9: 108, 4: 100, 2: 98}) testing iid: Counter({3: 1000, 1: 1000, 9: 1000, 4: 1000, 2: 1000})
62 [1 2 4 6 8] [1 2 4 6 8] [0 3 5 7 9]
62 training: Counter({1: 114, 8: 102, 4: 100, 2: 98, 6: 89}) testing iid: Counter({8: 1000, 6: 1000, 1: 1000, 4: 1000, 2: 1000})
63 [0 3 7 8 9] [0 3 7 8 9] [1 2 4 5 6]
63 training: Counter({3: 109, 9: 108, 8: 102, 7: 96, 0: 82}) testing iid: Counter({3: 1000, 8: 1000, 0: 1000, 9: 1000, 7: 1000})
64 [0 2 4 5 8] [0 2 4 5 8] [1 3 6 7 9]
64 training: Counter({5: 111, 8: 102, 4: 100, 2: 98, 0: 82}) testing iid: Counter({8: 1000, 0: 1000, 5: 1000, 4: 1000, 2: 1000})
65 [0 5 6 8 9] [0 5 6 8 9] [1 2 3 4 7]
65 training: Counter({5: 111, 9: 108, 8: 102, 6: 89, 0: 82}) testing iid: Counter({8: 1000, 0: 1000, 6: 1000, 9: 1000, 5: 1000})
66 [0 3 4 6 7] [0 3 4 6 7] [1 2 5 8 9]
66 training: Counter({3: 109, 4: 100, 7: 96, 6: 89, 0: 82}) testing iid: Counter({3: 1000, 0: 1000, 6: 1000, 7: 1000, 4: 1000})
67 [0 1 4 6 7] [0 1 4 6 7] [2 3 5 8 9]
67 training: Counter({1: 114, 4: 100, 7: 96, 6: 89, 0: 82}) testing iid: Counter({0: 1000, 6: 1000, 1: 1000, 7: 1000, 4: 1000})
68 [2 4 5 6 8] [2 4 5 6 8] [0 1 3 7 9]
68 training: Counter({5: 111, 8: 102, 4: 100, 2: 98, 6: 89}) testing iid: Counter({8: 1000, 6: 1000, 5: 1000, 4: 1000, 2: 1000})
69 [0 2 5 7 9] [0 2 5 7 9] [1 3 4 6 8]
69 training: Counter({5: 111, 9: 108, 2: 98, 7: 96, 0: 82}) testing iid: Counter({0: 1000, 9: 1000, 5: 1000, 7: 1000, 2: 1000})
70 [0 1 2 7 8] [0 1 2 7 8] [3 4 5 6 9]
70 training: Counter({1: 113, 8: 102, 2: 98, 7: 96, 0: 82}) testing iid: Counter({8: 1000, 0: 1000, 1: 1000, 7: 1000, 2: 1000})
71 [1 4 5 6 9] [1 4 5 6 9] [0 2 3 7 8]
71 training: Counter({1: 113, 5: 111, 9: 108, 4: 100, 6: 89}) testing iid: Counter({6: 1000, 1: 1000, 9: 1000, 5: 1000, 4: 1000})
72 [2 5 7 8 9] [2 5 7 8 9] [0 1 3 4 6]
72 training: Counter({5: 111, 9: 108, 8: 102, 2: 98, 7: 96}) testing iid: Counter({8: 1000, 9: 1000, 5: 1000, 7: 1000, 2: 1000})
73 [0 1 3 5 8] [0 1 3 5 8] [2 4 6 7 9]
73 training: Counter({1: 113, 5: 111, 3: 109, 8: 102, 0: 82}) testing iid: Counter({3: 1000, 8: 1000, 0: 1000, 1: 1000, 5: 1000})
74 [0 3 4 8 9] [0 3 4 8 9] [1 2 5 6 7]
74 training: Counter({3: 109, 9: 108, 8: 102, 4: 100, 0: 82}) testing iid: Counter({3: 1000, 8: 1000, 0: 1000, 9: 1000, 4: 1000})
75 [2 3 4 5 6] [2 3 4 5 6] [0 1 7 8 9]
75 training: Counter({5: 111, 3: 108, 4: 100, 2: 98, 6: 89}) testing iid: Counter({3: 1000, 6: 1000, 5: 1000, 4: 1000, 2: 1000})
76 [0 2 4 5 6] [0 2 4 5 6] [1 3 7 8 9]
76 training: Counter({5: 111, 4: 100, 2: 98, 6: 89, 0: 82}) testing iid: Counter({0: 1000, 6: 1000, 5: 1000, 4: 1000, 2: 1000})
77 [0 3 5 7 8] [0 3 5 7 8] [1 2 4 6 9]
77 training: Counter({5: 111, 3: 108, 8: 102, 7: 96, 0: 82}) testing iid: Counter({3: 1000, 8: 1000, 0: 1000, 5: 1000, 7: 1000})
78 [1 3 4 7 8] [1 3 4 7 8] [0 2 5 6 9]
78 training: Counter({1: 113, 3: 108, 8: 102, 4: 100, 7: 96}) testing iid: Counter({3: 1000, 8: 1000, 1: 1000, 7: 1000, 4: 1000})
79 [0 2 3 6 9] [0 2 3 6 9] [1 4 5 7 8]
79 training: Counter({3: 108, 9: 108, 2: 98, 6: 89, 0: 82}) testing iid: Counter({3: 1000, 0: 1000, 6: 1000, 9: 1000, 2: 1000})
80 [0 1 5 6 8] [0 1 5 6 8] [2 3 4 7 9]
80 training: Counter({1: 113, 5: 111, 8: 102, 6: 89, 0: 82}) testing iid: Counter({8: 1000, 0: 1000, 6: 1000, 1: 1000, 5: 1000})
81 [1 5 7 8 9] [1 5 7 8 9] [0 2 3 4 6]
81 training: Counter({1: 113, 5: 111, 9: 108, 8: 102, 7: 96}) testing iid: Counter({8: 1000, 1: 1000, 9: 1000, 5: 1000, 7: 1000})
82 [1 2 3 6 9] [1 2 3 6 9] [0 4 5 7 8]
82 training: Counter({1: 113, 3: 108, 9: 108, 2: 98, 6: 89}) testing iid: Counter({3: 1000, 6: 1000, 1: 1000, 9: 1000, 2: 1000})
83 [0 1 2 3 5] [0 1 2 3 5] [4 6 7 8 9]
83 training: Counter({1: 113, 5: 111, 3: 108, 2: 98, 0: 82}) testing iid: Counter({3: 1000, 0: 1000, 1: 1000, 5: 1000, 2: 1000})
84 [0 2 4 6 7] [0 2 4 6 7] [1 3 5 8 9]
84 training: Counter({4: 100, 2: 98, 7: 96, 6: 89, 0: 82}) testing iid: Counter({0: 1000, 6: 1000, 7: 1000, 4: 1000, 2: 1000})
85 [4 5 6 7 8] [4 5 6 7 8] [0 1 2 3 9]
85 training: Counter({5: 111, 8: 102, 4: 100, 7: 96, 6: 89}) testing iid: Counter({8: 1000, 6: 1000, 5: 1000, 7: 1000, 4: 1000})
86 [1 3 6 7 8] [1 3 6 7 8] [0 2 4 5 9]
86 training: Counter({1: 113, 3: 108, 8: 102, 7: 96, 6: 89}) testing iid: Counter({3: 1000, 8: 1000, 6: 1000, 1: 1000, 7: 1000})
87 [0 3 5 6 7] [0 3 5 6 7] [1 2 4 8 9]
87 training: Counter({5: 111, 3: 108, 7: 96, 6: 89, 0: 82}) testing iid: Counter({3: 1000, 0: 1000, 6: 1000, 5: 1000, 7: 1000})
88 [2 4 6 8 9] [2 4 6 8 9] [0 1 3 5 7]
88 training: Counter({9: 108, 8: 102, 4: 100, 2: 98, 6: 89}) testing iid: Counter({8: 1000, 6: 1000, 9: 1000, 4: 1000, 2: 1000})
89 [1 2 3 4 9] [1 2 3 4 9] [0 5 6 7 8]
89 training: Counter({1: 113, 3: 108, 9: 108, 4: 100, 2: 98}) testing iid: Counter({3: 1000, 1: 1000, 9: 1000, 4: 1000, 2: 1000})
90 [0 3 6 7 9] [0 3 6 7 9] [1 2 4 5 8]
90 training: Counter({3: 108, 9: 108, 7: 96, 6: 89, 0: 82}) testing iid: Counter({3: 1000, 0: 1000, 6: 1000, 9: 1000, 7: 1000})
91 [0 1 3 6 8] [0 1 3 6 8] [2 4 5 7 9]
91 training: Counter({1: 113, 3: 108, 8: 102, 6: 89, 0: 82}) testing iid: Counter({3: 1000, 8: 1000, 0: 1000, 6: 1000, 1: 1000})
92 [1 2 3 5 6] [1 2 3 5 6] [0 4 7 8 9]
92 training: Counter({1: 113, 5: 111, 3: 108, 2: 98, 6: 89}) testing iid: Counter({3: 1000, 6: 1000, 1: 1000, 5: 1000, 2: 1000})
93 [2 3 6 7 8] [2 3 6 7 8] [0 1 4 5 9]
93 training: Counter({3: 108, 8: 102, 2: 98, 7: 96, 6: 89}) testing iid: Counter({3: 1000, 8: 1000, 6: 1000, 7: 1000, 2: 1000})
94 [0 1 4 6 8] [0 1 4 6 8] [2 3 5 7 9]
94 training: Counter({1: 113, 8: 102, 4: 100, 6: 89, 0: 82}) testing iid: Counter({8: 1000, 0: 1000, 6: 1000, 1: 1000, 4: 1000})
95 [0 1 2 5 7] [0 1 2 5 7] [3 4 6 8 9]
95 training: Counter({1: 113, 5: 111, 2: 98, 7: 96, 0: 82}) testing iid: Counter({0: 1000, 1: 1000, 5: 1000, 7: 1000, 2: 1000})
96 [0 1 4 6 7] [0 1 4 6 7] [2 3 5 8 9]
96 training: Counter({1: 113, 4: 100, 7: 96, 6: 89, 0: 82}) testing iid: Counter({0: 1000, 6: 1000, 1: 1000, 7: 1000, 4: 1000})
97 [0 5 6 7 8] [0 5 6 7 8] [1 2 3 4 9]
97 training: Counter({5: 111, 8: 102, 7: 96, 6: 89, 0: 81}) testing iid: Counter({8: 1000, 0: 1000, 6: 1000, 5: 1000, 7: 1000})
98 [2 3 4 5 8] [2 3 4 5 8] [0 1 6 7 9]
98 training: Counter({5: 111, 3: 108, 8: 102, 4: 100, 2: 98}) testing iid: Counter({3: 1000, 8: 1000, 5: 1000, 4: 1000, 2: 1000})
99 [0 1 2 6 9] [0 1 2 6 9] [3 4 5 7 8]
99 training: Counter({1: 113, 9: 108, 2: 98, 6: 89, 0: 81}) testing iid: Counter({0: 1000, 6: 1000, 1: 1000, 9: 1000, 2: 1000})
Num_samples of Training set per client: [520, 509, 517, 492, 510, 520, 507, 522, 507, 498, 488, 519, 515, 481, 496, 532, 485, 497, 489, 499, 489, 505, 507, 488, 466, 497, 513, 500, 498, 515, 487, 523, 500, 503, 466, 504, 487, 521, 507, 498, 493, 501, 496, 508, 478, 487, 489, 500, 507, 507, 467, 494, 534, 530, 465, 505, 476, 503, 498, 514, 493, 529, 503, 497, 493, 492, 476, 481, 500, 495, 491, 521, 515, 517, 501, 506, 480, 499, 519, 485, 497, 530, 516, 512, 465, 498, 508, 486, 497, 527, 483, 494, 519, 493, 486, 500, 480, 479, 519, 489]
Total_training_samples: 50000
Global test set: 10000
Finish Generating Samples, distribution saved
MobileNetV2(
  (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (layers): Sequential(
    (0): Block(
      (conv1): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): Block(
      (conv1): Conv2d(16, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=96, bias=False)
      (bn2): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(96, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(16, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (2): Block(
      (conv1): Conv2d(24, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=144, bias=False)
      (bn2): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(144, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (3): Block(
      (conv1): Conv2d(24, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(144, 144, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=144, bias=False)
      (bn2): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(144, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (4): Block(
      (conv1): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
      (bn2): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(192, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (5): Block(
      (conv1): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
      (bn2): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(192, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (6): Block(
      (conv1): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(192, 192, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=192, bias=False)
      (bn2): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(192, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (7): Block(
      (conv1): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
      (bn2): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (8): Block(
      (conv1): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
      (bn2): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (9): Block(
      (conv1): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
      (bn2): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (10): Block(
      (conv1): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
      (bn2): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(384, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(64, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (11): Block(
      (conv1): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)
      (bn2): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (12): Block(
      (conv1): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)
      (bn2): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (13): Block(
      (conv1): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(576, 576, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=576, bias=False)
      (bn2): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(576, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (14): Block(
      (conv1): Conv2d(160, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(960, 960, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=960, bias=False)
      (bn2): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(960, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (15): Block(
      (conv1): Conv2d(160, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(960, 960, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=960, bias=False)
      (bn2): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(960, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (16): Block(
      (conv1): Conv2d(160, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(960, 960, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=960, bias=False)
      (bn2): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(960, 320, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(160, 320, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (conv2): Conv2d(320, 1280, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn2): BatchNorm2d(1280, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (linear): Linear(in_features=1280, out_features=10, bias=True)
)
number of parameters: 2296922
clients initializting...
output size: 10
  0%|          | 0/100 [00:00<?, ?it/s]  1%|          | 1/100 [00:00<01:13,  1.35it/s]  2%|▏         | 2/100 [00:01<01:13,  1.33it/s]  3%|▎         | 3/100 [00:02<01:13,  1.31it/s]  4%|▍         | 4/100 [00:03<01:13,  1.31it/s]  5%|▌         | 5/100 [00:03<01:12,  1.31it/s]  6%|▌         | 6/100 [00:04<01:11,  1.32it/s]  7%|▋         | 7/100 [00:05<01:10,  1.31it/s]  8%|▊         | 8/100 [00:06<01:10,  1.30it/s]  9%|▉         | 9/100 [00:06<01:08,  1.32it/s] 10%|█         | 10/100 [00:07<01:07,  1.33it/s] 11%|█         | 11/100 [00:08<01:07,  1.33it/s] 12%|█▏        | 12/100 [00:09<01:06,  1.32it/s] 13%|█▎        | 13/100 [00:09<01:06,  1.31it/s] 14%|█▍        | 14/100 [00:10<01:05,  1.32it/s] 15%|█▌        | 15/100 [00:11<01:03,  1.34it/s] 16%|█▌        | 16/100 [00:12<01:01,  1.36it/s] 17%|█▋        | 17/100 [00:12<01:00,  1.38it/s] 18%|█▊        | 18/100 [00:13<00:59,  1.39it/s] 19%|█▉        | 19/100 [00:14<00:58,  1.39it/s] 20%|██        | 20/100 [00:14<00:57,  1.40it/s] 21%|██        | 21/100 [00:15<00:55,  1.42it/s] 22%|██▏       | 22/100 [00:16<00:54,  1.43it/s] 23%|██▎       | 23/100 [00:17<00:54,  1.42it/s] 24%|██▍       | 24/100 [00:17<00:54,  1.41it/s] 25%|██▌       | 25/100 [00:18<00:53,  1.40it/s] 26%|██▌       | 26/100 [00:19<00:52,  1.40it/s] 27%|██▋       | 27/100 [00:19<00:51,  1.41it/s] 28%|██▊       | 28/100 [00:20<00:50,  1.44it/s] 29%|██▉       | 29/100 [00:21<00:49,  1.45it/s] 30%|███       | 30/100 [00:21<00:48,  1.45it/s] 31%|███       | 31/100 [00:25<01:55,  1.67s/it] 32%|███▏      | 32/100 [00:26<01:34,  1.38s/it] 33%|███▎      | 33/100 [00:27<01:18,  1.18s/it] 34%|███▍      | 34/100 [00:27<01:08,  1.04s/it] 35%|███▌      | 35/100 [00:28<01:01,  1.06it/s] 36%|███▌      | 36/100 [00:29<00:56,  1.14it/s] 37%|███▋      | 37/100 [00:30<00:51,  1.22it/s] 38%|███▊      | 38/100 [00:30<00:49,  1.26it/s] 39%|███▉      | 39/100 [00:31<00:46,  1.30it/s] 40%|████      | 40/100 [00:32<00:45,  1.33it/s] 41%|████      | 41/100 [00:32<00:43,  1.36it/s] 42%|████▏     | 42/100 [00:33<00:42,  1.37it/s] 43%|████▎     | 43/100 [00:34<00:40,  1.40it/s] 44%|████▍     | 44/100 [00:35<00:39,  1.40it/s] 45%|████▌     | 45/100 [00:35<00:38,  1.41it/s] 46%|████▌     | 46/100 [00:36<00:38,  1.42it/s] 47%|████▋     | 47/100 [00:37<00:37,  1.42it/s] 48%|████▊     | 48/100 [00:37<00:36,  1.43it/s] 49%|████▉     | 49/100 [00:38<00:34,  1.46it/s] 50%|█████     | 50/100 [00:39<00:34,  1.46it/s] 51%|█████     | 51/100 [00:39<00:33,  1.47it/s] 52%|█████▏    | 52/100 [00:40<00:32,  1.47it/s] 53%|█████▎    | 53/100 [00:41<00:32,  1.45it/s] 54%|█████▍    | 54/100 [00:41<00:32,  1.43it/s] 55%|█████▌    | 55/100 [00:42<00:31,  1.43it/s] 56%|█████▌    | 56/100 [00:43<00:30,  1.43it/s] 57%|█████▋    | 57/100 [00:44<00:30,  1.43it/s] 58%|█████▊    | 58/100 [00:44<00:29,  1.43it/s] 59%|█████▉    | 59/100 [00:45<00:28,  1.44it/s] 60%|██████    | 60/100 [00:46<00:27,  1.45it/s] 61%|██████    | 61/100 [00:46<00:26,  1.45it/s] 62%|██████▏   | 62/100 [00:47<00:26,  1.46it/s] 63%|██████▎   | 63/100 [00:51<01:03,  1.72s/it] 64%|██████▍   | 64/100 [00:52<00:51,  1.42s/it] 65%|██████▌   | 65/100 [00:53<00:42,  1.20s/it] 66%|██████▌   | 66/100 [00:53<00:35,  1.05s/it] 67%|██████▋   | 67/100 [00:54<00:30,  1.07it/s] 68%|██████▊   | 68/100 [00:55<00:27,  1.14it/s] 69%|██████▉   | 69/100 [00:55<00:25,  1.19it/s] 70%|███████   | 70/100 [00:56<00:23,  1.26it/s] 71%|███████   | 71/100 [00:57<00:22,  1.30it/s] 72%|███████▏  | 72/100 [00:57<00:20,  1.33it/s] 73%|███████▎  | 73/100 [00:58<00:20,  1.34it/s] 74%|███████▍  | 74/100 [00:59<00:19,  1.35it/s] 75%|███████▌  | 75/100 [01:00<00:18,  1.36it/s] 76%|███████▌  | 76/100 [01:00<00:17,  1.36it/s] 77%|███████▋  | 77/100 [01:01<00:16,  1.38it/s] 78%|███████▊  | 78/100 [01:02<00:15,  1.41it/s] 79%|███████▉  | 79/100 [01:02<00:14,  1.42it/s] 80%|████████  | 80/100 [01:03<00:13,  1.44it/s] 81%|████████  | 81/100 [01:04<00:13,  1.43it/s] 82%|████████▏ | 82/100 [01:05<00:12,  1.43it/s] 83%|████████▎ | 83/100 [01:05<00:12,  1.41it/s] 84%|████████▍ | 84/100 [01:06<00:11,  1.41it/s] 85%|████████▌ | 85/100 [01:07<00:10,  1.43it/s] 86%|████████▌ | 86/100 [01:07<00:09,  1.42it/s] 87%|████████▋ | 87/100 [01:08<00:09,  1.42it/s] 88%|████████▊ | 88/100 [01:09<00:08,  1.42it/s] 89%|████████▉ | 89/100 [01:10<00:07,  1.39it/s] 90%|█████████ | 90/100 [01:10<00:07,  1.41it/s] 91%|█████████ | 91/100 [01:11<00:06,  1.40it/s] 92%|█████████▏| 92/100 [01:12<00:05,  1.41it/s] 93%|█████████▎| 93/100 [01:12<00:04,  1.40it/s] 94%|█████████▍| 94/100 [01:13<00:04,  1.42it/s] 95%|█████████▌| 95/100 [01:14<00:03,  1.43it/s] 96%|█████████▌| 96/100 [01:14<00:02,  1.41it/s] 97%|█████████▋| 97/100 [01:18<00:05,  1.70s/it] 98%|█████████▊| 98/100 [01:19<00:02,  1.39s/it] 99%|█████████▉| 99/100 [01:20<00:01,  1.18s/it]100%|██████████| 100/100 [01:21<00:00,  1.03s/it]100%|██████████| 100/100 [01:21<00:00,  1.23it/s]
Number of users per round / total users: 10  /  100
Finished creating FL server.
=== Training starts: algorithm FedFea ===
-------------Round number:  0  -------------
selected users: [26, 86, 2, 55, 75, 93, 16, 73, 54, 95]
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 496
Local adapation with distilling: 0.001
training loss: tensor(2.7070) feature loss: tensor(0.5577)
Local adapation with distilling: 0.001
training loss: tensor(2.6455) feature loss: tensor(0.5158)
Local adapation with distilling: 0.001
training loss: tensor(2.7812) feature loss: tensor(0.5135)
Local adapation with distilling: 0.001
training loss: tensor(2.7424) feature loss: tensor(0.5180)
Local adapation with distilling: 0.001
training loss: tensor(2.6912) feature loss: tensor(0.5241)
Local adapation with distilling: 0.001
training loss: tensor(2.6548) feature loss: tensor(0.5139)
Local adapation with distilling: 0.001
training loss: tensor(2.6438) feature loss: tensor(0.5018)
Local adapation with distilling: 0.001
training loss: tensor(2.7528) feature loss: tensor(0.4993)
Local adapation with distilling: 0.001
training loss: tensor(2.8158) feature loss: tensor(0.4928)
Local adapation with distilling: 0.001
training loss: tensor(2.6366) feature loss: tensor(0.5175)
Global Model Acc on global data: 0.104 length of data: 10000
save a model
-------------Round number:  1  -------------
selected users: [80, 84, 33, 81, 93, 17, 36, 82, 69, 65]
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
all data: 493
Local adapation with distilling: 0.000982
training loss: tensor(2.1277) feature loss: tensor(0.7290)
Local adapation with distilling: 0.000982
training loss: tensor(2.1476) feature loss: tensor(0.6376)
Local adapation with distilling: 0.000982
training loss: tensor(2.1330) feature loss: tensor(0.6457)
Local adapation with distilling: 0.000982
training loss: tensor(2.1540) feature loss: tensor(0.7270)
Local adapation with distilling: 0.000982
training loss: tensor(2.0641) feature loss: tensor(0.6872)
Local adapation with distilling: 0.000982
training loss: tensor(2.0332) feature loss: tensor(0.6793)
Local adapation with distilling: 0.000982
training loss: tensor(2.0638) feature loss: tensor(0.6992)
Local adapation with distilling: 0.000982
training loss: tensor(2.1564) feature loss: tensor(0.7021)
Local adapation with distilling: 0.000982
training loss: tensor(2.0511) feature loss: tensor(0.6983)
Local adapation with distilling: 0.000982
training loss: tensor(2.0843) feature loss: tensor(0.7284)
Global Model Acc on global data: 0.174 length of data: 10000
save a model
-------------Round number:  2  -------------
selected users: [83, 30, 56, 24, 16, 23, 2, 27, 28, 13]
random features: torch.Size([57, 16, 32, 32]) torch.Size([57])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
all data: 492
Local adapation with distilling: 0.000964
training loss: tensor(1.6457) feature loss: tensor(0.7092)
Local adapation with distilling: 0.000964
training loss: tensor(1.7230) feature loss: tensor(0.7311)
Local adapation with distilling: 0.000964
training loss: tensor(1.7405) feature loss: tensor(0.6995)
Local adapation with distilling: 0.000964
training loss: tensor(1.7191) feature loss: tensor(0.6631)
Local adapation with distilling: 0.000964
training loss: tensor(1.6546) feature loss: tensor(0.6845)
Local adapation with distilling: 0.000964
training loss: tensor(1.7029) feature loss: tensor(0.7046)
Local adapation with distilling: 0.000964
training loss: tensor(1.8054) feature loss: tensor(0.6875)
Local adapation with distilling: 0.000964
training loss: tensor(1.7140) feature loss: tensor(0.7637)
Local adapation with distilling: 0.000964
training loss: tensor(1.7012) feature loss: tensor(0.7522)
Local adapation with distilling: 0.000964
training loss: tensor(1.6759) feature loss: tensor(0.6875)
Global Model Acc on global data: 0.2342 length of data: 10000
save a model
-------------Round number:  3  -------------
selected users: [93, 67, 6, 64, 96, 83, 98, 42, 25, 15]
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([57, 16, 32, 32]) torch.Size([57])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
all data: 503
Local adapation with distilling: 0.000946
training loss: tensor(1.4186) feature loss: tensor(0.6349)
Local adapation with distilling: 0.000946
training loss: tensor(1.5412) feature loss: tensor(0.7246)
Local adapation with distilling: 0.000946
training loss: tensor(1.5105) feature loss: tensor(0.6704)
Local adapation with distilling: 0.000946
training loss: tensor(1.5101) feature loss: tensor(0.6417)
Local adapation with distilling: 0.000946
training loss: tensor(1.5481) feature loss: tensor(0.7249)
Local adapation with distilling: 0.000946
training loss: tensor(1.4376) feature loss: tensor(0.7255)
Local adapation with distilling: 0.000946
training loss: tensor(1.5512) feature loss: tensor(0.6340)
Local adapation with distilling: 0.000946
training loss: tensor(1.5645) feature loss: tensor(0.6965)
Local adapation with distilling: 0.000946
training loss: tensor(1.4927) feature loss: tensor(0.7176)
Local adapation with distilling: 0.000946
training loss: tensor(1.5521) feature loss: tensor(0.7513)
Global Model Acc on global data: 0.2572 length of data: 10000
save a model
-------------Round number:  4  -------------
selected users: [20, 10, 96, 16, 63, 24, 53, 97, 41, 47]
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 487
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.3062) feature loss: tensor(0.6161)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.3646) feature loss: tensor(0.6353)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.2987) feature loss: tensor(0.6673)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.2703) feature loss: tensor(0.5934)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.3828) feature loss: tensor(0.6674)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.3171) feature loss: tensor(0.6072)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.4150) feature loss: tensor(0.6723)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.2988) feature loss: tensor(0.6349)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.3809) feature loss: tensor(0.7022)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.3234) feature loss: tensor(0.6430)
Global Model Acc on global data: 0.2833 length of data: 10000
save a model
-------------Round number:  5  -------------
selected users: [66, 32, 46, 28, 74, 23, 10, 20, 17, 35]
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 487
Local adapation with distilling: 0.00091
training loss: tensor(1.1898) feature loss: tensor(0.5689)
Local adapation with distilling: 0.00091
training loss: tensor(1.2171) feature loss: tensor(0.5849)
Local adapation with distilling: 0.00091
training loss: tensor(1.1924) feature loss: tensor(0.6063)
Local adapation with distilling: 0.00091
training loss: tensor(1.1607) feature loss: tensor(0.6062)
Local adapation with distilling: 0.00091
training loss: tensor(1.2012) feature loss: tensor(0.5935)
Local adapation with distilling: 0.00091
training loss: tensor(1.1897) feature loss: tensor(0.6222)
Local adapation with distilling: 0.00091
training loss: tensor(1.1413) feature loss: tensor(0.6077)
Local adapation with distilling: 0.00091
training loss: tensor(1.1186) feature loss: tensor(0.5555)
Local adapation with distilling: 0.00091
training loss: tensor(1.1849) feature loss: tensor(0.5729)
Local adapation with distilling: 0.00091
training loss: tensor(1.1806) feature loss: tensor(0.6053)
Global Model Acc on global data: 0.3279 length of data: 10000
save a model
-------------Round number:  6  -------------
selected users: [17, 34, 0, 45, 60, 86, 20, 47, 44, 81]
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
all data: 492
Local adapation with distilling: 0.000892
training loss: tensor(1.0913) feature loss: tensor(0.5867)
Local adapation with distilling: 0.000892
training loss: tensor(1.1998) feature loss: tensor(0.5461)
Local adapation with distilling: 0.000892
training loss: tensor(1.3770) feature loss: tensor(0.6458)
Local adapation with distilling: 0.000892
training loss: tensor(1.1474) feature loss: tensor(0.6114)
Local adapation with distilling: 0.000892
training loss: tensor(1.1489) feature loss: tensor(0.5351)
Local adapation with distilling: 0.000892
training loss: tensor(1.3285) feature loss: tensor(0.6356)
Local adapation with distilling: 0.000892
training loss: tensor(1.0335) feature loss: tensor(0.5322)
Local adapation with distilling: 0.000892
training loss: tensor(1.1221) feature loss: tensor(0.5768)
Local adapation with distilling: 0.000892
training loss: tensor(1.1808) feature loss: tensor(0.5337)
Local adapation with distilling: 0.000892
training loss: tensor(1.2823) feature loss: tensor(0.6835)
Global Model Acc on global data: 0.3741 length of data: 10000
save a model
-------------Round number:  7  -------------
selected users: [37, 26, 78, 91, 49, 15, 93, 71, 86, 22]
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 507
Local adapation with distilling: 0.000874
training loss: tensor(1.1154) feature loss: tensor(0.6157)
Local adapation with distilling: 0.000874
training loss: tensor(1.5145) feature loss: tensor(0.6165)
Local adapation with distilling: 0.000874
training loss: tensor(1.1172) feature loss: tensor(0.6062)
Local adapation with distilling: 0.000874
training loss: tensor(1.1486) feature loss: tensor(0.6294)
Local adapation with distilling: 0.000874
training loss: tensor(1.1337) feature loss: tensor(0.5516)
Local adapation with distilling: 0.000874
training loss: tensor(1.0976) feature loss: tensor(0.6289)
Local adapation with distilling: 0.000874
training loss: tensor(1.0494) feature loss: tensor(0.5618)
Local adapation with distilling: 0.000874
training loss: tensor(1.2052) feature loss: tensor(0.5873)
Local adapation with distilling: 0.000874
training loss: tensor(1.0617) feature loss: tensor(0.6159)
Local adapation with distilling: 0.000874
training loss: tensor(1.1325) feature loss: tensor(0.6489)
Global Model Acc on global data: 0.4007 length of data: 10000
save a model
-------------Round number:  8  -------------
selected users: [17, 23, 1, 44, 55, 99, 86, 29, 62, 33]
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 493
Local adapation with distilling: 0.000856
training loss: tensor(0.9098) feature loss: tensor(0.4917)
Local adapation with distilling: 0.000856
training loss: tensor(0.9719) feature loss: tensor(0.5540)
Local adapation with distilling: 0.000856
training loss: tensor(1.0100) feature loss: tensor(0.5499)
Local adapation with distilling: 0.000856
training loss: tensor(0.9394) feature loss: tensor(0.4989)
Local adapation with distilling: 0.000856
training loss: tensor(1.0459) feature loss: tensor(0.4683)
Local adapation with distilling: 0.000856
training loss: tensor(0.9900) feature loss: tensor(0.5492)
Local adapation with distilling: 0.000856
training loss: tensor(0.8776) feature loss: tensor(0.5131)
Local adapation with distilling: 0.000856
training loss: tensor(1.0721) feature loss: tensor(0.5382)
Local adapation with distilling: 0.000856
training loss: tensor(0.9781) feature loss: tensor(0.5000)
Local adapation with distilling: 0.000856
training loss: tensor(1.0487) feature loss: tensor(0.5510)
Global Model Acc on global data: 0.4151 length of data: 10000
save a model
-------------Round number:  9  -------------
selected users: [75, 42, 46, 68, 3, 39, 23, 20, 70, 73]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
all data: 491
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.9714) feature loss: tensor(0.4656)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.9253) feature loss: tensor(0.5199)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.8837) feature loss: tensor(0.4981)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.9139) feature loss: tensor(0.4607)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.9317) feature loss: tensor(0.5355)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.9711) feature loss: tensor(0.5168)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.8722) feature loss: tensor(0.4913)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.8402) feature loss: tensor(0.4804)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.9621) feature loss: tensor(0.5324)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(1.0106) feature loss: tensor(0.5413)
Global Model Acc on global data: 0.4271 length of data: 10000
save a model
-------------Round number:  10  -------------
selected users: [19, 14, 43, 37, 66, 3, 79, 41, 38, 68]
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 494
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.9624) feature loss: tensor(0.5434)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.9399) feature loss: tensor(0.4971)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.9522) feature loss: tensor(0.5371)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.9038) feature loss: tensor(0.5445)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.9132) feature loss: tensor(0.4817)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.8564) feature loss: tensor(0.5629)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.9668) feature loss: tensor(0.5285)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.9450) feature loss: tensor(0.5480)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.9190) feature loss: tensor(0.4928)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.8938) feature loss: tensor(0.4580)
Global Model Acc on global data: 0.4627 length of data: 10000
save a model
-------------Round number:  11  -------------
selected users: [46, 49, 22, 58, 41, 98, 62, 29, 30, 51]
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
all data: 496
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.7833) feature loss: tensor(0.4358)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.8408) feature loss: tensor(0.4593)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.8275) feature loss: tensor(0.4484)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.8102) feature loss: tensor(0.4404)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.8031) feature loss: tensor(0.4943)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.8937) feature loss: tensor(0.4490)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.7944) feature loss: tensor(0.4785)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.9552) feature loss: tensor(0.4605)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.8539) feature loss: tensor(0.4530)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.8360) feature loss: tensor(0.4832)
Global Model Acc on global data: 0.4743 length of data: 10000
save a model
-------------Round number:  12  -------------
selected users: [17, 41, 92, 14, 68, 31, 89, 15, 21, 60]
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
all data: 505
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.7755) feature loss: tensor(0.4207)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.7505) feature loss: tensor(0.4969)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.8771) feature loss: tensor(0.5081)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.8006) feature loss: tensor(0.4439)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.7504) feature loss: tensor(0.4230)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.8458) feature loss: tensor(0.4933)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.8463) feature loss: tensor(0.4799)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.7936) feature loss: tensor(0.4960)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.8719) feature loss: tensor(0.4774)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.8249) feature loss: tensor(0.4279)
Global Model Acc on global data: 0.473 length of data: 10000
-------------Round number:  13  -------------
selected users: [37, 62, 83, 14, 43, 9, 44, 31, 69, 57]
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([57, 16, 32, 32]) torch.Size([57])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 505
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.7443) feature loss: tensor(0.4218)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.7229) feature loss: tensor(0.4382)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.7563) feature loss: tensor(0.4448)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.7179) feature loss: tensor(0.4186)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.7507) feature loss: tensor(0.4566)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.8023) feature loss: tensor(0.4330)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.7311) feature loss: tensor(0.4051)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.7670) feature loss: tensor(0.4371)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.8127) feature loss: tensor(0.4373)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.7926) feature loss: tensor(0.4370)
Global Model Acc on global data: 0.4972 length of data: 10000
save a model
-------------Round number:  14  -------------
selected users: [24, 39, 35, 44, 55, 70, 82, 40, 91, 65]
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
all data: 489
Local adapation with distilling: 0.000748
training loss: tensor(0.8288) feature loss: tensor(0.4269)
Local adapation with distilling: 0.000748
training loss: tensor(0.8132) feature loss: tensor(0.4406)
Local adapation with distilling: 0.000748
training loss: tensor(0.8356) feature loss: tensor(0.4309)
Local adapation with distilling: 0.000748
training loss: tensor(0.7152) feature loss: tensor(0.4167)
Local adapation with distilling: 0.000748
training loss: tensor(0.8333) feature loss: tensor(0.4305)
Local adapation with distilling: 0.000748
training loss: tensor(0.8033) feature loss: tensor(0.4761)
Local adapation with distilling: 0.000748
training loss: tensor(0.8970) feature loss: tensor(0.4662)
Local adapation with distilling: 0.000748
training loss: tensor(0.8239) feature loss: tensor(0.4339)
Local adapation with distilling: 0.000748
training loss: tensor(0.8490) feature loss: tensor(0.4688)
Local adapation with distilling: 0.000748
training loss: tensor(0.7840) feature loss: tensor(0.4534)
Global Model Acc on global data: 0.509 length of data: 10000
save a model
-------------Round number:  15  -------------
selected users: [84, 36, 57, 51, 46, 78, 93, 14, 11, 59]
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
all data: 492
Local adapation with distilling: 0.00073
training loss: tensor(0.7934) feature loss: tensor(0.4004)
Local adapation with distilling: 0.00073
training loss: tensor(0.7623) feature loss: tensor(0.3997)
Local adapation with distilling: 0.00073
training loss: tensor(0.7219) feature loss: tensor(0.4017)
Local adapation with distilling: 0.00073
training loss: tensor(0.7444) feature loss: tensor(0.4450)
Local adapation with distilling: 0.00073
training loss: tensor(0.6654) feature loss: tensor(0.3861)
Local adapation with distilling: 0.00073
training loss: tensor(0.7911) feature loss: tensor(0.4113)
Local adapation with distilling: 0.00073
training loss: tensor(0.7302) feature loss: tensor(0.3877)
Local adapation with distilling: 0.00073
training loss: tensor(0.6539) feature loss: tensor(0.3825)
Local adapation with distilling: 0.00073
training loss: tensor(0.7708) feature loss: tensor(0.4288)
Local adapation with distilling: 0.00073
training loss: tensor(0.9990) feature loss: tensor(0.4250)
Global Model Acc on global data: 0.5253 length of data: 10000
save a model
-------------Round number:  16  -------------
selected users: [7, 25, 71, 42, 47, 29, 63, 88, 50, 9]
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
all data: 496
Local adapation with distilling: 0.000712
training loss: tensor(0.7577) feature loss: tensor(0.4107)
Local adapation with distilling: 0.000712
training loss: tensor(0.7334) feature loss: tensor(0.4151)
Local adapation with distilling: 0.000712
training loss: tensor(0.7317) feature loss: tensor(0.4027)
Local adapation with distilling: 0.000712
training loss: tensor(0.7018) feature loss: tensor(0.4004)
Local adapation with distilling: 0.000712
training loss: tensor(0.7470) feature loss: tensor(0.3742)
Local adapation with distilling: 0.000712
training loss: tensor(0.7666) feature loss: tensor(0.3914)
Local adapation with distilling: 0.000712
training loss: tensor(0.7133) feature loss: tensor(0.3793)
Local adapation with distilling: 0.000712
training loss: tensor(0.6851) feature loss: tensor(0.3621)
Local adapation with distilling: 0.000712
training loss: tensor(0.7540) feature loss: tensor(0.3690)
Local adapation with distilling: 0.000712
training loss: tensor(0.7135) feature loss: tensor(0.3684)
Global Model Acc on global data: 0.5304 length of data: 10000
save a model
-------------Round number:  17  -------------
selected users: [71, 28, 9, 4, 73, 34, 94, 92, 47, 37]
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
all data: 499
Local adapation with distilling: 0.000694
training loss: tensor(0.6780) feature loss: tensor(0.3857)
Local adapation with distilling: 0.000694
training loss: tensor(0.6978) feature loss: tensor(0.3787)
Local adapation with distilling: 0.000694
training loss: tensor(0.6114) feature loss: tensor(0.3339)
Local adapation with distilling: 0.000694
training loss: tensor(0.6906) feature loss: tensor(0.3715)
Local adapation with distilling: 0.000694
training loss: tensor(0.7566) feature loss: tensor(0.3863)
Local adapation with distilling: 0.000694
training loss: tensor(0.7400) feature loss: tensor(0.3339)
Local adapation with distilling: 0.000694
training loss: tensor(0.6833) feature loss: tensor(0.3691)
Local adapation with distilling: 0.000694
training loss: tensor(0.7411) feature loss: tensor(0.3905)
Local adapation with distilling: 0.000694
training loss: tensor(0.6526) feature loss: tensor(0.3521)
Local adapation with distilling: 0.000694
training loss: tensor(0.6493) feature loss: tensor(0.3822)
Global Model Acc on global data: 0.5422 length of data: 10000
save a model
-------------Round number:  18  -------------
selected users: [53, 47, 43, 54, 33, 48, 0, 12, 44, 91]
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
all data: 498
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.8017) feature loss: tensor(0.4285)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.6905) feature loss: tensor(0.3938)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.7080) feature loss: tensor(0.4487)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.8542) feature loss: tensor(0.3926)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.7888) feature loss: tensor(0.4370)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.7583) feature loss: tensor(0.4380)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.8099) feature loss: tensor(0.4202)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.9454) feature loss: tensor(0.4494)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.7109) feature loss: tensor(0.4021)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.7792) feature loss: tensor(0.4156)
Global Model Acc on global data: 0.5487 length of data: 10000
save a model
-------------Round number:  19  -------------
selected users: [85, 72, 16, 18, 2, 38, 90, 30, 83, 61]
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([57, 16, 32, 32]) torch.Size([57])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
all data: 502
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.7844) feature loss: tensor(0.4163)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.9293) feature loss: tensor(0.4551)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.7977) feature loss: tensor(0.3949)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.7787) feature loss: tensor(0.4200)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.9098) feature loss: tensor(0.4576)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.7766) feature loss: tensor(0.3888)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.7874) feature loss: tensor(0.4585)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.7630) feature loss: tensor(0.4226)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.7562) feature loss: tensor(0.4630)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.7832) feature loss: tensor(0.4276)
Global Model Acc on global data: 0.5463 length of data: 10000
-------------Round number:  20  -------------
selected users: [70, 74, 2, 44, 56, 48, 12, 36, 0, 49]
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 495
Local adapation with distilling: 0.00064
training loss: tensor(0.6166) feature loss: tensor(0.3556)
Local adapation with distilling: 0.00064
training loss: tensor(0.6259) feature loss: tensor(0.3140)
Local adapation with distilling: 0.00064
training loss: tensor(0.6325) feature loss: tensor(0.3005)
Local adapation with distilling: 0.00064
training loss: tensor(0.5170) feature loss: tensor(0.3151)
Local adapation with distilling: 0.00064
training loss: tensor(0.6762) feature loss: tensor(0.3161)
Local adapation with distilling: 0.00064
training loss: tensor(0.5649) feature loss: tensor(0.3350)
Local adapation with distilling: 0.00064
training loss: tensor(0.8108) feature loss: tensor(0.3261)
Local adapation with distilling: 0.00064
training loss: tensor(0.6093) feature loss: tensor(0.3384)
Local adapation with distilling: 0.00064
training loss: tensor(0.6280) feature loss: tensor(0.3496)
Local adapation with distilling: 0.00064
training loss: tensor(0.6004) feature loss: tensor(0.3416)
Global Model Acc on global data: 0.5401 length of data: 10000
-------------Round number:  21  -------------
selected users: [23, 81, 85, 34, 62, 46, 42, 31, 93, 11]
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
all data: 495
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.6900) feature loss: tensor(0.3810)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.7234) feature loss: tensor(0.3970)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.6319) feature loss: tensor(0.3525)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.6855) feature loss: tensor(0.3702)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.6447) feature loss: tensor(0.4030)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.6217) feature loss: tensor(0.3495)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.6771) feature loss: tensor(0.3866)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.6775) feature loss: tensor(0.3863)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.6642) feature loss: tensor(0.3579)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.7055) feature loss: tensor(0.3884)
Global Model Acc on global data: 0.5661 length of data: 10000
save a model
-------------Round number:  22  -------------
selected users: [2, 49, 82, 31, 37, 12, 87, 42, 99, 85]
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
all data: 501
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.6085) feature loss: tensor(0.3002)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.5366) feature loss: tensor(0.3037)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.7010) feature loss: tensor(0.3236)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.5273) feature loss: tensor(0.3087)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.5341) feature loss: tensor(0.3124)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.6091) feature loss: tensor(0.3069)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.6488) feature loss: tensor(0.2968)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.5467) feature loss: tensor(0.3125)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.6022) feature loss: tensor(0.3078)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.4895) feature loss: tensor(0.2765)
Global Model Acc on global data: 0.5599 length of data: 10000
-------------Round number:  23  -------------
selected users: [26, 80, 82, 68, 77, 37, 3, 55, 20, 17]
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
all data: 498
Local adapation with distilling: 0.000586
training loss: tensor(0.9696) feature loss: tensor(0.3506)
Local adapation with distilling: 0.000586
training loss: tensor(0.6476) feature loss: tensor(0.3612)
Local adapation with distilling: 0.000586
training loss: tensor(0.7023) feature loss: tensor(0.3701)
Local adapation with distilling: 0.000586
training loss: tensor(0.6217) feature loss: tensor(0.3155)
Local adapation with distilling: 0.000586
training loss: tensor(0.6898) feature loss: tensor(0.3442)
Local adapation with distilling: 0.000586
training loss: tensor(0.5648) feature loss: tensor(0.3228)
Local adapation with distilling: 0.000586
training loss: tensor(0.6348) feature loss: tensor(0.3657)
Local adapation with distilling: 0.000586
training loss: tensor(0.6856) feature loss: tensor(0.3151)
Local adapation with distilling: 0.000586
training loss: tensor(0.6461) feature loss: tensor(0.3332)
Local adapation with distilling: 0.000586
training loss: tensor(0.6221) feature loss: tensor(0.3271)
Global Model Acc on global data: 0.5703 length of data: 10000
save a model
-------------Round number:  24  -------------
selected users: [26, 31, 37, 86, 76, 14, 88, 48, 71, 67]
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
all data: 501
Local adapation with distilling: 0.000568
training loss: tensor(0.8922) feature loss: tensor(0.2946)
Local adapation with distilling: 0.000568
training loss: tensor(0.4933) feature loss: tensor(0.2967)
Local adapation with distilling: 0.000568
training loss: tensor(0.4637) feature loss: tensor(0.2736)
Local adapation with distilling: 0.000568
training loss: tensor(0.5424) feature loss: tensor(0.2824)
Local adapation with distilling: 0.000568
training loss: tensor(0.6162) feature loss: tensor(0.2804)
Local adapation with distilling: 0.000568
training loss: tensor(0.5342) feature loss: tensor(0.2930)
Local adapation with distilling: 0.000568
training loss: tensor(0.5405) feature loss: tensor(0.2944)
Local adapation with distilling: 0.000568
training loss: tensor(0.4989) feature loss: tensor(0.2689)
Local adapation with distilling: 0.000568
training loss: tensor(0.5327) feature loss: tensor(0.2939)
Local adapation with distilling: 0.000568
training loss: tensor(0.5662) feature loss: tensor(0.2870)
Global Model Acc on global data: 0.5679 length of data: 10000
-------------Round number:  25  -------------
selected users: [41, 29, 33, 65, 74, 6, 57, 89, 87, 98]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
all data: 501
Local adapation with distilling: 0.00055
training loss: tensor(0.6415) feature loss: tensor(0.3526)
Local adapation with distilling: 0.00055
training loss: tensor(0.8395) feature loss: tensor(0.3394)
Local adapation with distilling: 0.00055
training loss: tensor(0.6920) feature loss: tensor(0.3897)
Local adapation with distilling: 0.00055
training loss: tensor(0.6193) feature loss: tensor(0.3363)
Local adapation with distilling: 0.00055
training loss: tensor(0.6499) feature loss: tensor(0.3326)
Local adapation with distilling: 0.00055
training loss: tensor(0.6785) feature loss: tensor(0.3331)
Local adapation with distilling: 0.00055
training loss: tensor(0.6482) feature loss: tensor(0.3389)
Local adapation with distilling: 0.00055
training loss: tensor(0.6567) feature loss: tensor(0.3567)
Local adapation with distilling: 0.00055
training loss: tensor(0.6672) feature loss: tensor(0.3307)
Local adapation with distilling: 0.00055
training loss: tensor(0.6892) feature loss: tensor(0.3399)
Global Model Acc on global data: 0.5797 length of data: 10000
save a model
-------------Round number:  26  -------------
selected users: [8, 69, 84, 41, 25, 5, 63, 95, 33, 70]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
all data: 494
Local adapation with distilling: 0.000532
training loss: tensor(0.6626) feature loss: tensor(0.3443)
Local adapation with distilling: 0.000532
training loss: tensor(0.6827) feature loss: tensor(0.3677)
Local adapation with distilling: 0.000532
training loss: tensor(0.6926) feature loss: tensor(0.3317)
Local adapation with distilling: 0.000532
training loss: tensor(0.5772) feature loss: tensor(0.3752)
Local adapation with distilling: 0.000532
training loss: tensor(0.6218) feature loss: tensor(0.3562)
Local adapation with distilling: 0.000532
training loss: tensor(0.7015) feature loss: tensor(0.3595)
Local adapation with distilling: 0.000532
training loss: tensor(0.6481) feature loss: tensor(0.3430)
Local adapation with distilling: 0.000532
training loss: tensor(0.6532) feature loss: tensor(0.3745)
Local adapation with distilling: 0.000532
training loss: tensor(0.6073) feature loss: tensor(0.3561)
Local adapation with distilling: 0.000532
training loss: tensor(0.6110) feature loss: tensor(0.3871)
Global Model Acc on global data: 0.5819 length of data: 10000
save a model
-------------Round number:  27  -------------
selected users: [89, 68, 43, 50, 40, 95, 27, 85, 22, 44]
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
all data: 493
Local adapation with distilling: 0.000514
training loss: tensor(0.5605) feature loss: tensor(0.3024)
Local adapation with distilling: 0.000514
training loss: tensor(0.5360) feature loss: tensor(0.2773)
Local adapation with distilling: 0.000514
training loss: tensor(0.5460) feature loss: tensor(0.2932)
Local adapation with distilling: 0.000514
training loss: tensor(0.5651) feature loss: tensor(0.2618)
Local adapation with distilling: 0.000514
training loss: tensor(0.6108) feature loss: tensor(0.2744)
Local adapation with distilling: 0.000514
training loss: tensor(0.5369) feature loss: tensor(0.3306)
Local adapation with distilling: 0.000514
training loss: tensor(0.6038) feature loss: tensor(0.2749)
Local adapation with distilling: 0.000514
training loss: tensor(0.4869) feature loss: tensor(0.2670)
Local adapation with distilling: 0.000514
training loss: tensor(0.5839) feature loss: tensor(0.3161)
Local adapation with distilling: 0.000514
training loss: tensor(0.5154) feature loss: tensor(0.2905)
Global Model Acc on global data: 0.5966 length of data: 10000
save a model
-------------Round number:  28  -------------
selected users: [67, 14, 0, 86, 13, 18, 30, 36, 52, 95]
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 494
Local adapation with distilling: 0.000496
training loss: tensor(0.5460) feature loss: tensor(0.3049)
Local adapation with distilling: 0.000496
training loss: tensor(0.5307) feature loss: tensor(0.3021)
Local adapation with distilling: 0.000496
training loss: tensor(0.5557) feature loss: tensor(0.2975)
Local adapation with distilling: 0.000496
training loss: tensor(0.5281) feature loss: tensor(0.3025)
Local adapation with distilling: 0.000496
training loss: tensor(0.6292) feature loss: tensor(0.2968)
Local adapation with distilling: 0.000496
training loss: tensor(0.5610) feature loss: tensor(0.2961)
Local adapation with distilling: 0.000496
training loss: tensor(0.5400) feature loss: tensor(0.2886)
Local adapation with distilling: 0.000496
training loss: tensor(0.5594) feature loss: tensor(0.3114)
Local adapation with distilling: 0.000496
training loss: tensor(0.5531) feature loss: tensor(0.3197)
Local adapation with distilling: 0.000496
training loss: tensor(0.5169) feature loss: tensor(0.3214)
Global Model Acc on global data: 0.5984 length of data: 10000
save a model
-------------Round number:  29  -------------
selected users: [73, 8, 10, 7, 19, 71, 92, 25, 38, 12]
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
all data: 503
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.5577) feature loss: tensor(0.2720)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.5111) feature loss: tensor(0.2788)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.5355) feature loss: tensor(0.2573)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.5032) feature loss: tensor(0.2665)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.5424) feature loss: tensor(0.2600)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.4683) feature loss: tensor(0.2653)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.5563) feature loss: tensor(0.2705)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.4713) feature loss: tensor(0.2689)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.5285) feature loss: tensor(0.2415)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.6579) feature loss: tensor(0.2472)
Global Model Acc on global data: 0.6032 length of data: 10000
save a model
-------------Round number:  30  -------------
selected users: [20, 91, 34, 52, 8, 74, 21, 88, 80, 89]
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
all data: 496
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.4932) feature loss: tensor(0.2490)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.4950) feature loss: tensor(0.2647)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.5800) feature loss: tensor(0.2586)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.4700) feature loss: tensor(0.2663)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.4718) feature loss: tensor(0.2690)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.5119) feature loss: tensor(0.2508)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.5055) feature loss: tensor(0.2665)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.4740) feature loss: tensor(0.2590)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.4987) feature loss: tensor(0.2706)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.4787) feature loss: tensor(0.2649)
Global Model Acc on global data: 0.5968 length of data: 10000
-------------Round number:  31  -------------
selected users: [17, 33, 76, 3, 56, 0, 37, 8, 60, 67]
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
all data: 494
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.5457) feature loss: tensor(0.2450)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.5160) feature loss: tensor(0.2909)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.5723) feature loss: tensor(0.2462)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.5213) feature loss: tensor(0.2755)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.6412) feature loss: tensor(0.2540)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.4960) feature loss: tensor(0.2718)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.4525) feature loss: tensor(0.2669)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.4550) feature loss: tensor(0.2698)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.5926) feature loss: tensor(0.2422)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.4856) feature loss: tensor(0.2705)
Global Model Acc on global data: 0.5979 length of data: 10000
-------------Round number:  32  -------------
selected users: [22, 39, 85, 97, 55, 33, 80, 13, 27, 96]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
all data: 490
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.5418) feature loss: tensor(0.2852)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.5986) feature loss: tensor(0.2647)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.4859) feature loss: tensor(0.2484)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.5617) feature loss: tensor(0.2787)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.6130) feature loss: tensor(0.2603)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.5100) feature loss: tensor(0.2875)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.4996) feature loss: tensor(0.2959)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.5708) feature loss: tensor(0.2666)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.5525) feature loss: tensor(0.2635)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.5790) feature loss: tensor(0.3021)
Global Model Acc on global data: 0.6035 length of data: 10000
save a model
-------------Round number:  33  -------------
selected users: [56, 90, 95, 82, 60, 71, 6, 81, 2, 70]
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
all data: 500
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.5681) feature loss: tensor(0.2764)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.5863) feature loss: tensor(0.2887)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.4936) feature loss: tensor(0.3178)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.5562) feature loss: tensor(0.2970)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.5869) feature loss: tensor(0.2725)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.5128) feature loss: tensor(0.2900)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.5425) feature loss: tensor(0.2843)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.5761) feature loss: tensor(0.3161)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.6823) feature loss: tensor(0.2888)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.5225) feature loss: tensor(0.2891)
Global Model Acc on global data: 0.6162 length of data: 10000
save a model
-------------Round number:  34  -------------
selected users: [14, 74, 15, 4, 32, 59, 91, 10, 50, 53]
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
all data: 500
Local adapation with distilling: 0.000388
training loss: tensor(0.4892) feature loss: tensor(0.2717)
Local adapation with distilling: 0.000388
training loss: tensor(0.5126) feature loss: tensor(0.2683)
Local adapation with distilling: 0.000388
training loss: tensor(0.5449) feature loss: tensor(0.2813)
Local adapation with distilling: 0.000388
training loss: tensor(0.5298) feature loss: tensor(0.2798)
Local adapation with distilling: 0.000388
training loss: tensor(0.6864) feature loss: tensor(0.2760)
Local adapation with distilling: 0.000388
training loss: tensor(0.6480) feature loss: tensor(0.2913)
Local adapation with distilling: 0.000388
training loss: tensor(0.5027) feature loss: tensor(0.2959)
Local adapation with distilling: 0.000388
training loss: tensor(0.5339) feature loss: tensor(0.2692)
Local adapation with distilling: 0.000388
training loss: tensor(0.5619) feature loss: tensor(0.2527)
Local adapation with distilling: 0.000388
training loss: tensor(0.5458) feature loss: tensor(0.2988)
Global Model Acc on global data: 0.6104 length of data: 10000
-------------Round number:  35  -------------
selected users: [40, 71, 98, 27, 70, 31, 10, 24, 51, 35]
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 496
Local adapation with distilling: 0.00037
training loss: tensor(0.5300) feature loss: tensor(0.2358)
Local adapation with distilling: 0.00037
training loss: tensor(0.4644) feature loss: tensor(0.2707)
Local adapation with distilling: 0.00037
training loss: tensor(0.5889) feature loss: tensor(0.2480)
Local adapation with distilling: 0.00037
training loss: tensor(0.4700) feature loss: tensor(0.2464)
Local adapation with distilling: 0.00037
training loss: tensor(0.4568) feature loss: tensor(0.2824)
Local adapation with distilling: 0.00037
training loss: tensor(0.4827) feature loss: tensor(0.2853)
Local adapation with distilling: 0.00037
training loss: tensor(0.4555) feature loss: tensor(0.2418)
Local adapation with distilling: 0.00037
training loss: tensor(0.6102) feature loss: tensor(0.2471)
Local adapation with distilling: 0.00037
training loss: tensor(0.5649) feature loss: tensor(0.2853)
Local adapation with distilling: 0.00037
training loss: tensor(0.5914) feature loss: tensor(0.2431)
Global Model Acc on global data: 0.617 length of data: 10000
save a model
-------------Round number:  36  -------------
selected users: [59, 42, 2, 27, 28, 75, 58, 68, 52, 74]
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 502
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.6029) feature loss: tensor(0.2617)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.4803) feature loss: tensor(0.2840)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.5374) feature loss: tensor(0.2585)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.4266) feature loss: tensor(0.2615)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.5003) feature loss: tensor(0.2500)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.6474) feature loss: tensor(0.2368)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.5273) feature loss: tensor(0.2717)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.4940) feature loss: tensor(0.2660)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.4517) feature loss: tensor(0.2717)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.4536) feature loss: tensor(0.2535)
Global Model Acc on global data: 0.6151 length of data: 10000
-------------Round number:  37  -------------
selected users: [61, 49, 86, 78, 5, 91, 81, 82, 89, 18]
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
all data: 508
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.5023) feature loss: tensor(0.2570)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.4878) feature loss: tensor(0.2284)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.4558) feature loss: tensor(0.2414)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.5017) feature loss: tensor(0.2372)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.5080) feature loss: tensor(0.2458)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.4204) feature loss: tensor(0.2503)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.4660) feature loss: tensor(0.2370)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.5231) feature loss: tensor(0.2569)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.4455) feature loss: tensor(0.2534)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.4846) feature loss: tensor(0.2297)
Global Model Acc on global data: 0.6126 length of data: 10000
-------------Round number:  38  -------------
selected users: [40, 73, 49, 45, 64, 16, 69, 17, 72, 66]
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
all data: 491
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.5297) feature loss: tensor(0.2718)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.5864) feature loss: tensor(0.2943)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.5355) feature loss: tensor(0.3148)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.6102) feature loss: tensor(0.3081)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.6366) feature loss: tensor(0.2761)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.5742) feature loss: tensor(0.2741)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.5814) feature loss: tensor(0.3156)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.5322) feature loss: tensor(0.2822)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.7323) feature loss: tensor(0.3135)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.6430) feature loss: tensor(0.2694)
Global Model Acc on global data: 0.613 length of data: 10000
-------------Round number:  39  -------------
selected users: [22, 53, 84, 57, 87, 58, 29, 21, 85, 79]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
all data: 494
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.5123) feature loss: tensor(0.2902)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.5012) feature loss: tensor(0.2829)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.5455) feature loss: tensor(0.2436)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.4972) feature loss: tensor(0.2541)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.5518) feature loss: tensor(0.2451)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.4980) feature loss: tensor(0.2443)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.6611) feature loss: tensor(0.2541)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.5269) feature loss: tensor(0.2649)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.4445) feature loss: tensor(0.2227)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.5676) feature loss: tensor(0.2592)
Global Model Acc on global data: 0.6301 length of data: 10000
save a model
-------------Round number:  40  -------------
selected users: [79, 75, 63, 15, 38, 11, 40, 45, 39, 62]
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 497
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.5247) feature loss: tensor(0.2522)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.6271) feature loss: tensor(0.2296)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.5354) feature loss: tensor(0.2529)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.5313) feature loss: tensor(0.2782)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.5423) feature loss: tensor(0.2432)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.5883) feature loss: tensor(0.2694)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.4696) feature loss: tensor(0.2353)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.5224) feature loss: tensor(0.2642)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.5435) feature loss: tensor(0.2627)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.5423) feature loss: tensor(0.2569)
Global Model Acc on global data: 0.6279 length of data: 10000
-------------Round number:  41  -------------
selected users: [42, 94, 37, 6, 79, 32, 24, 0, 33, 93]
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
all data: 494
Local adapation with distilling: 0.000262
training loss: tensor(0.4471) feature loss: tensor(0.2282)
Local adapation with distilling: 0.000262
training loss: tensor(0.4945) feature loss: tensor(0.2368)
Local adapation with distilling: 0.000262
training loss: tensor(0.4132) feature loss: tensor(0.2366)
Local adapation with distilling: 0.000262
training loss: tensor(0.4441) feature loss: tensor(0.2126)
Local adapation with distilling: 0.000262
training loss: tensor(0.4443) feature loss: tensor(0.2209)
Local adapation with distilling: 0.000262
training loss: tensor(0.5495) feature loss: tensor(0.2111)
Local adapation with distilling: 0.000262
training loss: tensor(0.5292) feature loss: tensor(0.2131)
Local adapation with distilling: 0.000262
training loss: tensor(0.4709) feature loss: tensor(0.2269)
Local adapation with distilling: 0.000262
training loss: tensor(0.4693) feature loss: tensor(0.2506)
Local adapation with distilling: 0.000262
training loss: tensor(0.4930) feature loss: tensor(0.2075)
Global Model Acc on global data: 0.6264 length of data: 10000
-------------Round number:  42  -------------
selected users: [83, 53, 70, 45, 44, 39, 22, 80, 10, 0]
random features: torch.Size([57, 16, 32, 32]) torch.Size([57])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
all data: 502
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.4747) feature loss: tensor(0.2359)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.4201) feature loss: tensor(0.2330)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.4077) feature loss: tensor(0.2305)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.4185) feature loss: tensor(0.2194)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.4274) feature loss: tensor(0.2128)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.4207) feature loss: tensor(0.2151)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.4270) feature loss: tensor(0.2395)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.4390) feature loss: tensor(0.2355)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.4168) feature loss: tensor(0.2088)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.4665) feature loss: tensor(0.2280)
Global Model Acc on global data: 0.6339 length of data: 10000
save a model
-------------Round number:  43  -------------
selected users: [20, 2, 15, 22, 57, 91, 69, 55, 11, 79]
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
all data: 499
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.4221) feature loss: tensor(0.1894)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.4159) feature loss: tensor(0.1915)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.3816) feature loss: tensor(0.2056)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.3495) feature loss: tensor(0.2061)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.3628) feature loss: tensor(0.1962)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.3684) feature loss: tensor(0.1991)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.4147) feature loss: tensor(0.1909)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.5008) feature loss: tensor(0.1746)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.4548) feature loss: tensor(0.2023)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.3524) feature loss: tensor(0.1965)
Global Model Acc on global data: 0.6319 length of data: 10000
-------------Round number:  44  -------------
selected users: [42, 54, 27, 93, 39, 65, 7, 26, 24, 60]
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
all data: 490
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.4593) feature loss: tensor(0.2429)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.6225) feature loss: tensor(0.2290)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.4424) feature loss: tensor(0.2206)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.4858) feature loss: tensor(0.2177)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.4584) feature loss: tensor(0.2374)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.4920) feature loss: tensor(0.2205)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.5406) feature loss: tensor(0.2450)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(1.0012) feature loss: tensor(0.2564)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.5075) feature loss: tensor(0.2297)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.5443) feature loss: tensor(0.2276)
Global Model Acc on global data: 0.6342 length of data: 10000
save a model
-------------Round number:  45  -------------
selected users: [0, 1, 62, 76, 37, 99, 78, 38, 2, 84]
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
all data: 498
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.3562) feature loss: tensor(0.1799)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.4390) feature loss: tensor(0.1949)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.3738) feature loss: tensor(0.1893)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.4261) feature loss: tensor(0.1663)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.3596) feature loss: tensor(0.1843)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.4313) feature loss: tensor(0.1830)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.4155) feature loss: tensor(0.1928)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.4041) feature loss: tensor(0.1644)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.3882) feature loss: tensor(0.1820)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.4278) feature loss: tensor(0.1745)
Global Model Acc on global data: 0.6311 length of data: 10000
-------------Round number:  46  -------------
selected users: [71, 33, 37, 10, 44, 34, 24, 98, 73, 95]
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 493
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.4362) feature loss: tensor(0.2142)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.4264) feature loss: tensor(0.2291)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.3862) feature loss: tensor(0.2212)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.4193) feature loss: tensor(0.2016)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.4142) feature loss: tensor(0.2141)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.5372) feature loss: tensor(0.1955)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.4284) feature loss: tensor(0.1862)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.5238) feature loss: tensor(0.2096)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.5541) feature loss: tensor(0.2255)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.4374) feature loss: tensor(0.2282)
Global Model Acc on global data: 0.6304 length of data: 10000
-------------Round number:  47  -------------
selected users: [17, 90, 94, 86, 63, 5, 38, 14, 40, 47]
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 494
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.4153) feature loss: tensor(0.2015)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.4764) feature loss: tensor(0.2160)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.4438) feature loss: tensor(0.2167)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.4379) feature loss: tensor(0.2356)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.4434) feature loss: tensor(0.2228)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.5288) feature loss: tensor(0.2290)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.4048) feature loss: tensor(0.1985)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.4364) feature loss: tensor(0.2212)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.4069) feature loss: tensor(0.1967)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.5211) feature loss: tensor(0.2047)
Global Model Acc on global data: 0.6303 length of data: 10000
-------------Round number:  48  -------------
selected users: [93, 5, 71, 9, 11, 79, 69, 8, 59, 63]
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
all data: 500
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.4022) feature loss: tensor(0.1722)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.4230) feature loss: tensor(0.1905)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.3985) feature loss: tensor(0.1893)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.5009) feature loss: tensor(0.1922)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.4363) feature loss: tensor(0.1906)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.3964) feature loss: tensor(0.1858)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.4289) feature loss: tensor(0.1827)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.4146) feature loss: tensor(0.1970)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.5489) feature loss: tensor(0.1980)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.3783) feature loss: tensor(0.1762)
Global Model Acc on global data: 0.6273 length of data: 10000
-------------Round number:  49  -------------
selected users: [76, 25, 28, 75, 81, 47, 41, 22, 29, 1]
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.5115) feature loss: tensor(0.1871)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.5035) feature loss: tensor(0.2174)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.5006) feature loss: tensor(0.1883)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.5872) feature loss: tensor(0.1859)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.4757) feature loss: tensor(0.2031)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.5016) feature loss: tensor(0.1849)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.4961) feature loss: tensor(0.2298)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.4264) feature loss: tensor(0.2100)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.6503) feature loss: tensor(0.2132)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.5363) feature loss: tensor(0.2134)
Global Model Acc on global data: 0.6329 length of data: 10000
-------------Round number:  50  -------------
selected users: [80, 79, 25, 15, 39, 40, 53, 17, 57, 50]
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
all data: 495
Local adapation with distilling: 0.0001
training loss: tensor(0.3757) feature loss: tensor(0.1762)
Local adapation with distilling: 0.0001
training loss: tensor(0.3340) feature loss: tensor(0.1720)
Local adapation with distilling: 0.0001
training loss: tensor(0.3810) feature loss: tensor(0.1754)
Local adapation with distilling: 0.0001
training loss: tensor(0.3771) feature loss: tensor(0.1860)
Local adapation with distilling: 0.0001
training loss: tensor(0.3557) feature loss: tensor(0.1732)
Local adapation with distilling: 0.0001
training loss: tensor(0.3205) feature loss: tensor(0.1526)
Local adapation with distilling: 0.0001
training loss: tensor(0.3891) feature loss: tensor(0.1727)
Local adapation with distilling: 0.0001
training loss: tensor(0.3442) feature loss: tensor(0.1529)
Local adapation with distilling: 0.0001
training loss: tensor(0.3560) feature loss: tensor(0.1623)
Local adapation with distilling: 0.0001
training loss: tensor(0.4613) feature loss: tensor(0.1529)
Global Model Acc on global data: 0.6302 length of data: 10000
-------------Round number:  51  -------------
selected users: [71, 43, 11, 83, 78, 19, 80, 4, 79, 75]
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([57, 16, 32, 32]) torch.Size([57])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 508
Local adapation with distilling: 0.0001
training loss: tensor(0.4088) feature loss: tensor(0.2000)
Local adapation with distilling: 0.0001
training loss: tensor(0.4979) feature loss: tensor(0.2065)
Local adapation with distilling: 0.0001
training loss: tensor(0.4916) feature loss: tensor(0.1981)
Local adapation with distilling: 0.0001
training loss: tensor(0.4902) feature loss: tensor(0.2098)
Local adapation with distilling: 0.0001
training loss: tensor(0.5145) feature loss: tensor(0.1938)
Local adapation with distilling: 0.0001
training loss: tensor(0.5755) feature loss: tensor(0.2064)
Local adapation with distilling: 0.0001
training loss: tensor(0.4095) feature loss: tensor(0.1968)
Local adapation with distilling: 0.0001
training loss: tensor(0.4900) feature loss: tensor(0.1937)
Local adapation with distilling: 0.0001
training loss: tensor(0.3621) feature loss: tensor(0.1812)
Local adapation with distilling: 0.0001
training loss: tensor(0.4740) feature loss: tensor(0.1796)
Global Model Acc on global data: 0.6314 length of data: 10000
-------------Round number:  52  -------------
selected users: [82, 8, 44, 19, 2, 73, 37, 89, 67, 18]
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
all data: 499
Local adapation with distilling: 0.0001
training loss: tensor(0.4038) feature loss: tensor(0.1582)
Local adapation with distilling: 0.0001
training loss: tensor(0.3479) feature loss: tensor(0.1680)
Local adapation with distilling: 0.0001
training loss: tensor(0.3220) feature loss: tensor(0.1485)
Local adapation with distilling: 0.0001
training loss: tensor(0.4114) feature loss: tensor(0.1666)
Local adapation with distilling: 0.0001
training loss: tensor(0.3743) feature loss: tensor(0.1490)
Local adapation with distilling: 0.0001
training loss: tensor(0.4136) feature loss: tensor(0.1608)
Local adapation with distilling: 0.0001
training loss: tensor(0.2876) feature loss: tensor(0.1546)
Local adapation with distilling: 0.0001
training loss: tensor(0.3440) feature loss: tensor(0.1615)
Local adapation with distilling: 0.0001
training loss: tensor(0.3778) feature loss: tensor(0.1557)
Local adapation with distilling: 0.0001
training loss: tensor(0.4183) feature loss: tensor(0.1542)
Global Model Acc on global data: 0.6318 length of data: 10000
-------------Round number:  53  -------------
selected users: [19, 78, 64, 3, 71, 32, 68, 42, 55, 97]
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
all data: 496
Local adapation with distilling: 0.0001
training loss: tensor(0.4518) feature loss: tensor(0.1979)
Local adapation with distilling: 0.0001
training loss: tensor(0.4432) feature loss: tensor(0.1968)
Local adapation with distilling: 0.0001
training loss: tensor(0.5655) feature loss: tensor(0.1823)
Local adapation with distilling: 0.0001
training loss: tensor(0.4892) feature loss: tensor(0.2041)
Local adapation with distilling: 0.0001
training loss: tensor(0.3523) feature loss: tensor(0.2037)
Local adapation with distilling: 0.0001
training loss: tensor(0.5683) feature loss: tensor(0.1855)
Local adapation with distilling: 0.0001
training loss: tensor(0.4898) feature loss: tensor(0.1925)
Local adapation with distilling: 0.0001
training loss: tensor(0.4071) feature loss: tensor(0.1934)
Local adapation with distilling: 0.0001
training loss: tensor(0.5328) feature loss: tensor(0.1792)
Local adapation with distilling: 0.0001
training loss: tensor(0.5676) feature loss: tensor(0.1891)
Global Model Acc on global data: 0.6324 length of data: 10000
-------------Round number:  54  -------------
selected users: [36, 70, 48, 94, 81, 46, 38, 29, 34, 22]
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 493
Local adapation with distilling: 0.0001
training loss: tensor(0.4076) feature loss: tensor(0.1650)
Local adapation with distilling: 0.0001
training loss: tensor(0.3680) feature loss: tensor(0.1657)
Local adapation with distilling: 0.0001
training loss: tensor(0.4239) feature loss: tensor(0.1595)
Local adapation with distilling: 0.0001
training loss: tensor(0.3717) feature loss: tensor(0.1627)
Local adapation with distilling: 0.0001
training loss: tensor(0.3711) feature loss: tensor(0.1591)
Local adapation with distilling: 0.0001
training loss: tensor(0.4321) feature loss: tensor(0.1570)
Local adapation with distilling: 0.0001
training loss: tensor(0.3305) feature loss: tensor(0.1427)
Local adapation with distilling: 0.0001
training loss: tensor(0.4651) feature loss: tensor(0.1621)
Local adapation with distilling: 0.0001
training loss: tensor(0.4384) feature loss: tensor(0.1399)
Local adapation with distilling: 0.0001
training loss: tensor(0.3028) feature loss: tensor(0.1595)
Global Model Acc on global data: 0.6354 length of data: 10000
save a model
-------------Round number:  55  -------------
selected users: [28, 92, 98, 95, 84, 34, 38, 76, 17, 78]
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
all data: 491
Local adapation with distilling: 0.0001
training loss: tensor(0.4292) feature loss: tensor(0.1936)
Local adapation with distilling: 0.0001
training loss: tensor(0.5433) feature loss: tensor(0.2076)
Local adapation with distilling: 0.0001
training loss: tensor(0.4891) feature loss: tensor(0.1743)
Local adapation with distilling: 0.0001
training loss: tensor(0.3715) feature loss: tensor(0.2192)
Local adapation with distilling: 0.0001
training loss: tensor(0.4424) feature loss: tensor(0.1827)
Local adapation with distilling: 0.0001
training loss: tensor(0.4099) feature loss: tensor(0.1736)
Local adapation with distilling: 0.0001
training loss: tensor(0.3275) feature loss: tensor(0.1758)
Local adapation with distilling: 0.0001
training loss: tensor(0.3894) feature loss: tensor(0.1744)
Local adapation with distilling: 0.0001
training loss: tensor(0.3348) feature loss: tensor(0.1729)
Local adapation with distilling: 0.0001
training loss: tensor(0.4300) feature loss: tensor(0.1994)
Global Model Acc on global data: 0.6331 length of data: 10000
-------------Round number:  56  -------------
selected users: [92, 79, 23, 68, 52, 38, 73, 9, 59, 27]
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 501
Local adapation with distilling: 0.0001
training loss: tensor(0.4364) feature loss: tensor(0.1782)
Local adapation with distilling: 0.0001
training loss: tensor(0.3097) feature loss: tensor(0.1641)
Local adapation with distilling: 0.0001
training loss: tensor(0.5327) feature loss: tensor(0.1756)
Local adapation with distilling: 0.0001
training loss: tensor(0.3715) feature loss: tensor(0.1567)
Local adapation with distilling: 0.0001
training loss: tensor(0.3902) feature loss: tensor(0.1745)
Local adapation with distilling: 0.0001
training loss: tensor(0.2998) feature loss: tensor(0.1574)
Local adapation with distilling: 0.0001
training loss: tensor(0.4434) feature loss: tensor(0.1693)
Local adapation with distilling: 0.0001
training loss: tensor(0.4334) feature loss: tensor(0.1669)
Local adapation with distilling: 0.0001
training loss: tensor(0.5685) feature loss: tensor(0.1790)
Local adapation with distilling: 0.0001
training loss: tensor(0.3600) feature loss: tensor(0.1593)
Global Model Acc on global data: 0.6334 length of data: 10000
-------------Round number:  57  -------------
selected users: [52, 17, 41, 3, 8, 98, 59, 20, 67, 7]
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
all data: 501
Local adapation with distilling: 0.0001
training loss: tensor(0.3479) feature loss: tensor(0.1639)
Local adapation with distilling: 0.0001
training loss: tensor(0.3019) feature loss: tensor(0.1521)
Local adapation with distilling: 0.0001
training loss: tensor(0.3686) feature loss: tensor(0.1821)
Local adapation with distilling: 0.0001
training loss: tensor(0.3730) feature loss: tensor(0.1675)
Local adapation with distilling: 0.0001
training loss: tensor(0.3365) feature loss: tensor(0.1674)
Local adapation with distilling: 0.0001
training loss: tensor(0.3775) feature loss: tensor(0.1481)
Local adapation with distilling: 0.0001
training loss: tensor(0.5919) feature loss: tensor(0.1667)
Local adapation with distilling: 0.0001
training loss: tensor(0.4115) feature loss: tensor(0.1585)
Local adapation with distilling: 0.0001
training loss: tensor(0.3710) feature loss: tensor(0.1743)
Local adapation with distilling: 0.0001
training loss: tensor(0.4384) feature loss: tensor(0.1698)
Global Model Acc on global data: 0.6361 length of data: 10000
save a model
-------------Round number:  58  -------------
selected users: [43, 58, 8, 31, 70, 45, 69, 95, 50, 4]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
all data: 494
Local adapation with distilling: 0.0001
training loss: tensor(0.3675) feature loss: tensor(0.1790)
Local adapation with distilling: 0.0001
training loss: tensor(0.4080) feature loss: tensor(0.1697)
Local adapation with distilling: 0.0001
training loss: tensor(0.3149) feature loss: tensor(0.1940)
Local adapation with distilling: 0.0001
training loss: tensor(0.3879) feature loss: tensor(0.1855)
Local adapation with distilling: 0.0001
training loss: tensor(0.3155) feature loss: tensor(0.1722)
Local adapation with distilling: 0.0001
training loss: tensor(0.3750) feature loss: tensor(0.1734)
Local adapation with distilling: 0.0001
training loss: tensor(0.3368) feature loss: tensor(0.1671)
Local adapation with distilling: 0.0001
training loss: tensor(0.3079) feature loss: tensor(0.1823)
Local adapation with distilling: 0.0001
training loss: tensor(0.3773) feature loss: tensor(0.1553)
Local adapation with distilling: 0.0001
training loss: tensor(0.3670) feature loss: tensor(0.1831)
Global Model Acc on global data: 0.6397 length of data: 10000
save a model
-------------Round number:  59  -------------
selected users: [38, 46, 24, 87, 30, 85, 16, 96, 18, 99]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
all data: 481
Local adapation with distilling: 0.0001
training loss: tensor(0.3653) feature loss: tensor(0.2030)
Local adapation with distilling: 0.0001
training loss: tensor(0.4887) feature loss: tensor(0.2172)
Local adapation with distilling: 0.0001
training loss: tensor(0.4249) feature loss: tensor(0.1928)
Local adapation with distilling: 0.0001
training loss: tensor(0.5702) feature loss: tensor(0.2110)
Local adapation with distilling: 0.0001
training loss: tensor(0.5086) feature loss: tensor(0.2185)
Local adapation with distilling: 0.0001
training loss: tensor(0.4248) feature loss: tensor(0.1943)
Local adapation with distilling: 0.0001
training loss: tensor(0.4976) feature loss: tensor(0.2229)
Local adapation with distilling: 0.0001
training loss: tensor(0.5354) feature loss: tensor(0.2303)
Local adapation with distilling: 0.0001
training loss: tensor(0.4562) feature loss: tensor(0.2238)
Local adapation with distilling: 0.0001
training loss: tensor(0.5157) feature loss: tensor(0.2324)
Global Model Acc on global data: 0.6328 length of data: 10000
-------------Round number:  60  -------------
selected users: [88, 4, 79, 14, 55, 3, 19, 28, 94, 25]
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
all data: 491
Local adapation with distilling: 0.0001
training loss: tensor(0.4133) feature loss: tensor(0.1771)
Local adapation with distilling: 0.0001
training loss: tensor(0.3425) feature loss: tensor(0.1722)
Local adapation with distilling: 0.0001
training loss: tensor(0.2897) feature loss: tensor(0.1554)
Local adapation with distilling: 0.0001
training loss: tensor(0.3514) feature loss: tensor(0.1676)
Local adapation with distilling: 0.0001
training loss: tensor(0.4030) feature loss: tensor(0.1519)
Local adapation with distilling: 0.0001
training loss: tensor(0.3514) feature loss: tensor(0.1776)
Local adapation with distilling: 0.0001
training loss: tensor(0.3675) feature loss: tensor(0.1681)
Local adapation with distilling: 0.0001
training loss: tensor(0.3535) feature loss: tensor(0.1627)
Local adapation with distilling: 0.0001
training loss: tensor(0.3612) feature loss: tensor(0.1737)
Local adapation with distilling: 0.0001
training loss: tensor(0.3507) feature loss: tensor(0.1741)
Global Model Acc on global data: 0.6345 length of data: 10000
-------------Round number:  61  -------------
selected users: [83, 1, 55, 9, 31, 28, 96, 29, 86, 63]
random features: torch.Size([57, 16, 32, 32]) torch.Size([57])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
all data: 505
Local adapation with distilling: 0.0001
training loss: tensor(0.4216) feature loss: tensor(0.1944)
Local adapation with distilling: 0.0001
training loss: tensor(0.3890) feature loss: tensor(0.1935)
Local adapation with distilling: 0.0001
training loss: tensor(0.3701) feature loss: tensor(0.1589)
Local adapation with distilling: 0.0001
training loss: tensor(0.4009) feature loss: tensor(0.1924)
Local adapation with distilling: 0.0001
training loss: tensor(0.3777) feature loss: tensor(0.1885)
Local adapation with distilling: 0.0001
training loss: tensor(0.3343) feature loss: tensor(0.1639)
Local adapation with distilling: 0.0001
training loss: tensor(0.4268) feature loss: tensor(0.1889)
Local adapation with distilling: 0.0001
training loss: tensor(0.4688) feature loss: tensor(0.1828)
Local adapation with distilling: 0.0001
training loss: tensor(0.3727) feature loss: tensor(0.1941)
Local adapation with distilling: 0.0001
training loss: tensor(0.3592) feature loss: tensor(0.1618)
Global Model Acc on global data: 0.6398 length of data: 10000
save a model
-------------Round number:  62  -------------
selected users: [76, 48, 62, 80, 29, 99, 60, 89, 39, 69]
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
all data: 495
Local adapation with distilling: 0.0001
training loss: tensor(0.3497) feature loss: tensor(0.1531)
Local adapation with distilling: 0.0001
training loss: tensor(0.3614) feature loss: tensor(0.1672)
Local adapation with distilling: 0.0001
training loss: tensor(0.3649) feature loss: tensor(0.1689)
Local adapation with distilling: 0.0001
training loss: tensor(0.3179) feature loss: tensor(0.1642)
Local adapation with distilling: 0.0001
training loss: tensor(0.6213) feature loss: tensor(0.1704)
Local adapation with distilling: 0.0001
training loss: tensor(0.3628) feature loss: tensor(0.1691)
Local adapation with distilling: 0.0001
training loss: tensor(0.4032) feature loss: tensor(0.1523)
Local adapation with distilling: 0.0001
training loss: tensor(0.3252) feature loss: tensor(0.1695)
Local adapation with distilling: 0.0001
training loss: tensor(0.3221) feature loss: tensor(0.1666)
Local adapation with distilling: 0.0001
training loss: tensor(0.3156) feature loss: tensor(0.1698)
Global Model Acc on global data: 0.6365 length of data: 10000
-------------Round number:  63  -------------
selected users: [64, 59, 63, 2, 80, 20, 18, 48, 72, 51]
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
all data: 495
Local adapation with distilling: 0.0001
training loss: tensor(0.3891) feature loss: tensor(0.1510)
Local adapation with distilling: 0.0001
training loss: tensor(0.6318) feature loss: tensor(0.1655)
Local adapation with distilling: 0.0001
training loss: tensor(0.3045) feature loss: tensor(0.1634)
Local adapation with distilling: 0.0001
training loss: tensor(0.3951) feature loss: tensor(0.1596)
Local adapation with distilling: 0.0001
training loss: tensor(0.2869) feature loss: tensor(0.1658)
Local adapation with distilling: 0.0001
training loss: tensor(0.3138) feature loss: tensor(0.1602)
Local adapation with distilling: 0.0001
training loss: tensor(0.3093) feature loss: tensor(0.1587)
Local adapation with distilling: 0.0001
training loss: tensor(0.3008) feature loss: tensor(0.1614)
Local adapation with distilling: 0.0001
training loss: tensor(0.4829) feature loss: tensor(0.1578)
Local adapation with distilling: 0.0001
training loss: tensor(0.4572) feature loss: tensor(0.1767)
Global Model Acc on global data: 0.6329 length of data: 10000
-------------Round number:  64  -------------
selected users: [17, 22, 60, 92, 23, 19, 71, 94, 40, 49]
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 495
Local adapation with distilling: 0.0001
training loss: tensor(0.2816) feature loss: tensor(0.1426)
Local adapation with distilling: 0.0001
training loss: tensor(0.2969) feature loss: tensor(0.1643)
Local adapation with distilling: 0.0001
training loss: tensor(0.3158) feature loss: tensor(0.1481)
Local adapation with distilling: 0.0001
training loss: tensor(0.3874) feature loss: tensor(0.1822)
Local adapation with distilling: 0.0001
training loss: tensor(0.4290) feature loss: tensor(0.1704)
Local adapation with distilling: 0.0001
training loss: tensor(0.3254) feature loss: tensor(0.1686)
Local adapation with distilling: 0.0001
training loss: tensor(0.2792) feature loss: tensor(0.1658)
Local adapation with distilling: 0.0001
training loss: tensor(0.3089) feature loss: tensor(0.1684)
Local adapation with distilling: 0.0001
training loss: tensor(0.2939) feature loss: tensor(0.1506)
Local adapation with distilling: 0.0001
training loss: tensor(0.3319) feature loss: tensor(0.1611)
Global Model Acc on global data: 0.6345 length of data: 10000
-------------Round number:  65  -------------
selected users: [37, 81, 39, 61, 76, 90, 27, 86, 28, 69]
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.3233) feature loss: tensor(0.1773)
Local adapation with distilling: 0.0001
training loss: tensor(0.3517) feature loss: tensor(0.1802)
Local adapation with distilling: 0.0001
training loss: tensor(0.3392) feature loss: tensor(0.1861)
Local adapation with distilling: 0.0001
training loss: tensor(0.4763) feature loss: tensor(0.2051)
Local adapation with distilling: 0.0001
training loss: tensor(0.3435) feature loss: tensor(0.1615)
Local adapation with distilling: 0.0001
training loss: tensor(0.4197) feature loss: tensor(0.1819)
Local adapation with distilling: 0.0001
training loss: tensor(0.3225) feature loss: tensor(0.1710)
Local adapation with distilling: 0.0001
training loss: tensor(0.3592) feature loss: tensor(0.1876)
Local adapation with distilling: 0.0001
training loss: tensor(0.3372) feature loss: tensor(0.1692)
Local adapation with distilling: 0.0001
training loss: tensor(0.3276) feature loss: tensor(0.1685)
Global Model Acc on global data: 0.636 length of data: 10000
-------------Round number:  66  -------------
selected users: [8, 93, 4, 5, 52, 41, 0, 73, 88, 68]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 507
Local adapation with distilling: 0.0001
training loss: tensor(0.2556) feature loss: tensor(0.1445)
Local adapation with distilling: 0.0001
training loss: tensor(0.3001) feature loss: tensor(0.1229)
Local adapation with distilling: 0.0001
training loss: tensor(0.2850) feature loss: tensor(0.1488)
Local adapation with distilling: 0.0001
training loss: tensor(0.3496) feature loss: tensor(0.1439)
Local adapation with distilling: 0.0001
training loss: tensor(0.2593) feature loss: tensor(0.1478)
Local adapation with distilling: 0.0001
training loss: tensor(0.2951) feature loss: tensor(0.1444)
Local adapation with distilling: 0.0001
training loss: tensor(0.2980) feature loss: tensor(0.1423)
Local adapation with distilling: 0.0001
training loss: tensor(0.3432) feature loss: tensor(0.1381)
Local adapation with distilling: 0.0001
training loss: tensor(0.3255) feature loss: tensor(0.1447)
Local adapation with distilling: 0.0001
training loss: tensor(0.2883) feature loss: tensor(0.1339)
Global Model Acc on global data: 0.6346 length of data: 10000
-------------Round number:  67  -------------
selected users: [17, 24, 64, 93, 97, 29, 3, 70, 82, 11]
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
all data: 491
Local adapation with distilling: 0.0001
training loss: tensor(0.2585) feature loss: tensor(0.1582)
Local adapation with distilling: 0.0001
training loss: tensor(0.3443) feature loss: tensor(0.1505)
Local adapation with distilling: 0.0001
training loss: tensor(0.3684) feature loss: tensor(0.1589)
Local adapation with distilling: 0.0001
training loss: tensor(0.3072) feature loss: tensor(0.1484)
Local adapation with distilling: 0.0001
training loss: tensor(0.3866) feature loss: tensor(0.1531)
Local adapation with distilling: 0.0001
training loss: tensor(0.4123) feature loss: tensor(0.1595)
Local adapation with distilling: 0.0001
training loss: tensor(0.3169) feature loss: tensor(0.1737)
Local adapation with distilling: 0.0001
training loss: tensor(0.2908) feature loss: tensor(0.1749)
Local adapation with distilling: 0.0001
training loss: tensor(0.3645) feature loss: tensor(0.1702)
Local adapation with distilling: 0.0001
training loss: tensor(0.4275) feature loss: tensor(0.1673)
Global Model Acc on global data: 0.6357 length of data: 10000
-------------Round number:  68  -------------
selected users: [29, 30, 16, 5, 38, 71, 76, 94, 99, 95]
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 495
Local adapation with distilling: 0.0001
training loss: tensor(0.3794) feature loss: tensor(0.1226)
Local adapation with distilling: 0.0001
training loss: tensor(0.2780) feature loss: tensor(0.1253)
Local adapation with distilling: 0.0001
training loss: tensor(0.2883) feature loss: tensor(0.1193)
Local adapation with distilling: 0.0001
training loss: tensor(0.3259) feature loss: tensor(0.1329)
Local adapation with distilling: 0.0001
training loss: tensor(0.2107) feature loss: tensor(0.1179)
Local adapation with distilling: 0.0001
training loss: tensor(0.2165) feature loss: tensor(0.1310)
Local adapation with distilling: 0.0001
training loss: tensor(0.2297) feature loss: tensor(0.1184)
Local adapation with distilling: 0.0001
training loss: tensor(0.2356) feature loss: tensor(0.1314)
Local adapation with distilling: 0.0001
training loss: tensor(0.2709) feature loss: tensor(0.1336)
Local adapation with distilling: 0.0001
training loss: tensor(0.2295) feature loss: tensor(0.1312)
Global Model Acc on global data: 0.6386 length of data: 10000
-------------Round number:  69  -------------
selected users: [72, 31, 13, 83, 33, 8, 26, 89, 64, 97]
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([57, 16, 32, 32]) torch.Size([57])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
all data: 507
Local adapation with distilling: 0.0001
training loss: tensor(0.5476) feature loss: tensor(0.1695)
Local adapation with distilling: 0.0001
training loss: tensor(0.3643) feature loss: tensor(0.1809)
Local adapation with distilling: 0.0001
training loss: tensor(0.5097) feature loss: tensor(0.1659)
Local adapation with distilling: 0.0001
training loss: tensor(0.3810) feature loss: tensor(0.1873)
Local adapation with distilling: 0.0001
training loss: tensor(0.3694) feature loss: tensor(0.1870)
Local adapation with distilling: 0.0001
training loss: tensor(0.3257) feature loss: tensor(0.1753)
Local adapation with distilling: 0.0001
training loss: tensor(0.7300) feature loss: tensor(0.1753)
Local adapation with distilling: 0.0001
training loss: tensor(0.3465) feature loss: tensor(0.1821)
Local adapation with distilling: 0.0001
training loss: tensor(0.3500) feature loss: tensor(0.1545)
Local adapation with distilling: 0.0001
training loss: tensor(0.3728) feature loss: tensor(0.1597)
Global Model Acc on global data: 0.6333 length of data: 10000
-------------Round number:  70  -------------
selected users: [81, 43, 88, 32, 50, 71, 73, 55, 42, 2]
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
all data: 501
Local adapation with distilling: 0.0001
training loss: tensor(0.2806) feature loss: tensor(0.1546)
Local adapation with distilling: 0.0001
training loss: tensor(0.3399) feature loss: tensor(0.1649)
Local adapation with distilling: 0.0001
training loss: tensor(0.3044) feature loss: tensor(0.1534)
Local adapation with distilling: 0.0001
training loss: tensor(0.3891) feature loss: tensor(0.1421)
Local adapation with distilling: 0.0001
training loss: tensor(0.3284) feature loss: tensor(0.1343)
Local adapation with distilling: 0.0001
training loss: tensor(0.2450) feature loss: tensor(0.1506)
Local adapation with distilling: 0.0001
training loss: tensor(0.2863) feature loss: tensor(0.1599)
Local adapation with distilling: 0.0001
training loss: tensor(0.3212) feature loss: tensor(0.1425)
Local adapation with distilling: 0.0001
training loss: tensor(0.2884) feature loss: tensor(0.1605)
Local adapation with distilling: 0.0001
training loss: tensor(0.3352) feature loss: tensor(0.1497)
Global Model Acc on global data: 0.6366 length of data: 10000
-------------Round number:  71  -------------
selected users: [41, 84, 98, 42, 75, 25, 60, 19, 52, 29]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
all data: 497
Local adapation with distilling: 0.0001
training loss: tensor(0.2607) feature loss: tensor(0.1515)
Local adapation with distilling: 0.0001
training loss: tensor(0.3465) feature loss: tensor(0.1408)
Local adapation with distilling: 0.0001
training loss: tensor(0.3373) feature loss: tensor(0.1255)
Local adapation with distilling: 0.0001
training loss: tensor(0.2385) feature loss: tensor(0.1370)
Local adapation with distilling: 0.0001
training loss: tensor(0.3424) feature loss: tensor(0.1291)
Local adapation with distilling: 0.0001
training loss: tensor(0.2612) feature loss: tensor(0.1481)
Local adapation with distilling: 0.0001
training loss: tensor(0.2584) feature loss: tensor(0.1256)
Local adapation with distilling: 0.0001
training loss: tensor(0.2732) feature loss: tensor(0.1365)
Local adapation with distilling: 0.0001
training loss: tensor(0.2441) feature loss: tensor(0.1373)
Local adapation with distilling: 0.0001
training loss: tensor(0.3208) feature loss: tensor(0.1389)
Global Model Acc on global data: 0.6298 length of data: 10000
-------------Round number:  72  -------------
selected users: [76, 82, 43, 16, 84, 95, 78, 91, 30, 22]
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 491
Local adapation with distilling: 0.0001
training loss: tensor(0.2596) feature loss: tensor(0.1395)
Local adapation with distilling: 0.0001
training loss: tensor(0.4093) feature loss: tensor(0.1563)
Local adapation with distilling: 0.0001
training loss: tensor(0.3170) feature loss: tensor(0.1591)
Local adapation with distilling: 0.0001
training loss: tensor(0.3073) feature loss: tensor(0.1395)
Local adapation with distilling: 0.0001
training loss: tensor(0.3405) feature loss: tensor(0.1523)
Local adapation with distilling: 0.0001
training loss: tensor(0.2666) feature loss: tensor(0.1564)
Local adapation with distilling: 0.0001
training loss: tensor(0.3234) feature loss: tensor(0.1596)
Local adapation with distilling: 0.0001
training loss: tensor(0.3125) feature loss: tensor(0.1749)
Local adapation with distilling: 0.0001
training loss: tensor(0.3194) feature loss: tensor(0.1536)
Local adapation with distilling: 0.0001
training loss: tensor(0.2734) feature loss: tensor(0.1689)
Global Model Acc on global data: 0.6407 length of data: 10000
save a model
-------------Round number:  73  -------------
selected users: [49, 14, 34, 70, 90, 35, 68, 76, 80, 9]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
all data: 488
Local adapation with distilling: 0.0001
training loss: tensor(0.3497) feature loss: tensor(0.1795)
Local adapation with distilling: 0.0001
training loss: tensor(0.3682) feature loss: tensor(0.1942)
Local adapation with distilling: 0.0001
training loss: tensor(0.4081) feature loss: tensor(0.1720)
Local adapation with distilling: 0.0001
training loss: tensor(0.3088) feature loss: tensor(0.2031)
Local adapation with distilling: 0.0001
training loss: tensor(0.3942) feature loss: tensor(0.1984)
Local adapation with distilling: 0.0001
training loss: tensor(0.5032) feature loss: tensor(0.1811)
Local adapation with distilling: 0.0001
training loss: tensor(0.3166) feature loss: tensor(0.1760)
Local adapation with distilling: 0.0001
training loss: tensor(0.2781) feature loss: tensor(0.1624)
Local adapation with distilling: 0.0001
training loss: tensor(0.3213) feature loss: tensor(0.1884)
Local adapation with distilling: 0.0001
training loss: tensor(0.3613) feature loss: tensor(0.1929)
Global Model Acc on global data: 0.6381 length of data: 10000
-------------Round number:  74  -------------
selected users: [85, 64, 63, 80, 6, 12, 43, 17, 7, 8]
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 498
Local adapation with distilling: 0.0001
training loss: tensor(0.2693) feature loss: tensor(0.1355)
Local adapation with distilling: 0.0001
training loss: tensor(0.2769) feature loss: tensor(0.1327)
Local adapation with distilling: 0.0001
training loss: tensor(0.2765) feature loss: tensor(0.1454)
Local adapation with distilling: 0.0001
training loss: tensor(0.2540) feature loss: tensor(0.1460)
Local adapation with distilling: 0.0001
training loss: tensor(0.3468) feature loss: tensor(0.1499)
Local adapation with distilling: 0.0001
training loss: tensor(0.5645) feature loss: tensor(0.1530)
Local adapation with distilling: 0.0001
training loss: tensor(0.2732) feature loss: tensor(0.1502)
Local adapation with distilling: 0.0001
training loss: tensor(0.2343) feature loss: tensor(0.1331)
Local adapation with distilling: 0.0001
training loss: tensor(0.3344) feature loss: tensor(0.1579)
Local adapation with distilling: 0.0001
training loss: tensor(0.2459) feature loss: tensor(0.1544)
Global Model Acc on global data: 0.6428 length of data: 10000
save a model
-------------Round number:  75  -------------
selected users: [36, 7, 6, 45, 56, 54, 22, 37, 53, 68]
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 496
Local adapation with distilling: 0.0001
training loss: tensor(0.3935) feature loss: tensor(0.1787)
Local adapation with distilling: 0.0001
training loss: tensor(0.3497) feature loss: tensor(0.1899)
Local adapation with distilling: 0.0001
training loss: tensor(0.3261) feature loss: tensor(0.1779)
Local adapation with distilling: 0.0001
training loss: tensor(0.3425) feature loss: tensor(0.1705)
Local adapation with distilling: 0.0001
training loss: tensor(0.4161) feature loss: tensor(0.1690)
Local adapation with distilling: 0.0001
training loss: tensor(0.4986) feature loss: tensor(0.1628)
Local adapation with distilling: 0.0001
training loss: tensor(0.2927) feature loss: tensor(0.1800)
Local adapation with distilling: 0.0001
training loss: tensor(0.2894) feature loss: tensor(0.1802)
Local adapation with distilling: 0.0001
training loss: tensor(0.3414) feature loss: tensor(0.1857)
Local adapation with distilling: 0.0001
training loss: tensor(0.2956) feature loss: tensor(0.1663)
Global Model Acc on global data: 0.641 length of data: 10000
-------------Round number:  76  -------------
selected users: [38, 37, 32, 50, 10, 94, 19, 44, 86, 23]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
all data: 488
Local adapation with distilling: 0.0001
training loss: tensor(0.2455) feature loss: tensor(0.1476)
Local adapation with distilling: 0.0001
training loss: tensor(0.2610) feature loss: tensor(0.1568)
Local adapation with distilling: 0.0001
training loss: tensor(0.3536) feature loss: tensor(0.1519)
Local adapation with distilling: 0.0001
training loss: tensor(0.3097) feature loss: tensor(0.1423)
Local adapation with distilling: 0.0001
training loss: tensor(0.3046) feature loss: tensor(0.1599)
Local adapation with distilling: 0.0001
training loss: tensor(0.2910) feature loss: tensor(0.1743)
Local adapation with distilling: 0.0001
training loss: tensor(0.2866) feature loss: tensor(0.1681)
Local adapation with distilling: 0.0001
training loss: tensor(0.2824) feature loss: tensor(0.1620)
Local adapation with distilling: 0.0001
training loss: tensor(0.2860) feature loss: tensor(0.1690)
Local adapation with distilling: 0.0001
training loss: tensor(0.3622) feature loss: tensor(0.1783)
Global Model Acc on global data: 0.6364 length of data: 10000
-------------Round number:  77  -------------
selected users: [5, 93, 41, 96, 16, 42, 81, 91, 50, 58]
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
all data: 493
Local adapation with distilling: 0.0001
training loss: tensor(0.3961) feature loss: tensor(0.1638)
Local adapation with distilling: 0.0001
training loss: tensor(0.2905) feature loss: tensor(0.1398)
Local adapation with distilling: 0.0001
training loss: tensor(0.3037) feature loss: tensor(0.1664)
Local adapation with distilling: 0.0001
training loss: tensor(0.3516) feature loss: tensor(0.1625)
Local adapation with distilling: 0.0001
training loss: tensor(0.3090) feature loss: tensor(0.1519)
Local adapation with distilling: 0.0001
training loss: tensor(0.2834) feature loss: tensor(0.1603)
Local adapation with distilling: 0.0001
training loss: tensor(0.2924) feature loss: tensor(0.1678)
Local adapation with distilling: 0.0001
training loss: tensor(0.3092) feature loss: tensor(0.1628)
Local adapation with distilling: 0.0001
training loss: tensor(0.2839) feature loss: tensor(0.1525)
Local adapation with distilling: 0.0001
training loss: tensor(0.3494) feature loss: tensor(0.1697)
Global Model Acc on global data: 0.643 length of data: 10000
save a model
-------------Round number:  78  -------------
selected users: [9, 46, 7, 63, 15, 2, 74, 31, 5, 36]
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
all data: 504
Local adapation with distilling: 0.0001
training loss: tensor(0.3065) feature loss: tensor(0.1562)
Local adapation with distilling: 0.0001
training loss: tensor(0.3408) feature loss: tensor(0.1539)
Local adapation with distilling: 0.0001
training loss: tensor(0.3546) feature loss: tensor(0.1633)
Local adapation with distilling: 0.0001
training loss: tensor(0.2755) feature loss: tensor(0.1510)
Local adapation with distilling: 0.0001
training loss: tensor(0.3249) feature loss: tensor(0.1703)
Local adapation with distilling: 0.0001
training loss: tensor(0.3195) feature loss: tensor(0.1522)
Local adapation with distilling: 0.0001
training loss: tensor(0.3430) feature loss: tensor(0.1565)
Local adapation with distilling: 0.0001
training loss: tensor(0.3182) feature loss: tensor(0.1633)
Local adapation with distilling: 0.0001
training loss: tensor(0.3017) feature loss: tensor(0.1561)
Local adapation with distilling: 0.0001
training loss: tensor(0.3301) feature loss: tensor(0.1606)
Global Model Acc on global data: 0.6434 length of data: 10000
save a model
-------------Round number:  79  -------------
selected users: [68, 18, 86, 60, 56, 32, 30, 24, 45, 92]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
all data: 487
Local adapation with distilling: 0.0001
training loss: tensor(0.2886) feature loss: tensor(0.1817)
Local adapation with distilling: 0.0001
training loss: tensor(0.3110) feature loss: tensor(0.1829)
Local adapation with distilling: 0.0001
training loss: tensor(0.2982) feature loss: tensor(0.1882)
Local adapation with distilling: 0.0001
training loss: tensor(0.3085) feature loss: tensor(0.1656)
Local adapation with distilling: 0.0001
training loss: tensor(0.3804) feature loss: tensor(0.1571)
Local adapation with distilling: 0.0001
training loss: tensor(0.3451) feature loss: tensor(0.1700)
Local adapation with distilling: 0.0001
training loss: tensor(0.3097) feature loss: tensor(0.1931)
Local adapation with distilling: 0.0001
training loss: tensor(0.3145) feature loss: tensor(0.1743)
Local adapation with distilling: 0.0001
training loss: tensor(0.3285) feature loss: tensor(0.1894)
Local adapation with distilling: 0.0001
training loss: tensor(0.4157) feature loss: tensor(0.1952)
Global Model Acc on global data: 0.6383 length of data: 10000
-------------Round number:  80  -------------
selected users: [37, 65, 95, 53, 66, 30, 73, 85, 45, 36]
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
all data: 495
Local adapation with distilling: 0.0001
training loss: tensor(0.2339) feature loss: tensor(0.1520)
Local adapation with distilling: 0.0001
training loss: tensor(0.3231) feature loss: tensor(0.1559)
Local adapation with distilling: 0.0001
training loss: tensor(0.2470) feature loss: tensor(0.1627)
Local adapation with distilling: 0.0001
training loss: tensor(0.2808) feature loss: tensor(0.1568)
Local adapation with distilling: 0.0001
training loss: tensor(0.4344) feature loss: tensor(0.1430)
Local adapation with distilling: 0.0001
training loss: tensor(0.2583) feature loss: tensor(0.1427)
Local adapation with distilling: 0.0001
training loss: tensor(0.2890) feature loss: tensor(0.1602)
Local adapation with distilling: 0.0001
training loss: tensor(0.2574) feature loss: tensor(0.1396)
Local adapation with distilling: 0.0001
training loss: tensor(0.2628) feature loss: tensor(0.1544)
Local adapation with distilling: 0.0001
training loss: tensor(0.2819) feature loss: tensor(0.1589)
Global Model Acc on global data: 0.6438 length of data: 10000
save a model
-------------Round number:  81  -------------
selected users: [73, 89, 41, 78, 51, 21, 30, 69, 8, 5]
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
all data: 502
Local adapation with distilling: 0.0001
training loss: tensor(0.3037) feature loss: tensor(0.1313)
Local adapation with distilling: 0.0001
training loss: tensor(0.2474) feature loss: tensor(0.1341)
Local adapation with distilling: 0.0001
training loss: tensor(0.2408) feature loss: tensor(0.1356)
Local adapation with distilling: 0.0001
training loss: tensor(0.2810) feature loss: tensor(0.1339)
Local adapation with distilling: 0.0001
training loss: tensor(0.3613) feature loss: tensor(0.1463)
Local adapation with distilling: 0.0001
training loss: tensor(0.3386) feature loss: tensor(0.1386)
Local adapation with distilling: 0.0001
training loss: tensor(0.2280) feature loss: tensor(0.1247)
Local adapation with distilling: 0.0001
training loss: tensor(0.2414) feature loss: tensor(0.1242)
Local adapation with distilling: 0.0001
training loss: tensor(0.2278) feature loss: tensor(0.1383)
Local adapation with distilling: 0.0001
training loss: tensor(0.2507) feature loss: tensor(0.1298)
Global Model Acc on global data: 0.6436 length of data: 10000
-------------Round number:  82  -------------
selected users: [72, 33, 58, 2, 55, 84, 54, 75, 28, 40]
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
all data: 491
Local adapation with distilling: 0.0001
training loss: tensor(0.4382) feature loss: tensor(0.1833)
Local adapation with distilling: 0.0001
training loss: tensor(0.3259) feature loss: tensor(0.2156)
Local adapation with distilling: 0.0001
training loss: tensor(0.3590) feature loss: tensor(0.1949)
Local adapation with distilling: 0.0001
training loss: tensor(0.3730) feature loss: tensor(0.1847)
Local adapation with distilling: 0.0001
training loss: tensor(0.3444) feature loss: tensor(0.1700)
Local adapation with distilling: 0.0001
training loss: tensor(0.3306) feature loss: tensor(0.1765)
Local adapation with distilling: 0.0001
training loss: tensor(0.4536) feature loss: tensor(0.1896)
Local adapation with distilling: 0.0001
training loss: tensor(0.3739) feature loss: tensor(0.1753)
Local adapation with distilling: 0.0001
training loss: tensor(0.3007) feature loss: tensor(0.1878)
Local adapation with distilling: 0.0001
training loss: tensor(0.2949) feature loss: tensor(0.1825)
Global Model Acc on global data: 0.6433 length of data: 10000
-------------Round number:  83  -------------
selected users: [6, 65, 95, 84, 61, 12, 30, 69, 35, 1]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 495
Local adapation with distilling: 0.0001
training loss: tensor(0.3421) feature loss: tensor(0.1637)
Local adapation with distilling: 0.0001
training loss: tensor(0.3407) feature loss: tensor(0.1590)
Local adapation with distilling: 0.0001
training loss: tensor(0.2686) feature loss: tensor(0.1626)
Local adapation with distilling: 0.0001
training loss: tensor(0.3106) feature loss: tensor(0.1529)
Local adapation with distilling: 0.0001
training loss: tensor(0.4277) feature loss: tensor(0.1793)
Local adapation with distilling: 0.0001
training loss: tensor(0.5217) feature loss: tensor(0.1616)
Local adapation with distilling: 0.0001
training loss: tensor(0.2732) feature loss: tensor(0.1566)
Local adapation with distilling: 0.0001
training loss: tensor(0.2812) feature loss: tensor(0.1588)
Local adapation with distilling: 0.0001
training loss: tensor(0.4122) feature loss: tensor(0.1570)
Local adapation with distilling: 0.0001
training loss: tensor(0.3568) feature loss: tensor(0.1583)
Global Model Acc on global data: 0.6404 length of data: 10000
-------------Round number:  84  -------------
selected users: [94, 55, 80, 1, 90, 11, 32, 8, 6, 82]
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
all data: 497
Local adapation with distilling: 0.0001
training loss: tensor(0.2431) feature loss: tensor(0.1480)
Local adapation with distilling: 0.0001
training loss: tensor(0.2694) feature loss: tensor(0.1233)
Local adapation with distilling: 0.0001
training loss: tensor(0.2340) feature loss: tensor(0.1413)
Local adapation with distilling: 0.0001
training loss: tensor(0.2684) feature loss: tensor(0.1332)
Local adapation with distilling: 0.0001
training loss: tensor(0.2956) feature loss: tensor(0.1415)
Local adapation with distilling: 0.0001
training loss: tensor(0.2977) feature loss: tensor(0.1419)
Local adapation with distilling: 0.0001
training loss: tensor(0.2670) feature loss: tensor(0.1248)
Local adapation with distilling: 0.0001
training loss: tensor(0.2270) feature loss: tensor(0.1453)
Local adapation with distilling: 0.0001
training loss: tensor(0.2408) feature loss: tensor(0.1335)
Local adapation with distilling: 0.0001
training loss: tensor(0.3177) feature loss: tensor(0.1440)
Global Model Acc on global data: 0.647 length of data: 10000
save a model
-------------Round number:  85  -------------
selected users: [81, 25, 40, 87, 41, 23, 10, 89, 50, 54]
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
all data: 489
Local adapation with distilling: 0.0001
training loss: tensor(0.2403) feature loss: tensor(0.1466)
Local adapation with distilling: 0.0001
training loss: tensor(0.2651) feature loss: tensor(0.1502)
Local adapation with distilling: 0.0001
training loss: tensor(0.2289) feature loss: tensor(0.1310)
Local adapation with distilling: 0.0001
training loss: tensor(0.3436) feature loss: tensor(0.1419)
Local adapation with distilling: 0.0001
training loss: tensor(0.2310) feature loss: tensor(0.1549)
Local adapation with distilling: 0.0001
training loss: tensor(0.3035) feature loss: tensor(0.1582)
Local adapation with distilling: 0.0001
training loss: tensor(0.2496) feature loss: tensor(0.1369)
Local adapation with distilling: 0.0001
training loss: tensor(0.2490) feature loss: tensor(0.1509)
Local adapation with distilling: 0.0001
training loss: tensor(0.2449) feature loss: tensor(0.1334)
Local adapation with distilling: 0.0001
training loss: tensor(0.3277) feature loss: tensor(0.1316)
Global Model Acc on global data: 0.6483 length of data: 10000
save a model
-------------Round number:  86  -------------
selected users: [69, 74, 34, 68, 42, 0, 32, 88, 8, 3]
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
all data: 494
Local adapation with distilling: 0.0001
training loss: tensor(0.2161) feature loss: tensor(0.1340)
Local adapation with distilling: 0.0001
training loss: tensor(0.2885) feature loss: tensor(0.1449)
Local adapation with distilling: 0.0001
training loss: tensor(0.2978) feature loss: tensor(0.1240)
Local adapation with distilling: 0.0001
training loss: tensor(0.2240) feature loss: tensor(0.1211)
Local adapation with distilling: 0.0001
training loss: tensor(0.2313) feature loss: tensor(0.1434)
Local adapation with distilling: 0.0001
training loss: tensor(0.2495) feature loss: tensor(0.1403)
Local adapation with distilling: 0.0001
training loss: tensor(0.2339) feature loss: tensor(0.1243)
Local adapation with distilling: 0.0001
training loss: tensor(0.2619) feature loss: tensor(0.1340)
Local adapation with distilling: 0.0001
training loss: tensor(0.2090) feature loss: tensor(0.1440)
Local adapation with distilling: 0.0001
training loss: tensor(0.2561) feature loss: tensor(0.1487)
Global Model Acc on global data: 0.6483 length of data: 10000
-------------Round number:  87  -------------
selected users: [16, 81, 85, 32, 39, 25, 26, 29, 65, 7]
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
all data: 501
Local adapation with distilling: 0.0001
training loss: tensor(0.2218) feature loss: tensor(0.1222)
Local adapation with distilling: 0.0001
training loss: tensor(0.2194) feature loss: tensor(0.1389)
Local adapation with distilling: 0.0001
training loss: tensor(0.2142) feature loss: tensor(0.1243)
Local adapation with distilling: 0.0001
training loss: tensor(0.2115) feature loss: tensor(0.1181)
Local adapation with distilling: 0.0001
training loss: tensor(0.2411) feature loss: tensor(0.1346)
Local adapation with distilling: 0.0001
training loss: tensor(0.2219) feature loss: tensor(0.1356)
Local adapation with distilling: 0.0001
training loss: tensor(0.6089) feature loss: tensor(0.1427)
Local adapation with distilling: 0.0001
training loss: tensor(0.3753) feature loss: tensor(0.1412)
Local adapation with distilling: 0.0001
training loss: tensor(0.2435) feature loss: tensor(0.1367)
Local adapation with distilling: 0.0001
training loss: tensor(0.2603) feature loss: tensor(0.1373)
Global Model Acc on global data: 0.646 length of data: 10000
-------------Round number:  88  -------------
selected users: [95, 53, 43, 84, 2, 74, 55, 31, 54, 97]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
all data: 495
Local adapation with distilling: 0.0001
training loss: tensor(0.2421) feature loss: tensor(0.1647)
Local adapation with distilling: 0.0001
training loss: tensor(0.2892) feature loss: tensor(0.1631)
Local adapation with distilling: 0.0001
training loss: tensor(0.2859) feature loss: tensor(0.1643)
Local adapation with distilling: 0.0001
training loss: tensor(0.2714) feature loss: tensor(0.1482)
Local adapation with distilling: 0.0001
training loss: tensor(0.2545) feature loss: tensor(0.1490)
Local adapation with distilling: 0.0001
training loss: tensor(0.2901) feature loss: tensor(0.1660)
Local adapation with distilling: 0.0001
training loss: tensor(0.2782) feature loss: tensor(0.1485)
Local adapation with distilling: 0.0001
training loss: tensor(0.2777) feature loss: tensor(0.1656)
Local adapation with distilling: 0.0001
training loss: tensor(0.3287) feature loss: tensor(0.1562)
Local adapation with distilling: 0.0001
training loss: tensor(0.3203) feature loss: tensor(0.1443)
Global Model Acc on global data: 0.6434 length of data: 10000
-------------Round number:  89  -------------
selected users: [65, 21, 87, 6, 46, 74, 44, 60, 72, 5]
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
all data: 494
Local adapation with distilling: 0.0001
training loss: tensor(0.2328) feature loss: tensor(0.1384)
Local adapation with distilling: 0.0001
training loss: tensor(0.3174) feature loss: tensor(0.1447)
Local adapation with distilling: 0.0001
training loss: tensor(0.3084) feature loss: tensor(0.1319)
Local adapation with distilling: 0.0001
training loss: tensor(0.2371) feature loss: tensor(0.1367)
Local adapation with distilling: 0.0001
training loss: tensor(0.2765) feature loss: tensor(0.1398)
Local adapation with distilling: 0.0001
training loss: tensor(0.2209) feature loss: tensor(0.1352)
Local adapation with distilling: 0.0001
training loss: tensor(0.2394) feature loss: tensor(0.1375)
Local adapation with distilling: 0.0001
training loss: tensor(0.2384) feature loss: tensor(0.1256)
Local adapation with distilling: 0.0001
training loss: tensor(0.3511) feature loss: tensor(0.1349)
Local adapation with distilling: 0.0001
training loss: tensor(0.2734) feature loss: tensor(0.1431)
Global Model Acc on global data: 0.6415 length of data: 10000
-------------Round number:  90  -------------
selected users: [25, 85, 96, 89, 65, 94, 5, 35, 36, 92]
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
all data: 496
Local adapation with distilling: 0.0001
training loss: tensor(0.2193) feature loss: tensor(0.1460)
Local adapation with distilling: 0.0001
training loss: tensor(0.2126) feature loss: tensor(0.1315)
Local adapation with distilling: 0.0001
training loss: tensor(0.2841) feature loss: tensor(0.1491)
Local adapation with distilling: 0.0001
training loss: tensor(0.2295) feature loss: tensor(0.1419)
Local adapation with distilling: 0.0001
training loss: tensor(0.2176) feature loss: tensor(0.1423)
Local adapation with distilling: 0.0001
training loss: tensor(0.2199) feature loss: tensor(0.1476)
Local adapation with distilling: 0.0001
training loss: tensor(0.2242) feature loss: tensor(0.1464)
Local adapation with distilling: 0.0001
training loss: tensor(0.3044) feature loss: tensor(0.1310)
Local adapation with distilling: 0.0001
training loss: tensor(0.2494) feature loss: tensor(0.1378)
Local adapation with distilling: 0.0001
training loss: tensor(0.2997) feature loss: tensor(0.1561)
Global Model Acc on global data: 0.6421 length of data: 10000
-------------Round number:  91  -------------
selected users: [75, 25, 3, 52, 78, 54, 59, 26, 62, 97]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
all data: 497
Local adapation with distilling: 0.0001
training loss: tensor(0.3251) feature loss: tensor(0.1416)
Local adapation with distilling: 0.0001
training loss: tensor(0.2504) feature loss: tensor(0.1614)
Local adapation with distilling: 0.0001
training loss: tensor(0.2784) feature loss: tensor(0.1645)
Local adapation with distilling: 0.0001
training loss: tensor(0.2814) feature loss: tensor(0.1623)
Local adapation with distilling: 0.0001
training loss: tensor(0.2915) feature loss: tensor(0.1690)
Local adapation with distilling: 0.0001
training loss: tensor(0.3172) feature loss: tensor(0.1433)
Local adapation with distilling: 0.0001
training loss: tensor(0.7206) feature loss: tensor(0.1665)
Local adapation with distilling: 0.0001
training loss: tensor(0.6438) feature loss: tensor(0.1676)
Local adapation with distilling: 0.0001
training loss: tensor(0.3188) feature loss: tensor(0.1617)
Local adapation with distilling: 0.0001
training loss: tensor(0.2925) feature loss: tensor(0.1542)
Global Model Acc on global data: 0.6458 length of data: 10000
-------------Round number:  92  -------------
selected users: [25, 99, 73, 61, 66, 36, 23, 83, 77, 6]
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([57, 16, 32, 32]) torch.Size([57])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 499
Local adapation with distilling: 0.0001
training loss: tensor(0.2750) feature loss: tensor(0.1711)
Local adapation with distilling: 0.0001
training loss: tensor(0.3491) feature loss: tensor(0.1703)
Local adapation with distilling: 0.0001
training loss: tensor(0.2997) feature loss: tensor(0.1740)
Local adapation with distilling: 0.0001
training loss: tensor(0.3830) feature loss: tensor(0.1802)
Local adapation with distilling: 0.0001
training loss: tensor(0.4294) feature loss: tensor(0.1569)
Local adapation with distilling: 0.0001
training loss: tensor(0.3034) feature loss: tensor(0.1626)
Local adapation with distilling: 0.0001
training loss: tensor(0.3504) feature loss: tensor(0.1709)
Local adapation with distilling: 0.0001
training loss: tensor(0.3502) feature loss: tensor(0.1850)
Local adapation with distilling: 0.0001
training loss: tensor(0.5505) feature loss: tensor(0.1644)
Local adapation with distilling: 0.0001
training loss: tensor(0.2997) feature loss: tensor(0.1698)
Global Model Acc on global data: 0.6498 length of data: 10000
save a model
-------------Round number:  93  -------------
selected users: [75, 82, 56, 27, 42, 35, 1, 97, 66, 61]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
all data: 493
Local adapation with distilling: 0.0001
training loss: tensor(0.2871) feature loss: tensor(0.1349)
Local adapation with distilling: 0.0001
training loss: tensor(0.3745) feature loss: tensor(0.1510)
Local adapation with distilling: 0.0001
training loss: tensor(0.3170) feature loss: tensor(0.1465)
Local adapation with distilling: 0.0001
training loss: tensor(0.2869) feature loss: tensor(0.1427)
Local adapation with distilling: 0.0001
training loss: tensor(0.2748) feature loss: tensor(0.1535)
Local adapation with distilling: 0.0001
training loss: tensor(0.3094) feature loss: tensor(0.1380)
Local adapation with distilling: 0.0001
training loss: tensor(0.2942) feature loss: tensor(0.1581)
Local adapation with distilling: 0.0001
training loss: tensor(0.2697) feature loss: tensor(0.1415)
Local adapation with distilling: 0.0001
training loss: tensor(0.3367) feature loss: tensor(0.1446)
Local adapation with distilling: 0.0001
training loss: tensor(0.3057) feature loss: tensor(0.1564)
Global Model Acc on global data: 0.6497 length of data: 10000
-------------Round number:  94  -------------
selected users: [13, 73, 5, 18, 99, 48, 23, 4, 35, 17]
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
all data: 495
Local adapation with distilling: 0.0001
training loss: tensor(0.3759) feature loss: tensor(0.1441)
Local adapation with distilling: 0.0001
training loss: tensor(0.2924) feature loss: tensor(0.1538)
Local adapation with distilling: 0.0001
training loss: tensor(0.2786) feature loss: tensor(0.1449)
Local adapation with distilling: 0.0001
training loss: tensor(0.2831) feature loss: tensor(0.1457)
Local adapation with distilling: 0.0001
training loss: tensor(0.2847) feature loss: tensor(0.1537)
Local adapation with distilling: 0.0001
training loss: tensor(0.2941) feature loss: tensor(0.1543)
Local adapation with distilling: 0.0001
training loss: tensor(0.2872) feature loss: tensor(0.1416)
Local adapation with distilling: 0.0001
training loss: tensor(0.2971) feature loss: tensor(0.1534)
Local adapation with distilling: 0.0001
training loss: tensor(0.2642) feature loss: tensor(0.1460)
Local adapation with distilling: 0.0001
training loss: tensor(0.2535) feature loss: tensor(0.1402)
Global Model Acc on global data: 0.6485 length of data: 10000
-------------Round number:  95  -------------
selected users: [88, 9, 1, 60, 95, 26, 45, 71, 44, 21]
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 495
Local adapation with distilling: 0.0001
training loss: tensor(0.2436) feature loss: tensor(0.1341)
Local adapation with distilling: 0.0001
training loss: tensor(0.2606) feature loss: tensor(0.1319)
Local adapation with distilling: 0.0001
training loss: tensor(0.2370) feature loss: tensor(0.1354)
Local adapation with distilling: 0.0001
training loss: tensor(0.2341) feature loss: tensor(0.1260)
Local adapation with distilling: 0.0001
training loss: tensor(0.2159) feature loss: tensor(0.1364)
Local adapation with distilling: 0.0001
training loss: tensor(0.5071) feature loss: tensor(0.1398)
Local adapation with distilling: 0.0001
training loss: tensor(0.2420) feature loss: tensor(0.1383)
Local adapation with distilling: 0.0001
training loss: tensor(0.2206) feature loss: tensor(0.1305)
Local adapation with distilling: 0.0001
training loss: tensor(0.2258) feature loss: tensor(0.1276)
Local adapation with distilling: 0.0001
training loss: tensor(0.2755) feature loss: tensor(0.1474)
Global Model Acc on global data: 0.648 length of data: 10000
-------------Round number:  96  -------------
selected users: [41, 28, 52, 15, 87, 17, 75, 42, 45, 49]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 499
Local adapation with distilling: 0.0001
training loss: tensor(0.2250) feature loss: tensor(0.1462)
Local adapation with distilling: 0.0001
training loss: tensor(0.2482) feature loss: tensor(0.1302)
Local adapation with distilling: 0.0001
training loss: tensor(0.2249) feature loss: tensor(0.1311)
Local adapation with distilling: 0.0001
training loss: tensor(0.2741) feature loss: tensor(0.1378)
Local adapation with distilling: 0.0001
training loss: tensor(0.2844) feature loss: tensor(0.1244)
Local adapation with distilling: 0.0001
training loss: tensor(0.2121) feature loss: tensor(0.1205)
Local adapation with distilling: 0.0001
training loss: tensor(0.2441) feature loss: tensor(0.1242)
Local adapation with distilling: 0.0001
training loss: tensor(0.2196) feature loss: tensor(0.1401)
Local adapation with distilling: 0.0001
training loss: tensor(0.2165) feature loss: tensor(0.1322)
Local adapation with distilling: 0.0001
training loss: tensor(0.2611) feature loss: tensor(0.1354)
Global Model Acc on global data: 0.6466 length of data: 10000
-------------Round number:  97  -------------
selected users: [31, 43, 64, 56, 85, 2, 70, 21, 34, 50]
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
all data: 489
Local adapation with distilling: 0.0001
training loss: tensor(0.2163) feature loss: tensor(0.1287)
Local adapation with distilling: 0.0001
training loss: tensor(0.2302) feature loss: tensor(0.1338)
Local adapation with distilling: 0.0001
training loss: tensor(0.2451) feature loss: tensor(0.1168)
Local adapation with distilling: 0.0001
training loss: tensor(0.2601) feature loss: tensor(0.1218)
Local adapation with distilling: 0.0001
training loss: tensor(0.1903) feature loss: tensor(0.1098)
Local adapation with distilling: 0.0001
training loss: tensor(0.2426) feature loss: tensor(0.1250)
Local adapation with distilling: 0.0001
training loss: tensor(0.2156) feature loss: tensor(0.1306)
Local adapation with distilling: 0.0001
training loss: tensor(0.2403) feature loss: tensor(0.1294)
Local adapation with distilling: 0.0001
training loss: tensor(0.2501) feature loss: tensor(0.1255)
Local adapation with distilling: 0.0001
training loss: tensor(0.2122) feature loss: tensor(0.1152)
Global Model Acc on global data: 0.6496 length of data: 10000
-------------Round number:  98  -------------
selected users: [11, 48, 97, 14, 22, 36, 99, 47, 33, 81]
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
all data: 496
Local adapation with distilling: 0.0001
training loss: tensor(0.3329) feature loss: tensor(0.1606)
Local adapation with distilling: 0.0001
training loss: tensor(0.2788) feature loss: tensor(0.1490)
Local adapation with distilling: 0.0001
training loss: tensor(0.2636) feature loss: tensor(0.1395)
Local adapation with distilling: 0.0001
training loss: tensor(0.3219) feature loss: tensor(0.1536)
Local adapation with distilling: 0.0001
training loss: tensor(0.2670) feature loss: tensor(0.1692)
Local adapation with distilling: 0.0001
training loss: tensor(0.2685) feature loss: tensor(0.1552)
Local adapation with distilling: 0.0001
training loss: tensor(0.2751) feature loss: tensor(0.1707)
Local adapation with distilling: 0.0001
training loss: tensor(0.3989) feature loss: tensor(0.1481)
Local adapation with distilling: 0.0001
training loss: tensor(0.3096) feature loss: tensor(0.1813)
Local adapation with distilling: 0.0001
training loss: tensor(0.2596) feature loss: tensor(0.1660)
Global Model Acc on global data: 0.6489 length of data: 10000
-------------Round number:  99  -------------
selected users: [14, 34, 30, 78, 16, 15, 91, 38, 10, 85]
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
all data: 491
Local adapation with distilling: 0.0001
training loss: tensor(0.2188) feature loss: tensor(0.1372)
Local adapation with distilling: 0.0001
training loss: tensor(0.2353) feature loss: tensor(0.1175)
Local adapation with distilling: 0.0001
training loss: tensor(0.1916) feature loss: tensor(0.1240)
Local adapation with distilling: 0.0001
training loss: tensor(0.2281) feature loss: tensor(0.1336)
Local adapation with distilling: 0.0001
training loss: tensor(0.2079) feature loss: tensor(0.1228)
Local adapation with distilling: 0.0001
training loss: tensor(0.2147) feature loss: tensor(0.1372)
Local adapation with distilling: 0.0001
training loss: tensor(0.2231) feature loss: tensor(0.1455)
Local adapation with distilling: 0.0001
training loss: tensor(0.1829) feature loss: tensor(0.1176)
Local adapation with distilling: 0.0001
training loss: tensor(0.2028) feature loss: tensor(0.1285)
Local adapation with distilling: 0.0001
training loss: tensor(0.1698) feature loss: tensor(0.1167)
Global Model Acc on global data: 0.6477 length of data: 10000
