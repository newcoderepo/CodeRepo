nohup: ignoring input
================================================================================
Summary of training process:
Dataset                : Cifar10
Batch size             : 64
Learing rate           : 0.001
Number of total clients: 100
Split method           : quantity
Split parameter        : 5.0
Clients per round      : 10
Number of global rounds: 100
Number of local rounds : 10
Feature from layer     : 0
Feature percentage     : 1.0
Local training loss    : CE_CE_KL
Loss of beta           : 1.0
Algorithm              : FedFea
Modelname              : MOBNET
Mode                   : training
Seed                   : 0
================================================================================
Files already downloaded and verified
Files already downloaded and verified
Class frequencies:
client,class0,class1,class2,class3,class4,class5,class6,class7,class8,class9,Amount
Client   0,0.158,0.219,0.00,0.00,0.00,0.215,0.00,0.00,0.198,0.210,520
Client   1,0.00,0.224,0.194,0.00,0.00,0.00,0.177,0.191,0.00,0.214,509
Client   2,0.00,0.00,0.191,0.00,0.193,0.217,0.00,0.188,0.00,0.211,517
Client   3,0.167,0.232,0.00,0.222,0.00,0.00,0.183,0.197,0.00,0.00,492
Client   4,0.00,0.224,0.00,0.00,0.196,0.00,0.176,0.190,0.00,0.214,510
Client   5,0.158,0.219,0.00,0.210,0.00,0.215,0.00,0.00,0.198,0.00,520
Client   6,0.00,0.00,0.00,0.215,0.00,0.00,0.178,0.191,0.201,0.215,507
Client   7,0.00,0.218,0.00,0.00,0.00,0.215,0.172,0.186,0.00,0.209,522
Client   8,0.162,0.225,0.00,0.215,0.197,0.00,0.00,0.00,0.201,0.00,507
Client   9,0.165,0.00,0.197,0.219,0.201,0.00,0.00,0.00,0.00,0.219,498
Client  10,0.168,0.00,0.201,0.00,0.00,0.00,0.00,0.199,0.209,0.223,488
Client  11,0.00,0.220,0.00,0.210,0.00,0.00,0.173,0.187,0.00,0.210,519
Client  12,0.00,0.00,0.190,0.00,0.194,0.217,0.00,0.186,0.00,0.212,515
Client  13,0.170,0.00,0.204,0.227,0.00,0.00,0.187,0.00,0.212,0.00,481
Client  14,0.165,0.00,0.00,0.220,0.202,0.00,0.00,0.194,0.00,0.220,496
Client  15,0.00,0.214,0.00,0.205,0.00,0.209,0.00,0.180,0.192,0.00,532
Client  16,0.169,0.00,0.00,0.00,0.206,0.229,0.186,0.00,0.210,0.00,485
Client  17,0.00,0.00,0.197,0.00,0.00,0.223,0.181,0.193,0.205,0.00,497
Client  18,0.168,0.00,0.00,0.00,0.204,0.00,0.00,0.196,0.209,0.223,489
Client  19,0.164,0.228,0.196,0.00,0.00,0.00,0.00,0.192,0.00,0.218,499
Client  20,0.168,0.00,0.00,0.00,0.204,0.00,0.00,0.196,0.209,0.223,489
Client  21,0.162,0.226,0.194,0.00,0.00,0.00,0.00,0.00,0.202,0.216,505
Client  22,0.00,0.225,0.193,0.215,0.00,0.00,0.178,0.189,0.00,0.00,507
Client  23,0.168,0.00,0.201,0.223,0.00,0.00,0.184,0.00,0.00,0.223,488
Client  24,0.176,0.00,0.210,0.00,0.215,0.00,0.193,0.206,0.00,0.00,466
Client  25,0.165,0.229,0.00,0.00,0.201,0.223,0.181,0.00,0.00,0.00,497
Client  26,0.00,0.222,0.191,0.00,0.195,0.216,0.175,0.00,0.00,0.00,513
Client  27,0.164,0.00,0.00,0.00,0.00,0.222,0.00,0.192,0.204,0.218,500
Client  28,0.165,0.00,0.00,0.219,0.00,0.00,0.00,0.193,0.205,0.219,498
Client  29,0.00,0.221,0.00,0.00,0.194,0.00,0.175,0.00,0.198,0.212,515
Client  30,0.168,0.00,0.201,0.00,0.00,0.00,0.00,0.197,0.209,0.224,487
Client  31,0.00,0.218,0.00,0.00,0.191,0.212,0.00,0.184,0.195,0.00,523
Client  32,0.164,0.00,0.196,0.218,0.200,0.222,0.00,0.00,0.00,0.00,500
Client  33,0.163,0.227,0.195,0.217,0.199,0.00,0.00,0.00,0.00,0.00,503
Client  34,0.176,0.00,0.210,0.00,0.215,0.00,0.193,0.206,0.00,0.00,466
Client  35,0.163,0.00,0.00,0.216,0.198,0.220,0.00,0.00,0.202,0.00,504
Client  36,0.168,0.00,0.201,0.224,0.00,0.00,0.183,0.00,0.00,0.224,487
Client  37,0.00,0.219,0.00,0.209,0.192,0.00,0.00,0.184,0.196,0.00,521
Client  38,0.00,0.00,0.00,0.215,0.00,0.219,0.176,0.189,0.201,0.00,507
Client  39,0.165,0.00,0.197,0.219,0.201,0.00,0.00,0.00,0.00,0.219,498
Client  40,0.166,0.00,0.00,0.221,0.00,0.225,0.181,0.00,0.207,0.00,493
Client  41,0.164,0.228,0.196,0.00,0.00,0.222,0.00,0.192,0.00,0.00,501
Client  42,0.165,0.230,0.198,0.00,0.202,0.00,0.00,0.00,0.206,0.00,496
Client  43,0.00,0.224,0.00,0.215,0.197,0.00,0.175,0.189,0.00,0.00,508
Client  44,0.172,0.00,0.205,0.00,0.209,0.00,0.186,0.00,0.00,0.228,478
Client  45,0.168,0.00,0.00,0.00,0.00,0.228,0.183,0.197,0.00,0.224,487
Client  46,0.168,0.00,0.00,0.223,0.204,0.00,0.182,0.00,0.00,0.223,489
Client  47,0.164,0.00,0.00,0.218,0.00,0.222,0.00,0.192,0.204,0.00,500
Client  48,0.00,0.00,0.00,0.00,0.00,0.219,0.176,0.189,0.201,0.215,507
Client  49,0.00,0.00,0.193,0.00,0.197,0.219,0.176,0.00,0.00,0.215,507
Client  50,0.176,0.00,0.210,0.00,0.00,0.00,0.191,0.206,0.218,0.00,467
Client  51,0.166,0.231,0.198,0.00,0.00,0.225,0.180,0.00,0.00,0.00,494
Client  52,0.00,0.213,0.184,0.00,0.00,0.208,0.00,0.00,0.191,0.204,534
Client  53,0.00,0.215,0.185,0.206,0.189,0.00,0.00,0.00,0.00,0.206,530
Client  54,0.176,0.00,0.211,0.00,0.215,0.00,0.191,0.206,0.00,0.00,465
Client  55,0.00,0.00,0.00,0.216,0.198,0.220,0.176,0.190,0.00,0.00,505
Client  56,0.172,0.00,0.00,0.229,0.210,0.00,0.187,0.202,0.00,0.00,476
Client  57,0.00,0.00,0.195,0.00,0.00,0.221,0.177,0.191,0.00,0.217,503
Client  58,0.00,0.00,0.197,0.00,0.201,0.00,0.179,0.00,0.205,0.219,498
Client  59,0.160,0.222,0.00,0.212,0.195,0.00,0.00,0.00,0.00,0.212,514
Client  60,0.166,0.00,0.199,0.00,0.203,0.225,0.00,0.00,0.207,0.00,493
Client  61,0.00,0.216,0.185,0.206,0.189,0.00,0.00,0.00,0.00,0.204,529
Client  62,0.00,0.227,0.195,0.00,0.199,0.00,0.177,0.00,0.203,0.00,503
Client  63,0.165,0.00,0.00,0.219,0.00,0.00,0.00,0.193,0.205,0.217,497
Client  64,0.166,0.00,0.199,0.00,0.203,0.225,0.00,0.00,0.207,0.00,493
Client  65,0.167,0.00,0.00,0.00,0.00,0.226,0.181,0.00,0.207,0.220,492
Client  66,0.172,0.00,0.00,0.229,0.210,0.00,0.187,0.202,0.00,0.00,476
Client  67,0.170,0.237,0.00,0.00,0.208,0.00,0.185,0.200,0.00,0.00,481
Client  68,0.00,0.00,0.196,0.00,0.200,0.222,0.178,0.00,0.204,0.00,500
Client  69,0.166,0.00,0.198,0.00,0.00,0.224,0.00,0.194,0.00,0.218,495
Client  70,0.167,0.230,0.200,0.00,0.00,0.00,0.00,0.196,0.208,0.00,491
Client  71,0.00,0.217,0.00,0.00,0.192,0.213,0.171,0.00,0.00,0.207,521
Client  72,0.00,0.00,0.190,0.00,0.00,0.216,0.00,0.186,0.198,0.210,515
Client  73,0.159,0.219,0.00,0.211,0.00,0.215,0.00,0.00,0.197,0.00,517
Client  74,0.164,0.00,0.00,0.218,0.200,0.00,0.00,0.00,0.204,0.216,501
Client  75,0.00,0.00,0.194,0.213,0.198,0.219,0.176,0.00,0.00,0.00,506
Client  76,0.171,0.00,0.204,0.00,0.208,0.231,0.185,0.00,0.00,0.00,480
Client  77,0.164,0.00,0.00,0.216,0.00,0.222,0.00,0.192,0.204,0.00,499
Client  78,0.00,0.218,0.00,0.208,0.193,0.00,0.00,0.185,0.197,0.00,519
Client  79,0.169,0.00,0.202,0.223,0.00,0.00,0.184,0.00,0.00,0.223,485
Client  80,0.165,0.227,0.00,0.00,0.00,0.223,0.179,0.00,0.205,0.00,497
Client  81,0.00,0.213,0.00,0.00,0.00,0.209,0.00,0.181,0.192,0.204,530
Client  82,0.00,0.219,0.190,0.209,0.00,0.00,0.172,0.00,0.00,0.209,516
Client  83,0.160,0.221,0.191,0.211,0.00,0.217,0.00,0.00,0.00,0.00,512
Client  84,0.176,0.00,0.211,0.00,0.215,0.00,0.191,0.206,0.00,0.00,465
Client  85,0.00,0.00,0.00,0.00,0.201,0.223,0.179,0.193,0.205,0.00,498
Client  86,0.00,0.222,0.00,0.213,0.00,0.00,0.175,0.189,0.201,0.00,508
Client  87,0.169,0.00,0.00,0.222,0.00,0.228,0.183,0.198,0.00,0.00,486
Client  88,0.00,0.00,0.197,0.00,0.201,0.00,0.179,0.00,0.205,0.217,497
Client  89,0.00,0.214,0.186,0.205,0.190,0.00,0.00,0.00,0.00,0.205,527
Client  90,0.170,0.00,0.00,0.224,0.00,0.00,0.184,0.199,0.00,0.224,483
Client  91,0.166,0.229,0.00,0.219,0.00,0.00,0.180,0.00,0.206,0.00,494
Client  92,0.00,0.218,0.189,0.208,0.00,0.214,0.171,0.00,0.00,0.00,519
Client  93,0.00,0.00,0.199,0.219,0.00,0.00,0.181,0.195,0.207,0.00,493
Client  94,0.169,0.233,0.00,0.00,0.206,0.00,0.183,0.00,0.210,0.00,486
Client  95,0.164,0.226,0.196,0.00,0.00,0.222,0.00,0.192,0.00,0.00,500
Client  96,0.171,0.235,0.00,0.00,0.208,0.00,0.185,0.200,0.00,0.00,480
Client  97,0.169,0.00,0.00,0.00,0.00,0.232,0.186,0.200,0.213,0.00,479
Client  98,0.00,0.00,0.189,0.208,0.193,0.214,0.00,0.00,0.197,0.00,519
Client  99,0.166,0.231,0.200,0.00,0.00,0.00,0.182,0.00,0.00,0.221,489
0 [0 1 5 8 9] [0 1 5 8 9] [2 3 4 6 7]
0 training: Counter({1: 114, 5: 112, 9: 109, 8: 103, 0: 82}) testing iid: Counter({8: 1000, 0: 1000, 1: 1000, 9: 1000, 5: 1000})
1 [1 2 6 7 9] [1 2 6 7 9] [0 3 4 5 8]
1 training: Counter({1: 114, 9: 109, 2: 99, 7: 97, 6: 90}) testing iid: Counter({6: 1000, 1: 1000, 9: 1000, 7: 1000, 2: 1000})
2 [2 4 5 7 9] [2 4 5 7 9] [0 1 3 6 8]
2 training: Counter({5: 112, 9: 109, 4: 100, 2: 99, 7: 97}) testing iid: Counter({9: 1000, 5: 1000, 7: 1000, 4: 1000, 2: 1000})
3 [0 1 3 6 7] [0 1 3 6 7] [2 4 5 8 9]
3 training: Counter({1: 114, 3: 109, 7: 97, 6: 90, 0: 82}) testing iid: Counter({3: 1000, 0: 1000, 6: 1000, 1: 1000, 7: 1000})
4 [1 4 6 7 9] [1 4 6 7 9] [0 2 3 5 8]
4 training: Counter({1: 114, 9: 109, 4: 100, 7: 97, 6: 90}) testing iid: Counter({6: 1000, 1: 1000, 9: 1000, 7: 1000, 4: 1000})
5 [0 1 3 5 8] [0 1 3 5 8] [2 4 6 7 9]
5 training: Counter({1: 114, 5: 112, 3: 109, 8: 103, 0: 82}) testing iid: Counter({3: 1000, 8: 1000, 0: 1000, 1: 1000, 5: 1000})
6 [3 6 7 8 9] [3 6 7 8 9] [0 1 2 4 5]
6 training: Counter({3: 109, 9: 109, 8: 102, 7: 97, 6: 90}) testing iid: Counter({3: 1000, 8: 1000, 6: 1000, 9: 1000, 7: 1000})
7 [1 5 6 7 9] [1 5 6 7 9] [0 2 3 4 8]
7 training: Counter({1: 114, 5: 112, 9: 109, 7: 97, 6: 90}) testing iid: Counter({6: 1000, 1: 1000, 9: 1000, 5: 1000, 7: 1000})
8 [0 1 3 4 8] [0 1 3 4 8] [2 5 6 7 9]
8 training: Counter({1: 114, 3: 109, 8: 102, 4: 100, 0: 82}) testing iid: Counter({3: 1000, 8: 1000, 0: 1000, 1: 1000, 4: 1000})
9 [0 2 3 4 9] [0 2 3 4 9] [1 5 6 7 8]
9 training: Counter({3: 109, 9: 109, 4: 100, 2: 98, 0: 82}) testing iid: Counter({3: 1000, 0: 1000, 9: 1000, 4: 1000, 2: 1000})
10 [0 2 7 8 9] [0 2 7 8 9] [1 3 4 5 6]
10 training: Counter({9: 109, 8: 102, 2: 98, 7: 97, 0: 82}) testing iid: Counter({8: 1000, 0: 1000, 9: 1000, 7: 1000, 2: 1000})
11 [1 3 6 7 9] [1 3 6 7 9] [0 2 4 5 8]
11 training: Counter({1: 114, 3: 109, 9: 109, 7: 97, 6: 90}) testing iid: Counter({3: 1000, 6: 1000, 1: 1000, 9: 1000, 7: 1000})
12 [2 4 5 7 9] [2 4 5 7 9] [0 1 3 6 8]
12 training: Counter({5: 112, 9: 109, 4: 100, 2: 98, 7: 96}) testing iid: Counter({9: 1000, 5: 1000, 7: 1000, 4: 1000, 2: 1000})
13 [0 2 3 6 8] [0 2 3 6 8] [1 4 5 7 9]
13 training: Counter({3: 109, 8: 102, 2: 98, 6: 90, 0: 82}) testing iid: Counter({3: 1000, 8: 1000, 0: 1000, 6: 1000, 2: 1000})
14 [0 3 4 7 9] [0 3 4 7 9] [1 2 5 6 8]
14 training: Counter({3: 109, 9: 109, 4: 100, 7: 96, 0: 82}) testing iid: Counter({3: 1000, 0: 1000, 9: 1000, 7: 1000, 4: 1000})
15 [1 3 5 7 8] [1 3 5 7 8] [0 2 4 6 9]
15 training: Counter({1: 114, 5: 111, 3: 109, 8: 102, 7: 96}) testing iid: Counter({3: 1000, 8: 1000, 1: 1000, 5: 1000, 7: 1000})
16 [0 4 5 6 8] [0 4 5 6 8] [1 2 3 7 9]
16 training: Counter({5: 111, 8: 102, 4: 100, 6: 90, 0: 82}) testing iid: Counter({8: 1000, 0: 1000, 6: 1000, 5: 1000, 4: 1000})
17 [2 5 6 7 8] [2 5 6 7 8] [0 1 3 4 9]
17 training: Counter({5: 111, 8: 102, 2: 98, 7: 96, 6: 90}) testing iid: Counter({8: 1000, 6: 1000, 5: 1000, 7: 1000, 2: 1000})
18 [0 4 7 8 9] [0 4 7 8 9] [1 2 3 5 6]
18 training: Counter({9: 109, 8: 102, 4: 100, 7: 96, 0: 82}) testing iid: Counter({8: 1000, 0: 1000, 9: 1000, 7: 1000, 4: 1000})
19 [0 1 2 7 9] [0 1 2 7 9] [3 4 5 6 8]
19 training: Counter({1: 114, 9: 109, 2: 98, 7: 96, 0: 82}) testing iid: Counter({0: 1000, 1: 1000, 9: 1000, 7: 1000, 2: 1000})
20 [0 4 7 8 9] [0 4 7 8 9] [1 2 3 5 6]
20 training: Counter({9: 109, 8: 102, 4: 100, 7: 96, 0: 82}) testing iid: Counter({8: 1000, 0: 1000, 9: 1000, 7: 1000, 4: 1000})
21 [0 1 2 8 9] [0 1 2 8 9] [3 4 5 6 7]
21 training: Counter({1: 114, 9: 109, 8: 102, 2: 98, 0: 82}) testing iid: Counter({8: 1000, 0: 1000, 1: 1000, 9: 1000, 2: 1000})
22 [1 2 3 6 7] [1 2 3 6 7] [0 4 5 8 9]
22 training: Counter({1: 114, 3: 109, 2: 98, 7: 96, 6: 90}) testing iid: Counter({3: 1000, 6: 1000, 1: 1000, 7: 1000, 2: 1000})
23 [0 2 3 6 9] [0 2 3 6 9] [1 4 5 7 8]
23 training: Counter({3: 109, 9: 109, 2: 98, 6: 90, 0: 82}) testing iid: Counter({3: 1000, 0: 1000, 6: 1000, 9: 1000, 2: 1000})
24 [0 2 4 6 7] [0 2 4 6 7] [1 3 5 8 9]
24 training: Counter({4: 100, 2: 98, 7: 96, 6: 90, 0: 82}) testing iid: Counter({0: 1000, 6: 1000, 7: 1000, 4: 1000, 2: 1000})
25 [0 1 4 5 6] [0 1 4 5 6] [2 3 7 8 9]
25 training: Counter({1: 114, 5: 111, 4: 100, 6: 90, 0: 82}) testing iid: Counter({0: 1000, 6: 1000, 1: 1000, 5: 1000, 4: 1000})
26 [1 2 4 5 6] [1 2 4 5 6] [0 3 7 8 9]
26 training: Counter({1: 114, 5: 111, 4: 100, 2: 98, 6: 90}) testing iid: Counter({6: 1000, 1: 1000, 5: 1000, 4: 1000, 2: 1000})
27 [0 5 7 8 9] [0 5 7 8 9] [1 2 3 4 6]
27 training: Counter({5: 111, 9: 109, 8: 102, 7: 96, 0: 82}) testing iid: Counter({8: 1000, 0: 1000, 9: 1000, 5: 1000, 7: 1000})
28 [0 3 7 8 9] [0 3 7 8 9] [1 2 4 5 6]
28 training: Counter({3: 109, 9: 109, 8: 102, 7: 96, 0: 82}) testing iid: Counter({3: 1000, 8: 1000, 0: 1000, 9: 1000, 7: 1000})
29 [1 4 6 8 9] [1 4 6 8 9] [0 2 3 5 7]
29 training: Counter({1: 114, 9: 109, 8: 102, 4: 100, 6: 90}) testing iid: Counter({8: 1000, 6: 1000, 1: 1000, 9: 1000, 4: 1000})
30 [0 2 7 8 9] [0 2 7 8 9] [1 3 4 5 6]
30 training: Counter({9: 109, 8: 102, 2: 98, 7: 96, 0: 82}) testing iid: Counter({8: 1000, 0: 1000, 9: 1000, 7: 1000, 2: 1000})
31 [1 4 5 7 8] [1 4 5 7 8] [0 2 3 6 9]
31 training: Counter({1: 114, 5: 111, 8: 102, 4: 100, 7: 96}) testing iid: Counter({8: 1000, 1: 1000, 5: 1000, 7: 1000, 4: 1000})
32 [0 2 3 4 5] [0 2 3 4 5] [1 6 7 8 9]
32 training: Counter({5: 111, 3: 109, 4: 100, 2: 98, 0: 82}) testing iid: Counter({3: 1000, 0: 1000, 5: 1000, 4: 1000, 2: 1000})
33 [0 1 2 3 4] [0 1 2 3 4] [5 6 7 8 9]
33 training: Counter({1: 114, 3: 109, 4: 100, 2: 98, 0: 82}) testing iid: Counter({3: 1000, 0: 1000, 1: 1000, 4: 1000, 2: 1000})
34 [0 2 4 6 7] [0 2 4 6 7] [1 3 5 8 9]
34 training: Counter({4: 100, 2: 98, 7: 96, 6: 90, 0: 82}) testing iid: Counter({0: 1000, 6: 1000, 7: 1000, 4: 1000, 2: 1000})
35 [0 3 4 5 8] [0 3 4 5 8] [1 2 6 7 9]
35 training: Counter({5: 111, 3: 109, 8: 102, 4: 100, 0: 82}) testing iid: Counter({3: 1000, 8: 1000, 0: 1000, 5: 1000, 4: 1000})
36 [0 2 3 6 9] [0 2 3 6 9] [1 4 5 7 8]
36 training: Counter({3: 109, 9: 109, 2: 98, 6: 89, 0: 82}) testing iid: Counter({3: 1000, 0: 1000, 6: 1000, 9: 1000, 2: 1000})
37 [1 3 4 7 8] [1 3 4 7 8] [0 2 5 6 9]
37 training: Counter({1: 114, 3: 109, 8: 102, 4: 100, 7: 96}) testing iid: Counter({3: 1000, 8: 1000, 1: 1000, 7: 1000, 4: 1000})
38 [3 5 6 7 8] [3 5 6 7 8] [0 1 2 4 9]
38 training: Counter({5: 111, 3: 109, 8: 102, 7: 96, 6: 89}) testing iid: Counter({3: 1000, 8: 1000, 6: 1000, 5: 1000, 7: 1000})
39 [0 2 3 4 9] [0 2 3 4 9] [1 5 6 7 8]
39 training: Counter({3: 109, 9: 109, 4: 100, 2: 98, 0: 82}) testing iid: Counter({3: 1000, 0: 1000, 9: 1000, 4: 1000, 2: 1000})
40 [0 3 5 6 8] [0 3 5 6 8] [1 2 4 7 9]
40 training: Counter({5: 111, 3: 109, 8: 102, 6: 89, 0: 82}) testing iid: Counter({3: 1000, 8: 1000, 0: 1000, 6: 1000, 5: 1000})
41 [0 1 2 5 7] [0 1 2 5 7] [3 4 6 8 9]
41 training: Counter({1: 114, 5: 111, 2: 98, 7: 96, 0: 82}) testing iid: Counter({0: 1000, 1: 1000, 5: 1000, 7: 1000, 2: 1000})
42 [0 1 2 4 8] [0 1 2 4 8] [3 5 6 7 9]
42 training: Counter({1: 114, 8: 102, 4: 100, 2: 98, 0: 82}) testing iid: Counter({8: 1000, 0: 1000, 1: 1000, 4: 1000, 2: 1000})
43 [1 3 4 6 7] [1 3 4 6 7] [0 2 5 8 9]
43 training: Counter({1: 114, 3: 109, 4: 100, 7: 96, 6: 89}) testing iid: Counter({3: 1000, 6: 1000, 1: 1000, 7: 1000, 4: 1000})
44 [0 2 4 6 9] [0 2 4 6 9] [1 3 5 7 8]
44 training: Counter({9: 109, 4: 100, 2: 98, 6: 89, 0: 82}) testing iid: Counter({0: 1000, 6: 1000, 9: 1000, 4: 1000, 2: 1000})
45 [0 5 6 7 9] [0 5 6 7 9] [1 2 3 4 8]
45 training: Counter({5: 111, 9: 109, 7: 96, 6: 89, 0: 82}) testing iid: Counter({0: 1000, 6: 1000, 9: 1000, 5: 1000, 7: 1000})
46 [0 3 4 6 9] [0 3 4 6 9] [1 2 5 7 8]
46 training: Counter({3: 109, 9: 109, 4: 100, 6: 89, 0: 82}) testing iid: Counter({3: 1000, 0: 1000, 6: 1000, 9: 1000, 4: 1000})
47 [0 3 5 7 8] [0 3 5 7 8] [1 2 4 6 9]
47 training: Counter({5: 111, 3: 109, 8: 102, 7: 96, 0: 82}) testing iid: Counter({3: 1000, 8: 1000, 0: 1000, 5: 1000, 7: 1000})
48 [5 6 7 8 9] [5 6 7 8 9] [0 1 2 3 4]
48 training: Counter({5: 111, 9: 109, 8: 102, 7: 96, 6: 89}) testing iid: Counter({8: 1000, 6: 1000, 9: 1000, 5: 1000, 7: 1000})
49 [2 4 5 6 9] [2 4 5 6 9] [0 1 3 7 8]
49 training: Counter({5: 111, 9: 109, 4: 100, 2: 98, 6: 89}) testing iid: Counter({6: 1000, 9: 1000, 5: 1000, 4: 1000, 2: 1000})
50 [0 2 6 7 8] [0 2 6 7 8] [1 3 4 5 9]
50 training: Counter({8: 102, 2: 98, 7: 96, 6: 89, 0: 82}) testing iid: Counter({8: 1000, 0: 1000, 6: 1000, 7: 1000, 2: 1000})
51 [0 1 2 5 6] [0 1 2 5 6] [3 4 7 8 9]
51 training: Counter({1: 114, 5: 111, 2: 98, 6: 89, 0: 82}) testing iid: Counter({0: 1000, 6: 1000, 1: 1000, 5: 1000, 2: 1000})
52 [1 2 5 8 9] [1 2 5 8 9] [0 3 4 6 7]
52 training: Counter({1: 114, 5: 111, 9: 109, 8: 102, 2: 98}) testing iid: Counter({8: 1000, 1: 1000, 9: 1000, 5: 1000, 2: 1000})
53 [1 2 3 4 9] [1 2 3 4 9] [0 5 6 7 8]
53 training: Counter({1: 114, 3: 109, 9: 109, 4: 100, 2: 98}) testing iid: Counter({3: 1000, 1: 1000, 9: 1000, 4: 1000, 2: 1000})
54 [0 2 4 6 7] [0 2 4 6 7] [1 3 5 8 9]
54 training: Counter({4: 100, 2: 98, 7: 96, 6: 89, 0: 82}) testing iid: Counter({0: 1000, 6: 1000, 7: 1000, 4: 1000, 2: 1000})
55 [3 4 5 6 7] [3 4 5 6 7] [0 1 2 8 9]
55 training: Counter({5: 111, 3: 109, 4: 100, 7: 96, 6: 89}) testing iid: Counter({3: 1000, 6: 1000, 5: 1000, 7: 1000, 4: 1000})
56 [0 3 4 6 7] [0 3 4 6 7] [1 2 5 8 9]
56 training: Counter({3: 109, 4: 100, 7: 96, 6: 89, 0: 82}) testing iid: Counter({3: 1000, 0: 1000, 6: 1000, 7: 1000, 4: 1000})
57 [2 5 6 7 9] [2 5 6 7 9] [0 1 3 4 8]
57 training: Counter({5: 111, 9: 109, 2: 98, 7: 96, 6: 89}) testing iid: Counter({6: 1000, 9: 1000, 5: 1000, 7: 1000, 2: 1000})
58 [2 4 6 8 9] [2 4 6 8 9] [0 1 3 5 7]
58 training: Counter({9: 109, 8: 102, 4: 100, 2: 98, 6: 89}) testing iid: Counter({8: 1000, 6: 1000, 9: 1000, 4: 1000, 2: 1000})
59 [0 1 3 4 9] [0 1 3 4 9] [2 5 6 7 8]
59 training: Counter({1: 114, 3: 109, 9: 109, 4: 100, 0: 82}) testing iid: Counter({3: 1000, 0: 1000, 1: 1000, 9: 1000, 4: 1000})
60 [0 2 4 5 8] [0 2 4 5 8] [1 3 6 7 9]
60 training: Counter({5: 111, 8: 102, 4: 100, 2: 98, 0: 82}) testing iid: Counter({8: 1000, 0: 1000, 5: 1000, 4: 1000, 2: 1000})
61 [1 2 3 4 9] [1 2 3 4 9] [0 5 6 7 8]
61 training: Counter({1: 114, 3: 109, 9: 108, 4: 100, 2: 98}) testing iid: Counter({3: 1000, 1: 1000, 9: 1000, 4: 1000, 2: 1000})
62 [1 2 4 6 8] [1 2 4 6 8] [0 3 5 7 9]
62 training: Counter({1: 114, 8: 102, 4: 100, 2: 98, 6: 89}) testing iid: Counter({8: 1000, 6: 1000, 1: 1000, 4: 1000, 2: 1000})
63 [0 3 7 8 9] [0 3 7 8 9] [1 2 4 5 6]
63 training: Counter({3: 109, 9: 108, 8: 102, 7: 96, 0: 82}) testing iid: Counter({3: 1000, 8: 1000, 0: 1000, 9: 1000, 7: 1000})
64 [0 2 4 5 8] [0 2 4 5 8] [1 3 6 7 9]
64 training: Counter({5: 111, 8: 102, 4: 100, 2: 98, 0: 82}) testing iid: Counter({8: 1000, 0: 1000, 5: 1000, 4: 1000, 2: 1000})
65 [0 5 6 8 9] [0 5 6 8 9] [1 2 3 4 7]
65 training: Counter({5: 111, 9: 108, 8: 102, 6: 89, 0: 82}) testing iid: Counter({8: 1000, 0: 1000, 6: 1000, 9: 1000, 5: 1000})
66 [0 3 4 6 7] [0 3 4 6 7] [1 2 5 8 9]
66 training: Counter({3: 109, 4: 100, 7: 96, 6: 89, 0: 82}) testing iid: Counter({3: 1000, 0: 1000, 6: 1000, 7: 1000, 4: 1000})
67 [0 1 4 6 7] [0 1 4 6 7] [2 3 5 8 9]
67 training: Counter({1: 114, 4: 100, 7: 96, 6: 89, 0: 82}) testing iid: Counter({0: 1000, 6: 1000, 1: 1000, 7: 1000, 4: 1000})
68 [2 4 5 6 8] [2 4 5 6 8] [0 1 3 7 9]
68 training: Counter({5: 111, 8: 102, 4: 100, 2: 98, 6: 89}) testing iid: Counter({8: 1000, 6: 1000, 5: 1000, 4: 1000, 2: 1000})
69 [0 2 5 7 9] [0 2 5 7 9] [1 3 4 6 8]
69 training: Counter({5: 111, 9: 108, 2: 98, 7: 96, 0: 82}) testing iid: Counter({0: 1000, 9: 1000, 5: 1000, 7: 1000, 2: 1000})
70 [0 1 2 7 8] [0 1 2 7 8] [3 4 5 6 9]
70 training: Counter({1: 113, 8: 102, 2: 98, 7: 96, 0: 82}) testing iid: Counter({8: 1000, 0: 1000, 1: 1000, 7: 1000, 2: 1000})
71 [1 4 5 6 9] [1 4 5 6 9] [0 2 3 7 8]
71 training: Counter({1: 113, 5: 111, 9: 108, 4: 100, 6: 89}) testing iid: Counter({6: 1000, 1: 1000, 9: 1000, 5: 1000, 4: 1000})
72 [2 5 7 8 9] [2 5 7 8 9] [0 1 3 4 6]
72 training: Counter({5: 111, 9: 108, 8: 102, 2: 98, 7: 96}) testing iid: Counter({8: 1000, 9: 1000, 5: 1000, 7: 1000, 2: 1000})
73 [0 1 3 5 8] [0 1 3 5 8] [2 4 6 7 9]
73 training: Counter({1: 113, 5: 111, 3: 109, 8: 102, 0: 82}) testing iid: Counter({3: 1000, 8: 1000, 0: 1000, 1: 1000, 5: 1000})
74 [0 3 4 8 9] [0 3 4 8 9] [1 2 5 6 7]
74 training: Counter({3: 109, 9: 108, 8: 102, 4: 100, 0: 82}) testing iid: Counter({3: 1000, 8: 1000, 0: 1000, 9: 1000, 4: 1000})
75 [2 3 4 5 6] [2 3 4 5 6] [0 1 7 8 9]
75 training: Counter({5: 111, 3: 108, 4: 100, 2: 98, 6: 89}) testing iid: Counter({3: 1000, 6: 1000, 5: 1000, 4: 1000, 2: 1000})
76 [0 2 4 5 6] [0 2 4 5 6] [1 3 7 8 9]
76 training: Counter({5: 111, 4: 100, 2: 98, 6: 89, 0: 82}) testing iid: Counter({0: 1000, 6: 1000, 5: 1000, 4: 1000, 2: 1000})
77 [0 3 5 7 8] [0 3 5 7 8] [1 2 4 6 9]
77 training: Counter({5: 111, 3: 108, 8: 102, 7: 96, 0: 82}) testing iid: Counter({3: 1000, 8: 1000, 0: 1000, 5: 1000, 7: 1000})
78 [1 3 4 7 8] [1 3 4 7 8] [0 2 5 6 9]
78 training: Counter({1: 113, 3: 108, 8: 102, 4: 100, 7: 96}) testing iid: Counter({3: 1000, 8: 1000, 1: 1000, 7: 1000, 4: 1000})
79 [0 2 3 6 9] [0 2 3 6 9] [1 4 5 7 8]
79 training: Counter({3: 108, 9: 108, 2: 98, 6: 89, 0: 82}) testing iid: Counter({3: 1000, 0: 1000, 6: 1000, 9: 1000, 2: 1000})
80 [0 1 5 6 8] [0 1 5 6 8] [2 3 4 7 9]
80 training: Counter({1: 113, 5: 111, 8: 102, 6: 89, 0: 82}) testing iid: Counter({8: 1000, 0: 1000, 6: 1000, 1: 1000, 5: 1000})
81 [1 5 7 8 9] [1 5 7 8 9] [0 2 3 4 6]
81 training: Counter({1: 113, 5: 111, 9: 108, 8: 102, 7: 96}) testing iid: Counter({8: 1000, 1: 1000, 9: 1000, 5: 1000, 7: 1000})
82 [1 2 3 6 9] [1 2 3 6 9] [0 4 5 7 8]
82 training: Counter({1: 113, 3: 108, 9: 108, 2: 98, 6: 89}) testing iid: Counter({3: 1000, 6: 1000, 1: 1000, 9: 1000, 2: 1000})
83 [0 1 2 3 5] [0 1 2 3 5] [4 6 7 8 9]
83 training: Counter({1: 113, 5: 111, 3: 108, 2: 98, 0: 82}) testing iid: Counter({3: 1000, 0: 1000, 1: 1000, 5: 1000, 2: 1000})
84 [0 2 4 6 7] [0 2 4 6 7] [1 3 5 8 9]
84 training: Counter({4: 100, 2: 98, 7: 96, 6: 89, 0: 82}) testing iid: Counter({0: 1000, 6: 1000, 7: 1000, 4: 1000, 2: 1000})
85 [4 5 6 7 8] [4 5 6 7 8] [0 1 2 3 9]
85 training: Counter({5: 111, 8: 102, 4: 100, 7: 96, 6: 89}) testing iid: Counter({8: 1000, 6: 1000, 5: 1000, 7: 1000, 4: 1000})
86 [1 3 6 7 8] [1 3 6 7 8] [0 2 4 5 9]
86 training: Counter({1: 113, 3: 108, 8: 102, 7: 96, 6: 89}) testing iid: Counter({3: 1000, 8: 1000, 6: 1000, 1: 1000, 7: 1000})
87 [0 3 5 6 7] [0 3 5 6 7] [1 2 4 8 9]
87 training: Counter({5: 111, 3: 108, 7: 96, 6: 89, 0: 82}) testing iid: Counter({3: 1000, 0: 1000, 6: 1000, 5: 1000, 7: 1000})
88 [2 4 6 8 9] [2 4 6 8 9] [0 1 3 5 7]
88 training: Counter({9: 108, 8: 102, 4: 100, 2: 98, 6: 89}) testing iid: Counter({8: 1000, 6: 1000, 9: 1000, 4: 1000, 2: 1000})
89 [1 2 3 4 9] [1 2 3 4 9] [0 5 6 7 8]
89 training: Counter({1: 113, 3: 108, 9: 108, 4: 100, 2: 98}) testing iid: Counter({3: 1000, 1: 1000, 9: 1000, 4: 1000, 2: 1000})
90 [0 3 6 7 9] [0 3 6 7 9] [1 2 4 5 8]
90 training: Counter({3: 108, 9: 108, 7: 96, 6: 89, 0: 82}) testing iid: Counter({3: 1000, 0: 1000, 6: 1000, 9: 1000, 7: 1000})
91 [0 1 3 6 8] [0 1 3 6 8] [2 4 5 7 9]
91 training: Counter({1: 113, 3: 108, 8: 102, 6: 89, 0: 82}) testing iid: Counter({3: 1000, 8: 1000, 0: 1000, 6: 1000, 1: 1000})
92 [1 2 3 5 6] [1 2 3 5 6] [0 4 7 8 9]
92 training: Counter({1: 113, 5: 111, 3: 108, 2: 98, 6: 89}) testing iid: Counter({3: 1000, 6: 1000, 1: 1000, 5: 1000, 2: 1000})
93 [2 3 6 7 8] [2 3 6 7 8] [0 1 4 5 9]
93 training: Counter({3: 108, 8: 102, 2: 98, 7: 96, 6: 89}) testing iid: Counter({3: 1000, 8: 1000, 6: 1000, 7: 1000, 2: 1000})
94 [0 1 4 6 8] [0 1 4 6 8] [2 3 5 7 9]
94 training: Counter({1: 113, 8: 102, 4: 100, 6: 89, 0: 82}) testing iid: Counter({8: 1000, 0: 1000, 6: 1000, 1: 1000, 4: 1000})
95 [0 1 2 5 7] [0 1 2 5 7] [3 4 6 8 9]
95 training: Counter({1: 113, 5: 111, 2: 98, 7: 96, 0: 82}) testing iid: Counter({0: 1000, 1: 1000, 5: 1000, 7: 1000, 2: 1000})
96 [0 1 4 6 7] [0 1 4 6 7] [2 3 5 8 9]
96 training: Counter({1: 113, 4: 100, 7: 96, 6: 89, 0: 82}) testing iid: Counter({0: 1000, 6: 1000, 1: 1000, 7: 1000, 4: 1000})
97 [0 5 6 7 8] [0 5 6 7 8] [1 2 3 4 9]
97 training: Counter({5: 111, 8: 102, 7: 96, 6: 89, 0: 81}) testing iid: Counter({8: 1000, 0: 1000, 6: 1000, 5: 1000, 7: 1000})
98 [2 3 4 5 8] [2 3 4 5 8] [0 1 6 7 9]
98 training: Counter({5: 111, 3: 108, 8: 102, 4: 100, 2: 98}) testing iid: Counter({3: 1000, 8: 1000, 5: 1000, 4: 1000, 2: 1000})
99 [0 1 2 6 9] [0 1 2 6 9] [3 4 5 7 8]
99 training: Counter({1: 113, 9: 108, 2: 98, 6: 89, 0: 81}) testing iid: Counter({0: 1000, 6: 1000, 1: 1000, 9: 1000, 2: 1000})
Num_samples of Training set per client: [520, 509, 517, 492, 510, 520, 507, 522, 507, 498, 488, 519, 515, 481, 496, 532, 485, 497, 489, 499, 489, 505, 507, 488, 466, 497, 513, 500, 498, 515, 487, 523, 500, 503, 466, 504, 487, 521, 507, 498, 493, 501, 496, 508, 478, 487, 489, 500, 507, 507, 467, 494, 534, 530, 465, 505, 476, 503, 498, 514, 493, 529, 503, 497, 493, 492, 476, 481, 500, 495, 491, 521, 515, 517, 501, 506, 480, 499, 519, 485, 497, 530, 516, 512, 465, 498, 508, 486, 497, 527, 483, 494, 519, 493, 486, 500, 480, 479, 519, 489]
Total_training_samples: 50000
Global test set: 10000
Finish Generating Samples, distribution saved
MobileNetV2(
  (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (layers): Sequential(
    (0): Block(
      (conv1): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): Block(
      (conv1): Conv2d(16, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=96, bias=False)
      (bn2): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(96, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(16, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (2): Block(
      (conv1): Conv2d(24, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=144, bias=False)
      (bn2): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(144, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (3): Block(
      (conv1): Conv2d(24, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(144, 144, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=144, bias=False)
      (bn2): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(144, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (4): Block(
      (conv1): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
      (bn2): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(192, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (5): Block(
      (conv1): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
      (bn2): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(192, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (6): Block(
      (conv1): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(192, 192, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=192, bias=False)
      (bn2): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(192, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (7): Block(
      (conv1): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
      (bn2): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (8): Block(
      (conv1): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
      (bn2): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (9): Block(
      (conv1): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
      (bn2): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (10): Block(
      (conv1): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
      (bn2): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(384, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(64, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (11): Block(
      (conv1): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)
      (bn2): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (12): Block(
      (conv1): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)
      (bn2): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (13): Block(
      (conv1): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(576, 576, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=576, bias=False)
      (bn2): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(576, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (14): Block(
      (conv1): Conv2d(160, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(960, 960, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=960, bias=False)
      (bn2): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(960, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (15): Block(
      (conv1): Conv2d(160, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(960, 960, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=960, bias=False)
      (bn2): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(960, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (16): Block(
      (conv1): Conv2d(160, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(960, 960, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=960, bias=False)
      (bn2): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(960, 320, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(160, 320, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (conv2): Conv2d(320, 1280, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn2): BatchNorm2d(1280, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (linear): Linear(in_features=1280, out_features=10, bias=True)
)
number of parameters: 2296922
clients initializting...
output size: 10
  0%|          | 0/100 [00:00<?, ?it/s]  1%|          | 1/100 [00:00<01:10,  1.40it/s]  2%|▏         | 2/100 [00:01<01:10,  1.39it/s]  3%|▎         | 3/100 [00:02<01:10,  1.38it/s]  4%|▍         | 4/100 [00:02<01:09,  1.37it/s]  5%|▌         | 5/100 [00:03<01:08,  1.38it/s]  6%|▌         | 6/100 [00:04<01:08,  1.37it/s]  7%|▋         | 7/100 [00:05<01:08,  1.37it/s]  8%|▊         | 8/100 [00:05<01:07,  1.37it/s]  9%|▉         | 9/100 [00:06<01:06,  1.36it/s] 10%|█         | 10/100 [00:07<01:05,  1.36it/s] 11%|█         | 11/100 [00:08<01:05,  1.36it/s] 12%|█▏        | 12/100 [00:08<01:04,  1.36it/s] 13%|█▎        | 13/100 [00:09<01:03,  1.37it/s] 14%|█▍        | 14/100 [00:10<01:02,  1.37it/s] 15%|█▌        | 15/100 [00:10<01:01,  1.38it/s] 16%|█▌        | 16/100 [00:11<01:01,  1.37it/s] 17%|█▋        | 17/100 [00:12<01:00,  1.38it/s] 18%|█▊        | 18/100 [00:13<00:59,  1.38it/s] 19%|█▉        | 19/100 [00:13<00:58,  1.38it/s] 20%|██        | 20/100 [00:14<00:57,  1.40it/s] 21%|██        | 21/100 [00:15<00:56,  1.40it/s] 22%|██▏       | 22/100 [00:15<00:55,  1.39it/s] 23%|██▎       | 23/100 [00:16<00:55,  1.38it/s] 24%|██▍       | 24/100 [00:17<00:54,  1.39it/s] 25%|██▌       | 25/100 [00:18<00:53,  1.39it/s] 26%|██▌       | 26/100 [00:18<00:52,  1.42it/s] 27%|██▋       | 27/100 [00:19<00:51,  1.42it/s] 28%|██▊       | 28/100 [00:20<00:51,  1.41it/s] 29%|██▉       | 29/100 [00:20<00:50,  1.41it/s] 30%|███       | 30/100 [00:21<00:49,  1.42it/s] 31%|███       | 31/100 [00:25<01:59,  1.73s/it] 32%|███▏      | 32/100 [00:26<01:37,  1.43s/it] 33%|███▎      | 33/100 [00:27<01:21,  1.21s/it] 34%|███▍      | 34/100 [00:27<01:10,  1.07s/it] 35%|███▌      | 35/100 [00:28<01:02,  1.04it/s] 36%|███▌      | 36/100 [00:29<00:56,  1.13it/s] 37%|███▋      | 37/100 [00:30<00:52,  1.19it/s] 38%|███▊      | 38/100 [00:30<00:49,  1.24it/s] 39%|███▉      | 39/100 [00:31<00:47,  1.28it/s] 40%|████      | 40/100 [00:32<00:45,  1.31it/s] 41%|████      | 41/100 [00:32<00:44,  1.34it/s] 42%|████▏     | 42/100 [00:33<00:43,  1.34it/s] 43%|████▎     | 43/100 [00:34<00:42,  1.35it/s] 44%|████▍     | 44/100 [00:35<00:41,  1.36it/s] 45%|████▌     | 45/100 [00:35<00:39,  1.38it/s] 46%|████▌     | 46/100 [00:36<00:39,  1.38it/s] 47%|████▋     | 47/100 [00:37<00:40,  1.30it/s] 48%|████▊     | 48/100 [00:38<00:39,  1.32it/s] 49%|████▉     | 49/100 [00:38<00:37,  1.35it/s] 50%|█████     | 50/100 [00:39<00:36,  1.36it/s] 51%|█████     | 51/100 [00:40<00:35,  1.38it/s] 52%|█████▏    | 52/100 [00:41<00:34,  1.39it/s] 53%|█████▎    | 53/100 [00:41<00:33,  1.40it/s] 54%|█████▍    | 54/100 [00:42<00:32,  1.39it/s] 55%|█████▌    | 55/100 [00:43<00:32,  1.39it/s] 56%|█████▌    | 56/100 [00:43<00:31,  1.39it/s] 57%|█████▋    | 57/100 [00:44<00:31,  1.38it/s] 58%|█████▊    | 58/100 [00:45<00:30,  1.39it/s] 59%|█████▉    | 59/100 [00:46<00:29,  1.39it/s] 60%|██████    | 60/100 [00:46<00:29,  1.37it/s] 61%|██████    | 61/100 [00:47<00:28,  1.37it/s] 62%|██████▏   | 62/100 [00:48<00:27,  1.36it/s] 63%|██████▎   | 63/100 [00:52<01:04,  1.74s/it] 64%|██████▍   | 64/100 [00:53<00:51,  1.44s/it] 65%|██████▌   | 65/100 [00:53<00:42,  1.22s/it] 66%|██████▌   | 66/100 [00:54<00:36,  1.07s/it] 67%|██████▋   | 67/100 [00:55<00:32,  1.02it/s] 68%|██████▊   | 68/100 [00:56<00:29,  1.10it/s] 69%|██████▉   | 69/100 [00:56<00:26,  1.16it/s] 70%|███████   | 70/100 [00:57<00:24,  1.20it/s] 71%|███████   | 71/100 [00:58<00:23,  1.24it/s] 72%|███████▏  | 72/100 [00:59<00:22,  1.27it/s] 73%|███████▎  | 73/100 [00:59<00:20,  1.31it/s] 74%|███████▍  | 74/100 [01:00<00:19,  1.34it/s] 75%|███████▌  | 75/100 [01:01<00:18,  1.37it/s] 76%|███████▌  | 76/100 [01:01<00:17,  1.38it/s] 77%|███████▋  | 77/100 [01:02<00:16,  1.39it/s] 78%|███████▊  | 78/100 [01:03<00:15,  1.40it/s] 79%|███████▉  | 79/100 [01:03<00:14,  1.41it/s] 80%|████████  | 80/100 [01:04<00:14,  1.39it/s] 81%|████████  | 81/100 [01:05<00:13,  1.39it/s] 82%|████████▏ | 82/100 [01:06<00:12,  1.39it/s] 83%|████████▎ | 83/100 [01:06<00:12,  1.37it/s] 84%|████████▍ | 84/100 [01:07<00:11,  1.37it/s] 85%|████████▌ | 85/100 [01:08<00:11,  1.35it/s] 86%|████████▌ | 86/100 [01:09<00:10,  1.36it/s] 87%|████████▋ | 87/100 [01:09<00:09,  1.38it/s] 88%|████████▊ | 88/100 [01:10<00:08,  1.39it/s] 89%|████████▉ | 89/100 [01:11<00:07,  1.40it/s] 90%|█████████ | 90/100 [01:11<00:07,  1.40it/s] 91%|█████████ | 91/100 [01:12<00:06,  1.39it/s] 92%|█████████▏| 92/100 [01:13<00:05,  1.38it/s] 93%|█████████▎| 93/100 [01:14<00:05,  1.36it/s] 94%|█████████▍| 94/100 [01:14<00:04,  1.35it/s] 95%|█████████▌| 95/100 [01:15<00:03,  1.34it/s] 96%|█████████▌| 96/100 [01:16<00:02,  1.34it/s] 97%|█████████▋| 97/100 [01:20<00:05,  1.79s/it] 98%|█████████▊| 98/100 [01:21<00:02,  1.47s/it] 99%|█████████▉| 99/100 [01:22<00:01,  1.26s/it]100%|██████████| 100/100 [01:22<00:00,  1.10s/it]100%|██████████| 100/100 [01:22<00:00,  1.21it/s]
Number of users per round / total users: 10  /  100
Finished creating FL server.
=== Training starts: algorithm FedFea ===
-------------Round number:  0  -------------
selected users: [26, 86, 2, 55, 75, 93, 16, 73, 54, 95]
random features: torch.Size([513, 16, 32, 32]) torch.Size([513])
random features: torch.Size([508, 16, 32, 32]) torch.Size([508])
random features: torch.Size([517, 16, 32, 32]) torch.Size([517])
random features: torch.Size([505, 16, 32, 32]) torch.Size([505])
random features: torch.Size([506, 16, 32, 32]) torch.Size([506])
random features: torch.Size([493, 16, 32, 32]) torch.Size([493])
random features: torch.Size([485, 16, 32, 32]) torch.Size([485])
random features: torch.Size([517, 16, 32, 32]) torch.Size([517])
random features: torch.Size([465, 16, 32, 32]) torch.Size([465])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
all data: 5009
Local adapation with distilling: 0.001
training loss: tensor(3.4648) feature loss: tensor(0.2987)
Local adapation with distilling: 0.001
training loss: tensor(3.3176) feature loss: tensor(0.2895)
Local adapation with distilling: 0.001
training loss: tensor(3.4696) feature loss: tensor(0.2580)
Local adapation with distilling: 0.001
training loss: tensor(3.3818) feature loss: tensor(0.3161)
Local adapation with distilling: 0.001
training loss: tensor(3.5232) feature loss: tensor(0.3074)
Local adapation with distilling: 0.001
training loss: tensor(3.3836) feature loss: tensor(0.2824)
Local adapation with distilling: 0.001
training loss: tensor(3.3731) feature loss: tensor(0.2688)
Local adapation with distilling: 0.001
training loss: tensor(3.4308) feature loss: tensor(0.2721)
Local adapation with distilling: 0.001
training loss: tensor(3.5138) feature loss: tensor(0.2964)
Local adapation with distilling: 0.001
training loss: tensor(3.2870) feature loss: tensor(0.2772)
Global Model Acc on global data: 0.1281 length of data: 10000
save a model
-------------Round number:  1  -------------
selected users: [80, 84, 33, 81, 93, 17, 36, 82, 69, 65]
random features: torch.Size([497, 16, 32, 32]) torch.Size([497])
random features: torch.Size([465, 16, 32, 32]) torch.Size([465])
random features: torch.Size([503, 16, 32, 32]) torch.Size([503])
random features: torch.Size([530, 16, 32, 32]) torch.Size([530])
random features: torch.Size([493, 16, 32, 32]) torch.Size([493])
random features: torch.Size([497, 16, 32, 32]) torch.Size([497])
random features: torch.Size([487, 16, 32, 32]) torch.Size([487])
random features: torch.Size([516, 16, 32, 32]) torch.Size([516])
random features: torch.Size([495, 16, 32, 32]) torch.Size([495])
random features: torch.Size([492, 16, 32, 32]) torch.Size([492])
all data: 4975
Local adapation with distilling: 0.000982
training loss: tensor(2.8537) feature loss: tensor(0.4763)
Local adapation with distilling: 0.000982
training loss: tensor(2.9958) feature loss: tensor(0.4193)
Local adapation with distilling: 0.000982
training loss: tensor(2.9518) feature loss: tensor(0.4259)
Local adapation with distilling: 0.000982
training loss: tensor(2.8523) feature loss: tensor(0.4842)
Local adapation with distilling: 0.000982
training loss: tensor(2.8685) feature loss: tensor(0.4508)
Local adapation with distilling: 0.000982
training loss: tensor(2.8400) feature loss: tensor(0.4432)
Local adapation with distilling: 0.000982
training loss: tensor(2.9186) feature loss: tensor(0.4557)
Local adapation with distilling: 0.000982
training loss: tensor(2.9841) feature loss: tensor(0.4591)
Local adapation with distilling: 0.000982
training loss: tensor(2.8354) feature loss: tensor(0.4731)
Local adapation with distilling: 0.000982
training loss: tensor(2.8265) feature loss: tensor(0.4832)
Global Model Acc on global data: 0.2059 length of data: 10000
save a model
-------------Round number:  2  -------------
selected users: [83, 30, 56, 24, 16, 23, 2, 27, 28, 13]
random features: torch.Size([576, 16, 32, 32]) torch.Size([576])
random features: torch.Size([487, 16, 32, 32]) torch.Size([487])
random features: torch.Size([476, 16, 32, 32]) torch.Size([476])
random features: torch.Size([466, 16, 32, 32]) torch.Size([466])
random features: torch.Size([485, 16, 32, 32]) torch.Size([485])
random features: torch.Size([488, 16, 32, 32]) torch.Size([488])
random features: torch.Size([517, 16, 32, 32]) torch.Size([517])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([498, 16, 32, 32]) torch.Size([498])
random features: torch.Size([481, 16, 32, 32]) torch.Size([481])
all data: 4974
Local adapation with distilling: 0.000964
training loss: tensor(2.3728) feature loss: tensor(0.4957)
Local adapation with distilling: 0.000964
training loss: tensor(2.4830) feature loss: tensor(0.5078)
Local adapation with distilling: 0.000964
training loss: tensor(2.5375) feature loss: tensor(0.4799)
Local adapation with distilling: 0.000964
training loss: tensor(2.4982) feature loss: tensor(0.4512)
Local adapation with distilling: 0.000964
training loss: tensor(2.4688) feature loss: tensor(0.4538)
Local adapation with distilling: 0.000964
training loss: tensor(2.4474) feature loss: tensor(0.4730)
Local adapation with distilling: 0.000964
training loss: tensor(2.5444) feature loss: tensor(0.4697)
Local adapation with distilling: 0.000964
training loss: tensor(2.4103) feature loss: tensor(0.5288)
Local adapation with distilling: 0.000964
training loss: tensor(2.4674) feature loss: tensor(0.5401)
Local adapation with distilling: 0.000964
training loss: tensor(2.4678) feature loss: tensor(0.4406)
Global Model Acc on global data: 0.3106 length of data: 10000
save a model
-------------Round number:  3  -------------
selected users: [93, 67, 6, 64, 96, 83, 98, 42, 25, 15]
random features: torch.Size([493, 16, 32, 32]) torch.Size([493])
random features: torch.Size([481, 16, 32, 32]) torch.Size([481])
random features: torch.Size([507, 16, 32, 32]) torch.Size([507])
random features: torch.Size([493, 16, 32, 32]) torch.Size([493])
random features: torch.Size([480, 16, 32, 32]) torch.Size([480])
random features: torch.Size([576, 16, 32, 32]) torch.Size([576])
random features: torch.Size([519, 16, 32, 32]) torch.Size([519])
random features: torch.Size([496, 16, 32, 32]) torch.Size([496])
random features: torch.Size([497, 16, 32, 32]) torch.Size([497])
random features: torch.Size([532, 16, 32, 32]) torch.Size([532])
all data: 5074
Local adapation with distilling: 0.000946
training loss: tensor(2.1081) feature loss: tensor(0.4274)
Local adapation with distilling: 0.000946
training loss: tensor(2.1553) feature loss: tensor(0.4886)
Local adapation with distilling: 0.000946
training loss: tensor(2.2132) feature loss: tensor(0.4458)
Local adapation with distilling: 0.000946
training loss: tensor(2.1303) feature loss: tensor(0.4377)
Local adapation with distilling: 0.000946
training loss: tensor(2.1617) feature loss: tensor(0.4864)
Local adapation with distilling: 0.000946
training loss: tensor(2.0251) feature loss: tensor(0.4897)
Local adapation with distilling: 0.000946
training loss: tensor(2.2063) feature loss: tensor(0.4041)
Local adapation with distilling: 0.000946
training loss: tensor(2.1635) feature loss: tensor(0.4553)
Local adapation with distilling: 0.000946
training loss: tensor(2.1003) feature loss: tensor(0.4781)
Local adapation with distilling: 0.000946
training loss: tensor(2.1455) feature loss: tensor(0.4921)
Global Model Acc on global data: 0.2914 length of data: 10000
-------------Round number:  4  -------------
selected users: [20, 10, 96, 16, 63, 24, 53, 97, 41, 47]
random features: torch.Size([489, 16, 32, 32]) torch.Size([489])
random features: torch.Size([488, 16, 32, 32]) torch.Size([488])
random features: torch.Size([480, 16, 32, 32]) torch.Size([480])
random features: torch.Size([485, 16, 32, 32]) torch.Size([485])
random features: torch.Size([497, 16, 32, 32]) torch.Size([497])
random features: torch.Size([466, 16, 32, 32]) torch.Size([466])
random features: torch.Size([530, 16, 32, 32]) torch.Size([530])
random features: torch.Size([479, 16, 32, 32]) torch.Size([479])
random features: torch.Size([501, 16, 32, 32]) torch.Size([501])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
all data: 4915
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.9030) feature loss: tensor(0.5216)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.9108) feature loss: tensor(0.5557)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.8784) feature loss: tensor(0.5064)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.9275) feature loss: tensor(0.4710)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.9181) feature loss: tensor(0.5515)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.9734) feature loss: tensor(0.4930)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.9288) feature loss: tensor(0.4825)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.9264) feature loss: tensor(0.5318)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.9405) feature loss: tensor(0.5634)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.9582) feature loss: tensor(0.5304)
Global Model Acc on global data: 0.3657 length of data: 10000
save a model
-------------Round number:  5  -------------
selected users: [66, 32, 46, 28, 74, 23, 10, 20, 17, 35]
random features: torch.Size([476, 16, 32, 32]) torch.Size([476])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([489, 16, 32, 32]) torch.Size([489])
random features: torch.Size([498, 16, 32, 32]) torch.Size([498])
random features: torch.Size([501, 16, 32, 32]) torch.Size([501])
random features: torch.Size([488, 16, 32, 32]) torch.Size([488])
random features: torch.Size([488, 16, 32, 32]) torch.Size([488])
random features: torch.Size([489, 16, 32, 32]) torch.Size([489])
random features: torch.Size([497, 16, 32, 32]) torch.Size([497])
random features: torch.Size([504, 16, 32, 32]) torch.Size([504])
all data: 4930
Local adapation with distilling: 0.00091
training loss: tensor(1.7352) feature loss: tensor(0.4537)
Local adapation with distilling: 0.00091
training loss: tensor(1.7678) feature loss: tensor(0.4851)
Local adapation with distilling: 0.00091
training loss: tensor(1.7151) feature loss: tensor(0.4736)
Local adapation with distilling: 0.00091
training loss: tensor(1.6231) feature loss: tensor(0.4762)
Local adapation with distilling: 0.00091
training loss: tensor(1.6822) feature loss: tensor(0.4541)
Local adapation with distilling: 0.00091
training loss: tensor(1.6823) feature loss: tensor(0.4984)
Local adapation with distilling: 0.00091
training loss: tensor(1.6131) feature loss: tensor(0.4627)
Local adapation with distilling: 0.00091
training loss: tensor(1.6017) feature loss: tensor(0.4260)
Local adapation with distilling: 0.00091
training loss: tensor(1.7440) feature loss: tensor(0.4776)
Local adapation with distilling: 0.00091
training loss: tensor(1.7235) feature loss: tensor(0.4467)
Global Model Acc on global data: 0.3844 length of data: 10000
save a model
-------------Round number:  6  -------------
selected users: [17, 34, 0, 45, 60, 86, 20, 47, 44, 81]
random features: torch.Size([497, 16, 32, 32]) torch.Size([497])
random features: torch.Size([466, 16, 32, 32]) torch.Size([466])
random features: torch.Size([520, 16, 32, 32]) torch.Size([520])
random features: torch.Size([487, 16, 32, 32]) torch.Size([487])
random features: torch.Size([493, 16, 32, 32]) torch.Size([493])
random features: torch.Size([508, 16, 32, 32]) torch.Size([508])
random features: torch.Size([489, 16, 32, 32]) torch.Size([489])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([478, 16, 32, 32]) torch.Size([478])
random features: torch.Size([530, 16, 32, 32]) torch.Size([530])
all data: 4968
Local adapation with distilling: 0.000892
training loss: tensor(1.5383) feature loss: tensor(0.4855)
Local adapation with distilling: 0.000892
training loss: tensor(1.6584) feature loss: tensor(0.4498)
Local adapation with distilling: 0.000892
training loss: tensor(1.6676) feature loss: tensor(0.5064)
Local adapation with distilling: 0.000892
training loss: tensor(1.5693) feature loss: tensor(0.4956)
Local adapation with distilling: 0.000892
training loss: tensor(1.6147) feature loss: tensor(0.4510)
Local adapation with distilling: 0.000892
training loss: tensor(1.6214) feature loss: tensor(0.4917)
Local adapation with distilling: 0.000892
training loss: tensor(1.4597) feature loss: tensor(0.4140)
Local adapation with distilling: 0.000892
training loss: tensor(1.5901) feature loss: tensor(0.4720)
Local adapation with distilling: 0.000892
training loss: tensor(1.6185) feature loss: tensor(0.4551)
Local adapation with distilling: 0.000892
training loss: tensor(1.5988) feature loss: tensor(0.5236)
Global Model Acc on global data: 0.4392 length of data: 10000
save a model
-------------Round number:  7  -------------
selected users: [37, 26, 78, 91, 49, 15, 93, 71, 86, 22]
random features: torch.Size([521, 16, 32, 32]) torch.Size([521])
random features: torch.Size([513, 16, 32, 32]) torch.Size([513])
random features: torch.Size([519, 16, 32, 32]) torch.Size([519])
random features: torch.Size([494, 16, 32, 32]) torch.Size([494])
random features: torch.Size([507, 16, 32, 32]) torch.Size([507])
random features: torch.Size([532, 16, 32, 32]) torch.Size([532])
random features: torch.Size([493, 16, 32, 32]) torch.Size([493])
random features: torch.Size([521, 16, 32, 32]) torch.Size([521])
random features: torch.Size([508, 16, 32, 32]) torch.Size([508])
random features: torch.Size([507, 16, 32, 32]) torch.Size([507])
all data: 5115
Local adapation with distilling: 0.000874
training loss: tensor(1.4885) feature loss: tensor(0.4568)
Local adapation with distilling: 0.000874
training loss: tensor(1.7324) feature loss: tensor(0.4601)
Local adapation with distilling: 0.000874
training loss: tensor(1.5442) feature loss: tensor(0.4562)
Local adapation with distilling: 0.000874
training loss: tensor(1.5455) feature loss: tensor(0.4716)
Local adapation with distilling: 0.000874
training loss: tensor(1.5736) feature loss: tensor(0.4002)
Local adapation with distilling: 0.000874
training loss: tensor(1.4904) feature loss: tensor(0.4792)
Local adapation with distilling: 0.000874
training loss: tensor(1.4860) feature loss: tensor(0.4472)
Local adapation with distilling: 0.000874
training loss: tensor(1.5062) feature loss: tensor(0.4175)
Local adapation with distilling: 0.000874
training loss: tensor(1.4548) feature loss: tensor(0.4603)
Local adapation with distilling: 0.000874
training loss: tensor(1.5411) feature loss: tensor(0.5015)
Global Model Acc on global data: 0.4594 length of data: 10000
save a model
-------------Round number:  8  -------------
selected users: [17, 23, 1, 44, 55, 99, 86, 29, 62, 33]
random features: torch.Size([497, 16, 32, 32]) torch.Size([497])
random features: torch.Size([488, 16, 32, 32]) torch.Size([488])
random features: torch.Size([509, 16, 32, 32]) torch.Size([509])
random features: torch.Size([478, 16, 32, 32]) torch.Size([478])
random features: torch.Size([505, 16, 32, 32]) torch.Size([505])
random features: torch.Size([489, 16, 32, 32]) torch.Size([489])
random features: torch.Size([508, 16, 32, 32]) torch.Size([508])
random features: torch.Size([515, 16, 32, 32]) torch.Size([515])
random features: torch.Size([503, 16, 32, 32]) torch.Size([503])
random features: torch.Size([503, 16, 32, 32]) torch.Size([503])
all data: 4995
Local adapation with distilling: 0.000856
training loss: tensor(1.3140) feature loss: tensor(0.4001)
Local adapation with distilling: 0.000856
training loss: tensor(1.3803) feature loss: tensor(0.4515)
Local adapation with distilling: 0.000856
training loss: tensor(1.3511) feature loss: tensor(0.4408)
Local adapation with distilling: 0.000856
training loss: tensor(1.3463) feature loss: tensor(0.4140)
Local adapation with distilling: 0.000856
training loss: tensor(1.4162) feature loss: tensor(0.3828)
Local adapation with distilling: 0.000856
training loss: tensor(1.3873) feature loss: tensor(0.4729)
Local adapation with distilling: 0.000856
training loss: tensor(1.2785) feature loss: tensor(0.3811)
Local adapation with distilling: 0.000856
training loss: tensor(1.4789) feature loss: tensor(0.4069)
Local adapation with distilling: 0.000856
training loss: tensor(1.3988) feature loss: tensor(0.4026)
Local adapation with distilling: 0.000856
training loss: tensor(1.3362) feature loss: tensor(0.3983)
Global Model Acc on global data: 0.5053 length of data: 10000
save a model
-------------Round number:  9  -------------
selected users: [75, 42, 46, 68, 3, 39, 23, 20, 70, 73]
random features: torch.Size([506, 16, 32, 32]) torch.Size([506])
random features: torch.Size([496, 16, 32, 32]) torch.Size([496])
random features: torch.Size([489, 16, 32, 32]) torch.Size([489])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([492, 16, 32, 32]) torch.Size([492])
random features: torch.Size([498, 16, 32, 32]) torch.Size([498])
random features: torch.Size([488, 16, 32, 32]) torch.Size([488])
random features: torch.Size([489, 16, 32, 32]) torch.Size([489])
random features: torch.Size([491, 16, 32, 32]) torch.Size([491])
random features: torch.Size([517, 16, 32, 32]) torch.Size([517])
all data: 4966
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(1.3755) feature loss: tensor(0.3825)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(1.3060) feature loss: tensor(0.3721)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(1.3303) feature loss: tensor(0.3703)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(1.3621) feature loss: tensor(0.3730)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(1.2864) feature loss: tensor(0.3672)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(1.3182) feature loss: tensor(0.4080)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(1.2236) feature loss: tensor(0.3641)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(1.2403) feature loss: tensor(0.3572)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(1.3428) feature loss: tensor(0.3871)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(1.4082) feature loss: tensor(0.4027)
Global Model Acc on global data: 0.5187 length of data: 10000
save a model
-------------Round number:  10  -------------
selected users: [19, 14, 43, 37, 66, 3, 79, 41, 38, 68]
random features: torch.Size([499, 16, 32, 32]) torch.Size([499])
random features: torch.Size([496, 16, 32, 32]) torch.Size([496])
random features: torch.Size([508, 16, 32, 32]) torch.Size([508])
random features: torch.Size([521, 16, 32, 32]) torch.Size([521])
random features: torch.Size([476, 16, 32, 32]) torch.Size([476])
random features: torch.Size([492, 16, 32, 32]) torch.Size([492])
random features: torch.Size([485, 16, 32, 32]) torch.Size([485])
random features: torch.Size([501, 16, 32, 32]) torch.Size([501])
random features: torch.Size([507, 16, 32, 32]) torch.Size([507])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
all data: 4985
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(1.2622) feature loss: tensor(0.3895)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(1.2344) feature loss: tensor(0.3633)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(1.2282) feature loss: tensor(0.3528)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(1.1859) feature loss: tensor(0.3475)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(1.2374) feature loss: tensor(0.3529)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(1.1889) feature loss: tensor(0.3701)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(1.2532) feature loss: tensor(0.3633)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(1.2398) feature loss: tensor(0.3776)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(1.2424) feature loss: tensor(0.3678)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(1.1949) feature loss: tensor(0.3284)
Global Model Acc on global data: 0.5516 length of data: 10000
save a model
-------------Round number:  11  -------------
selected users: [46, 49, 22, 58, 41, 98, 62, 29, 30, 51]
random features: torch.Size([489, 16, 32, 32]) torch.Size([489])
random features: torch.Size([507, 16, 32, 32]) torch.Size([507])
random features: torch.Size([507, 16, 32, 32]) torch.Size([507])
random features: torch.Size([498, 16, 32, 32]) torch.Size([498])
random features: torch.Size([501, 16, 32, 32]) torch.Size([501])
random features: torch.Size([519, 16, 32, 32]) torch.Size([519])
random features: torch.Size([503, 16, 32, 32]) torch.Size([503])
random features: torch.Size([515, 16, 32, 32]) torch.Size([515])
random features: torch.Size([487, 16, 32, 32]) torch.Size([487])
random features: torch.Size([494, 16, 32, 32]) torch.Size([494])
all data: 5020
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(1.0997) feature loss: tensor(0.3331)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(1.0818) feature loss: tensor(0.3347)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(1.0866) feature loss: tensor(0.3267)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(1.1849) feature loss: tensor(0.3772)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(1.0363) feature loss: tensor(0.3398)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(1.2035) feature loss: tensor(0.3627)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(1.1676) feature loss: tensor(0.3783)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(1.1913) feature loss: tensor(0.3815)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(1.1477) feature loss: tensor(0.3503)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(1.1318) feature loss: tensor(0.3531)
Global Model Acc on global data: 0.5738 length of data: 10000
save a model
-------------Round number:  12  -------------
selected users: [17, 41, 92, 14, 68, 31, 89, 15, 21, 60]
random features: torch.Size([497, 16, 32, 32]) torch.Size([497])
random features: torch.Size([501, 16, 32, 32]) torch.Size([501])
random features: torch.Size([519, 16, 32, 32]) torch.Size([519])
random features: torch.Size([496, 16, 32, 32]) torch.Size([496])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([523, 16, 32, 32]) torch.Size([523])
random features: torch.Size([527, 16, 32, 32]) torch.Size([527])
random features: torch.Size([532, 16, 32, 32]) torch.Size([532])
random features: torch.Size([505, 16, 32, 32]) torch.Size([505])
random features: torch.Size([493, 16, 32, 32]) torch.Size([493])
all data: 5093
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.9920) feature loss: tensor(0.3163)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.9294) feature loss: tensor(0.3280)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(1.0898) feature loss: tensor(0.3351)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.9998) feature loss: tensor(0.3224)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.9696) feature loss: tensor(0.3083)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(1.0498) feature loss: tensor(0.3534)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(1.0324) feature loss: tensor(0.3338)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.9896) feature loss: tensor(0.3468)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(1.0397) feature loss: tensor(0.3363)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(1.0590) feature loss: tensor(0.3458)
Global Model Acc on global data: 0.5793 length of data: 10000
save a model
-------------Round number:  13  -------------
selected users: [37, 62, 83, 14, 43, 9, 44, 31, 69, 57]
random features: torch.Size([521, 16, 32, 32]) torch.Size([521])
random features: torch.Size([503, 16, 32, 32]) torch.Size([503])
random features: torch.Size([576, 16, 32, 32]) torch.Size([576])
random features: torch.Size([496, 16, 32, 32]) torch.Size([496])
random features: torch.Size([508, 16, 32, 32]) torch.Size([508])
random features: torch.Size([498, 16, 32, 32]) torch.Size([498])
random features: torch.Size([478, 16, 32, 32]) torch.Size([478])
random features: torch.Size([523, 16, 32, 32]) torch.Size([523])
random features: torch.Size([495, 16, 32, 32]) torch.Size([495])
random features: torch.Size([503, 16, 32, 32]) torch.Size([503])
all data: 5101
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.9419) feature loss: tensor(0.3112)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.9570) feature loss: tensor(0.3017)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.9511) feature loss: tensor(0.3445)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.9082) feature loss: tensor(0.2971)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.9624) feature loss: tensor(0.3137)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(1.0410) feature loss: tensor(0.3579)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.9976) feature loss: tensor(0.3202)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.9314) feature loss: tensor(0.3124)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(1.0225) feature loss: tensor(0.3446)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.9992) feature loss: tensor(0.3276)
Global Model Acc on global data: 0.6057 length of data: 10000
save a model
-------------Round number:  14  -------------
selected users: [24, 39, 35, 44, 55, 70, 82, 40, 91, 65]
random features: torch.Size([466, 16, 32, 32]) torch.Size([466])
random features: torch.Size([498, 16, 32, 32]) torch.Size([498])
random features: torch.Size([504, 16, 32, 32]) torch.Size([504])
random features: torch.Size([478, 16, 32, 32]) torch.Size([478])
random features: torch.Size([505, 16, 32, 32]) torch.Size([505])
random features: torch.Size([491, 16, 32, 32]) torch.Size([491])
random features: torch.Size([516, 16, 32, 32]) torch.Size([516])
random features: torch.Size([493, 16, 32, 32]) torch.Size([493])
random features: torch.Size([494, 16, 32, 32]) torch.Size([494])
random features: torch.Size([492, 16, 32, 32]) torch.Size([492])
all data: 4937
Local adapation with distilling: 0.000748
training loss: tensor(1.1061) feature loss: tensor(0.3266)
Local adapation with distilling: 0.000748
training loss: tensor(1.0286) feature loss: tensor(0.3155)
Local adapation with distilling: 0.000748
training loss: tensor(1.1309) feature loss: tensor(0.3607)
Local adapation with distilling: 0.000748
training loss: tensor(0.9779) feature loss: tensor(0.2976)
Local adapation with distilling: 0.000748
training loss: tensor(1.0738) feature loss: tensor(0.3298)
Local adapation with distilling: 0.000748
training loss: tensor(1.0820) feature loss: tensor(0.3537)
Local adapation with distilling: 0.000748
training loss: tensor(1.1664) feature loss: tensor(0.3343)
Local adapation with distilling: 0.000748
training loss: tensor(1.1043) feature loss: tensor(0.3645)
Local adapation with distilling: 0.000748
training loss: tensor(1.0954) feature loss: tensor(0.3481)
Local adapation with distilling: 0.000748
training loss: tensor(1.0505) feature loss: tensor(0.3348)
Global Model Acc on global data: 0.6082 length of data: 10000
save a model
-------------Round number:  15  -------------
selected users: [84, 36, 57, 51, 46, 78, 93, 14, 11, 59]
random features: torch.Size([465, 16, 32, 32]) torch.Size([465])
random features: torch.Size([487, 16, 32, 32]) torch.Size([487])
random features: torch.Size([503, 16, 32, 32]) torch.Size([503])
random features: torch.Size([494, 16, 32, 32]) torch.Size([494])
random features: torch.Size([489, 16, 32, 32]) torch.Size([489])
random features: torch.Size([519, 16, 32, 32]) torch.Size([519])
random features: torch.Size([493, 16, 32, 32]) torch.Size([493])
random features: torch.Size([496, 16, 32, 32]) torch.Size([496])
random features: torch.Size([519, 16, 32, 32]) torch.Size([519])
random features: torch.Size([514, 16, 32, 32]) torch.Size([514])
all data: 4979
Local adapation with distilling: 0.00073
training loss: tensor(1.0065) feature loss: tensor(0.3434)
Local adapation with distilling: 0.00073
training loss: tensor(0.9346) feature loss: tensor(0.3380)
Local adapation with distilling: 0.00073
training loss: tensor(0.9002) feature loss: tensor(0.3199)
Local adapation with distilling: 0.00073
training loss: tensor(0.9490) feature loss: tensor(0.3328)
Local adapation with distilling: 0.00073
training loss: tensor(0.8998) feature loss: tensor(0.3107)
Local adapation with distilling: 0.00073
training loss: tensor(0.9840) feature loss: tensor(0.3352)
Local adapation with distilling: 0.00073
training loss: tensor(0.9697) feature loss: tensor(0.3495)
Local adapation with distilling: 0.00073
training loss: tensor(0.8585) feature loss: tensor(0.2987)
Local adapation with distilling: 0.00073
training loss: tensor(0.9832) feature loss: tensor(0.3607)
Local adapation with distilling: 0.00073
training loss: tensor(1.1690) feature loss: tensor(0.3285)
Global Model Acc on global data: 0.6216 length of data: 10000
save a model
-------------Round number:  16  -------------
selected users: [7, 25, 71, 42, 47, 29, 63, 88, 50, 9]
random features: torch.Size([522, 16, 32, 32]) torch.Size([522])
random features: torch.Size([497, 16, 32, 32]) torch.Size([497])
random features: torch.Size([521, 16, 32, 32]) torch.Size([521])
random features: torch.Size([496, 16, 32, 32]) torch.Size([496])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([515, 16, 32, 32]) torch.Size([515])
random features: torch.Size([497, 16, 32, 32]) torch.Size([497])
random features: torch.Size([497, 16, 32, 32]) torch.Size([497])
random features: torch.Size([467, 16, 32, 32]) torch.Size([467])
random features: torch.Size([498, 16, 32, 32]) torch.Size([498])
all data: 5010
Local adapation with distilling: 0.000712
training loss: tensor(0.9727) feature loss: tensor(0.3122)
Local adapation with distilling: 0.000712
training loss: tensor(0.9638) feature loss: tensor(0.3008)
Local adapation with distilling: 0.000712
training loss: tensor(0.9683) feature loss: tensor(0.3219)
Local adapation with distilling: 0.000712
training loss: tensor(0.9814) feature loss: tensor(0.3144)
Local adapation with distilling: 0.000712
training loss: tensor(1.0627) feature loss: tensor(0.3580)
Local adapation with distilling: 0.000712
training loss: tensor(1.0668) feature loss: tensor(0.3305)
Local adapation with distilling: 0.000712
training loss: tensor(1.0387) feature loss: tensor(0.3284)
Local adapation with distilling: 0.000712
training loss: tensor(0.9788) feature loss: tensor(0.3013)
Local adapation with distilling: 0.000712
training loss: tensor(1.0064) feature loss: tensor(0.3251)
Local adapation with distilling: 0.000712
training loss: tensor(0.9403) feature loss: tensor(0.2744)
Global Model Acc on global data: 0.6342 length of data: 10000
save a model
-------------Round number:  17  -------------
selected users: [71, 28, 9, 4, 73, 34, 94, 92, 47, 37]
random features: torch.Size([521, 16, 32, 32]) torch.Size([521])
random features: torch.Size([498, 16, 32, 32]) torch.Size([498])
random features: torch.Size([498, 16, 32, 32]) torch.Size([498])
random features: torch.Size([510, 16, 32, 32]) torch.Size([510])
random features: torch.Size([517, 16, 32, 32]) torch.Size([517])
random features: torch.Size([466, 16, 32, 32]) torch.Size([466])
random features: torch.Size([486, 16, 32, 32]) torch.Size([486])
random features: torch.Size([519, 16, 32, 32]) torch.Size([519])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([521, 16, 32, 32]) torch.Size([521])
all data: 5036
Local adapation with distilling: 0.000694
training loss: tensor(0.7663) feature loss: tensor(0.2677)
Local adapation with distilling: 0.000694
training loss: tensor(0.8428) feature loss: tensor(0.2979)
Local adapation with distilling: 0.000694
training loss: tensor(0.7492) feature loss: tensor(0.2620)
Local adapation with distilling: 0.000694
training loss: tensor(0.8509) feature loss: tensor(0.2960)
Local adapation with distilling: 0.000694
training loss: tensor(0.8838) feature loss: tensor(0.3143)
Local adapation with distilling: 0.000694
training loss: tensor(0.8688) feature loss: tensor(0.2948)
Local adapation with distilling: 0.000694
training loss: tensor(0.8439) feature loss: tensor(0.2852)
Local adapation with distilling: 0.000694
training loss: tensor(0.8422) feature loss: tensor(0.2908)
Local adapation with distilling: 0.000694
training loss: tensor(0.7958) feature loss: tensor(0.2905)
Local adapation with distilling: 0.000694
training loss: tensor(0.7766) feature loss: tensor(0.2777)
Global Model Acc on global data: 0.6458 length of data: 10000
save a model
-------------Round number:  18  -------------
selected users: [53, 47, 43, 54, 33, 48, 0, 12, 44, 91]
random features: torch.Size([530, 16, 32, 32]) torch.Size([530])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([508, 16, 32, 32]) torch.Size([508])
random features: torch.Size([465, 16, 32, 32]) torch.Size([465])
random features: torch.Size([503, 16, 32, 32]) torch.Size([503])
random features: torch.Size([507, 16, 32, 32]) torch.Size([507])
random features: torch.Size([520, 16, 32, 32]) torch.Size([520])
random features: torch.Size([515, 16, 32, 32]) torch.Size([515])
random features: torch.Size([478, 16, 32, 32]) torch.Size([478])
random features: torch.Size([494, 16, 32, 32]) torch.Size([494])
all data: 5020
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.8592) feature loss: tensor(0.2958)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.7757) feature loss: tensor(0.2524)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.8070) feature loss: tensor(0.2619)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.9204) feature loss: tensor(0.2800)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.8817) feature loss: tensor(0.2815)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.8841) feature loss: tensor(0.2900)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.8719) feature loss: tensor(0.2907)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(1.0203) feature loss: tensor(0.3130)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.8145) feature loss: tensor(0.2692)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.8286) feature loss: tensor(0.2694)
Global Model Acc on global data: 0.6526 length of data: 10000
save a model
-------------Round number:  19  -------------
selected users: [85, 72, 16, 18, 2, 38, 90, 30, 83, 61]
random features: torch.Size([498, 16, 32, 32]) torch.Size([498])
random features: torch.Size([515, 16, 32, 32]) torch.Size([515])
random features: torch.Size([485, 16, 32, 32]) torch.Size([485])
random features: torch.Size([489, 16, 32, 32]) torch.Size([489])
random features: torch.Size([517, 16, 32, 32]) torch.Size([517])
random features: torch.Size([507, 16, 32, 32]) torch.Size([507])
random features: torch.Size([483, 16, 32, 32]) torch.Size([483])
random features: torch.Size([487, 16, 32, 32]) torch.Size([487])
random features: torch.Size([576, 16, 32, 32]) torch.Size([576])
random features: torch.Size([529, 16, 32, 32]) torch.Size([529])
all data: 5086
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.9480) feature loss: tensor(0.2823)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.9972) feature loss: tensor(0.3213)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.9823) feature loss: tensor(0.2983)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(1.0044) feature loss: tensor(0.3087)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(1.0250) feature loss: tensor(0.3097)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.9420) feature loss: tensor(0.2927)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(1.0002) feature loss: tensor(0.3182)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.9509) feature loss: tensor(0.3019)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.9048) feature loss: tensor(0.3068)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.9754) feature loss: tensor(0.2991)
Global Model Acc on global data: 0.6642 length of data: 10000
save a model
-------------Round number:  20  -------------
selected users: [70, 74, 2, 44, 56, 48, 12, 36, 0, 49]
random features: torch.Size([491, 16, 32, 32]) torch.Size([491])
random features: torch.Size([501, 16, 32, 32]) torch.Size([501])
random features: torch.Size([517, 16, 32, 32]) torch.Size([517])
random features: torch.Size([478, 16, 32, 32]) torch.Size([478])
random features: torch.Size([476, 16, 32, 32]) torch.Size([476])
random features: torch.Size([507, 16, 32, 32]) torch.Size([507])
random features: torch.Size([515, 16, 32, 32]) torch.Size([515])
random features: torch.Size([487, 16, 32, 32]) torch.Size([487])
random features: torch.Size([520, 16, 32, 32]) torch.Size([520])
random features: torch.Size([507, 16, 32, 32]) torch.Size([507])
all data: 4999
Local adapation with distilling: 0.00064
training loss: tensor(0.7355) feature loss: tensor(0.2513)
Local adapation with distilling: 0.00064
training loss: tensor(0.7941) feature loss: tensor(0.2836)
Local adapation with distilling: 0.00064
training loss: tensor(0.7414) feature loss: tensor(0.2429)
Local adapation with distilling: 0.00064
training loss: tensor(0.6751) feature loss: tensor(0.2420)
Local adapation with distilling: 0.00064
training loss: tensor(0.7745) feature loss: tensor(0.2571)
Local adapation with distilling: 0.00064
training loss: tensor(0.7523) feature loss: tensor(0.2725)
Local adapation with distilling: 0.00064
training loss: tensor(0.7377) feature loss: tensor(0.2714)
Local adapation with distilling: 0.00064
training loss: tensor(0.7498) feature loss: tensor(0.2771)
Local adapation with distilling: 0.00064
training loss: tensor(0.6988) feature loss: tensor(0.2482)
Local adapation with distilling: 0.00064
training loss: tensor(0.7358) feature loss: tensor(0.2396)
Global Model Acc on global data: 0.6576 length of data: 10000
-------------Round number:  21  -------------
selected users: [23, 81, 85, 34, 62, 46, 42, 31, 93, 11]
random features: torch.Size([488, 16, 32, 32]) torch.Size([488])
random features: torch.Size([530, 16, 32, 32]) torch.Size([530])
random features: torch.Size([498, 16, 32, 32]) torch.Size([498])
random features: torch.Size([466, 16, 32, 32]) torch.Size([466])
random features: torch.Size([503, 16, 32, 32]) torch.Size([503])
random features: torch.Size([489, 16, 32, 32]) torch.Size([489])
random features: torch.Size([496, 16, 32, 32]) torch.Size([496])
random features: torch.Size([523, 16, 32, 32]) torch.Size([523])
random features: torch.Size([493, 16, 32, 32]) torch.Size([493])
random features: torch.Size([519, 16, 32, 32]) torch.Size([519])
all data: 5005
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.7498) feature loss: tensor(0.2967)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.7124) feature loss: tensor(0.2891)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.6695) feature loss: tensor(0.2411)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.7242) feature loss: tensor(0.2622)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.7084) feature loss: tensor(0.2686)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.6795) feature loss: tensor(0.2650)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.7172) feature loss: tensor(0.2793)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.7089) feature loss: tensor(0.2700)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.7066) feature loss: tensor(0.2721)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.7417) feature loss: tensor(0.2673)
Global Model Acc on global data: 0.6686 length of data: 10000
save a model
-------------Round number:  22  -------------
selected users: [2, 49, 82, 31, 37, 12, 87, 42, 99, 85]
random features: torch.Size([517, 16, 32, 32]) torch.Size([517])
random features: torch.Size([507, 16, 32, 32]) torch.Size([507])
random features: torch.Size([516, 16, 32, 32]) torch.Size([516])
random features: torch.Size([523, 16, 32, 32]) torch.Size([523])
random features: torch.Size([521, 16, 32, 32]) torch.Size([521])
random features: torch.Size([515, 16, 32, 32]) torch.Size([515])
random features: torch.Size([486, 16, 32, 32]) torch.Size([486])
random features: torch.Size([496, 16, 32, 32]) torch.Size([496])
random features: torch.Size([489, 16, 32, 32]) torch.Size([489])
random features: torch.Size([498, 16, 32, 32]) torch.Size([498])
all data: 5068
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.5853) feature loss: tensor(0.2283)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.5452) feature loss: tensor(0.2263)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.6512) feature loss: tensor(0.2401)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.5350) feature loss: tensor(0.2221)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.5500) feature loss: tensor(0.2369)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.6125) feature loss: tensor(0.2303)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.6367) feature loss: tensor(0.2664)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.5391) feature loss: tensor(0.2184)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.6397) feature loss: tensor(0.2896)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.5235) feature loss: tensor(0.2177)
Global Model Acc on global data: 0.6686 length of data: 10000
-------------Round number:  23  -------------
selected users: [26, 80, 82, 68, 77, 37, 3, 55, 20, 17]
random features: torch.Size([513, 16, 32, 32]) torch.Size([513])
random features: torch.Size([497, 16, 32, 32]) torch.Size([497])
random features: torch.Size([516, 16, 32, 32]) torch.Size([516])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([499, 16, 32, 32]) torch.Size([499])
random features: torch.Size([521, 16, 32, 32]) torch.Size([521])
random features: torch.Size([492, 16, 32, 32]) torch.Size([492])
random features: torch.Size([505, 16, 32, 32]) torch.Size([505])
random features: torch.Size([489, 16, 32, 32]) torch.Size([489])
random features: torch.Size([497, 16, 32, 32]) torch.Size([497])
all data: 5029
Local adapation with distilling: 0.000586
training loss: tensor(0.9453) feature loss: tensor(0.2701)
Local adapation with distilling: 0.000586
training loss: tensor(0.7708) feature loss: tensor(0.2769)
Local adapation with distilling: 0.000586
training loss: tensor(0.6897) feature loss: tensor(0.2524)
Local adapation with distilling: 0.000586
training loss: tensor(0.7574) feature loss: tensor(0.2759)
Local adapation with distilling: 0.000586
training loss: tensor(0.8074) feature loss: tensor(0.3111)
Local adapation with distilling: 0.000586
training loss: tensor(0.6691) feature loss: tensor(0.2551)
Local adapation with distilling: 0.000586
training loss: tensor(0.7361) feature loss: tensor(0.2675)
Local adapation with distilling: 0.000586
training loss: tensor(0.7582) feature loss: tensor(0.2664)
Local adapation with distilling: 0.000586
training loss: tensor(0.7813) feature loss: tensor(0.2750)
Local adapation with distilling: 0.000586
training loss: tensor(0.7269) feature loss: tensor(0.2691)
Global Model Acc on global data: 0.6749 length of data: 10000
save a model
-------------Round number:  24  -------------
selected users: [26, 31, 37, 86, 76, 14, 88, 48, 71, 67]
random features: torch.Size([513, 16, 32, 32]) torch.Size([513])
random features: torch.Size([523, 16, 32, 32]) torch.Size([523])
random features: torch.Size([521, 16, 32, 32]) torch.Size([521])
random features: torch.Size([508, 16, 32, 32]) torch.Size([508])
random features: torch.Size([480, 16, 32, 32]) torch.Size([480])
random features: torch.Size([496, 16, 32, 32]) torch.Size([496])
random features: torch.Size([497, 16, 32, 32]) torch.Size([497])
random features: torch.Size([507, 16, 32, 32]) torch.Size([507])
random features: torch.Size([521, 16, 32, 32]) torch.Size([521])
random features: torch.Size([481, 16, 32, 32]) torch.Size([481])
all data: 5047
Local adapation with distilling: 0.000568
training loss: tensor(0.8271) feature loss: tensor(0.2199)
Local adapation with distilling: 0.000568
training loss: tensor(0.5034) feature loss: tensor(0.1999)
Local adapation with distilling: 0.000568
training loss: tensor(0.4928) feature loss: tensor(0.2025)
Local adapation with distilling: 0.000568
training loss: tensor(0.5629) feature loss: tensor(0.2260)
Local adapation with distilling: 0.000568
training loss: tensor(0.6269) feature loss: tensor(0.2380)
Local adapation with distilling: 0.000568
training loss: tensor(0.5459) feature loss: tensor(0.2250)
Local adapation with distilling: 0.000568
training loss: tensor(0.5676) feature loss: tensor(0.2322)
Local adapation with distilling: 0.000568
training loss: tensor(0.5391) feature loss: tensor(0.2149)
Local adapation with distilling: 0.000568
training loss: tensor(0.5469) feature loss: tensor(0.2218)
Local adapation with distilling: 0.000568
training loss: tensor(0.5777) feature loss: tensor(0.2285)
Global Model Acc on global data: 0.6725 length of data: 10000
-------------Round number:  25  -------------
selected users: [41, 29, 33, 65, 74, 6, 57, 89, 87, 98]
random features: torch.Size([501, 16, 32, 32]) torch.Size([501])
random features: torch.Size([515, 16, 32, 32]) torch.Size([515])
random features: torch.Size([503, 16, 32, 32]) torch.Size([503])
random features: torch.Size([492, 16, 32, 32]) torch.Size([492])
random features: torch.Size([501, 16, 32, 32]) torch.Size([501])
random features: torch.Size([507, 16, 32, 32]) torch.Size([507])
random features: torch.Size([503, 16, 32, 32]) torch.Size([503])
random features: torch.Size([527, 16, 32, 32]) torch.Size([527])
random features: torch.Size([486, 16, 32, 32]) torch.Size([486])
random features: torch.Size([519, 16, 32, 32]) torch.Size([519])
all data: 5054
Local adapation with distilling: 0.00055
training loss: tensor(0.7111) feature loss: tensor(0.2650)
Local adapation with distilling: 0.00055
training loss: tensor(0.7832) feature loss: tensor(0.2501)
Local adapation with distilling: 0.00055
training loss: tensor(0.7137) feature loss: tensor(0.2625)
Local adapation with distilling: 0.00055
training loss: tensor(0.7036) feature loss: tensor(0.2595)
Local adapation with distilling: 0.00055
training loss: tensor(0.7155) feature loss: tensor(0.2703)
Local adapation with distilling: 0.00055
training loss: tensor(0.7996) feature loss: tensor(0.2987)
Local adapation with distilling: 0.00055
training loss: tensor(0.6852) feature loss: tensor(0.2516)
Local adapation with distilling: 0.00055
training loss: tensor(0.7237) feature loss: tensor(0.2792)
Local adapation with distilling: 0.00055
training loss: tensor(0.7037) feature loss: tensor(0.2581)
Local adapation with distilling: 0.00055
training loss: tensor(0.8037) feature loss: tensor(0.2823)
Global Model Acc on global data: 0.6852 length of data: 10000
save a model
-------------Round number:  26  -------------
selected users: [8, 69, 84, 41, 25, 5, 63, 95, 33, 70]
random features: torch.Size([507, 16, 32, 32]) torch.Size([507])
random features: torch.Size([495, 16, 32, 32]) torch.Size([495])
random features: torch.Size([465, 16, 32, 32]) torch.Size([465])
random features: torch.Size([501, 16, 32, 32]) torch.Size([501])
random features: torch.Size([497, 16, 32, 32]) torch.Size([497])
random features: torch.Size([520, 16, 32, 32]) torch.Size([520])
random features: torch.Size([497, 16, 32, 32]) torch.Size([497])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([503, 16, 32, 32]) torch.Size([503])
random features: torch.Size([491, 16, 32, 32]) torch.Size([491])
all data: 4976
Local adapation with distilling: 0.000532
training loss: tensor(0.6869) feature loss: tensor(0.2502)
Local adapation with distilling: 0.000532
training loss: tensor(0.7035) feature loss: tensor(0.2637)
Local adapation with distilling: 0.000532
training loss: tensor(0.7317) feature loss: tensor(0.2457)
Local adapation with distilling: 0.000532
training loss: tensor(0.6252) feature loss: tensor(0.2458)
Local adapation with distilling: 0.000532
training loss: tensor(0.6812) feature loss: tensor(0.2424)
Local adapation with distilling: 0.000532
training loss: tensor(0.7353) feature loss: tensor(0.2594)
Local adapation with distilling: 0.000532
training loss: tensor(0.6993) feature loss: tensor(0.2564)
Local adapation with distilling: 0.000532
training loss: tensor(0.6929) feature loss: tensor(0.2658)
Local adapation with distilling: 0.000532
training loss: tensor(0.6312) feature loss: tensor(0.2360)
Local adapation with distilling: 0.000532
training loss: tensor(0.6613) feature loss: tensor(0.2558)
Global Model Acc on global data: 0.6924 length of data: 10000
save a model
-------------Round number:  27  -------------
selected users: [89, 68, 43, 50, 40, 95, 27, 85, 22, 44]
random features: torch.Size([527, 16, 32, 32]) torch.Size([527])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([508, 16, 32, 32]) torch.Size([508])
random features: torch.Size([467, 16, 32, 32]) torch.Size([467])
random features: torch.Size([493, 16, 32, 32]) torch.Size([493])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([498, 16, 32, 32]) torch.Size([498])
random features: torch.Size([507, 16, 32, 32]) torch.Size([507])
random features: torch.Size([478, 16, 32, 32]) torch.Size([478])
all data: 4978
Local adapation with distilling: 0.000514
training loss: tensor(0.5649) feature loss: tensor(0.2172)
Local adapation with distilling: 0.000514
training loss: tensor(0.5780) feature loss: tensor(0.2148)
Local adapation with distilling: 0.000514
training loss: tensor(0.5827) feature loss: tensor(0.2098)
Local adapation with distilling: 0.000514
training loss: tensor(0.6065) feature loss: tensor(0.2304)
Local adapation with distilling: 0.000514
training loss: tensor(0.6245) feature loss: tensor(0.2165)
Local adapation with distilling: 0.000514
training loss: tensor(0.5754) feature loss: tensor(0.2142)
Local adapation with distilling: 0.000514
training loss: tensor(0.6196) feature loss: tensor(0.2218)
Local adapation with distilling: 0.000514
training loss: tensor(0.5509) feature loss: tensor(0.1985)
Local adapation with distilling: 0.000514
training loss: tensor(0.6136) feature loss: tensor(0.2227)
Local adapation with distilling: 0.000514
training loss: tensor(0.5772) feature loss: tensor(0.2091)
Global Model Acc on global data: 0.697 length of data: 10000
save a model
-------------Round number:  28  -------------
selected users: [67, 14, 0, 86, 13, 18, 30, 36, 52, 95]
random features: torch.Size([481, 16, 32, 32]) torch.Size([481])
random features: torch.Size([496, 16, 32, 32]) torch.Size([496])
random features: torch.Size([520, 16, 32, 32]) torch.Size([520])
random features: torch.Size([508, 16, 32, 32]) torch.Size([508])
random features: torch.Size([481, 16, 32, 32]) torch.Size([481])
random features: torch.Size([489, 16, 32, 32]) torch.Size([489])
random features: torch.Size([487, 16, 32, 32]) torch.Size([487])
random features: torch.Size([487, 16, 32, 32]) torch.Size([487])
random features: torch.Size([534, 16, 32, 32]) torch.Size([534])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
all data: 4983
Local adapation with distilling: 0.000496
training loss: tensor(0.5609) feature loss: tensor(0.2017)
Local adapation with distilling: 0.000496
training loss: tensor(0.5361) feature loss: tensor(0.2177)
Local adapation with distilling: 0.000496
training loss: tensor(0.5803) feature loss: tensor(0.2149)
Local adapation with distilling: 0.000496
training loss: tensor(0.5541) feature loss: tensor(0.2241)
Local adapation with distilling: 0.000496
training loss: tensor(0.6566) feature loss: tensor(0.2376)
Local adapation with distilling: 0.000496
training loss: tensor(0.5977) feature loss: tensor(0.2291)
Local adapation with distilling: 0.000496
training loss: tensor(0.5640) feature loss: tensor(0.2151)
Local adapation with distilling: 0.000496
training loss: tensor(0.5624) feature loss: tensor(0.2071)
Local adapation with distilling: 0.000496
training loss: tensor(0.5806) feature loss: tensor(0.2259)
Local adapation with distilling: 0.000496
training loss: tensor(0.5182) feature loss: tensor(0.2059)
Global Model Acc on global data: 0.7009 length of data: 10000
save a model
-------------Round number:  29  -------------
selected users: [73, 8, 10, 7, 19, 71, 92, 25, 38, 12]
random features: torch.Size([517, 16, 32, 32]) torch.Size([517])
random features: torch.Size([507, 16, 32, 32]) torch.Size([507])
random features: torch.Size([488, 16, 32, 32]) torch.Size([488])
random features: torch.Size([522, 16, 32, 32]) torch.Size([522])
random features: torch.Size([499, 16, 32, 32]) torch.Size([499])
random features: torch.Size([521, 16, 32, 32]) torch.Size([521])
random features: torch.Size([519, 16, 32, 32]) torch.Size([519])
random features: torch.Size([497, 16, 32, 32]) torch.Size([497])
random features: torch.Size([507, 16, 32, 32]) torch.Size([507])
random features: torch.Size([515, 16, 32, 32]) torch.Size([515])
all data: 5092
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.7392) feature loss: tensor(0.2312)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.5779) feature loss: tensor(0.2040)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.6310) feature loss: tensor(0.2253)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.5938) feature loss: tensor(0.2304)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.6063) feature loss: tensor(0.2262)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.5338) feature loss: tensor(0.2006)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.6716) feature loss: tensor(0.2175)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.5605) feature loss: tensor(0.2152)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.5874) feature loss: tensor(0.2215)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.6473) feature loss: tensor(0.2125)
Global Model Acc on global data: 0.7073 length of data: 10000
save a model
-------------Round number:  30  -------------
selected users: [20, 91, 34, 52, 8, 74, 21, 88, 80, 89]
random features: torch.Size([489, 16, 32, 32]) torch.Size([489])
random features: torch.Size([494, 16, 32, 32]) torch.Size([494])
random features: torch.Size([466, 16, 32, 32]) torch.Size([466])
random features: torch.Size([534, 16, 32, 32]) torch.Size([534])
random features: torch.Size([507, 16, 32, 32]) torch.Size([507])
random features: torch.Size([501, 16, 32, 32]) torch.Size([501])
random features: torch.Size([505, 16, 32, 32]) torch.Size([505])
random features: torch.Size([497, 16, 32, 32]) torch.Size([497])
random features: torch.Size([497, 16, 32, 32]) torch.Size([497])
random features: torch.Size([527, 16, 32, 32]) torch.Size([527])
all data: 5017
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.4856) feature loss: tensor(0.1983)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.4973) feature loss: tensor(0.2154)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.5507) feature loss: tensor(0.2040)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.4381) feature loss: tensor(0.2023)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.4468) feature loss: tensor(0.1825)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.4754) feature loss: tensor(0.1949)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.5245) feature loss: tensor(0.2093)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.4676) feature loss: tensor(0.1958)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.4928) feature loss: tensor(0.2088)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.4250) feature loss: tensor(0.1942)
Global Model Acc on global data: 0.7022 length of data: 10000
-------------Round number:  31  -------------
selected users: [17, 33, 76, 3, 56, 0, 37, 8, 60, 67]
random features: torch.Size([497, 16, 32, 32]) torch.Size([497])
random features: torch.Size([503, 16, 32, 32]) torch.Size([503])
random features: torch.Size([480, 16, 32, 32]) torch.Size([480])
random features: torch.Size([492, 16, 32, 32]) torch.Size([492])
random features: torch.Size([476, 16, 32, 32]) torch.Size([476])
random features: torch.Size([520, 16, 32, 32]) torch.Size([520])
random features: torch.Size([521, 16, 32, 32]) torch.Size([521])
random features: torch.Size([507, 16, 32, 32]) torch.Size([507])
random features: torch.Size([493, 16, 32, 32]) torch.Size([493])
random features: torch.Size([481, 16, 32, 32]) torch.Size([481])
all data: 4970
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.4340) feature loss: tensor(0.1975)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.4235) feature loss: tensor(0.1892)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.4812) feature loss: tensor(0.2001)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.4492) feature loss: tensor(0.1899)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.4715) feature loss: tensor(0.1959)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.4362) feature loss: tensor(0.1952)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.3769) feature loss: tensor(0.1884)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.3981) feature loss: tensor(0.1788)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.5154) feature loss: tensor(0.2106)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.4176) feature loss: tensor(0.1961)
Global Model Acc on global data: 0.7024 length of data: 10000
-------------Round number:  32  -------------
selected users: [22, 39, 85, 97, 55, 33, 80, 13, 27, 96]
random features: torch.Size([507, 16, 32, 32]) torch.Size([507])
random features: torch.Size([498, 16, 32, 32]) torch.Size([498])
random features: torch.Size([498, 16, 32, 32]) torch.Size([498])
random features: torch.Size([479, 16, 32, 32]) torch.Size([479])
random features: torch.Size([505, 16, 32, 32]) torch.Size([505])
random features: torch.Size([503, 16, 32, 32]) torch.Size([503])
random features: torch.Size([497, 16, 32, 32]) torch.Size([497])
random features: torch.Size([481, 16, 32, 32]) torch.Size([481])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([480, 16, 32, 32]) torch.Size([480])
all data: 4948
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.5259) feature loss: tensor(0.2073)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.5756) feature loss: tensor(0.2161)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.5017) feature loss: tensor(0.1907)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.5986) feature loss: tensor(0.2278)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.5774) feature loss: tensor(0.2138)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.4839) feature loss: tensor(0.1861)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.5007) feature loss: tensor(0.1937)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.5666) feature loss: tensor(0.2150)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.5382) feature loss: tensor(0.2076)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.5867) feature loss: tensor(0.2262)
Global Model Acc on global data: 0.7061 length of data: 10000
-------------Round number:  33  -------------
selected users: [56, 90, 95, 82, 60, 71, 6, 81, 2, 70]
random features: torch.Size([476, 16, 32, 32]) torch.Size([476])
random features: torch.Size([483, 16, 32, 32]) torch.Size([483])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([516, 16, 32, 32]) torch.Size([516])
random features: torch.Size([493, 16, 32, 32]) torch.Size([493])
random features: torch.Size([521, 16, 32, 32]) torch.Size([521])
random features: torch.Size([507, 16, 32, 32]) torch.Size([507])
random features: torch.Size([530, 16, 32, 32]) torch.Size([530])
random features: torch.Size([517, 16, 32, 32]) torch.Size([517])
random features: torch.Size([491, 16, 32, 32]) torch.Size([491])
all data: 5034
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.4546) feature loss: tensor(0.1997)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.5068) feature loss: tensor(0.2177)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.4181) feature loss: tensor(0.1892)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.4801) feature loss: tensor(0.2024)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.4666) feature loss: tensor(0.2035)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.4121) feature loss: tensor(0.1906)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.4972) feature loss: tensor(0.2220)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.4643) feature loss: tensor(0.2111)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.4974) feature loss: tensor(0.2048)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.4461) feature loss: tensor(0.1985)
Global Model Acc on global data: 0.7094 length of data: 10000
save a model
-------------Round number:  34  -------------
selected users: [14, 74, 15, 4, 32, 59, 91, 10, 50, 53]
random features: torch.Size([496, 16, 32, 32]) torch.Size([496])
random features: torch.Size([501, 16, 32, 32]) torch.Size([501])
random features: torch.Size([532, 16, 32, 32]) torch.Size([532])
random features: torch.Size([510, 16, 32, 32]) torch.Size([510])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([514, 16, 32, 32]) torch.Size([514])
random features: torch.Size([494, 16, 32, 32]) torch.Size([494])
random features: torch.Size([488, 16, 32, 32]) torch.Size([488])
random features: torch.Size([467, 16, 32, 32]) torch.Size([467])
random features: torch.Size([530, 16, 32, 32]) torch.Size([530])
all data: 5032
Local adapation with distilling: 0.000388
training loss: tensor(0.5152) feature loss: tensor(0.2115)
Local adapation with distilling: 0.000388
training loss: tensor(0.5361) feature loss: tensor(0.1967)
Local adapation with distilling: 0.000388
training loss: tensor(0.5901) feature loss: tensor(0.2294)
Local adapation with distilling: 0.000388
training loss: tensor(0.5729) feature loss: tensor(0.2055)
Local adapation with distilling: 0.000388
training loss: tensor(0.6841) feature loss: tensor(0.2209)
Local adapation with distilling: 0.000388
training loss: tensor(0.8236) feature loss: tensor(0.2231)
Local adapation with distilling: 0.000388
training loss: tensor(0.5355) feature loss: tensor(0.1965)
Local adapation with distilling: 0.000388
training loss: tensor(0.5697) feature loss: tensor(0.2088)
Local adapation with distilling: 0.000388
training loss: tensor(0.5987) feature loss: tensor(0.2156)
Local adapation with distilling: 0.000388
training loss: tensor(0.5452) feature loss: tensor(0.2140)
Global Model Acc on global data: 0.7067 length of data: 10000
-------------Round number:  35  -------------
selected users: [40, 71, 98, 27, 70, 31, 10, 24, 51, 35]
random features: torch.Size([493, 16, 32, 32]) torch.Size([493])
random features: torch.Size([521, 16, 32, 32]) torch.Size([521])
random features: torch.Size([519, 16, 32, 32]) torch.Size([519])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([491, 16, 32, 32]) torch.Size([491])
random features: torch.Size([523, 16, 32, 32]) torch.Size([523])
random features: torch.Size([488, 16, 32, 32]) torch.Size([488])
random features: torch.Size([466, 16, 32, 32]) torch.Size([466])
random features: torch.Size([494, 16, 32, 32]) torch.Size([494])
random features: torch.Size([504, 16, 32, 32]) torch.Size([504])
all data: 4999
Local adapation with distilling: 0.00037
training loss: tensor(0.4792) feature loss: tensor(0.1871)
Local adapation with distilling: 0.00037
training loss: tensor(0.4256) feature loss: tensor(0.1690)
Local adapation with distilling: 0.00037
training loss: tensor(0.5330) feature loss: tensor(0.1922)
Local adapation with distilling: 0.00037
training loss: tensor(0.4585) feature loss: tensor(0.1946)
Local adapation with distilling: 0.00037
training loss: tensor(0.4407) feature loss: tensor(0.1816)
Local adapation with distilling: 0.00037
training loss: tensor(0.4263) feature loss: tensor(0.1872)
Local adapation with distilling: 0.00037
training loss: tensor(0.4411) feature loss: tensor(0.1731)
Local adapation with distilling: 0.00037
training loss: tensor(0.5443) feature loss: tensor(0.2168)
Local adapation with distilling: 0.00037
training loss: tensor(0.5115) feature loss: tensor(0.2058)
Local adapation with distilling: 0.00037
training loss: tensor(0.5667) feature loss: tensor(0.2217)
Global Model Acc on global data: 0.708 length of data: 10000
-------------Round number:  36  -------------
selected users: [59, 42, 2, 27, 28, 75, 58, 68, 52, 74]
random features: torch.Size([514, 16, 32, 32]) torch.Size([514])
random features: torch.Size([496, 16, 32, 32]) torch.Size([496])
random features: torch.Size([517, 16, 32, 32]) torch.Size([517])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([498, 16, 32, 32]) torch.Size([498])
random features: torch.Size([506, 16, 32, 32]) torch.Size([506])
random features: torch.Size([498, 16, 32, 32]) torch.Size([498])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([534, 16, 32, 32]) torch.Size([534])
random features: torch.Size([501, 16, 32, 32]) torch.Size([501])
all data: 5064
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.6751) feature loss: tensor(0.1814)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.4502) feature loss: tensor(0.1709)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.4126) feature loss: tensor(0.1733)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.3918) feature loss: tensor(0.1670)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.4837) feature loss: tensor(0.2016)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.5489) feature loss: tensor(0.2085)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.5262) feature loss: tensor(0.2181)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.4446) feature loss: tensor(0.1832)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.4172) feature loss: tensor(0.1816)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.3902) feature loss: tensor(0.1619)
Global Model Acc on global data: 0.7088 length of data: 10000
-------------Round number:  37  -------------
selected users: [61, 49, 86, 78, 5, 91, 81, 82, 89, 18]
random features: torch.Size([529, 16, 32, 32]) torch.Size([529])
random features: torch.Size([507, 16, 32, 32]) torch.Size([507])
random features: torch.Size([508, 16, 32, 32]) torch.Size([508])
random features: torch.Size([519, 16, 32, 32]) torch.Size([519])
random features: torch.Size([520, 16, 32, 32]) torch.Size([520])
random features: torch.Size([494, 16, 32, 32]) torch.Size([494])
random features: torch.Size([530, 16, 32, 32]) torch.Size([530])
random features: torch.Size([516, 16, 32, 32]) torch.Size([516])
random features: torch.Size([527, 16, 32, 32]) torch.Size([527])
random features: torch.Size([489, 16, 32, 32]) torch.Size([489])
all data: 5139
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.4638) feature loss: tensor(0.1976)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.4479) feature loss: tensor(0.1680)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.4240) feature loss: tensor(0.1747)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.4806) feature loss: tensor(0.1957)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.4706) feature loss: tensor(0.1867)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.4111) feature loss: tensor(0.1701)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.4159) feature loss: tensor(0.1849)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.4425) feature loss: tensor(0.1731)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.3725) feature loss: tensor(0.1650)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.4436) feature loss: tensor(0.1810)
Global Model Acc on global data: 0.7049 length of data: 10000
-------------Round number:  38  -------------
selected users: [40, 73, 49, 45, 64, 16, 69, 17, 72, 66]
random features: torch.Size([493, 16, 32, 32]) torch.Size([493])
random features: torch.Size([517, 16, 32, 32]) torch.Size([517])
random features: torch.Size([507, 16, 32, 32]) torch.Size([507])
random features: torch.Size([487, 16, 32, 32]) torch.Size([487])
random features: torch.Size([493, 16, 32, 32]) torch.Size([493])
random features: torch.Size([485, 16, 32, 32]) torch.Size([485])
random features: torch.Size([495, 16, 32, 32]) torch.Size([495])
random features: torch.Size([497, 16, 32, 32]) torch.Size([497])
random features: torch.Size([515, 16, 32, 32]) torch.Size([515])
random features: torch.Size([476, 16, 32, 32]) torch.Size([476])
all data: 4965
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.5279) feature loss: tensor(0.1915)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.6096) feature loss: tensor(0.1962)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.5215) feature loss: tensor(0.1759)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.6109) feature loss: tensor(0.2193)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.6451) feature loss: tensor(0.2226)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.5777) feature loss: tensor(0.1974)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.5706) feature loss: tensor(0.2070)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.5302) feature loss: tensor(0.1917)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.7653) feature loss: tensor(0.2077)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.6420) feature loss: tensor(0.2075)
Global Model Acc on global data: 0.713 length of data: 10000
save a model
-------------Round number:  39  -------------
selected users: [22, 53, 84, 57, 87, 58, 29, 21, 85, 79]
random features: torch.Size([507, 16, 32, 32]) torch.Size([507])
random features: torch.Size([530, 16, 32, 32]) torch.Size([530])
random features: torch.Size([465, 16, 32, 32]) torch.Size([465])
random features: torch.Size([503, 16, 32, 32]) torch.Size([503])
random features: torch.Size([486, 16, 32, 32]) torch.Size([486])
random features: torch.Size([498, 16, 32, 32]) torch.Size([498])
random features: torch.Size([515, 16, 32, 32]) torch.Size([515])
random features: torch.Size([505, 16, 32, 32]) torch.Size([505])
random features: torch.Size([498, 16, 32, 32]) torch.Size([498])
random features: torch.Size([485, 16, 32, 32]) torch.Size([485])
all data: 4992
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.4571) feature loss: tensor(0.1691)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.4417) feature loss: tensor(0.1798)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.5210) feature loss: tensor(0.1804)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.4516) feature loss: tensor(0.1695)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.4916) feature loss: tensor(0.1779)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.4713) feature loss: tensor(0.1808)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.6492) feature loss: tensor(0.1818)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.4949) feature loss: tensor(0.1719)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.4276) feature loss: tensor(0.1566)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.5367) feature loss: tensor(0.1854)
Global Model Acc on global data: 0.7133 length of data: 10000
save a model
-------------Round number:  40  -------------
selected users: [79, 75, 63, 15, 38, 11, 40, 45, 39, 62]
random features: torch.Size([485, 16, 32, 32]) torch.Size([485])
random features: torch.Size([506, 16, 32, 32]) torch.Size([506])
random features: torch.Size([497, 16, 32, 32]) torch.Size([497])
random features: torch.Size([532, 16, 32, 32]) torch.Size([532])
random features: torch.Size([507, 16, 32, 32]) torch.Size([507])
random features: torch.Size([519, 16, 32, 32]) torch.Size([519])
random features: torch.Size([493, 16, 32, 32]) torch.Size([493])
random features: torch.Size([487, 16, 32, 32]) torch.Size([487])
random features: torch.Size([498, 16, 32, 32]) torch.Size([498])
random features: torch.Size([503, 16, 32, 32]) torch.Size([503])
all data: 5027
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.4448) feature loss: tensor(0.1497)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.4758) feature loss: tensor(0.1601)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.4686) feature loss: tensor(0.1629)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.4335) feature loss: tensor(0.1722)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.4430) feature loss: tensor(0.1577)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.4821) feature loss: tensor(0.1771)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.4213) feature loss: tensor(0.1521)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.4525) feature loss: tensor(0.1644)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.4502) feature loss: tensor(0.1623)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.4743) feature loss: tensor(0.1685)
Global Model Acc on global data: 0.7136 length of data: 10000
save a model
-------------Round number:  41  -------------
selected users: [42, 94, 37, 6, 79, 32, 24, 0, 33, 93]
random features: torch.Size([496, 16, 32, 32]) torch.Size([496])
random features: torch.Size([486, 16, 32, 32]) torch.Size([486])
random features: torch.Size([521, 16, 32, 32]) torch.Size([521])
random features: torch.Size([507, 16, 32, 32]) torch.Size([507])
random features: torch.Size([485, 16, 32, 32]) torch.Size([485])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([466, 16, 32, 32]) torch.Size([466])
random features: torch.Size([520, 16, 32, 32]) torch.Size([520])
random features: torch.Size([503, 16, 32, 32]) torch.Size([503])
random features: torch.Size([493, 16, 32, 32]) torch.Size([493])
all data: 4977
Local adapation with distilling: 0.000262
training loss: tensor(0.3434) feature loss: tensor(0.1393)
Local adapation with distilling: 0.000262
training loss: tensor(0.4339) feature loss: tensor(0.1638)
Local adapation with distilling: 0.000262
training loss: tensor(0.3323) feature loss: tensor(0.1394)
Local adapation with distilling: 0.000262
training loss: tensor(0.3675) feature loss: tensor(0.1508)
Local adapation with distilling: 0.000262
training loss: tensor(0.3415) feature loss: tensor(0.1363)
Local adapation with distilling: 0.000262
training loss: tensor(0.4232) feature loss: tensor(0.1530)
Local adapation with distilling: 0.000262
training loss: tensor(0.4148) feature loss: tensor(0.1438)
Local adapation with distilling: 0.000262
training loss: tensor(0.3903) feature loss: tensor(0.1470)
Local adapation with distilling: 0.000262
training loss: tensor(0.3355) feature loss: tensor(0.1370)
Local adapation with distilling: 0.000262
training loss: tensor(0.3904) feature loss: tensor(0.1557)
Global Model Acc on global data: 0.7186 length of data: 10000
save a model
-------------Round number:  42  -------------
selected users: [83, 53, 70, 45, 44, 39, 22, 80, 10, 0]
random features: torch.Size([576, 16, 32, 32]) torch.Size([576])
random features: torch.Size([530, 16, 32, 32]) torch.Size([530])
random features: torch.Size([491, 16, 32, 32]) torch.Size([491])
random features: torch.Size([487, 16, 32, 32]) torch.Size([487])
random features: torch.Size([478, 16, 32, 32]) torch.Size([478])
random features: torch.Size([498, 16, 32, 32]) torch.Size([498])
random features: torch.Size([507, 16, 32, 32]) torch.Size([507])
random features: torch.Size([497, 16, 32, 32]) torch.Size([497])
random features: torch.Size([488, 16, 32, 32]) torch.Size([488])
random features: torch.Size([520, 16, 32, 32]) torch.Size([520])
all data: 5072
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.3120) feature loss: tensor(0.1577)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.2609) feature loss: tensor(0.1396)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.2643) feature loss: tensor(0.1324)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.2882) feature loss: tensor(0.1332)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.2922) feature loss: tensor(0.1365)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.2705) feature loss: tensor(0.1360)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.2571) feature loss: tensor(0.1300)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.2893) feature loss: tensor(0.1363)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.2752) feature loss: tensor(0.1349)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.2672) feature loss: tensor(0.1291)
Global Model Acc on global data: 0.7121 length of data: 10000
-------------Round number:  43  -------------
selected users: [20, 2, 15, 22, 57, 91, 69, 55, 11, 79]
random features: torch.Size([489, 16, 32, 32]) torch.Size([489])
random features: torch.Size([517, 16, 32, 32]) torch.Size([517])
random features: torch.Size([532, 16, 32, 32]) torch.Size([532])
random features: torch.Size([507, 16, 32, 32]) torch.Size([507])
random features: torch.Size([503, 16, 32, 32]) torch.Size([503])
random features: torch.Size([494, 16, 32, 32]) torch.Size([494])
random features: torch.Size([495, 16, 32, 32]) torch.Size([495])
random features: torch.Size([505, 16, 32, 32]) torch.Size([505])
random features: torch.Size([519, 16, 32, 32]) torch.Size([519])
random features: torch.Size([485, 16, 32, 32]) torch.Size([485])
all data: 5046
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.2804) feature loss: tensor(0.1331)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.3368) feature loss: tensor(0.1301)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.2429) feature loss: tensor(0.1280)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.2235) feature loss: tensor(0.1251)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.2440) feature loss: tensor(0.1232)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.2399) feature loss: tensor(0.1208)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.2718) feature loss: tensor(0.1336)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.2954) feature loss: tensor(0.1310)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.2994) feature loss: tensor(0.1319)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.2439) feature loss: tensor(0.1196)
Global Model Acc on global data: 0.7149 length of data: 10000
-------------Round number:  44  -------------
selected users: [42, 54, 27, 93, 39, 65, 7, 26, 24, 60]
random features: torch.Size([496, 16, 32, 32]) torch.Size([496])
random features: torch.Size([465, 16, 32, 32]) torch.Size([465])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([493, 16, 32, 32]) torch.Size([493])
random features: torch.Size([498, 16, 32, 32]) torch.Size([498])
random features: torch.Size([492, 16, 32, 32]) torch.Size([492])
random features: torch.Size([522, 16, 32, 32]) torch.Size([522])
random features: torch.Size([513, 16, 32, 32]) torch.Size([513])
random features: torch.Size([466, 16, 32, 32]) torch.Size([466])
random features: torch.Size([493, 16, 32, 32]) torch.Size([493])
all data: 4938
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.3350) feature loss: tensor(0.1328)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.4654) feature loss: tensor(0.1702)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.3300) feature loss: tensor(0.1303)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.3472) feature loss: tensor(0.1344)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.3285) feature loss: tensor(0.1320)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.3999) feature loss: tensor(0.1581)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.3766) feature loss: tensor(0.1562)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.6765) feature loss: tensor(0.1561)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.3630) feature loss: tensor(0.1336)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.3713) feature loss: tensor(0.1469)
Global Model Acc on global data: 0.712 length of data: 10000
-------------Round number:  45  -------------
selected users: [0, 1, 62, 76, 37, 99, 78, 38, 2, 84]
random features: torch.Size([520, 16, 32, 32]) torch.Size([520])
random features: torch.Size([509, 16, 32, 32]) torch.Size([509])
random features: torch.Size([503, 16, 32, 32]) torch.Size([503])
random features: torch.Size([480, 16, 32, 32]) torch.Size([480])
random features: torch.Size([521, 16, 32, 32]) torch.Size([521])
random features: torch.Size([489, 16, 32, 32]) torch.Size([489])
random features: torch.Size([519, 16, 32, 32]) torch.Size([519])
random features: torch.Size([507, 16, 32, 32]) torch.Size([507])
random features: torch.Size([517, 16, 32, 32]) torch.Size([517])
random features: torch.Size([465, 16, 32, 32]) torch.Size([465])
all data: 5030
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.3497) feature loss: tensor(0.1180)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.3963) feature loss: tensor(0.1471)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.3242) feature loss: tensor(0.1222)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.3699) feature loss: tensor(0.1377)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.3312) feature loss: tensor(0.1178)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.4152) feature loss: tensor(0.1509)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.3987) feature loss: tensor(0.1459)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.3336) feature loss: tensor(0.1286)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.3229) feature loss: tensor(0.1211)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.3720) feature loss: tensor(0.1312)
Global Model Acc on global data: 0.7169 length of data: 10000
-------------Round number:  46  -------------
selected users: [71, 33, 37, 10, 44, 34, 24, 98, 73, 95]
random features: torch.Size([521, 16, 32, 32]) torch.Size([521])
random features: torch.Size([503, 16, 32, 32]) torch.Size([503])
random features: torch.Size([521, 16, 32, 32]) torch.Size([521])
random features: torch.Size([488, 16, 32, 32]) torch.Size([488])
random features: torch.Size([478, 16, 32, 32]) torch.Size([478])
random features: torch.Size([466, 16, 32, 32]) torch.Size([466])
random features: torch.Size([466, 16, 32, 32]) torch.Size([466])
random features: torch.Size([519, 16, 32, 32]) torch.Size([519])
random features: torch.Size([517, 16, 32, 32]) torch.Size([517])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
all data: 4979
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.2105) feature loss: tensor(0.0992)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.1926) feature loss: tensor(0.0953)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.1903) feature loss: tensor(0.0970)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.2100) feature loss: tensor(0.0937)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.1974) feature loss: tensor(0.0936)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.2679) feature loss: tensor(0.1084)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.2069) feature loss: tensor(0.0938)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.3151) feature loss: tensor(0.1154)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.2933) feature loss: tensor(0.1160)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.2253) feature loss: tensor(0.1037)
Global Model Acc on global data: 0.715 length of data: 10000
-------------Round number:  47  -------------
selected users: [17, 90, 94, 86, 63, 5, 38, 14, 40, 47]
random features: torch.Size([497, 16, 32, 32]) torch.Size([497])
random features: torch.Size([483, 16, 32, 32]) torch.Size([483])
random features: torch.Size([486, 16, 32, 32]) torch.Size([486])
random features: torch.Size([508, 16, 32, 32]) torch.Size([508])
random features: torch.Size([497, 16, 32, 32]) torch.Size([497])
random features: torch.Size([520, 16, 32, 32]) torch.Size([520])
random features: torch.Size([507, 16, 32, 32]) torch.Size([507])
random features: torch.Size([496, 16, 32, 32]) torch.Size([496])
random features: torch.Size([493, 16, 32, 32]) torch.Size([493])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
all data: 4987
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.2808) feature loss: tensor(0.1127)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.3550) feature loss: tensor(0.1442)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.3239) feature loss: tensor(0.1338)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.2870) feature loss: tensor(0.1267)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.2999) feature loss: tensor(0.1304)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.3298) feature loss: tensor(0.1343)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.2696) feature loss: tensor(0.1189)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.2963) feature loss: tensor(0.1181)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.2755) feature loss: tensor(0.1161)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.3305) feature loss: tensor(0.1416)
Global Model Acc on global data: 0.7142 length of data: 10000
-------------Round number:  48  -------------
selected users: [93, 5, 71, 9, 11, 79, 69, 8, 59, 63]
random features: torch.Size([493, 16, 32, 32]) torch.Size([493])
random features: torch.Size([520, 16, 32, 32]) torch.Size([520])
random features: torch.Size([521, 16, 32, 32]) torch.Size([521])
random features: torch.Size([498, 16, 32, 32]) torch.Size([498])
random features: torch.Size([519, 16, 32, 32]) torch.Size([519])
random features: torch.Size([485, 16, 32, 32]) torch.Size([485])
random features: torch.Size([495, 16, 32, 32]) torch.Size([495])
random features: torch.Size([507, 16, 32, 32]) torch.Size([507])
random features: torch.Size([514, 16, 32, 32]) torch.Size([514])
random features: torch.Size([497, 16, 32, 32]) torch.Size([497])
all data: 5049
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.2089) feature loss: tensor(0.0866)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.2157) feature loss: tensor(0.0895)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.1973) feature loss: tensor(0.0813)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.2891) feature loss: tensor(0.1163)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.2249) feature loss: tensor(0.0918)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.1932) feature loss: tensor(0.0900)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.2212) feature loss: tensor(0.0971)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.2000) feature loss: tensor(0.0840)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.5328) feature loss: tensor(0.0952)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.1995) feature loss: tensor(0.0832)
Global Model Acc on global data: 0.7163 length of data: 10000
-------------Round number:  49  -------------
selected users: [76, 25, 28, 75, 81, 47, 41, 22, 29, 1]
random features: torch.Size([480, 16, 32, 32]) torch.Size([480])
random features: torch.Size([497, 16, 32, 32]) torch.Size([497])
random features: torch.Size([498, 16, 32, 32]) torch.Size([498])
random features: torch.Size([506, 16, 32, 32]) torch.Size([506])
random features: torch.Size([530, 16, 32, 32]) torch.Size([530])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([501, 16, 32, 32]) torch.Size([501])
random features: torch.Size([507, 16, 32, 32]) torch.Size([507])
random features: torch.Size([515, 16, 32, 32]) torch.Size([515])
random features: torch.Size([509, 16, 32, 32]) torch.Size([509])
all data: 5043
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.2993) feature loss: tensor(0.1042)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.3211) feature loss: tensor(0.1109)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.3293) feature loss: tensor(0.1019)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.3425) feature loss: tensor(0.1039)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.2819) feature loss: tensor(0.1125)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.2906) feature loss: tensor(0.1023)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.3128) feature loss: tensor(0.1196)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.2586) feature loss: tensor(0.0975)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.4319) feature loss: tensor(0.1069)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.3128) feature loss: tensor(0.1162)
Global Model Acc on global data: 0.719 length of data: 10000
save a model
-------------Round number:  50  -------------
selected users: [80, 79, 25, 15, 39, 40, 53, 17, 57, 50]
random features: torch.Size([497, 16, 32, 32]) torch.Size([497])
random features: torch.Size([485, 16, 32, 32]) torch.Size([485])
random features: torch.Size([497, 16, 32, 32]) torch.Size([497])
random features: torch.Size([532, 16, 32, 32]) torch.Size([532])
random features: torch.Size([498, 16, 32, 32]) torch.Size([498])
random features: torch.Size([493, 16, 32, 32]) torch.Size([493])
random features: torch.Size([530, 16, 32, 32]) torch.Size([530])
random features: torch.Size([497, 16, 32, 32]) torch.Size([497])
random features: torch.Size([503, 16, 32, 32]) torch.Size([503])
random features: torch.Size([467, 16, 32, 32]) torch.Size([467])
all data: 4999
Local adapation with distilling: 0.0001
training loss: tensor(0.1462) feature loss: tensor(0.0763)
Local adapation with distilling: 0.0001
training loss: tensor(0.1319) feature loss: tensor(0.0734)
Local adapation with distilling: 0.0001
training loss: tensor(0.1501) feature loss: tensor(0.0716)
Local adapation with distilling: 0.0001
training loss: tensor(0.1427) feature loss: tensor(0.0707)
Local adapation with distilling: 0.0001
training loss: tensor(0.1365) feature loss: tensor(0.0762)
Local adapation with distilling: 0.0001
training loss: tensor(0.1202) feature loss: tensor(0.0627)
Local adapation with distilling: 0.0001
training loss: tensor(0.1463) feature loss: tensor(0.0762)
Local adapation with distilling: 0.0001
training loss: tensor(0.1366) feature loss: tensor(0.0700)
Local adapation with distilling: 0.0001
training loss: tensor(0.1536) feature loss: tensor(0.0757)
Local adapation with distilling: 0.0001
training loss: tensor(0.1913) feature loss: tensor(0.0887)
Global Model Acc on global data: 0.7157 length of data: 10000
-------------Round number:  51  -------------
selected users: [71, 43, 11, 83, 78, 19, 80, 4, 79, 75]
random features: torch.Size([521, 16, 32, 32]) torch.Size([521])
random features: torch.Size([508, 16, 32, 32]) torch.Size([508])
random features: torch.Size([519, 16, 32, 32]) torch.Size([519])
random features: torch.Size([576, 16, 32, 32]) torch.Size([576])
random features: torch.Size([519, 16, 32, 32]) torch.Size([519])
random features: torch.Size([499, 16, 32, 32]) torch.Size([499])
random features: torch.Size([497, 16, 32, 32]) torch.Size([497])
random features: torch.Size([510, 16, 32, 32]) torch.Size([510])
random features: torch.Size([485, 16, 32, 32]) torch.Size([485])
random features: torch.Size([506, 16, 32, 32]) torch.Size([506])
all data: 5140
Local adapation with distilling: 0.0001
training loss: tensor(0.2089) feature loss: tensor(0.0852)
Local adapation with distilling: 0.0001
training loss: tensor(0.2724) feature loss: tensor(0.0997)
Local adapation with distilling: 0.0001
training loss: tensor(0.2352) feature loss: tensor(0.0837)
Local adapation with distilling: 0.0001
training loss: tensor(0.2664) feature loss: tensor(0.1120)
Local adapation with distilling: 0.0001
training loss: tensor(0.2972) feature loss: tensor(0.0987)
Local adapation with distilling: 0.0001
training loss: tensor(0.3431) feature loss: tensor(0.1161)
Local adapation with distilling: 0.0001
training loss: tensor(0.2211) feature loss: tensor(0.0788)
Local adapation with distilling: 0.0001
training loss: tensor(0.2972) feature loss: tensor(0.0932)
Local adapation with distilling: 0.0001
training loss: tensor(0.2071) feature loss: tensor(0.0776)
Local adapation with distilling: 0.0001
training loss: tensor(0.2526) feature loss: tensor(0.0842)
Global Model Acc on global data: 0.7134 length of data: 10000
-------------Round number:  52  -------------
selected users: [82, 8, 44, 19, 2, 73, 37, 89, 67, 18]
random features: torch.Size([516, 16, 32, 32]) torch.Size([516])
random features: torch.Size([507, 16, 32, 32]) torch.Size([507])
random features: torch.Size([478, 16, 32, 32]) torch.Size([478])
random features: torch.Size([499, 16, 32, 32]) torch.Size([499])
random features: torch.Size([517, 16, 32, 32]) torch.Size([517])
random features: torch.Size([517, 16, 32, 32]) torch.Size([517])
random features: torch.Size([521, 16, 32, 32]) torch.Size([521])
random features: torch.Size([527, 16, 32, 32]) torch.Size([527])
random features: torch.Size([481, 16, 32, 32]) torch.Size([481])
random features: torch.Size([489, 16, 32, 32]) torch.Size([489])
all data: 5052
Local adapation with distilling: 0.0001
training loss: tensor(0.2287) feature loss: tensor(0.0691)
Local adapation with distilling: 0.0001
training loss: tensor(0.1527) feature loss: tensor(0.0694)
Local adapation with distilling: 0.0001
training loss: tensor(0.1532) feature loss: tensor(0.0732)
Local adapation with distilling: 0.0001
training loss: tensor(0.1901) feature loss: tensor(0.0773)
Local adapation with distilling: 0.0001
training loss: tensor(0.1862) feature loss: tensor(0.0746)
Local adapation with distilling: 0.0001
training loss: tensor(0.1866) feature loss: tensor(0.0796)
Local adapation with distilling: 0.0001
training loss: tensor(0.1399) feature loss: tensor(0.0674)
Local adapation with distilling: 0.0001
training loss: tensor(0.1533) feature loss: tensor(0.0718)
Local adapation with distilling: 0.0001
training loss: tensor(0.1798) feature loss: tensor(0.0795)
Local adapation with distilling: 0.0001
training loss: tensor(0.1893) feature loss: tensor(0.0795)
Global Model Acc on global data: 0.7118 length of data: 10000
-------------Round number:  53  -------------
selected users: [19, 78, 64, 3, 71, 32, 68, 42, 55, 97]
random features: torch.Size([499, 16, 32, 32]) torch.Size([499])
random features: torch.Size([519, 16, 32, 32]) torch.Size([519])
random features: torch.Size([493, 16, 32, 32]) torch.Size([493])
random features: torch.Size([492, 16, 32, 32]) torch.Size([492])
random features: torch.Size([521, 16, 32, 32]) torch.Size([521])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([496, 16, 32, 32]) torch.Size([496])
random features: torch.Size([505, 16, 32, 32]) torch.Size([505])
random features: torch.Size([479, 16, 32, 32]) torch.Size([479])
all data: 5004
Local adapation with distilling: 0.0001
training loss: tensor(0.3147) feature loss: tensor(0.0989)
Local adapation with distilling: 0.0001
training loss: tensor(0.3208) feature loss: tensor(0.0945)
Local adapation with distilling: 0.0001
training loss: tensor(0.4423) feature loss: tensor(0.1323)
Local adapation with distilling: 0.0001
training loss: tensor(0.3435) feature loss: tensor(0.1044)
Local adapation with distilling: 0.0001
training loss: tensor(0.2769) feature loss: tensor(0.0898)
Local adapation with distilling: 0.0001
training loss: tensor(0.3666) feature loss: tensor(0.1139)
Local adapation with distilling: 0.0001
training loss: tensor(0.3442) feature loss: tensor(0.1102)
Local adapation with distilling: 0.0001
training loss: tensor(0.3115) feature loss: tensor(0.0982)
Local adapation with distilling: 0.0001
training loss: tensor(0.3576) feature loss: tensor(0.1031)
Local adapation with distilling: 0.0001
training loss: tensor(0.4125) feature loss: tensor(0.1276)
Global Model Acc on global data: 0.7146 length of data: 10000
-------------Round number:  54  -------------
selected users: [36, 70, 48, 94, 81, 46, 38, 29, 34, 22]
random features: torch.Size([487, 16, 32, 32]) torch.Size([487])
random features: torch.Size([491, 16, 32, 32]) torch.Size([491])
random features: torch.Size([507, 16, 32, 32]) torch.Size([507])
random features: torch.Size([486, 16, 32, 32]) torch.Size([486])
random features: torch.Size([530, 16, 32, 32]) torch.Size([530])
random features: torch.Size([489, 16, 32, 32]) torch.Size([489])
random features: torch.Size([507, 16, 32, 32]) torch.Size([507])
random features: torch.Size([515, 16, 32, 32]) torch.Size([515])
random features: torch.Size([466, 16, 32, 32]) torch.Size([466])
random features: torch.Size([507, 16, 32, 32]) torch.Size([507])
all data: 4985
Local adapation with distilling: 0.0001
training loss: tensor(0.2721) feature loss: tensor(0.1006)
Local adapation with distilling: 0.0001
training loss: tensor(0.1940) feature loss: tensor(0.0706)
Local adapation with distilling: 0.0001
training loss: tensor(0.2441) feature loss: tensor(0.0900)
Local adapation with distilling: 0.0001
training loss: tensor(0.2246) feature loss: tensor(0.0820)
Local adapation with distilling: 0.0001
training loss: tensor(0.2127) feature loss: tensor(0.0787)
Local adapation with distilling: 0.0001
training loss: tensor(0.2745) feature loss: tensor(0.1062)
Local adapation with distilling: 0.0001
training loss: tensor(0.1913) feature loss: tensor(0.0711)
Local adapation with distilling: 0.0001
training loss: tensor(0.3015) feature loss: tensor(0.0829)
Local adapation with distilling: 0.0001
training loss: tensor(0.2413) feature loss: tensor(0.0871)
Local adapation with distilling: 0.0001
training loss: tensor(0.1818) feature loss: tensor(0.0704)
Global Model Acc on global data: 0.7134 length of data: 10000
-------------Round number:  55  -------------
selected users: [28, 92, 98, 95, 84, 34, 38, 76, 17, 78]
random features: torch.Size([498, 16, 32, 32]) torch.Size([498])
random features: torch.Size([519, 16, 32, 32]) torch.Size([519])
random features: torch.Size([519, 16, 32, 32]) torch.Size([519])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([465, 16, 32, 32]) torch.Size([465])
random features: torch.Size([466, 16, 32, 32]) torch.Size([466])
random features: torch.Size([507, 16, 32, 32]) torch.Size([507])
random features: torch.Size([480, 16, 32, 32]) torch.Size([480])
random features: torch.Size([497, 16, 32, 32]) torch.Size([497])
random features: torch.Size([519, 16, 32, 32]) torch.Size([519])
all data: 4970
Local adapation with distilling: 0.0001
training loss: tensor(0.2334) feature loss: tensor(0.0951)
Local adapation with distilling: 0.0001
training loss: tensor(0.2895) feature loss: tensor(0.1188)
Local adapation with distilling: 0.0001
training loss: tensor(0.2452) feature loss: tensor(0.0950)
Local adapation with distilling: 0.0001
training loss: tensor(0.1952) feature loss: tensor(0.0931)
Local adapation with distilling: 0.0001
training loss: tensor(0.2167) feature loss: tensor(0.0821)
Local adapation with distilling: 0.0001
training loss: tensor(0.2020) feature loss: tensor(0.0917)
Local adapation with distilling: 0.0001
training loss: tensor(0.1711) feature loss: tensor(0.0854)
Local adapation with distilling: 0.0001
training loss: tensor(0.2106) feature loss: tensor(0.0882)
Local adapation with distilling: 0.0001
training loss: tensor(0.1699) feature loss: tensor(0.0862)
Local adapation with distilling: 0.0001
training loss: tensor(0.2185) feature loss: tensor(0.0892)
Global Model Acc on global data: 0.709 length of data: 10000
-------------Round number:  56  -------------
selected users: [92, 79, 23, 68, 52, 38, 73, 9, 59, 27]
random features: torch.Size([519, 16, 32, 32]) torch.Size([519])
random features: torch.Size([485, 16, 32, 32]) torch.Size([485])
random features: torch.Size([488, 16, 32, 32]) torch.Size([488])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([534, 16, 32, 32]) torch.Size([534])
random features: torch.Size([507, 16, 32, 32]) torch.Size([507])
random features: torch.Size([517, 16, 32, 32]) torch.Size([517])
random features: torch.Size([498, 16, 32, 32]) torch.Size([498])
random features: torch.Size([514, 16, 32, 32]) torch.Size([514])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
all data: 5062
Local adapation with distilling: 0.0001
training loss: tensor(0.2693) feature loss: tensor(0.0932)
Local adapation with distilling: 0.0001
training loss: tensor(0.1856) feature loss: tensor(0.0837)
Local adapation with distilling: 0.0001
training loss: tensor(0.3122) feature loss: tensor(0.1322)
Local adapation with distilling: 0.0001
training loss: tensor(0.2185) feature loss: tensor(0.0867)
Local adapation with distilling: 0.0001
training loss: tensor(0.2505) feature loss: tensor(0.1034)
Local adapation with distilling: 0.0001
training loss: tensor(0.1988) feature loss: tensor(0.0935)
Local adapation with distilling: 0.0001
training loss: tensor(0.2493) feature loss: tensor(0.0943)
Local adapation with distilling: 0.0001
training loss: tensor(0.2409) feature loss: tensor(0.1103)
Local adapation with distilling: 0.0001
training loss: tensor(0.4813) feature loss: tensor(0.0910)
Local adapation with distilling: 0.0001
training loss: tensor(0.2020) feature loss: tensor(0.0836)
Global Model Acc on global data: 0.7065 length of data: 10000
-------------Round number:  57  -------------
selected users: [52, 17, 41, 3, 8, 98, 59, 20, 67, 7]
random features: torch.Size([534, 16, 32, 32]) torch.Size([534])
random features: torch.Size([497, 16, 32, 32]) torch.Size([497])
random features: torch.Size([501, 16, 32, 32]) torch.Size([501])
random features: torch.Size([492, 16, 32, 32]) torch.Size([492])
random features: torch.Size([507, 16, 32, 32]) torch.Size([507])
random features: torch.Size([519, 16, 32, 32]) torch.Size([519])
random features: torch.Size([514, 16, 32, 32]) torch.Size([514])
random features: torch.Size([489, 16, 32, 32]) torch.Size([489])
random features: torch.Size([481, 16, 32, 32]) torch.Size([481])
random features: torch.Size([522, 16, 32, 32]) torch.Size([522])
all data: 5056
Local adapation with distilling: 0.0001
training loss: tensor(0.1480) feature loss: tensor(0.0817)
Local adapation with distilling: 0.0001
training loss: tensor(0.1369) feature loss: tensor(0.0712)
Local adapation with distilling: 0.0001
training loss: tensor(0.1733) feature loss: tensor(0.0885)
Local adapation with distilling: 0.0001
training loss: tensor(0.1655) feature loss: tensor(0.0772)
Local adapation with distilling: 0.0001
training loss: tensor(0.1383) feature loss: tensor(0.0747)
Local adapation with distilling: 0.0001
training loss: tensor(0.1863) feature loss: tensor(0.0817)
Local adapation with distilling: 0.0001
training loss: tensor(0.2675) feature loss: tensor(0.0771)
Local adapation with distilling: 0.0001
training loss: tensor(0.1818) feature loss: tensor(0.0905)
Local adapation with distilling: 0.0001
training loss: tensor(0.1647) feature loss: tensor(0.0770)
Local adapation with distilling: 0.0001
training loss: tensor(0.2177) feature loss: tensor(0.0909)
Global Model Acc on global data: 0.7119 length of data: 10000
-------------Round number:  58  -------------
selected users: [43, 58, 8, 31, 70, 45, 69, 95, 50, 4]
random features: torch.Size([508, 16, 32, 32]) torch.Size([508])
random features: torch.Size([498, 16, 32, 32]) torch.Size([498])
random features: torch.Size([507, 16, 32, 32]) torch.Size([507])
random features: torch.Size([523, 16, 32, 32]) torch.Size([523])
random features: torch.Size([491, 16, 32, 32]) torch.Size([491])
random features: torch.Size([487, 16, 32, 32]) torch.Size([487])
random features: torch.Size([495, 16, 32, 32]) torch.Size([495])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([467, 16, 32, 32]) torch.Size([467])
random features: torch.Size([510, 16, 32, 32]) torch.Size([510])
all data: 4986
Local adapation with distilling: 0.0001
training loss: tensor(0.1837) feature loss: tensor(0.0852)
Local adapation with distilling: 0.0001
training loss: tensor(0.2143) feature loss: tensor(0.0921)
Local adapation with distilling: 0.0001
training loss: tensor(0.1516) feature loss: tensor(0.0741)
Local adapation with distilling: 0.0001
training loss: tensor(0.1765) feature loss: tensor(0.0883)
Local adapation with distilling: 0.0001
training loss: tensor(0.1475) feature loss: tensor(0.0730)
Local adapation with distilling: 0.0001
training loss: tensor(0.1890) feature loss: tensor(0.0896)
Local adapation with distilling: 0.0001
training loss: tensor(0.1751) feature loss: tensor(0.0782)
Local adapation with distilling: 0.0001
training loss: tensor(0.1561) feature loss: tensor(0.0755)
Local adapation with distilling: 0.0001
training loss: tensor(0.1913) feature loss: tensor(0.0763)
Local adapation with distilling: 0.0001
training loss: tensor(0.1830) feature loss: tensor(0.0818)
Global Model Acc on global data: 0.7095 length of data: 10000
-------------Round number:  59  -------------
selected users: [38, 46, 24, 87, 30, 85, 16, 96, 18, 99]
random features: torch.Size([507, 16, 32, 32]) torch.Size([507])
random features: torch.Size([489, 16, 32, 32]) torch.Size([489])
random features: torch.Size([466, 16, 32, 32]) torch.Size([466])
random features: torch.Size([486, 16, 32, 32]) torch.Size([486])
random features: torch.Size([487, 16, 32, 32]) torch.Size([487])
random features: torch.Size([498, 16, 32, 32]) torch.Size([498])
random features: torch.Size([485, 16, 32, 32]) torch.Size([485])
random features: torch.Size([480, 16, 32, 32]) torch.Size([480])
random features: torch.Size([489, 16, 32, 32]) torch.Size([489])
random features: torch.Size([489, 16, 32, 32]) torch.Size([489])
all data: 4876
Local adapation with distilling: 0.0001
training loss: tensor(0.2372) feature loss: tensor(0.0892)
Local adapation with distilling: 0.0001
training loss: tensor(0.2968) feature loss: tensor(0.1062)
Local adapation with distilling: 0.0001
training loss: tensor(0.2603) feature loss: tensor(0.0946)
Local adapation with distilling: 0.0001
training loss: tensor(0.3077) feature loss: tensor(0.0994)
Local adapation with distilling: 0.0001
training loss: tensor(0.3087) feature loss: tensor(0.1168)
Local adapation with distilling: 0.0001
training loss: tensor(0.2406) feature loss: tensor(0.0921)
Local adapation with distilling: 0.0001
training loss: tensor(0.3116) feature loss: tensor(0.1216)
Local adapation with distilling: 0.0001
training loss: tensor(0.3256) feature loss: tensor(0.1123)
Local adapation with distilling: 0.0001
training loss: tensor(0.2584) feature loss: tensor(0.0977)
Local adapation with distilling: 0.0001
training loss: tensor(0.3151) feature loss: tensor(0.1172)
Global Model Acc on global data: 0.7145 length of data: 10000
-------------Round number:  60  -------------
selected users: [88, 4, 79, 14, 55, 3, 19, 28, 94, 25]
random features: torch.Size([497, 16, 32, 32]) torch.Size([497])
random features: torch.Size([510, 16, 32, 32]) torch.Size([510])
random features: torch.Size([485, 16, 32, 32]) torch.Size([485])
random features: torch.Size([496, 16, 32, 32]) torch.Size([496])
random features: torch.Size([505, 16, 32, 32]) torch.Size([505])
random features: torch.Size([492, 16, 32, 32]) torch.Size([492])
random features: torch.Size([499, 16, 32, 32]) torch.Size([499])
random features: torch.Size([498, 16, 32, 32]) torch.Size([498])
random features: torch.Size([486, 16, 32, 32]) torch.Size([486])
random features: torch.Size([497, 16, 32, 32]) torch.Size([497])
all data: 4965
Local adapation with distilling: 0.0001
training loss: tensor(0.1907) feature loss: tensor(0.0980)
Local adapation with distilling: 0.0001
training loss: tensor(0.1467) feature loss: tensor(0.0795)
Local adapation with distilling: 0.0001
training loss: tensor(0.1388) feature loss: tensor(0.0771)
Local adapation with distilling: 0.0001
training loss: tensor(0.1481) feature loss: tensor(0.0808)
Local adapation with distilling: 0.0001
training loss: tensor(0.1736) feature loss: tensor(0.0846)
Local adapation with distilling: 0.0001
training loss: tensor(0.1434) feature loss: tensor(0.0766)
Local adapation with distilling: 0.0001
training loss: tensor(0.1657) feature loss: tensor(0.0841)
Local adapation with distilling: 0.0001
training loss: tensor(0.1594) feature loss: tensor(0.0750)
Local adapation with distilling: 0.0001
training loss: tensor(0.1690) feature loss: tensor(0.0829)
Local adapation with distilling: 0.0001
training loss: tensor(0.1575) feature loss: tensor(0.0817)
Global Model Acc on global data: 0.7105 length of data: 10000
-------------Round number:  61  -------------
selected users: [83, 1, 55, 9, 31, 28, 96, 29, 86, 63]
random features: torch.Size([576, 16, 32, 32]) torch.Size([576])
random features: torch.Size([509, 16, 32, 32]) torch.Size([509])
random features: torch.Size([505, 16, 32, 32]) torch.Size([505])
random features: torch.Size([498, 16, 32, 32]) torch.Size([498])
random features: torch.Size([523, 16, 32, 32]) torch.Size([523])
random features: torch.Size([498, 16, 32, 32]) torch.Size([498])
random features: torch.Size([480, 16, 32, 32]) torch.Size([480])
random features: torch.Size([515, 16, 32, 32]) torch.Size([515])
random features: torch.Size([508, 16, 32, 32]) torch.Size([508])
random features: torch.Size([497, 16, 32, 32]) torch.Size([497])
all data: 5109
Local adapation with distilling: 0.0001
training loss: tensor(0.2067) feature loss: tensor(0.1007)
Local adapation with distilling: 0.0001
training loss: tensor(0.2098) feature loss: tensor(0.0946)
Local adapation with distilling: 0.0001
training loss: tensor(0.1770) feature loss: tensor(0.0786)
Local adapation with distilling: 0.0001
training loss: tensor(0.1920) feature loss: tensor(0.0896)
Local adapation with distilling: 0.0001
training loss: tensor(0.1884) feature loss: tensor(0.0835)
Local adapation with distilling: 0.0001
training loss: tensor(0.1700) feature loss: tensor(0.0807)
Local adapation with distilling: 0.0001
training loss: tensor(0.2115) feature loss: tensor(0.0882)
Local adapation with distilling: 0.0001
training loss: tensor(0.3126) feature loss: tensor(0.0870)
Local adapation with distilling: 0.0001
training loss: tensor(0.1787) feature loss: tensor(0.0849)
Local adapation with distilling: 0.0001
training loss: tensor(0.1815) feature loss: tensor(0.0841)
Global Model Acc on global data: 0.7099 length of data: 10000
-------------Round number:  62  -------------
selected users: [76, 48, 62, 80, 29, 99, 60, 89, 39, 69]
random features: torch.Size([480, 16, 32, 32]) torch.Size([480])
random features: torch.Size([507, 16, 32, 32]) torch.Size([507])
random features: torch.Size([503, 16, 32, 32]) torch.Size([503])
random features: torch.Size([497, 16, 32, 32]) torch.Size([497])
random features: torch.Size([515, 16, 32, 32]) torch.Size([515])
random features: torch.Size([489, 16, 32, 32]) torch.Size([489])
random features: torch.Size([493, 16, 32, 32]) torch.Size([493])
random features: torch.Size([527, 16, 32, 32]) torch.Size([527])
random features: torch.Size([498, 16, 32, 32]) torch.Size([498])
random features: torch.Size([495, 16, 32, 32]) torch.Size([495])
all data: 5004
Local adapation with distilling: 0.0001
training loss: tensor(0.1634) feature loss: tensor(0.0821)
Local adapation with distilling: 0.0001
training loss: tensor(0.1800) feature loss: tensor(0.0910)
Local adapation with distilling: 0.0001
training loss: tensor(0.1634) feature loss: tensor(0.0908)
Local adapation with distilling: 0.0001
training loss: tensor(0.1393) feature loss: tensor(0.0792)
Local adapation with distilling: 0.0001
training loss: tensor(0.2635) feature loss: tensor(0.0750)
Local adapation with distilling: 0.0001
training loss: tensor(0.1656) feature loss: tensor(0.0847)
Local adapation with distilling: 0.0001
training loss: tensor(0.1648) feature loss: tensor(0.0907)
Local adapation with distilling: 0.0001
training loss: tensor(0.1396) feature loss: tensor(0.0743)
Local adapation with distilling: 0.0001
training loss: tensor(0.1360) feature loss: tensor(0.0762)
Local adapation with distilling: 0.0001
training loss: tensor(0.1390) feature loss: tensor(0.0823)
Global Model Acc on global data: 0.7106 length of data: 10000
-------------Round number:  63  -------------
selected users: [64, 59, 63, 2, 80, 20, 18, 48, 72, 51]
random features: torch.Size([493, 16, 32, 32]) torch.Size([493])
random features: torch.Size([514, 16, 32, 32]) torch.Size([514])
random features: torch.Size([497, 16, 32, 32]) torch.Size([497])
random features: torch.Size([517, 16, 32, 32]) torch.Size([517])
random features: torch.Size([497, 16, 32, 32]) torch.Size([497])
random features: torch.Size([489, 16, 32, 32]) torch.Size([489])
random features: torch.Size([489, 16, 32, 32]) torch.Size([489])
random features: torch.Size([507, 16, 32, 32]) torch.Size([507])
random features: torch.Size([515, 16, 32, 32]) torch.Size([515])
random features: torch.Size([494, 16, 32, 32]) torch.Size([494])
all data: 5012
Local adapation with distilling: 0.0001
training loss: tensor(0.2490) feature loss: tensor(0.1125)
Local adapation with distilling: 0.0001
training loss: tensor(0.3695) feature loss: tensor(0.0871)
Local adapation with distilling: 0.0001
training loss: tensor(0.1804) feature loss: tensor(0.0925)
Local adapation with distilling: 0.0001
training loss: tensor(0.2125) feature loss: tensor(0.0822)
Local adapation with distilling: 0.0001
training loss: tensor(0.1653) feature loss: tensor(0.0834)
Local adapation with distilling: 0.0001
training loss: tensor(0.1945) feature loss: tensor(0.0864)
Local adapation with distilling: 0.0001
training loss: tensor(0.1786) feature loss: tensor(0.0886)
Local adapation with distilling: 0.0001
training loss: tensor(0.1866) feature loss: tensor(0.0893)
Local adapation with distilling: 0.0001
training loss: tensor(0.3828) feature loss: tensor(0.1090)
Local adapation with distilling: 0.0001
training loss: tensor(0.2638) feature loss: tensor(0.1137)
Global Model Acc on global data: 0.7086 length of data: 10000
-------------Round number:  64  -------------
selected users: [17, 22, 60, 92, 23, 19, 71, 94, 40, 49]
random features: torch.Size([497, 16, 32, 32]) torch.Size([497])
random features: torch.Size([507, 16, 32, 32]) torch.Size([507])
random features: torch.Size([493, 16, 32, 32]) torch.Size([493])
random features: torch.Size([519, 16, 32, 32]) torch.Size([519])
random features: torch.Size([488, 16, 32, 32]) torch.Size([488])
random features: torch.Size([499, 16, 32, 32]) torch.Size([499])
random features: torch.Size([521, 16, 32, 32]) torch.Size([521])
random features: torch.Size([486, 16, 32, 32]) torch.Size([486])
random features: torch.Size([493, 16, 32, 32]) torch.Size([493])
random features: torch.Size([507, 16, 32, 32]) torch.Size([507])
all data: 5010
Local adapation with distilling: 0.0001
training loss: tensor(0.1259) feature loss: tensor(0.0769)
Local adapation with distilling: 0.0001
training loss: tensor(0.1364) feature loss: tensor(0.0789)
Local adapation with distilling: 0.0001
training loss: tensor(0.1503) feature loss: tensor(0.0782)
Local adapation with distilling: 0.0001
training loss: tensor(0.2058) feature loss: tensor(0.0880)
Local adapation with distilling: 0.0001
training loss: tensor(0.2073) feature loss: tensor(0.1020)
Local adapation with distilling: 0.0001
training loss: tensor(0.1451) feature loss: tensor(0.0804)
Local adapation with distilling: 0.0001
training loss: tensor(0.1312) feature loss: tensor(0.0740)
Local adapation with distilling: 0.0001
training loss: tensor(0.1479) feature loss: tensor(0.0786)
Local adapation with distilling: 0.0001
training loss: tensor(0.1400) feature loss: tensor(0.0786)
Local adapation with distilling: 0.0001
training loss: tensor(0.1639) feature loss: tensor(0.0799)
Global Model Acc on global data: 0.712 length of data: 10000
-------------Round number:  65  -------------
selected users: [37, 81, 39, 61, 76, 90, 27, 86, 28, 69]
random features: torch.Size([521, 16, 32, 32]) torch.Size([521])
random features: torch.Size([530, 16, 32, 32]) torch.Size([530])
random features: torch.Size([498, 16, 32, 32]) torch.Size([498])
random features: torch.Size([529, 16, 32, 32]) torch.Size([529])
random features: torch.Size([480, 16, 32, 32]) torch.Size([480])
random features: torch.Size([483, 16, 32, 32]) torch.Size([483])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([508, 16, 32, 32]) torch.Size([508])
random features: torch.Size([498, 16, 32, 32]) torch.Size([498])
random features: torch.Size([495, 16, 32, 32]) torch.Size([495])
all data: 5042
Local adapation with distilling: 0.0001
training loss: tensor(0.1494) feature loss: tensor(0.0759)
Local adapation with distilling: 0.0001
training loss: tensor(0.1554) feature loss: tensor(0.0798)
Local adapation with distilling: 0.0001
training loss: tensor(0.1342) feature loss: tensor(0.0729)
Local adapation with distilling: 0.0001
training loss: tensor(0.2165) feature loss: tensor(0.1045)
Local adapation with distilling: 0.0001
training loss: tensor(0.1536) feature loss: tensor(0.0675)
Local adapation with distilling: 0.0001
training loss: tensor(0.1999) feature loss: tensor(0.0967)
Local adapation with distilling: 0.0001
training loss: tensor(0.1438) feature loss: tensor(0.0671)
Local adapation with distilling: 0.0001
training loss: tensor(0.1463) feature loss: tensor(0.0733)
Local adapation with distilling: 0.0001
training loss: tensor(0.1382) feature loss: tensor(0.0717)
Local adapation with distilling: 0.0001
training loss: tensor(0.1401) feature loss: tensor(0.0715)
Global Model Acc on global data: 0.7122 length of data: 10000
-------------Round number:  66  -------------
selected users: [8, 93, 4, 5, 52, 41, 0, 73, 88, 68]
random features: torch.Size([507, 16, 32, 32]) torch.Size([507])
random features: torch.Size([493, 16, 32, 32]) torch.Size([493])
random features: torch.Size([510, 16, 32, 32]) torch.Size([510])
random features: torch.Size([520, 16, 32, 32]) torch.Size([520])
random features: torch.Size([534, 16, 32, 32]) torch.Size([534])
random features: torch.Size([501, 16, 32, 32]) torch.Size([501])
random features: torch.Size([520, 16, 32, 32]) torch.Size([520])
random features: torch.Size([517, 16, 32, 32]) torch.Size([517])
random features: torch.Size([497, 16, 32, 32]) torch.Size([497])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
all data: 5099
Local adapation with distilling: 0.0001
training loss: tensor(0.1197) feature loss: tensor(0.0689)
Local adapation with distilling: 0.0001
training loss: tensor(0.1394) feature loss: tensor(0.0787)
Local adapation with distilling: 0.0001
training loss: tensor(0.1354) feature loss: tensor(0.0751)
Local adapation with distilling: 0.0001
training loss: tensor(0.1658) feature loss: tensor(0.0844)
Local adapation with distilling: 0.0001
training loss: tensor(0.1228) feature loss: tensor(0.0705)
Local adapation with distilling: 0.0001
training loss: tensor(0.1402) feature loss: tensor(0.0794)
Local adapation with distilling: 0.0001
training loss: tensor(0.1295) feature loss: tensor(0.0719)
Local adapation with distilling: 0.0001
training loss: tensor(0.1952) feature loss: tensor(0.0771)
Local adapation with distilling: 0.0001
training loss: tensor(0.1467) feature loss: tensor(0.0723)
Local adapation with distilling: 0.0001
training loss: tensor(0.1463) feature loss: tensor(0.0743)
Global Model Acc on global data: 0.7124 length of data: 10000
-------------Round number:  67  -------------
selected users: [17, 24, 64, 93, 97, 29, 3, 70, 82, 11]
random features: torch.Size([497, 16, 32, 32]) torch.Size([497])
random features: torch.Size([466, 16, 32, 32]) torch.Size([466])
random features: torch.Size([493, 16, 32, 32]) torch.Size([493])
random features: torch.Size([493, 16, 32, 32]) torch.Size([493])
random features: torch.Size([479, 16, 32, 32]) torch.Size([479])
random features: torch.Size([515, 16, 32, 32]) torch.Size([515])
random features: torch.Size([492, 16, 32, 32]) torch.Size([492])
random features: torch.Size([491, 16, 32, 32]) torch.Size([491])
random features: torch.Size([516, 16, 32, 32]) torch.Size([516])
random features: torch.Size([519, 16, 32, 32]) torch.Size([519])
all data: 4961
Local adapation with distilling: 0.0001
training loss: tensor(0.1085) feature loss: tensor(0.0643)
Local adapation with distilling: 0.0001
training loss: tensor(0.1365) feature loss: tensor(0.0678)
Local adapation with distilling: 0.0001
training loss: tensor(0.1570) feature loss: tensor(0.0788)
Local adapation with distilling: 0.0001
training loss: tensor(0.1135) feature loss: tensor(0.0650)
Local adapation with distilling: 0.0001
training loss: tensor(0.1818) feature loss: tensor(0.0988)
Local adapation with distilling: 0.0001
training loss: tensor(0.3121) feature loss: tensor(0.0663)
Local adapation with distilling: 0.0001
training loss: tensor(0.1206) feature loss: tensor(0.0672)
Local adapation with distilling: 0.0001
training loss: tensor(0.1163) feature loss: tensor(0.0680)
Local adapation with distilling: 0.0001
training loss: tensor(0.2060) feature loss: tensor(0.0709)
Local adapation with distilling: 0.0001
training loss: tensor(0.1510) feature loss: tensor(0.0737)
Global Model Acc on global data: 0.7102 length of data: 10000
-------------Round number:  68  -------------
selected users: [29, 30, 16, 5, 38, 71, 76, 94, 99, 95]
random features: torch.Size([515, 16, 32, 32]) torch.Size([515])
random features: torch.Size([487, 16, 32, 32]) torch.Size([487])
random features: torch.Size([485, 16, 32, 32]) torch.Size([485])
random features: torch.Size([520, 16, 32, 32]) torch.Size([520])
random features: torch.Size([507, 16, 32, 32]) torch.Size([507])
random features: torch.Size([521, 16, 32, 32]) torch.Size([521])
random features: torch.Size([480, 16, 32, 32]) torch.Size([480])
random features: torch.Size([486, 16, 32, 32]) torch.Size([486])
random features: torch.Size([489, 16, 32, 32]) torch.Size([489])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
all data: 4990
Local adapation with distilling: 0.0001
training loss: tensor(0.3770) feature loss: tensor(0.0598)
Local adapation with distilling: 0.0001
training loss: tensor(0.1378) feature loss: tensor(0.0718)
Local adapation with distilling: 0.0001
training loss: tensor(0.1336) feature loss: tensor(0.0777)
Local adapation with distilling: 0.0001
training loss: tensor(0.1342) feature loss: tensor(0.0624)
Local adapation with distilling: 0.0001
training loss: tensor(0.0955) feature loss: tensor(0.0596)
Local adapation with distilling: 0.0001
training loss: tensor(0.1018) feature loss: tensor(0.0586)
Local adapation with distilling: 0.0001
training loss: tensor(0.0964) feature loss: tensor(0.0581)
Local adapation with distilling: 0.0001
training loss: tensor(0.0965) feature loss: tensor(0.0593)
Local adapation with distilling: 0.0001
training loss: tensor(0.1226) feature loss: tensor(0.0606)
Local adapation with distilling: 0.0001
training loss: tensor(0.1033) feature loss: tensor(0.0604)
Global Model Acc on global data: 0.7122 length of data: 10000
-------------Round number:  69  -------------
selected users: [72, 31, 13, 83, 33, 8, 26, 89, 64, 97]
random features: torch.Size([515, 16, 32, 32]) torch.Size([515])
random features: torch.Size([523, 16, 32, 32]) torch.Size([523])
random features: torch.Size([481, 16, 32, 32]) torch.Size([481])
random features: torch.Size([576, 16, 32, 32]) torch.Size([576])
random features: torch.Size([503, 16, 32, 32]) torch.Size([503])
random features: torch.Size([507, 16, 32, 32]) torch.Size([507])
random features: torch.Size([513, 16, 32, 32]) torch.Size([513])
random features: torch.Size([527, 16, 32, 32]) torch.Size([527])
random features: torch.Size([493, 16, 32, 32]) torch.Size([493])
random features: torch.Size([479, 16, 32, 32]) torch.Size([479])
all data: 5117
Local adapation with distilling: 0.0001
training loss: tensor(0.3976) feature loss: tensor(0.0982)
Local adapation with distilling: 0.0001
training loss: tensor(0.1783) feature loss: tensor(0.0873)
Local adapation with distilling: 0.0001
training loss: tensor(0.2518) feature loss: tensor(0.1064)
Local adapation with distilling: 0.0001
training loss: tensor(0.1678) feature loss: tensor(0.0936)
Local adapation with distilling: 0.0001
training loss: tensor(0.1671) feature loss: tensor(0.0828)
Local adapation with distilling: 0.0001
training loss: tensor(0.1535) feature loss: tensor(0.0783)
Local adapation with distilling: 0.0001
training loss: tensor(0.4165) feature loss: tensor(0.0997)
Local adapation with distilling: 0.0001
training loss: tensor(0.1598) feature loss: tensor(0.0843)
Local adapation with distilling: 0.0001
training loss: tensor(0.1797) feature loss: tensor(0.0872)
Local adapation with distilling: 0.0001
training loss: tensor(0.1955) feature loss: tensor(0.0886)
Global Model Acc on global data: 0.7117 length of data: 10000
-------------Round number:  70  -------------
selected users: [81, 43, 88, 32, 50, 71, 73, 55, 42, 2]
random features: torch.Size([530, 16, 32, 32]) torch.Size([530])
random features: torch.Size([508, 16, 32, 32]) torch.Size([508])
random features: torch.Size([497, 16, 32, 32]) torch.Size([497])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([467, 16, 32, 32]) torch.Size([467])
random features: torch.Size([521, 16, 32, 32]) torch.Size([521])
random features: torch.Size([517, 16, 32, 32]) torch.Size([517])
random features: torch.Size([505, 16, 32, 32]) torch.Size([505])
random features: torch.Size([496, 16, 32, 32]) torch.Size([496])
random features: torch.Size([517, 16, 32, 32]) torch.Size([517])
all data: 5058
Local adapation with distilling: 0.0001
training loss: tensor(0.1273) feature loss: tensor(0.0751)
Local adapation with distilling: 0.0001
training loss: tensor(0.1437) feature loss: tensor(0.0898)
Local adapation with distilling: 0.0001
training loss: tensor(0.1339) feature loss: tensor(0.0880)
Local adapation with distilling: 0.0001
training loss: tensor(0.2167) feature loss: tensor(0.1304)
Local adapation with distilling: 0.0001
training loss: tensor(0.1465) feature loss: tensor(0.0747)
Local adapation with distilling: 0.0001
training loss: tensor(0.1770) feature loss: tensor(0.1300)
Local adapation with distilling: 0.0001
training loss: tensor(0.1811) feature loss: tensor(0.0823)
Local adapation with distilling: 0.0001
training loss: tensor(0.1261) feature loss: tensor(0.0708)
Local adapation with distilling: 0.0001
training loss: tensor(0.1252) feature loss: tensor(0.0733)
Local adapation with distilling: 0.0001
training loss: tensor(0.1765) feature loss: tensor(0.1050)
Global Model Acc on global data: 0.7091 length of data: 10000
-------------Round number:  71  -------------
selected users: [41, 84, 98, 42, 75, 25, 60, 19, 52, 29]
random features: torch.Size([501, 16, 32, 32]) torch.Size([501])
random features: torch.Size([465, 16, 32, 32]) torch.Size([465])
random features: torch.Size([519, 16, 32, 32]) torch.Size([519])
random features: torch.Size([496, 16, 32, 32]) torch.Size([496])
random features: torch.Size([506, 16, 32, 32]) torch.Size([506])
random features: torch.Size([497, 16, 32, 32]) torch.Size([497])
random features: torch.Size([493, 16, 32, 32]) torch.Size([493])
random features: torch.Size([499, 16, 32, 32]) torch.Size([499])
random features: torch.Size([534, 16, 32, 32]) torch.Size([534])
random features: torch.Size([515, 16, 32, 32]) torch.Size([515])
all data: 5025
Local adapation with distilling: 0.0001
training loss: tensor(0.1008) feature loss: tensor(0.0600)
Local adapation with distilling: 0.0001
training loss: tensor(0.1181) feature loss: tensor(0.0656)
Local adapation with distilling: 0.0001
training loss: tensor(0.1741) feature loss: tensor(0.0660)
Local adapation with distilling: 0.0001
training loss: tensor(0.0942) feature loss: tensor(0.0619)
Local adapation with distilling: 0.0001
training loss: tensor(0.1327) feature loss: tensor(0.0719)
Local adapation with distilling: 0.0001
training loss: tensor(0.0938) feature loss: tensor(0.0709)
Local adapation with distilling: 0.0001
training loss: tensor(0.1001) feature loss: tensor(0.0671)
Local adapation with distilling: 0.0001
training loss: tensor(0.1169) feature loss: tensor(0.0644)
Local adapation with distilling: 0.0001
training loss: tensor(0.1039) feature loss: tensor(0.0689)
Local adapation with distilling: 0.0001
training loss: tensor(0.2572) feature loss: tensor(0.0653)
Global Model Acc on global data: 0.7122 length of data: 10000
-------------Round number:  72  -------------
selected users: [76, 82, 43, 16, 84, 95, 78, 91, 30, 22]
random features: torch.Size([480, 16, 32, 32]) torch.Size([480])
random features: torch.Size([516, 16, 32, 32]) torch.Size([516])
random features: torch.Size([508, 16, 32, 32]) torch.Size([508])
random features: torch.Size([485, 16, 32, 32]) torch.Size([485])
random features: torch.Size([465, 16, 32, 32]) torch.Size([465])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([519, 16, 32, 32]) torch.Size([519])
random features: torch.Size([494, 16, 32, 32]) torch.Size([494])
random features: torch.Size([487, 16, 32, 32]) torch.Size([487])
random features: torch.Size([507, 16, 32, 32]) torch.Size([507])
all data: 4961
Local adapation with distilling: 0.0001
training loss: tensor(0.0810) feature loss: tensor(0.0584)
Local adapation with distilling: 0.0001
training loss: tensor(0.1681) feature loss: tensor(0.0652)
Local adapation with distilling: 0.0001
training loss: tensor(0.0921) feature loss: tensor(0.0655)
Local adapation with distilling: 0.0001
training loss: tensor(0.0983) feature loss: tensor(0.0683)
Local adapation with distilling: 0.0001
training loss: tensor(0.0950) feature loss: tensor(0.0658)
Local adapation with distilling: 0.0001
training loss: tensor(0.0820) feature loss: tensor(0.0672)
Local adapation with distilling: 0.0001
training loss: tensor(0.1204) feature loss: tensor(0.0722)
Local adapation with distilling: 0.0001
training loss: tensor(0.1002) feature loss: tensor(0.0724)
Local adapation with distilling: 0.0001
training loss: tensor(0.1190) feature loss: tensor(0.0682)
Local adapation with distilling: 0.0001
training loss: tensor(0.0749) feature loss: tensor(0.0639)
Global Model Acc on global data: 0.7128 length of data: 10000
-------------Round number:  73  -------------
selected users: [49, 14, 34, 70, 90, 35, 68, 76, 80, 9]
random features: torch.Size([507, 16, 32, 32]) torch.Size([507])
random features: torch.Size([496, 16, 32, 32]) torch.Size([496])
random features: torch.Size([466, 16, 32, 32]) torch.Size([466])
random features: torch.Size([491, 16, 32, 32]) torch.Size([491])
random features: torch.Size([483, 16, 32, 32]) torch.Size([483])
random features: torch.Size([504, 16, 32, 32]) torch.Size([504])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([480, 16, 32, 32]) torch.Size([480])
random features: torch.Size([497, 16, 32, 32]) torch.Size([497])
random features: torch.Size([498, 16, 32, 32]) torch.Size([498])
all data: 4922
Local adapation with distilling: 0.0001
training loss: tensor(0.1736) feature loss: tensor(0.0824)
Local adapation with distilling: 0.0001
training loss: tensor(0.1704) feature loss: tensor(0.0863)
Local adapation with distilling: 0.0001
training loss: tensor(0.1841) feature loss: tensor(0.0860)
Local adapation with distilling: 0.0001
training loss: tensor(0.1629) feature loss: tensor(0.0877)
Local adapation with distilling: 0.0001
training loss: tensor(0.2049) feature loss: tensor(0.1084)
Local adapation with distilling: 0.0001
training loss: tensor(0.2706) feature loss: tensor(0.1183)
Local adapation with distilling: 0.0001
training loss: tensor(0.1630) feature loss: tensor(0.0858)
Local adapation with distilling: 0.0001
training loss: tensor(0.1518) feature loss: tensor(0.0823)
Local adapation with distilling: 0.0001
training loss: tensor(0.1590) feature loss: tensor(0.0952)
Local adapation with distilling: 0.0001
training loss: tensor(0.1852) feature loss: tensor(0.1003)
Global Model Acc on global data: 0.7134 length of data: 10000
-------------Round number:  74  -------------
selected users: [85, 64, 63, 80, 6, 12, 43, 17, 7, 8]
random features: torch.Size([498, 16, 32, 32]) torch.Size([498])
random features: torch.Size([493, 16, 32, 32]) torch.Size([493])
random features: torch.Size([497, 16, 32, 32]) torch.Size([497])
random features: torch.Size([497, 16, 32, 32]) torch.Size([497])
random features: torch.Size([507, 16, 32, 32]) torch.Size([507])
random features: torch.Size([515, 16, 32, 32]) torch.Size([515])
random features: torch.Size([508, 16, 32, 32]) torch.Size([508])
random features: torch.Size([497, 16, 32, 32]) torch.Size([497])
random features: torch.Size([522, 16, 32, 32]) torch.Size([522])
random features: torch.Size([507, 16, 32, 32]) torch.Size([507])
all data: 5041
Local adapation with distilling: 0.0001
training loss: tensor(0.1234) feature loss: tensor(0.0732)
Local adapation with distilling: 0.0001
training loss: tensor(0.1408) feature loss: tensor(0.0816)
Local adapation with distilling: 0.0001
training loss: tensor(0.1403) feature loss: tensor(0.0765)
Local adapation with distilling: 0.0001
training loss: tensor(0.1191) feature loss: tensor(0.0666)
Local adapation with distilling: 0.0001
training loss: tensor(0.1844) feature loss: tensor(0.0859)
Local adapation with distilling: 0.0001
training loss: tensor(0.2918) feature loss: tensor(0.0933)
Local adapation with distilling: 0.0001
training loss: tensor(0.1233) feature loss: tensor(0.0703)
Local adapation with distilling: 0.0001
training loss: tensor(0.1155) feature loss: tensor(0.0726)
Local adapation with distilling: 0.0001
training loss: tensor(0.1891) feature loss: tensor(0.0816)
Local adapation with distilling: 0.0001
training loss: tensor(0.1202) feature loss: tensor(0.0735)
Global Model Acc on global data: 0.7116 length of data: 10000
-------------Round number:  75  -------------
selected users: [36, 7, 6, 45, 56, 54, 22, 37, 53, 68]
random features: torch.Size([487, 16, 32, 32]) torch.Size([487])
random features: torch.Size([522, 16, 32, 32]) torch.Size([522])
random features: torch.Size([507, 16, 32, 32]) torch.Size([507])
random features: torch.Size([487, 16, 32, 32]) torch.Size([487])
random features: torch.Size([476, 16, 32, 32]) torch.Size([476])
random features: torch.Size([465, 16, 32, 32]) torch.Size([465])
random features: torch.Size([507, 16, 32, 32]) torch.Size([507])
random features: torch.Size([521, 16, 32, 32]) torch.Size([521])
random features: torch.Size([530, 16, 32, 32]) torch.Size([530])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
all data: 5002
Local adapation with distilling: 0.0001
training loss: tensor(0.2455) feature loss: tensor(0.1147)
Local adapation with distilling: 0.0001
training loss: tensor(0.2163) feature loss: tensor(0.0971)
Local adapation with distilling: 0.0001
training loss: tensor(0.2075) feature loss: tensor(0.0936)
Local adapation with distilling: 0.0001
training loss: tensor(0.2093) feature loss: tensor(0.0933)
Local adapation with distilling: 0.0001
training loss: tensor(0.2427) feature loss: tensor(0.0986)
Local adapation with distilling: 0.0001
training loss: tensor(0.2982) feature loss: tensor(0.1118)
Local adapation with distilling: 0.0001
training loss: tensor(0.1736) feature loss: tensor(0.0809)
Local adapation with distilling: 0.0001
training loss: tensor(0.1709) feature loss: tensor(0.0831)
Local adapation with distilling: 0.0001
training loss: tensor(0.1949) feature loss: tensor(0.0918)
Local adapation with distilling: 0.0001
training loss: tensor(0.1831) feature loss: tensor(0.0899)
Global Model Acc on global data: 0.7158 length of data: 10000
-------------Round number:  76  -------------
selected users: [38, 37, 32, 50, 10, 94, 19, 44, 86, 23]
random features: torch.Size([507, 16, 32, 32]) torch.Size([507])
random features: torch.Size([521, 16, 32, 32]) torch.Size([521])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([467, 16, 32, 32]) torch.Size([467])
random features: torch.Size([488, 16, 32, 32]) torch.Size([488])
random features: torch.Size([486, 16, 32, 32]) torch.Size([486])
random features: torch.Size([499, 16, 32, 32]) torch.Size([499])
random features: torch.Size([478, 16, 32, 32]) torch.Size([478])
random features: torch.Size([508, 16, 32, 32]) torch.Size([508])
random features: torch.Size([488, 16, 32, 32]) torch.Size([488])
all data: 4942
Local adapation with distilling: 0.0001
training loss: tensor(0.0916) feature loss: tensor(0.0641)
Local adapation with distilling: 0.0001
training loss: tensor(0.0937) feature loss: tensor(0.0631)
Local adapation with distilling: 0.0001
training loss: tensor(0.1276) feature loss: tensor(0.0787)
Local adapation with distilling: 0.0001
training loss: tensor(0.1074) feature loss: tensor(0.0642)
Local adapation with distilling: 0.0001
training loss: tensor(0.1150) feature loss: tensor(0.0621)
Local adapation with distilling: 0.0001
training loss: tensor(0.1038) feature loss: tensor(0.0621)
Local adapation with distilling: 0.0001
training loss: tensor(0.1170) feature loss: tensor(0.0691)
Local adapation with distilling: 0.0001
training loss: tensor(0.1143) feature loss: tensor(0.0696)
Local adapation with distilling: 0.0001
training loss: tensor(0.1011) feature loss: tensor(0.0656)
Local adapation with distilling: 0.0001
training loss: tensor(0.1490) feature loss: tensor(0.0807)
Global Model Acc on global data: 0.7119 length of data: 10000
-------------Round number:  77  -------------
selected users: [5, 93, 41, 96, 16, 42, 81, 91, 50, 58]
random features: torch.Size([520, 16, 32, 32]) torch.Size([520])
random features: torch.Size([493, 16, 32, 32]) torch.Size([493])
random features: torch.Size([501, 16, 32, 32]) torch.Size([501])
random features: torch.Size([480, 16, 32, 32]) torch.Size([480])
random features: torch.Size([485, 16, 32, 32]) torch.Size([485])
random features: torch.Size([496, 16, 32, 32]) torch.Size([496])
random features: torch.Size([530, 16, 32, 32]) torch.Size([530])
random features: torch.Size([494, 16, 32, 32]) torch.Size([494])
random features: torch.Size([467, 16, 32, 32]) torch.Size([467])
random features: torch.Size([498, 16, 32, 32]) torch.Size([498])
all data: 4964
Local adapation with distilling: 0.0001
training loss: tensor(0.1132) feature loss: tensor(0.0654)
Local adapation with distilling: 0.0001
training loss: tensor(0.0882) feature loss: tensor(0.0599)
Local adapation with distilling: 0.0001
training loss: tensor(0.0911) feature loss: tensor(0.0606)
Local adapation with distilling: 0.0001
training loss: tensor(0.1278) feature loss: tensor(0.0754)
Local adapation with distilling: 0.0001
training loss: tensor(0.0874) feature loss: tensor(0.0640)
Local adapation with distilling: 0.0001
training loss: tensor(0.0856) feature loss: tensor(0.0575)
Local adapation with distilling: 0.0001
training loss: tensor(0.1013) feature loss: tensor(0.0673)
Local adapation with distilling: 0.0001
training loss: tensor(0.0853) feature loss: tensor(0.0585)
Local adapation with distilling: 0.0001
training loss: tensor(0.0817) feature loss: tensor(0.0549)
Local adapation with distilling: 0.0001
training loss: tensor(0.1260) feature loss: tensor(0.0724)
Global Model Acc on global data: 0.7157 length of data: 10000
-------------Round number:  78  -------------
selected users: [9, 46, 7, 63, 15, 2, 74, 31, 5, 36]
random features: torch.Size([498, 16, 32, 32]) torch.Size([498])
random features: torch.Size([489, 16, 32, 32]) torch.Size([489])
random features: torch.Size([522, 16, 32, 32]) torch.Size([522])
random features: torch.Size([497, 16, 32, 32]) torch.Size([497])
random features: torch.Size([532, 16, 32, 32]) torch.Size([532])
random features: torch.Size([517, 16, 32, 32]) torch.Size([517])
random features: torch.Size([501, 16, 32, 32]) torch.Size([501])
random features: torch.Size([523, 16, 32, 32]) torch.Size([523])
random features: torch.Size([520, 16, 32, 32]) torch.Size([520])
random features: torch.Size([487, 16, 32, 32]) torch.Size([487])
all data: 5086
Local adapation with distilling: 0.0001
training loss: tensor(0.1169) feature loss: tensor(0.0746)
Local adapation with distilling: 0.0001
training loss: tensor(0.1397) feature loss: tensor(0.0833)
Local adapation with distilling: 0.0001
training loss: tensor(0.1273) feature loss: tensor(0.0738)
Local adapation with distilling: 0.0001
training loss: tensor(0.1000) feature loss: tensor(0.0664)
Local adapation with distilling: 0.0001
training loss: tensor(0.1303) feature loss: tensor(0.0763)
Local adapation with distilling: 0.0001
training loss: tensor(0.1546) feature loss: tensor(0.0624)
Local adapation with distilling: 0.0001
training loss: tensor(0.1256) feature loss: tensor(0.0762)
Local adapation with distilling: 0.0001
training loss: tensor(0.1228) feature loss: tensor(0.0762)
Local adapation with distilling: 0.0001
training loss: tensor(0.1307) feature loss: tensor(0.0757)
Local adapation with distilling: 0.0001
training loss: tensor(0.1299) feature loss: tensor(0.0754)
Global Model Acc on global data: 0.716 length of data: 10000
-------------Round number:  79  -------------
selected users: [68, 18, 86, 60, 56, 32, 30, 24, 45, 92]
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([489, 16, 32, 32]) torch.Size([489])
random features: torch.Size([508, 16, 32, 32]) torch.Size([508])
random features: torch.Size([493, 16, 32, 32]) torch.Size([493])
random features: torch.Size([476, 16, 32, 32]) torch.Size([476])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([487, 16, 32, 32]) torch.Size([487])
random features: torch.Size([466, 16, 32, 32]) torch.Size([466])
random features: torch.Size([487, 16, 32, 32]) torch.Size([487])
random features: torch.Size([519, 16, 32, 32]) torch.Size([519])
all data: 4925
Local adapation with distilling: 0.0001
training loss: tensor(0.0914) feature loss: tensor(0.0654)
Local adapation with distilling: 0.0001
training loss: tensor(0.1079) feature loss: tensor(0.0728)
Local adapation with distilling: 0.0001
training loss: tensor(0.0973) feature loss: tensor(0.0684)
Local adapation with distilling: 0.0001
training loss: tensor(0.1023) feature loss: tensor(0.0703)
Local adapation with distilling: 0.0001
training loss: tensor(0.1251) feature loss: tensor(0.0738)
Local adapation with distilling: 0.0001
training loss: tensor(0.1089) feature loss: tensor(0.0664)
Local adapation with distilling: 0.0001
training loss: tensor(0.1192) feature loss: tensor(0.0732)
Local adapation with distilling: 0.0001
training loss: tensor(0.1100) feature loss: tensor(0.0661)
Local adapation with distilling: 0.0001
training loss: tensor(0.1001) feature loss: tensor(0.0732)
Local adapation with distilling: 0.0001
training loss: tensor(0.1638) feature loss: tensor(0.0768)
Global Model Acc on global data: 0.7173 length of data: 10000
-------------Round number:  80  -------------
selected users: [37, 65, 95, 53, 66, 30, 73, 85, 45, 36]
random features: torch.Size([521, 16, 32, 32]) torch.Size([521])
random features: torch.Size([492, 16, 32, 32]) torch.Size([492])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([530, 16, 32, 32]) torch.Size([530])
random features: torch.Size([476, 16, 32, 32]) torch.Size([476])
random features: torch.Size([487, 16, 32, 32]) torch.Size([487])
random features: torch.Size([517, 16, 32, 32]) torch.Size([517])
random features: torch.Size([498, 16, 32, 32]) torch.Size([498])
random features: torch.Size([487, 16, 32, 32]) torch.Size([487])
random features: torch.Size([487, 16, 32, 32]) torch.Size([487])
all data: 4995
Local adapation with distilling: 0.0001
training loss: tensor(0.1253) feature loss: tensor(0.0696)
Local adapation with distilling: 0.0001
training loss: tensor(0.1999) feature loss: tensor(0.0949)
Local adapation with distilling: 0.0001
training loss: tensor(0.1213) feature loss: tensor(0.0628)
Local adapation with distilling: 0.0001
training loss: tensor(0.1586) feature loss: tensor(0.0886)
Local adapation with distilling: 0.0001
training loss: tensor(0.2772) feature loss: tensor(0.1229)
Local adapation with distilling: 0.0001
training loss: tensor(0.1299) feature loss: tensor(0.0619)
Local adapation with distilling: 0.0001
training loss: tensor(0.2117) feature loss: tensor(0.0704)
Local adapation with distilling: 0.0001
training loss: tensor(0.1250) feature loss: tensor(0.0632)
Local adapation with distilling: 0.0001
training loss: tensor(0.1230) feature loss: tensor(0.0660)
Local adapation with distilling: 0.0001
training loss: tensor(0.1479) feature loss: tensor(0.0713)
Global Model Acc on global data: 0.7172 length of data: 10000
-------------Round number:  81  -------------
selected users: [73, 89, 41, 78, 51, 21, 30, 69, 8, 5]
random features: torch.Size([517, 16, 32, 32]) torch.Size([517])
random features: torch.Size([527, 16, 32, 32]) torch.Size([527])
random features: torch.Size([501, 16, 32, 32]) torch.Size([501])
random features: torch.Size([519, 16, 32, 32]) torch.Size([519])
random features: torch.Size([494, 16, 32, 32]) torch.Size([494])
random features: torch.Size([505, 16, 32, 32]) torch.Size([505])
random features: torch.Size([487, 16, 32, 32]) torch.Size([487])
random features: torch.Size([495, 16, 32, 32]) torch.Size([495])
random features: torch.Size([507, 16, 32, 32]) torch.Size([507])
random features: torch.Size([520, 16, 32, 32]) torch.Size([520])
all data: 5072
Local adapation with distilling: 0.0001
training loss: tensor(0.1198) feature loss: tensor(0.0660)
Local adapation with distilling: 0.0001
training loss: tensor(0.0931) feature loss: tensor(0.0616)
Local adapation with distilling: 0.0001
training loss: tensor(0.0893) feature loss: tensor(0.0600)
Local adapation with distilling: 0.0001
training loss: tensor(0.1474) feature loss: tensor(0.0661)
Local adapation with distilling: 0.0001
training loss: tensor(0.1515) feature loss: tensor(0.0774)
Local adapation with distilling: 0.0001
training loss: tensor(0.1555) feature loss: tensor(0.0786)
Local adapation with distilling: 0.0001
training loss: tensor(0.0862) feature loss: tensor(0.0641)
Local adapation with distilling: 0.0001
training loss: tensor(0.0904) feature loss: tensor(0.0660)
Local adapation with distilling: 0.0001
training loss: tensor(0.0844) feature loss: tensor(0.0574)
Local adapation with distilling: 0.0001
training loss: tensor(0.1097) feature loss: tensor(0.0700)
Global Model Acc on global data: 0.7149 length of data: 10000
-------------Round number:  82  -------------
selected users: [72, 33, 58, 2, 55, 84, 54, 75, 28, 40]
random features: torch.Size([515, 16, 32, 32]) torch.Size([515])
random features: torch.Size([503, 16, 32, 32]) torch.Size([503])
random features: torch.Size([498, 16, 32, 32]) torch.Size([498])
random features: torch.Size([517, 16, 32, 32]) torch.Size([517])
random features: torch.Size([505, 16, 32, 32]) torch.Size([505])
random features: torch.Size([465, 16, 32, 32]) torch.Size([465])
random features: torch.Size([465, 16, 32, 32]) torch.Size([465])
random features: torch.Size([506, 16, 32, 32]) torch.Size([506])
random features: torch.Size([498, 16, 32, 32]) torch.Size([498])
random features: torch.Size([493, 16, 32, 32]) torch.Size([493])
all data: 4965
Local adapation with distilling: 0.0001
training loss: tensor(0.2597) feature loss: tensor(0.0975)
Local adapation with distilling: 0.0001
training loss: tensor(0.1189) feature loss: tensor(0.0893)
Local adapation with distilling: 0.0001
training loss: tensor(0.1335) feature loss: tensor(0.0884)
Local adapation with distilling: 0.0001
training loss: tensor(0.1252) feature loss: tensor(0.0845)
Local adapation with distilling: 0.0001
training loss: tensor(0.1317) feature loss: tensor(0.0805)
Local adapation with distilling: 0.0001
training loss: tensor(0.1331) feature loss: tensor(0.0937)
Local adapation with distilling: 0.0001
training loss: tensor(0.1924) feature loss: tensor(0.1001)
Local adapation with distilling: 0.0001
training loss: tensor(0.1557) feature loss: tensor(0.0844)
Local adapation with distilling: 0.0001
training loss: tensor(0.1368) feature loss: tensor(0.0937)
Local adapation with distilling: 0.0001
training loss: tensor(0.1229) feature loss: tensor(0.0850)
Global Model Acc on global data: 0.7139 length of data: 10000
-------------Round number:  83  -------------
selected users: [6, 65, 95, 84, 61, 12, 30, 69, 35, 1]
random features: torch.Size([507, 16, 32, 32]) torch.Size([507])
random features: torch.Size([492, 16, 32, 32]) torch.Size([492])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([465, 16, 32, 32]) torch.Size([465])
random features: torch.Size([529, 16, 32, 32]) torch.Size([529])
random features: torch.Size([515, 16, 32, 32]) torch.Size([515])
random features: torch.Size([487, 16, 32, 32]) torch.Size([487])
random features: torch.Size([495, 16, 32, 32]) torch.Size([495])
random features: torch.Size([504, 16, 32, 32]) torch.Size([504])
random features: torch.Size([509, 16, 32, 32]) torch.Size([509])
all data: 5003
Local adapation with distilling: 0.0001
training loss: tensor(0.1642) feature loss: tensor(0.0823)
Local adapation with distilling: 0.0001
training loss: tensor(0.1681) feature loss: tensor(0.0843)
Local adapation with distilling: 0.0001
training loss: tensor(0.1440) feature loss: tensor(0.0769)
Local adapation with distilling: 0.0001
training loss: tensor(0.1456) feature loss: tensor(0.0778)
Local adapation with distilling: 0.0001
training loss: tensor(0.1929) feature loss: tensor(0.0925)
Local adapation with distilling: 0.0001
training loss: tensor(0.3069) feature loss: tensor(0.0941)
Local adapation with distilling: 0.0001
training loss: tensor(0.1410) feature loss: tensor(0.0763)
Local adapation with distilling: 0.0001
training loss: tensor(0.1319) feature loss: tensor(0.0713)
Local adapation with distilling: 0.0001
training loss: tensor(0.2082) feature loss: tensor(0.0922)
Local adapation with distilling: 0.0001
training loss: tensor(0.1892) feature loss: tensor(0.0890)
Global Model Acc on global data: 0.7136 length of data: 10000
-------------Round number:  84  -------------
selected users: [94, 55, 80, 1, 90, 11, 32, 8, 6, 82]
random features: torch.Size([486, 16, 32, 32]) torch.Size([486])
random features: torch.Size([505, 16, 32, 32]) torch.Size([505])
random features: torch.Size([497, 16, 32, 32]) torch.Size([497])
random features: torch.Size([509, 16, 32, 32]) torch.Size([509])
random features: torch.Size([483, 16, 32, 32]) torch.Size([483])
random features: torch.Size([519, 16, 32, 32]) torch.Size([519])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([507, 16, 32, 32]) torch.Size([507])
random features: torch.Size([507, 16, 32, 32]) torch.Size([507])
random features: torch.Size([516, 16, 32, 32]) torch.Size([516])
all data: 5029
Local adapation with distilling: 0.0001
training loss: tensor(0.0887) feature loss: tensor(0.0552)
Local adapation with distilling: 0.0001
training loss: tensor(0.0741) feature loss: tensor(0.0506)
Local adapation with distilling: 0.0001
training loss: tensor(0.0699) feature loss: tensor(0.0552)
Local adapation with distilling: 0.0001
training loss: tensor(0.0864) feature loss: tensor(0.0619)
Local adapation with distilling: 0.0001
training loss: tensor(0.0880) feature loss: tensor(0.0638)
Local adapation with distilling: 0.0001
training loss: tensor(0.1316) feature loss: tensor(0.0603)
Local adapation with distilling: 0.0001
training loss: tensor(0.0778) feature loss: tensor(0.0556)
Local adapation with distilling: 0.0001
training loss: tensor(0.0674) feature loss: tensor(0.0581)
Local adapation with distilling: 0.0001
training loss: tensor(0.0722) feature loss: tensor(0.0567)
Local adapation with distilling: 0.0001
training loss: tensor(0.1463) feature loss: tensor(0.0570)
Global Model Acc on global data: 0.7151 length of data: 10000
-------------Round number:  85  -------------
selected users: [81, 25, 40, 87, 41, 23, 10, 89, 50, 54]
random features: torch.Size([530, 16, 32, 32]) torch.Size([530])
random features: torch.Size([497, 16, 32, 32]) torch.Size([497])
random features: torch.Size([493, 16, 32, 32]) torch.Size([493])
random features: torch.Size([486, 16, 32, 32]) torch.Size([486])
random features: torch.Size([501, 16, 32, 32]) torch.Size([501])
random features: torch.Size([488, 16, 32, 32]) torch.Size([488])
random features: torch.Size([488, 16, 32, 32]) torch.Size([488])
random features: torch.Size([527, 16, 32, 32]) torch.Size([527])
random features: torch.Size([467, 16, 32, 32]) torch.Size([467])
random features: torch.Size([465, 16, 32, 32]) torch.Size([465])
all data: 4942
Local adapation with distilling: 0.0001
training loss: tensor(0.0907) feature loss: tensor(0.0718)
Local adapation with distilling: 0.0001
training loss: tensor(0.1019) feature loss: tensor(0.0749)
Local adapation with distilling: 0.0001
training loss: tensor(0.0833) feature loss: tensor(0.0628)
Local adapation with distilling: 0.0001
training loss: tensor(0.1336) feature loss: tensor(0.0759)
Local adapation with distilling: 0.0001
training loss: tensor(0.0915) feature loss: tensor(0.0656)
Local adapation with distilling: 0.0001
training loss: tensor(0.1185) feature loss: tensor(0.0791)
Local adapation with distilling: 0.0001
training loss: tensor(0.0927) feature loss: tensor(0.0644)
Local adapation with distilling: 0.0001
training loss: tensor(0.0938) feature loss: tensor(0.0666)
Local adapation with distilling: 0.0001
training loss: tensor(0.0944) feature loss: tensor(0.0685)
Local adapation with distilling: 0.0001
training loss: tensor(0.1230) feature loss: tensor(0.0688)
Global Model Acc on global data: 0.7163 length of data: 10000
-------------Round number:  86  -------------
selected users: [69, 74, 34, 68, 42, 0, 32, 88, 8, 3]
random features: torch.Size([495, 16, 32, 32]) torch.Size([495])
random features: torch.Size([501, 16, 32, 32]) torch.Size([501])
random features: torch.Size([466, 16, 32, 32]) torch.Size([466])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([496, 16, 32, 32]) torch.Size([496])
random features: torch.Size([520, 16, 32, 32]) torch.Size([520])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([497, 16, 32, 32]) torch.Size([497])
random features: torch.Size([507, 16, 32, 32]) torch.Size([507])
random features: torch.Size([492, 16, 32, 32]) torch.Size([492])
all data: 4974
Local adapation with distilling: 0.0001
training loss: tensor(0.0547) feature loss: tensor(0.0518)
Local adapation with distilling: 0.0001
training loss: tensor(0.0765) feature loss: tensor(0.0585)
Local adapation with distilling: 0.0001
training loss: tensor(0.0770) feature loss: tensor(0.0543)
Local adapation with distilling: 0.0001
training loss: tensor(0.0670) feature loss: tensor(0.0551)
Local adapation with distilling: 0.0001
training loss: tensor(0.0574) feature loss: tensor(0.0482)
Local adapation with distilling: 0.0001
training loss: tensor(0.0876) feature loss: tensor(0.0555)
Local adapation with distilling: 0.0001
training loss: tensor(0.0575) feature loss: tensor(0.0504)
Local adapation with distilling: 0.0001
training loss: tensor(0.0757) feature loss: tensor(0.0502)
Local adapation with distilling: 0.0001
training loss: tensor(0.0485) feature loss: tensor(0.0500)
Local adapation with distilling: 0.0001
training loss: tensor(0.0726) feature loss: tensor(0.0576)
Global Model Acc on global data: 0.7171 length of data: 10000
-------------Round number:  87  -------------
selected users: [16, 81, 85, 32, 39, 25, 26, 29, 65, 7]
random features: torch.Size([485, 16, 32, 32]) torch.Size([485])
random features: torch.Size([530, 16, 32, 32]) torch.Size([530])
random features: torch.Size([498, 16, 32, 32]) torch.Size([498])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([498, 16, 32, 32]) torch.Size([498])
random features: torch.Size([497, 16, 32, 32]) torch.Size([497])
random features: torch.Size([513, 16, 32, 32]) torch.Size([513])
random features: torch.Size([515, 16, 32, 32]) torch.Size([515])
random features: torch.Size([492, 16, 32, 32]) torch.Size([492])
random features: torch.Size([522, 16, 32, 32]) torch.Size([522])
all data: 5050
Local adapation with distilling: 0.0001
training loss: tensor(0.0728) feature loss: tensor(0.0565)
Local adapation with distilling: 0.0001
training loss: tensor(0.0798) feature loss: tensor(0.0579)
Local adapation with distilling: 0.0001
training loss: tensor(0.0651) feature loss: tensor(0.0552)
Local adapation with distilling: 0.0001
training loss: tensor(0.0623) feature loss: tensor(0.0579)
Local adapation with distilling: 0.0001
training loss: tensor(0.0751) feature loss: tensor(0.0629)
Local adapation with distilling: 0.0001
training loss: tensor(0.0649) feature loss: tensor(0.0557)
Local adapation with distilling: 0.0001
training loss: tensor(0.4459) feature loss: tensor(0.0702)
Local adapation with distilling: 0.0001
training loss: tensor(0.1722) feature loss: tensor(0.0601)
Local adapation with distilling: 0.0001
training loss: tensor(0.0744) feature loss: tensor(0.0578)
Local adapation with distilling: 0.0001
training loss: tensor(0.0716) feature loss: tensor(0.0583)
Global Model Acc on global data: 0.714 length of data: 10000
-------------Round number:  88  -------------
selected users: [95, 53, 43, 84, 2, 74, 55, 31, 54, 97]
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([530, 16, 32, 32]) torch.Size([530])
random features: torch.Size([508, 16, 32, 32]) torch.Size([508])
random features: torch.Size([465, 16, 32, 32]) torch.Size([465])
random features: torch.Size([517, 16, 32, 32]) torch.Size([517])
random features: torch.Size([501, 16, 32, 32]) torch.Size([501])
random features: torch.Size([505, 16, 32, 32]) torch.Size([505])
random features: torch.Size([523, 16, 32, 32]) torch.Size([523])
random features: torch.Size([465, 16, 32, 32]) torch.Size([465])
random features: torch.Size([479, 16, 32, 32]) torch.Size([479])
all data: 4993
Local adapation with distilling: 0.0001
training loss: tensor(0.0894) feature loss: tensor(0.0808)
Local adapation with distilling: 0.0001
training loss: tensor(0.0865) feature loss: tensor(0.0739)
Local adapation with distilling: 0.0001
training loss: tensor(0.1095) feature loss: tensor(0.0934)
Local adapation with distilling: 0.0001
training loss: tensor(0.1027) feature loss: tensor(0.0847)
Local adapation with distilling: 0.0001
training loss: tensor(0.0867) feature loss: tensor(0.0650)
Local adapation with distilling: 0.0001
training loss: tensor(0.1166) feature loss: tensor(0.1077)
Local adapation with distilling: 0.0001
training loss: tensor(0.1139) feature loss: tensor(0.0948)
Local adapation with distilling: 0.0001
training loss: tensor(0.0642) feature loss: tensor(0.0584)
Local adapation with distilling: 0.0001
training loss: tensor(0.0828) feature loss: tensor(0.0536)
Local adapation with distilling: 0.0001
training loss: tensor(0.1315) feature loss: tensor(0.0942)
Global Model Acc on global data: 0.7145 length of data: 10000
-------------Round number:  89  -------------
selected users: [65, 21, 87, 6, 46, 74, 44, 60, 72, 5]
random features: torch.Size([492, 16, 32, 32]) torch.Size([492])
random features: torch.Size([505, 16, 32, 32]) torch.Size([505])
random features: torch.Size([486, 16, 32, 32]) torch.Size([486])
random features: torch.Size([507, 16, 32, 32]) torch.Size([507])
random features: torch.Size([489, 16, 32, 32]) torch.Size([489])
random features: torch.Size([501, 16, 32, 32]) torch.Size([501])
random features: torch.Size([478, 16, 32, 32]) torch.Size([478])
random features: torch.Size([493, 16, 32, 32]) torch.Size([493])
random features: torch.Size([515, 16, 32, 32]) torch.Size([515])
random features: torch.Size([520, 16, 32, 32]) torch.Size([520])
all data: 4986
Local adapation with distilling: 0.0001
training loss: tensor(0.0751) feature loss: tensor(0.0515)
Local adapation with distilling: 0.0001
training loss: tensor(0.1220) feature loss: tensor(0.0565)
Local adapation with distilling: 0.0001
training loss: tensor(0.0926) feature loss: tensor(0.0614)
Local adapation with distilling: 0.0001
training loss: tensor(0.0727) feature loss: tensor(0.0514)
Local adapation with distilling: 0.0001
training loss: tensor(0.0929) feature loss: tensor(0.0578)
Local adapation with distilling: 0.0001
training loss: tensor(0.0660) feature loss: tensor(0.0474)
Local adapation with distilling: 0.0001
training loss: tensor(0.0802) feature loss: tensor(0.0533)
Local adapation with distilling: 0.0001
training loss: tensor(0.0772) feature loss: tensor(0.0532)
Local adapation with distilling: 0.0001
training loss: tensor(0.2789) feature loss: tensor(0.0672)
Local adapation with distilling: 0.0001
training loss: tensor(0.0883) feature loss: tensor(0.0524)
Global Model Acc on global data: 0.7168 length of data: 10000
-------------Round number:  90  -------------
selected users: [25, 85, 96, 89, 65, 94, 5, 35, 36, 92]
random features: torch.Size([497, 16, 32, 32]) torch.Size([497])
random features: torch.Size([498, 16, 32, 32]) torch.Size([498])
random features: torch.Size([480, 16, 32, 32]) torch.Size([480])
random features: torch.Size([527, 16, 32, 32]) torch.Size([527])
random features: torch.Size([492, 16, 32, 32]) torch.Size([492])
random features: torch.Size([486, 16, 32, 32]) torch.Size([486])
random features: torch.Size([520, 16, 32, 32]) torch.Size([520])
random features: torch.Size([504, 16, 32, 32]) torch.Size([504])
random features: torch.Size([487, 16, 32, 32]) torch.Size([487])
random features: torch.Size([519, 16, 32, 32]) torch.Size([519])
all data: 5010
Local adapation with distilling: 0.0001
training loss: tensor(0.0648) feature loss: tensor(0.0577)
Local adapation with distilling: 0.0001
training loss: tensor(0.0582) feature loss: tensor(0.0470)
Local adapation with distilling: 0.0001
training loss: tensor(0.0967) feature loss: tensor(0.0623)
Local adapation with distilling: 0.0001
training loss: tensor(0.0662) feature loss: tensor(0.0534)
Local adapation with distilling: 0.0001
training loss: tensor(0.0659) feature loss: tensor(0.0495)
Local adapation with distilling: 0.0001
training loss: tensor(0.0647) feature loss: tensor(0.0465)
Local adapation with distilling: 0.0001
training loss: tensor(0.0781) feature loss: tensor(0.0551)
Local adapation with distilling: 0.0001
training loss: tensor(0.0968) feature loss: tensor(0.0659)
Local adapation with distilling: 0.0001
training loss: tensor(0.0745) feature loss: tensor(0.0526)
Local adapation with distilling: 0.0001
training loss: tensor(0.1445) feature loss: tensor(0.0556)
Global Model Acc on global data: 0.7116 length of data: 10000
-------------Round number:  91  -------------
selected users: [75, 25, 3, 52, 78, 54, 59, 26, 62, 97]
random features: torch.Size([506, 16, 32, 32]) torch.Size([506])
random features: torch.Size([497, 16, 32, 32]) torch.Size([497])
random features: torch.Size([492, 16, 32, 32]) torch.Size([492])
random features: torch.Size([534, 16, 32, 32]) torch.Size([534])
random features: torch.Size([519, 16, 32, 32]) torch.Size([519])
random features: torch.Size([465, 16, 32, 32]) torch.Size([465])
random features: torch.Size([514, 16, 32, 32]) torch.Size([514])
random features: torch.Size([513, 16, 32, 32]) torch.Size([513])
random features: torch.Size([503, 16, 32, 32]) torch.Size([503])
random features: torch.Size([479, 16, 32, 32]) torch.Size([479])
all data: 5022
Local adapation with distilling: 0.0001
training loss: tensor(0.0879) feature loss: tensor(0.0626)
Local adapation with distilling: 0.0001
training loss: tensor(0.0599) feature loss: tensor(0.0633)
Local adapation with distilling: 0.0001
training loss: tensor(0.0725) feature loss: tensor(0.0666)
Local adapation with distilling: 0.0001
training loss: tensor(0.0786) feature loss: tensor(0.0690)
Local adapation with distilling: 0.0001
training loss: tensor(0.0839) feature loss: tensor(0.0618)
Local adapation with distilling: 0.0001
training loss: tensor(0.0848) feature loss: tensor(0.0625)
Local adapation with distilling: 0.0001
training loss: tensor(0.3339) feature loss: tensor(0.0641)
Local adapation with distilling: 0.0001
training loss: tensor(0.3349) feature loss: tensor(0.0595)
Local adapation with distilling: 0.0001
training loss: tensor(0.0953) feature loss: tensor(0.0679)
Local adapation with distilling: 0.0001
training loss: tensor(0.0856) feature loss: tensor(0.0613)
Global Model Acc on global data: 0.7154 length of data: 10000
-------------Round number:  92  -------------
selected users: [25, 99, 73, 61, 66, 36, 23, 83, 77, 6]
random features: torch.Size([497, 16, 32, 32]) torch.Size([497])
random features: torch.Size([489, 16, 32, 32]) torch.Size([489])
random features: torch.Size([517, 16, 32, 32]) torch.Size([517])
random features: torch.Size([529, 16, 32, 32]) torch.Size([529])
random features: torch.Size([476, 16, 32, 32]) torch.Size([476])
random features: torch.Size([487, 16, 32, 32]) torch.Size([487])
random features: torch.Size([488, 16, 32, 32]) torch.Size([488])
random features: torch.Size([576, 16, 32, 32]) torch.Size([576])
random features: torch.Size([499, 16, 32, 32]) torch.Size([499])
random features: torch.Size([507, 16, 32, 32]) torch.Size([507])
all data: 5065
Local adapation with distilling: 0.0001
training loss: tensor(0.1721) feature loss: tensor(0.0953)
Local adapation with distilling: 0.0001
training loss: tensor(0.2407) feature loss: tensor(0.1011)
Local adapation with distilling: 0.0001
training loss: tensor(0.2011) feature loss: tensor(0.0958)
Local adapation with distilling: 0.0001
training loss: tensor(0.1988) feature loss: tensor(0.1070)
Local adapation with distilling: 0.0001
training loss: tensor(0.2600) feature loss: tensor(0.1095)
Local adapation with distilling: 0.0001
training loss: tensor(0.1919) feature loss: tensor(0.1043)
Local adapation with distilling: 0.0001
training loss: tensor(0.2187) feature loss: tensor(0.0961)
Local adapation with distilling: 0.0001
training loss: tensor(0.2052) feature loss: tensor(0.1162)
Local adapation with distilling: 0.0001
training loss: tensor(0.3408) feature loss: tensor(0.1383)
Local adapation with distilling: 0.0001
training loss: tensor(0.1836) feature loss: tensor(0.0897)
Global Model Acc on global data: 0.716 length of data: 10000
-------------Round number:  93  -------------
selected users: [75, 82, 56, 27, 42, 35, 1, 97, 66, 61]
random features: torch.Size([506, 16, 32, 32]) torch.Size([506])
random features: torch.Size([516, 16, 32, 32]) torch.Size([516])
random features: torch.Size([476, 16, 32, 32]) torch.Size([476])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([496, 16, 32, 32]) torch.Size([496])
random features: torch.Size([504, 16, 32, 32]) torch.Size([504])
random features: torch.Size([509, 16, 32, 32]) torch.Size([509])
random features: torch.Size([479, 16, 32, 32]) torch.Size([479])
random features: torch.Size([476, 16, 32, 32]) torch.Size([476])
random features: torch.Size([529, 16, 32, 32]) torch.Size([529])
all data: 4991
Local adapation with distilling: 0.0001
training loss: tensor(0.0905) feature loss: tensor(0.0574)
Local adapation with distilling: 0.0001
training loss: tensor(0.1130) feature loss: tensor(0.0627)
Local adapation with distilling: 0.0001
training loss: tensor(0.1049) feature loss: tensor(0.0674)
Local adapation with distilling: 0.0001
training loss: tensor(0.0960) feature loss: tensor(0.0680)
Local adapation with distilling: 0.0001
training loss: tensor(0.0846) feature loss: tensor(0.0573)
Local adapation with distilling: 0.0001
training loss: tensor(0.0951) feature loss: tensor(0.0681)
Local adapation with distilling: 0.0001
training loss: tensor(0.1014) feature loss: tensor(0.0649)
Local adapation with distilling: 0.0001
training loss: tensor(0.0956) feature loss: tensor(0.0619)
Local adapation with distilling: 0.0001
training loss: tensor(0.1116) feature loss: tensor(0.0713)
Local adapation with distilling: 0.0001
training loss: tensor(0.0923) feature loss: tensor(0.0759)
Global Model Acc on global data: 0.7139 length of data: 10000
-------------Round number:  94  -------------
selected users: [13, 73, 5, 18, 99, 48, 23, 4, 35, 17]
random features: torch.Size([481, 16, 32, 32]) torch.Size([481])
random features: torch.Size([517, 16, 32, 32]) torch.Size([517])
random features: torch.Size([520, 16, 32, 32]) torch.Size([520])
random features: torch.Size([489, 16, 32, 32]) torch.Size([489])
random features: torch.Size([489, 16, 32, 32]) torch.Size([489])
random features: torch.Size([507, 16, 32, 32]) torch.Size([507])
random features: torch.Size([488, 16, 32, 32]) torch.Size([488])
random features: torch.Size([510, 16, 32, 32]) torch.Size([510])
random features: torch.Size([504, 16, 32, 32]) torch.Size([504])
random features: torch.Size([497, 16, 32, 32]) torch.Size([497])
all data: 5002
Local adapation with distilling: 0.0001
training loss: tensor(0.1601) feature loss: tensor(0.0834)
Local adapation with distilling: 0.0001
training loss: tensor(0.2132) feature loss: tensor(0.0597)
Local adapation with distilling: 0.0001
training loss: tensor(0.1103) feature loss: tensor(0.0627)
Local adapation with distilling: 0.0001
training loss: tensor(0.1083) feature loss: tensor(0.0682)
Local adapation with distilling: 0.0001
training loss: tensor(0.1082) feature loss: tensor(0.0693)
Local adapation with distilling: 0.0001
training loss: tensor(0.1198) feature loss: tensor(0.0739)
Local adapation with distilling: 0.0001
training loss: tensor(0.0994) feature loss: tensor(0.0673)
Local adapation with distilling: 0.0001
training loss: tensor(0.1219) feature loss: tensor(0.0789)
Local adapation with distilling: 0.0001
training loss: tensor(0.0934) feature loss: tensor(0.0669)
Local adapation with distilling: 0.0001
training loss: tensor(0.0902) feature loss: tensor(0.0718)
Global Model Acc on global data: 0.7147 length of data: 10000
-------------Round number:  95  -------------
selected users: [88, 9, 1, 60, 95, 26, 45, 71, 44, 21]
random features: torch.Size([497, 16, 32, 32]) torch.Size([497])
random features: torch.Size([498, 16, 32, 32]) torch.Size([498])
random features: torch.Size([509, 16, 32, 32]) torch.Size([509])
random features: torch.Size([493, 16, 32, 32]) torch.Size([493])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([513, 16, 32, 32]) torch.Size([513])
random features: torch.Size([487, 16, 32, 32]) torch.Size([487])
random features: torch.Size([521, 16, 32, 32]) torch.Size([521])
random features: torch.Size([478, 16, 32, 32]) torch.Size([478])
random features: torch.Size([505, 16, 32, 32]) torch.Size([505])
all data: 5001
Local adapation with distilling: 0.0001
training loss: tensor(0.0628) feature loss: tensor(0.0474)
Local adapation with distilling: 0.0001
training loss: tensor(0.0626) feature loss: tensor(0.0486)
Local adapation with distilling: 0.0001
training loss: tensor(0.0559) feature loss: tensor(0.0485)
Local adapation with distilling: 0.0001
training loss: tensor(0.0570) feature loss: tensor(0.0442)
Local adapation with distilling: 0.0001
training loss: tensor(0.0610) feature loss: tensor(0.0572)
Local adapation with distilling: 0.0001
training loss: tensor(0.4205) feature loss: tensor(0.0490)
Local adapation with distilling: 0.0001
training loss: tensor(0.0572) feature loss: tensor(0.0445)
Local adapation with distilling: 0.0001
training loss: tensor(0.0609) feature loss: tensor(0.0474)
Local adapation with distilling: 0.0001
training loss: tensor(0.0500) feature loss: tensor(0.0429)
Local adapation with distilling: 0.0001
training loss: tensor(0.0754) feature loss: tensor(0.0498)
Global Model Acc on global data: 0.7159 length of data: 10000
-------------Round number:  96  -------------
selected users: [41, 28, 52, 15, 87, 17, 75, 42, 45, 49]
random features: torch.Size([501, 16, 32, 32]) torch.Size([501])
random features: torch.Size([498, 16, 32, 32]) torch.Size([498])
random features: torch.Size([534, 16, 32, 32]) torch.Size([534])
random features: torch.Size([532, 16, 32, 32]) torch.Size([532])
random features: torch.Size([486, 16, 32, 32]) torch.Size([486])
random features: torch.Size([497, 16, 32, 32]) torch.Size([497])
random features: torch.Size([506, 16, 32, 32]) torch.Size([506])
random features: torch.Size([496, 16, 32, 32]) torch.Size([496])
random features: torch.Size([487, 16, 32, 32]) torch.Size([487])
random features: torch.Size([507, 16, 32, 32]) torch.Size([507])
all data: 5044
Local adapation with distilling: 0.0001
training loss: tensor(0.0488) feature loss: tensor(0.0480)
Local adapation with distilling: 0.0001
training loss: tensor(0.0797) feature loss: tensor(0.0486)
Local adapation with distilling: 0.0001
training loss: tensor(0.0526) feature loss: tensor(0.0501)
Local adapation with distilling: 0.0001
training loss: tensor(0.0870) feature loss: tensor(0.0555)
Local adapation with distilling: 0.0001
training loss: tensor(0.0683) feature loss: tensor(0.0496)
Local adapation with distilling: 0.0001
training loss: tensor(0.0547) feature loss: tensor(0.0468)
Local adapation with distilling: 0.0001
training loss: tensor(0.0574) feature loss: tensor(0.0459)
Local adapation with distilling: 0.0001
training loss: tensor(0.0559) feature loss: tensor(0.0453)
Local adapation with distilling: 0.0001
training loss: tensor(0.0495) feature loss: tensor(0.0482)
Local adapation with distilling: 0.0001
training loss: tensor(0.0717) feature loss: tensor(0.0489)
Global Model Acc on global data: 0.7159 length of data: 10000
-------------Round number:  97  -------------
selected users: [31, 43, 64, 56, 85, 2, 70, 21, 34, 50]
random features: torch.Size([523, 16, 32, 32]) torch.Size([523])
random features: torch.Size([508, 16, 32, 32]) torch.Size([508])
random features: torch.Size([493, 16, 32, 32]) torch.Size([493])
random features: torch.Size([476, 16, 32, 32]) torch.Size([476])
random features: torch.Size([498, 16, 32, 32]) torch.Size([498])
random features: torch.Size([517, 16, 32, 32]) torch.Size([517])
random features: torch.Size([491, 16, 32, 32]) torch.Size([491])
random features: torch.Size([505, 16, 32, 32]) torch.Size([505])
random features: torch.Size([466, 16, 32, 32]) torch.Size([466])
random features: torch.Size([467, 16, 32, 32]) torch.Size([467])
all data: 4944
Local adapation with distilling: 0.0001
training loss: tensor(0.0692) feature loss: tensor(0.0470)
Local adapation with distilling: 0.0001
training loss: tensor(0.0558) feature loss: tensor(0.0481)
Local adapation with distilling: 0.0001
training loss: tensor(0.0752) feature loss: tensor(0.0520)
Local adapation with distilling: 0.0001
training loss: tensor(0.0613) feature loss: tensor(0.0465)
Local adapation with distilling: 0.0001
training loss: tensor(0.0479) feature loss: tensor(0.0465)
Local adapation with distilling: 0.0001
training loss: tensor(0.1014) feature loss: tensor(0.0517)
Local adapation with distilling: 0.0001
training loss: tensor(0.0439) feature loss: tensor(0.0483)
Local adapation with distilling: 0.0001
training loss: tensor(0.0638) feature loss: tensor(0.0423)
Local adapation with distilling: 0.0001
training loss: tensor(0.0594) feature loss: tensor(0.0454)
Local adapation with distilling: 0.0001
training loss: tensor(0.0561) feature loss: tensor(0.0469)
Global Model Acc on global data: 0.7161 length of data: 10000
-------------Round number:  98  -------------
selected users: [11, 48, 97, 14, 22, 36, 99, 47, 33, 81]
random features: torch.Size([519, 16, 32, 32]) torch.Size([519])
random features: torch.Size([507, 16, 32, 32]) torch.Size([507])
random features: torch.Size([479, 16, 32, 32]) torch.Size([479])
random features: torch.Size([496, 16, 32, 32]) torch.Size([496])
random features: torch.Size([507, 16, 32, 32]) torch.Size([507])
random features: torch.Size([487, 16, 32, 32]) torch.Size([487])
random features: torch.Size([489, 16, 32, 32]) torch.Size([489])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([503, 16, 32, 32]) torch.Size([503])
random features: torch.Size([530, 16, 32, 32]) torch.Size([530])
all data: 5017
Local adapation with distilling: 0.0001
training loss: tensor(0.1142) feature loss: tensor(0.0557)
Local adapation with distilling: 0.0001
training loss: tensor(0.0754) feature loss: tensor(0.0447)
Local adapation with distilling: 0.0001
training loss: tensor(0.0635) feature loss: tensor(0.0521)
Local adapation with distilling: 0.0001
training loss: tensor(0.0760) feature loss: tensor(0.0553)
Local adapation with distilling: 0.0001
training loss: tensor(0.0716) feature loss: tensor(0.0553)
Local adapation with distilling: 0.0001
training loss: tensor(0.0723) feature loss: tensor(0.0594)
Local adapation with distilling: 0.0001
training loss: tensor(0.0834) feature loss: tensor(0.0659)
Local adapation with distilling: 0.0001
training loss: tensor(0.1333) feature loss: tensor(0.0748)
Local adapation with distilling: 0.0001
training loss: tensor(0.0683) feature loss: tensor(0.0557)
Local adapation with distilling: 0.0001
training loss: tensor(0.0661) feature loss: tensor(0.0562)
Global Model Acc on global data: 0.7137 length of data: 10000
-------------Round number:  99  -------------
selected users: [14, 34, 30, 78, 16, 15, 91, 38, 10, 85]
random features: torch.Size([496, 16, 32, 32]) torch.Size([496])
random features: torch.Size([466, 16, 32, 32]) torch.Size([466])
random features: torch.Size([487, 16, 32, 32]) torch.Size([487])
random features: torch.Size([519, 16, 32, 32]) torch.Size([519])
random features: torch.Size([485, 16, 32, 32]) torch.Size([485])
random features: torch.Size([532, 16, 32, 32]) torch.Size([532])
random features: torch.Size([494, 16, 32, 32]) torch.Size([494])
random features: torch.Size([507, 16, 32, 32]) torch.Size([507])
random features: torch.Size([488, 16, 32, 32]) torch.Size([488])
random features: torch.Size([498, 16, 32, 32]) torch.Size([498])
all data: 4972
Local adapation with distilling: 0.0001
training loss: tensor(0.0492) feature loss: tensor(0.0381)
Local adapation with distilling: 0.0001
training loss: tensor(0.0542) feature loss: tensor(0.0361)
Local adapation with distilling: 0.0001
training loss: tensor(0.0457) feature loss: tensor(0.0345)
Local adapation with distilling: 0.0001
training loss: tensor(0.1037) feature loss: tensor(0.0412)
Local adapation with distilling: 0.0001
training loss: tensor(0.0440) feature loss: tensor(0.0405)
Local adapation with distilling: 0.0001
training loss: tensor(0.0495) feature loss: tensor(0.0460)
Local adapation with distilling: 0.0001
training loss: tensor(0.0420) feature loss: tensor(0.0386)
Local adapation with distilling: 0.0001
training loss: tensor(0.0465) feature loss: tensor(0.0419)
Local adapation with distilling: 0.0001
training loss: tensor(0.0487) feature loss: tensor(0.0390)
Local adapation with distilling: 0.0001
training loss: tensor(0.0410) feature loss: tensor(0.0371)
Global Model Acc on global data: 0.7167 length of data: 10000
