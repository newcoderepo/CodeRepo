================================================================================
Summary of training process:
Dataset                : Cifar10
Batch size             : 64
Learing rate           : 0.001
Number of total clients: 100
Split method           : quantity
Split parameter        : 1.0
Clients per round      : 10
Number of global rounds: 100
Number of local rounds : 10
Feature from layer     : 0
Feature percentage     : 0.1
Local training loss    : CE_CE_KL
Loss of beta           : 1.0
Algorithm              : FedFea
Modelname              : MOBNET
Mode                   : training
Seed                   : 0
================================================================================
Files already downloaded and verified
Files already downloaded and verified
Class frequencies:
client,class0,class1,class2,class3,class4,class5,class6,class7,class8,class9,Amount
Client   0,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client   1,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client   2,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client   3,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,500
Client   4,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,500
Client   5,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,500
Client   6,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,500
Client   7,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,500
Client   8,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,500
Client   9,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,500
Client  10,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  11,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  12,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  13,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  14,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,500
Client  15,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,500
Client  16,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,500
Client  17,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,500
Client  18,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,500
Client  19,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,500
Client  20,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  21,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  22,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  23,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  24,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,500
Client  25,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,500
Client  26,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,500
Client  27,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,500
Client  28,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,500
Client  29,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,500
Client  30,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  31,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  32,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  33,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  34,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,500
Client  35,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,500
Client  36,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,500
Client  37,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,500
Client  38,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,500
Client  39,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,500
Client  40,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  41,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  42,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  43,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  44,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,500
Client  45,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,500
Client  46,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,500
Client  47,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,500
Client  48,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,500
Client  49,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,500
Client  50,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  51,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  52,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  53,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  54,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,500
Client  55,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,500
Client  56,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,500
Client  57,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,500
Client  58,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,500
Client  59,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,500
Client  60,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  61,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  62,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  63,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  64,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,500
Client  65,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,500
Client  66,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,500
Client  67,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,500
Client  68,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,500
Client  69,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,500
Client  70,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  71,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  72,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  73,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  74,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,500
Client  75,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,500
Client  76,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,500
Client  77,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,500
Client  78,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,500
Client  79,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,500
Client  80,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  81,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  82,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  83,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  84,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,500
Client  85,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,500
Client  86,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,500
Client  87,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,500
Client  88,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,500
Client  89,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,500
Client  90,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  91,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  92,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  93,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  94,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,500
Client  95,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,500
Client  96,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,500
Client  97,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,500
Client  98,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,500
Client  99,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,500
0 [0] [0] [1 2 3 4 5 6 7 8 9]
0 training: Counter({0: 500}) testing iid: Counter({0: 1000})
1 [1] [1] [0 2 3 4 5 6 7 8 9]
1 training: Counter({1: 500}) testing iid: Counter({1: 1000})
2 [2] [2] [0 1 3 4 5 6 7 8 9]
2 training: Counter({2: 500}) testing iid: Counter({2: 1000})
3 [3] [3] [0 1 2 4 5 6 7 8 9]
3 training: Counter({3: 500}) testing iid: Counter({3: 1000})
4 [4] [4] [0 1 2 3 5 6 7 8 9]
4 training: Counter({4: 500}) testing iid: Counter({4: 1000})
5 [5] [5] [0 1 2 3 4 6 7 8 9]
5 training: Counter({5: 500}) testing iid: Counter({5: 1000})
6 [6] [6] [0 1 2 3 4 5 7 8 9]
6 training: Counter({6: 500}) testing iid: Counter({6: 1000})
7 [7] [7] [0 1 2 3 4 5 6 8 9]
7 training: Counter({7: 500}) testing iid: Counter({7: 1000})
8 [8] [8] [0 1 2 3 4 5 6 7 9]
8 training: Counter({8: 500}) testing iid: Counter({8: 1000})
9 [9] [9] [0 1 2 3 4 5 6 7 8]
9 training: Counter({9: 500}) testing iid: Counter({9: 1000})
10 [0] [0] [1 2 3 4 5 6 7 8 9]
10 training: Counter({0: 500}) testing iid: Counter({0: 1000})
11 [1] [1] [0 2 3 4 5 6 7 8 9]
11 training: Counter({1: 500}) testing iid: Counter({1: 1000})
12 [2] [2] [0 1 3 4 5 6 7 8 9]
12 training: Counter({2: 500}) testing iid: Counter({2: 1000})
13 [3] [3] [0 1 2 4 5 6 7 8 9]
13 training: Counter({3: 500}) testing iid: Counter({3: 1000})
14 [4] [4] [0 1 2 3 5 6 7 8 9]
14 training: Counter({4: 500}) testing iid: Counter({4: 1000})
15 [5] [5] [0 1 2 3 4 6 7 8 9]
15 training: Counter({5: 500}) testing iid: Counter({5: 1000})
16 [6] [6] [0 1 2 3 4 5 7 8 9]
16 training: Counter({6: 500}) testing iid: Counter({6: 1000})
17 [7] [7] [0 1 2 3 4 5 6 8 9]
17 training: Counter({7: 500}) testing iid: Counter({7: 1000})
18 [8] [8] [0 1 2 3 4 5 6 7 9]
18 training: Counter({8: 500}) testing iid: Counter({8: 1000})
19 [9] [9] [0 1 2 3 4 5 6 7 8]
19 training: Counter({9: 500}) testing iid: Counter({9: 1000})
20 [0] [0] [1 2 3 4 5 6 7 8 9]
20 training: Counter({0: 500}) testing iid: Counter({0: 1000})
21 [1] [1] [0 2 3 4 5 6 7 8 9]
21 training: Counter({1: 500}) testing iid: Counter({1: 1000})
22 [2] [2] [0 1 3 4 5 6 7 8 9]
22 training: Counter({2: 500}) testing iid: Counter({2: 1000})
23 [3] [3] [0 1 2 4 5 6 7 8 9]
23 training: Counter({3: 500}) testing iid: Counter({3: 1000})
24 [4] [4] [0 1 2 3 5 6 7 8 9]
24 training: Counter({4: 500}) testing iid: Counter({4: 1000})
25 [5] [5] [0 1 2 3 4 6 7 8 9]
25 training: Counter({5: 500}) testing iid: Counter({5: 1000})
26 [6] [6] [0 1 2 3 4 5 7 8 9]
26 training: Counter({6: 500}) testing iid: Counter({6: 1000})
27 [7] [7] [0 1 2 3 4 5 6 8 9]
27 training: Counter({7: 500}) testing iid: Counter({7: 1000})
28 [8] [8] [0 1 2 3 4 5 6 7 9]
28 training: Counter({8: 500}) testing iid: Counter({8: 1000})
29 [9] [9] [0 1 2 3 4 5 6 7 8]
29 training: Counter({9: 500}) testing iid: Counter({9: 1000})
30 [0] [0] [1 2 3 4 5 6 7 8 9]
30 training: Counter({0: 500}) testing iid: Counter({0: 1000})
31 [1] [1] [0 2 3 4 5 6 7 8 9]
31 training: Counter({1: 500}) testing iid: Counter({1: 1000})
32 [2] [2] [0 1 3 4 5 6 7 8 9]
32 training: Counter({2: 500}) testing iid: Counter({2: 1000})
33 [3] [3] [0 1 2 4 5 6 7 8 9]
33 training: Counter({3: 500}) testing iid: Counter({3: 1000})
34 [4] [4] [0 1 2 3 5 6 7 8 9]
34 training: Counter({4: 500}) testing iid: Counter({4: 1000})
35 [5] [5] [0 1 2 3 4 6 7 8 9]
35 training: Counter({5: 500}) testing iid: Counter({5: 1000})
36 [6] [6] [0 1 2 3 4 5 7 8 9]
36 training: Counter({6: 500}) testing iid: Counter({6: 1000})
37 [7] [7] [0 1 2 3 4 5 6 8 9]
37 training: Counter({7: 500}) testing iid: Counter({7: 1000})
38 [8] [8] [0 1 2 3 4 5 6 7 9]
38 training: Counter({8: 500}) testing iid: Counter({8: 1000})
39 [9] [9] [0 1 2 3 4 5 6 7 8]
39 training: Counter({9: 500}) testing iid: Counter({9: 1000})
40 [0] [0] [1 2 3 4 5 6 7 8 9]
40 training: Counter({0: 500}) testing iid: Counter({0: 1000})
41 [1] [1] [0 2 3 4 5 6 7 8 9]
41 training: Counter({1: 500}) testing iid: Counter({1: 1000})
42 [2] [2] [0 1 3 4 5 6 7 8 9]
42 training: Counter({2: 500}) testing iid: Counter({2: 1000})
43 [3] [3] [0 1 2 4 5 6 7 8 9]
43 training: Counter({3: 500}) testing iid: Counter({3: 1000})
44 [4] [4] [0 1 2 3 5 6 7 8 9]
44 training: Counter({4: 500}) testing iid: Counter({4: 1000})
45 [5] [5] [0 1 2 3 4 6 7 8 9]
45 training: Counter({5: 500}) testing iid: Counter({5: 1000})
46 [6] [6] [0 1 2 3 4 5 7 8 9]
46 training: Counter({6: 500}) testing iid: Counter({6: 1000})
47 [7] [7] [0 1 2 3 4 5 6 8 9]
47 training: Counter({7: 500}) testing iid: Counter({7: 1000})
48 [8] [8] [0 1 2 3 4 5 6 7 9]
48 training: Counter({8: 500}) testing iid: Counter({8: 1000})
49 [9] [9] [0 1 2 3 4 5 6 7 8]
49 training: Counter({9: 500}) testing iid: Counter({9: 1000})
50 [0] [0] [1 2 3 4 5 6 7 8 9]
50 training: Counter({0: 500}) testing iid: Counter({0: 1000})
51 [1] [1] [0 2 3 4 5 6 7 8 9]
51 training: Counter({1: 500}) testing iid: Counter({1: 1000})
52 [2] [2] [0 1 3 4 5 6 7 8 9]
52 training: Counter({2: 500}) testing iid: Counter({2: 1000})
53 [3] [3] [0 1 2 4 5 6 7 8 9]
53 training: Counter({3: 500}) testing iid: Counter({3: 1000})
54 [4] [4] [0 1 2 3 5 6 7 8 9]
54 training: Counter({4: 500}) testing iid: Counter({4: 1000})
55 [5] [5] [0 1 2 3 4 6 7 8 9]
55 training: Counter({5: 500}) testing iid: Counter({5: 1000})
56 [6] [6] [0 1 2 3 4 5 7 8 9]
56 training: Counter({6: 500}) testing iid: Counter({6: 1000})
57 [7] [7] [0 1 2 3 4 5 6 8 9]
57 training: Counter({7: 500}) testing iid: Counter({7: 1000})
58 [8] [8] [0 1 2 3 4 5 6 7 9]
58 training: Counter({8: 500}) testing iid: Counter({8: 1000})
59 [9] [9] [0 1 2 3 4 5 6 7 8]
59 training: Counter({9: 500}) testing iid: Counter({9: 1000})
60 [0] [0] [1 2 3 4 5 6 7 8 9]
60 training: Counter({0: 500}) testing iid: Counter({0: 1000})
61 [1] [1] [0 2 3 4 5 6 7 8 9]
61 training: Counter({1: 500}) testing iid: Counter({1: 1000})
62 [2] [2] [0 1 3 4 5 6 7 8 9]
62 training: Counter({2: 500}) testing iid: Counter({2: 1000})
63 [3] [3] [0 1 2 4 5 6 7 8 9]
63 training: Counter({3: 500}) testing iid: Counter({3: 1000})
64 [4] [4] [0 1 2 3 5 6 7 8 9]
64 training: Counter({4: 500}) testing iid: Counter({4: 1000})
65 [5] [5] [0 1 2 3 4 6 7 8 9]
65 training: Counter({5: 500}) testing iid: Counter({5: 1000})
66 [6] [6] [0 1 2 3 4 5 7 8 9]
66 training: Counter({6: 500}) testing iid: Counter({6: 1000})
67 [7] [7] [0 1 2 3 4 5 6 8 9]
67 training: Counter({7: 500}) testing iid: Counter({7: 1000})
68 [8] [8] [0 1 2 3 4 5 6 7 9]
68 training: Counter({8: 500}) testing iid: Counter({8: 1000})
69 [9] [9] [0 1 2 3 4 5 6 7 8]
69 training: Counter({9: 500}) testing iid: Counter({9: 1000})
70 [0] [0] [1 2 3 4 5 6 7 8 9]
70 training: Counter({0: 500}) testing iid: Counter({0: 1000})
71 [1] [1] [0 2 3 4 5 6 7 8 9]
71 training: Counter({1: 500}) testing iid: Counter({1: 1000})
72 [2] [2] [0 1 3 4 5 6 7 8 9]
72 training: Counter({2: 500}) testing iid: Counter({2: 1000})
73 [3] [3] [0 1 2 4 5 6 7 8 9]
73 training: Counter({3: 500}) testing iid: Counter({3: 1000})
74 [4] [4] [0 1 2 3 5 6 7 8 9]
74 training: Counter({4: 500}) testing iid: Counter({4: 1000})
75 [5] [5] [0 1 2 3 4 6 7 8 9]
75 training: Counter({5: 500}) testing iid: Counter({5: 1000})
76 [6] [6] [0 1 2 3 4 5 7 8 9]
76 training: Counter({6: 500}) testing iid: Counter({6: 1000})
77 [7] [7] [0 1 2 3 4 5 6 8 9]
77 training: Counter({7: 500}) testing iid: Counter({7: 1000})
78 [8] [8] [0 1 2 3 4 5 6 7 9]
78 training: Counter({8: 500}) testing iid: Counter({8: 1000})
79 [9] [9] [0 1 2 3 4 5 6 7 8]
79 training: Counter({9: 500}) testing iid: Counter({9: 1000})
80 [0] [0] [1 2 3 4 5 6 7 8 9]
80 training: Counter({0: 500}) testing iid: Counter({0: 1000})
81 [1] [1] [0 2 3 4 5 6 7 8 9]
81 training: Counter({1: 500}) testing iid: Counter({1: 1000})
82 [2] [2] [0 1 3 4 5 6 7 8 9]
82 training: Counter({2: 500}) testing iid: Counter({2: 1000})
83 [3] [3] [0 1 2 4 5 6 7 8 9]
83 training: Counter({3: 500}) testing iid: Counter({3: 1000})
84 [4] [4] [0 1 2 3 5 6 7 8 9]
84 training: Counter({4: 500}) testing iid: Counter({4: 1000})
85 [5] [5] [0 1 2 3 4 6 7 8 9]
85 training: Counter({5: 500}) testing iid: Counter({5: 1000})
86 [6] [6] [0 1 2 3 4 5 7 8 9]
86 training: Counter({6: 500}) testing iid: Counter({6: 1000})
87 [7] [7] [0 1 2 3 4 5 6 8 9]
87 training: Counter({7: 500}) testing iid: Counter({7: 1000})
88 [8] [8] [0 1 2 3 4 5 6 7 9]
88 training: Counter({8: 500}) testing iid: Counter({8: 1000})
89 [9] [9] [0 1 2 3 4 5 6 7 8]
89 training: Counter({9: 500}) testing iid: Counter({9: 1000})
90 [0] [0] [1 2 3 4 5 6 7 8 9]
90 training: Counter({0: 500}) testing iid: Counter({0: 1000})
91 [1] [1] [0 2 3 4 5 6 7 8 9]
91 training: Counter({1: 500}) testing iid: Counter({1: 1000})
92 [2] [2] [0 1 3 4 5 6 7 8 9]
92 training: Counter({2: 500}) testing iid: Counter({2: 1000})
93 [3] [3] [0 1 2 4 5 6 7 8 9]
93 training: Counter({3: 500}) testing iid: Counter({3: 1000})
94 [4] [4] [0 1 2 3 5 6 7 8 9]
94 training: Counter({4: 500}) testing iid: Counter({4: 1000})
95 [5] [5] [0 1 2 3 4 6 7 8 9]
95 training: Counter({5: 500}) testing iid: Counter({5: 1000})
96 [6] [6] [0 1 2 3 4 5 7 8 9]
96 training: Counter({6: 500}) testing iid: Counter({6: 1000})
97 [7] [7] [0 1 2 3 4 5 6 8 9]
97 training: Counter({7: 500}) testing iid: Counter({7: 1000})
98 [8] [8] [0 1 2 3 4 5 6 7 9]
98 training: Counter({8: 500}) testing iid: Counter({8: 1000})
99 [9] [9] [0 1 2 3 4 5 6 7 8]
99 training: Counter({9: 500}) testing iid: Counter({9: 1000})
Num_samples of Training set per client: [500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500]
Total_training_samples: 50000
Global test set: 10000
Finish Generating Samples, distribution saved
MobileNetV2(
  (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (layers): Sequential(
    (0): Block(
      (conv1): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): Block(
      (conv1): Conv2d(16, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=96, bias=False)
      (bn2): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(96, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(16, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (2): Block(
      (conv1): Conv2d(24, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=144, bias=False)
      (bn2): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(144, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (3): Block(
      (conv1): Conv2d(24, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(144, 144, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=144, bias=False)
      (bn2): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(144, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (4): Block(
      (conv1): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
      (bn2): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(192, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (5): Block(
      (conv1): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
      (bn2): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(192, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (6): Block(
      (conv1): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(192, 192, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=192, bias=False)
      (bn2): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(192, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (7): Block(
      (conv1): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
      (bn2): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (8): Block(
      (conv1): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
      (bn2): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (9): Block(
      (conv1): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
      (bn2): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (10): Block(
      (conv1): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
      (bn2): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(384, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(64, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (11): Block(
      (conv1): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)
      (bn2): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (12): Block(
      (conv1): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)
      (bn2): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (13): Block(
      (conv1): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(576, 576, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=576, bias=False)
      (bn2): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(576, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (14): Block(
      (conv1): Conv2d(160, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(960, 960, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=960, bias=False)
      (bn2): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(960, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (15): Block(
      (conv1): Conv2d(160, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(960, 960, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=960, bias=False)
      (bn2): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(960, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (16): Block(
      (conv1): Conv2d(160, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(960, 960, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=960, bias=False)
      (bn2): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(960, 320, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(160, 320, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (conv2): Conv2d(320, 1280, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn2): BatchNorm2d(1280, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (linear): Linear(in_features=1280, out_features=10, bias=True)
)
number of parameters: 2296922
clients initializting...
output size: 10

  0%|          | 0/100 [00:00<?, ?it/s]
  1%|          | 1/100 [00:03<06:17,  3.81s/it]
  2%|▏         | 2/100 [00:04<04:36,  2.82s/it]
  3%|▎         | 3/100 [00:04<03:27,  2.14s/it]
  4%|▍         | 4/100 [00:05<02:38,  1.65s/it]
  5%|▌         | 5/100 [00:05<02:04,  1.31s/it]
  6%|▌         | 6/100 [00:06<01:40,  1.07s/it]
  7%|▋         | 7/100 [00:06<01:24,  1.11it/s]
  8%|▊         | 8/100 [00:07<01:12,  1.27it/s]
  9%|▉         | 9/100 [00:07<01:04,  1.42it/s]
 10%|█         | 10/100 [00:08<00:58,  1.54it/s]
 11%|█         | 11/100 [00:08<00:54,  1.65it/s]
 12%|█▏        | 12/100 [00:09<00:50,  1.74it/s]
 13%|█▎        | 13/100 [00:09<00:48,  1.80it/s]
 14%|█▍        | 14/100 [00:10<00:47,  1.82it/s]
 15%|█▌        | 15/100 [00:11<00:45,  1.85it/s]
 16%|█▌        | 16/100 [00:11<00:44,  1.87it/s]
 17%|█▋        | 17/100 [00:12<00:44,  1.87it/s]
 18%|█▊        | 18/100 [00:12<00:43,  1.89it/s]
 19%|█▉        | 19/100 [00:13<00:42,  1.90it/s]
 20%|██        | 20/100 [00:13<00:42,  1.90it/s]
 21%|██        | 21/100 [00:14<00:41,  1.91it/s]
 22%|██▏       | 22/100 [00:14<00:40,  1.92it/s]
 23%|██▎       | 23/100 [00:15<00:39,  1.93it/s]
 24%|██▍       | 24/100 [00:15<00:39,  1.93it/s]
 25%|██▌       | 25/100 [00:16<00:38,  1.93it/s]
 26%|██▌       | 26/100 [00:16<00:38,  1.91it/s]
 27%|██▋       | 27/100 [00:17<00:37,  1.92it/s]
 28%|██▊       | 28/100 [00:17<00:38,  1.88it/s]
 29%|██▉       | 29/100 [00:18<00:37,  1.88it/s]
 30%|███       | 30/100 [00:18<00:37,  1.89it/s]
 31%|███       | 31/100 [00:19<00:36,  1.87it/s]
 32%|███▏      | 32/100 [00:19<00:36,  1.88it/s]
 33%|███▎      | 33/100 [00:20<00:36,  1.86it/s]
 34%|███▍      | 34/100 [00:21<00:35,  1.85it/s]
 35%|███▌      | 35/100 [00:21<00:34,  1.87it/s]
 36%|███▌      | 36/100 [00:22<00:34,  1.86it/s]
 37%|███▋      | 37/100 [00:22<00:33,  1.87it/s]
 38%|███▊      | 38/100 [00:23<00:33,  1.87it/s]
 39%|███▉      | 39/100 [00:23<00:32,  1.86it/s]
 40%|████      | 40/100 [00:24<00:32,  1.86it/s]
 41%|████      | 41/100 [00:28<01:33,  1.59s/it]
 42%|████▏     | 42/100 [00:28<01:13,  1.27s/it]
 43%|████▎     | 43/100 [00:29<00:59,  1.05s/it]
 44%|████▍     | 44/100 [00:29<00:50,  1.12it/s]
 45%|████▌     | 45/100 [00:30<00:43,  1.28it/s]
 46%|████▌     | 46/100 [00:30<00:38,  1.41it/s]
 47%|████▋     | 47/100 [00:31<00:34,  1.52it/s]
 48%|████▊     | 48/100 [00:32<00:32,  1.59it/s]
 49%|████▉     | 49/100 [00:32<00:30,  1.66it/s]
 50%|█████     | 50/100 [00:33<00:28,  1.73it/s]
 51%|█████     | 51/100 [00:33<00:27,  1.77it/s]
 52%|█████▏    | 52/100 [00:34<00:26,  1.80it/s]
 53%|█████▎    | 53/100 [00:34<00:25,  1.81it/s]
 54%|█████▍    | 54/100 [00:35<00:25,  1.84it/s]
 55%|█████▌    | 55/100 [00:35<00:24,  1.87it/s]
 56%|█████▌    | 56/100 [00:36<00:23,  1.90it/s]
 57%|█████▋    | 57/100 [00:36<00:22,  1.92it/s]
 58%|█████▊    | 58/100 [00:37<00:21,  1.93it/s]
 59%|█████▉    | 59/100 [00:37<00:21,  1.95it/s]
 60%|██████    | 60/100 [00:38<00:20,  1.92it/s]
 61%|██████    | 61/100 [00:38<00:20,  1.92it/s]
 62%|██████▏   | 62/100 [00:39<00:19,  1.94it/s]
 63%|██████▎   | 63/100 [00:39<00:18,  1.96it/s]
 64%|██████▍   | 64/100 [00:40<00:18,  1.96it/s]
 65%|██████▌   | 65/100 [00:40<00:18,  1.94it/s]
 66%|██████▌   | 66/100 [00:41<00:17,  1.93it/s]
 67%|██████▋   | 67/100 [00:41<00:17,  1.92it/s]
 68%|██████▊   | 68/100 [00:42<00:16,  1.89it/s]
 69%|██████▉   | 69/100 [00:43<00:16,  1.87it/s]
 70%|███████   | 70/100 [00:43<00:16,  1.87it/s]
 71%|███████   | 71/100 [00:44<00:15,  1.86it/s]
 72%|███████▏  | 72/100 [00:44<00:15,  1.85it/s]
 73%|███████▎  | 73/100 [00:45<00:14,  1.86it/s]
 74%|███████▍  | 74/100 [00:45<00:14,  1.83it/s]
 75%|███████▌  | 75/100 [00:46<00:13,  1.83it/s]
 76%|███████▌  | 76/100 [00:46<00:12,  1.87it/s]
 77%|███████▋  | 77/100 [00:47<00:12,  1.87it/s]
 78%|███████▊  | 78/100 [00:47<00:11,  1.87it/s]
 79%|███████▉  | 79/100 [00:48<00:11,  1.90it/s]
 80%|████████  | 80/100 [00:48<00:10,  1.89it/s]
 81%|████████  | 81/100 [00:49<00:10,  1.90it/s]
 82%|████████▏ | 82/100 [00:50<00:09,  1.91it/s]
 83%|████████▎ | 83/100 [00:54<00:27,  1.59s/it]
 84%|████████▍ | 84/100 [00:54<00:20,  1.27s/it]
 85%|████████▌ | 85/100 [00:55<00:15,  1.05s/it]
 86%|████████▌ | 86/100 [00:55<00:12,  1.12it/s]
 87%|████████▋ | 87/100 [00:56<00:10,  1.27it/s]
 88%|████████▊ | 88/100 [00:56<00:08,  1.42it/s]
 89%|████████▉ | 89/100 [00:57<00:07,  1.54it/s]
 90%|█████████ | 90/100 [00:57<00:06,  1.63it/s]
 91%|█████████ | 91/100 [00:58<00:05,  1.70it/s]
 92%|█████████▏| 92/100 [00:58<00:04,  1.74it/s]
 93%|█████████▎| 93/100 [00:59<00:03,  1.79it/s]
 94%|█████████▍| 94/100 [00:59<00:03,  1.81it/s]
 95%|█████████▌| 95/100 [01:00<00:02,  1.84it/s]
 96%|█████████▌| 96/100 [01:00<00:02,  1.88it/s]
 97%|█████████▋| 97/100 [01:01<00:01,  1.90it/s]
 98%|█████████▊| 98/100 [01:01<00:01,  1.89it/s]
 99%|█████████▉| 99/100 [01:02<00:00,  1.88it/s]
100%|██████████| 100/100 [01:03<00:00,  1.88it/s]
100%|██████████| 100/100 [01:03<00:00,  1.59it/s]
Number of users per round / total users: 10  /  100
Finished creating FL server.
=== Training starts: algorithm FedFea ===
-------------Round number:  0  -------------
selected users: [26, 86, 2, 55, 75, 93, 16, 73, 54, 95]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.001
training loss: tensor(1.7677) feature loss: tensor(0.5406)
Local adapation with distilling: 0.001
training loss: tensor(1.9181) feature loss: tensor(0.6127)
Local adapation with distilling: 0.001
training loss: tensor(2.1076) feature loss: tensor(0.5554)
Local adapation with distilling: 0.001
training loss: tensor(1.9448) feature loss: tensor(0.6370)
Local adapation with distilling: 0.001
training loss: tensor(1.9533) feature loss: tensor(0.6154)
Local adapation with distilling: 0.001
training loss: tensor(1.7989) feature loss: tensor(0.5193)
Local adapation with distilling: 0.001
training loss: tensor(1.8471) feature loss: tensor(0.5868)
Local adapation with distilling: 0.001
training loss: tensor(1.7353) feature loss: tensor(0.5183)
Local adapation with distilling: 0.001
training loss: tensor(2.0230) feature loss: tensor(0.5091)
Local adapation with distilling: 0.001
training loss: tensor(1.8215) feature loss: tensor(0.6322)
Global Model Acc on global data: 0.1003 length of data: 10000
save a model
-------------Round number:  1  -------------
selected users: [80, 84, 33, 81, 93, 17, 36, 82, 69, 65]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.000982
training loss: tensor(2.0097) feature loss: tensor(0.6062)
Local adapation with distilling: 0.000982
training loss: tensor(1.6153) feature loss: tensor(0.4242)
Local adapation with distilling: 0.000982
training loss: tensor(1.7223) feature loss: tensor(0.6018)
Local adapation with distilling: 0.000982
training loss: tensor(1.7549) feature loss: tensor(0.5627)
Local adapation with distilling: 0.000982
training loss: tensor(1.8363) feature loss: tensor(0.5891)
Local adapation with distilling: 0.000982
training loss: tensor(2.0161) feature loss: tensor(0.6802)
Local adapation with distilling: 0.000982
training loss: tensor(1.8004) feature loss: tensor(0.4825)
Local adapation with distilling: 0.000982
training loss: tensor(1.8552) feature loss: tensor(0.5365)
Local adapation with distilling: 0.000982
training loss: tensor(1.9864) feature loss: tensor(0.6636)
Local adapation with distilling: 0.000982
training loss: tensor(1.8599) feature loss: tensor(0.5183)
Global Model Acc on global data: 0.1408 length of data: 10000
save a model
-------------Round number:  2  -------------
selected users: [83, 30, 56, 24, 16, 23, 2, 27, 28, 13]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.000964
training loss: tensor(1.3957) feature loss: tensor(0.5069)
Local adapation with distilling: 0.000964
training loss: tensor(1.3894) feature loss: tensor(0.4846)
Local adapation with distilling: 0.000964
training loss: tensor(1.3358) feature loss: tensor(0.4679)
Local adapation with distilling: 0.000964
training loss: tensor(1.6444) feature loss: tensor(0.5204)
Local adapation with distilling: 0.000964
training loss: tensor(1.4075) feature loss: tensor(0.4901)
Local adapation with distilling: 0.000964
training loss: tensor(1.3989) feature loss: tensor(0.5145)
Local adapation with distilling: 0.000964
training loss: tensor(1.3822) feature loss: tensor(0.4719)
Local adapation with distilling: 0.000964
training loss: tensor(1.4247) feature loss: tensor(0.4845)
Local adapation with distilling: 0.000964
training loss: tensor(1.3903) feature loss: tensor(0.5008)
Local adapation with distilling: 0.000964
training loss: tensor(1.4132) feature loss: tensor(0.4726)
Global Model Acc on global data: 0.1381 length of data: 10000
-------------Round number:  3  -------------
selected users: [93, 67, 6, 64, 96, 83, 98, 42, 25, 15]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.000946
training loss: tensor(1.2376) feature loss: tensor(0.4021)
Local adapation with distilling: 0.000946
training loss: tensor(1.2761) feature loss: tensor(0.4450)
Local adapation with distilling: 0.000946
training loss: tensor(1.3120) feature loss: tensor(0.4398)
Local adapation with distilling: 0.000946
training loss: tensor(1.3473) feature loss: tensor(0.4237)
Local adapation with distilling: 0.000946
training loss: tensor(1.2673) feature loss: tensor(0.4165)
Local adapation with distilling: 0.000946
training loss: tensor(1.2835) feature loss: tensor(0.4382)
Local adapation with distilling: 0.000946
training loss: tensor(1.2240) feature loss: tensor(0.4471)
Local adapation with distilling: 0.000946
training loss: tensor(1.1737) feature loss: tensor(0.4066)
Local adapation with distilling: 0.000946
training loss: tensor(1.1711) feature loss: tensor(0.4458)
Local adapation with distilling: 0.000946
training loss: tensor(1.2382) feature loss: tensor(0.4448)
Global Model Acc on global data: 0.1423 length of data: 10000
save a model
-------------Round number:  4  -------------
selected users: [20, 10, 96, 16, 63, 24, 53, 97, 41, 47]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.4926) feature loss: tensor(0.5597)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.5793) feature loss: tensor(0.5679)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.1516) feature loss: tensor(0.5052)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.1303) feature loss: tensor(0.5014)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.1396) feature loss: tensor(0.4856)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.2200) feature loss: tensor(0.4970)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.1356) feature loss: tensor(0.5042)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.2633) feature loss: tensor(0.5278)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.6088) feature loss: tensor(0.5526)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.2911) feature loss: tensor(0.5407)
Global Model Acc on global data: 0.1608 length of data: 10000
save a model
-------------Round number:  5  -------------
selected users: [66, 32, 46, 28, 74, 23, 10, 20, 17, 35]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.00091
training loss: tensor(1.1454) feature loss: tensor(0.4873)
Local adapation with distilling: 0.00091
training loss: tensor(1.1971) feature loss: tensor(0.5211)
Local adapation with distilling: 0.00091
training loss: tensor(1.1138) feature loss: tensor(0.4858)
Local adapation with distilling: 0.00091
training loss: tensor(1.7841) feature loss: tensor(0.6015)
Local adapation with distilling: 0.00091
training loss: tensor(1.2089) feature loss: tensor(0.4627)
Local adapation with distilling: 0.00091
training loss: tensor(1.0670) feature loss: tensor(0.4638)
Local adapation with distilling: 0.00091
training loss: tensor(1.5524) feature loss: tensor(0.5549)
Local adapation with distilling: 0.00091
training loss: tensor(1.4188) feature loss: tensor(0.5365)
Local adapation with distilling: 0.00091
training loss: tensor(1.2341) feature loss: tensor(0.4879)
Local adapation with distilling: 0.00091
training loss: tensor(1.4811) feature loss: tensor(0.5984)
Global Model Acc on global data: 0.1571 length of data: 10000
-------------Round number:  6  -------------
selected users: [17, 34, 0, 45, 60, 86, 20, 47, 44, 81]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.000892
training loss: tensor(1.2803) feature loss: tensor(0.6634)
Local adapation with distilling: 0.000892
training loss: tensor(1.0629) feature loss: tensor(0.4757)
Local adapation with distilling: 0.000892
training loss: tensor(1.4376) feature loss: tensor(0.6356)
Local adapation with distilling: 0.000892
training loss: tensor(1.1493) feature loss: tensor(0.5078)
Local adapation with distilling: 0.000892
training loss: tensor(1.4155) feature loss: tensor(0.6442)
Local adapation with distilling: 0.000892
training loss: tensor(1.2581) feature loss: tensor(0.5395)
Local adapation with distilling: 0.000892
training loss: tensor(1.4406) feature loss: tensor(0.6285)
Local adapation with distilling: 0.000892
training loss: tensor(1.1965) feature loss: tensor(0.5586)
Local adapation with distilling: 0.000892
training loss: tensor(1.0603) feature loss: tensor(0.5032)
Local adapation with distilling: 0.000892
training loss: tensor(2.3273) feature loss: tensor(0.6498)
Global Model Acc on global data: 0.1618 length of data: 10000
save a model
-------------Round number:  7  -------------
selected users: [37, 26, 78, 91, 49, 15, 93, 71, 86, 22]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.000874
training loss: tensor(1.7492) feature loss: tensor(0.6999)
Local adapation with distilling: 0.000874
training loss: tensor(1.6462) feature loss: tensor(0.7323)
Local adapation with distilling: 0.000874
training loss: tensor(2.4959) feature loss: tensor(0.7344)
Local adapation with distilling: 0.000874
training loss: tensor(2.1913) feature loss: tensor(0.8004)
Local adapation with distilling: 0.000874
training loss: tensor(4.0566) feature loss: tensor(0.6968)
Local adapation with distilling: 0.000874
training loss: tensor(1.8256) feature loss: tensor(0.7298)
Local adapation with distilling: 0.000874
training loss: tensor(1.7645) feature loss: tensor(0.7089)
Local adapation with distilling: 0.000874
training loss: tensor(2.2471) feature loss: tensor(0.8132)
Local adapation with distilling: 0.000874
training loss: tensor(1.5808) feature loss: tensor(0.6980)
Local adapation with distilling: 0.000874
training loss: tensor(1.7233) feature loss: tensor(0.7213)
Global Model Acc on global data: 0.1915 length of data: 10000
save a model
-------------Round number:  8  -------------
selected users: [17, 23, 1, 44, 55, 99, 86, 29, 62, 33]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.000856
training loss: tensor(1.4318) feature loss: tensor(0.5944)
Local adapation with distilling: 0.000856
training loss: tensor(1.4213) feature loss: tensor(0.5865)
Local adapation with distilling: 0.000856
training loss: tensor(1.7011) feature loss: tensor(0.5697)
Local adapation with distilling: 0.000856
training loss: tensor(1.3545) feature loss: tensor(0.5020)
Local adapation with distilling: 0.000856
training loss: tensor(1.5685) feature loss: tensor(0.6569)
Local adapation with distilling: 0.000856
training loss: tensor(2.6675) feature loss: tensor(0.6722)
Local adapation with distilling: 0.000856
training loss: tensor(1.3284) feature loss: tensor(0.5414)
Local adapation with distilling: 0.000856
training loss: tensor(2.1605) feature loss: tensor(0.6381)
Local adapation with distilling: 0.000856
training loss: tensor(1.3485) feature loss: tensor(0.5376)
Local adapation with distilling: 0.000856
training loss: tensor(1.3783) feature loss: tensor(0.5408)
Global Model Acc on global data: 0.1515 length of data: 10000
-------------Round number:  9  -------------
selected users: [75, 42, 46, 68, 3, 39, 23, 20, 70, 73]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(1.1613) feature loss: tensor(0.5461)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(1.1391) feature loss: tensor(0.5213)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(1.0087) feature loss: tensor(0.5025)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(1.9260) feature loss: tensor(0.6292)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(1.0439) feature loss: tensor(0.5282)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(1.9005) feature loss: tensor(0.5977)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(1.0571) feature loss: tensor(0.5188)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(1.2446) feature loss: tensor(0.5751)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(1.2529) feature loss: tensor(0.5930)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(1.0969) feature loss: tensor(0.5028)
Global Model Acc on global data: 0.1963 length of data: 10000
save a model
-------------Round number:  10  -------------
selected users: [19, 14, 43, 37, 66, 3, 79, 41, 38, 68]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(1.9237) feature loss: tensor(0.6665)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(1.2850) feature loss: tensor(0.6024)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(1.1574) feature loss: tensor(0.5300)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(1.3505) feature loss: tensor(0.6427)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(1.2118) feature loss: tensor(0.6242)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(1.1687) feature loss: tensor(0.5543)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(1.5662) feature loss: tensor(0.7056)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(1.6785) feature loss: tensor(0.6587)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(1.6522) feature loss: tensor(0.6622)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(1.5787) feature loss: tensor(0.6645)
Global Model Acc on global data: 0.2188 length of data: 10000
save a model
-------------Round number:  11  -------------
selected users: [46, 49, 22, 58, 41, 98, 62, 29, 30, 51]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(1.1230) feature loss: tensor(0.5583)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(1.3630) feature loss: tensor(0.6214)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(1.2995) feature loss: tensor(0.6519)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(1.4921) feature loss: tensor(0.6392)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(1.5523) feature loss: tensor(0.6824)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(1.2724) feature loss: tensor(0.6162)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(1.1456) feature loss: tensor(0.5949)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(1.3764) feature loss: tensor(0.6083)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(1.1586) feature loss: tensor(0.5986)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(1.5717) feature loss: tensor(0.6135)
Global Model Acc on global data: 0.2227 length of data: 10000
save a model
-------------Round number:  12  -------------
selected users: [17, 41, 92, 14, 68, 31, 89, 15, 21, 60]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(1.4228) feature loss: tensor(0.6410)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(1.3867) feature loss: tensor(0.6475)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(1.2344) feature loss: tensor(0.5503)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(1.2338) feature loss: tensor(0.5644)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(1.3492) feature loss: tensor(0.6372)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(1.4754) feature loss: tensor(0.6637)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(1.3955) feature loss: tensor(0.6413)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(1.4504) feature loss: tensor(0.5236)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(1.3444) feature loss: tensor(0.6316)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(1.2925) feature loss: tensor(0.5982)
Global Model Acc on global data: 0.2012 length of data: 10000
-------------Round number:  13  -------------
selected users: [37, 62, 83, 14, 43, 9, 44, 31, 69, 57]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(1.3483) feature loss: tensor(0.6457)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(1.1917) feature loss: tensor(0.5264)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(1.0775) feature loss: tensor(0.5332)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(1.2642) feature loss: tensor(0.6612)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(1.2066) feature loss: tensor(0.6311)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(1.4266) feature loss: tensor(0.6202)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(1.2049) feature loss: tensor(0.5717)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(1.3018) feature loss: tensor(0.6797)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(1.2764) feature loss: tensor(0.5309)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(1.2628) feature loss: tensor(0.6487)
Global Model Acc on global data: 0.1745 length of data: 10000
-------------Round number:  14  -------------
selected users: [24, 39, 35, 44, 55, 70, 82, 40, 91, 65]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.000748
training loss: tensor(0.8980) feature loss: tensor(0.5025)
Local adapation with distilling: 0.000748
training loss: tensor(1.2138) feature loss: tensor(0.5963)
Local adapation with distilling: 0.000748
training loss: tensor(1.3412) feature loss: tensor(0.6584)
Local adapation with distilling: 0.000748
training loss: tensor(1.0845) feature loss: tensor(0.5304)
Local adapation with distilling: 0.000748
training loss: tensor(1.2346) feature loss: tensor(0.5725)
Local adapation with distilling: 0.000748
training loss: tensor(1.2869) feature loss: tensor(0.6246)
Local adapation with distilling: 0.000748
training loss: tensor(0.9336) feature loss: tensor(0.5193)
Local adapation with distilling: 0.000748
training loss: tensor(1.2679) feature loss: tensor(0.6007)
Local adapation with distilling: 0.000748
training loss: tensor(1.2842) feature loss: tensor(0.6122)
Local adapation with distilling: 0.000748
training loss: tensor(1.3458) feature loss: tensor(0.6591)
Global Model Acc on global data: 0.1883 length of data: 10000
-------------Round number:  15  -------------
selected users: [84, 36, 57, 51, 46, 78, 93, 14, 11, 59]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.00073
training loss: tensor(1.1535) feature loss: tensor(0.5708)
Local adapation with distilling: 0.00073
training loss: tensor(1.4148) feature loss: tensor(0.6379)
Local adapation with distilling: 0.00073
training loss: tensor(1.2518) feature loss: tensor(0.5868)
Local adapation with distilling: 0.00073
training loss: tensor(1.2263) feature loss: tensor(0.6005)
Local adapation with distilling: 0.00073
training loss: tensor(1.3083) feature loss: tensor(0.6057)
Local adapation with distilling: 0.00073
training loss: tensor(1.7874) feature loss: tensor(0.6859)
Local adapation with distilling: 0.00073
training loss: tensor(1.1982) feature loss: tensor(0.5943)
Local adapation with distilling: 0.00073
training loss: tensor(1.1109) feature loss: tensor(0.5431)
Local adapation with distilling: 0.00073
training loss: tensor(1.2840) feature loss: tensor(0.6515)
Local adapation with distilling: 0.00073
training loss: tensor(1.6119) feature loss: tensor(0.5960)
Global Model Acc on global data: 0.1839 length of data: 10000
-------------Round number:  16  -------------
selected users: [7, 25, 71, 42, 47, 29, 63, 88, 50, 9]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.000712
training loss: tensor(1.1064) feature loss: tensor(0.5704)
Local adapation with distilling: 0.000712
training loss: tensor(1.0213) feature loss: tensor(0.5387)
Local adapation with distilling: 0.000712
training loss: tensor(1.1958) feature loss: tensor(0.6066)
Local adapation with distilling: 0.000712
training loss: tensor(1.0818) feature loss: tensor(0.5680)
Local adapation with distilling: 0.000712
training loss: tensor(1.2642) feature loss: tensor(0.6384)
Local adapation with distilling: 0.000712
training loss: tensor(1.2237) feature loss: tensor(0.5728)
Local adapation with distilling: 0.000712
training loss: tensor(1.1423) feature loss: tensor(0.5578)
Local adapation with distilling: 0.000712
training loss: tensor(1.5024) feature loss: tensor(0.6293)
Local adapation with distilling: 0.000712
training loss: tensor(1.4469) feature loss: tensor(0.6930)
Local adapation with distilling: 0.000712
training loss: tensor(1.2120) feature loss: tensor(0.5697)
Global Model Acc on global data: 0.2494 length of data: 10000
save a model
-------------Round number:  17  -------------
selected users: [71, 28, 9, 4, 73, 34, 94, 92, 47, 37]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.000694
training loss: tensor(0.9287) feature loss: tensor(0.4187)
Local adapation with distilling: 0.000694
training loss: tensor(1.0004) feature loss: tensor(0.4419)
Local adapation with distilling: 0.000694
training loss: tensor(0.9321) feature loss: tensor(0.4116)
Local adapation with distilling: 0.000694
training loss: tensor(0.8611) feature loss: tensor(0.4172)
Local adapation with distilling: 0.000694
training loss: tensor(1.0191) feature loss: tensor(0.4229)
Local adapation with distilling: 0.000694
training loss: tensor(0.8512) feature loss: tensor(0.4172)
Local adapation with distilling: 0.000694
training loss: tensor(0.8648) feature loss: tensor(0.3905)
Local adapation with distilling: 0.000694
training loss: tensor(1.1568) feature loss: tensor(0.5395)
Local adapation with distilling: 0.000694
training loss: tensor(0.9858) feature loss: tensor(0.4585)
Local adapation with distilling: 0.000694
training loss: tensor(0.9836) feature loss: tensor(0.5228)
Global Model Acc on global data: 0.2125 length of data: 10000
-------------Round number:  18  -------------
selected users: [53, 47, 43, 54, 33, 48, 0, 12, 44, 91]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.8891) feature loss: tensor(0.4646)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.8747) feature loss: tensor(0.4300)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.9030) feature loss: tensor(0.4414)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.8050) feature loss: tensor(0.3826)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.9120) feature loss: tensor(0.4269)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(1.0201) feature loss: tensor(0.4537)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(1.0079) feature loss: tensor(0.4374)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.9972) feature loss: tensor(0.4289)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.8330) feature loss: tensor(0.3985)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.9562) feature loss: tensor(0.4491)
Global Model Acc on global data: 0.2077 length of data: 10000
-------------Round number:  19  -------------
selected users: [85, 72, 16, 18, 2, 38, 90, 30, 83, 61]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(1.0860) feature loss: tensor(0.5464)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(1.1479) feature loss: tensor(0.6552)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(1.3093) feature loss: tensor(0.5661)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(1.1951) feature loss: tensor(0.5930)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(1.0961) feature loss: tensor(0.5782)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(1.1558) feature loss: tensor(0.5801)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(1.1097) feature loss: tensor(0.5625)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(1.0547) feature loss: tensor(0.5385)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(1.0409) feature loss: tensor(0.5702)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(1.2621) feature loss: tensor(0.5718)
Global Model Acc on global data: 0.2449 length of data: 10000
-------------Round number:  20  -------------
selected users: [70, 74, 2, 44, 56, 48, 12, 36, 0, 49]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.00064
training loss: tensor(0.9967) feature loss: tensor(0.4754)
Local adapation with distilling: 0.00064
training loss: tensor(0.8764) feature loss: tensor(0.4192)
Local adapation with distilling: 0.00064
training loss: tensor(1.0198) feature loss: tensor(0.4568)
Local adapation with distilling: 0.00064
training loss: tensor(0.8321) feature loss: tensor(0.3957)
Local adapation with distilling: 0.00064
training loss: tensor(1.0331) feature loss: tensor(0.4417)
Local adapation with distilling: 0.00064
training loss: tensor(1.1604) feature loss: tensor(0.4289)
Local adapation with distilling: 0.00064
training loss: tensor(0.9068) feature loss: tensor(0.4052)
Local adapation with distilling: 0.00064
training loss: tensor(1.0037) feature loss: tensor(0.4150)
Local adapation with distilling: 0.00064
training loss: tensor(1.0037) feature loss: tensor(0.4191)
Local adapation with distilling: 0.00064
training loss: tensor(1.7227) feature loss: tensor(0.5133)
Global Model Acc on global data: 0.2263 length of data: 10000
-------------Round number:  21  -------------
selected users: [23, 81, 85, 34, 62, 46, 42, 31, 93, 11]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(1.2434) feature loss: tensor(0.6120)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(1.2025) feature loss: tensor(0.5520)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(1.5118) feature loss: tensor(0.5961)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(1.1162) feature loss: tensor(0.5240)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(1.0957) feature loss: tensor(0.5739)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(1.2118) feature loss: tensor(0.6005)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(1.1738) feature loss: tensor(0.5696)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(1.1223) feature loss: tensor(0.5161)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(1.3332) feature loss: tensor(0.6913)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(1.3020) feature loss: tensor(0.5825)
Global Model Acc on global data: 0.2581 length of data: 10000
save a model
-------------Round number:  22  -------------
selected users: [2, 49, 82, 31, 37, 12, 87, 42, 99, 85]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(1.0829) feature loss: tensor(0.5745)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(1.7012) feature loss: tensor(0.5560)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(1.0796) feature loss: tensor(0.5604)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(1.2071) feature loss: tensor(0.5925)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(1.5813) feature loss: tensor(0.6672)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(1.1980) feature loss: tensor(0.7038)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(1.5517) feature loss: tensor(0.5607)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(1.0989) feature loss: tensor(0.5832)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(1.6423) feature loss: tensor(0.5448)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(1.4288) feature loss: tensor(0.7188)
Global Model Acc on global data: 0.242 length of data: 10000
-------------Round number:  23  -------------
selected users: [26, 80, 82, 68, 77, 37, 3, 55, 20, 17]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.000586
training loss: tensor(1.1238) feature loss: tensor(0.4929)
Local adapation with distilling: 0.000586
training loss: tensor(1.2517) feature loss: tensor(0.5549)
Local adapation with distilling: 0.000586
training loss: tensor(0.9260) feature loss: tensor(0.4768)
Local adapation with distilling: 0.000586
training loss: tensor(1.3566) feature loss: tensor(0.5282)
Local adapation with distilling: 0.000586
training loss: tensor(1.0163) feature loss: tensor(0.5165)
Local adapation with distilling: 0.000586
training loss: tensor(1.0418) feature loss: tensor(0.5212)
Local adapation with distilling: 0.000586
training loss: tensor(1.1161) feature loss: tensor(0.5471)
Local adapation with distilling: 0.000586
training loss: tensor(0.9961) feature loss: tensor(0.4986)
Local adapation with distilling: 0.000586
training loss: tensor(1.1344) feature loss: tensor(0.6323)
Local adapation with distilling: 0.000586
training loss: tensor(0.9919) feature loss: tensor(0.4772)
Global Model Acc on global data: 0.2785 length of data: 10000
save a model
-------------Round number:  24  -------------
selected users: [26, 31, 37, 86, 76, 14, 88, 48, 71, 67]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.000568
training loss: tensor(1.0020) feature loss: tensor(0.5311)
Local adapation with distilling: 0.000568
training loss: tensor(1.0130) feature loss: tensor(0.4917)
Local adapation with distilling: 0.000568
training loss: tensor(0.7754) feature loss: tensor(0.4537)
Local adapation with distilling: 0.000568
training loss: tensor(0.9567) feature loss: tensor(0.4904)
Local adapation with distilling: 0.000568
training loss: tensor(0.8853) feature loss: tensor(0.4569)
Local adapation with distilling: 0.000568
training loss: tensor(0.9232) feature loss: tensor(0.4429)
Local adapation with distilling: 0.000568
training loss: tensor(1.3622) feature loss: tensor(0.5107)
Local adapation with distilling: 0.000568
training loss: tensor(1.0627) feature loss: tensor(0.4707)
Local adapation with distilling: 0.000568
training loss: tensor(1.0729) feature loss: tensor(0.5112)
Local adapation with distilling: 0.000568
training loss: tensor(0.8204) feature loss: tensor(0.5006)
Global Model Acc on global data: 0.3269 length of data: 10000
save a model
-------------Round number:  25  -------------
selected users: [41, 29, 33, 65, 74, 6, 57, 89, 87, 98]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.00055
training loss: tensor(1.2771) feature loss: tensor(0.5004)
Local adapation with distilling: 0.00055
training loss: tensor(1.2783) feature loss: tensor(0.4942)
Local adapation with distilling: 0.00055
training loss: tensor(1.0025) feature loss: tensor(0.4412)
Local adapation with distilling: 0.00055
training loss: tensor(1.3757) feature loss: tensor(0.5947)
Local adapation with distilling: 0.00055
training loss: tensor(1.1082) feature loss: tensor(0.4896)
Local adapation with distilling: 0.00055
training loss: tensor(1.1762) feature loss: tensor(0.5476)
Local adapation with distilling: 0.00055
training loss: tensor(1.1630) feature loss: tensor(0.5715)
Local adapation with distilling: 0.00055
training loss: tensor(1.3713) feature loss: tensor(0.4815)
Local adapation with distilling: 0.00055
training loss: tensor(0.9129) feature loss: tensor(0.4590)
Local adapation with distilling: 0.00055
training loss: tensor(1.1354) feature loss: tensor(0.4553)
Global Model Acc on global data: 0.3401 length of data: 10000
save a model
-------------Round number:  26  -------------
selected users: [8, 69, 84, 41, 25, 5, 63, 95, 33, 70]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.000532
training loss: tensor(1.0337) feature loss: tensor(0.5054)
Local adapation with distilling: 0.000532
training loss: tensor(1.1653) feature loss: tensor(0.5881)
Local adapation with distilling: 0.000532
training loss: tensor(0.9741) feature loss: tensor(0.5275)
Local adapation with distilling: 0.000532
training loss: tensor(1.1149) feature loss: tensor(0.5091)
Local adapation with distilling: 0.000532
training loss: tensor(0.9089) feature loss: tensor(0.5033)
Local adapation with distilling: 0.000532
training loss: tensor(0.9517) feature loss: tensor(0.5100)
Local adapation with distilling: 0.000532
training loss: tensor(1.0267) feature loss: tensor(0.5284)
Local adapation with distilling: 0.000532
training loss: tensor(1.1181) feature loss: tensor(0.6017)
Local adapation with distilling: 0.000532
training loss: tensor(0.9705) feature loss: tensor(0.4705)
Local adapation with distilling: 0.000532
training loss: tensor(1.0873) feature loss: tensor(0.5687)
Global Model Acc on global data: 0.3406 length of data: 10000
save a model
-------------Round number:  27  -------------
selected users: [89, 68, 43, 50, 40, 95, 27, 85, 22, 44]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.000514
training loss: tensor(0.9710) feature loss: tensor(0.4112)
Local adapation with distilling: 0.000514
training loss: tensor(0.9479) feature loss: tensor(0.4147)
Local adapation with distilling: 0.000514
training loss: tensor(0.9527) feature loss: tensor(0.3639)
Local adapation with distilling: 0.000514
training loss: tensor(0.9398) feature loss: tensor(0.4371)
Local adapation with distilling: 0.000514
training loss: tensor(0.9113) feature loss: tensor(0.3891)
Local adapation with distilling: 0.000514
training loss: tensor(0.7751) feature loss: tensor(0.3741)
Local adapation with distilling: 0.000514
training loss: tensor(0.8193) feature loss: tensor(0.3670)
Local adapation with distilling: 0.000514
training loss: tensor(0.8668) feature loss: tensor(0.5094)
Local adapation with distilling: 0.000514
training loss: tensor(1.0613) feature loss: tensor(0.4060)
Local adapation with distilling: 0.000514
training loss: tensor(0.7976) feature loss: tensor(0.3653)
Global Model Acc on global data: 0.3239 length of data: 10000
-------------Round number:  28  -------------
selected users: [67, 14, 0, 86, 13, 18, 30, 36, 52, 95]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.000496
training loss: tensor(0.7670) feature loss: tensor(0.3663)
Local adapation with distilling: 0.000496
training loss: tensor(0.8976) feature loss: tensor(0.3657)
Local adapation with distilling: 0.000496
training loss: tensor(0.8749) feature loss: tensor(0.4390)
Local adapation with distilling: 0.000496
training loss: tensor(0.8521) feature loss: tensor(0.3692)
Local adapation with distilling: 0.000496
training loss: tensor(0.8267) feature loss: tensor(0.4137)
Local adapation with distilling: 0.000496
training loss: tensor(0.8699) feature loss: tensor(0.4195)
Local adapation with distilling: 0.000496
training loss: tensor(0.8245) feature loss: tensor(0.3990)
Local adapation with distilling: 0.000496
training loss: tensor(1.0439) feature loss: tensor(0.4642)
Local adapation with distilling: 0.000496
training loss: tensor(0.9163) feature loss: tensor(0.3750)
Local adapation with distilling: 0.000496
training loss: tensor(0.7324) feature loss: tensor(0.3674)
Global Model Acc on global data: 0.3298 length of data: 10000
-------------Round number:  29  -------------
selected users: [73, 8, 10, 7, 19, 71, 92, 25, 38, 12]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.9376) feature loss: tensor(0.4302)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(1.0773) feature loss: tensor(0.5101)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(1.0100) feature loss: tensor(0.4525)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.9437) feature loss: tensor(0.4642)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(1.4557) feature loss: tensor(0.4594)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(1.2213) feature loss: tensor(0.4627)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.8888) feature loss: tensor(0.4222)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.8228) feature loss: tensor(0.4216)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(1.0227) feature loss: tensor(0.4465)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.9439) feature loss: tensor(0.4286)
Global Model Acc on global data: 0.3726 length of data: 10000
save a model
-------------Round number:  30  -------------
selected users: [20, 91, 34, 52, 8, 74, 21, 88, 80, 89]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.7693) feature loss: tensor(0.3912)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.9538) feature loss: tensor(0.4187)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.8070) feature loss: tensor(0.3540)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.6706) feature loss: tensor(0.3380)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.7584) feature loss: tensor(0.3631)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.9012) feature loss: tensor(0.4499)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.9118) feature loss: tensor(0.3496)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.7886) feature loss: tensor(0.3834)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.8076) feature loss: tensor(0.4256)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(1.0471) feature loss: tensor(0.4156)
Global Model Acc on global data: 0.3334 length of data: 10000
-------------Round number:  31  -------------
selected users: [17, 33, 76, 3, 56, 0, 37, 8, 60, 67]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.7981) feature loss: tensor(0.4166)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.7946) feature loss: tensor(0.4168)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.8688) feature loss: tensor(0.4412)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.8255) feature loss: tensor(0.4113)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.9387) feature loss: tensor(0.4353)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.8774) feature loss: tensor(0.4611)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.8226) feature loss: tensor(0.4178)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.9506) feature loss: tensor(0.4665)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.8224) feature loss: tensor(0.4309)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.7900) feature loss: tensor(0.4132)
Global Model Acc on global data: 0.3376 length of data: 10000
-------------Round number:  32  -------------
selected users: [22, 39, 85, 97, 55, 33, 80, 13, 27, 96]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(1.2225) feature loss: tensor(0.4813)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(1.4490) feature loss: tensor(0.4965)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.9728) feature loss: tensor(0.4893)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(1.1414) feature loss: tensor(0.6305)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(1.1913) feature loss: tensor(0.4478)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.8540) feature loss: tensor(0.4209)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.9632) feature loss: tensor(0.4615)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.9109) feature loss: tensor(0.4555)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(1.0925) feature loss: tensor(0.5768)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(1.2745) feature loss: tensor(0.6419)
Global Model Acc on global data: 0.3411 length of data: 10000
-------------Round number:  33  -------------
selected users: [56, 90, 95, 82, 60, 71, 6, 81, 2, 70]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.7607) feature loss: tensor(0.3592)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.8886) feature loss: tensor(0.4464)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.7110) feature loss: tensor(0.3607)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.8195) feature loss: tensor(0.4178)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.7882) feature loss: tensor(0.4027)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(1.0316) feature loss: tensor(0.4647)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.7951) feature loss: tensor(0.3708)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(1.0813) feature loss: tensor(0.4542)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.9188) feature loss: tensor(0.4160)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.8111) feature loss: tensor(0.3828)
Global Model Acc on global data: 0.3396 length of data: 10000
-------------Round number:  34  -------------
selected users: [14, 74, 15, 4, 32, 59, 91, 10, 50, 53]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.000388
training loss: tensor(0.9300) feature loss: tensor(0.3827)
Local adapation with distilling: 0.000388
training loss: tensor(1.0062) feature loss: tensor(0.3766)
Local adapation with distilling: 0.000388
training loss: tensor(0.8946) feature loss: tensor(0.4246)
Local adapation with distilling: 0.000388
training loss: tensor(1.0069) feature loss: tensor(0.4323)
Local adapation with distilling: 0.000388
training loss: tensor(1.1019) feature loss: tensor(0.5471)
Local adapation with distilling: 0.000388
training loss: tensor(1.4092) feature loss: tensor(0.4333)
Local adapation with distilling: 0.000388
training loss: tensor(0.9547) feature loss: tensor(0.4015)
Local adapation with distilling: 0.000388
training loss: tensor(0.7630) feature loss: tensor(0.3972)
Local adapation with distilling: 0.000388
training loss: tensor(0.8580) feature loss: tensor(0.3842)
Local adapation with distilling: 0.000388
training loss: tensor(0.7710) feature loss: tensor(0.3613)
Global Model Acc on global data: 0.3375 length of data: 10000
-------------Round number:  35  -------------
selected users: [40, 71, 98, 27, 70, 31, 10, 24, 51, 35]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.00037
training loss: tensor(0.6626) feature loss: tensor(0.3428)
Local adapation with distilling: 0.00037
training loss: tensor(0.8191) feature loss: tensor(0.3787)
Local adapation with distilling: 0.00037
training loss: tensor(0.9288) feature loss: tensor(0.3863)
Local adapation with distilling: 0.00037
training loss: tensor(0.8098) feature loss: tensor(0.3190)
Local adapation with distilling: 0.00037
training loss: tensor(0.6922) feature loss: tensor(0.3457)
Local adapation with distilling: 0.00037
training loss: tensor(0.8093) feature loss: tensor(0.3929)
Local adapation with distilling: 0.00037
training loss: tensor(0.6640) feature loss: tensor(0.3364)
Local adapation with distilling: 0.00037
training loss: tensor(0.6736) feature loss: tensor(0.3320)
Local adapation with distilling: 0.00037
training loss: tensor(0.8916) feature loss: tensor(0.3523)
Local adapation with distilling: 0.00037
training loss: tensor(0.8529) feature loss: tensor(0.4398)
Global Model Acc on global data: 0.3205 length of data: 10000
-------------Round number:  36  -------------
selected users: [59, 42, 2, 27, 28, 75, 58, 68, 52, 74]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(1.2802) feature loss: tensor(0.4613)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(1.0150) feature loss: tensor(0.4370)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(1.0070) feature loss: tensor(0.4695)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.8760) feature loss: tensor(0.4324)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(1.0710) feature loss: tensor(0.4712)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.8251) feature loss: tensor(0.4245)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(1.0577) feature loss: tensor(0.4592)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(1.1206) feature loss: tensor(0.4749)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.9663) feature loss: tensor(0.4858)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.8911) feature loss: tensor(0.4270)
Global Model Acc on global data: 0.3533 length of data: 10000
-------------Round number:  37  -------------
selected users: [61, 49, 86, 78, 5, 91, 81, 82, 89, 18]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(1.0244) feature loss: tensor(0.4157)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(1.0768) feature loss: tensor(0.4094)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(1.0721) feature loss: tensor(0.3837)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.8873) feature loss: tensor(0.5143)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.7455) feature loss: tensor(0.3869)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.9338) feature loss: tensor(0.3988)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.9321) feature loss: tensor(0.4502)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(1.0357) feature loss: tensor(0.4624)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(1.1520) feature loss: tensor(0.4212)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.9239) feature loss: tensor(0.4400)
Global Model Acc on global data: 0.3891 length of data: 10000
save a model
-------------Round number:  38  -------------
selected users: [40, 73, 49, 45, 64, 16, 69, 17, 72, 66]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.9626) feature loss: tensor(0.3936)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(1.0466) feature loss: tensor(0.3899)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(1.3136) feature loss: tensor(0.4542)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(1.0334) feature loss: tensor(0.4457)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(1.0683) feature loss: tensor(0.4181)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(1.0793) feature loss: tensor(0.4812)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(1.0988) feature loss: tensor(0.4429)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(1.0085) feature loss: tensor(0.3705)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(1.2028) feature loss: tensor(0.5035)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(1.1783) feature loss: tensor(0.5419)
Global Model Acc on global data: 0.3947 length of data: 10000
save a model
-------------Round number:  39  -------------
selected users: [22, 53, 84, 57, 87, 58, 29, 21, 85, 79]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(1.0684) feature loss: tensor(0.4615)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(1.0412) feature loss: tensor(0.4622)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(1.1546) feature loss: tensor(0.4969)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(1.0340) feature loss: tensor(0.5286)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(1.0716) feature loss: tensor(0.5642)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.9176) feature loss: tensor(0.3901)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.8799) feature loss: tensor(0.3629)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(1.2409) feature loss: tensor(0.4011)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.7533) feature loss: tensor(0.3689)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.9496) feature loss: tensor(0.3806)
Global Model Acc on global data: 0.4127 length of data: 10000
save a model
-------------Round number:  40  -------------
selected users: [79, 75, 63, 15, 38, 11, 40, 45, 39, 62]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.8049) feature loss: tensor(0.3511)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.6757) feature loss: tensor(0.3445)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.9015) feature loss: tensor(0.4109)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.6671) feature loss: tensor(0.3354)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.8568) feature loss: tensor(0.3586)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.8918) feature loss: tensor(0.3642)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.8442) feature loss: tensor(0.3434)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.6955) feature loss: tensor(0.3316)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.7980) feature loss: tensor(0.3555)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(1.0835) feature loss: tensor(0.5784)
Global Model Acc on global data: 0.396 length of data: 10000
-------------Round number:  41  -------------
selected users: [42, 94, 37, 6, 79, 32, 24, 0, 33, 93]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.000262
training loss: tensor(1.0833) feature loss: tensor(0.4981)
Local adapation with distilling: 0.000262
training loss: tensor(1.1757) feature loss: tensor(0.5718)
Local adapation with distilling: 0.000262
training loss: tensor(1.2215) feature loss: tensor(0.6061)
Local adapation with distilling: 0.000262
training loss: tensor(1.3209) feature loss: tensor(0.5994)
Local adapation with distilling: 0.000262
training loss: tensor(0.9549) feature loss: tensor(0.4034)
Local adapation with distilling: 0.000262
training loss: tensor(1.1918) feature loss: tensor(0.5617)
Local adapation with distilling: 0.000262
training loss: tensor(1.0897) feature loss: tensor(0.5671)
Local adapation with distilling: 0.000262
training loss: tensor(0.9203) feature loss: tensor(0.3769)
Local adapation with distilling: 0.000262
training loss: tensor(1.0316) feature loss: tensor(0.4635)
Local adapation with distilling: 0.000262
training loss: tensor(1.1077) feature loss: tensor(0.5624)
Global Model Acc on global data: 0.4032 length of data: 10000
-------------Round number:  42  -------------
selected users: [83, 53, 70, 45, 44, 39, 22, 80, 10, 0]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.7149) feature loss: tensor(0.3136)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.6756) feature loss: tensor(0.3000)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.8185) feature loss: tensor(0.3350)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.6675) feature loss: tensor(0.2971)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.7684) feature loss: tensor(0.3418)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.8916) feature loss: tensor(0.3184)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.7254) feature loss: tensor(0.2963)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.8142) feature loss: tensor(0.3128)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.8110) feature loss: tensor(0.3146)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.8151) feature loss: tensor(0.3161)
Global Model Acc on global data: 0.3347 length of data: 10000
-------------Round number:  43  -------------
selected users: [20, 2, 15, 22, 57, 91, 69, 55, 11, 79]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.6956) feature loss: tensor(0.3399)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(1.1293) feature loss: tensor(0.5370)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.7814) feature loss: tensor(0.3787)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.8105) feature loss: tensor(0.3643)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.8961) feature loss: tensor(0.3671)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.8771) feature loss: tensor(0.3480)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.8245) feature loss: tensor(0.3561)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.8804) feature loss: tensor(0.4089)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.8777) feature loss: tensor(0.3439)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.8010) feature loss: tensor(0.3512)
Global Model Acc on global data: 0.3506 length of data: 10000
-------------Round number:  44  -------------
selected users: [42, 54, 27, 93, 39, 65, 7, 26, 24, 60]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(1.0948) feature loss: tensor(0.4565)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(1.0825) feature loss: tensor(0.4624)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.9703) feature loss: tensor(0.3924)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.9559) feature loss: tensor(0.3540)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.8597) feature loss: tensor(0.3417)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.6974) feature loss: tensor(0.3144)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(1.0410) feature loss: tensor(0.4510)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(1.1638) feature loss: tensor(0.4118)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(1.0356) feature loss: tensor(0.4667)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.8210) feature loss: tensor(0.3346)
Global Model Acc on global data: 0.369 length of data: 10000
-------------Round number:  45  -------------
selected users: [0, 1, 62, 76, 37, 99, 78, 38, 2, 84]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.8838) feature loss: tensor(0.3367)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(1.0646) feature loss: tensor(0.3802)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.8237) feature loss: tensor(0.3397)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(1.0109) feature loss: tensor(0.3633)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.7650) feature loss: tensor(0.3354)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(1.0776) feature loss: tensor(0.3928)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(1.1676) feature loss: tensor(0.3578)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(1.2282) feature loss: tensor(0.3752)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.9776) feature loss: tensor(0.3608)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.8260) feature loss: tensor(0.3439)
Global Model Acc on global data: 0.4055 length of data: 10000
-------------Round number:  46  -------------
selected users: [71, 33, 37, 10, 44, 34, 24, 98, 73, 95]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.9554) feature loss: tensor(0.3279)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.9145) feature loss: tensor(0.3119)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.7402) feature loss: tensor(0.3105)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.8128) feature loss: tensor(0.3351)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.8859) feature loss: tensor(0.4457)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.7790) feature loss: tensor(0.3124)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.7705) feature loss: tensor(0.3125)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.8996) feature loss: tensor(0.3249)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.9612) feature loss: tensor(0.3017)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.8723) feature loss: tensor(0.3636)
Global Model Acc on global data: 0.392 length of data: 10000
-------------Round number:  47  -------------
selected users: [17, 90, 94, 86, 63, 5, 38, 14, 40, 47]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.6549) feature loss: tensor(0.2496)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.6630) feature loss: tensor(0.2516)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.5984) feature loss: tensor(0.2493)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.8796) feature loss: tensor(0.2443)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.6879) feature loss: tensor(0.2677)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.6425) feature loss: tensor(0.2508)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.7441) feature loss: tensor(0.2538)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.5811) feature loss: tensor(0.2523)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.7054) feature loss: tensor(0.2768)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.7013) feature loss: tensor(0.2512)
Global Model Acc on global data: 0.3672 length of data: 10000
-------------Round number:  48  -------------
selected users: [93, 5, 71, 9, 11, 79, 69, 8, 59, 63]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(1.3531) feature loss: tensor(0.5145)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(1.5060) feature loss: tensor(0.6387)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(1.2033) feature loss: tensor(0.4693)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(1.4196) feature loss: tensor(0.4800)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(1.1955) feature loss: tensor(0.4330)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(1.1841) feature loss: tensor(0.4572)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(1.2668) feature loss: tensor(0.4345)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(1.2324) feature loss: tensor(0.5005)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(1.2517) feature loss: tensor(0.4168)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(1.1343) feature loss: tensor(0.4405)
Global Model Acc on global data: 0.4039 length of data: 10000
-------------Round number:  49  -------------
selected users: [76, 25, 28, 75, 81, 47, 41, 22, 29, 1]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(1.0616) feature loss: tensor(0.3012)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.7905) feature loss: tensor(0.3028)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.9611) feature loss: tensor(0.3382)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.7581) feature loss: tensor(0.3084)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.8985) feature loss: tensor(0.3798)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.9097) feature loss: tensor(0.3133)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.8875) feature loss: tensor(0.3415)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(1.0837) feature loss: tensor(0.3075)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.7482) feature loss: tensor(0.3090)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.8601) feature loss: tensor(0.3242)
Global Model Acc on global data: 0.4309 length of data: 10000
save a model
-------------Round number:  50  -------------
selected users: [80, 79, 25, 15, 39, 40, 53, 17, 57, 50]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.8397) feature loss: tensor(0.2793)
Local adapation with distilling: 0.0001
training loss: tensor(0.7372) feature loss: tensor(0.2642)
Local adapation with distilling: 0.0001
training loss: tensor(0.6795) feature loss: tensor(0.2695)
Local adapation with distilling: 0.0001
training loss: tensor(0.6448) feature loss: tensor(0.2544)
Local adapation with distilling: 0.0001
training loss: tensor(0.7631) feature loss: tensor(0.2705)
Local adapation with distilling: 0.0001
training loss: tensor(0.8083) feature loss: tensor(0.2658)
Local adapation with distilling: 0.0001
training loss: tensor(0.8060) feature loss: tensor(0.2527)
Local adapation with distilling: 0.0001
training loss: tensor(0.7729) feature loss: tensor(0.2492)
Local adapation with distilling: 0.0001
training loss: tensor(0.7270) feature loss: tensor(0.2504)
Local adapation with distilling: 0.0001
training loss: tensor(0.8306) feature loss: tensor(0.2911)
Global Model Acc on global data: 0.3882 length of data: 10000
-------------Round number:  51  -------------
selected users: [71, 43, 11, 83, 78, 19, 80, 4, 79, 75]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.8323) feature loss: tensor(0.2797)
Local adapation with distilling: 0.0001
training loss: tensor(0.8531) feature loss: tensor(0.2668)
Local adapation with distilling: 0.0001
training loss: tensor(0.8853) feature loss: tensor(0.2980)
Local adapation with distilling: 0.0001
training loss: tensor(0.8338) feature loss: tensor(0.2729)
Local adapation with distilling: 0.0001
training loss: tensor(1.0128) feature loss: tensor(0.3458)
Local adapation with distilling: 0.0001
training loss: tensor(0.8700) feature loss: tensor(0.3028)
Local adapation with distilling: 0.0001
training loss: tensor(0.7665) feature loss: tensor(0.2669)
Local adapation with distilling: 0.0001
training loss: tensor(0.9458) feature loss: tensor(0.2546)
Local adapation with distilling: 0.0001
training loss: tensor(0.8329) feature loss: tensor(0.2926)
Local adapation with distilling: 0.0001
training loss: tensor(0.7022) feature loss: tensor(0.2675)
Global Model Acc on global data: 0.3906 length of data: 10000
-------------Round number:  52  -------------
selected users: [82, 8, 44, 19, 2, 73, 37, 89, 67, 18]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(1.3205) feature loss: tensor(0.3885)
Local adapation with distilling: 0.0001
training loss: tensor(0.9611) feature loss: tensor(0.3407)
Local adapation with distilling: 0.0001
training loss: tensor(1.0104) feature loss: tensor(0.3215)
Local adapation with distilling: 0.0001
training loss: tensor(0.9068) feature loss: tensor(0.3307)
Local adapation with distilling: 0.0001
training loss: tensor(1.3397) feature loss: tensor(0.3212)
Local adapation with distilling: 0.0001
training loss: tensor(0.8149) feature loss: tensor(0.3232)
Local adapation with distilling: 0.0001
training loss: tensor(0.8416) feature loss: tensor(0.3237)
Local adapation with distilling: 0.0001
training loss: tensor(0.9361) feature loss: tensor(0.3444)
Local adapation with distilling: 0.0001
training loss: tensor(1.0629) feature loss: tensor(0.4056)
Local adapation with distilling: 0.0001
training loss: tensor(1.0056) feature loss: tensor(0.3392)
Global Model Acc on global data: 0.4156 length of data: 10000
-------------Round number:  53  -------------
selected users: [19, 78, 64, 3, 71, 32, 68, 42, 55, 97]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.7640) feature loss: tensor(0.2508)
Local adapation with distilling: 0.0001
training loss: tensor(0.8286) feature loss: tensor(0.2788)
Local adapation with distilling: 0.0001
training loss: tensor(0.8194) feature loss: tensor(0.2563)
Local adapation with distilling: 0.0001
training loss: tensor(0.6847) feature loss: tensor(0.2505)
Local adapation with distilling: 0.0001
training loss: tensor(0.8133) feature loss: tensor(0.2559)
Local adapation with distilling: 0.0001
training loss: tensor(0.8107) feature loss: tensor(0.2539)
Local adapation with distilling: 0.0001
training loss: tensor(0.8231) feature loss: tensor(0.2601)
Local adapation with distilling: 0.0001
training loss: tensor(0.8492) feature loss: tensor(0.3121)
Local adapation with distilling: 0.0001
training loss: tensor(0.7787) feature loss: tensor(0.2528)
Local adapation with distilling: 0.0001
training loss: tensor(0.7530) feature loss: tensor(0.2934)
Global Model Acc on global data: 0.4159 length of data: 10000
-------------Round number:  54  -------------
selected users: [36, 70, 48, 94, 81, 46, 38, 29, 34, 22]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(1.0975) feature loss: tensor(0.2800)
Local adapation with distilling: 0.0001
training loss: tensor(0.9856) feature loss: tensor(0.3051)
Local adapation with distilling: 0.0001
training loss: tensor(0.8661) feature loss: tensor(0.2932)
Local adapation with distilling: 0.0001
training loss: tensor(0.8784) feature loss: tensor(0.2865)
Local adapation with distilling: 0.0001
training loss: tensor(0.9156) feature loss: tensor(0.2960)
Local adapation with distilling: 0.0001
training loss: tensor(1.2219) feature loss: tensor(0.2943)
Local adapation with distilling: 0.0001
training loss: tensor(0.8529) feature loss: tensor(0.2892)
Local adapation with distilling: 0.0001
training loss: tensor(0.9175) feature loss: tensor(0.2854)
Local adapation with distilling: 0.0001
training loss: tensor(0.8615) feature loss: tensor(0.2909)
Local adapation with distilling: 0.0001
training loss: tensor(0.9226) feature loss: tensor(0.3660)
Global Model Acc on global data: 0.4349 length of data: 10000
save a model
-------------Round number:  55  -------------
selected users: [28, 92, 98, 95, 84, 34, 38, 76, 17, 78]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.6434) feature loss: tensor(0.2576)
Local adapation with distilling: 0.0001
training loss: tensor(0.6435) feature loss: tensor(0.2495)
Local adapation with distilling: 0.0001
training loss: tensor(0.6327) feature loss: tensor(0.2977)
Local adapation with distilling: 0.0001
training loss: tensor(0.7756) feature loss: tensor(0.2453)
Local adapation with distilling: 0.0001
training loss: tensor(0.6380) feature loss: tensor(0.2501)
Local adapation with distilling: 0.0001
training loss: tensor(0.6418) feature loss: tensor(0.2522)
Local adapation with distilling: 0.0001
training loss: tensor(0.6412) feature loss: tensor(0.2787)
Local adapation with distilling: 0.0001
training loss: tensor(0.8677) feature loss: tensor(0.2496)
Local adapation with distilling: 0.0001
training loss: tensor(0.6852) feature loss: tensor(0.2458)
Local adapation with distilling: 0.0001
training loss: tensor(0.6872) feature loss: tensor(0.3085)
Global Model Acc on global data: 0.4126 length of data: 10000
-------------Round number:  56  -------------
selected users: [92, 79, 23, 68, 52, 38, 73, 9, 59, 27]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.7215) feature loss: tensor(0.3052)
Local adapation with distilling: 0.0001
training loss: tensor(0.9719) feature loss: tensor(0.3481)
Local adapation with distilling: 0.0001
training loss: tensor(0.9348) feature loss: tensor(0.2959)
Local adapation with distilling: 0.0001
training loss: tensor(0.7021) feature loss: tensor(0.3075)
Local adapation with distilling: 0.0001
training loss: tensor(1.0445) feature loss: tensor(0.4273)
Local adapation with distilling: 0.0001
training loss: tensor(0.7423) feature loss: tensor(0.3648)
Local adapation with distilling: 0.0001
training loss: tensor(0.8196) feature loss: tensor(0.2976)
Local adapation with distilling: 0.0001
training loss: tensor(1.0081) feature loss: tensor(0.3326)
Local adapation with distilling: 0.0001
training loss: tensor(1.2810) feature loss: tensor(0.3209)
Local adapation with distilling: 0.0001
training loss: tensor(0.9183) feature loss: tensor(0.3863)
Global Model Acc on global data: 0.3856 length of data: 10000
-------------Round number:  57  -------------
selected users: [52, 17, 41, 3, 8, 98, 59, 20, 67, 7]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.7068) feature loss: tensor(0.2471)
Local adapation with distilling: 0.0001
training loss: tensor(0.6781) feature loss: tensor(0.2508)
Local adapation with distilling: 0.0001
training loss: tensor(0.8901) feature loss: tensor(0.2999)
Local adapation with distilling: 0.0001
training loss: tensor(0.6591) feature loss: tensor(0.2484)
Local adapation with distilling: 0.0001
training loss: tensor(0.6732) feature loss: tensor(0.2642)
Local adapation with distilling: 0.0001
training loss: tensor(0.6913) feature loss: tensor(0.2654)
Local adapation with distilling: 0.0001
training loss: tensor(0.7537) feature loss: tensor(0.2600)
Local adapation with distilling: 0.0001
training loss: tensor(0.9324) feature loss: tensor(0.2637)
Local adapation with distilling: 0.0001
training loss: tensor(0.7015) feature loss: tensor(0.2483)
Local adapation with distilling: 0.0001
training loss: tensor(0.6914) feature loss: tensor(0.2489)
Global Model Acc on global data: 0.3958 length of data: 10000
-------------Round number:  58  -------------
selected users: [43, 58, 8, 31, 70, 45, 69, 95, 50, 4]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.8408) feature loss: tensor(0.2904)
Local adapation with distilling: 0.0001
training loss: tensor(0.8358) feature loss: tensor(0.3293)
Local adapation with distilling: 0.0001
training loss: tensor(0.8134) feature loss: tensor(0.3048)
Local adapation with distilling: 0.0001
training loss: tensor(0.9623) feature loss: tensor(0.3535)
Local adapation with distilling: 0.0001
training loss: tensor(0.9941) feature loss: tensor(0.3380)
Local adapation with distilling: 0.0001
training loss: tensor(0.8817) feature loss: tensor(0.2983)
Local adapation with distilling: 0.0001
training loss: tensor(0.8986) feature loss: tensor(0.3041)
Local adapation with distilling: 0.0001
training loss: tensor(0.9748) feature loss: tensor(0.2897)
Local adapation with distilling: 0.0001
training loss: tensor(0.9705) feature loss: tensor(0.3069)
Local adapation with distilling: 0.0001
training loss: tensor(0.8758) feature loss: tensor(0.2976)
Global Model Acc on global data: 0.4159 length of data: 10000
-------------Round number:  59  -------------
selected users: [38, 46, 24, 87, 30, 85, 16, 96, 18, 99]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.7887) feature loss: tensor(0.3237)
Local adapation with distilling: 0.0001
training loss: tensor(1.0358) feature loss: tensor(0.3399)
Local adapation with distilling: 0.0001
training loss: tensor(0.8286) feature loss: tensor(0.3184)
Local adapation with distilling: 0.0001
training loss: tensor(0.7506) feature loss: tensor(0.3202)
Local adapation with distilling: 0.0001
training loss: tensor(0.8923) feature loss: tensor(0.3652)
Local adapation with distilling: 0.0001
training loss: tensor(0.7483) feature loss: tensor(0.3179)
Local adapation with distilling: 0.0001
training loss: tensor(0.9929) feature loss: tensor(0.3150)
Local adapation with distilling: 0.0001
training loss: tensor(0.9968) feature loss: tensor(0.3170)
Local adapation with distilling: 0.0001
training loss: tensor(0.7704) feature loss: tensor(0.3409)
Local adapation with distilling: 0.0001
training loss: tensor(0.9899) feature loss: tensor(0.3677)
Global Model Acc on global data: 0.4371 length of data: 10000
save a model
-------------Round number:  60  -------------
selected users: [88, 4, 79, 14, 55, 3, 19, 28, 94, 25]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.7300) feature loss: tensor(0.3009)
Local adapation with distilling: 0.0001
training loss: tensor(0.6963) feature loss: tensor(0.2800)
Local adapation with distilling: 0.0001
training loss: tensor(0.8281) feature loss: tensor(0.2965)
Local adapation with distilling: 0.0001
training loss: tensor(0.7484) feature loss: tensor(0.3095)
Local adapation with distilling: 0.0001
training loss: tensor(0.6955) feature loss: tensor(0.2733)
Local adapation with distilling: 0.0001
training loss: tensor(0.6995) feature loss: tensor(0.2761)
Local adapation with distilling: 0.0001
training loss: tensor(0.8553) feature loss: tensor(0.2785)
Local adapation with distilling: 0.0001
training loss: tensor(0.7206) feature loss: tensor(0.2826)
Local adapation with distilling: 0.0001
training loss: tensor(0.7807) feature loss: tensor(0.3360)
Local adapation with distilling: 0.0001
training loss: tensor(0.6680) feature loss: tensor(0.2711)
Global Model Acc on global data: 0.3838 length of data: 10000
-------------Round number:  61  -------------
selected users: [83, 1, 55, 9, 31, 28, 96, 29, 86, 63]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.9127) feature loss: tensor(0.3251)
Local adapation with distilling: 0.0001
training loss: tensor(0.9175) feature loss: tensor(0.2936)
Local adapation with distilling: 0.0001
training loss: tensor(0.7411) feature loss: tensor(0.2911)
Local adapation with distilling: 0.0001
training loss: tensor(0.8866) feature loss: tensor(0.3330)
Local adapation with distilling: 0.0001
training loss: tensor(0.9433) feature loss: tensor(0.3424)
Local adapation with distilling: 0.0001
training loss: tensor(0.7390) feature loss: tensor(0.2893)
Local adapation with distilling: 0.0001
training loss: tensor(0.8229) feature loss: tensor(0.2870)
Local adapation with distilling: 0.0001
training loss: tensor(0.7783) feature loss: tensor(0.2997)
Local adapation with distilling: 0.0001
training loss: tensor(1.0195) feature loss: tensor(0.3934)
Local adapation with distilling: 0.0001
training loss: tensor(0.9401) feature loss: tensor(0.4064)
Global Model Acc on global data: 0.4099 length of data: 10000
-------------Round number:  62  -------------
selected users: [76, 48, 62, 80, 29, 99, 60, 89, 39, 69]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.8094) feature loss: tensor(0.3043)
Local adapation with distilling: 0.0001
training loss: tensor(0.7073) feature loss: tensor(0.3374)
Local adapation with distilling: 0.0001
training loss: tensor(1.0150) feature loss: tensor(0.2577)
Local adapation with distilling: 0.0001
training loss: tensor(0.8128) feature loss: tensor(0.3330)
Local adapation with distilling: 0.0001
training loss: tensor(0.6472) feature loss: tensor(0.3016)
Local adapation with distilling: 0.0001
training loss: tensor(0.6345) feature loss: tensor(0.2740)
Local adapation with distilling: 0.0001
training loss: tensor(0.8029) feature loss: tensor(0.2950)
Local adapation with distilling: 0.0001
training loss: tensor(0.7198) feature loss: tensor(0.3186)
Local adapation with distilling: 0.0001
training loss: tensor(0.6552) feature loss: tensor(0.3293)
Local adapation with distilling: 0.0001
training loss: tensor(0.7112) feature loss: tensor(0.3468)
Global Model Acc on global data: 0.3931 length of data: 10000
-------------Round number:  63  -------------
selected users: [64, 59, 63, 2, 80, 20, 18, 48, 72, 51]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.8388) feature loss: tensor(0.2544)
Local adapation with distilling: 0.0001
training loss: tensor(0.8628) feature loss: tensor(0.2699)
Local adapation with distilling: 0.0001
training loss: tensor(0.8435) feature loss: tensor(0.2615)
Local adapation with distilling: 0.0001
training loss: tensor(0.9179) feature loss: tensor(0.2522)
Local adapation with distilling: 0.0001
training loss: tensor(0.8976) feature loss: tensor(0.3104)
Local adapation with distilling: 0.0001
training loss: tensor(0.9158) feature loss: tensor(0.3214)
Local adapation with distilling: 0.0001
training loss: tensor(0.8858) feature loss: tensor(0.3031)
Local adapation with distilling: 0.0001
training loss: tensor(0.8950) feature loss: tensor(0.2945)
Local adapation with distilling: 0.0001
training loss: tensor(1.0772) feature loss: tensor(0.2584)
Local adapation with distilling: 0.0001
training loss: tensor(1.0200) feature loss: tensor(0.2985)
Global Model Acc on global data: 0.3999 length of data: 10000
-------------Round number:  64  -------------
selected users: [17, 22, 60, 92, 23, 19, 71, 94, 40, 49]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.9209) feature loss: tensor(0.2458)
Local adapation with distilling: 0.0001
training loss: tensor(0.7308) feature loss: tensor(0.2630)
Local adapation with distilling: 0.0001
training loss: tensor(0.7540) feature loss: tensor(0.2767)
Local adapation with distilling: 0.0001
training loss: tensor(0.6864) feature loss: tensor(0.2436)
Local adapation with distilling: 0.0001
training loss: tensor(0.7183) feature loss: tensor(0.2484)
Local adapation with distilling: 0.0001
training loss: tensor(0.8675) feature loss: tensor(0.2765)
Local adapation with distilling: 0.0001
training loss: tensor(0.9040) feature loss: tensor(0.2649)
Local adapation with distilling: 0.0001
training loss: tensor(0.7234) feature loss: tensor(0.2450)
Local adapation with distilling: 0.0001
training loss: tensor(0.8075) feature loss: tensor(0.3129)
Local adapation with distilling: 0.0001
training loss: tensor(0.8249) feature loss: tensor(0.2879)
Global Model Acc on global data: 0.3812 length of data: 10000
-------------Round number:  65  -------------
selected users: [37, 81, 39, 61, 76, 90, 27, 86, 28, 69]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.7833) feature loss: tensor(0.2727)
Local adapation with distilling: 0.0001
training loss: tensor(0.9082) feature loss: tensor(0.3113)
Local adapation with distilling: 0.0001
training loss: tensor(0.7248) feature loss: tensor(0.2759)
Local adapation with distilling: 0.0001
training loss: tensor(0.7455) feature loss: tensor(0.2879)
Local adapation with distilling: 0.0001
training loss: tensor(0.9669) feature loss: tensor(0.4013)
Local adapation with distilling: 0.0001
training loss: tensor(0.7770) feature loss: tensor(0.3248)
Local adapation with distilling: 0.0001
training loss: tensor(0.9359) feature loss: tensor(0.2745)
Local adapation with distilling: 0.0001
training loss: tensor(0.9019) feature loss: tensor(0.2719)
Local adapation with distilling: 0.0001
training loss: tensor(0.8351) feature loss: tensor(0.3261)
Local adapation with distilling: 0.0001
training loss: tensor(0.6687) feature loss: tensor(0.2858)
Global Model Acc on global data: 0.4263 length of data: 10000
-------------Round number:  66  -------------
selected users: [8, 93, 4, 5, 52, 41, 0, 73, 88, 68]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.9189) feature loss: tensor(0.3638)
Local adapation with distilling: 0.0001
training loss: tensor(0.8801) feature loss: tensor(0.2978)
Local adapation with distilling: 0.0001
training loss: tensor(0.8083) feature loss: tensor(0.2998)
Local adapation with distilling: 0.0001
training loss: tensor(0.8383) feature loss: tensor(0.3033)
Local adapation with distilling: 0.0001
training loss: tensor(0.8195) feature loss: tensor(0.2981)
Local adapation with distilling: 0.0001
training loss: tensor(0.8520) feature loss: tensor(0.3157)
Local adapation with distilling: 0.0001
training loss: tensor(0.8892) feature loss: tensor(0.3139)
Local adapation with distilling: 0.0001
training loss: tensor(0.8303) feature loss: tensor(0.3004)
Local adapation with distilling: 0.0001
training loss: tensor(0.8655) feature loss: tensor(0.3287)
Local adapation with distilling: 0.0001
training loss: tensor(0.8747) feature loss: tensor(0.3375)
Global Model Acc on global data: 0.4176 length of data: 10000
-------------Round number:  67  -------------
selected users: [17, 24, 64, 93, 97, 29, 3, 70, 82, 11]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.9261) feature loss: tensor(0.4085)
Local adapation with distilling: 0.0001
training loss: tensor(0.8911) feature loss: tensor(0.3189)
Local adapation with distilling: 0.0001
training loss: tensor(1.0247) feature loss: tensor(0.5007)
Local adapation with distilling: 0.0001
training loss: tensor(0.8847) feature loss: tensor(0.3974)
Local adapation with distilling: 0.0001
training loss: tensor(0.9330) feature loss: tensor(0.4197)
Local adapation with distilling: 0.0001
training loss: tensor(0.8585) feature loss: tensor(0.2947)
Local adapation with distilling: 0.0001
training loss: tensor(0.7310) feature loss: tensor(0.3289)
Local adapation with distilling: 0.0001
training loss: tensor(0.7550) feature loss: tensor(0.2682)
Local adapation with distilling: 0.0001
training loss: tensor(0.8612) feature loss: tensor(0.3423)
Local adapation with distilling: 0.0001
training loss: tensor(0.8344) feature loss: tensor(0.2946)
Global Model Acc on global data: 0.3905 length of data: 10000
-------------Round number:  68  -------------
selected users: [29, 30, 16, 5, 38, 71, 76, 94, 99, 95]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.8157) feature loss: tensor(0.3304)
Local adapation with distilling: 0.0001
training loss: tensor(0.8492) feature loss: tensor(0.3267)
Local adapation with distilling: 0.0001
training loss: tensor(0.8513) feature loss: tensor(0.3224)
Local adapation with distilling: 0.0001
training loss: tensor(0.8067) feature loss: tensor(0.3198)
Local adapation with distilling: 0.0001
training loss: tensor(0.8133) feature loss: tensor(0.3285)
Local adapation with distilling: 0.0001
training loss: tensor(0.8324) feature loss: tensor(0.3285)
Local adapation with distilling: 0.0001
training loss: tensor(1.1129) feature loss: tensor(0.3631)
Local adapation with distilling: 0.0001
training loss: tensor(0.7960) feature loss: tensor(0.3331)
Local adapation with distilling: 0.0001
training loss: tensor(0.8147) feature loss: tensor(0.3336)
Local adapation with distilling: 0.0001
training loss: tensor(0.9470) feature loss: tensor(0.3786)
Global Model Acc on global data: 0.4391 length of data: 10000
save a model
-------------Round number:  69  -------------
selected users: [72, 31, 13, 83, 33, 8, 26, 89, 64, 97]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(1.0524) feature loss: tensor(0.3073)
Local adapation with distilling: 0.0001
training loss: tensor(0.7718) feature loss: tensor(0.2823)
Local adapation with distilling: 0.0001
training loss: tensor(0.7788) feature loss: tensor(0.2991)
Local adapation with distilling: 0.0001
training loss: tensor(0.7588) feature loss: tensor(0.2782)
Local adapation with distilling: 0.0001
training loss: tensor(0.7755) feature loss: tensor(0.2812)
Local adapation with distilling: 0.0001
training loss: tensor(0.8001) feature loss: tensor(0.2803)
Local adapation with distilling: 0.0001
training loss: tensor(0.8737) feature loss: tensor(0.3233)
Local adapation with distilling: 0.0001
training loss: tensor(0.7983) feature loss: tensor(0.2827)
Local adapation with distilling: 0.0001
training loss: tensor(0.8255) feature loss: tensor(0.3337)
Local adapation with distilling: 0.0001
training loss: tensor(0.7954) feature loss: tensor(0.2933)
Global Model Acc on global data: 0.4356 length of data: 10000
-------------Round number:  70  -------------
selected users: [81, 43, 88, 32, 50, 71, 73, 55, 42, 2]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.8089) feature loss: tensor(0.2797)
Local adapation with distilling: 0.0001
training loss: tensor(0.6854) feature loss: tensor(0.2724)
Local adapation with distilling: 0.0001
training loss: tensor(0.7577) feature loss: tensor(0.2779)
Local adapation with distilling: 0.0001
training loss: tensor(0.7726) feature loss: tensor(0.3056)
Local adapation with distilling: 0.0001
training loss: tensor(0.8110) feature loss: tensor(0.2827)
Local adapation with distilling: 0.0001
training loss: tensor(0.7922) feature loss: tensor(0.2755)
Local adapation with distilling: 0.0001
training loss: tensor(0.6818) feature loss: tensor(0.2681)
Local adapation with distilling: 0.0001
training loss: tensor(0.7863) feature loss: tensor(0.2672)
Local adapation with distilling: 0.0001
training loss: tensor(0.7812) feature loss: tensor(0.3084)
Local adapation with distilling: 0.0001
training loss: tensor(0.8177) feature loss: tensor(0.2791)
Global Model Acc on global data: 0.388 length of data: 10000
-------------Round number:  71  -------------
selected users: [41, 84, 98, 42, 75, 25, 60, 19, 52, 29]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.8208) feature loss: tensor(0.2915)
Local adapation with distilling: 0.0001
training loss: tensor(0.9412) feature loss: tensor(0.3341)
Local adapation with distilling: 0.0001
training loss: tensor(0.7820) feature loss: tensor(0.2788)
Local adapation with distilling: 0.0001
training loss: tensor(0.7611) feature loss: tensor(0.3147)
Local adapation with distilling: 0.0001
training loss: tensor(0.7290) feature loss: tensor(0.2705)
Local adapation with distilling: 0.0001
training loss: tensor(0.7442) feature loss: tensor(0.2718)
Local adapation with distilling: 0.0001
training loss: tensor(0.7870) feature loss: tensor(0.2715)
Local adapation with distilling: 0.0001
training loss: tensor(0.8369) feature loss: tensor(0.2758)
Local adapation with distilling: 0.0001
training loss: tensor(0.7043) feature loss: tensor(0.2811)
Local adapation with distilling: 0.0001
training loss: tensor(0.8292) feature loss: tensor(0.2687)
Global Model Acc on global data: 0.3909 length of data: 10000
-------------Round number:  72  -------------
selected users: [76, 82, 43, 16, 84, 95, 78, 91, 30, 22]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(1.0326) feature loss: tensor(0.2583)
Local adapation with distilling: 0.0001
training loss: tensor(0.7231) feature loss: tensor(0.2632)
Local adapation with distilling: 0.0001
training loss: tensor(0.7656) feature loss: tensor(0.2603)
Local adapation with distilling: 0.0001
training loss: tensor(0.8921) feature loss: tensor(0.2565)
Local adapation with distilling: 0.0001
training loss: tensor(0.8420) feature loss: tensor(0.2904)
Local adapation with distilling: 0.0001
training loss: tensor(0.7456) feature loss: tensor(0.2598)
Local adapation with distilling: 0.0001
training loss: tensor(0.7746) feature loss: tensor(0.3024)
Local adapation with distilling: 0.0001
training loss: tensor(0.7658) feature loss: tensor(0.2673)
Local adapation with distilling: 0.0001
training loss: tensor(0.8432) feature loss: tensor(0.2922)
Local adapation with distilling: 0.0001
training loss: tensor(0.7598) feature loss: tensor(0.3265)
Global Model Acc on global data: 0.3943 length of data: 10000
-------------Round number:  73  -------------
selected users: [49, 14, 34, 70, 90, 35, 68, 76, 80, 9]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.8467) feature loss: tensor(0.3174)
Local adapation with distilling: 0.0001
training loss: tensor(0.7576) feature loss: tensor(0.2988)
Local adapation with distilling: 0.0001
training loss: tensor(0.7705) feature loss: tensor(0.3011)
Local adapation with distilling: 0.0001
training loss: tensor(0.8374) feature loss: tensor(0.3529)
Local adapation with distilling: 0.0001
training loss: tensor(0.8120) feature loss: tensor(0.3119)
Local adapation with distilling: 0.0001
training loss: tensor(0.7917) feature loss: tensor(0.2999)
Local adapation with distilling: 0.0001
training loss: tensor(0.8107) feature loss: tensor(0.3109)
Local adapation with distilling: 0.0001
training loss: tensor(0.8465) feature loss: tensor(0.2978)
Local adapation with distilling: 0.0001
training loss: tensor(0.8080) feature loss: tensor(0.3143)
Local adapation with distilling: 0.0001
training loss: tensor(0.8230) feature loss: tensor(0.3125)
Global Model Acc on global data: 0.4227 length of data: 10000
-------------Round number:  74  -------------
selected users: [85, 64, 63, 80, 6, 12, 43, 17, 7, 8]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.7966) feature loss: tensor(0.3077)
Local adapation with distilling: 0.0001
training loss: tensor(0.8085) feature loss: tensor(0.3056)
Local adapation with distilling: 0.0001
training loss: tensor(0.9617) feature loss: tensor(0.3316)
Local adapation with distilling: 0.0001
training loss: tensor(0.8293) feature loss: tensor(0.3213)
Local adapation with distilling: 0.0001
training loss: tensor(0.9636) feature loss: tensor(0.3332)
Local adapation with distilling: 0.0001
training loss: tensor(0.8426) feature loss: tensor(0.3087)
Local adapation with distilling: 0.0001
training loss: tensor(0.9532) feature loss: tensor(0.3085)
Local adapation with distilling: 0.0001
training loss: tensor(1.1355) feature loss: tensor(0.3076)
Local adapation with distilling: 0.0001
training loss: tensor(1.1258) feature loss: tensor(0.3028)
Local adapation with distilling: 0.0001
training loss: tensor(0.8634) feature loss: tensor(0.3175)
Global Model Acc on global data: 0.4249 length of data: 10000
-------------Round number:  75  -------------
selected users: [36, 7, 6, 45, 56, 54, 22, 37, 53, 68]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.8452) feature loss: tensor(0.3738)
Local adapation with distilling: 0.0001
training loss: tensor(0.8484) feature loss: tensor(0.3628)
Local adapation with distilling: 0.0001
training loss: tensor(1.0387) feature loss: tensor(0.5473)
Local adapation with distilling: 0.0001
training loss: tensor(0.8580) feature loss: tensor(0.3846)
Local adapation with distilling: 0.0001
training loss: tensor(0.9045) feature loss: tensor(0.3881)
Local adapation with distilling: 0.0001
training loss: tensor(0.8732) feature loss: tensor(0.3412)
Local adapation with distilling: 0.0001
training loss: tensor(0.8934) feature loss: tensor(0.3756)
Local adapation with distilling: 0.0001
training loss: tensor(0.8388) feature loss: tensor(0.3392)
Local adapation with distilling: 0.0001
training loss: tensor(0.9301) feature loss: tensor(0.4289)
Local adapation with distilling: 0.0001
training loss: tensor(0.9089) feature loss: tensor(0.3327)
Global Model Acc on global data: 0.4171 length of data: 10000
-------------Round number:  76  -------------
selected users: [38, 37, 32, 50, 10, 94, 19, 44, 86, 23]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.7920) feature loss: tensor(0.2783)
Local adapation with distilling: 0.0001
training loss: tensor(0.6922) feature loss: tensor(0.2668)
Local adapation with distilling: 0.0001
training loss: tensor(0.7686) feature loss: tensor(0.2671)
Local adapation with distilling: 0.0001
training loss: tensor(0.8141) feature loss: tensor(0.2791)
Local adapation with distilling: 0.0001
training loss: tensor(0.8279) feature loss: tensor(0.2837)
Local adapation with distilling: 0.0001
training loss: tensor(0.8198) feature loss: tensor(0.3055)
Local adapation with distilling: 0.0001
training loss: tensor(0.9421) feature loss: tensor(0.2732)
Local adapation with distilling: 0.0001
training loss: tensor(0.7799) feature loss: tensor(0.2747)
Local adapation with distilling: 0.0001
training loss: tensor(0.6790) feature loss: tensor(0.2669)
Local adapation with distilling: 0.0001
training loss: tensor(0.7899) feature loss: tensor(0.2654)
Global Model Acc on global data: 0.4234 length of data: 10000
-------------Round number:  77  -------------
selected users: [5, 93, 41, 96, 16, 42, 81, 91, 50, 58]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.7595) feature loss: tensor(0.3023)
Local adapation with distilling: 0.0001
training loss: tensor(0.8024) feature loss: tensor(0.3134)
Local adapation with distilling: 0.0001
training loss: tensor(0.8432) feature loss: tensor(0.3135)
Local adapation with distilling: 0.0001
training loss: tensor(0.7230) feature loss: tensor(0.3031)
Local adapation with distilling: 0.0001
training loss: tensor(0.6824) feature loss: tensor(0.2987)
Local adapation with distilling: 0.0001
training loss: tensor(0.8065) feature loss: tensor(0.3098)
Local adapation with distilling: 0.0001
training loss: tensor(0.8733) feature loss: tensor(0.3145)
Local adapation with distilling: 0.0001
training loss: tensor(0.8636) feature loss: tensor(0.3074)
Local adapation with distilling: 0.0001
training loss: tensor(0.7298) feature loss: tensor(0.3015)
Local adapation with distilling: 0.0001
training loss: tensor(0.7432) feature loss: tensor(0.2998)
Global Model Acc on global data: 0.4315 length of data: 10000
-------------Round number:  78  -------------
selected users: [9, 46, 7, 63, 15, 2, 74, 31, 5, 36]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.9735) feature loss: tensor(0.3287)
Local adapation with distilling: 0.0001
training loss: tensor(1.0584) feature loss: tensor(0.3559)
Local adapation with distilling: 0.0001
training loss: tensor(1.1375) feature loss: tensor(0.3866)
Local adapation with distilling: 0.0001
training loss: tensor(1.1643) feature loss: tensor(0.3783)
Local adapation with distilling: 0.0001
training loss: tensor(1.1662) feature loss: tensor(0.4694)
Local adapation with distilling: 0.0001
training loss: tensor(1.1995) feature loss: tensor(0.4704)
Local adapation with distilling: 0.0001
training loss: tensor(1.0643) feature loss: tensor(0.3411)
Local adapation with distilling: 0.0001
training loss: tensor(0.8834) feature loss: tensor(0.3636)
Local adapation with distilling: 0.0001
training loss: tensor(0.9655) feature loss: tensor(0.3881)
Local adapation with distilling: 0.0001
training loss: tensor(1.0675) feature loss: tensor(0.4574)
Global Model Acc on global data: 0.4216 length of data: 10000
-------------Round number:  79  -------------
selected users: [68, 18, 86, 60, 56, 32, 30, 24, 45, 92]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.7644) feature loss: tensor(0.2993)
Local adapation with distilling: 0.0001
training loss: tensor(0.7520) feature loss: tensor(0.2860)
Local adapation with distilling: 0.0001
training loss: tensor(0.6685) feature loss: tensor(0.2697)
Local adapation with distilling: 0.0001
training loss: tensor(0.7714) feature loss: tensor(0.2958)
Local adapation with distilling: 0.0001
training loss: tensor(0.6467) feature loss: tensor(0.2708)
Local adapation with distilling: 0.0001
training loss: tensor(0.7220) feature loss: tensor(0.2742)
Local adapation with distilling: 0.0001
training loss: tensor(0.7604) feature loss: tensor(0.2765)
Local adapation with distilling: 0.0001
training loss: tensor(0.7180) feature loss: tensor(0.2751)
Local adapation with distilling: 0.0001
training loss: tensor(0.6542) feature loss: tensor(0.2763)
Local adapation with distilling: 0.0001
training loss: tensor(0.7068) feature loss: tensor(0.2759)
Global Model Acc on global data: 0.4209 length of data: 10000
-------------Round number:  80  -------------
selected users: [37, 65, 95, 53, 66, 30, 73, 85, 45, 36]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.9921) feature loss: tensor(0.3936)
Local adapation with distilling: 0.0001
training loss: tensor(0.7061) feature loss: tensor(0.2967)
Local adapation with distilling: 0.0001
training loss: tensor(0.7852) feature loss: tensor(0.3757)
Local adapation with distilling: 0.0001
training loss: tensor(0.7739) feature loss: tensor(0.2564)
Local adapation with distilling: 0.0001
training loss: tensor(0.6453) feature loss: tensor(0.2743)
Local adapation with distilling: 0.0001
training loss: tensor(0.6984) feature loss: tensor(0.2671)
Local adapation with distilling: 0.0001
training loss: tensor(0.8953) feature loss: tensor(0.3213)
Local adapation with distilling: 0.0001
training loss: tensor(0.6910) feature loss: tensor(0.2731)
Local adapation with distilling: 0.0001
training loss: tensor(0.6793) feature loss: tensor(0.2775)
Local adapation with distilling: 0.0001
training loss: tensor(0.7162) feature loss: tensor(0.3444)
Global Model Acc on global data: 0.3578 length of data: 10000
-------------Round number:  81  -------------
selected users: [73, 89, 41, 78, 51, 21, 30, 69, 8, 5]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.8703) feature loss: tensor(0.3939)
Local adapation with distilling: 0.0001
training loss: tensor(1.3366) feature loss: tensor(0.4137)
Local adapation with distilling: 0.0001
training loss: tensor(1.0536) feature loss: tensor(0.4229)
Local adapation with distilling: 0.0001
training loss: tensor(0.9240) feature loss: tensor(0.4128)
Local adapation with distilling: 0.0001
training loss: tensor(1.0944) feature loss: tensor(0.4177)
Local adapation with distilling: 0.0001
training loss: tensor(1.5974) feature loss: tensor(0.4479)
Local adapation with distilling: 0.0001
training loss: tensor(0.9461) feature loss: tensor(0.4076)
Local adapation with distilling: 0.0001
training loss: tensor(1.1218) feature loss: tensor(0.4209)
Local adapation with distilling: 0.0001
training loss: tensor(0.9404) feature loss: tensor(0.4443)
Local adapation with distilling: 0.0001
training loss: tensor(0.7623) feature loss: tensor(0.3957)
Global Model Acc on global data: 0.4043 length of data: 10000
-------------Round number:  82  -------------
selected users: [72, 33, 58, 2, 55, 84, 54, 75, 28, 40]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.9835) feature loss: tensor(0.2795)
Local adapation with distilling: 0.0001
training loss: tensor(0.7666) feature loss: tensor(0.2742)
Local adapation with distilling: 0.0001
training loss: tensor(0.7497) feature loss: tensor(0.2966)
Local adapation with distilling: 0.0001
training loss: tensor(0.9787) feature loss: tensor(0.2880)
Local adapation with distilling: 0.0001
training loss: tensor(0.7429) feature loss: tensor(0.2819)
Local adapation with distilling: 0.0001
training loss: tensor(1.1951) feature loss: tensor(0.3257)
Local adapation with distilling: 0.0001
training loss: tensor(0.9519) feature loss: tensor(0.2765)
Local adapation with distilling: 0.0001
training loss: tensor(0.7151) feature loss: tensor(0.2795)
Local adapation with distilling: 0.0001
training loss: tensor(0.7498) feature loss: tensor(0.2926)
Local adapation with distilling: 0.0001
training loss: tensor(0.7543) feature loss: tensor(0.2959)
Global Model Acc on global data: 0.3817 length of data: 10000
-------------Round number:  83  -------------
selected users: [6, 65, 95, 84, 61, 12, 30, 69, 35, 1]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.9705) feature loss: tensor(0.2859)
Local adapation with distilling: 0.0001
training loss: tensor(0.6643) feature loss: tensor(0.2931)
Local adapation with distilling: 0.0001
training loss: tensor(0.6990) feature loss: tensor(0.3010)
Local adapation with distilling: 0.0001
training loss: tensor(1.0449) feature loss: tensor(0.3797)
Local adapation with distilling: 0.0001
training loss: tensor(0.8076) feature loss: tensor(0.3249)
Local adapation with distilling: 0.0001
training loss: tensor(0.9345) feature loss: tensor(0.3324)
Local adapation with distilling: 0.0001
training loss: tensor(0.7916) feature loss: tensor(0.3025)
Local adapation with distilling: 0.0001
training loss: tensor(0.8520) feature loss: tensor(0.3408)
Local adapation with distilling: 0.0001
training loss: tensor(0.7773) feature loss: tensor(0.3552)
Local adapation with distilling: 0.0001
training loss: tensor(0.7773) feature loss: tensor(0.2967)
Global Model Acc on global data: 0.4102 length of data: 10000
-------------Round number:  84  -------------
selected users: [94, 55, 80, 1, 90, 11, 32, 8, 6, 82]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.6977) feature loss: tensor(0.2231)
Local adapation with distilling: 0.0001
training loss: tensor(0.5686) feature loss: tensor(0.2335)
Local adapation with distilling: 0.0001
training loss: tensor(0.6537) feature loss: tensor(0.2350)
Local adapation with distilling: 0.0001
training loss: tensor(0.6305) feature loss: tensor(0.2367)
Local adapation with distilling: 0.0001
training loss: tensor(0.6658) feature loss: tensor(0.2325)
Local adapation with distilling: 0.0001
training loss: tensor(0.6383) feature loss: tensor(0.2314)
Local adapation with distilling: 0.0001
training loss: tensor(0.6480) feature loss: tensor(0.2295)
Local adapation with distilling: 0.0001
training loss: tensor(0.6274) feature loss: tensor(0.2331)
Local adapation with distilling: 0.0001
training loss: tensor(0.7119) feature loss: tensor(0.2252)
Local adapation with distilling: 0.0001
training loss: tensor(0.6765) feature loss: tensor(0.2250)
Global Model Acc on global data: 0.3963 length of data: 10000
-------------Round number:  85  -------------
selected users: [81, 25, 40, 87, 41, 23, 10, 89, 50, 54]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.6630) feature loss: tensor(0.2556)
Local adapation with distilling: 0.0001
training loss: tensor(0.6447) feature loss: tensor(0.2502)
Local adapation with distilling: 0.0001
training loss: tensor(0.6556) feature loss: tensor(0.2509)
Local adapation with distilling: 0.0001
training loss: tensor(1.1802) feature loss: tensor(0.2380)
Local adapation with distilling: 0.0001
training loss: tensor(0.6675) feature loss: tensor(0.2529)
Local adapation with distilling: 0.0001
training loss: tensor(0.8382) feature loss: tensor(0.2425)
Local adapation with distilling: 0.0001
training loss: tensor(0.6962) feature loss: tensor(0.2663)
Local adapation with distilling: 0.0001
training loss: tensor(0.8566) feature loss: tensor(0.2484)
Local adapation with distilling: 0.0001
training loss: tensor(0.6804) feature loss: tensor(0.2859)
Local adapation with distilling: 0.0001
training loss: tensor(0.7030) feature loss: tensor(0.2476)
Global Model Acc on global data: 0.3868 length of data: 10000
-------------Round number:  86  -------------
selected users: [69, 74, 34, 68, 42, 0, 32, 88, 8, 3]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.8544) feature loss: tensor(0.3044)
Local adapation with distilling: 0.0001
training loss: tensor(0.7266) feature loss: tensor(0.2944)
Local adapation with distilling: 0.0001
training loss: tensor(0.7233) feature loss: tensor(0.2909)
Local adapation with distilling: 0.0001
training loss: tensor(0.8164) feature loss: tensor(0.3595)
Local adapation with distilling: 0.0001
training loss: tensor(0.7540) feature loss: tensor(0.2884)
Local adapation with distilling: 0.0001
training loss: tensor(0.7061) feature loss: tensor(0.2965)
Local adapation with distilling: 0.0001
training loss: tensor(0.7195) feature loss: tensor(0.2927)
Local adapation with distilling: 0.0001
training loss: tensor(0.7957) feature loss: tensor(0.3113)
Local adapation with distilling: 0.0001
training loss: tensor(0.8060) feature loss: tensor(0.3322)
Local adapation with distilling: 0.0001
training loss: tensor(0.7274) feature loss: tensor(0.2927)
Global Model Acc on global data: 0.3973 length of data: 10000
-------------Round number:  87  -------------
selected users: [16, 81, 85, 32, 39, 25, 26, 29, 65, 7]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(1.0530) feature loss: tensor(0.3899)
Local adapation with distilling: 0.0001
training loss: tensor(0.8073) feature loss: tensor(0.3567)
Local adapation with distilling: 0.0001
training loss: tensor(0.9518) feature loss: tensor(0.4756)
Local adapation with distilling: 0.0001
training loss: tensor(1.1427) feature loss: tensor(0.5609)
Local adapation with distilling: 0.0001
training loss: tensor(0.9549) feature loss: tensor(0.4128)
Local adapation with distilling: 0.0001
training loss: tensor(1.0562) feature loss: tensor(0.5593)
Local adapation with distilling: 0.0001
training loss: tensor(1.1175) feature loss: tensor(0.4982)
Local adapation with distilling: 0.0001
training loss: tensor(0.9634) feature loss: tensor(0.3728)
Local adapation with distilling: 0.0001
training loss: tensor(0.8343) feature loss: tensor(0.3757)
Local adapation with distilling: 0.0001
training loss: tensor(1.3215) feature loss: tensor(0.4911)
Global Model Acc on global data: 0.4471 length of data: 10000
save a model
-------------Round number:  88  -------------
selected users: [95, 53, 43, 84, 2, 74, 55, 31, 54, 97]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.9152) feature loss: tensor(0.3826)
Local adapation with distilling: 0.0001
training loss: tensor(0.9773) feature loss: tensor(0.2963)
Local adapation with distilling: 0.0001
training loss: tensor(0.9793) feature loss: tensor(0.3044)
Local adapation with distilling: 0.0001
training loss: tensor(0.9457) feature loss: tensor(0.3663)
Local adapation with distilling: 0.0001
training loss: tensor(0.9294) feature loss: tensor(0.2932)
Local adapation with distilling: 0.0001
training loss: tensor(1.0467) feature loss: tensor(0.4271)
Local adapation with distilling: 0.0001
training loss: tensor(0.9228) feature loss: tensor(0.2928)
Local adapation with distilling: 0.0001
training loss: tensor(0.7914) feature loss: tensor(0.2971)
Local adapation with distilling: 0.0001
training loss: tensor(0.9234) feature loss: tensor(0.3002)
Local adapation with distilling: 0.0001
training loss: tensor(1.1249) feature loss: tensor(0.3754)
Global Model Acc on global data: 0.3716 length of data: 10000
-------------Round number:  89  -------------
selected users: [65, 21, 87, 6, 46, 74, 44, 60, 72, 5]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.7239) feature loss: tensor(0.2761)
Local adapation with distilling: 0.0001
training loss: tensor(1.0145) feature loss: tensor(0.2909)
Local adapation with distilling: 0.0001
training loss: tensor(0.8485) feature loss: tensor(0.2669)
Local adapation with distilling: 0.0001
training loss: tensor(0.9187) feature loss: tensor(0.2738)
Local adapation with distilling: 0.0001
training loss: tensor(0.8818) feature loss: tensor(0.2572)
Local adapation with distilling: 0.0001
training loss: tensor(0.7603) feature loss: tensor(0.3208)
Local adapation with distilling: 0.0001
training loss: tensor(0.7726) feature loss: tensor(0.2936)
Local adapation with distilling: 0.0001
training loss: tensor(0.8247) feature loss: tensor(0.2860)
Local adapation with distilling: 0.0001
training loss: tensor(0.8708) feature loss: tensor(0.2859)
Local adapation with distilling: 0.0001
training loss: tensor(0.7295) feature loss: tensor(0.2987)
Global Model Acc on global data: 0.3786 length of data: 10000
-------------Round number:  90  -------------
selected users: [25, 85, 96, 89, 65, 94, 5, 35, 36, 92]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.7189) feature loss: tensor(0.3497)
Local adapation with distilling: 0.0001
training loss: tensor(0.8458) feature loss: tensor(0.4354)
Local adapation with distilling: 0.0001
training loss: tensor(0.9297) feature loss: tensor(0.4545)
Local adapation with distilling: 0.0001
training loss: tensor(0.8695) feature loss: tensor(0.2905)
Local adapation with distilling: 0.0001
training loss: tensor(0.7878) feature loss: tensor(0.4744)
Local adapation with distilling: 0.0001
training loss: tensor(1.0879) feature loss: tensor(0.4909)
Local adapation with distilling: 0.0001
training loss: tensor(0.7538) feature loss: tensor(0.3946)
Local adapation with distilling: 0.0001
training loss: tensor(0.9261) feature loss: tensor(0.6607)
Local adapation with distilling: 0.0001
training loss: tensor(0.9994) feature loss: tensor(0.4907)
Local adapation with distilling: 0.0001
training loss: tensor(1.3191) feature loss: tensor(0.4930)
Global Model Acc on global data: 0.3585 length of data: 10000
-------------Round number:  91  -------------
selected users: [75, 25, 3, 52, 78, 54, 59, 26, 62, 97]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.8759) feature loss: tensor(0.3604)
Local adapation with distilling: 0.0001
training loss: tensor(0.7159) feature loss: tensor(0.3006)
Local adapation with distilling: 0.0001
training loss: tensor(1.0803) feature loss: tensor(0.3477)
Local adapation with distilling: 0.0001
training loss: tensor(0.9997) feature loss: tensor(0.3176)
Local adapation with distilling: 0.0001
training loss: tensor(0.8845) feature loss: tensor(0.3114)
Local adapation with distilling: 0.0001
training loss: tensor(1.0794) feature loss: tensor(0.4363)
Local adapation with distilling: 0.0001
training loss: tensor(1.0975) feature loss: tensor(0.3165)
Local adapation with distilling: 0.0001
training loss: tensor(0.9588) feature loss: tensor(0.3083)
Local adapation with distilling: 0.0001
training loss: tensor(0.9465) feature loss: tensor(0.3075)
Local adapation with distilling: 0.0001
training loss: tensor(1.2365) feature loss: tensor(0.3036)
Global Model Acc on global data: 0.3984 length of data: 10000
-------------Round number:  92  -------------
selected users: [25, 99, 73, 61, 66, 36, 23, 83, 77, 6]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.8004) feature loss: tensor(0.3571)
Local adapation with distilling: 0.0001
training loss: tensor(0.9841) feature loss: tensor(0.3563)
Local adapation with distilling: 0.0001
training loss: tensor(0.8859) feature loss: tensor(0.3366)
Local adapation with distilling: 0.0001
training loss: tensor(1.0379) feature loss: tensor(0.3685)
Local adapation with distilling: 0.0001
training loss: tensor(1.0128) feature loss: tensor(0.4579)
Local adapation with distilling: 0.0001
training loss: tensor(0.9259) feature loss: tensor(0.4082)
Local adapation with distilling: 0.0001
training loss: tensor(1.0279) feature loss: tensor(0.3824)
Local adapation with distilling: 0.0001
training loss: tensor(0.8982) feature loss: tensor(0.3596)
Local adapation with distilling: 0.0001
training loss: tensor(1.0002) feature loss: tensor(0.3665)
Local adapation with distilling: 0.0001
training loss: tensor(0.8999) feature loss: tensor(0.3752)
Global Model Acc on global data: 0.4049 length of data: 10000
-------------Round number:  93  -------------
selected users: [75, 82, 56, 27, 42, 35, 1, 97, 66, 61]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.7637) feature loss: tensor(0.3064)
Local adapation with distilling: 0.0001
training loss: tensor(0.9002) feature loss: tensor(0.3186)
Local adapation with distilling: 0.0001
training loss: tensor(0.8001) feature loss: tensor(0.3802)
Local adapation with distilling: 0.0001
training loss: tensor(0.8523) feature loss: tensor(0.2953)
Local adapation with distilling: 0.0001
training loss: tensor(0.9065) feature loss: tensor(0.3087)
Local adapation with distilling: 0.0001
training loss: tensor(0.8129) feature loss: tensor(0.3168)
Local adapation with distilling: 0.0001
training loss: tensor(0.7686) feature loss: tensor(0.2871)
Local adapation with distilling: 0.0001
training loss: tensor(0.8472) feature loss: tensor(0.2854)
Local adapation with distilling: 0.0001
training loss: tensor(0.6761) feature loss: tensor(0.3068)
Local adapation with distilling: 0.0001
training loss: tensor(0.7991) feature loss: tensor(0.2893)
Global Model Acc on global data: 0.3912 length of data: 10000
-------------Round number:  94  -------------
selected users: [13, 73, 5, 18, 99, 48, 23, 4, 35, 17]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.8269) feature loss: tensor(0.3057)
Local adapation with distilling: 0.0001
training loss: tensor(0.8658) feature loss: tensor(0.3071)
Local adapation with distilling: 0.0001
training loss: tensor(0.7483) feature loss: tensor(0.3240)
Local adapation with distilling: 0.0001
training loss: tensor(0.8391) feature loss: tensor(0.3264)
Local adapation with distilling: 0.0001
training loss: tensor(0.8964) feature loss: tensor(0.3235)
Local adapation with distilling: 0.0001
training loss: tensor(0.8297) feature loss: tensor(0.3325)
Local adapation with distilling: 0.0001
training loss: tensor(0.8845) feature loss: tensor(0.3211)
Local adapation with distilling: 0.0001
training loss: tensor(0.9255) feature loss: tensor(0.3173)
Local adapation with distilling: 0.0001
training loss: tensor(0.7645) feature loss: tensor(0.3102)
Local adapation with distilling: 0.0001
training loss: tensor(0.7893) feature loss: tensor(0.3069)
Global Model Acc on global data: 0.4077 length of data: 10000
-------------Round number:  95  -------------
selected users: [88, 9, 1, 60, 95, 26, 45, 71, 44, 21]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.7744) feature loss: tensor(0.3361)
Local adapation with distilling: 0.0001
training loss: tensor(0.8363) feature loss: tensor(0.3312)
Local adapation with distilling: 0.0001
training loss: tensor(0.7516) feature loss: tensor(0.2985)
Local adapation with distilling: 0.0001
training loss: tensor(0.9857) feature loss: tensor(0.3053)
Local adapation with distilling: 0.0001
training loss: tensor(0.6631) feature loss: tensor(0.2839)
Local adapation with distilling: 0.0001
training loss: tensor(0.7637) feature loss: tensor(0.2845)
Local adapation with distilling: 0.0001
training loss: tensor(0.6577) feature loss: tensor(0.2831)
Local adapation with distilling: 0.0001
training loss: tensor(0.7553) feature loss: tensor(0.2953)
Local adapation with distilling: 0.0001
training loss: tensor(0.8221) feature loss: tensor(0.2854)
Local adapation with distilling: 0.0001
training loss: tensor(0.7880) feature loss: tensor(0.2955)
Global Model Acc on global data: 0.4423 length of data: 10000
-------------Round number:  96  -------------
selected users: [41, 28, 52, 15, 87, 17, 75, 42, 45, 49]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.6641) feature loss: tensor(0.2899)
Local adapation with distilling: 0.0001
training loss: tensor(0.6469) feature loss: tensor(0.2756)
Local adapation with distilling: 0.0001
training loss: tensor(0.9427) feature loss: tensor(0.4007)
Local adapation with distilling: 0.0001
training loss: tensor(0.6911) feature loss: tensor(0.3342)
Local adapation with distilling: 0.0001
training loss: tensor(0.8046) feature loss: tensor(0.2722)
Local adapation with distilling: 0.0001
training loss: tensor(0.7407) feature loss: tensor(0.2713)
Local adapation with distilling: 0.0001
training loss: tensor(0.6364) feature loss: tensor(0.2765)
Local adapation with distilling: 0.0001
training loss: tensor(0.8147) feature loss: tensor(0.2759)
Local adapation with distilling: 0.0001
training loss: tensor(0.5991) feature loss: tensor(0.2803)
Local adapation with distilling: 0.0001
training loss: tensor(0.7209) feature loss: tensor(0.2722)
Global Model Acc on global data: 0.422 length of data: 10000
-------------Round number:  97  -------------
selected users: [31, 43, 64, 56, 85, 2, 70, 21, 34, 50]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.7573) feature loss: tensor(0.2932)
Local adapation with distilling: 0.0001
training loss: tensor(0.8875) feature loss: tensor(0.2811)
Local adapation with distilling: 0.0001
training loss: tensor(0.8824) feature loss: tensor(0.2807)
Local adapation with distilling: 0.0001
training loss: tensor(0.9003) feature loss: tensor(0.2850)
Local adapation with distilling: 0.0001
training loss: tensor(0.6792) feature loss: tensor(0.2909)
Local adapation with distilling: 0.0001
training loss: tensor(0.8541) feature loss: tensor(0.2807)
Local adapation with distilling: 0.0001
training loss: tensor(0.9578) feature loss: tensor(0.3041)
Local adapation with distilling: 0.0001
training loss: tensor(0.7857) feature loss: tensor(0.2874)
Local adapation with distilling: 0.0001
training loss: tensor(0.9095) feature loss: tensor(0.2807)
Local adapation with distilling: 0.0001
training loss: tensor(0.9204) feature loss: tensor(0.3136)
Global Model Acc on global data: 0.4337 length of data: 10000
-------------Round number:  98  -------------
selected users: [11, 48, 97, 14, 22, 36, 99, 47, 33, 81]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.7066) feature loss: tensor(0.2771)
Local adapation with distilling: 0.0001
training loss: tensor(0.7485) feature loss: tensor(0.2955)
Local adapation with distilling: 0.0001
training loss: tensor(0.8005) feature loss: tensor(0.2761)
Local adapation with distilling: 0.0001
training loss: tensor(0.7098) feature loss: tensor(0.2836)
Local adapation with distilling: 0.0001
training loss: tensor(0.7430) feature loss: tensor(0.2757)
Local adapation with distilling: 0.0001
training loss: tensor(0.7688) feature loss: tensor(0.2803)
Local adapation with distilling: 0.0001
training loss: tensor(0.8588) feature loss: tensor(0.2791)
Local adapation with distilling: 0.0001
training loss: tensor(0.8084) feature loss: tensor(0.2970)
Local adapation with distilling: 0.0001
training loss: tensor(0.8352) feature loss: tensor(0.3025)
Local adapation with distilling: 0.0001
training loss: tensor(0.7014) feature loss: tensor(0.2827)
Global Model Acc on global data: 0.4382 length of data: 10000
-------------Round number:  99  -------------
selected users: [14, 34, 30, 78, 16, 15, 91, 38, 10, 85]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.6243) feature loss: tensor(0.2693)
Local adapation with distilling: 0.0001
training loss: tensor(0.6704) feature loss: tensor(0.2638)
Local adapation with distilling: 0.0001
training loss: tensor(0.7834) feature loss: tensor(0.2837)
Local adapation with distilling: 0.0001
training loss: tensor(0.6959) feature loss: tensor(0.2890)
Local adapation with distilling: 0.0001
training loss: tensor(0.6586) feature loss: tensor(0.2700)
Local adapation with distilling: 0.0001
training loss: tensor(0.6570) feature loss: tensor(0.2743)
Local adapation with distilling: 0.0001
training loss: tensor(0.6708) feature loss: tensor(0.3068)
Local adapation with distilling: 0.0001
training loss: tensor(0.6587) feature loss: tensor(0.2952)
Local adapation with distilling: 0.0001
training loss: tensor(0.7717) feature loss: tensor(0.2925)
Local adapation with distilling: 0.0001
training loss: tensor(0.6338) feature loss: tensor(0.2709)
Global Model Acc on global data: 0.4469 length of data: 10000