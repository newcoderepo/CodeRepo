nohup: ignoring input
================================================================================
Summary of training process:
Dataset                : Cifar10
Batch size             : 64
Learing rate           : 0.001
Number of total clients: 100
Split method           : quantity
Split parameter        : 1.0
Clients per round      : 10
Number of global rounds: 100
Number of local rounds : 10
Feature from layer     : -1
Feature percentage     : 0.1
Local training loss    : CE_CE_KL
Loss of beta           : 1.0
Algorithm              : FedFea
Modelname              : MOBNET
Mode                   : training
Seed                   : 0
================================================================================
Files already downloaded and verified
Files already downloaded and verified
Class frequencies:
client,class0,class1,class2,class3,class4,class5,class6,class7,class8,class9,Amount
Client   0,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client   1,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client   2,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client   3,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,500
Client   4,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,500
Client   5,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,500
Client   6,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,500
Client   7,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,500
Client   8,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,500
Client   9,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,500
Client  10,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  11,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  12,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  13,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  14,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,500
Client  15,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,500
Client  16,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,500
Client  17,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,500
Client  18,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,500
Client  19,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,500
Client  20,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  21,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  22,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  23,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  24,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,500
Client  25,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,500
Client  26,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,500
Client  27,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,500
Client  28,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,500
Client  29,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,500
Client  30,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  31,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  32,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  33,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  34,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,500
Client  35,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,500
Client  36,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,500
Client  37,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,500
Client  38,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,500
Client  39,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,500
Client  40,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  41,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  42,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  43,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  44,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,500
Client  45,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,500
Client  46,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,500
Client  47,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,500
Client  48,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,500
Client  49,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,500
Client  50,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  51,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  52,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  53,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  54,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,500
Client  55,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,500
Client  56,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,500
Client  57,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,500
Client  58,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,500
Client  59,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,500
Client  60,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  61,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  62,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  63,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  64,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,500
Client  65,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,500
Client  66,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,500
Client  67,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,500
Client  68,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,500
Client  69,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,500
Client  70,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  71,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  72,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  73,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  74,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,500
Client  75,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,500
Client  76,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,500
Client  77,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,500
Client  78,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,500
Client  79,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,500
Client  80,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  81,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  82,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  83,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  84,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,500
Client  85,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,500
Client  86,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,500
Client  87,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,500
Client  88,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,500
Client  89,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,500
Client  90,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  91,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  92,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  93,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  94,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,500
Client  95,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,500
Client  96,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,500
Client  97,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,500
Client  98,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,500
Client  99,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,500
0 [0] [0] [1 2 3 4 5 6 7 8 9]
0 training: Counter({0: 500}) testing iid: Counter({0: 1000})
1 [1] [1] [0 2 3 4 5 6 7 8 9]
1 training: Counter({1: 500}) testing iid: Counter({1: 1000})
2 [2] [2] [0 1 3 4 5 6 7 8 9]
2 training: Counter({2: 500}) testing iid: Counter({2: 1000})
3 [3] [3] [0 1 2 4 5 6 7 8 9]
3 training: Counter({3: 500}) testing iid: Counter({3: 1000})
4 [4] [4] [0 1 2 3 5 6 7 8 9]
4 training: Counter({4: 500}) testing iid: Counter({4: 1000})
5 [5] [5] [0 1 2 3 4 6 7 8 9]
5 training: Counter({5: 500}) testing iid: Counter({5: 1000})
6 [6] [6] [0 1 2 3 4 5 7 8 9]
6 training: Counter({6: 500}) testing iid: Counter({6: 1000})
7 [7] [7] [0 1 2 3 4 5 6 8 9]
7 training: Counter({7: 500}) testing iid: Counter({7: 1000})
8 [8] [8] [0 1 2 3 4 5 6 7 9]
8 training: Counter({8: 500}) testing iid: Counter({8: 1000})
9 [9] [9] [0 1 2 3 4 5 6 7 8]
9 training: Counter({9: 500}) testing iid: Counter({9: 1000})
10 [0] [0] [1 2 3 4 5 6 7 8 9]
10 training: Counter({0: 500}) testing iid: Counter({0: 1000})
11 [1] [1] [0 2 3 4 5 6 7 8 9]
11 training: Counter({1: 500}) testing iid: Counter({1: 1000})
12 [2] [2] [0 1 3 4 5 6 7 8 9]
12 training: Counter({2: 500}) testing iid: Counter({2: 1000})
13 [3] [3] [0 1 2 4 5 6 7 8 9]
13 training: Counter({3: 500}) testing iid: Counter({3: 1000})
14 [4] [4] [0 1 2 3 5 6 7 8 9]
14 training: Counter({4: 500}) testing iid: Counter({4: 1000})
15 [5] [5] [0 1 2 3 4 6 7 8 9]
15 training: Counter({5: 500}) testing iid: Counter({5: 1000})
16 [6] [6] [0 1 2 3 4 5 7 8 9]
16 training: Counter({6: 500}) testing iid: Counter({6: 1000})
17 [7] [7] [0 1 2 3 4 5 6 8 9]
17 training: Counter({7: 500}) testing iid: Counter({7: 1000})
18 [8] [8] [0 1 2 3 4 5 6 7 9]
18 training: Counter({8: 500}) testing iid: Counter({8: 1000})
19 [9] [9] [0 1 2 3 4 5 6 7 8]
19 training: Counter({9: 500}) testing iid: Counter({9: 1000})
20 [0] [0] [1 2 3 4 5 6 7 8 9]
20 training: Counter({0: 500}) testing iid: Counter({0: 1000})
21 [1] [1] [0 2 3 4 5 6 7 8 9]
21 training: Counter({1: 500}) testing iid: Counter({1: 1000})
22 [2] [2] [0 1 3 4 5 6 7 8 9]
22 training: Counter({2: 500}) testing iid: Counter({2: 1000})
23 [3] [3] [0 1 2 4 5 6 7 8 9]
23 training: Counter({3: 500}) testing iid: Counter({3: 1000})
24 [4] [4] [0 1 2 3 5 6 7 8 9]
24 training: Counter({4: 500}) testing iid: Counter({4: 1000})
25 [5] [5] [0 1 2 3 4 6 7 8 9]
25 training: Counter({5: 500}) testing iid: Counter({5: 1000})
26 [6] [6] [0 1 2 3 4 5 7 8 9]
26 training: Counter({6: 500}) testing iid: Counter({6: 1000})
27 [7] [7] [0 1 2 3 4 5 6 8 9]
27 training: Counter({7: 500}) testing iid: Counter({7: 1000})
28 [8] [8] [0 1 2 3 4 5 6 7 9]
28 training: Counter({8: 500}) testing iid: Counter({8: 1000})
29 [9] [9] [0 1 2 3 4 5 6 7 8]
29 training: Counter({9: 500}) testing iid: Counter({9: 1000})
30 [0] [0] [1 2 3 4 5 6 7 8 9]
30 training: Counter({0: 500}) testing iid: Counter({0: 1000})
31 [1] [1] [0 2 3 4 5 6 7 8 9]
31 training: Counter({1: 500}) testing iid: Counter({1: 1000})
32 [2] [2] [0 1 3 4 5 6 7 8 9]
32 training: Counter({2: 500}) testing iid: Counter({2: 1000})
33 [3] [3] [0 1 2 4 5 6 7 8 9]
33 training: Counter({3: 500}) testing iid: Counter({3: 1000})
34 [4] [4] [0 1 2 3 5 6 7 8 9]
34 training: Counter({4: 500}) testing iid: Counter({4: 1000})
35 [5] [5] [0 1 2 3 4 6 7 8 9]
35 training: Counter({5: 500}) testing iid: Counter({5: 1000})
36 [6] [6] [0 1 2 3 4 5 7 8 9]
36 training: Counter({6: 500}) testing iid: Counter({6: 1000})
37 [7] [7] [0 1 2 3 4 5 6 8 9]
37 training: Counter({7: 500}) testing iid: Counter({7: 1000})
38 [8] [8] [0 1 2 3 4 5 6 7 9]
38 training: Counter({8: 500}) testing iid: Counter({8: 1000})
39 [9] [9] [0 1 2 3 4 5 6 7 8]
39 training: Counter({9: 500}) testing iid: Counter({9: 1000})
40 [0] [0] [1 2 3 4 5 6 7 8 9]
40 training: Counter({0: 500}) testing iid: Counter({0: 1000})
41 [1] [1] [0 2 3 4 5 6 7 8 9]
41 training: Counter({1: 500}) testing iid: Counter({1: 1000})
42 [2] [2] [0 1 3 4 5 6 7 8 9]
42 training: Counter({2: 500}) testing iid: Counter({2: 1000})
43 [3] [3] [0 1 2 4 5 6 7 8 9]
43 training: Counter({3: 500}) testing iid: Counter({3: 1000})
44 [4] [4] [0 1 2 3 5 6 7 8 9]
44 training: Counter({4: 500}) testing iid: Counter({4: 1000})
45 [5] [5] [0 1 2 3 4 6 7 8 9]
45 training: Counter({5: 500}) testing iid: Counter({5: 1000})
46 [6] [6] [0 1 2 3 4 5 7 8 9]
46 training: Counter({6: 500}) testing iid: Counter({6: 1000})
47 [7] [7] [0 1 2 3 4 5 6 8 9]
47 training: Counter({7: 500}) testing iid: Counter({7: 1000})
48 [8] [8] [0 1 2 3 4 5 6 7 9]
48 training: Counter({8: 500}) testing iid: Counter({8: 1000})
49 [9] [9] [0 1 2 3 4 5 6 7 8]
49 training: Counter({9: 500}) testing iid: Counter({9: 1000})
50 [0] [0] [1 2 3 4 5 6 7 8 9]
50 training: Counter({0: 500}) testing iid: Counter({0: 1000})
51 [1] [1] [0 2 3 4 5 6 7 8 9]
51 training: Counter({1: 500}) testing iid: Counter({1: 1000})
52 [2] [2] [0 1 3 4 5 6 7 8 9]
52 training: Counter({2: 500}) testing iid: Counter({2: 1000})
53 [3] [3] [0 1 2 4 5 6 7 8 9]
53 training: Counter({3: 500}) testing iid: Counter({3: 1000})
54 [4] [4] [0 1 2 3 5 6 7 8 9]
54 training: Counter({4: 500}) testing iid: Counter({4: 1000})
55 [5] [5] [0 1 2 3 4 6 7 8 9]
55 training: Counter({5: 500}) testing iid: Counter({5: 1000})
56 [6] [6] [0 1 2 3 4 5 7 8 9]
56 training: Counter({6: 500}) testing iid: Counter({6: 1000})
57 [7] [7] [0 1 2 3 4 5 6 8 9]
57 training: Counter({7: 500}) testing iid: Counter({7: 1000})
58 [8] [8] [0 1 2 3 4 5 6 7 9]
58 training: Counter({8: 500}) testing iid: Counter({8: 1000})
59 [9] [9] [0 1 2 3 4 5 6 7 8]
59 training: Counter({9: 500}) testing iid: Counter({9: 1000})
60 [0] [0] [1 2 3 4 5 6 7 8 9]
60 training: Counter({0: 500}) testing iid: Counter({0: 1000})
61 [1] [1] [0 2 3 4 5 6 7 8 9]
61 training: Counter({1: 500}) testing iid: Counter({1: 1000})
62 [2] [2] [0 1 3 4 5 6 7 8 9]
62 training: Counter({2: 500}) testing iid: Counter({2: 1000})
63 [3] [3] [0 1 2 4 5 6 7 8 9]
63 training: Counter({3: 500}) testing iid: Counter({3: 1000})
64 [4] [4] [0 1 2 3 5 6 7 8 9]
64 training: Counter({4: 500}) testing iid: Counter({4: 1000})
65 [5] [5] [0 1 2 3 4 6 7 8 9]
65 training: Counter({5: 500}) testing iid: Counter({5: 1000})
66 [6] [6] [0 1 2 3 4 5 7 8 9]
66 training: Counter({6: 500}) testing iid: Counter({6: 1000})
67 [7] [7] [0 1 2 3 4 5 6 8 9]
67 training: Counter({7: 500}) testing iid: Counter({7: 1000})
68 [8] [8] [0 1 2 3 4 5 6 7 9]
68 training: Counter({8: 500}) testing iid: Counter({8: 1000})
69 [9] [9] [0 1 2 3 4 5 6 7 8]
69 training: Counter({9: 500}) testing iid: Counter({9: 1000})
70 [0] [0] [1 2 3 4 5 6 7 8 9]
70 training: Counter({0: 500}) testing iid: Counter({0: 1000})
71 [1] [1] [0 2 3 4 5 6 7 8 9]
71 training: Counter({1: 500}) testing iid: Counter({1: 1000})
72 [2] [2] [0 1 3 4 5 6 7 8 9]
72 training: Counter({2: 500}) testing iid: Counter({2: 1000})
73 [3] [3] [0 1 2 4 5 6 7 8 9]
73 training: Counter({3: 500}) testing iid: Counter({3: 1000})
74 [4] [4] [0 1 2 3 5 6 7 8 9]
74 training: Counter({4: 500}) testing iid: Counter({4: 1000})
75 [5] [5] [0 1 2 3 4 6 7 8 9]
75 training: Counter({5: 500}) testing iid: Counter({5: 1000})
76 [6] [6] [0 1 2 3 4 5 7 8 9]
76 training: Counter({6: 500}) testing iid: Counter({6: 1000})
77 [7] [7] [0 1 2 3 4 5 6 8 9]
77 training: Counter({7: 500}) testing iid: Counter({7: 1000})
78 [8] [8] [0 1 2 3 4 5 6 7 9]
78 training: Counter({8: 500}) testing iid: Counter({8: 1000})
79 [9] [9] [0 1 2 3 4 5 6 7 8]
79 training: Counter({9: 500}) testing iid: Counter({9: 1000})
80 [0] [0] [1 2 3 4 5 6 7 8 9]
80 training: Counter({0: 500}) testing iid: Counter({0: 1000})
81 [1] [1] [0 2 3 4 5 6 7 8 9]
81 training: Counter({1: 500}) testing iid: Counter({1: 1000})
82 [2] [2] [0 1 3 4 5 6 7 8 9]
82 training: Counter({2: 500}) testing iid: Counter({2: 1000})
83 [3] [3] [0 1 2 4 5 6 7 8 9]
83 training: Counter({3: 500}) testing iid: Counter({3: 1000})
84 [4] [4] [0 1 2 3 5 6 7 8 9]
84 training: Counter({4: 500}) testing iid: Counter({4: 1000})
85 [5] [5] [0 1 2 3 4 6 7 8 9]
85 training: Counter({5: 500}) testing iid: Counter({5: 1000})
86 [6] [6] [0 1 2 3 4 5 7 8 9]
86 training: Counter({6: 500}) testing iid: Counter({6: 1000})
87 [7] [7] [0 1 2 3 4 5 6 8 9]
87 training: Counter({7: 500}) testing iid: Counter({7: 1000})
88 [8] [8] [0 1 2 3 4 5 6 7 9]
88 training: Counter({8: 500}) testing iid: Counter({8: 1000})
89 [9] [9] [0 1 2 3 4 5 6 7 8]
89 training: Counter({9: 500}) testing iid: Counter({9: 1000})
90 [0] [0] [1 2 3 4 5 6 7 8 9]
90 training: Counter({0: 500}) testing iid: Counter({0: 1000})
91 [1] [1] [0 2 3 4 5 6 7 8 9]
91 training: Counter({1: 500}) testing iid: Counter({1: 1000})
92 [2] [2] [0 1 3 4 5 6 7 8 9]
92 training: Counter({2: 500}) testing iid: Counter({2: 1000})
93 [3] [3] [0 1 2 4 5 6 7 8 9]
93 training: Counter({3: 500}) testing iid: Counter({3: 1000})
94 [4] [4] [0 1 2 3 5 6 7 8 9]
94 training: Counter({4: 500}) testing iid: Counter({4: 1000})
95 [5] [5] [0 1 2 3 4 6 7 8 9]
95 training: Counter({5: 500}) testing iid: Counter({5: 1000})
96 [6] [6] [0 1 2 3 4 5 7 8 9]
96 training: Counter({6: 500}) testing iid: Counter({6: 1000})
97 [7] [7] [0 1 2 3 4 5 6 8 9]
97 training: Counter({7: 500}) testing iid: Counter({7: 1000})
98 [8] [8] [0 1 2 3 4 5 6 7 9]
98 training: Counter({8: 500}) testing iid: Counter({8: 1000})
99 [9] [9] [0 1 2 3 4 5 6 7 8]
99 training: Counter({9: 500}) testing iid: Counter({9: 1000})
Num_samples of Training set per client
Total_training_samples: 50000
Global test set: 10000
Finish Generating Samples, distribution saved
MobileNetV2(
  (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (layers): Sequential(
    (0): Block(
      (conv1): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): Block(
      (conv1): Conv2d(16, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=96, bias=False)
      (bn2): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(96, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(16, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (2): Block(
      (conv1): Conv2d(24, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=144, bias=False)
      (bn2): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(144, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (3): Block(
      (conv1): Conv2d(24, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(144, 144, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=144, bias=False)
      (bn2): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(144, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (4): Block(
      (conv1): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
      (bn2): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(192, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (5): Block(
      (conv1): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
      (bn2): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(192, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (6): Block(
      (conv1): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(192, 192, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=192, bias=False)
      (bn2): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(192, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (7): Block(
      (conv1): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
      (bn2): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (8): Block(
      (conv1): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
      (bn2): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (9): Block(
      (conv1): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
      (bn2): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (10): Block(
      (conv1): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
      (bn2): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(384, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(64, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (11): Block(
      (conv1): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)
      (bn2): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (12): Block(
      (conv1): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)
      (bn2): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (13): Block(
      (conv1): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(576, 576, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=576, bias=False)
      (bn2): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(576, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (14): Block(
      (conv1): Conv2d(160, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(960, 960, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=960, bias=False)
      (bn2): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(960, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (15): Block(
      (conv1): Conv2d(160, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(960, 960, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=960, bias=False)
      (bn2): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(960, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (16): Block(
      (conv1): Conv2d(160, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(960, 960, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=960, bias=False)
      (bn2): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(960, 320, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(160, 320, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (conv2): Conv2d(320, 1280, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn2): BatchNorm2d(1280, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (linear): Linear(in_features=1280, out_features=10, bias=True)
)
number of parameters: 2296922
clients initializting...
output size: 10
  0%|          | 0/100 [00:00<?, ?it/s]  1%|          | 1/100 [00:03<06:26,  3.90s/it]  2%|▏         | 2/100 [00:04<04:44,  2.90s/it]  3%|▎         | 3/100 [00:05<03:33,  2.20s/it]  4%|▍         | 4/100 [00:05<02:43,  1.70s/it]  5%|▌         | 5/100 [00:06<02:08,  1.36s/it]  6%|▌         | 6/100 [00:06<01:44,  1.11s/it]  7%|▋         | 7/100 [00:07<01:28,  1.05it/s]  8%|▊         | 8/100 [00:07<01:18,  1.18it/s]  9%|▉         | 9/100 [00:08<01:09,  1.32it/s] 10%|█         | 10/100 [00:08<01:02,  1.43it/s] 11%|█         | 11/100 [00:09<00:58,  1.52it/s] 12%|█▏        | 12/100 [00:10<00:55,  1.60it/s] 13%|█▎        | 13/100 [00:10<00:52,  1.66it/s] 14%|█▍        | 14/100 [00:11<00:50,  1.70it/s] 15%|█▌        | 15/100 [00:11<00:48,  1.74it/s] 16%|█▌        | 16/100 [00:12<00:47,  1.76it/s] 17%|█▋        | 17/100 [00:12<00:46,  1.77it/s] 18%|█▊        | 18/100 [00:13<00:45,  1.79it/s] 19%|█▉        | 19/100 [00:13<00:45,  1.79it/s] 20%|██        | 20/100 [00:14<00:44,  1.79it/s] 21%|██        | 21/100 [00:15<00:43,  1.80it/s] 22%|██▏       | 22/100 [00:15<00:43,  1.79it/s] 23%|██▎       | 23/100 [00:16<00:43,  1.75it/s] 24%|██▍       | 24/100 [00:16<00:43,  1.75it/s] 25%|██▌       | 25/100 [00:17<00:42,  1.77it/s] 26%|██▌       | 26/100 [00:17<00:41,  1.77it/s] 27%|██▋       | 27/100 [00:18<00:40,  1.78it/s] 28%|██▊       | 28/100 [00:18<00:40,  1.78it/s] 29%|██▉       | 29/100 [00:19<00:39,  1.79it/s] 30%|███       | 30/100 [00:20<00:39,  1.78it/s] 31%|███       | 31/100 [00:20<00:38,  1.80it/s] 32%|███▏      | 32/100 [00:21<00:37,  1.80it/s] 33%|███▎      | 33/100 [00:21<00:36,  1.81it/s] 34%|███▍      | 34/100 [00:22<00:36,  1.81it/s] 35%|███▌      | 35/100 [00:22<00:35,  1.81it/s] 36%|███▌      | 36/100 [00:23<00:35,  1.81it/s] 37%|███▋      | 37/100 [00:24<00:37,  1.66it/s] 38%|███▊      | 38/100 [00:24<00:36,  1.69it/s] 39%|███▉      | 39/100 [00:25<00:35,  1.72it/s] 40%|████      | 40/100 [00:25<00:34,  1.73it/s] 41%|████      | 41/100 [00:29<01:34,  1.61s/it] 42%|████▏     | 42/100 [00:30<01:15,  1.30s/it] 43%|████▎     | 43/100 [00:30<01:01,  1.08s/it] 44%|████▍     | 44/100 [00:31<00:51,  1.09it/s] 45%|████▌     | 45/100 [00:32<00:44,  1.24it/s] 46%|████▌     | 46/100 [00:32<00:39,  1.38it/s] 47%|████▋     | 47/100 [00:33<00:35,  1.49it/s] 48%|████▊     | 48/100 [00:33<00:33,  1.57it/s] 49%|████▉     | 49/100 [00:34<00:31,  1.64it/s] 50%|█████     | 50/100 [00:34<00:29,  1.68it/s] 51%|█████     | 51/100 [00:35<00:28,  1.70it/s] 52%|█████▏    | 52/100 [00:35<00:27,  1.74it/s] 53%|█████▎    | 53/100 [00:36<00:26,  1.74it/s] 54%|█████▍    | 54/100 [00:37<00:26,  1.76it/s] 55%|█████▌    | 55/100 [00:37<00:25,  1.78it/s] 56%|█████▌    | 56/100 [00:38<00:24,  1.78it/s] 57%|█████▋    | 57/100 [00:38<00:24,  1.78it/s] 58%|█████▊    | 58/100 [00:39<00:23,  1.79it/s] 59%|█████▉    | 59/100 [00:39<00:23,  1.78it/s] 60%|██████    | 60/100 [00:40<00:22,  1.74it/s] 61%|██████    | 61/100 [00:41<00:22,  1.76it/s] 62%|██████▏   | 62/100 [00:41<00:21,  1.79it/s] 63%|██████▎   | 63/100 [00:42<00:20,  1.78it/s] 64%|██████▍   | 64/100 [00:42<00:20,  1.79it/s] 65%|██████▌   | 65/100 [00:43<00:19,  1.80it/s] 66%|██████▌   | 66/100 [00:43<00:18,  1.80it/s] 67%|██████▋   | 67/100 [00:44<00:18,  1.77it/s] 68%|██████▊   | 68/100 [00:44<00:17,  1.79it/s] 69%|██████▉   | 69/100 [00:45<00:17,  1.79it/s] 70%|███████   | 70/100 [00:45<00:16,  1.81it/s] 71%|███████   | 71/100 [00:46<00:16,  1.81it/s] 72%|███████▏  | 72/100 [00:47<00:15,  1.81it/s] 73%|███████▎  | 73/100 [00:47<00:14,  1.81it/s] 74%|███████▍  | 74/100 [00:48<00:14,  1.81it/s] 75%|███████▌  | 75/100 [00:48<00:13,  1.81it/s] 76%|███████▌  | 76/100 [00:49<00:13,  1.81it/s] 77%|███████▋  | 77/100 [00:49<00:12,  1.81it/s] 78%|███████▊  | 78/100 [00:50<00:12,  1.81it/s] 79%|███████▉  | 79/100 [00:50<00:11,  1.81it/s] 80%|████████  | 80/100 [00:51<00:11,  1.81it/s] 81%|████████  | 81/100 [00:52<00:10,  1.80it/s] 82%|████████▏ | 82/100 [00:52<00:10,  1.79it/s] 83%|████████▎ | 83/100 [00:56<00:26,  1.58s/it] 84%|████████▍ | 84/100 [00:57<00:20,  1.28s/it] 85%|████████▌ | 85/100 [00:57<00:15,  1.06s/it] 86%|████████▌ | 86/100 [00:58<00:12,  1.10it/s] 87%|████████▋ | 87/100 [00:58<00:10,  1.25it/s] 88%|████████▊ | 88/100 [00:59<00:08,  1.38it/s] 89%|████████▉ | 89/100 [00:59<00:07,  1.47it/s] 90%|█████████ | 90/100 [01:00<00:06,  1.55it/s] 91%|█████████ | 91/100 [01:01<00:05,  1.62it/s] 92%|█████████▏| 92/100 [01:01<00:04,  1.67it/s] 93%|█████████▎| 93/100 [01:02<00:04,  1.70it/s] 94%|█████████▍| 94/100 [01:02<00:03,  1.73it/s] 95%|█████████▌| 95/100 [01:03<00:02,  1.75it/s] 96%|█████████▌| 96/100 [01:03<00:02,  1.76it/s] 97%|█████████▋| 97/100 [01:04<00:01,  1.77it/s] 98%|█████████▊| 98/100 [01:04<00:01,  1.78it/s] 99%|█████████▉| 99/100 [01:05<00:00,  1.73it/s]100%|██████████| 100/100 [01:06<00:00,  1.75it/s]100%|██████████| 100/100 [01:06<00:00,  1.51it/s]
Number of users per round / total users: 10  /  100
Finished creating FL server.
=== Training starts: algorithm FedFea ===
-------------Round number:  0  -------------
selected users: [26, 86, 2, 55, 75, 93, 16, 73, 54, 95]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.001
training loss: tensor(2.1806) feature loss: tensor(0.6371)
Local adapation with distilling: 0.001
training loss: tensor(2.1968) feature loss: tensor(0.6371)
Local adapation with distilling: 0.001
training loss: tensor(2.4833) feature loss: tensor(0.5778)
Local adapation with distilling: 0.001
training loss: tensor(2.1798) feature loss: tensor(0.6036)
Local adapation with distilling: 0.001
training loss: tensor(2.1996) feature loss: tensor(0.6158)
Local adapation with distilling: 0.001
training loss: tensor(2.2813) feature loss: tensor(0.6246)
Local adapation with distilling: 0.001
training loss: tensor(2.1666) feature loss: tensor(0.6183)
Local adapation with distilling: 0.001
training loss: tensor(2.2966) feature loss: tensor(0.6284)
Local adapation with distilling: 0.001
training loss: tensor(2.5058) feature loss: tensor(0.5950)
Local adapation with distilling: 0.001
training loss: tensor(2.1931) feature loss: tensor(0.6150)
Global Model Acc on global data: 0.1014 length of data: 10000
save a model
-------------Round number:  1  -------------
selected users: [80, 84, 33, 81, 93, 17, 36, 82, 69, 65]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.000982
training loss: tensor(2.2924) feature loss: tensor(0.7081)
Local adapation with distilling: 0.000982
training loss: tensor(2.2323) feature loss: tensor(0.5415)
Local adapation with distilling: 0.000982
training loss: tensor(2.1566) feature loss: tensor(0.6036)
Local adapation with distilling: 0.000982
training loss: tensor(2.3253) feature loss: tensor(0.6691)
Local adapation with distilling: 0.000982
training loss: tensor(2.1247) feature loss: tensor(0.5713)
Local adapation with distilling: 0.000982
training loss: tensor(2.2400) feature loss: tensor(0.6503)
Local adapation with distilling: 0.000982
training loss: tensor(2.1831) feature loss: tensor(0.4736)
Local adapation with distilling: 0.000982
training loss: tensor(2.2643) feature loss: tensor(0.5221)
Local adapation with distilling: 0.000982
training loss: tensor(2.2978) feature loss: tensor(0.6479)
Local adapation with distilling: 0.000982
training loss: tensor(2.1230) feature loss: tensor(0.4771)
Global Model Acc on global data: 0.1353 length of data: 10000
save a model
-------------Round number:  2  -------------
selected users: [83, 30, 56, 24, 16, 23, 2, 27, 28, 13]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.000964
training loss: tensor(1.4964) feature loss: tensor(0.5197)
Local adapation with distilling: 0.000964
training loss: tensor(1.7793) feature loss: tensor(0.5978)
Local adapation with distilling: 0.000964
training loss: tensor(1.6801) feature loss: tensor(0.5082)
Local adapation with distilling: 0.000964
training loss: tensor(1.7236) feature loss: tensor(0.4635)
Local adapation with distilling: 0.000964
training loss: tensor(1.6168) feature loss: tensor(0.4619)
Local adapation with distilling: 0.000964
training loss: tensor(1.6311) feature loss: tensor(0.5256)
Local adapation with distilling: 0.000964
training loss: tensor(1.7689) feature loss: tensor(0.4979)
Local adapation with distilling: 0.000964
training loss: tensor(1.9646) feature loss: tensor(0.6032)
Local adapation with distilling: 0.000964
training loss: tensor(1.7567) feature loss: tensor(0.6030)
Local adapation with distilling: 0.000964
training loss: tensor(1.5935) feature loss: tensor(0.5337)
Global Model Acc on global data: 0.1631 length of data: 10000
save a model
-------------Round number:  3  -------------
selected users: [93, 67, 6, 64, 96, 83, 98, 42, 25, 15]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.000946
training loss: tensor(1.3369) feature loss: tensor(0.4622)
Local adapation with distilling: 0.000946
training loss: tensor(1.7419) feature loss: tensor(0.5793)
Local adapation with distilling: 0.000946
training loss: tensor(1.3194) feature loss: tensor(0.4638)
Local adapation with distilling: 0.000946
training loss: tensor(1.4550) feature loss: tensor(0.4417)
Local adapation with distilling: 0.000946
training loss: tensor(1.5190) feature loss: tensor(0.5369)
Local adapation with distilling: 0.000946
training loss: tensor(1.4015) feature loss: tensor(0.5552)
Local adapation with distilling: 0.000946
training loss: tensor(1.7303) feature loss: tensor(0.5701)
Local adapation with distilling: 0.000946
training loss: tensor(1.5753) feature loss: tensor(0.4785)
Local adapation with distilling: 0.000946
training loss: tensor(1.2976) feature loss: tensor(0.4836)
Local adapation with distilling: 0.000946
training loss: tensor(1.4590) feature loss: tensor(0.5613)
Global Model Acc on global data: 0.1927 length of data: 10000
save a model
-------------Round number:  4  -------------
selected users: [20, 10, 96, 16, 63, 24, 53, 97, 41, 47]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(2.0132) feature loss: tensor(0.7187)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.9735) feature loss: tensor(0.7291)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.2563) feature loss: tensor(0.5522)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.3243) feature loss: tensor(0.5626)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.3346) feature loss: tensor(0.6036)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.3723) feature loss: tensor(0.5437)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.3761) feature loss: tensor(0.6543)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.4149) feature loss: tensor(0.6055)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(2.0621) feature loss: tensor(0.7407)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.4584) feature loss: tensor(0.6963)
Global Model Acc on global data: 0.2039 length of data: 10000
save a model
-------------Round number:  5  -------------
selected users: [66, 32, 46, 28, 74, 23, 10, 20, 17, 35]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.00091
training loss: tensor(1.1615) feature loss: tensor(0.5265)
Local adapation with distilling: 0.00091
training loss: tensor(1.3124) feature loss: tensor(0.5225)
Local adapation with distilling: 0.00091
training loss: tensor(1.2093) feature loss: tensor(0.4889)
Local adapation with distilling: 0.00091
training loss: tensor(1.6205) feature loss: tensor(0.5574)
Local adapation with distilling: 0.00091
training loss: tensor(1.2556) feature loss: tensor(0.4569)
Local adapation with distilling: 0.00091
training loss: tensor(1.0999) feature loss: tensor(0.4607)
Local adapation with distilling: 0.00091
training loss: tensor(1.6505) feature loss: tensor(0.6148)
Local adapation with distilling: 0.00091
training loss: tensor(1.7277) feature loss: tensor(0.6069)
Local adapation with distilling: 0.00091
training loss: tensor(1.1974) feature loss: tensor(0.4698)
Local adapation with distilling: 0.00091
training loss: tensor(1.1512) feature loss: tensor(0.4404)
Global Model Acc on global data: 0.2188 length of data: 10000
save a model
-------------Round number:  6  -------------
selected users: [17, 34, 0, 45, 60, 86, 20, 47, 44, 81]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.000892
training loss: tensor(1.0156) feature loss: tensor(0.5055)
Local adapation with distilling: 0.000892
training loss: tensor(1.0073) feature loss: tensor(0.4916)
Local adapation with distilling: 0.000892
training loss: tensor(1.3531) feature loss: tensor(0.6538)
Local adapation with distilling: 0.000892
training loss: tensor(1.0048) feature loss: tensor(0.4672)
Local adapation with distilling: 0.000892
training loss: tensor(1.2870) feature loss: tensor(0.6060)
Local adapation with distilling: 0.000892
training loss: tensor(1.0745) feature loss: tensor(0.5488)
Local adapation with distilling: 0.000892
training loss: tensor(1.2929) feature loss: tensor(0.6087)
Local adapation with distilling: 0.000892
training loss: tensor(1.0670) feature loss: tensor(0.4880)
Local adapation with distilling: 0.000892
training loss: tensor(1.0714) feature loss: tensor(0.5085)
Local adapation with distilling: 0.000892
training loss: tensor(1.6195) feature loss: tensor(0.6690)
Global Model Acc on global data: 0.2101 length of data: 10000
-------------Round number:  7  -------------
selected users: [37, 26, 78, 91, 49, 15, 93, 71, 86, 22]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.000874
training loss: tensor(1.3618) feature loss: tensor(0.6234)
Local adapation with distilling: 0.000874
training loss: tensor(1.2806) feature loss: tensor(0.5892)
Local adapation with distilling: 0.000874
training loss: tensor(1.6504) feature loss: tensor(0.6714)
Local adapation with distilling: 0.000874
training loss: tensor(1.8536) feature loss: tensor(0.7978)
Local adapation with distilling: 0.000874
training loss: tensor(2.4944) feature loss: tensor(0.7391)
Local adapation with distilling: 0.000874
training loss: tensor(1.5362) feature loss: tensor(0.7647)
Local adapation with distilling: 0.000874
training loss: tensor(1.5171) feature loss: tensor(0.6886)
Local adapation with distilling: 0.000874
training loss: tensor(1.8343) feature loss: tensor(0.7717)
Local adapation with distilling: 0.000874
training loss: tensor(1.3514) feature loss: tensor(0.6175)
Local adapation with distilling: 0.000874
training loss: tensor(1.6680) feature loss: tensor(0.8312)
Global Model Acc on global data: 0.3097 length of data: 10000
save a model
-------------Round number:  8  -------------
selected users: [17, 23, 1, 44, 55, 99, 86, 29, 62, 33]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.000856
training loss: tensor(1.4622) feature loss: tensor(0.6489)
Local adapation with distilling: 0.000856
training loss: tensor(1.2090) feature loss: tensor(0.5496)
Local adapation with distilling: 0.000856
training loss: tensor(1.3041) feature loss: tensor(0.5250)
Local adapation with distilling: 0.000856
training loss: tensor(1.3806) feature loss: tensor(0.5468)
Local adapation with distilling: 0.000856
training loss: tensor(1.4206) feature loss: tensor(0.6022)
Local adapation with distilling: 0.000856
training loss: tensor(1.7987) feature loss: tensor(0.6331)
Local adapation with distilling: 0.000856
training loss: tensor(1.2790) feature loss: tensor(0.5623)
Local adapation with distilling: 0.000856
training loss: tensor(1.7043) feature loss: tensor(0.6205)
Local adapation with distilling: 0.000856
training loss: tensor(1.4646) feature loss: tensor(0.6315)
Local adapation with distilling: 0.000856
training loss: tensor(1.4327) feature loss: tensor(0.6788)
Global Model Acc on global data: 0.3074 length of data: 10000
-------------Round number:  9  -------------
selected users: [75, 42, 46, 68, 3, 39, 23, 20, 70, 73]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.9003) feature loss: tensor(0.4378)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(1.1181) feature loss: tensor(0.4781)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.9048) feature loss: tensor(0.4417)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(1.6445) feature loss: tensor(0.5953)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.9034) feature loss: tensor(0.4381)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(1.4686) feature loss: tensor(0.5597)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.8718) feature loss: tensor(0.4579)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(1.3170) feature loss: tensor(0.6175)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(1.3735) feature loss: tensor(0.6047)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.9221) feature loss: tensor(0.4469)
Global Model Acc on global data: 0.3211 length of data: 10000
save a model
-------------Round number:  10  -------------
selected users: [19, 14, 43, 37, 66, 3, 79, 41, 38, 68]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(1.2155) feature loss: tensor(0.5691)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(1.0810) feature loss: tensor(0.4446)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.8055) feature loss: tensor(0.4260)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.9294) feature loss: tensor(0.4418)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.8852) feature loss: tensor(0.4535)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.8061) feature loss: tensor(0.4503)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(1.2009) feature loss: tensor(0.4876)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(1.2575) feature loss: tensor(0.5544)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(1.1562) feature loss: tensor(0.5245)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(1.2391) feature loss: tensor(0.5531)
Global Model Acc on global data: 0.3392 length of data: 10000
save a model
-------------Round number:  11  -------------
selected users: [46, 49, 22, 58, 41, 98, 62, 29, 30, 51]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.8527) feature loss: tensor(0.4362)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(1.1422) feature loss: tensor(0.5738)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(1.1655) feature loss: tensor(0.5734)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(1.1418) feature loss: tensor(0.5630)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(1.2443) feature loss: tensor(0.5948)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(1.1523) feature loss: tensor(0.5793)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(1.1651) feature loss: tensor(0.5802)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(1.1034) feature loss: tensor(0.5224)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(1.1757) feature loss: tensor(0.5795)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(1.2211) feature loss: tensor(0.6019)
Global Model Acc on global data: 0.3565 length of data: 10000
save a model
-------------Round number:  12  -------------
selected users: [17, 41, 92, 14, 68, 31, 89, 15, 21, 60]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(1.1408) feature loss: tensor(0.5292)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(1.0363) feature loss: tensor(0.4913)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(1.1316) feature loss: tensor(0.5055)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(1.0790) feature loss: tensor(0.4917)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.9962) feature loss: tensor(0.4814)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(1.0333) feature loss: tensor(0.5065)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.9459) feature loss: tensor(0.4518)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(1.0972) feature loss: tensor(0.5146)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(1.0296) feature loss: tensor(0.4739)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(1.0825) feature loss: tensor(0.5129)
Global Model Acc on global data: 0.3806 length of data: 10000
save a model
-------------Round number:  13  -------------
selected users: [37, 62, 83, 14, 43, 9, 44, 31, 69, 57]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(1.2753) feature loss: tensor(0.5654)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(1.2213) feature loss: tensor(0.5806)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(1.0864) feature loss: tensor(0.6172)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(1.0750) feature loss: tensor(0.5691)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(1.0862) feature loss: tensor(0.5735)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.9375) feature loss: tensor(0.4322)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(1.0995) feature loss: tensor(0.5729)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.8339) feature loss: tensor(0.4207)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.9336) feature loss: tensor(0.4391)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(1.2476) feature loss: tensor(0.5978)
Global Model Acc on global data: 0.3582 length of data: 10000
-------------Round number:  14  -------------
selected users: [24, 39, 35, 44, 55, 70, 82, 40, 91, 65]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.000748
training loss: tensor(0.8848) feature loss: tensor(0.4878)
Local adapation with distilling: 0.000748
training loss: tensor(0.9136) feature loss: tensor(0.4595)
Local adapation with distilling: 0.000748
training loss: tensor(1.0307) feature loss: tensor(0.5487)
Local adapation with distilling: 0.000748
training loss: tensor(1.0046) feature loss: tensor(0.5179)
Local adapation with distilling: 0.000748
training loss: tensor(0.9804) feature loss: tensor(0.5118)
Local adapation with distilling: 0.000748
training loss: tensor(1.0512) feature loss: tensor(0.5278)
Local adapation with distilling: 0.000748
training loss: tensor(0.9893) feature loss: tensor(0.5174)
Local adapation with distilling: 0.000748
training loss: tensor(1.1066) feature loss: tensor(0.5449)
Local adapation with distilling: 0.000748
training loss: tensor(0.9121) feature loss: tensor(0.4530)
Local adapation with distilling: 0.000748
training loss: tensor(1.0275) feature loss: tensor(0.5340)
Global Model Acc on global data: 0.3418 length of data: 10000
-------------Round number:  15  -------------
selected users: [84, 36, 57, 51, 46, 78, 93, 14, 11, 59]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.00073
training loss: tensor(0.9548) feature loss: tensor(0.4712)
Local adapation with distilling: 0.00073
training loss: tensor(1.0143) feature loss: tensor(0.4561)
Local adapation with distilling: 0.00073
training loss: tensor(0.9876) feature loss: tensor(0.5528)
Local adapation with distilling: 0.00073
training loss: tensor(0.8940) feature loss: tensor(0.4152)
Local adapation with distilling: 0.00073
training loss: tensor(1.0276) feature loss: tensor(0.4858)
Local adapation with distilling: 0.00073
training loss: tensor(1.0413) feature loss: tensor(0.4434)
Local adapation with distilling: 0.00073
training loss: tensor(0.8979) feature loss: tensor(0.4237)
Local adapation with distilling: 0.00073
training loss: tensor(0.9169) feature loss: tensor(0.4529)
Local adapation with distilling: 0.00073
training loss: tensor(0.9950) feature loss: tensor(0.4732)
Local adapation with distilling: 0.00073
training loss: tensor(1.0112) feature loss: tensor(0.4488)
Global Model Acc on global data: 0.3284 length of data: 10000
-------------Round number:  16  -------------
selected users: [7, 25, 71, 42, 47, 29, 63, 88, 50, 9]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.000712
training loss: tensor(0.9475) feature loss: tensor(0.4520)
Local adapation with distilling: 0.000712
training loss: tensor(0.9273) feature loss: tensor(0.4914)
Local adapation with distilling: 0.000712
training loss: tensor(0.9909) feature loss: tensor(0.4930)
Local adapation with distilling: 0.000712
training loss: tensor(1.0704) feature loss: tensor(0.5401)
Local adapation with distilling: 0.000712
training loss: tensor(1.1580) feature loss: tensor(0.6193)
Local adapation with distilling: 0.000712
training loss: tensor(1.1112) feature loss: tensor(0.5405)
Local adapation with distilling: 0.000712
training loss: tensor(0.9654) feature loss: tensor(0.5089)
Local adapation with distilling: 0.000712
training loss: tensor(1.0704) feature loss: tensor(0.4994)
Local adapation with distilling: 0.000712
training loss: tensor(1.1448) feature loss: tensor(0.5393)
Local adapation with distilling: 0.000712
training loss: tensor(1.0763) feature loss: tensor(0.4959)
Global Model Acc on global data: 0.4029 length of data: 10000
save a model
-------------Round number:  17  -------------
selected users: [71, 28, 9, 4, 73, 34, 94, 92, 47, 37]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.000694
training loss: tensor(0.7357) feature loss: tensor(0.3360)
Local adapation with distilling: 0.000694
training loss: tensor(0.7468) feature loss: tensor(0.3246)
Local adapation with distilling: 0.000694
training loss: tensor(0.7503) feature loss: tensor(0.3323)
Local adapation with distilling: 0.000694
training loss: tensor(0.8155) feature loss: tensor(0.4321)
Local adapation with distilling: 0.000694
training loss: tensor(0.7745) feature loss: tensor(0.3854)
Local adapation with distilling: 0.000694
training loss: tensor(0.8001) feature loss: tensor(0.4241)
Local adapation with distilling: 0.000694
training loss: tensor(0.7481) feature loss: tensor(0.3823)
Local adapation with distilling: 0.000694
training loss: tensor(0.8705) feature loss: tensor(0.4291)
Local adapation with distilling: 0.000694
training loss: tensor(0.8798) feature loss: tensor(0.4867)
Local adapation with distilling: 0.000694
training loss: tensor(0.7995) feature loss: tensor(0.4507)
Global Model Acc on global data: 0.3554 length of data: 10000
-------------Round number:  18  -------------
selected users: [53, 47, 43, 54, 33, 48, 0, 12, 44, 91]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.7404) feature loss: tensor(0.3608)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.7102) feature loss: tensor(0.3527)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.7477) feature loss: tensor(0.3879)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.6879) feature loss: tensor(0.3303)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.7795) feature loss: tensor(0.3652)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.8403) feature loss: tensor(0.3856)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(1.0297) feature loss: tensor(0.4170)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.8377) feature loss: tensor(0.4147)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.6454) feature loss: tensor(0.3169)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.7905) feature loss: tensor(0.3522)
Global Model Acc on global data: 0.3541 length of data: 10000
-------------Round number:  19  -------------
selected users: [85, 72, 16, 18, 2, 38, 90, 30, 83, 61]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.9389) feature loss: tensor(0.4416)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.9874) feature loss: tensor(0.5323)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(1.2035) feature loss: tensor(0.4371)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.9038) feature loss: tensor(0.4518)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.9632) feature loss: tensor(0.4832)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.9667) feature loss: tensor(0.4739)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(1.1186) feature loss: tensor(0.5299)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(1.1716) feature loss: tensor(0.5702)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.7969) feature loss: tensor(0.4396)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.9274) feature loss: tensor(0.4469)
Global Model Acc on global data: 0.3733 length of data: 10000
-------------Round number:  20  -------------
selected users: [70, 74, 2, 44, 56, 48, 12, 36, 0, 49]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.00064
training loss: tensor(0.9965) feature loss: tensor(0.4919)
Local adapation with distilling: 0.00064
training loss: tensor(0.7877) feature loss: tensor(0.4099)
Local adapation with distilling: 0.00064
training loss: tensor(0.9203) feature loss: tensor(0.4862)
Local adapation with distilling: 0.00064
training loss: tensor(0.8780) feature loss: tensor(0.4501)
Local adapation with distilling: 0.00064
training loss: tensor(1.0555) feature loss: tensor(0.4672)
Local adapation with distilling: 0.00064
training loss: tensor(0.7904) feature loss: tensor(0.4268)
Local adapation with distilling: 0.00064
training loss: tensor(0.8437) feature loss: tensor(0.4842)
Local adapation with distilling: 0.00064
training loss: tensor(1.0106) feature loss: tensor(0.4329)
Local adapation with distilling: 0.00064
training loss: tensor(0.9944) feature loss: tensor(0.5066)
Local adapation with distilling: 0.00064
training loss: tensor(1.0606) feature loss: tensor(0.4185)
Global Model Acc on global data: 0.3777 length of data: 10000
-------------Round number:  21  -------------
selected users: [23, 81, 85, 34, 62, 46, 42, 31, 93, 11]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.8741) feature loss: tensor(0.4469)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.8604) feature loss: tensor(0.3939)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(1.2216) feature loss: tensor(0.6098)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.8935) feature loss: tensor(0.4207)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.9605) feature loss: tensor(0.4485)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(1.0260) feature loss: tensor(0.4835)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(1.0621) feature loss: tensor(0.5759)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.8436) feature loss: tensor(0.3445)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.9414) feature loss: tensor(0.4885)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.8613) feature loss: tensor(0.3662)
Global Model Acc on global data: 0.3814 length of data: 10000
-------------Round number:  22  -------------
selected users: [2, 49, 82, 31, 37, 12, 87, 42, 99, 85]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.8586) feature loss: tensor(0.5174)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.9709) feature loss: tensor(0.4702)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.8950) feature loss: tensor(0.5268)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.8632) feature loss: tensor(0.4973)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(1.3985) feature loss: tensor(0.6477)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(1.0127) feature loss: tensor(0.5681)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(1.3023) feature loss: tensor(0.5495)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.9226) feature loss: tensor(0.5433)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(1.1788) feature loss: tensor(0.5382)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(1.0869) feature loss: tensor(0.6087)
Global Model Acc on global data: 0.3709 length of data: 10000
-------------Round number:  23  -------------
selected users: [26, 80, 82, 68, 77, 37, 3, 55, 20, 17]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.000586
training loss: tensor(0.9467) feature loss: tensor(0.3809)
Local adapation with distilling: 0.000586
training loss: tensor(1.0740) feature loss: tensor(0.5128)
Local adapation with distilling: 0.000586
training loss: tensor(0.8130) feature loss: tensor(0.4525)
Local adapation with distilling: 0.000586
training loss: tensor(0.9773) feature loss: tensor(0.4891)
Local adapation with distilling: 0.000586
training loss: tensor(0.8562) feature loss: tensor(0.4423)
Local adapation with distilling: 0.000586
training loss: tensor(0.8453) feature loss: tensor(0.4761)
Local adapation with distilling: 0.000586
training loss: tensor(0.7936) feature loss: tensor(0.4007)
Local adapation with distilling: 0.000586
training loss: tensor(0.8213) feature loss: tensor(0.3823)
Local adapation with distilling: 0.000586
training loss: tensor(0.9799) feature loss: tensor(0.4557)
Local adapation with distilling: 0.000586
training loss: tensor(0.7808) feature loss: tensor(0.4016)
Global Model Acc on global data: 0.4222 length of data: 10000
save a model
-------------Round number:  24  -------------
selected users: [26, 31, 37, 86, 76, 14, 88, 48, 71, 67]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.000568
training loss: tensor(0.7414) feature loss: tensor(0.3387)
Local adapation with distilling: 0.000568
training loss: tensor(0.7904) feature loss: tensor(0.4266)
Local adapation with distilling: 0.000568
training loss: tensor(0.5560) feature loss: tensor(0.3267)
Local adapation with distilling: 0.000568
training loss: tensor(0.8345) feature loss: tensor(0.3176)
Local adapation with distilling: 0.000568
training loss: tensor(0.7673) feature loss: tensor(0.3711)
Local adapation with distilling: 0.000568
training loss: tensor(0.6822) feature loss: tensor(0.3133)
Local adapation with distilling: 0.000568
training loss: tensor(0.8004) feature loss: tensor(0.3909)
Local adapation with distilling: 0.000568
training loss: tensor(0.7383) feature loss: tensor(0.3687)
Local adapation with distilling: 0.000568
training loss: tensor(0.7809) feature loss: tensor(0.3840)
Local adapation with distilling: 0.000568
training loss: tensor(0.6940) feature loss: tensor(0.3970)
Global Model Acc on global data: 0.4391 length of data: 10000
save a model
-------------Round number:  25  -------------
selected users: [41, 29, 33, 65, 74, 6, 57, 89, 87, 98]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.00055
training loss: tensor(0.8889) feature loss: tensor(0.4013)
Local adapation with distilling: 0.00055
training loss: tensor(1.0642) feature loss: tensor(0.4132)
Local adapation with distilling: 0.00055
training loss: tensor(0.9214) feature loss: tensor(0.3797)
Local adapation with distilling: 0.00055
training loss: tensor(0.9369) feature loss: tensor(0.4443)
Local adapation with distilling: 0.00055
training loss: tensor(1.0077) feature loss: tensor(0.4929)
Local adapation with distilling: 0.00055
training loss: tensor(0.8179) feature loss: tensor(0.4049)
Local adapation with distilling: 0.00055
training loss: tensor(0.8093) feature loss: tensor(0.4607)
Local adapation with distilling: 0.00055
training loss: tensor(1.0552) feature loss: tensor(0.3970)
Local adapation with distilling: 0.00055
training loss: tensor(0.7663) feature loss: tensor(0.4100)
Local adapation with distilling: 0.00055
training loss: tensor(0.9044) feature loss: tensor(0.4181)
Global Model Acc on global data: 0.4617 length of data: 10000
save a model
-------------Round number:  26  -------------
selected users: [8, 69, 84, 41, 25, 5, 63, 95, 33, 70]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.000532
training loss: tensor(0.8129) feature loss: tensor(0.4065)
Local adapation with distilling: 0.000532
training loss: tensor(0.8333) feature loss: tensor(0.3980)
Local adapation with distilling: 0.000532
training loss: tensor(0.8281) feature loss: tensor(0.3689)
Local adapation with distilling: 0.000532
training loss: tensor(0.8817) feature loss: tensor(0.4324)
Local adapation with distilling: 0.000532
training loss: tensor(0.8128) feature loss: tensor(0.4767)
Local adapation with distilling: 0.000532
training loss: tensor(0.7894) feature loss: tensor(0.4106)
Local adapation with distilling: 0.000532
training loss: tensor(0.8219) feature loss: tensor(0.4558)
Local adapation with distilling: 0.000532
training loss: tensor(0.7920) feature loss: tensor(0.4313)
Local adapation with distilling: 0.000532
training loss: tensor(0.7983) feature loss: tensor(0.3810)
Local adapation with distilling: 0.000532
training loss: tensor(1.0105) feature loss: tensor(0.4413)
Global Model Acc on global data: 0.4736 length of data: 10000
save a model
-------------Round number:  27  -------------
selected users: [89, 68, 43, 50, 40, 95, 27, 85, 22, 44]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.000514
training loss: tensor(0.9444) feature loss: tensor(0.4303)
Local adapation with distilling: 0.000514
training loss: tensor(0.7769) feature loss: tensor(0.3551)
Local adapation with distilling: 0.000514
training loss: tensor(0.7281) feature loss: tensor(0.3777)
Local adapation with distilling: 0.000514
training loss: tensor(0.8790) feature loss: tensor(0.3959)
Local adapation with distilling: 0.000514
training loss: tensor(0.8922) feature loss: tensor(0.3946)
Local adapation with distilling: 0.000514
training loss: tensor(0.6447) feature loss: tensor(0.3264)
Local adapation with distilling: 0.000514
training loss: tensor(0.7029) feature loss: tensor(0.3381)
Local adapation with distilling: 0.000514
training loss: tensor(0.6723) feature loss: tensor(0.3244)
Local adapation with distilling: 0.000514
training loss: tensor(0.8052) feature loss: tensor(0.3278)
Local adapation with distilling: 0.000514
training loss: tensor(0.7524) feature loss: tensor(0.3721)
Global Model Acc on global data: 0.4899 length of data: 10000
save a model
-------------Round number:  28  -------------
selected users: [67, 14, 0, 86, 13, 18, 30, 36, 52, 95]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.000496
training loss: tensor(0.6419) feature loss: tensor(0.3016)
Local adapation with distilling: 0.000496
training loss: tensor(0.6172) feature loss: tensor(0.2893)
Local adapation with distilling: 0.000496
training loss: tensor(0.7790) feature loss: tensor(0.3168)
Local adapation with distilling: 0.000496
training loss: tensor(0.8405) feature loss: tensor(0.3075)
Local adapation with distilling: 0.000496
training loss: tensor(0.5978) feature loss: tensor(0.2943)
Local adapation with distilling: 0.000496
training loss: tensor(0.6548) feature loss: tensor(0.3004)
Local adapation with distilling: 0.000496
training loss: tensor(0.7591) feature loss: tensor(0.3083)
Local adapation with distilling: 0.000496
training loss: tensor(0.7683) feature loss: tensor(0.3421)
Local adapation with distilling: 0.000496
training loss: tensor(0.7992) feature loss: tensor(0.3554)
Local adapation with distilling: 0.000496
training loss: tensor(0.5895) feature loss: tensor(0.2922)
Global Model Acc on global data: 0.4576 length of data: 10000
-------------Round number:  29  -------------
selected users: [73, 8, 10, 7, 19, 71, 92, 25, 38, 12]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.6514) feature loss: tensor(0.3399)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.8600) feature loss: tensor(0.4364)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.8064) feature loss: tensor(0.3596)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.7044) feature loss: tensor(0.3538)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(1.1280) feature loss: tensor(0.4258)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.9328) feature loss: tensor(0.3665)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.6913) feature loss: tensor(0.3326)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.6374) feature loss: tensor(0.3331)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.8127) feature loss: tensor(0.3925)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.7006) feature loss: tensor(0.3390)
Global Model Acc on global data: 0.5032 length of data: 10000
save a model
-------------Round number:  30  -------------
selected users: [20, 91, 34, 52, 8, 74, 21, 88, 80, 89]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.6538) feature loss: tensor(0.3110)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.7171) feature loss: tensor(0.3049)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.5911) feature loss: tensor(0.2706)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.5196) feature loss: tensor(0.2637)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.6035) feature loss: tensor(0.3221)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.5961) feature loss: tensor(0.2717)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.7271) feature loss: tensor(0.3243)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.6537) feature loss: tensor(0.3280)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.6803) feature loss: tensor(0.3110)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.8159) feature loss: tensor(0.3246)
Global Model Acc on global data: 0.4655 length of data: 10000
-------------Round number:  31  -------------
selected users: [17, 33, 76, 3, 56, 0, 37, 8, 60, 67]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.6988) feature loss: tensor(0.3472)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.7257) feature loss: tensor(0.3742)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.7359) feature loss: tensor(0.3456)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.6703) feature loss: tensor(0.3494)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.7445) feature loss: tensor(0.3523)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.6586) feature loss: tensor(0.3542)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.7668) feature loss: tensor(0.4104)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.5881) feature loss: tensor(0.3442)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.6764) feature loss: tensor(0.3587)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.7755) feature loss: tensor(0.4356)
Global Model Acc on global data: 0.4713 length of data: 10000
-------------Round number:  32  -------------
selected users: [22, 39, 85, 97, 55, 33, 80, 13, 27, 96]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(1.1469) feature loss: tensor(0.5220)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(1.0807) feature loss: tensor(0.4237)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(1.0466) feature loss: tensor(0.5708)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.8671) feature loss: tensor(0.4365)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.9720) feature loss: tensor(0.4808)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.9082) feature loss: tensor(0.4603)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.7464) feature loss: tensor(0.3620)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.7293) feature loss: tensor(0.3559)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.7597) feature loss: tensor(0.3830)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.9048) feature loss: tensor(0.4224)
Global Model Acc on global data: 0.4892 length of data: 10000
-------------Round number:  33  -------------
selected users: [56, 90, 95, 82, 60, 71, 6, 81, 2, 70]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.5896) feature loss: tensor(0.2682)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.6615) feature loss: tensor(0.3076)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.5273) feature loss: tensor(0.2706)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.6871) feature loss: tensor(0.2826)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.6733) feature loss: tensor(0.3367)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.7350) feature loss: tensor(0.3154)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.6130) feature loss: tensor(0.2715)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.7736) feature loss: tensor(0.3345)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.6592) feature loss: tensor(0.2903)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.6527) feature loss: tensor(0.3081)
Global Model Acc on global data: 0.4418 length of data: 10000
-------------Round number:  34  -------------
selected users: [14, 74, 15, 4, 32, 59, 91, 10, 50, 53]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.000388
training loss: tensor(0.7142) feature loss: tensor(0.3225)
Local adapation with distilling: 0.000388
training loss: tensor(0.7656) feature loss: tensor(0.3180)
Local adapation with distilling: 0.000388
training loss: tensor(0.7049) feature loss: tensor(0.3303)
Local adapation with distilling: 0.000388
training loss: tensor(0.8180) feature loss: tensor(0.3551)
Local adapation with distilling: 0.000388
training loss: tensor(0.8094) feature loss: tensor(0.4355)
Local adapation with distilling: 0.000388
training loss: tensor(1.1476) feature loss: tensor(0.3758)
Local adapation with distilling: 0.000388
training loss: tensor(0.7450) feature loss: tensor(0.3261)
Local adapation with distilling: 0.000388
training loss: tensor(0.7280) feature loss: tensor(0.3738)
Local adapation with distilling: 0.000388
training loss: tensor(0.6634) feature loss: tensor(0.3327)
Local adapation with distilling: 0.000388
training loss: tensor(0.7326) feature loss: tensor(0.3695)
Global Model Acc on global data: 0.4536 length of data: 10000
-------------Round number:  35  -------------
selected users: [40, 71, 98, 27, 70, 31, 10, 24, 51, 35]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.00037
training loss: tensor(0.6464) feature loss: tensor(0.3390)
Local adapation with distilling: 0.00037
training loss: tensor(0.6215) feature loss: tensor(0.2911)
Local adapation with distilling: 0.00037
training loss: tensor(0.8234) feature loss: tensor(0.3554)
Local adapation with distilling: 0.00037
training loss: tensor(0.5987) feature loss: tensor(0.2505)
Local adapation with distilling: 0.00037
training loss: tensor(0.6500) feature loss: tensor(0.3471)
Local adapation with distilling: 0.00037
training loss: tensor(0.6303) feature loss: tensor(0.2862)
Local adapation with distilling: 0.00037
training loss: tensor(0.6189) feature loss: tensor(0.3120)
Local adapation with distilling: 0.00037
training loss: tensor(0.5031) feature loss: tensor(0.2556)
Local adapation with distilling: 0.00037
training loss: tensor(0.6556) feature loss: tensor(0.2810)
Local adapation with distilling: 0.00037
training loss: tensor(0.5544) feature loss: tensor(0.2536)
Global Model Acc on global data: 0.428 length of data: 10000
-------------Round number:  36  -------------
selected users: [59, 42, 2, 27, 28, 75, 58, 68, 52, 74]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(1.3366) feature loss: tensor(0.3987)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.7853) feature loss: tensor(0.4004)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.7833) feature loss: tensor(0.4004)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.8027) feature loss: tensor(0.4456)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.8701) feature loss: tensor(0.4284)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.6984) feature loss: tensor(0.3873)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.8637) feature loss: tensor(0.4206)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.8511) feature loss: tensor(0.4113)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.8122) feature loss: tensor(0.4768)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.6998) feature loss: tensor(0.3954)
Global Model Acc on global data: 0.4686 length of data: 10000
-------------Round number:  37  -------------
selected users: [61, 49, 86, 78, 5, 91, 81, 82, 89, 18]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.7166) feature loss: tensor(0.3171)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(1.1869) feature loss: tensor(0.4133)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.8241) feature loss: tensor(0.2846)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.7008) feature loss: tensor(0.3540)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.6971) feature loss: tensor(0.3514)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.7023) feature loss: tensor(0.3157)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.7138) feature loss: tensor(0.3226)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.6091) feature loss: tensor(0.3243)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.8941) feature loss: tensor(0.4090)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.6808) feature loss: tensor(0.3229)
Global Model Acc on global data: 0.4799 length of data: 10000
-------------Round number:  38  -------------
selected users: [40, 73, 49, 45, 64, 16, 69, 17, 72, 66]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.8633) feature loss: tensor(0.3457)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(1.0169) feature loss: tensor(0.5590)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.9163) feature loss: tensor(0.3491)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(1.2393) feature loss: tensor(0.6468)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(1.0532) feature loss: tensor(0.4856)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.9311) feature loss: tensor(0.4390)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.8519) feature loss: tensor(0.3528)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.8610) feature loss: tensor(0.3895)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(1.0029) feature loss: tensor(0.4852)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(1.0003) feature loss: tensor(0.4594)
Global Model Acc on global data: 0.5307 length of data: 10000
save a model
-------------Round number:  39  -------------
selected users: [22, 53, 84, 57, 87, 58, 29, 21, 85, 79]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(1.0959) feature loss: tensor(0.5805)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.7498) feature loss: tensor(0.3135)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.8347) feature loss: tensor(0.3603)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.7651) feature loss: tensor(0.3829)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.6724) feature loss: tensor(0.3039)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.6688) feature loss: tensor(0.3034)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.7259) feature loss: tensor(0.2915)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.6552) feature loss: tensor(0.2992)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.7381) feature loss: tensor(0.3445)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.7436) feature loss: tensor(0.3121)
Global Model Acc on global data: 0.5349 length of data: 10000
save a model
-------------Round number:  40  -------------
selected users: [79, 75, 63, 15, 38, 11, 40, 45, 39, 62]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.6328) feature loss: tensor(0.2756)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.5583) feature loss: tensor(0.2719)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.6173) feature loss: tensor(0.2682)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.5936) feature loss: tensor(0.3263)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.6292) feature loss: tensor(0.2773)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.6174) feature loss: tensor(0.2707)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.6694) feature loss: tensor(0.2921)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.6606) feature loss: tensor(0.3222)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.6698) feature loss: tensor(0.2896)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.6996) feature loss: tensor(0.3581)
Global Model Acc on global data: 0.5134 length of data: 10000
-------------Round number:  41  -------------
selected users: [42, 94, 37, 6, 79, 32, 24, 0, 33, 93]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.000262
training loss: tensor(1.0792) feature loss: tensor(0.5668)
Local adapation with distilling: 0.000262
training loss: tensor(0.8862) feature loss: tensor(0.4137)
Local adapation with distilling: 0.000262
training loss: tensor(0.8210) feature loss: tensor(0.3845)
Local adapation with distilling: 0.000262
training loss: tensor(1.2018) feature loss: tensor(0.5561)
Local adapation with distilling: 0.000262
training loss: tensor(0.6963) feature loss: tensor(0.2808)
Local adapation with distilling: 0.000262
training loss: tensor(0.8882) feature loss: tensor(0.4445)
Local adapation with distilling: 0.000262
training loss: tensor(0.9264) feature loss: tensor(0.4237)
Local adapation with distilling: 0.000262
training loss: tensor(0.7263) feature loss: tensor(0.2855)
Local adapation with distilling: 0.000262
training loss: tensor(1.0014) feature loss: tensor(0.4564)
Local adapation with distilling: 0.000262
training loss: tensor(0.9177) feature loss: tensor(0.4184)
Global Model Acc on global data: 0.5192 length of data: 10000
-------------Round number:  42  -------------
selected users: [83, 53, 70, 45, 44, 39, 22, 80, 10, 0]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.6551) feature loss: tensor(0.3129)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.5430) feature loss: tensor(0.2429)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.6352) feature loss: tensor(0.3406)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.6344) feature loss: tensor(0.2495)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.5188) feature loss: tensor(0.2416)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.6799) feature loss: tensor(0.2831)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.5852) feature loss: tensor(0.2397)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.6447) feature loss: tensor(0.3446)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.6430) feature loss: tensor(0.3057)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.6237) feature loss: tensor(0.2911)
Global Model Acc on global data: 0.4658 length of data: 10000
-------------Round number:  43  -------------
selected users: [20, 2, 15, 22, 57, 91, 69, 55, 11, 79]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.5553) feature loss: tensor(0.2887)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.6165) feature loss: tensor(0.2632)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.6293) feature loss: tensor(0.3322)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.5592) feature loss: tensor(0.2609)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.7147) feature loss: tensor(0.2617)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.7129) feature loss: tensor(0.2795)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.6602) feature loss: tensor(0.2726)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.5627) feature loss: tensor(0.2601)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.7309) feature loss: tensor(0.3131)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.7660) feature loss: tensor(0.3282)
Global Model Acc on global data: 0.4644 length of data: 10000
-------------Round number:  44  -------------
selected users: [42, 54, 27, 93, 39, 65, 7, 26, 24, 60]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.9199) feature loss: tensor(0.4813)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.8405) feature loss: tensor(0.3519)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.8328) feature loss: tensor(0.4236)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.8705) feature loss: tensor(0.4366)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.6106) feature loss: tensor(0.2609)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.7843) feature loss: tensor(0.4259)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.8042) feature loss: tensor(0.4199)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(1.0300) feature loss: tensor(0.3964)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.7994) feature loss: tensor(0.3598)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.6311) feature loss: tensor(0.2603)
Global Model Acc on global data: 0.4965 length of data: 10000
-------------Round number:  45  -------------
selected users: [0, 1, 62, 76, 37, 99, 78, 38, 2, 84]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.6503) feature loss: tensor(0.2898)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.6899) feature loss: tensor(0.2991)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.6298) feature loss: tensor(0.2899)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.7581) feature loss: tensor(0.2895)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.6091) feature loss: tensor(0.2863)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.6742) feature loss: tensor(0.3056)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(1.0318) feature loss: tensor(0.3718)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.9820) feature loss: tensor(0.3545)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.6771) feature loss: tensor(0.2868)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.6200) feature loss: tensor(0.2871)
Global Model Acc on global data: 0.5289 length of data: 10000
-------------Round number:  46  -------------
selected users: [71, 33, 37, 10, 44, 34, 24, 98, 73, 95]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.6017) feature loss: tensor(0.2390)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.7225) feature loss: tensor(0.2364)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.6060) feature loss: tensor(0.2393)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.5781) feature loss: tensor(0.2460)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.5864) feature loss: tensor(0.2556)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.5599) feature loss: tensor(0.2419)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.5788) feature loss: tensor(0.2442)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.6592) feature loss: tensor(0.2456)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.6708) feature loss: tensor(0.2339)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.6783) feature loss: tensor(0.2465)
Global Model Acc on global data: 0.5084 length of data: 10000
-------------Round number:  47  -------------
selected users: [17, 90, 94, 86, 63, 5, 38, 14, 40, 47]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.5195) feature loss: tensor(0.2030)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.4990) feature loss: tensor(0.2116)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.4500) feature loss: tensor(0.2020)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.7525) feature loss: tensor(0.1983)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.5871) feature loss: tensor(0.2252)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.5409) feature loss: tensor(0.2034)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.5638) feature loss: tensor(0.2162)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.4359) feature loss: tensor(0.2059)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.5007) feature loss: tensor(0.2087)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.5240) feature loss: tensor(0.2036)
Global Model Acc on global data: 0.5003 length of data: 10000
-------------Round number:  48  -------------
selected users: [93, 5, 71, 9, 11, 79, 69, 8, 59, 63]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.8276) feature loss: tensor(0.3500)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.8853) feature loss: tensor(0.3800)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.9414) feature loss: tensor(0.3644)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(1.1915) feature loss: tensor(0.4973)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(1.0231) feature loss: tensor(0.3961)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(1.1354) feature loss: tensor(0.4891)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(1.2029) feature loss: tensor(0.5286)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(1.0107) feature loss: tensor(0.4520)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(1.1740) feature loss: tensor(0.4643)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.8494) feature loss: tensor(0.3591)
Global Model Acc on global data: 0.5261 length of data: 10000
-------------Round number:  49  -------------
selected users: [76, 25, 28, 75, 81, 47, 41, 22, 29, 1]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.8880) feature loss: tensor(0.2343)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.6049) feature loss: tensor(0.2633)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.7694) feature loss: tensor(0.2511)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.5666) feature loss: tensor(0.2321)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.6088) feature loss: tensor(0.2506)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.6344) feature loss: tensor(0.2305)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.6315) feature loss: tensor(0.2493)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.8757) feature loss: tensor(0.2336)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.5778) feature loss: tensor(0.2454)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.6121) feature loss: tensor(0.2423)
Global Model Acc on global data: 0.5522 length of data: 10000
save a model
-------------Round number:  50  -------------
selected users: [80, 79, 25, 15, 39, 40, 53, 17, 57, 50]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.8209) feature loss: tensor(0.2580)
Local adapation with distilling: 0.0001
training loss: tensor(0.6982) feature loss: tensor(0.2373)
Local adapation with distilling: 0.0001
training loss: tensor(0.6315) feature loss: tensor(0.2836)
Local adapation with distilling: 0.0001
training loss: tensor(0.5600) feature loss: tensor(0.2270)
Local adapation with distilling: 0.0001
training loss: tensor(0.7085) feature loss: tensor(0.2484)
Local adapation with distilling: 0.0001
training loss: tensor(0.7698) feature loss: tensor(0.2471)
Local adapation with distilling: 0.0001
training loss: tensor(0.6389) feature loss: tensor(0.2267)
Local adapation with distilling: 0.0001
training loss: tensor(0.6291) feature loss: tensor(0.2410)
Local adapation with distilling: 0.0001
training loss: tensor(0.6269) feature loss: tensor(0.2233)
Local adapation with distilling: 0.0001
training loss: tensor(0.7637) feature loss: tensor(0.2461)
Global Model Acc on global data: 0.5398 length of data: 10000
-------------Round number:  51  -------------
selected users: [71, 43, 11, 83, 78, 19, 80, 4, 79, 75]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.6422) feature loss: tensor(0.1984)
Local adapation with distilling: 0.0001
training loss: tensor(0.6059) feature loss: tensor(0.2166)
Local adapation with distilling: 0.0001
training loss: tensor(0.6197) feature loss: tensor(0.1913)
Local adapation with distilling: 0.0001
training loss: tensor(0.6553) feature loss: tensor(0.2694)
Local adapation with distilling: 0.0001
training loss: tensor(0.8095) feature loss: tensor(0.2121)
Local adapation with distilling: 0.0001
training loss: tensor(0.6399) feature loss: tensor(0.2068)
Local adapation with distilling: 0.0001
training loss: tensor(0.5911) feature loss: tensor(0.2061)
Local adapation with distilling: 0.0001
training loss: tensor(0.6739) feature loss: tensor(0.1927)
Local adapation with distilling: 0.0001
training loss: tensor(0.6175) feature loss: tensor(0.2014)
Local adapation with distilling: 0.0001
training loss: tensor(0.4948) feature loss: tensor(0.1971)
Global Model Acc on global data: 0.5293 length of data: 10000
-------------Round number:  52  -------------
selected users: [82, 8, 44, 19, 2, 73, 37, 89, 67, 18]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.9260) feature loss: tensor(0.3518)
Local adapation with distilling: 0.0001
training loss: tensor(0.7647) feature loss: tensor(0.2607)
Local adapation with distilling: 0.0001
training loss: tensor(0.6678) feature loss: tensor(0.2553)
Local adapation with distilling: 0.0001
training loss: tensor(0.6586) feature loss: tensor(0.2580)
Local adapation with distilling: 0.0001
training loss: tensor(0.8852) feature loss: tensor(0.2546)
Local adapation with distilling: 0.0001
training loss: tensor(0.6016) feature loss: tensor(0.2567)
Local adapation with distilling: 0.0001
training loss: tensor(0.6527) feature loss: tensor(0.2556)
Local adapation with distilling: 0.0001
training loss: tensor(0.6757) feature loss: tensor(0.2611)
Local adapation with distilling: 0.0001
training loss: tensor(0.6538) feature loss: tensor(0.2557)
Local adapation with distilling: 0.0001
training loss: tensor(0.8177) feature loss: tensor(0.2710)
Global Model Acc on global data: 0.5494 length of data: 10000
-------------Round number:  53  -------------
selected users: [19, 78, 64, 3, 71, 32, 68, 42, 55, 97]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.5811) feature loss: tensor(0.1959)
Local adapation with distilling: 0.0001
training loss: tensor(0.5723) feature loss: tensor(0.2078)
Local adapation with distilling: 0.0001
training loss: tensor(0.5586) feature loss: tensor(0.1930)
Local adapation with distilling: 0.0001
training loss: tensor(0.5830) feature loss: tensor(0.2411)
Local adapation with distilling: 0.0001
training loss: tensor(0.6023) feature loss: tensor(0.1953)
Local adapation with distilling: 0.0001
training loss: tensor(0.6867) feature loss: tensor(0.3396)
Local adapation with distilling: 0.0001
training loss: tensor(0.6202) feature loss: tensor(0.2260)
Local adapation with distilling: 0.0001
training loss: tensor(0.5927) feature loss: tensor(0.1947)
Local adapation with distilling: 0.0001
training loss: tensor(0.5814) feature loss: tensor(0.1942)
Local adapation with distilling: 0.0001
training loss: tensor(0.5272) feature loss: tensor(0.1994)
Global Model Acc on global data: 0.5365 length of data: 10000
-------------Round number:  54  -------------
selected users: [36, 70, 48, 94, 81, 46, 38, 29, 34, 22]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(1.1042) feature loss: tensor(0.2346)
Local adapation with distilling: 0.0001
training loss: tensor(0.7592) feature loss: tensor(0.2395)
Local adapation with distilling: 0.0001
training loss: tensor(0.6846) feature loss: tensor(0.2481)
Local adapation with distilling: 0.0001
training loss: tensor(0.6442) feature loss: tensor(0.2475)
Local adapation with distilling: 0.0001
training loss: tensor(0.6641) feature loss: tensor(0.2417)
Local adapation with distilling: 0.0001
training loss: tensor(1.1630) feature loss: tensor(0.2313)
Local adapation with distilling: 0.0001
training loss: tensor(0.6527) feature loss: tensor(0.2587)
Local adapation with distilling: 0.0001
training loss: tensor(0.6834) feature loss: tensor(0.2458)
Local adapation with distilling: 0.0001
training loss: tensor(0.6478) feature loss: tensor(0.2383)
Local adapation with distilling: 0.0001
training loss: tensor(0.6839) feature loss: tensor(0.2479)
Global Model Acc on global data: 0.5454 length of data: 10000
-------------Round number:  55  -------------
selected users: [28, 92, 98, 95, 84, 34, 38, 76, 17, 78]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.4663) feature loss: tensor(0.2047)
Local adapation with distilling: 0.0001
training loss: tensor(0.5000) feature loss: tensor(0.1987)
Local adapation with distilling: 0.0001
training loss: tensor(0.4690) feature loss: tensor(0.2036)
Local adapation with distilling: 0.0001
training loss: tensor(0.6241) feature loss: tensor(0.1926)
Local adapation with distilling: 0.0001
training loss: tensor(0.4440) feature loss: tensor(0.1966)
Local adapation with distilling: 0.0001
training loss: tensor(0.4435) feature loss: tensor(0.1965)
Local adapation with distilling: 0.0001
training loss: tensor(0.4733) feature loss: tensor(0.2048)
Local adapation with distilling: 0.0001
training loss: tensor(0.5716) feature loss: tensor(0.1945)
Local adapation with distilling: 0.0001
training loss: tensor(0.5804) feature loss: tensor(0.1936)
Local adapation with distilling: 0.0001
training loss: tensor(0.4784) feature loss: tensor(0.2118)
Global Model Acc on global data: 0.5124 length of data: 10000
-------------Round number:  56  -------------
selected users: [92, 79, 23, 68, 52, 38, 73, 9, 59, 27]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.5981) feature loss: tensor(0.2662)
Local adapation with distilling: 0.0001
training loss: tensor(0.9280) feature loss: tensor(0.2730)
Local adapation with distilling: 0.0001
training loss: tensor(0.7016) feature loss: tensor(0.2602)
Local adapation with distilling: 0.0001
training loss: tensor(0.5542) feature loss: tensor(0.2861)
Local adapation with distilling: 0.0001
training loss: tensor(0.7144) feature loss: tensor(0.3347)
Local adapation with distilling: 0.0001
training loss: tensor(0.5442) feature loss: tensor(0.2738)
Local adapation with distilling: 0.0001
training loss: tensor(0.6951) feature loss: tensor(0.2597)
Local adapation with distilling: 0.0001
training loss: tensor(0.8912) feature loss: tensor(0.2707)
Local adapation with distilling: 0.0001
training loss: tensor(0.9067) feature loss: tensor(0.2674)
Local adapation with distilling: 0.0001
training loss: tensor(0.7389) feature loss: tensor(0.3372)
Global Model Acc on global data: 0.523 length of data: 10000
-------------Round number:  57  -------------
selected users: [52, 17, 41, 3, 8, 98, 59, 20, 67, 7]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.4882) feature loss: tensor(0.2056)
Local adapation with distilling: 0.0001
training loss: tensor(0.5493) feature loss: tensor(0.2044)
Local adapation with distilling: 0.0001
training loss: tensor(0.7308) feature loss: tensor(0.2064)
Local adapation with distilling: 0.0001
training loss: tensor(0.5156) feature loss: tensor(0.2021)
Local adapation with distilling: 0.0001
training loss: tensor(0.5095) feature loss: tensor(0.2189)
Local adapation with distilling: 0.0001
training loss: tensor(0.4954) feature loss: tensor(0.2069)
Local adapation with distilling: 0.0001
training loss: tensor(0.6087) feature loss: tensor(0.2040)
Local adapation with distilling: 0.0001
training loss: tensor(0.7711) feature loss: tensor(0.2107)
Local adapation with distilling: 0.0001
training loss: tensor(0.5544) feature loss: tensor(0.2071)
Local adapation with distilling: 0.0001
training loss: tensor(0.5709) feature loss: tensor(0.2085)
Global Model Acc on global data: 0.5192 length of data: 10000
-------------Round number:  58  -------------
selected users: [43, 58, 8, 31, 70, 45, 69, 95, 50, 4]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.6221) feature loss: tensor(0.2477)
Local adapation with distilling: 0.0001
training loss: tensor(0.5916) feature loss: tensor(0.2574)
Local adapation with distilling: 0.0001
training loss: tensor(0.5871) feature loss: tensor(0.2490)
Local adapation with distilling: 0.0001
training loss: tensor(0.6883) feature loss: tensor(0.2424)
Local adapation with distilling: 0.0001
training loss: tensor(0.7881) feature loss: tensor(0.2593)
Local adapation with distilling: 0.0001
training loss: tensor(0.8169) feature loss: tensor(0.2497)
Local adapation with distilling: 0.0001
training loss: tensor(0.6928) feature loss: tensor(0.2468)
Local adapation with distilling: 0.0001
training loss: tensor(0.7813) feature loss: tensor(0.2467)
Local adapation with distilling: 0.0001
training loss: tensor(0.7610) feature loss: tensor(0.2574)
Local adapation with distilling: 0.0001
training loss: tensor(0.6568) feature loss: tensor(0.2506)
Global Model Acc on global data: 0.535 length of data: 10000
-------------Round number:  59  -------------
selected users: [38, 46, 24, 87, 30, 85, 16, 96, 18, 99]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.6136) feature loss: tensor(0.2770)
Local adapation with distilling: 0.0001
training loss: tensor(1.0921) feature loss: tensor(0.2561)
Local adapation with distilling: 0.0001
training loss: tensor(0.6363) feature loss: tensor(0.2686)
Local adapation with distilling: 0.0001
training loss: tensor(0.6330) feature loss: tensor(0.2714)
Local adapation with distilling: 0.0001
training loss: tensor(0.7715) feature loss: tensor(0.2847)
Local adapation with distilling: 0.0001
training loss: tensor(0.6414) feature loss: tensor(0.2666)
Local adapation with distilling: 0.0001
training loss: tensor(1.0400) feature loss: tensor(0.2618)
Local adapation with distilling: 0.0001
training loss: tensor(1.1471) feature loss: tensor(0.3101)
Local adapation with distilling: 0.0001
training loss: tensor(0.6498) feature loss: tensor(0.2702)
Local adapation with distilling: 0.0001
training loss: tensor(0.7860) feature loss: tensor(0.2671)
Global Model Acc on global data: 0.5612 length of data: 10000
save a model
-------------Round number:  60  -------------
selected users: [88, 4, 79, 14, 55, 3, 19, 28, 94, 25]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.5313) feature loss: tensor(0.2392)
Local adapation with distilling: 0.0001
training loss: tensor(0.4785) feature loss: tensor(0.2190)
Local adapation with distilling: 0.0001
training loss: tensor(0.6364) feature loss: tensor(0.2160)
Local adapation with distilling: 0.0001
training loss: tensor(0.5352) feature loss: tensor(0.2556)
Local adapation with distilling: 0.0001
training loss: tensor(0.5398) feature loss: tensor(0.2225)
Local adapation with distilling: 0.0001
training loss: tensor(0.5402) feature loss: tensor(0.2188)
Local adapation with distilling: 0.0001
training loss: tensor(0.6408) feature loss: tensor(0.2102)
Local adapation with distilling: 0.0001
training loss: tensor(0.5084) feature loss: tensor(0.2300)
Local adapation with distilling: 0.0001
training loss: tensor(0.4812) feature loss: tensor(0.2192)
Local adapation with distilling: 0.0001
training loss: tensor(0.5346) feature loss: tensor(0.2250)
Global Model Acc on global data: 0.5075 length of data: 10000
-------------Round number:  61  -------------
selected users: [83, 1, 55, 9, 31, 28, 96, 29, 86, 63]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.5939) feature loss: tensor(0.2199)
Local adapation with distilling: 0.0001
training loss: tensor(0.6693) feature loss: tensor(0.2321)
Local adapation with distilling: 0.0001
training loss: tensor(0.5258) feature loss: tensor(0.2196)
Local adapation with distilling: 0.0001
training loss: tensor(0.5788) feature loss: tensor(0.2210)
Local adapation with distilling: 0.0001
training loss: tensor(0.6418) feature loss: tensor(0.2207)
Local adapation with distilling: 0.0001
training loss: tensor(0.5220) feature loss: tensor(0.2258)
Local adapation with distilling: 0.0001
training loss: tensor(0.7771) feature loss: tensor(0.2732)
Local adapation with distilling: 0.0001
training loss: tensor(0.6055) feature loss: tensor(0.2381)
Local adapation with distilling: 0.0001
training loss: tensor(0.8319) feature loss: tensor(0.2202)
Local adapation with distilling: 0.0001
training loss: tensor(0.5676) feature loss: tensor(0.2137)
Global Model Acc on global data: 0.5203 length of data: 10000
-------------Round number:  62  -------------
selected users: [76, 48, 62, 80, 29, 99, 60, 89, 39, 69]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.5570) feature loss: tensor(0.2457)
Local adapation with distilling: 0.0001
training loss: tensor(0.7147) feature loss: tensor(0.3098)
Local adapation with distilling: 0.0001
training loss: tensor(0.7367) feature loss: tensor(0.2442)
Local adapation with distilling: 0.0001
training loss: tensor(0.8218) feature loss: tensor(0.3160)
Local adapation with distilling: 0.0001
training loss: tensor(0.5466) feature loss: tensor(0.2849)
Local adapation with distilling: 0.0001
training loss: tensor(0.5594) feature loss: tensor(0.2979)
Local adapation with distilling: 0.0001
training loss: tensor(0.8141) feature loss: tensor(0.3268)
Local adapation with distilling: 0.0001
training loss: tensor(0.5999) feature loss: tensor(0.3077)
Local adapation with distilling: 0.0001
training loss: tensor(0.5662) feature loss: tensor(0.2919)
Local adapation with distilling: 0.0001
training loss: tensor(0.5820) feature loss: tensor(0.2942)
Global Model Acc on global data: 0.5314 length of data: 10000
-------------Round number:  63  -------------
selected users: [64, 59, 63, 2, 80, 20, 18, 48, 72, 51]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.5172) feature loss: tensor(0.1866)
Local adapation with distilling: 0.0001
training loss: tensor(0.5137) feature loss: tensor(0.1926)
Local adapation with distilling: 0.0001
training loss: tensor(0.5120) feature loss: tensor(0.1902)
Local adapation with distilling: 0.0001
training loss: tensor(0.6048) feature loss: tensor(0.1871)
Local adapation with distilling: 0.0001
training loss: tensor(0.6518) feature loss: tensor(0.2157)
Local adapation with distilling: 0.0001
training loss: tensor(0.6005) feature loss: tensor(0.1968)
Local adapation with distilling: 0.0001
training loss: tensor(0.6451) feature loss: tensor(0.2153)
Local adapation with distilling: 0.0001
training loss: tensor(0.6723) feature loss: tensor(0.2168)
Local adapation with distilling: 0.0001
training loss: tensor(0.6303) feature loss: tensor(0.1876)
Local adapation with distilling: 0.0001
training loss: tensor(0.7059) feature loss: tensor(0.2034)
Global Model Acc on global data: 0.5123 length of data: 10000
-------------Round number:  64  -------------
selected users: [17, 22, 60, 92, 23, 19, 71, 94, 40, 49]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.8128) feature loss: tensor(0.2124)
Local adapation with distilling: 0.0001
training loss: tensor(0.5741) feature loss: tensor(0.2855)
Local adapation with distilling: 0.0001
training loss: tensor(0.5631) feature loss: tensor(0.2402)
Local adapation with distilling: 0.0001
training loss: tensor(0.5141) feature loss: tensor(0.2187)
Local adapation with distilling: 0.0001
training loss: tensor(0.5711) feature loss: tensor(0.2336)
Local adapation with distilling: 0.0001
training loss: tensor(0.5203) feature loss: tensor(0.2212)
Local adapation with distilling: 0.0001
training loss: tensor(0.5952) feature loss: tensor(0.2126)
Local adapation with distilling: 0.0001
training loss: tensor(0.6306) feature loss: tensor(0.2960)
Local adapation with distilling: 0.0001
training loss: tensor(0.5751) feature loss: tensor(0.2519)
Local adapation with distilling: 0.0001
training loss: tensor(0.5867) feature loss: tensor(0.2496)
Global Model Acc on global data: 0.5124 length of data: 10000
-------------Round number:  65  -------------
selected users: [37, 81, 39, 61, 76, 90, 27, 86, 28, 69]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.5939) feature loss: tensor(0.2180)
Local adapation with distilling: 0.0001
training loss: tensor(0.5464) feature loss: tensor(0.2182)
Local adapation with distilling: 0.0001
training loss: tensor(0.4774) feature loss: tensor(0.2139)
Local adapation with distilling: 0.0001
training loss: tensor(0.5386) feature loss: tensor(0.2179)
Local adapation with distilling: 0.0001
training loss: tensor(0.6465) feature loss: tensor(0.2185)
Local adapation with distilling: 0.0001
training loss: tensor(0.5321) feature loss: tensor(0.2309)
Local adapation with distilling: 0.0001
training loss: tensor(0.6054) feature loss: tensor(0.2144)
Local adapation with distilling: 0.0001
training loss: tensor(0.7742) feature loss: tensor(0.2526)
Local adapation with distilling: 0.0001
training loss: tensor(0.5862) feature loss: tensor(0.2264)
Local adapation with distilling: 0.0001
training loss: tensor(0.4560) feature loss: tensor(0.2178)
Global Model Acc on global data: 0.5405 length of data: 10000
-------------Round number:  66  -------------
selected users: [8, 93, 4, 5, 52, 41, 0, 73, 88, 68]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.6265) feature loss: tensor(0.2433)
Local adapation with distilling: 0.0001
training loss: tensor(0.5921) feature loss: tensor(0.2304)
Local adapation with distilling: 0.0001
training loss: tensor(0.5652) feature loss: tensor(0.2303)
Local adapation with distilling: 0.0001
training loss: tensor(0.7507) feature loss: tensor(0.2318)
Local adapation with distilling: 0.0001
training loss: tensor(0.5818) feature loss: tensor(0.2303)
Local adapation with distilling: 0.0001
training loss: tensor(0.5570) feature loss: tensor(0.2305)
Local adapation with distilling: 0.0001
training loss: tensor(0.5998) feature loss: tensor(0.2257)
Local adapation with distilling: 0.0001
training loss: tensor(0.5881) feature loss: tensor(0.2274)
Local adapation with distilling: 0.0001
training loss: tensor(0.6563) feature loss: tensor(0.2782)
Local adapation with distilling: 0.0001
training loss: tensor(0.6156) feature loss: tensor(0.2354)
Global Model Acc on global data: 0.524 length of data: 10000
-------------Round number:  67  -------------
selected users: [17, 24, 64, 93, 97, 29, 3, 70, 82, 11]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.6937) feature loss: tensor(0.3372)
Local adapation with distilling: 0.0001
training loss: tensor(0.6781) feature loss: tensor(0.3484)
Local adapation with distilling: 0.0001
training loss: tensor(0.7039) feature loss: tensor(0.3254)
Local adapation with distilling: 0.0001
training loss: tensor(0.6277) feature loss: tensor(0.3213)
Local adapation with distilling: 0.0001
training loss: tensor(0.6746) feature loss: tensor(0.3283)
Local adapation with distilling: 0.0001
training loss: tensor(0.7029) feature loss: tensor(0.2416)
Local adapation with distilling: 0.0001
training loss: tensor(0.5886) feature loss: tensor(0.3094)
Local adapation with distilling: 0.0001
training loss: tensor(0.5753) feature loss: tensor(0.2346)
Local adapation with distilling: 0.0001
training loss: tensor(0.7576) feature loss: tensor(0.3759)
Local adapation with distilling: 0.0001
training loss: tensor(0.5720) feature loss: tensor(0.2234)
Global Model Acc on global data: 0.4898 length of data: 10000
-------------Round number:  68  -------------
selected users: [29, 30, 16, 5, 38, 71, 76, 94, 99, 95]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.6473) feature loss: tensor(0.2884)
Local adapation with distilling: 0.0001
training loss: tensor(0.6449) feature loss: tensor(0.2906)
Local adapation with distilling: 0.0001
training loss: tensor(0.8698) feature loss: tensor(0.2885)
Local adapation with distilling: 0.0001
training loss: tensor(0.8274) feature loss: tensor(0.3350)
Local adapation with distilling: 0.0001
training loss: tensor(0.6701) feature loss: tensor(0.3295)
Local adapation with distilling: 0.0001
training loss: tensor(0.5862) feature loss: tensor(0.2885)
Local adapation with distilling: 0.0001
training loss: tensor(0.7948) feature loss: tensor(0.2837)
Local adapation with distilling: 0.0001
training loss: tensor(0.5890) feature loss: tensor(0.2867)
Local adapation with distilling: 0.0001
training loss: tensor(0.6764) feature loss: tensor(0.2910)
Local adapation with distilling: 0.0001
training loss: tensor(0.7635) feature loss: tensor(0.2876)
Global Model Acc on global data: 0.5292 length of data: 10000
-------------Round number:  69  -------------
selected users: [72, 31, 13, 83, 33, 8, 26, 89, 64, 97]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.7404) feature loss: tensor(0.2591)
Local adapation with distilling: 0.0001
training loss: tensor(0.5309) feature loss: tensor(0.2309)
Local adapation with distilling: 0.0001
training loss: tensor(0.5622) feature loss: tensor(0.2333)
Local adapation with distilling: 0.0001
training loss: tensor(0.5907) feature loss: tensor(0.2299)
Local adapation with distilling: 0.0001
training loss: tensor(0.6134) feature loss: tensor(0.2282)
Local adapation with distilling: 0.0001
training loss: tensor(0.6002) feature loss: tensor(0.2506)
Local adapation with distilling: 0.0001
training loss: tensor(0.5933) feature loss: tensor(0.2251)
Local adapation with distilling: 0.0001
training loss: tensor(0.5694) feature loss: tensor(0.2244)
Local adapation with distilling: 0.0001
training loss: tensor(0.6098) feature loss: tensor(0.2778)
Local adapation with distilling: 0.0001
training loss: tensor(0.6198) feature loss: tensor(0.2288)
Global Model Acc on global data: 0.538 length of data: 10000
-------------Round number:  70  -------------
selected users: [81, 43, 88, 32, 50, 71, 73, 55, 42, 2]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.5449) feature loss: tensor(0.2235)
Local adapation with distilling: 0.0001
training loss: tensor(0.5411) feature loss: tensor(0.2239)
Local adapation with distilling: 0.0001
training loss: tensor(0.5786) feature loss: tensor(0.2355)
Local adapation with distilling: 0.0001
training loss: tensor(0.5992) feature loss: tensor(0.2205)
Local adapation with distilling: 0.0001
training loss: tensor(0.5802) feature loss: tensor(0.2240)
Local adapation with distilling: 0.0001
training loss: tensor(0.5397) feature loss: tensor(0.2222)
Local adapation with distilling: 0.0001
training loss: tensor(0.5143) feature loss: tensor(0.2240)
Local adapation with distilling: 0.0001
training loss: tensor(0.6734) feature loss: tensor(0.2213)
Local adapation with distilling: 0.0001
training loss: tensor(0.6365) feature loss: tensor(0.2251)
Local adapation with distilling: 0.0001
training loss: tensor(0.6570) feature loss: tensor(0.2331)
Global Model Acc on global data: 0.4946 length of data: 10000
-------------Round number:  71  -------------
selected users: [41, 84, 98, 42, 75, 25, 60, 19, 52, 29]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.5823) feature loss: tensor(0.2580)
Local adapation with distilling: 0.0001
training loss: tensor(0.7162) feature loss: tensor(0.2617)
Local adapation with distilling: 0.0001
training loss: tensor(0.6271) feature loss: tensor(0.2752)
Local adapation with distilling: 0.0001
training loss: tensor(0.5430) feature loss: tensor(0.2601)
Local adapation with distilling: 0.0001
training loss: tensor(0.6611) feature loss: tensor(0.2572)
Local adapation with distilling: 0.0001
training loss: tensor(0.6779) feature loss: tensor(0.2680)
Local adapation with distilling: 0.0001
training loss: tensor(0.6279) feature loss: tensor(0.2625)
Local adapation with distilling: 0.0001
training loss: tensor(0.7534) feature loss: tensor(0.2586)
Local adapation with distilling: 0.0001
training loss: tensor(0.5757) feature loss: tensor(0.2764)
Local adapation with distilling: 0.0001
training loss: tensor(0.7527) feature loss: tensor(0.2610)
Global Model Acc on global data: 0.4967 length of data: 10000
-------------Round number:  72  -------------
selected users: [76, 82, 43, 16, 84, 95, 78, 91, 30, 22]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.6990) feature loss: tensor(0.1896)
Local adapation with distilling: 0.0001
training loss: tensor(0.4813) feature loss: tensor(0.2019)
Local adapation with distilling: 0.0001
training loss: tensor(0.5345) feature loss: tensor(0.1904)
Local adapation with distilling: 0.0001
training loss: tensor(0.7231) feature loss: tensor(0.1928)
Local adapation with distilling: 0.0001
training loss: tensor(0.5746) feature loss: tensor(0.1951)
Local adapation with distilling: 0.0001
training loss: tensor(0.4859) feature loss: tensor(0.1922)
Local adapation with distilling: 0.0001
training loss: tensor(0.5236) feature loss: tensor(0.1966)
Local adapation with distilling: 0.0001
training loss: tensor(0.4894) feature loss: tensor(0.1958)
Local adapation with distilling: 0.0001
training loss: tensor(0.5619) feature loss: tensor(0.1950)
Local adapation with distilling: 0.0001
training loss: tensor(0.4814) feature loss: tensor(0.1912)
Global Model Acc on global data: 0.4761 length of data: 10000
-------------Round number:  73  -------------
selected users: [49, 14, 34, 70, 90, 35, 68, 76, 80, 9]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.7396) feature loss: tensor(0.3092)
Local adapation with distilling: 0.0001
training loss: tensor(0.5795) feature loss: tensor(0.2799)
Local adapation with distilling: 0.0001
training loss: tensor(0.5940) feature loss: tensor(0.2811)
Local adapation with distilling: 0.0001
training loss: tensor(0.5813) feature loss: tensor(0.2976)
Local adapation with distilling: 0.0001
training loss: tensor(0.6320) feature loss: tensor(0.3021)
Local adapation with distilling: 0.0001
training loss: tensor(0.6151) feature loss: tensor(0.2800)
Local adapation with distilling: 0.0001
training loss: tensor(0.6572) feature loss: tensor(0.3354)
Local adapation with distilling: 0.0001
training loss: tensor(0.6003) feature loss: tensor(0.2818)
Local adapation with distilling: 0.0001
training loss: tensor(0.5951) feature loss: tensor(0.3045)
Local adapation with distilling: 0.0001
training loss: tensor(0.7477) feature loss: tensor(0.3080)
Global Model Acc on global data: 0.5142 length of data: 10000
-------------Round number:  74  -------------
selected users: [85, 64, 63, 80, 6, 12, 43, 17, 7, 8]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.7644) feature loss: tensor(0.2903)
Local adapation with distilling: 0.0001
training loss: tensor(0.6632) feature loss: tensor(0.2876)
Local adapation with distilling: 0.0001
training loss: tensor(0.8109) feature loss: tensor(0.3008)
Local adapation with distilling: 0.0001
training loss: tensor(0.6869) feature loss: tensor(0.2913)
Local adapation with distilling: 0.0001
training loss: tensor(0.7491) feature loss: tensor(0.2922)
Local adapation with distilling: 0.0001
training loss: tensor(0.8493) feature loss: tensor(0.3072)
Local adapation with distilling: 0.0001
training loss: tensor(0.7907) feature loss: tensor(0.2925)
Local adapation with distilling: 0.0001
training loss: tensor(1.0535) feature loss: tensor(0.2862)
Local adapation with distilling: 0.0001
training loss: tensor(1.0932) feature loss: tensor(0.2835)
Local adapation with distilling: 0.0001
training loss: tensor(0.7768) feature loss: tensor(0.2987)
Global Model Acc on global data: 0.5246 length of data: 10000
-------------Round number:  75  -------------
selected users: [36, 7, 6, 45, 56, 54, 22, 37, 53, 68]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.7664) feature loss: tensor(0.3304)
Local adapation with distilling: 0.0001
training loss: tensor(0.6082) feature loss: tensor(0.2284)
Local adapation with distilling: 0.0001
training loss: tensor(0.7951) feature loss: tensor(0.4170)
Local adapation with distilling: 0.0001
training loss: tensor(0.6537) feature loss: tensor(0.2992)
Local adapation with distilling: 0.0001
training loss: tensor(0.7171) feature loss: tensor(0.3198)
Local adapation with distilling: 0.0001
training loss: tensor(0.7486) feature loss: tensor(0.3847)
Local adapation with distilling: 0.0001
training loss: tensor(0.6840) feature loss: tensor(0.3191)
Local adapation with distilling: 0.0001
training loss: tensor(0.6467) feature loss: tensor(0.2580)
Local adapation with distilling: 0.0001
training loss: tensor(0.6647) feature loss: tensor(0.3134)
Local adapation with distilling: 0.0001
training loss: tensor(0.5804) feature loss: tensor(0.2426)
Global Model Acc on global data: 0.5292 length of data: 10000
-------------Round number:  76  -------------
selected users: [38, 37, 32, 50, 10, 94, 19, 44, 86, 23]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.5898) feature loss: tensor(0.2722)
Local adapation with distilling: 0.0001
training loss: tensor(0.5771) feature loss: tensor(0.2456)
Local adapation with distilling: 0.0001
training loss: tensor(0.5927) feature loss: tensor(0.2472)
Local adapation with distilling: 0.0001
training loss: tensor(0.5313) feature loss: tensor(0.2528)
Local adapation with distilling: 0.0001
training loss: tensor(0.5635) feature loss: tensor(0.2604)
Local adapation with distilling: 0.0001
training loss: tensor(0.5690) feature loss: tensor(0.2471)
Local adapation with distilling: 0.0001
training loss: tensor(0.8258) feature loss: tensor(0.2474)
Local adapation with distilling: 0.0001
training loss: tensor(0.5577) feature loss: tensor(0.2452)
Local adapation with distilling: 0.0001
training loss: tensor(0.6251) feature loss: tensor(0.2459)
Local adapation with distilling: 0.0001
training loss: tensor(0.5822) feature loss: tensor(0.2500)
Global Model Acc on global data: 0.5408 length of data: 10000
-------------Round number:  77  -------------
selected users: [5, 93, 41, 96, 16, 42, 81, 91, 50, 58]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.5179) feature loss: tensor(0.1739)
Local adapation with distilling: 0.0001
training loss: tensor(0.4469) feature loss: tensor(0.1771)
Local adapation with distilling: 0.0001
training loss: tensor(0.5210) feature loss: tensor(0.1845)
Local adapation with distilling: 0.0001
training loss: tensor(0.4171) feature loss: tensor(0.1781)
Local adapation with distilling: 0.0001
training loss: tensor(0.4166) feature loss: tensor(0.1755)
Local adapation with distilling: 0.0001
training loss: tensor(0.4243) feature loss: tensor(0.1760)
Local adapation with distilling: 0.0001
training loss: tensor(0.4910) feature loss: tensor(0.1740)
Local adapation with distilling: 0.0001
training loss: tensor(0.5031) feature loss: tensor(0.1786)
Local adapation with distilling: 0.0001
training loss: tensor(0.4076) feature loss: tensor(0.1756)
Local adapation with distilling: 0.0001
training loss: tensor(0.4608) feature loss: tensor(0.2034)
Global Model Acc on global data: 0.51 length of data: 10000
-------------Round number:  78  -------------
selected users: [9, 46, 7, 63, 15, 2, 74, 31, 5, 36]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.9521) feature loss: tensor(0.3032)
Local adapation with distilling: 0.0001
training loss: tensor(0.8946) feature loss: tensor(0.3782)
Local adapation with distilling: 0.0001
training loss: tensor(1.2285) feature loss: tensor(0.4880)
Local adapation with distilling: 0.0001
training loss: tensor(1.0833) feature loss: tensor(0.5162)
Local adapation with distilling: 0.0001
training loss: tensor(1.1465) feature loss: tensor(0.6203)
Local adapation with distilling: 0.0001
training loss: tensor(1.0115) feature loss: tensor(0.4303)
Local adapation with distilling: 0.0001
training loss: tensor(0.9474) feature loss: tensor(0.3443)
Local adapation with distilling: 0.0001
training loss: tensor(0.6469) feature loss: tensor(0.2947)
Local adapation with distilling: 0.0001
training loss: tensor(0.9341) feature loss: tensor(0.4380)
Local adapation with distilling: 0.0001
training loss: tensor(1.0677) feature loss: tensor(0.5409)
Global Model Acc on global data: 0.5236 length of data: 10000
-------------Round number:  79  -------------
selected users: [68, 18, 86, 60, 56, 32, 30, 24, 45, 92]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.5040) feature loss: tensor(0.2117)
Local adapation with distilling: 0.0001
training loss: tensor(0.5195) feature loss: tensor(0.2102)
Local adapation with distilling: 0.0001
training loss: tensor(0.5458) feature loss: tensor(0.2002)
Local adapation with distilling: 0.0001
training loss: tensor(0.4667) feature loss: tensor(0.2003)
Local adapation with distilling: 0.0001
training loss: tensor(0.5079) feature loss: tensor(0.1963)
Local adapation with distilling: 0.0001
training loss: tensor(0.4918) feature loss: tensor(0.1964)
Local adapation with distilling: 0.0001
training loss: tensor(0.4931) feature loss: tensor(0.2032)
Local adapation with distilling: 0.0001
training loss: tensor(0.4876) feature loss: tensor(0.2017)
Local adapation with distilling: 0.0001
training loss: tensor(0.4955) feature loss: tensor(0.2009)
Local adapation with distilling: 0.0001
training loss: tensor(0.5496) feature loss: tensor(0.1961)
Global Model Acc on global data: 0.4963 length of data: 10000
-------------Round number:  80  -------------
selected users: [37, 65, 95, 53, 66, 30, 73, 85, 45, 36]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.9406) feature loss: tensor(0.3690)
Local adapation with distilling: 0.0001
training loss: tensor(0.7149) feature loss: tensor(0.4046)
Local adapation with distilling: 0.0001
training loss: tensor(0.7217) feature loss: tensor(0.4288)
Local adapation with distilling: 0.0001
training loss: tensor(0.8582) feature loss: tensor(0.4379)
Local adapation with distilling: 0.0001
training loss: tensor(0.7811) feature loss: tensor(0.4438)
Local adapation with distilling: 0.0001
training loss: tensor(0.5660) feature loss: tensor(0.2620)
Local adapation with distilling: 0.0001
training loss: tensor(0.7880) feature loss: tensor(0.3423)
Local adapation with distilling: 0.0001
training loss: tensor(0.6920) feature loss: tensor(0.3654)
Local adapation with distilling: 0.0001
training loss: tensor(0.7474) feature loss: tensor(0.4439)
Local adapation with distilling: 0.0001
training loss: tensor(0.7217) feature loss: tensor(0.3885)
Global Model Acc on global data: 0.4897 length of data: 10000
-------------Round number:  81  -------------
selected users: [73, 89, 41, 78, 51, 21, 30, 69, 8, 5]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.6286) feature loss: tensor(0.2935)
Local adapation with distilling: 0.0001
training loss: tensor(1.1877) feature loss: tensor(0.3285)
Local adapation with distilling: 0.0001
training loss: tensor(0.6376) feature loss: tensor(0.3036)
Local adapation with distilling: 0.0001
training loss: tensor(0.7680) feature loss: tensor(0.3693)
Local adapation with distilling: 0.0001
training loss: tensor(0.6521) feature loss: tensor(0.2952)
Local adapation with distilling: 0.0001
training loss: tensor(0.6711) feature loss: tensor(0.3287)
Local adapation with distilling: 0.0001
training loss: tensor(0.6866) feature loss: tensor(0.3200)
Local adapation with distilling: 0.0001
training loss: tensor(1.1972) feature loss: tensor(0.3392)
Local adapation with distilling: 0.0001
training loss: tensor(0.7541) feature loss: tensor(0.3502)
Local adapation with distilling: 0.0001
training loss: tensor(0.5628) feature loss: tensor(0.2823)
Global Model Acc on global data: 0.5055 length of data: 10000
-------------Round number:  82  -------------
selected users: [72, 33, 58, 2, 55, 84, 54, 75, 28, 40]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.7462) feature loss: tensor(0.2283)
Local adapation with distilling: 0.0001
training loss: tensor(0.5927) feature loss: tensor(0.2301)
Local adapation with distilling: 0.0001
training loss: tensor(0.5958) feature loss: tensor(0.2284)
Local adapation with distilling: 0.0001
training loss: tensor(0.7276) feature loss: tensor(0.2255)
Local adapation with distilling: 0.0001
training loss: tensor(0.5231) feature loss: tensor(0.2292)
Local adapation with distilling: 0.0001
training loss: tensor(0.7210) feature loss: tensor(0.2244)
Local adapation with distilling: 0.0001
training loss: tensor(0.7375) feature loss: tensor(0.2282)
Local adapation with distilling: 0.0001
training loss: tensor(0.5156) feature loss: tensor(0.2298)
Local adapation with distilling: 0.0001
training loss: tensor(0.5896) feature loss: tensor(0.2381)
Local adapation with distilling: 0.0001
training loss: tensor(0.5971) feature loss: tensor(0.2277)
Global Model Acc on global data: 0.493 length of data: 10000
-------------Round number:  83  -------------
selected users: [6, 65, 95, 84, 61, 12, 30, 69, 35, 1]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.6567) feature loss: tensor(0.2368)
Local adapation with distilling: 0.0001
training loss: tensor(0.4586) feature loss: tensor(0.2224)
Local adapation with distilling: 0.0001
training loss: tensor(0.4541) feature loss: tensor(0.2208)
Local adapation with distilling: 0.0001
training loss: tensor(0.5500) feature loss: tensor(0.2403)
Local adapation with distilling: 0.0001
training loss: tensor(0.5673) feature loss: tensor(0.2436)
Local adapation with distilling: 0.0001
training loss: tensor(0.7427) feature loss: tensor(0.3012)
Local adapation with distilling: 0.0001
training loss: tensor(0.5260) feature loss: tensor(0.2328)
Local adapation with distilling: 0.0001
training loss: tensor(0.7705) feature loss: tensor(0.2161)
Local adapation with distilling: 0.0001
training loss: tensor(0.4670) feature loss: tensor(0.2211)
Local adapation with distilling: 0.0001
training loss: tensor(0.5507) feature loss: tensor(0.2508)
Global Model Acc on global data: 0.4923 length of data: 10000
-------------Round number:  84  -------------
selected users: [94, 55, 80, 1, 90, 11, 32, 8, 6, 82]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.3943) feature loss: tensor(0.1471)
Local adapation with distilling: 0.0001
training loss: tensor(0.3366) feature loss: tensor(0.1529)
Local adapation with distilling: 0.0001
training loss: tensor(0.3984) feature loss: tensor(0.1521)
Local adapation with distilling: 0.0001
training loss: tensor(0.3558) feature loss: tensor(0.1510)
Local adapation with distilling: 0.0001
training loss: tensor(0.4102) feature loss: tensor(0.1520)
Local adapation with distilling: 0.0001
training loss: tensor(0.3436) feature loss: tensor(0.1490)
Local adapation with distilling: 0.0001
training loss: tensor(0.3982) feature loss: tensor(0.1481)
Local adapation with distilling: 0.0001
training loss: tensor(0.3959) feature loss: tensor(0.1547)
Local adapation with distilling: 0.0001
training loss: tensor(0.5221) feature loss: tensor(0.1542)
Local adapation with distilling: 0.0001
training loss: tensor(0.4175) feature loss: tensor(0.1498)
Global Model Acc on global data: 0.4771 length of data: 10000
-------------Round number:  85  -------------
selected users: [81, 25, 40, 87, 41, 23, 10, 89, 50, 54]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.5474) feature loss: tensor(0.2308)
Local adapation with distilling: 0.0001
training loss: tensor(0.5586) feature loss: tensor(0.2333)
Local adapation with distilling: 0.0001
training loss: tensor(0.5891) feature loss: tensor(0.2385)
Local adapation with distilling: 0.0001
training loss: tensor(1.3729) feature loss: tensor(0.2218)
Local adapation with distilling: 0.0001
training loss: tensor(0.5500) feature loss: tensor(0.2316)
Local adapation with distilling: 0.0001
training loss: tensor(0.7161) feature loss: tensor(0.2271)
Local adapation with distilling: 0.0001
training loss: tensor(0.6140) feature loss: tensor(0.2509)
Local adapation with distilling: 0.0001
training loss: tensor(1.0985) feature loss: tensor(0.2480)
Local adapation with distilling: 0.0001
training loss: tensor(0.5725) feature loss: tensor(0.2534)
Local adapation with distilling: 0.0001
training loss: tensor(0.6147) feature loss: tensor(0.2305)
Global Model Acc on global data: 0.4745 length of data: 10000
-------------Round number:  86  -------------
selected users: [69, 74, 34, 68, 42, 0, 32, 88, 8, 3]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.8151) feature loss: tensor(0.2365)
Local adapation with distilling: 0.0001
training loss: tensor(0.5423) feature loss: tensor(0.2454)
Local adapation with distilling: 0.0001
training loss: tensor(0.5425) feature loss: tensor(0.2438)
Local adapation with distilling: 0.0001
training loss: tensor(0.6656) feature loss: tensor(0.2597)
Local adapation with distilling: 0.0001
training loss: tensor(0.5897) feature loss: tensor(0.2419)
Local adapation with distilling: 0.0001
training loss: tensor(0.5474) feature loss: tensor(0.2423)
Local adapation with distilling: 0.0001
training loss: tensor(0.5877) feature loss: tensor(0.2480)
Local adapation with distilling: 0.0001
training loss: tensor(0.6835) feature loss: tensor(0.2764)
Local adapation with distilling: 0.0001
training loss: tensor(0.6702) feature loss: tensor(0.2535)
Local adapation with distilling: 0.0001
training loss: tensor(0.5762) feature loss: tensor(0.2445)
Global Model Acc on global data: 0.477 length of data: 10000
-------------Round number:  87  -------------
selected users: [16, 81, 85, 32, 39, 25, 26, 29, 65, 7]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(1.0651) feature loss: tensor(0.4415)
Local adapation with distilling: 0.0001
training loss: tensor(0.8487) feature loss: tensor(0.3798)
Local adapation with distilling: 0.0001
training loss: tensor(1.0212) feature loss: tensor(0.5940)
Local adapation with distilling: 0.0001
training loss: tensor(0.9737) feature loss: tensor(0.4626)
Local adapation with distilling: 0.0001
training loss: tensor(1.1129) feature loss: tensor(0.4010)
Local adapation with distilling: 0.0001
training loss: tensor(0.9023) feature loss: tensor(0.4907)
Local adapation with distilling: 0.0001
training loss: tensor(1.1465) feature loss: tensor(0.5692)
Local adapation with distilling: 0.0001
training loss: tensor(1.0737) feature loss: tensor(0.3773)
Local adapation with distilling: 0.0001
training loss: tensor(0.9495) feature loss: tensor(0.4499)
Local adapation with distilling: 0.0001
training loss: tensor(1.5251) feature loss: tensor(0.4339)
Global Model Acc on global data: 0.517 length of data: 10000
-------------Round number:  88  -------------
selected users: [95, 53, 43, 84, 2, 74, 55, 31, 54, 97]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.5487) feature loss: tensor(0.2478)
Local adapation with distilling: 0.0001
training loss: tensor(0.7901) feature loss: tensor(0.3733)
Local adapation with distilling: 0.0001
training loss: tensor(0.7922) feature loss: tensor(0.3189)
Local adapation with distilling: 0.0001
training loss: tensor(0.6463) feature loss: tensor(0.2435)
Local adapation with distilling: 0.0001
training loss: tensor(0.9059) feature loss: tensor(0.3920)
Local adapation with distilling: 0.0001
training loss: tensor(0.6859) feature loss: tensor(0.2942)
Local adapation with distilling: 0.0001
training loss: tensor(0.7165) feature loss: tensor(0.3697)
Local adapation with distilling: 0.0001
training loss: tensor(0.5086) feature loss: tensor(0.2366)
Local adapation with distilling: 0.0001
training loss: tensor(0.7909) feature loss: tensor(0.3243)
Local adapation with distilling: 0.0001
training loss: tensor(0.9700) feature loss: tensor(0.3159)
Global Model Acc on global data: 0.4565 length of data: 10000
-------------Round number:  89  -------------
selected users: [65, 21, 87, 6, 46, 74, 44, 60, 72, 5]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.5177) feature loss: tensor(0.2219)
Local adapation with distilling: 0.0001
training loss: tensor(0.4816) feature loss: tensor(0.2162)
Local adapation with distilling: 0.0001
training loss: tensor(0.8691) feature loss: tensor(0.2321)
Local adapation with distilling: 0.0001
training loss: tensor(0.7076) feature loss: tensor(0.2105)
Local adapation with distilling: 0.0001
training loss: tensor(0.7443) feature loss: tensor(0.2188)
Local adapation with distilling: 0.0001
training loss: tensor(0.4732) feature loss: tensor(0.2149)
Local adapation with distilling: 0.0001
training loss: tensor(0.5405) feature loss: tensor(0.2483)
Local adapation with distilling: 0.0001
training loss: tensor(0.5069) feature loss: tensor(0.2116)
Local adapation with distilling: 0.0001
training loss: tensor(0.7246) feature loss: tensor(0.2636)
Local adapation with distilling: 0.0001
training loss: tensor(0.5063) feature loss: tensor(0.2140)
Global Model Acc on global data: 0.4595 length of data: 10000
-------------Round number:  90  -------------
selected users: [25, 85, 96, 89, 65, 94, 5, 35, 36, 92]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.5959) feature loss: tensor(0.3273)
Local adapation with distilling: 0.0001
training loss: tensor(0.6058) feature loss: tensor(0.3554)
Local adapation with distilling: 0.0001
training loss: tensor(0.6387) feature loss: tensor(0.2644)
Local adapation with distilling: 0.0001
training loss: tensor(0.8754) feature loss: tensor(0.2499)
Local adapation with distilling: 0.0001
training loss: tensor(0.5720) feature loss: tensor(0.3171)
Local adapation with distilling: 0.0001
training loss: tensor(0.6582) feature loss: tensor(0.3371)
Local adapation with distilling: 0.0001
training loss: tensor(0.5695) feature loss: tensor(0.3187)
Local adapation with distilling: 0.0001
training loss: tensor(0.6044) feature loss: tensor(0.3632)
Local adapation with distilling: 0.0001
training loss: tensor(0.7515) feature loss: tensor(0.3417)
Local adapation with distilling: 0.0001
training loss: tensor(1.0007) feature loss: tensor(0.4819)
Global Model Acc on global data: 0.4505 length of data: 10000
-------------Round number:  91  -------------
selected users: [75, 25, 3, 52, 78, 54, 59, 26, 62, 97]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.5624) feature loss: tensor(0.2803)
Local adapation with distilling: 0.0001
training loss: tensor(0.5618) feature loss: tensor(0.2746)
Local adapation with distilling: 0.0001
training loss: tensor(0.8436) feature loss: tensor(0.2884)
Local adapation with distilling: 0.0001
training loss: tensor(0.8408) feature loss: tensor(0.3288)
Local adapation with distilling: 0.0001
training loss: tensor(0.6761) feature loss: tensor(0.2776)
Local adapation with distilling: 0.0001
training loss: tensor(0.7739) feature loss: tensor(0.2980)
Local adapation with distilling: 0.0001
training loss: tensor(0.8319) feature loss: tensor(0.2665)
Local adapation with distilling: 0.0001
training loss: tensor(0.7331) feature loss: tensor(0.2657)
Local adapation with distilling: 0.0001
training loss: tensor(0.8297) feature loss: tensor(0.3132)
Local adapation with distilling: 0.0001
training loss: tensor(1.2223) feature loss: tensor(0.2955)
Global Model Acc on global data: 0.5159 length of data: 10000
-------------Round number:  92  -------------
selected users: [25, 99, 73, 61, 66, 36, 23, 83, 77, 6]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.5492) feature loss: tensor(0.2592)
Local adapation with distilling: 0.0001
training loss: tensor(0.7216) feature loss: tensor(0.2634)
Local adapation with distilling: 0.0001
training loss: tensor(0.6894) feature loss: tensor(0.2772)
Local adapation with distilling: 0.0001
training loss: tensor(0.5859) feature loss: tensor(0.2677)
Local adapation with distilling: 0.0001
training loss: tensor(0.6776) feature loss: tensor(0.2654)
Local adapation with distilling: 0.0001
training loss: tensor(0.7279) feature loss: tensor(0.2979)
Local adapation with distilling: 0.0001
training loss: tensor(0.7412) feature loss: tensor(0.3452)
Local adapation with distilling: 0.0001
training loss: tensor(0.7455) feature loss: tensor(0.2847)
Local adapation with distilling: 0.0001
training loss: tensor(0.9666) feature loss: tensor(0.2565)
Local adapation with distilling: 0.0001
training loss: tensor(0.6497) feature loss: tensor(0.2683)
Global Model Acc on global data: 0.5065 length of data: 10000
-------------Round number:  93  -------------
selected users: [75, 82, 56, 27, 42, 35, 1, 97, 66, 61]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.4191) feature loss: tensor(0.1908)
Local adapation with distilling: 0.0001
training loss: tensor(0.5867) feature loss: tensor(0.2333)
Local adapation with distilling: 0.0001
training loss: tensor(0.4678) feature loss: tensor(0.1974)
Local adapation with distilling: 0.0001
training loss: tensor(0.7409) feature loss: tensor(0.1939)
Local adapation with distilling: 0.0001
training loss: tensor(0.6219) feature loss: tensor(0.1982)
Local adapation with distilling: 0.0001
training loss: tensor(0.4345) feature loss: tensor(0.1885)
Local adapation with distilling: 0.0001
training loss: tensor(0.3810) feature loss: tensor(0.1860)
Local adapation with distilling: 0.0001
training loss: tensor(0.6939) feature loss: tensor(0.2237)
Local adapation with distilling: 0.0001
training loss: tensor(0.3922) feature loss: tensor(0.1836)
Local adapation with distilling: 0.0001
training loss: tensor(0.3869) feature loss: tensor(0.1873)
Global Model Acc on global data: 0.442 length of data: 10000
-------------Round number:  94  -------------
selected users: [13, 73, 5, 18, 99, 48, 23, 4, 35, 17]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.7185) feature loss: tensor(0.3144)
Local adapation with distilling: 0.0001
training loss: tensor(0.7189) feature loss: tensor(0.3174)
Local adapation with distilling: 0.0001
training loss: tensor(0.6365) feature loss: tensor(0.3200)
Local adapation with distilling: 0.0001
training loss: tensor(0.7362) feature loss: tensor(0.3375)
Local adapation with distilling: 0.0001
training loss: tensor(0.8650) feature loss: tensor(0.3143)
Local adapation with distilling: 0.0001
training loss: tensor(0.7448) feature loss: tensor(0.3305)
Local adapation with distilling: 0.0001
training loss: tensor(0.7219) feature loss: tensor(0.3195)
Local adapation with distilling: 0.0001
training loss: tensor(0.7726) feature loss: tensor(0.3150)
Local adapation with distilling: 0.0001
training loss: tensor(0.6400) feature loss: tensor(0.3204)
Local adapation with distilling: 0.0001
training loss: tensor(0.7644) feature loss: tensor(0.3142)
Global Model Acc on global data: 0.503 length of data: 10000
-------------Round number:  95  -------------
selected users: [88, 9, 1, 60, 95, 26, 45, 71, 44, 21]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.5216) feature loss: tensor(0.2273)
Local adapation with distilling: 0.0001
training loss: tensor(0.6340) feature loss: tensor(0.2270)
Local adapation with distilling: 0.0001
training loss: tensor(0.4272) feature loss: tensor(0.1975)
Local adapation with distilling: 0.0001
training loss: tensor(0.6123) feature loss: tensor(0.2280)
Local adapation with distilling: 0.0001
training loss: tensor(0.4013) feature loss: tensor(0.1896)
Local adapation with distilling: 0.0001
training loss: tensor(0.5444) feature loss: tensor(0.1899)
Local adapation with distilling: 0.0001
training loss: tensor(0.4143) feature loss: tensor(0.1931)
Local adapation with distilling: 0.0001
training loss: tensor(0.4695) feature loss: tensor(0.2091)
Local adapation with distilling: 0.0001
training loss: tensor(0.5070) feature loss: tensor(0.1893)
Local adapation with distilling: 0.0001
training loss: tensor(0.4509) feature loss: tensor(0.1956)
Global Model Acc on global data: 0.5332 length of data: 10000
-------------Round number:  96  -------------
selected users: [41, 28, 52, 15, 87, 17, 75, 42, 45, 49]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.5141) feature loss: tensor(0.2414)
Local adapation with distilling: 0.0001
training loss: tensor(0.5668) feature loss: tensor(0.2389)
Local adapation with distilling: 0.0001
training loss: tensor(0.6241) feature loss: tensor(0.2625)
Local adapation with distilling: 0.0001
training loss: tensor(0.4901) feature loss: tensor(0.2478)
Local adapation with distilling: 0.0001
training loss: tensor(0.7113) feature loss: tensor(0.2321)
Local adapation with distilling: 0.0001
training loss: tensor(0.7214) feature loss: tensor(0.2470)
Local adapation with distilling: 0.0001
training loss: tensor(0.4830) feature loss: tensor(0.2473)
Local adapation with distilling: 0.0001
training loss: tensor(0.6057) feature loss: tensor(0.2346)
Local adapation with distilling: 0.0001
training loss: tensor(0.4962) feature loss: tensor(0.2496)
Local adapation with distilling: 0.0001
training loss: tensor(0.7432) feature loss: tensor(0.2468)
Global Model Acc on global data: 0.5178 length of data: 10000
-------------Round number:  97  -------------
selected users: [31, 43, 64, 56, 85, 2, 70, 21, 34, 50]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.4778) feature loss: tensor(0.2084)
Local adapation with distilling: 0.0001
training loss: tensor(0.6069) feature loss: tensor(0.2078)
Local adapation with distilling: 0.0001
training loss: tensor(0.6142) feature loss: tensor(0.2050)
Local adapation with distilling: 0.0001
training loss: tensor(0.6391) feature loss: tensor(0.2060)
Local adapation with distilling: 0.0001
training loss: tensor(0.4663) feature loss: tensor(0.2066)
Local adapation with distilling: 0.0001
training loss: tensor(0.5359) feature loss: tensor(0.2053)
Local adapation with distilling: 0.0001
training loss: tensor(0.6103) feature loss: tensor(0.2087)
Local adapation with distilling: 0.0001
training loss: tensor(0.4887) feature loss: tensor(0.2048)
Local adapation with distilling: 0.0001
training loss: tensor(0.6118) feature loss: tensor(0.2061)
Local adapation with distilling: 0.0001
training loss: tensor(0.5932) feature loss: tensor(0.2153)
Global Model Acc on global data: 0.4982 length of data: 10000
-------------Round number:  98  -------------
selected users: [11, 48, 97, 14, 22, 36, 99, 47, 33, 81]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.5591) feature loss: tensor(0.2579)
Local adapation with distilling: 0.0001
training loss: tensor(0.6540) feature loss: tensor(0.2747)
Local adapation with distilling: 0.0001
training loss: tensor(0.7353) feature loss: tensor(0.2542)
Local adapation with distilling: 0.0001
training loss: tensor(0.5505) feature loss: tensor(0.2581)
Local adapation with distilling: 0.0001
training loss: tensor(0.5640) feature loss: tensor(0.2537)
Local adapation with distilling: 0.0001
training loss: tensor(0.5914) feature loss: tensor(0.2546)
Local adapation with distilling: 0.0001
training loss: tensor(0.8198) feature loss: tensor(0.2514)
Local adapation with distilling: 0.0001
training loss: tensor(0.7442) feature loss: tensor(0.2518)
Local adapation with distilling: 0.0001
training loss: tensor(0.6382) feature loss: tensor(0.2570)
Local adapation with distilling: 0.0001
training loss: tensor(0.5372) feature loss: tensor(0.2550)
Global Model Acc on global data: 0.5376 length of data: 10000
-------------Round number:  99  -------------
selected users: [14, 34, 30, 78, 16, 15, 91, 38, 10, 85]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.4344) feature loss: tensor(0.1986)
Local adapation with distilling: 0.0001
training loss: tensor(0.4532) feature loss: tensor(0.1964)
Local adapation with distilling: 0.0001
training loss: tensor(0.5547) feature loss: tensor(0.2006)
Local adapation with distilling: 0.0001
training loss: tensor(0.5061) feature loss: tensor(0.2111)
Local adapation with distilling: 0.0001
training loss: tensor(0.4760) feature loss: tensor(0.1949)
Local adapation with distilling: 0.0001
training loss: tensor(0.4744) feature loss: tensor(0.1989)
Local adapation with distilling: 0.0001
training loss: tensor(0.4172) feature loss: tensor(0.1994)
Local adapation with distilling: 0.0001
training loss: tensor(0.4861) feature loss: tensor(0.2018)
Local adapation with distilling: 0.0001
training loss: tensor(0.5450) feature loss: tensor(0.2042)
Local adapation with distilling: 0.0001
training loss: tensor(0.4688) feature loss: tensor(0.1994)
Global Model Acc on global data: 0.511 length of data: 10000

