nohup: ignoring input
================================================================================
Summary of training process:
Dataset                : Cifar10
Batch size             : 64
Learing rate           : 0.001
Number of total clients: 100
Split method           : quantity
Split parameter        : 1.0
Clients per round      : 10
Number of global rounds: 100
Number of local rounds : 10
Feature from layer     : 0
Feature percentage     : 0.1
Local training loss    : CE_CE_KL_Prox
Loss of beta           : 1.0
Algorithm              : FedFea
Modelname              : MOBNET
Mode                   : training
Seed                   : 0
================================================================================
Files already downloaded and verified
Files already downloaded and verified
Class frequencies:
client,class0,class1,class2,class3,class4,class5,class6,class7,class8,class9,Amount
Client   0,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client   1,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client   2,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client   3,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,500
Client   4,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,500
Client   5,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,500
Client   6,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,500
Client   7,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,500
Client   8,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,500
Client   9,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,500
Client  10,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  11,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  12,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  13,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  14,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,500
Client  15,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,500
Client  16,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,500
Client  17,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,500
Client  18,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,500
Client  19,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,500
Client  20,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  21,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  22,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  23,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  24,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,500
Client  25,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,500
Client  26,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,500
Client  27,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,500
Client  28,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,500
Client  29,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,500
Client  30,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  31,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  32,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  33,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  34,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,500
Client  35,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,500
Client  36,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,500
Client  37,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,500
Client  38,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,500
Client  39,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,500
Client  40,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  41,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  42,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  43,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  44,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,500
Client  45,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,500
Client  46,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,500
Client  47,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,500
Client  48,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,500
Client  49,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,500
Client  50,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  51,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  52,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  53,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  54,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,500
Client  55,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,500
Client  56,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,500
Client  57,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,500
Client  58,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,500
Client  59,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,500
Client  60,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  61,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  62,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  63,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  64,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,500
Client  65,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,500
Client  66,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,500
Client  67,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,500
Client  68,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,500
Client  69,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,500
Client  70,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  71,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  72,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  73,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  74,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,500
Client  75,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,500
Client  76,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,500
Client  77,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,500
Client  78,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,500
Client  79,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,500
Client  80,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  81,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  82,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  83,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  84,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,500
Client  85,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,500
Client  86,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,500
Client  87,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,500
Client  88,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,500
Client  89,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,500
Client  90,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  91,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  92,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  93,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  94,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,500
Client  95,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,500
Client  96,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,500
Client  97,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,500
Client  98,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,500
Client  99,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,500
0 [0] [0] [1 2 3 4 5 6 7 8 9]
0 training: Counter({0: 500}) testing iid: Counter({0: 1000})
1 [1] [1] [0 2 3 4 5 6 7 8 9]
1 training: Counter({1: 500}) testing iid: Counter({1: 1000})
2 [2] [2] [0 1 3 4 5 6 7 8 9]
2 training: Counter({2: 500}) testing iid: Counter({2: 1000})
3 [3] [3] [0 1 2 4 5 6 7 8 9]
3 training: Counter({3: 500}) testing iid: Counter({3: 1000})
4 [4] [4] [0 1 2 3 5 6 7 8 9]
4 training: Counter({4: 500}) testing iid: Counter({4: 1000})
5 [5] [5] [0 1 2 3 4 6 7 8 9]
5 training: Counter({5: 500}) testing iid: Counter({5: 1000})
6 [6] [6] [0 1 2 3 4 5 7 8 9]
6 training: Counter({6: 500}) testing iid: Counter({6: 1000})
7 [7] [7] [0 1 2 3 4 5 6 8 9]
7 training: Counter({7: 500}) testing iid: Counter({7: 1000})
8 [8] [8] [0 1 2 3 4 5 6 7 9]
8 training: Counter({8: 500}) testing iid: Counter({8: 1000})
9 [9] [9] [0 1 2 3 4 5 6 7 8]
9 training: Counter({9: 500}) testing iid: Counter({9: 1000})
10 [0] [0] [1 2 3 4 5 6 7 8 9]
10 training: Counter({0: 500}) testing iid: Counter({0: 1000})
11 [1] [1] [0 2 3 4 5 6 7 8 9]
11 training: Counter({1: 500}) testing iid: Counter({1: 1000})
12 [2] [2] [0 1 3 4 5 6 7 8 9]
12 training: Counter({2: 500}) testing iid: Counter({2: 1000})
13 [3] [3] [0 1 2 4 5 6 7 8 9]
13 training: Counter({3: 500}) testing iid: Counter({3: 1000})
14 [4] [4] [0 1 2 3 5 6 7 8 9]
14 training: Counter({4: 500}) testing iid: Counter({4: 1000})
15 [5] [5] [0 1 2 3 4 6 7 8 9]
15 training: Counter({5: 500}) testing iid: Counter({5: 1000})
16 [6] [6] [0 1 2 3 4 5 7 8 9]
16 training: Counter({6: 500}) testing iid: Counter({6: 1000})
17 [7] [7] [0 1 2 3 4 5 6 8 9]
17 training: Counter({7: 500}) testing iid: Counter({7: 1000})
18 [8] [8] [0 1 2 3 4 5 6 7 9]
18 training: Counter({8: 500}) testing iid: Counter({8: 1000})
19 [9] [9] [0 1 2 3 4 5 6 7 8]
19 training: Counter({9: 500}) testing iid: Counter({9: 1000})
20 [0] [0] [1 2 3 4 5 6 7 8 9]
20 training: Counter({0: 500}) testing iid: Counter({0: 1000})
21 [1] [1] [0 2 3 4 5 6 7 8 9]
21 training: Counter({1: 500}) testing iid: Counter({1: 1000})
22 [2] [2] [0 1 3 4 5 6 7 8 9]
22 training: Counter({2: 500}) testing iid: Counter({2: 1000})
23 [3] [3] [0 1 2 4 5 6 7 8 9]
23 training: Counter({3: 500}) testing iid: Counter({3: 1000})
24 [4] [4] [0 1 2 3 5 6 7 8 9]
24 training: Counter({4: 500}) testing iid: Counter({4: 1000})
25 [5] [5] [0 1 2 3 4 6 7 8 9]
25 training: Counter({5: 500}) testing iid: Counter({5: 1000})
26 [6] [6] [0 1 2 3 4 5 7 8 9]
26 training: Counter({6: 500}) testing iid: Counter({6: 1000})
27 [7] [7] [0 1 2 3 4 5 6 8 9]
27 training: Counter({7: 500}) testing iid: Counter({7: 1000})
28 [8] [8] [0 1 2 3 4 5 6 7 9]
28 training: Counter({8: 500}) testing iid: Counter({8: 1000})
29 [9] [9] [0 1 2 3 4 5 6 7 8]
29 training: Counter({9: 500}) testing iid: Counter({9: 1000})
30 [0] [0] [1 2 3 4 5 6 7 8 9]
30 training: Counter({0: 500}) testing iid: Counter({0: 1000})
31 [1] [1] [0 2 3 4 5 6 7 8 9]
31 training: Counter({1: 500}) testing iid: Counter({1: 1000})
32 [2] [2] [0 1 3 4 5 6 7 8 9]
32 training: Counter({2: 500}) testing iid: Counter({2: 1000})
33 [3] [3] [0 1 2 4 5 6 7 8 9]
33 training: Counter({3: 500}) testing iid: Counter({3: 1000})
34 [4] [4] [0 1 2 3 5 6 7 8 9]
34 training: Counter({4: 500}) testing iid: Counter({4: 1000})
35 [5] [5] [0 1 2 3 4 6 7 8 9]
35 training: Counter({5: 500}) testing iid: Counter({5: 1000})
36 [6] [6] [0 1 2 3 4 5 7 8 9]
36 training: Counter({6: 500}) testing iid: Counter({6: 1000})
37 [7] [7] [0 1 2 3 4 5 6 8 9]
37 training: Counter({7: 500}) testing iid: Counter({7: 1000})
38 [8] [8] [0 1 2 3 4 5 6 7 9]
38 training: Counter({8: 500}) testing iid: Counter({8: 1000})
39 [9] [9] [0 1 2 3 4 5 6 7 8]
39 training: Counter({9: 500}) testing iid: Counter({9: 1000})
40 [0] [0] [1 2 3 4 5 6 7 8 9]
40 training: Counter({0: 500}) testing iid: Counter({0: 1000})
41 [1] [1] [0 2 3 4 5 6 7 8 9]
41 training: Counter({1: 500}) testing iid: Counter({1: 1000})
42 [2] [2] [0 1 3 4 5 6 7 8 9]
42 training: Counter({2: 500}) testing iid: Counter({2: 1000})
43 [3] [3] [0 1 2 4 5 6 7 8 9]
43 training: Counter({3: 500}) testing iid: Counter({3: 1000})
44 [4] [4] [0 1 2 3 5 6 7 8 9]
44 training: Counter({4: 500}) testing iid: Counter({4: 1000})
45 [5] [5] [0 1 2 3 4 6 7 8 9]
45 training: Counter({5: 500}) testing iid: Counter({5: 1000})
46 [6] [6] [0 1 2 3 4 5 7 8 9]
46 training: Counter({6: 500}) testing iid: Counter({6: 1000})
47 [7] [7] [0 1 2 3 4 5 6 8 9]
47 training: Counter({7: 500}) testing iid: Counter({7: 1000})
48 [8] [8] [0 1 2 3 4 5 6 7 9]
48 training: Counter({8: 500}) testing iid: Counter({8: 1000})
49 [9] [9] [0 1 2 3 4 5 6 7 8]
49 training: Counter({9: 500}) testing iid: Counter({9: 1000})
50 [0] [0] [1 2 3 4 5 6 7 8 9]
50 training: Counter({0: 500}) testing iid: Counter({0: 1000})
51 [1] [1] [0 2 3 4 5 6 7 8 9]
51 training: Counter({1: 500}) testing iid: Counter({1: 1000})
52 [2] [2] [0 1 3 4 5 6 7 8 9]
52 training: Counter({2: 500}) testing iid: Counter({2: 1000})
53 [3] [3] [0 1 2 4 5 6 7 8 9]
53 training: Counter({3: 500}) testing iid: Counter({3: 1000})
54 [4] [4] [0 1 2 3 5 6 7 8 9]
54 training: Counter({4: 500}) testing iid: Counter({4: 1000})
55 [5] [5] [0 1 2 3 4 6 7 8 9]
55 training: Counter({5: 500}) testing iid: Counter({5: 1000})
56 [6] [6] [0 1 2 3 4 5 7 8 9]
56 training: Counter({6: 500}) testing iid: Counter({6: 1000})
57 [7] [7] [0 1 2 3 4 5 6 8 9]
57 training: Counter({7: 500}) testing iid: Counter({7: 1000})
58 [8] [8] [0 1 2 3 4 5 6 7 9]
58 training: Counter({8: 500}) testing iid: Counter({8: 1000})
59 [9] [9] [0 1 2 3 4 5 6 7 8]
59 training: Counter({9: 500}) testing iid: Counter({9: 1000})
60 [0] [0] [1 2 3 4 5 6 7 8 9]
60 training: Counter({0: 500}) testing iid: Counter({0: 1000})
61 [1] [1] [0 2 3 4 5 6 7 8 9]
61 training: Counter({1: 500}) testing iid: Counter({1: 1000})
62 [2] [2] [0 1 3 4 5 6 7 8 9]
62 training: Counter({2: 500}) testing iid: Counter({2: 1000})
63 [3] [3] [0 1 2 4 5 6 7 8 9]
63 training: Counter({3: 500}) testing iid: Counter({3: 1000})
64 [4] [4] [0 1 2 3 5 6 7 8 9]
64 training: Counter({4: 500}) testing iid: Counter({4: 1000})
65 [5] [5] [0 1 2 3 4 6 7 8 9]
65 training: Counter({5: 500}) testing iid: Counter({5: 1000})
66 [6] [6] [0 1 2 3 4 5 7 8 9]
66 training: Counter({6: 500}) testing iid: Counter({6: 1000})
67 [7] [7] [0 1 2 3 4 5 6 8 9]
67 training: Counter({7: 500}) testing iid: Counter({7: 1000})
68 [8] [8] [0 1 2 3 4 5 6 7 9]
68 training: Counter({8: 500}) testing iid: Counter({8: 1000})
69 [9] [9] [0 1 2 3 4 5 6 7 8]
69 training: Counter({9: 500}) testing iid: Counter({9: 1000})
70 [0] [0] [1 2 3 4 5 6 7 8 9]
70 training: Counter({0: 500}) testing iid: Counter({0: 1000})
71 [1] [1] [0 2 3 4 5 6 7 8 9]
71 training: Counter({1: 500}) testing iid: Counter({1: 1000})
72 [2] [2] [0 1 3 4 5 6 7 8 9]
72 training: Counter({2: 500}) testing iid: Counter({2: 1000})
73 [3] [3] [0 1 2 4 5 6 7 8 9]
73 training: Counter({3: 500}) testing iid: Counter({3: 1000})
74 [4] [4] [0 1 2 3 5 6 7 8 9]
74 training: Counter({4: 500}) testing iid: Counter({4: 1000})
75 [5] [5] [0 1 2 3 4 6 7 8 9]
75 training: Counter({5: 500}) testing iid: Counter({5: 1000})
76 [6] [6] [0 1 2 3 4 5 7 8 9]
76 training: Counter({6: 500}) testing iid: Counter({6: 1000})
77 [7] [7] [0 1 2 3 4 5 6 8 9]
77 training: Counter({7: 500}) testing iid: Counter({7: 1000})
78 [8] [8] [0 1 2 3 4 5 6 7 9]
78 training: Counter({8: 500}) testing iid: Counter({8: 1000})
79 [9] [9] [0 1 2 3 4 5 6 7 8]
79 training: Counter({9: 500}) testing iid: Counter({9: 1000})
80 [0] [0] [1 2 3 4 5 6 7 8 9]
80 training: Counter({0: 500}) testing iid: Counter({0: 1000})
81 [1] [1] [0 2 3 4 5 6 7 8 9]
81 training: Counter({1: 500}) testing iid: Counter({1: 1000})
82 [2] [2] [0 1 3 4 5 6 7 8 9]
82 training: Counter({2: 500}) testing iid: Counter({2: 1000})
83 [3] [3] [0 1 2 4 5 6 7 8 9]
83 training: Counter({3: 500}) testing iid: Counter({3: 1000})
84 [4] [4] [0 1 2 3 5 6 7 8 9]
84 training: Counter({4: 500}) testing iid: Counter({4: 1000})
85 [5] [5] [0 1 2 3 4 6 7 8 9]
85 training: Counter({5: 500}) testing iid: Counter({5: 1000})
86 [6] [6] [0 1 2 3 4 5 7 8 9]
86 training: Counter({6: 500}) testing iid: Counter({6: 1000})
87 [7] [7] [0 1 2 3 4 5 6 8 9]
87 training: Counter({7: 500}) testing iid: Counter({7: 1000})
88 [8] [8] [0 1 2 3 4 5 6 7 9]
88 training: Counter({8: 500}) testing iid: Counter({8: 1000})
89 [9] [9] [0 1 2 3 4 5 6 7 8]
89 training: Counter({9: 500}) testing iid: Counter({9: 1000})
90 [0] [0] [1 2 3 4 5 6 7 8 9]
90 training: Counter({0: 500}) testing iid: Counter({0: 1000})
91 [1] [1] [0 2 3 4 5 6 7 8 9]
91 training: Counter({1: 500}) testing iid: Counter({1: 1000})
92 [2] [2] [0 1 3 4 5 6 7 8 9]
92 training: Counter({2: 500}) testing iid: Counter({2: 1000})
93 [3] [3] [0 1 2 4 5 6 7 8 9]
93 training: Counter({3: 500}) testing iid: Counter({3: 1000})
94 [4] [4] [0 1 2 3 5 6 7 8 9]
94 training: Counter({4: 500}) testing iid: Counter({4: 1000})
95 [5] [5] [0 1 2 3 4 6 7 8 9]
95 training: Counter({5: 500}) testing iid: Counter({5: 1000})
96 [6] [6] [0 1 2 3 4 5 7 8 9]
96 training: Counter({6: 500}) testing iid: Counter({6: 1000})
97 [7] [7] [0 1 2 3 4 5 6 8 9]
97 training: Counter({7: 500}) testing iid: Counter({7: 1000})
98 [8] [8] [0 1 2 3 4 5 6 7 9]
98 training: Counter({8: 500}) testing iid: Counter({8: 1000})
99 [9] [9] [0 1 2 3 4 5 6 7 8]
99 training: Counter({9: 500}) testing iid: Counter({9: 1000})
Num_samples of Training set per client
Total_training_samples: 50000
Global test set: 10000
Finish Generating Samples, distribution saved
MobileNetV2(
  (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (layers): Sequential(
    (0): Block(
      (conv1): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): Block(
      (conv1): Conv2d(16, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=96, bias=False)
      (bn2): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(96, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(16, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (2): Block(
      (conv1): Conv2d(24, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=144, bias=False)
      (bn2): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(144, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (3): Block(
      (conv1): Conv2d(24, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(144, 144, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=144, bias=False)
      (bn2): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(144, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (4): Block(
      (conv1): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
      (bn2): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(192, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (5): Block(
      (conv1): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
      (bn2): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(192, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (6): Block(
      (conv1): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(192, 192, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=192, bias=False)
      (bn2): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(192, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (7): Block(
      (conv1): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
      (bn2): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (8): Block(
      (conv1): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
      (bn2): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (9): Block(
      (conv1): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
      (bn2): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (10): Block(
      (conv1): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
      (bn2): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(384, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(64, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (11): Block(
      (conv1): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)
      (bn2): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (12): Block(
      (conv1): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)
      (bn2): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (13): Block(
      (conv1): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(576, 576, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=576, bias=False)
      (bn2): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(576, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (14): Block(
      (conv1): Conv2d(160, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(960, 960, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=960, bias=False)
      (bn2): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(960, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (15): Block(
      (conv1): Conv2d(160, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(960, 960, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=960, bias=False)
      (bn2): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(960, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (16): Block(
      (conv1): Conv2d(160, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(960, 960, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=960, bias=False)
      (bn2): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(960, 320, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(160, 320, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (conv2): Conv2d(320, 1280, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn2): BatchNorm2d(1280, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (linear): Linear(in_features=1280, out_features=10, bias=True)
)
number of parameters: 2296922
clients initializting...
output size: 10
  0%|          | 0/100 [00:00<?, ?it/s]  1%|          | 1/100 [00:04<06:42,  4.07s/it]  2%|▏         | 2/100 [00:04<04:55,  3.01s/it]  3%|▎         | 3/100 [00:05<03:41,  2.28s/it]  4%|▍         | 4/100 [00:05<02:48,  1.76s/it]  5%|▌         | 5/100 [00:06<02:12,  1.40s/it]  6%|▌         | 6/100 [00:06<01:47,  1.15s/it]  7%|▋         | 7/100 [00:07<01:30,  1.03it/s]  8%|▊         | 8/100 [00:07<01:17,  1.19it/s]  9%|▉         | 9/100 [00:08<01:08,  1.32it/s] 10%|█         | 10/100 [00:09<01:02,  1.44it/s] 11%|█         | 11/100 [00:09<00:58,  1.52it/s] 12%|█▏        | 12/100 [00:10<00:55,  1.59it/s] 13%|█▎        | 13/100 [00:10<00:52,  1.65it/s] 14%|█▍        | 14/100 [00:11<00:50,  1.69it/s] 15%|█▌        | 15/100 [00:11<00:49,  1.72it/s] 16%|█▌        | 16/100 [00:12<00:48,  1.75it/s] 17%|█▋        | 17/100 [00:12<00:46,  1.78it/s] 18%|█▊        | 18/100 [00:13<00:45,  1.79it/s] 19%|█▉        | 19/100 [00:14<00:45,  1.79it/s] 20%|██        | 20/100 [00:14<00:44,  1.79it/s] 21%|██        | 21/100 [00:15<00:43,  1.80it/s] 22%|██▏       | 22/100 [00:15<00:43,  1.80it/s] 23%|██▎       | 23/100 [00:16<00:43,  1.79it/s] 24%|██▍       | 24/100 [00:16<00:42,  1.79it/s] 25%|██▌       | 25/100 [00:17<00:42,  1.78it/s] 26%|██▌       | 26/100 [00:18<00:45,  1.62it/s] 27%|██▋       | 27/100 [00:18<00:44,  1.63it/s] 28%|██▊       | 28/100 [00:19<00:43,  1.66it/s] 29%|██▉       | 29/100 [00:19<00:41,  1.70it/s] 30%|███       | 30/100 [00:20<00:40,  1.72it/s] 31%|███       | 31/100 [00:21<00:39,  1.74it/s] 32%|███▏      | 32/100 [00:21<00:38,  1.76it/s] 33%|███▎      | 33/100 [00:22<00:37,  1.77it/s] 34%|███▍      | 34/100 [00:22<00:37,  1.77it/s] 35%|███▌      | 35/100 [00:23<00:37,  1.75it/s] 36%|███▌      | 36/100 [00:23<00:36,  1.74it/s] 37%|███▋      | 37/100 [00:24<00:36,  1.74it/s] 38%|███▊      | 38/100 [00:25<00:35,  1.75it/s] 39%|███▉      | 39/100 [00:25<00:35,  1.73it/s] 40%|████      | 40/100 [00:26<00:34,  1.73it/s] 41%|████      | 41/100 [00:30<01:35,  1.61s/it] 42%|████▏     | 42/100 [00:30<01:15,  1.30s/it] 43%|████▎     | 43/100 [00:31<01:01,  1.07s/it] 44%|████▍     | 44/100 [00:31<00:51,  1.09it/s] 45%|████▌     | 45/100 [00:32<00:44,  1.23it/s] 46%|████▌     | 46/100 [00:32<00:39,  1.36it/s] 47%|████▋     | 47/100 [00:33<00:36,  1.47it/s] 48%|████▊     | 48/100 [00:34<00:33,  1.56it/s] 49%|████▉     | 49/100 [00:34<00:31,  1.63it/s] 50%|█████     | 50/100 [00:35<00:29,  1.68it/s] 51%|█████     | 51/100 [00:35<00:28,  1.71it/s] 52%|█████▏    | 52/100 [00:36<00:27,  1.73it/s] 53%|█████▎    | 53/100 [00:36<00:26,  1.76it/s] 54%|█████▍    | 54/100 [00:37<00:26,  1.76it/s] 55%|█████▌    | 55/100 [00:37<00:25,  1.77it/s] 56%|█████▌    | 56/100 [00:38<00:24,  1.78it/s] 57%|█████▋    | 57/100 [00:39<00:23,  1.79it/s] 58%|█████▊    | 58/100 [00:39<00:23,  1.81it/s] 59%|█████▉    | 59/100 [00:40<00:22,  1.83it/s] 60%|██████    | 60/100 [00:40<00:22,  1.81it/s] 61%|██████    | 61/100 [00:41<00:21,  1.80it/s] 62%|██████▏   | 62/100 [00:41<00:20,  1.81it/s] 63%|██████▎   | 63/100 [00:42<00:20,  1.81it/s] 64%|██████▍   | 64/100 [00:42<00:19,  1.81it/s] 65%|██████▌   | 65/100 [00:43<00:19,  1.82it/s] 66%|██████▌   | 66/100 [00:44<00:18,  1.81it/s] 67%|██████▋   | 67/100 [00:44<00:18,  1.81it/s] 68%|██████▊   | 68/100 [00:45<00:17,  1.78it/s] 69%|██████▉   | 69/100 [00:45<00:17,  1.77it/s] 70%|███████   | 70/100 [00:46<00:16,  1.78it/s] 71%|███████   | 71/100 [00:46<00:16,  1.79it/s] 72%|███████▏  | 72/100 [00:47<00:15,  1.79it/s] 73%|███████▎  | 73/100 [00:47<00:15,  1.79it/s] 74%|███████▍  | 74/100 [00:48<00:14,  1.80it/s] 75%|███████▌  | 75/100 [00:49<00:13,  1.82it/s] 76%|███████▌  | 76/100 [00:49<00:13,  1.83it/s] 77%|███████▋  | 77/100 [00:50<00:12,  1.80it/s] 78%|███████▊  | 78/100 [00:50<00:12,  1.81it/s] 79%|███████▉  | 79/100 [00:51<00:11,  1.80it/s] 80%|████████  | 80/100 [00:51<00:10,  1.82it/s] 81%|████████  | 81/100 [00:52<00:10,  1.83it/s] 82%|████████▏ | 82/100 [00:52<00:09,  1.82it/s] 83%|████████▎ | 83/100 [00:56<00:27,  1.61s/it] 84%|████████▍ | 84/100 [00:57<00:20,  1.29s/it] 85%|████████▌ | 85/100 [00:58<00:16,  1.07s/it] 86%|████████▌ | 86/100 [00:58<00:12,  1.10it/s] 87%|████████▋ | 87/100 [00:59<00:10,  1.25it/s] 88%|████████▊ | 88/100 [00:59<00:08,  1.38it/s] 89%|████████▉ | 89/100 [01:00<00:07,  1.48it/s] 90%|█████████ | 90/100 [01:00<00:06,  1.56it/s] 91%|█████████ | 91/100 [01:01<00:05,  1.62it/s] 92%|█████████▏| 92/100 [01:01<00:04,  1.66it/s] 93%|█████████▎| 93/100 [01:02<00:04,  1.70it/s] 94%|█████████▍| 94/100 [01:03<00:03,  1.72it/s] 95%|█████████▌| 95/100 [01:03<00:02,  1.75it/s] 96%|█████████▌| 96/100 [01:04<00:02,  1.78it/s] 97%|█████████▋| 97/100 [01:04<00:01,  1.81it/s] 98%|█████████▊| 98/100 [01:05<00:01,  1.82it/s] 99%|█████████▉| 99/100 [01:05<00:00,  1.83it/s]100%|██████████| 100/100 [01:06<00:00,  1.85it/s]100%|██████████| 100/100 [01:06<00:00,  1.51it/s]
Number of users per round / total users: 10  /  100
Finished creating FL server.
=== Training starts: algorithm FedFea ===
-------------Round number:  0  -------------
selected users: [26, 86, 2, 55, 75, 93, 16, 73, 54, 95]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.001
training loss: tensor(2.0278) feature loss: tensor(0.5298)
Local adapation with distilling: 0.001
training loss: tensor(2.0090) feature loss: tensor(0.5208)
Local adapation with distilling: 0.001
training loss: tensor(2.0563) feature loss: tensor(0.4444)
Local adapation with distilling: 0.001
training loss: tensor(2.1289) feature loss: tensor(0.5799)
Local adapation with distilling: 0.001
training loss: tensor(2.1503) feature loss: tensor(0.6059)
Local adapation with distilling: 0.001
training loss: tensor(2.1244) feature loss: tensor(0.5721)
Local adapation with distilling: 0.001
training loss: tensor(2.0427) feature loss: tensor(0.5286)
Local adapation with distilling: 0.001
training loss: tensor(2.0637) feature loss: tensor(0.5529)
Local adapation with distilling: 0.001
training loss: tensor(2.2614) feature loss: tensor(0.5321)
Local adapation with distilling: 0.001
training loss: tensor(2.1357) feature loss: tensor(0.5934)
Global Model Acc on global data: 0.1001 length of data: 10000
save a model
-------------Round number:  1  -------------
selected users: [80, 84, 33, 81, 93, 17, 36, 82, 69, 65]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.000982
training loss: tensor(2.3188) feature loss: tensor(0.6666)
Local adapation with distilling: 0.000982
training loss: tensor(2.3166) feature loss: tensor(0.6187)
Local adapation with distilling: 0.000982
training loss: tensor(2.0450) feature loss: tensor(0.5454)
Local adapation with distilling: 0.000982
training loss: tensor(2.2702) feature loss: tensor(0.6330)
Local adapation with distilling: 0.000982
training loss: tensor(2.0140) feature loss: tensor(0.5445)
Local adapation with distilling: 0.000982
training loss: tensor(2.3028) feature loss: tensor(0.6355)
Local adapation with distilling: 0.000982
training loss: tensor(2.1542) feature loss: tensor(0.4590)
Local adapation with distilling: 0.000982
training loss: tensor(2.1332) feature loss: tensor(0.5641)
Local adapation with distilling: 0.000982
training loss: tensor(2.1123) feature loss: tensor(0.5720)
Local adapation with distilling: 0.000982
training loss: tensor(2.0948) feature loss: tensor(0.5044)
Global Model Acc on global data: 0.1367 length of data: 10000
save a model
-------------Round number:  2  -------------
selected users: [83, 30, 56, 24, 16, 23, 2, 27, 28, 13]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.000964
training loss: tensor(1.6304) feature loss: tensor(0.4672)
Local adapation with distilling: 0.000964
training loss: tensor(1.6230) feature loss: tensor(0.4631)
Local adapation with distilling: 0.000964
training loss: tensor(1.6624) feature loss: tensor(0.4516)
Local adapation with distilling: 0.000964
training loss: tensor(1.7294) feature loss: tensor(0.4691)
Local adapation with distilling: 0.000964
training loss: tensor(1.7096) feature loss: tensor(0.4782)
Local adapation with distilling: 0.000964
training loss: tensor(1.5569) feature loss: tensor(0.4954)
Local adapation with distilling: 0.000964
training loss: tensor(1.6809) feature loss: tensor(0.4720)
Local adapation with distilling: 0.000964
training loss: tensor(1.7507) feature loss: tensor(0.5007)
Local adapation with distilling: 0.000964
training loss: tensor(1.8151) feature loss: tensor(0.5692)
Local adapation with distilling: 0.000964
training loss: tensor(1.6325) feature loss: tensor(0.4664)
Global Model Acc on global data: 0.1507 length of data: 10000
save a model
-------------Round number:  3  -------------
selected users: [93, 67, 6, 64, 96, 83, 98, 42, 25, 15]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.000946
training loss: tensor(1.4915) feature loss: tensor(0.4598)
Local adapation with distilling: 0.000946
training loss: tensor(1.5979) feature loss: tensor(0.5296)
Local adapation with distilling: 0.000946
training loss: tensor(1.4465) feature loss: tensor(0.4486)
Local adapation with distilling: 0.000946
training loss: tensor(1.6183) feature loss: tensor(0.4576)
Local adapation with distilling: 0.000946
training loss: tensor(1.3951) feature loss: tensor(0.4266)
Local adapation with distilling: 0.000946
training loss: tensor(1.5365) feature loss: tensor(0.4735)
Local adapation with distilling: 0.000946
training loss: tensor(1.6569) feature loss: tensor(0.5271)
Local adapation with distilling: 0.000946
training loss: tensor(1.6618) feature loss: tensor(0.4539)
Local adapation with distilling: 0.000946
training loss: tensor(1.5103) feature loss: tensor(0.4730)
Local adapation with distilling: 0.000946
training loss: tensor(1.5303) feature loss: tensor(0.4841)
Global Model Acc on global data: 0.1469 length of data: 10000
-------------Round number:  4  -------------
selected users: [20, 10, 96, 16, 63, 24, 53, 97, 41, 47]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.8994) feature loss: tensor(0.6166)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.7410) feature loss: tensor(0.5898)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.3692) feature loss: tensor(0.5095)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.3773) feature loss: tensor(0.5630)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.5329) feature loss: tensor(0.5738)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.4508) feature loss: tensor(0.5416)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.4654) feature loss: tensor(0.5961)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.4686) feature loss: tensor(0.5839)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.9437) feature loss: tensor(0.6940)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.5804) feature loss: tensor(0.6374)
Global Model Acc on global data: 0.1507 length of data: 10000
-------------Round number:  5  -------------
selected users: [66, 32, 46, 28, 74, 23, 10, 20, 17, 35]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.00091
training loss: tensor(1.3365) feature loss: tensor(0.5126)
Local adapation with distilling: 0.00091
training loss: tensor(1.6337) feature loss: tensor(0.6420)
Local adapation with distilling: 0.00091
training loss: tensor(1.3488) feature loss: tensor(0.5184)
Local adapation with distilling: 0.00091
training loss: tensor(2.0061) feature loss: tensor(0.5409)
Local adapation with distilling: 0.00091
training loss: tensor(1.4040) feature loss: tensor(0.4991)
Local adapation with distilling: 0.00091
training loss: tensor(1.3495) feature loss: tensor(0.5217)
Local adapation with distilling: 0.00091
training loss: tensor(1.6780) feature loss: tensor(0.5411)
Local adapation with distilling: 0.00091
training loss: tensor(1.5346) feature loss: tensor(0.5203)
Local adapation with distilling: 0.00091
training loss: tensor(1.4565) feature loss: tensor(0.5195)
Local adapation with distilling: 0.00091
training loss: tensor(1.7147) feature loss: tensor(0.7021)
Global Model Acc on global data: 0.1589 length of data: 10000
save a model
-------------Round number:  6  -------------
selected users: [17, 34, 0, 45, 60, 86, 20, 47, 44, 81]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.000892
training loss: tensor(1.2866) feature loss: tensor(0.5683)
Local adapation with distilling: 0.000892
training loss: tensor(1.2069) feature loss: tensor(0.5384)
Local adapation with distilling: 0.000892
training loss: tensor(1.2372) feature loss: tensor(0.5477)
Local adapation with distilling: 0.000892
training loss: tensor(1.3841) feature loss: tensor(0.5942)
Local adapation with distilling: 0.000892
training loss: tensor(1.6073) feature loss: tensor(0.7435)
Local adapation with distilling: 0.000892
training loss: tensor(1.2014) feature loss: tensor(0.5293)
Local adapation with distilling: 0.000892
training loss: tensor(1.2480) feature loss: tensor(0.5622)
Local adapation with distilling: 0.000892
training loss: tensor(1.3423) feature loss: tensor(0.6301)
Local adapation with distilling: 0.000892
training loss: tensor(1.2247) feature loss: tensor(0.5677)
Local adapation with distilling: 0.000892
training loss: tensor(2.0609) feature loss: tensor(0.7770)
Global Model Acc on global data: 0.1703 length of data: 10000
save a model
-------------Round number:  7  -------------
selected users: [37, 26, 78, 91, 49, 15, 93, 71, 86, 22]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.000874
training loss: tensor(1.6483) feature loss: tensor(0.6791)
Local adapation with distilling: 0.000874
training loss: tensor(1.6091) feature loss: tensor(0.6493)
Local adapation with distilling: 0.000874
training loss: tensor(1.9407) feature loss: tensor(0.6414)
Local adapation with distilling: 0.000874
training loss: tensor(1.9724) feature loss: tensor(0.6708)
Local adapation with distilling: 0.000874
training loss: tensor(2.4260) feature loss: tensor(0.7125)
Local adapation with distilling: 0.000874
training loss: tensor(1.7154) feature loss: tensor(0.6736)
Local adapation with distilling: 0.000874
training loss: tensor(1.7019) feature loss: tensor(0.6951)
Local adapation with distilling: 0.000874
training loss: tensor(1.8570) feature loss: tensor(0.6408)
Local adapation with distilling: 0.000874
training loss: tensor(1.6091) feature loss: tensor(0.6496)
Local adapation with distilling: 0.000874
training loss: tensor(1.6805) feature loss: tensor(0.6630)
Global Model Acc on global data: 0.2002 length of data: 10000
save a model
-------------Round number:  8  -------------
selected users: [17, 23, 1, 44, 55, 99, 86, 29, 62, 33]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.000856
training loss: tensor(1.5707) feature loss: tensor(0.6390)
Local adapation with distilling: 0.000856
training loss: tensor(1.4512) feature loss: tensor(0.6185)
Local adapation with distilling: 0.000856
training loss: tensor(1.3792) feature loss: tensor(0.5339)
Local adapation with distilling: 0.000856
training loss: tensor(1.3174) feature loss: tensor(0.5321)
Local adapation with distilling: 0.000856
training loss: tensor(1.6399) feature loss: tensor(0.6414)
Local adapation with distilling: 0.000856
training loss: tensor(1.3970) feature loss: tensor(0.5323)
Local adapation with distilling: 0.000856
training loss: tensor(1.3983) feature loss: tensor(0.6072)
Local adapation with distilling: 0.000856
training loss: tensor(1.6270) feature loss: tensor(0.5751)
Local adapation with distilling: 0.000856
training loss: tensor(1.4448) feature loss: tensor(0.5691)
Local adapation with distilling: 0.000856
training loss: tensor(1.4214) feature loss: tensor(0.6342)
Global Model Acc on global data: 0.1732 length of data: 10000
-------------Round number:  9  -------------
selected users: [75, 42, 46, 68, 3, 39, 23, 20, 70, 73]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(1.2360) feature loss: tensor(0.5308)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(1.3495) feature loss: tensor(0.5416)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(1.1046) feature loss: tensor(0.4990)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(1.4914) feature loss: tensor(0.5282)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(1.1319) feature loss: tensor(0.5037)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(1.3575) feature loss: tensor(0.5661)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(1.0912) feature loss: tensor(0.5087)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(1.3796) feature loss: tensor(0.5236)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(1.5044) feature loss: tensor(0.5577)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(1.1913) feature loss: tensor(0.5271)
Global Model Acc on global data: 0.2088 length of data: 10000
save a model
-------------Round number:  10  -------------
selected users: [19, 14, 43, 37, 66, 3, 79, 41, 38, 68]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(1.4395) feature loss: tensor(0.6560)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(1.2572) feature loss: tensor(0.5503)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(1.2556) feature loss: tensor(0.5770)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(1.4432) feature loss: tensor(0.5616)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(1.1200) feature loss: tensor(0.5181)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(1.1346) feature loss: tensor(0.5043)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(1.1973) feature loss: tensor(0.5227)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(1.2795) feature loss: tensor(0.5153)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(1.2512) feature loss: tensor(0.5257)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(1.3361) feature loss: tensor(0.5244)
Global Model Acc on global data: 0.2402 length of data: 10000
save a model
-------------Round number:  11  -------------
selected users: [46, 49, 22, 58, 41, 98, 62, 29, 30, 51]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(1.0767) feature loss: tensor(0.5190)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(1.2070) feature loss: tensor(0.5498)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(1.1985) feature loss: tensor(0.5318)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(1.4171) feature loss: tensor(0.6181)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(1.7075) feature loss: tensor(0.7097)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(1.3218) feature loss: tensor(0.6327)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(1.1205) feature loss: tensor(0.5351)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(1.3843) feature loss: tensor(0.6059)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(1.2846) feature loss: tensor(0.5344)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(1.4429) feature loss: tensor(0.5744)
Global Model Acc on global data: 0.2295 length of data: 10000
-------------Round number:  12  -------------
selected users: [17, 41, 92, 14, 68, 31, 89, 15, 21, 60]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(1.6103) feature loss: tensor(0.6486)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(1.7119) feature loss: tensor(0.7694)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(1.1430) feature loss: tensor(0.5499)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(1.2060) feature loss: tensor(0.5719)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(1.3339) feature loss: tensor(0.6007)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(1.5358) feature loss: tensor(0.7096)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(1.4463) feature loss: tensor(0.6563)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(1.5334) feature loss: tensor(0.6093)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(1.5711) feature loss: tensor(0.7124)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(1.3357) feature loss: tensor(0.5914)
Global Model Acc on global data: 0.2104 length of data: 10000
-------------Round number:  13  -------------
selected users: [37, 62, 83, 14, 43, 9, 44, 31, 69, 57]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(1.5545) feature loss: tensor(0.5804)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(1.1043) feature loss: tensor(0.4869)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(1.0863) feature loss: tensor(0.5098)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(1.1346) feature loss: tensor(0.5067)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(1.1016) feature loss: tensor(0.4889)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(1.3548) feature loss: tensor(0.5573)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(1.1314) feature loss: tensor(0.5053)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(1.1866) feature loss: tensor(0.4970)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(1.2297) feature loss: tensor(0.5473)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(1.5782) feature loss: tensor(0.6101)
Global Model Acc on global data: 0.2214 length of data: 10000
-------------Round number:  14  -------------
selected users: [24, 39, 35, 44, 55, 70, 82, 40, 91, 65]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.000748
training loss: tensor(1.0813) feature loss: tensor(0.5664)
Local adapation with distilling: 0.000748
training loss: tensor(1.4289) feature loss: tensor(0.6610)
Local adapation with distilling: 0.000748
training loss: tensor(1.3958) feature loss: tensor(0.6053)
Local adapation with distilling: 0.000748
training loss: tensor(1.0631) feature loss: tensor(0.5064)
Local adapation with distilling: 0.000748
training loss: tensor(1.3592) feature loss: tensor(0.6265)
Local adapation with distilling: 0.000748
training loss: tensor(1.3485) feature loss: tensor(0.5181)
Local adapation with distilling: 0.000748
training loss: tensor(1.0040) feature loss: tensor(0.4986)
Local adapation with distilling: 0.000748
training loss: tensor(1.2600) feature loss: tensor(0.5118)
Local adapation with distilling: 0.000748
training loss: tensor(1.3392) feature loss: tensor(0.6217)
Local adapation with distilling: 0.000748
training loss: tensor(1.3803) feature loss: tensor(0.5488)
Global Model Acc on global data: 0.2486 length of data: 10000
save a model
-------------Round number:  15  -------------
selected users: [84, 36, 57, 51, 46, 78, 93, 14, 11, 59]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.00073
training loss: tensor(1.0738) feature loss: tensor(0.5187)
Local adapation with distilling: 0.00073
training loss: tensor(1.6729) feature loss: tensor(0.6213)
Local adapation with distilling: 0.00073
training loss: tensor(1.5115) feature loss: tensor(0.7038)
Local adapation with distilling: 0.00073
training loss: tensor(1.4653) feature loss: tensor(0.6564)
Local adapation with distilling: 0.00073
training loss: tensor(1.5841) feature loss: tensor(0.6653)
Local adapation with distilling: 0.00073
training loss: tensor(1.2542) feature loss: tensor(0.5360)
Local adapation with distilling: 0.00073
training loss: tensor(1.3271) feature loss: tensor(0.6112)
Local adapation with distilling: 0.00073
training loss: tensor(1.0962) feature loss: tensor(0.5251)
Local adapation with distilling: 0.00073
training loss: tensor(1.5370) feature loss: tensor(0.7034)
Local adapation with distilling: 0.00073
training loss: tensor(1.2391) feature loss: tensor(0.5584)
Global Model Acc on global data: 0.2678 length of data: 10000
save a model
-------------Round number:  16  -------------
selected users: [7, 25, 71, 42, 47, 29, 63, 88, 50, 9]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.000712
training loss: tensor(1.4137) feature loss: tensor(0.6260)
Local adapation with distilling: 0.000712
training loss: tensor(1.2761) feature loss: tensor(0.5513)
Local adapation with distilling: 0.000712
training loss: tensor(1.5023) feature loss: tensor(0.5726)
Local adapation with distilling: 0.000712
training loss: tensor(1.3539) feature loss: tensor(0.5877)
Local adapation with distilling: 0.000712
training loss: tensor(1.3541) feature loss: tensor(0.5774)
Local adapation with distilling: 0.000712
training loss: tensor(1.4046) feature loss: tensor(0.6727)
Local adapation with distilling: 0.000712
training loss: tensor(1.3460) feature loss: tensor(0.5343)
Local adapation with distilling: 0.000712
training loss: tensor(1.5235) feature loss: tensor(0.5531)
Local adapation with distilling: 0.000712
training loss: tensor(1.6572) feature loss: tensor(0.6331)
Local adapation with distilling: 0.000712
training loss: tensor(1.2338) feature loss: tensor(0.6018)
Global Model Acc on global data: 0.3193 length of data: 10000
save a model
-------------Round number:  17  -------------
selected users: [71, 28, 9, 4, 73, 34, 94, 92, 47, 37]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.000694
training loss: tensor(1.3404) feature loss: tensor(0.5842)
Local adapation with distilling: 0.000694
training loss: tensor(1.5499) feature loss: tensor(0.5248)
Local adapation with distilling: 0.000694
training loss: tensor(1.3475) feature loss: tensor(0.5111)
Local adapation with distilling: 0.000694
training loss: tensor(1.0739) feature loss: tensor(0.5526)
Local adapation with distilling: 0.000694
training loss: tensor(1.2867) feature loss: tensor(0.5581)
Local adapation with distilling: 0.000694
training loss: tensor(1.0151) feature loss: tensor(0.4048)
Local adapation with distilling: 0.000694
training loss: tensor(1.0523) feature loss: tensor(0.5360)
Local adapation with distilling: 0.000694
training loss: tensor(1.1726) feature loss: tensor(0.4143)
Local adapation with distilling: 0.000694
training loss: tensor(1.1597) feature loss: tensor(0.4656)
Local adapation with distilling: 0.000694
training loss: tensor(1.3016) feature loss: tensor(0.5612)
Global Model Acc on global data: 0.2743 length of data: 10000
-------------Round number:  18  -------------
selected users: [53, 47, 43, 54, 33, 48, 0, 12, 44, 91]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(1.0853) feature loss: tensor(0.5779)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(1.2015) feature loss: tensor(0.4674)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(1.0388) feature loss: tensor(0.4480)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(1.0554) feature loss: tensor(0.4374)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(1.1467) feature loss: tensor(0.5387)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(1.3183) feature loss: tensor(0.4411)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(1.4895) feature loss: tensor(0.5700)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(1.1041) feature loss: tensor(0.4414)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(1.0174) feature loss: tensor(0.4499)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(1.1120) feature loss: tensor(0.4547)
Global Model Acc on global data: 0.2804 length of data: 10000
-------------Round number:  19  -------------
selected users: [85, 72, 16, 18, 2, 38, 90, 30, 83, 61]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(1.3491) feature loss: tensor(0.5186)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(1.1986) feature loss: tensor(0.5402)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(1.6134) feature loss: tensor(0.5172)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(1.4149) feature loss: tensor(0.5253)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(1.2539) feature loss: tensor(0.5558)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(1.3021) feature loss: tensor(0.5630)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(1.5235) feature loss: tensor(0.7170)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(1.4436) feature loss: tensor(0.6018)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(1.2419) feature loss: tensor(0.5881)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(1.2290) feature loss: tensor(0.5443)
Global Model Acc on global data: 0.3016 length of data: 10000
-------------Round number:  20  -------------
selected users: [70, 74, 2, 44, 56, 48, 12, 36, 0, 49]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.00064
training loss: tensor(1.4460) feature loss: tensor(0.6241)
Local adapation with distilling: 0.00064
training loss: tensor(1.1165) feature loss: tensor(0.5081)
Local adapation with distilling: 0.00064
training loss: tensor(1.1974) feature loss: tensor(0.5602)
Local adapation with distilling: 0.00064
training loss: tensor(1.1012) feature loss: tensor(0.5079)
Local adapation with distilling: 0.00064
training loss: tensor(1.3649) feature loss: tensor(0.6199)
Local adapation with distilling: 0.00064
training loss: tensor(1.4526) feature loss: tensor(0.6665)
Local adapation with distilling: 0.00064
training loss: tensor(1.1602) feature loss: tensor(0.5175)
Local adapation with distilling: 0.00064
training loss: tensor(1.3032) feature loss: tensor(0.5285)
Local adapation with distilling: 0.00064
training loss: tensor(1.4920) feature loss: tensor(0.6859)
Local adapation with distilling: 0.00064
training loss: tensor(1.4452) feature loss: tensor(0.6462)
Global Model Acc on global data: 0.2868 length of data: 10000
-------------Round number:  21  -------------
selected users: [23, 81, 85, 34, 62, 46, 42, 31, 93, 11]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(1.2137) feature loss: tensor(0.5516)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(1.5225) feature loss: tensor(0.6194)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(1.5416) feature loss: tensor(0.5625)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(1.3086) feature loss: tensor(0.5311)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(1.1972) feature loss: tensor(0.4834)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(1.2778) feature loss: tensor(0.5586)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(1.1194) feature loss: tensor(0.4640)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(1.5529) feature loss: tensor(0.6739)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(1.3306) feature loss: tensor(0.6386)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(1.4330) feature loss: tensor(0.5880)
Global Model Acc on global data: 0.2891 length of data: 10000
-------------Round number:  22  -------------
selected users: [2, 49, 82, 31, 37, 12, 87, 42, 99, 85]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.9911) feature loss: tensor(0.4692)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(1.4139) feature loss: tensor(0.5542)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(1.0237) feature loss: tensor(0.4972)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(1.2360) feature loss: tensor(0.5581)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(1.3909) feature loss: tensor(0.6122)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.9964) feature loss: tensor(0.4982)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(1.3561) feature loss: tensor(0.5620)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.9802) feature loss: tensor(0.4810)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(1.3858) feature loss: tensor(0.5867)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(1.2286) feature loss: tensor(0.5391)
Global Model Acc on global data: 0.2599 length of data: 10000
-------------Round number:  23  -------------
selected users: [26, 80, 82, 68, 77, 37, 3, 55, 20, 17]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.000586
training loss: tensor(1.3596) feature loss: tensor(0.5954)
Local adapation with distilling: 0.000586
training loss: tensor(1.4863) feature loss: tensor(0.5829)
Local adapation with distilling: 0.000586
training loss: tensor(1.1097) feature loss: tensor(0.4810)
Local adapation with distilling: 0.000586
training loss: tensor(1.4204) feature loss: tensor(0.5704)
Local adapation with distilling: 0.000586
training loss: tensor(1.1414) feature loss: tensor(0.5218)
Local adapation with distilling: 0.000586
training loss: tensor(1.2547) feature loss: tensor(0.5382)
Local adapation with distilling: 0.000586
training loss: tensor(1.1424) feature loss: tensor(0.5503)
Local adapation with distilling: 0.000586
training loss: tensor(1.3280) feature loss: tensor(0.5020)
Local adapation with distilling: 0.000586
training loss: tensor(1.4024) feature loss: tensor(0.5433)
Local adapation with distilling: 0.000586
training loss: tensor(1.1736) feature loss: tensor(0.5280)
Global Model Acc on global data: 0.3245 length of data: 10000
save a model
-------------Round number:  24  -------------
selected users: [26, 31, 37, 86, 76, 14, 88, 48, 71, 67]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.000568
training loss: tensor(1.2165) feature loss: tensor(0.6088)
Local adapation with distilling: 0.000568
training loss: tensor(1.1896) feature loss: tensor(0.5755)
Local adapation with distilling: 0.000568
training loss: tensor(1.2943) feature loss: tensor(0.6872)
Local adapation with distilling: 0.000568
training loss: tensor(1.2742) feature loss: tensor(0.5669)
Local adapation with distilling: 0.000568
training loss: tensor(1.2227) feature loss: tensor(0.5606)
Local adapation with distilling: 0.000568
training loss: tensor(1.1337) feature loss: tensor(0.4773)
Local adapation with distilling: 0.000568
training loss: tensor(1.3830) feature loss: tensor(0.6418)
Local adapation with distilling: 0.000568
training loss: tensor(1.1214) feature loss: tensor(0.4616)
Local adapation with distilling: 0.000568
training loss: tensor(1.2747) feature loss: tensor(0.6505)
Local adapation with distilling: 0.000568
training loss: tensor(1.1739) feature loss: tensor(0.6022)
Global Model Acc on global data: 0.3584 length of data: 10000
save a model
-------------Round number:  25  -------------
selected users: [41, 29, 33, 65, 74, 6, 57, 89, 87, 98]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.00055
training loss: tensor(1.1639) feature loss: tensor(0.5162)
Local adapation with distilling: 0.00055
training loss: tensor(1.3306) feature loss: tensor(0.5306)
Local adapation with distilling: 0.00055
training loss: tensor(1.0486) feature loss: tensor(0.4621)
Local adapation with distilling: 0.00055
training loss: tensor(1.3418) feature loss: tensor(0.6206)
Local adapation with distilling: 0.00055
training loss: tensor(1.0364) feature loss: tensor(0.4163)
Local adapation with distilling: 0.00055
training loss: tensor(1.1273) feature loss: tensor(0.5472)
Local adapation with distilling: 0.00055
training loss: tensor(1.1428) feature loss: tensor(0.5711)
Local adapation with distilling: 0.00055
training loss: tensor(1.3447) feature loss: tensor(0.5170)
Local adapation with distilling: 0.00055
training loss: tensor(1.1551) feature loss: tensor(0.5283)
Local adapation with distilling: 0.00055
training loss: tensor(1.2263) feature loss: tensor(0.4512)
Global Model Acc on global data: 0.4023 length of data: 10000
save a model
-------------Round number:  26  -------------
selected users: [8, 69, 84, 41, 25, 5, 63, 95, 33, 70]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.000532
training loss: tensor(0.9624) feature loss: tensor(0.4077)
Local adapation with distilling: 0.000532
training loss: tensor(0.9768) feature loss: tensor(0.4942)
Local adapation with distilling: 0.000532
training loss: tensor(0.9562) feature loss: tensor(0.4031)
Local adapation with distilling: 0.000532
training loss: tensor(1.2309) feature loss: tensor(0.6187)
Local adapation with distilling: 0.000532
training loss: tensor(1.0528) feature loss: tensor(0.5061)
Local adapation with distilling: 0.000532
training loss: tensor(1.0566) feature loss: tensor(0.4960)
Local adapation with distilling: 0.000532
training loss: tensor(1.0334) feature loss: tensor(0.4275)
Local adapation with distilling: 0.000532
training loss: tensor(1.1823) feature loss: tensor(0.6934)
Local adapation with distilling: 0.000532
training loss: tensor(0.9325) feature loss: tensor(0.4253)
Local adapation with distilling: 0.000532
training loss: tensor(1.2017) feature loss: tensor(0.4690)
Global Model Acc on global data: 0.4131 length of data: 10000
save a model
-------------Round number:  27  -------------
selected users: [89, 68, 43, 50, 40, 95, 27, 85, 22, 44]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.000514
training loss: tensor(1.0780) feature loss: tensor(0.4118)
Local adapation with distilling: 0.000514
training loss: tensor(1.0895) feature loss: tensor(0.4919)
Local adapation with distilling: 0.000514
training loss: tensor(0.8801) feature loss: tensor(0.3369)
Local adapation with distilling: 0.000514
training loss: tensor(1.1559) feature loss: tensor(0.5608)
Local adapation with distilling: 0.000514
training loss: tensor(1.0667) feature loss: tensor(0.4657)
Local adapation with distilling: 0.000514
training loss: tensor(0.9741) feature loss: tensor(0.4938)
Local adapation with distilling: 0.000514
training loss: tensor(0.8934) feature loss: tensor(0.3755)
Local adapation with distilling: 0.000514
training loss: tensor(0.8980) feature loss: tensor(0.3985)
Local adapation with distilling: 0.000514
training loss: tensor(1.0955) feature loss: tensor(0.4094)
Local adapation with distilling: 0.000514
training loss: tensor(0.9995) feature loss: tensor(0.4274)
Global Model Acc on global data: 0.3877 length of data: 10000
-------------Round number:  28  -------------
selected users: [67, 14, 0, 86, 13, 18, 30, 36, 52, 95]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.000496
training loss: tensor(0.9071) feature loss: tensor(0.3490)
Local adapation with distilling: 0.000496
training loss: tensor(1.0253) feature loss: tensor(0.3654)
Local adapation with distilling: 0.000496
training loss: tensor(0.9203) feature loss: tensor(0.3478)
Local adapation with distilling: 0.000496
training loss: tensor(1.0589) feature loss: tensor(0.4323)
Local adapation with distilling: 0.000496
training loss: tensor(0.9073) feature loss: tensor(0.3514)
Local adapation with distilling: 0.000496
training loss: tensor(0.8696) feature loss: tensor(0.3831)
Local adapation with distilling: 0.000496
training loss: tensor(1.0642) feature loss: tensor(0.4358)
Local adapation with distilling: 0.000496
training loss: tensor(1.0606) feature loss: tensor(0.3967)
Local adapation with distilling: 0.000496
training loss: tensor(1.1486) feature loss: tensor(0.4523)
Local adapation with distilling: 0.000496
training loss: tensor(0.9962) feature loss: tensor(0.3842)
Global Model Acc on global data: 0.3958 length of data: 10000
-------------Round number:  29  -------------
selected users: [73, 8, 10, 7, 19, 71, 92, 25, 38, 12]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.8829) feature loss: tensor(0.4362)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.9669) feature loss: tensor(0.3892)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(1.0724) feature loss: tensor(0.4948)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(1.0968) feature loss: tensor(0.4817)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(1.2332) feature loss: tensor(0.5162)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(1.3728) feature loss: tensor(0.6176)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(1.0568) feature loss: tensor(0.4642)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.9410) feature loss: tensor(0.4310)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(1.0246) feature loss: tensor(0.3630)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(1.0858) feature loss: tensor(0.4406)
Global Model Acc on global data: 0.4076 length of data: 10000
-------------Round number:  30  -------------
selected users: [20, 91, 34, 52, 8, 74, 21, 88, 80, 89]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.9145) feature loss: tensor(0.4596)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(1.1404) feature loss: tensor(0.6188)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.8621) feature loss: tensor(0.3609)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.9445) feature loss: tensor(0.3757)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.8648) feature loss: tensor(0.4165)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(1.0478) feature loss: tensor(0.4728)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(1.1003) feature loss: tensor(0.4538)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.8807) feature loss: tensor(0.4202)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(1.0400) feature loss: tensor(0.5118)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(1.0638) feature loss: tensor(0.4832)
Global Model Acc on global data: 0.3994 length of data: 10000
-------------Round number:  31  -------------
selected users: [17, 33, 76, 3, 56, 0, 37, 8, 60, 67]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.9232) feature loss: tensor(0.4579)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.9202) feature loss: tensor(0.4451)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(1.0588) feature loss: tensor(0.5434)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.8114) feature loss: tensor(0.3697)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.9399) feature loss: tensor(0.4300)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.9972) feature loss: tensor(0.4977)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.9304) feature loss: tensor(0.3866)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.7923) feature loss: tensor(0.3914)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.8952) feature loss: tensor(0.4567)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(1.0078) feature loss: tensor(0.5545)
Global Model Acc on global data: 0.4099 length of data: 10000
-------------Round number:  32  -------------
selected users: [22, 39, 85, 97, 55, 33, 80, 13, 27, 96]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(1.0243) feature loss: tensor(0.3869)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(1.0121) feature loss: tensor(0.3796)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.9929) feature loss: tensor(0.3892)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.9443) feature loss: tensor(0.4077)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(1.0844) feature loss: tensor(0.5330)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.8130) feature loss: tensor(0.3805)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(1.0453) feature loss: tensor(0.4533)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.8862) feature loss: tensor(0.3324)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.9481) feature loss: tensor(0.4130)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.9505) feature loss: tensor(0.4138)
Global Model Acc on global data: 0.4012 length of data: 10000
-------------Round number:  33  -------------
selected users: [56, 90, 95, 82, 60, 71, 6, 81, 2, 70]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.7750) feature loss: tensor(0.3521)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.9383) feature loss: tensor(0.4130)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.9535) feature loss: tensor(0.4454)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(1.0484) feature loss: tensor(0.4920)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.8643) feature loss: tensor(0.3680)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(1.1594) feature loss: tensor(0.5274)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.8174) feature loss: tensor(0.3859)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(1.1698) feature loss: tensor(0.5121)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.9071) feature loss: tensor(0.3666)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.8484) feature loss: tensor(0.3971)
Global Model Acc on global data: 0.3929 length of data: 10000
-------------Round number:  34  -------------
selected users: [14, 74, 15, 4, 32, 59, 91, 10, 50, 53]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.000388
training loss: tensor(1.0395) feature loss: tensor(0.4812)
Local adapation with distilling: 0.000388
training loss: tensor(1.0440) feature loss: tensor(0.4462)
Local adapation with distilling: 0.000388
training loss: tensor(0.9830) feature loss: tensor(0.3888)
Local adapation with distilling: 0.000388
training loss: tensor(1.1107) feature loss: tensor(0.4453)
Local adapation with distilling: 0.000388
training loss: tensor(1.0332) feature loss: tensor(0.3950)
Local adapation with distilling: 0.000388
training loss: tensor(1.1419) feature loss: tensor(0.4414)
Local adapation with distilling: 0.000388
training loss: tensor(1.2295) feature loss: tensor(0.4407)
Local adapation with distilling: 0.000388
training loss: tensor(0.9286) feature loss: tensor(0.4320)
Local adapation with distilling: 0.000388
training loss: tensor(1.0778) feature loss: tensor(0.5104)
Local adapation with distilling: 0.000388
training loss: tensor(0.8957) feature loss: tensor(0.4007)
Global Model Acc on global data: 0.4155 length of data: 10000
save a model
-------------Round number:  35  -------------
selected users: [40, 71, 98, 27, 70, 31, 10, 24, 51, 35]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.00037
training loss: tensor(0.8236) feature loss: tensor(0.3566)
Local adapation with distilling: 0.00037
training loss: tensor(1.0470) feature loss: tensor(0.5761)
Local adapation with distilling: 0.00037
training loss: tensor(0.9788) feature loss: tensor(0.4373)
Local adapation with distilling: 0.00037
training loss: tensor(0.8556) feature loss: tensor(0.2988)
Local adapation with distilling: 0.00037
training loss: tensor(0.7621) feature loss: tensor(0.3587)
Local adapation with distilling: 0.00037
training loss: tensor(0.8844) feature loss: tensor(0.4056)
Local adapation with distilling: 0.00037
training loss: tensor(0.9198) feature loss: tensor(0.4232)
Local adapation with distilling: 0.00037
training loss: tensor(0.7939) feature loss: tensor(0.3210)
Local adapation with distilling: 0.00037
training loss: tensor(0.9419) feature loss: tensor(0.3410)
Local adapation with distilling: 0.00037
training loss: tensor(0.9643) feature loss: tensor(0.3279)
Global Model Acc on global data: 0.39 length of data: 10000
-------------Round number:  36  -------------
selected users: [59, 42, 2, 27, 28, 75, 58, 68, 52, 74]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(1.1595) feature loss: tensor(0.4611)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.9797) feature loss: tensor(0.4076)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.9410) feature loss: tensor(0.5439)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.9004) feature loss: tensor(0.3544)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.9716) feature loss: tensor(0.3888)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.9889) feature loss: tensor(0.4420)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.9953) feature loss: tensor(0.5191)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(1.0755) feature loss: tensor(0.4951)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.9805) feature loss: tensor(0.4390)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.9168) feature loss: tensor(0.4179)
Global Model Acc on global data: 0.4108 length of data: 10000
-------------Round number:  37  -------------
selected users: [61, 49, 86, 78, 5, 91, 81, 82, 89, 18]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.9175) feature loss: tensor(0.3983)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.9414) feature loss: tensor(0.3368)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.9287) feature loss: tensor(0.3148)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.8116) feature loss: tensor(0.3507)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.9628) feature loss: tensor(0.4575)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.9503) feature loss: tensor(0.3960)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(1.0188) feature loss: tensor(0.5007)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.8945) feature loss: tensor(0.3715)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(1.1541) feature loss: tensor(0.5585)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.9028) feature loss: tensor(0.4079)
Global Model Acc on global data: 0.406 length of data: 10000
-------------Round number:  38  -------------
selected users: [40, 73, 49, 45, 64, 16, 69, 17, 72, 66]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(1.0168) feature loss: tensor(0.3720)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(1.1397) feature loss: tensor(0.4515)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(1.1036) feature loss: tensor(0.5097)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(1.1179) feature loss: tensor(0.4817)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(1.1618) feature loss: tensor(0.5391)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(1.1298) feature loss: tensor(0.5472)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(1.0949) feature loss: tensor(0.4548)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.8319) feature loss: tensor(0.3331)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(1.0207) feature loss: tensor(0.4112)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.9886) feature loss: tensor(0.3460)
Global Model Acc on global data: 0.4407 length of data: 10000
save a model
-------------Round number:  39  -------------
selected users: [22, 53, 84, 57, 87, 58, 29, 21, 85, 79]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.8378) feature loss: tensor(0.3141)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.8513) feature loss: tensor(0.3148)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.9154) feature loss: tensor(0.3175)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.8660) feature loss: tensor(0.3221)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.8721) feature loss: tensor(0.3820)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.7916) feature loss: tensor(0.2938)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.9429) feature loss: tensor(0.3867)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.8907) feature loss: tensor(0.3027)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(1.0628) feature loss: tensor(0.4886)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.8892) feature loss: tensor(0.3364)
Global Model Acc on global data: 0.4523 length of data: 10000
save a model
-------------Round number:  40  -------------
selected users: [79, 75, 63, 15, 38, 11, 40, 45, 39, 62]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.7608) feature loss: tensor(0.2851)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.7332) feature loss: tensor(0.3498)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.8328) feature loss: tensor(0.3406)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.8241) feature loss: tensor(0.3290)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.8993) feature loss: tensor(0.3134)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(1.0328) feature loss: tensor(0.4713)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.9532) feature loss: tensor(0.4303)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.7524) feature loss: tensor(0.2817)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.8301) feature loss: tensor(0.3346)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.8307) feature loss: tensor(0.3198)
Global Model Acc on global data: 0.4244 length of data: 10000
-------------Round number:  41  -------------
selected users: [42, 94, 37, 6, 79, 32, 24, 0, 33, 93]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.000262
training loss: tensor(0.9712) feature loss: tensor(0.3901)
Local adapation with distilling: 0.000262
training loss: tensor(1.0164) feature loss: tensor(0.3580)
Local adapation with distilling: 0.000262
training loss: tensor(1.1476) feature loss: tensor(0.5559)
Local adapation with distilling: 0.000262
training loss: tensor(0.9551) feature loss: tensor(0.3383)
Local adapation with distilling: 0.000262
training loss: tensor(0.9055) feature loss: tensor(0.4056)
Local adapation with distilling: 0.000262
training loss: tensor(0.9828) feature loss: tensor(0.3512)
Local adapation with distilling: 0.000262
training loss: tensor(1.0556) feature loss: tensor(0.4847)
Local adapation with distilling: 0.000262
training loss: tensor(0.9636) feature loss: tensor(0.3969)
Local adapation with distilling: 0.000262
training loss: tensor(0.9051) feature loss: tensor(0.3710)
Local adapation with distilling: 0.000262
training loss: tensor(0.9941) feature loss: tensor(0.3942)
Global Model Acc on global data: 0.4335 length of data: 10000
-------------Round number:  42  -------------
selected users: [83, 53, 70, 45, 44, 39, 22, 80, 10, 0]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.8957) feature loss: tensor(0.2986)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.7537) feature loss: tensor(0.2802)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.8751) feature loss: tensor(0.4306)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.8275) feature loss: tensor(0.2927)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.9088) feature loss: tensor(0.3751)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.8978) feature loss: tensor(0.2948)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.9076) feature loss: tensor(0.3127)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.7794) feature loss: tensor(0.3414)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.7616) feature loss: tensor(0.3483)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.7657) feature loss: tensor(0.3234)
Global Model Acc on global data: 0.3692 length of data: 10000
-------------Round number:  43  -------------
selected users: [20, 2, 15, 22, 57, 91, 69, 55, 11, 79]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.8129) feature loss: tensor(0.4281)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.8635) feature loss: tensor(0.3326)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.9925) feature loss: tensor(0.4601)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.8705) feature loss: tensor(0.3369)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.9939) feature loss: tensor(0.3608)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(1.0141) feature loss: tensor(0.3419)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.7814) feature loss: tensor(0.2975)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(1.0156) feature loss: tensor(0.4238)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(1.1108) feature loss: tensor(0.5165)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.7277) feature loss: tensor(0.3086)
Global Model Acc on global data: 0.386 length of data: 10000
-------------Round number:  44  -------------
selected users: [42, 54, 27, 93, 39, 65, 7, 26, 24, 60]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.9396) feature loss: tensor(0.3486)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.9227) feature loss: tensor(0.3036)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.9432) feature loss: tensor(0.4296)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.9241) feature loss: tensor(0.3030)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.8694) feature loss: tensor(0.2873)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.9092) feature loss: tensor(0.3389)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.8965) feature loss: tensor(0.3677)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(1.1146) feature loss: tensor(0.3950)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.8783) feature loss: tensor(0.2902)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.8246) feature loss: tensor(0.3491)
Global Model Acc on global data: 0.4085 length of data: 10000
-------------Round number:  45  -------------
selected users: [0, 1, 62, 76, 37, 99, 78, 38, 2, 84]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.7989) feature loss: tensor(0.3115)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(1.0896) feature loss: tensor(0.3468)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.8923) feature loss: tensor(0.3287)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(1.1560) feature loss: tensor(0.4267)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.9079) feature loss: tensor(0.3523)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(1.0708) feature loss: tensor(0.3661)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.9564) feature loss: tensor(0.3399)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(1.1309) feature loss: tensor(0.4038)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.9286) feature loss: tensor(0.3294)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.9777) feature loss: tensor(0.3391)
Global Model Acc on global data: 0.4489 length of data: 10000
-------------Round number:  46  -------------
selected users: [71, 33, 37, 10, 44, 34, 24, 98, 73, 95]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(1.1618) feature loss: tensor(0.4945)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.7950) feature loss: tensor(0.3024)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.7940) feature loss: tensor(0.3019)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.7323) feature loss: tensor(0.3035)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.9011) feature loss: tensor(0.4437)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.8346) feature loss: tensor(0.3669)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.8846) feature loss: tensor(0.3586)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.7716) feature loss: tensor(0.3026)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.9581) feature loss: tensor(0.3062)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.8158) feature loss: tensor(0.2982)
Global Model Acc on global data: 0.4653 length of data: 10000
save a model
-------------Round number:  47  -------------
selected users: [17, 90, 94, 86, 63, 5, 38, 14, 40, 47]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.7661) feature loss: tensor(0.2750)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.7838) feature loss: tensor(0.2852)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.7240) feature loss: tensor(0.2604)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.8258) feature loss: tensor(0.2298)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.7384) feature loss: tensor(0.2330)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.8257) feature loss: tensor(0.2301)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.6922) feature loss: tensor(0.2643)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.6955) feature loss: tensor(0.2345)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.6605) feature loss: tensor(0.2321)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.8106) feature loss: tensor(0.2270)
Global Model Acc on global data: 0.4367 length of data: 10000
-------------Round number:  48  -------------
selected users: [93, 5, 71, 9, 11, 79, 69, 8, 59, 63]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.8395) feature loss: tensor(0.3252)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.8038) feature loss: tensor(0.3092)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(1.2375) feature loss: tensor(0.5330)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.9813) feature loss: tensor(0.3372)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(1.2064) feature loss: tensor(0.5086)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.9664) feature loss: tensor(0.3692)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.9889) feature loss: tensor(0.3345)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.8833) feature loss: tensor(0.3180)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(1.0625) feature loss: tensor(0.4458)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.8220) feature loss: tensor(0.3244)
Global Model Acc on global data: 0.446 length of data: 10000
-------------Round number:  49  -------------
selected users: [76, 25, 28, 75, 81, 47, 41, 22, 29, 1]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(1.1119) feature loss: tensor(0.2942)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.7645) feature loss: tensor(0.2838)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.8391) feature loss: tensor(0.2707)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.7533) feature loss: tensor(0.2875)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(1.0893) feature loss: tensor(0.5347)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.9421) feature loss: tensor(0.3669)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(1.1203) feature loss: tensor(0.4218)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(1.2418) feature loss: tensor(0.3735)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.8054) feature loss: tensor(0.2836)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.9768) feature loss: tensor(0.3310)
Global Model Acc on global data: 0.4494 length of data: 10000
-------------Round number:  50  -------------
selected users: [80, 79, 25, 15, 39, 40, 53, 17, 57, 50]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.8458) feature loss: tensor(0.2813)
Local adapation with distilling: 0.0001
training loss: tensor(0.7786) feature loss: tensor(0.2814)
Local adapation with distilling: 0.0001
training loss: tensor(0.6944) feature loss: tensor(0.2779)
Local adapation with distilling: 0.0001
training loss: tensor(0.7571) feature loss: tensor(0.2808)
Local adapation with distilling: 0.0001
training loss: tensor(0.8209) feature loss: tensor(0.2836)
Local adapation with distilling: 0.0001
training loss: tensor(0.7715) feature loss: tensor(0.2797)
Local adapation with distilling: 0.0001
training loss: tensor(0.7886) feature loss: tensor(0.2757)
Local adapation with distilling: 0.0001
training loss: tensor(0.7274) feature loss: tensor(0.2878)
Local adapation with distilling: 0.0001
training loss: tensor(0.8847) feature loss: tensor(0.3334)
Local adapation with distilling: 0.0001
training loss: tensor(0.8130) feature loss: tensor(0.2872)
Global Model Acc on global data: 0.4091 length of data: 10000
-------------Round number:  51  -------------
selected users: [71, 43, 11, 83, 78, 19, 80, 4, 79, 75]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.9205) feature loss: tensor(0.2710)
Local adapation with distilling: 0.0001
training loss: tensor(0.8748) feature loss: tensor(0.3060)
Local adapation with distilling: 0.0001
training loss: tensor(0.9320) feature loss: tensor(0.2809)
Local adapation with distilling: 0.0001
training loss: tensor(0.8303) feature loss: tensor(0.2926)
Local adapation with distilling: 0.0001
training loss: tensor(0.9156) feature loss: tensor(0.2641)
Local adapation with distilling: 0.0001
training loss: tensor(0.8439) feature loss: tensor(0.2708)
Local adapation with distilling: 0.0001
training loss: tensor(0.6934) feature loss: tensor(0.2567)
Local adapation with distilling: 0.0001
training loss: tensor(1.0003) feature loss: tensor(0.2612)
Local adapation with distilling: 0.0001
training loss: tensor(0.8168) feature loss: tensor(0.2689)
Local adapation with distilling: 0.0001
training loss: tensor(0.7410) feature loss: tensor(0.2665)
Global Model Acc on global data: 0.4424 length of data: 10000
-------------Round number:  52  -------------
selected users: [82, 8, 44, 19, 2, 73, 37, 89, 67, 18]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(1.0854) feature loss: tensor(0.3389)
Local adapation with distilling: 0.0001
training loss: tensor(0.7721) feature loss: tensor(0.2718)
Local adapation with distilling: 0.0001
training loss: tensor(0.8023) feature loss: tensor(0.2713)
Local adapation with distilling: 0.0001
training loss: tensor(0.8889) feature loss: tensor(0.3301)
Local adapation with distilling: 0.0001
training loss: tensor(1.0473) feature loss: tensor(0.3263)
Local adapation with distilling: 0.0001
training loss: tensor(0.8153) feature loss: tensor(0.3081)
Local adapation with distilling: 0.0001
training loss: tensor(0.8122) feature loss: tensor(0.2800)
Local adapation with distilling: 0.0001
training loss: tensor(0.8220) feature loss: tensor(0.3049)
Local adapation with distilling: 0.0001
training loss: tensor(0.9564) feature loss: tensor(0.3645)
Local adapation with distilling: 0.0001
training loss: tensor(0.7251) feature loss: tensor(0.2769)
Global Model Acc on global data: 0.4291 length of data: 10000
-------------Round number:  53  -------------
selected users: [19, 78, 64, 3, 71, 32, 68, 42, 55, 97]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.8345) feature loss: tensor(0.2376)
Local adapation with distilling: 0.0001
training loss: tensor(0.6906) feature loss: tensor(0.2247)
Local adapation with distilling: 0.0001
training loss: tensor(0.7604) feature loss: tensor(0.2231)
Local adapation with distilling: 0.0001
training loss: tensor(0.7023) feature loss: tensor(0.2197)
Local adapation with distilling: 0.0001
training loss: tensor(0.8960) feature loss: tensor(0.2294)
Local adapation with distilling: 0.0001
training loss: tensor(0.9475) feature loss: tensor(0.3691)
Local adapation with distilling: 0.0001
training loss: tensor(0.6824) feature loss: tensor(0.2213)
Local adapation with distilling: 0.0001
training loss: tensor(0.8457) feature loss: tensor(0.2722)
Local adapation with distilling: 0.0001
training loss: tensor(0.8809) feature loss: tensor(0.2569)
Local adapation with distilling: 0.0001
training loss: tensor(0.6919) feature loss: tensor(0.2238)
Global Model Acc on global data: 0.4094 length of data: 10000
-------------Round number:  54  -------------
selected users: [36, 70, 48, 94, 81, 46, 38, 29, 34, 22]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(1.0857) feature loss: tensor(0.3358)
Local adapation with distilling: 0.0001
training loss: tensor(0.8532) feature loss: tensor(0.2749)
Local adapation with distilling: 0.0001
training loss: tensor(0.7587) feature loss: tensor(0.2725)
Local adapation with distilling: 0.0001
training loss: tensor(0.8243) feature loss: tensor(0.2785)
Local adapation with distilling: 0.0001
training loss: tensor(1.0057) feature loss: tensor(0.3083)
Local adapation with distilling: 0.0001
training loss: tensor(1.0957) feature loss: tensor(0.2884)
Local adapation with distilling: 0.0001
training loss: tensor(0.7168) feature loss: tensor(0.2732)
Local adapation with distilling: 0.0001
training loss: tensor(0.8251) feature loss: tensor(0.2847)
Local adapation with distilling: 0.0001
training loss: tensor(0.7993) feature loss: tensor(0.2715)
Local adapation with distilling: 0.0001
training loss: tensor(1.0041) feature loss: tensor(0.2926)
Global Model Acc on global data: 0.4122 length of data: 10000
-------------Round number:  55  -------------
selected users: [28, 92, 98, 95, 84, 34, 38, 76, 17, 78]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.5376) feature loss: tensor(0.2089)
Local adapation with distilling: 0.0001
training loss: tensor(0.7701) feature loss: tensor(0.2374)
Local adapation with distilling: 0.0001
training loss: tensor(0.5356) feature loss: tensor(0.2087)
Local adapation with distilling: 0.0001
training loss: tensor(0.6415) feature loss: tensor(0.2105)
Local adapation with distilling: 0.0001
training loss: tensor(0.6393) feature loss: tensor(0.2112)
Local adapation with distilling: 0.0001
training loss: tensor(0.5715) feature loss: tensor(0.2056)
Local adapation with distilling: 0.0001
training loss: tensor(0.5804) feature loss: tensor(0.2335)
Local adapation with distilling: 0.0001
training loss: tensor(0.7556) feature loss: tensor(0.2188)
Local adapation with distilling: 0.0001
training loss: tensor(0.6699) feature loss: tensor(0.2050)
Local adapation with distilling: 0.0001
training loss: tensor(0.5472) feature loss: tensor(0.2083)
Global Model Acc on global data: 0.3582 length of data: 10000
-------------Round number:  56  -------------
selected users: [92, 79, 23, 68, 52, 38, 73, 9, 59, 27]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.9534) feature loss: tensor(0.3314)
Local adapation with distilling: 0.0001
training loss: tensor(0.8324) feature loss: tensor(0.3156)
Local adapation with distilling: 0.0001
training loss: tensor(0.9921) feature loss: tensor(0.3188)
Local adapation with distilling: 0.0001
training loss: tensor(0.6647) feature loss: tensor(0.3004)
Local adapation with distilling: 0.0001
training loss: tensor(0.9168) feature loss: tensor(0.3132)
Local adapation with distilling: 0.0001
training loss: tensor(0.6658) feature loss: tensor(0.2976)
Local adapation with distilling: 0.0001
training loss: tensor(0.9638) feature loss: tensor(0.3093)
Local adapation with distilling: 0.0001
training loss: tensor(0.8768) feature loss: tensor(0.3078)
Local adapation with distilling: 0.0001
training loss: tensor(0.7965) feature loss: tensor(0.3021)
Local adapation with distilling: 0.0001
training loss: tensor(0.8218) feature loss: tensor(0.2866)
Global Model Acc on global data: 0.3484 length of data: 10000
-------------Round number:  57  -------------
selected users: [52, 17, 41, 3, 8, 98, 59, 20, 67, 7]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.8102) feature loss: tensor(0.2763)
Local adapation with distilling: 0.0001
training loss: tensor(0.7294) feature loss: tensor(0.2781)
Local adapation with distilling: 0.0001
training loss: tensor(1.1444) feature loss: tensor(0.3500)
Local adapation with distilling: 0.0001
training loss: tensor(0.7551) feature loss: tensor(0.2703)
Local adapation with distilling: 0.0001
training loss: tensor(0.6741) feature loss: tensor(0.2706)
Local adapation with distilling: 0.0001
training loss: tensor(0.6664) feature loss: tensor(0.2711)
Local adapation with distilling: 0.0001
training loss: tensor(0.7071) feature loss: tensor(0.2714)
Local adapation with distilling: 0.0001
training loss: tensor(0.9260) feature loss: tensor(0.2725)
Local adapation with distilling: 0.0001
training loss: tensor(0.7857) feature loss: tensor(0.3455)
Local adapation with distilling: 0.0001
training loss: tensor(0.7391) feature loss: tensor(0.2788)
Global Model Acc on global data: 0.3482 length of data: 10000
-------------Round number:  58  -------------
selected users: [43, 58, 8, 31, 70, 45, 69, 95, 50, 4]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.9591) feature loss: tensor(0.3151)
Local adapation with distilling: 0.0001
training loss: tensor(0.7980) feature loss: tensor(0.3158)
Local adapation with distilling: 0.0001
training loss: tensor(0.7556) feature loss: tensor(0.3162)
Local adapation with distilling: 0.0001
training loss: tensor(1.1036) feature loss: tensor(0.3307)
Local adapation with distilling: 0.0001
training loss: tensor(0.8836) feature loss: tensor(0.3356)
Local adapation with distilling: 0.0001
training loss: tensor(0.9558) feature loss: tensor(0.3511)
Local adapation with distilling: 0.0001
training loss: tensor(0.8362) feature loss: tensor(0.3208)
Local adapation with distilling: 0.0001
training loss: tensor(0.8876) feature loss: tensor(0.3205)
Local adapation with distilling: 0.0001
training loss: tensor(0.8549) feature loss: tensor(0.3211)
Local adapation with distilling: 0.0001
training loss: tensor(0.9592) feature loss: tensor(0.3176)
Global Model Acc on global data: 0.4123 length of data: 10000
-------------Round number:  59  -------------
selected users: [38, 46, 24, 87, 30, 85, 16, 96, 18, 99]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.6727) feature loss: tensor(0.2920)
Local adapation with distilling: 0.0001
training loss: tensor(0.9774) feature loss: tensor(0.2933)
Local adapation with distilling: 0.0001
training loss: tensor(0.7743) feature loss: tensor(0.2885)
Local adapation with distilling: 0.0001
training loss: tensor(0.7656) feature loss: tensor(0.2885)
Local adapation with distilling: 0.0001
training loss: tensor(0.7367) feature loss: tensor(0.2883)
Local adapation with distilling: 0.0001
training loss: tensor(0.8592) feature loss: tensor(0.3304)
Local adapation with distilling: 0.0001
training loss: tensor(0.9442) feature loss: tensor(0.3277)
Local adapation with distilling: 0.0001
training loss: tensor(0.8431) feature loss: tensor(0.2876)
Local adapation with distilling: 0.0001
training loss: tensor(0.6786) feature loss: tensor(0.2886)
Local adapation with distilling: 0.0001
training loss: tensor(0.8133) feature loss: tensor(0.2886)
Global Model Acc on global data: 0.4236 length of data: 10000
-------------Round number:  60  -------------
selected users: [88, 4, 79, 14, 55, 3, 19, 28, 94, 25]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.6060) feature loss: tensor(0.2527)
Local adapation with distilling: 0.0001
training loss: tensor(0.6798) feature loss: tensor(0.2763)
Local adapation with distilling: 0.0001
training loss: tensor(0.7198) feature loss: tensor(0.2664)
Local adapation with distilling: 0.0001
training loss: tensor(0.6727) feature loss: tensor(0.2482)
Local adapation with distilling: 0.0001
training loss: tensor(0.7433) feature loss: tensor(0.2452)
Local adapation with distilling: 0.0001
training loss: tensor(0.7116) feature loss: tensor(0.2443)
Local adapation with distilling: 0.0001
training loss: tensor(0.7295) feature loss: tensor(0.2486)
Local adapation with distilling: 0.0001
training loss: tensor(0.5919) feature loss: tensor(0.2470)
Local adapation with distilling: 0.0001
training loss: tensor(0.6667) feature loss: tensor(0.2510)
Local adapation with distilling: 0.0001
training loss: tensor(0.6145) feature loss: tensor(0.2429)
Global Model Acc on global data: 0.3453 length of data: 10000
-------------Round number:  61  -------------
selected users: [83, 1, 55, 9, 31, 28, 96, 29, 86, 63]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.9150) feature loss: tensor(0.3592)
Local adapation with distilling: 0.0001
training loss: tensor(1.0139) feature loss: tensor(0.3536)
Local adapation with distilling: 0.0001
training loss: tensor(0.8576) feature loss: tensor(0.3480)
Local adapation with distilling: 0.0001
training loss: tensor(0.7638) feature loss: tensor(0.3141)
Local adapation with distilling: 0.0001
training loss: tensor(1.0875) feature loss: tensor(0.3615)
Local adapation with distilling: 0.0001
training loss: tensor(0.7449) feature loss: tensor(0.3339)
Local adapation with distilling: 0.0001
training loss: tensor(0.9420) feature loss: tensor(0.3219)
Local adapation with distilling: 0.0001
training loss: tensor(0.8118) feature loss: tensor(0.3301)
Local adapation with distilling: 0.0001
training loss: tensor(0.9919) feature loss: tensor(0.3180)
Local adapation with distilling: 0.0001
training loss: tensor(0.8571) feature loss: tensor(0.3403)
Global Model Acc on global data: 0.3862 length of data: 10000
-------------Round number:  62  -------------
selected users: [76, 48, 62, 80, 29, 99, 60, 89, 39, 69]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.7084) feature loss: tensor(0.2553)
Local adapation with distilling: 0.0001
training loss: tensor(0.6024) feature loss: tensor(0.2555)
Local adapation with distilling: 0.0001
training loss: tensor(1.1105) feature loss: tensor(0.3545)
Local adapation with distilling: 0.0001
training loss: tensor(0.7107) feature loss: tensor(0.2760)
Local adapation with distilling: 0.0001
training loss: tensor(0.6265) feature loss: tensor(0.2627)
Local adapation with distilling: 0.0001
training loss: tensor(0.6354) feature loss: tensor(0.2921)
Local adapation with distilling: 0.0001
training loss: tensor(0.7488) feature loss: tensor(0.2560)
Local adapation with distilling: 0.0001
training loss: tensor(0.6524) feature loss: tensor(0.2959)
Local adapation with distilling: 0.0001
training loss: tensor(0.6344) feature loss: tensor(0.2647)
Local adapation with distilling: 0.0001
training loss: tensor(0.6092) feature loss: tensor(0.2598)
Global Model Acc on global data: 0.298 length of data: 10000
-------------Round number:  63  -------------
selected users: [64, 59, 63, 2, 80, 20, 18, 48, 72, 51]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.8781) feature loss: tensor(0.3216)
Local adapation with distilling: 0.0001
training loss: tensor(0.8494) feature loss: tensor(0.3441)
Local adapation with distilling: 0.0001
training loss: tensor(0.8954) feature loss: tensor(0.3285)
Local adapation with distilling: 0.0001
training loss: tensor(1.1663) feature loss: tensor(0.4150)
Local adapation with distilling: 0.0001
training loss: tensor(0.8689) feature loss: tensor(0.3875)
Local adapation with distilling: 0.0001
training loss: tensor(0.8546) feature loss: tensor(0.3437)
Local adapation with distilling: 0.0001
training loss: tensor(0.8417) feature loss: tensor(0.3235)
Local adapation with distilling: 0.0001
training loss: tensor(0.8254) feature loss: tensor(0.3212)
Local adapation with distilling: 0.0001
training loss: tensor(1.1005) feature loss: tensor(0.3708)
Local adapation with distilling: 0.0001
training loss: tensor(1.0623) feature loss: tensor(0.3279)
Global Model Acc on global data: 0.3655 length of data: 10000
-------------Round number:  64  -------------
selected users: [17, 22, 60, 92, 23, 19, 71, 94, 40, 49]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.8511) feature loss: tensor(0.2823)
Local adapation with distilling: 0.0001
training loss: tensor(0.8965) feature loss: tensor(0.2918)
Local adapation with distilling: 0.0001
training loss: tensor(0.6921) feature loss: tensor(0.2883)
Local adapation with distilling: 0.0001
training loss: tensor(0.8295) feature loss: tensor(0.2945)
Local adapation with distilling: 0.0001
training loss: tensor(0.8044) feature loss: tensor(0.3076)
Local adapation with distilling: 0.0001
training loss: tensor(0.7696) feature loss: tensor(0.2899)
Local adapation with distilling: 0.0001
training loss: tensor(0.9448) feature loss: tensor(0.2970)
Local adapation with distilling: 0.0001
training loss: tensor(0.7691) feature loss: tensor(0.2844)
Local adapation with distilling: 0.0001
training loss: tensor(0.7301) feature loss: tensor(0.2868)
Local adapation with distilling: 0.0001
training loss: tensor(0.8070) feature loss: tensor(0.2947)
Global Model Acc on global data: 0.372 length of data: 10000
-------------Round number:  65  -------------
selected users: [37, 81, 39, 61, 76, 90, 27, 86, 28, 69]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.6842) feature loss: tensor(0.2664)
Local adapation with distilling: 0.0001
training loss: tensor(0.8463) feature loss: tensor(0.2875)
Local adapation with distilling: 0.0001
training loss: tensor(0.6909) feature loss: tensor(0.2772)
Local adapation with distilling: 0.0001
training loss: tensor(0.8355) feature loss: tensor(0.2855)
Local adapation with distilling: 0.0001
training loss: tensor(0.8507) feature loss: tensor(0.2708)
Local adapation with distilling: 0.0001
training loss: tensor(0.6860) feature loss: tensor(0.2815)
Local adapation with distilling: 0.0001
training loss: tensor(0.7473) feature loss: tensor(0.3185)
Local adapation with distilling: 0.0001
training loss: tensor(0.8304) feature loss: tensor(0.3026)
Local adapation with distilling: 0.0001
training loss: tensor(0.6575) feature loss: tensor(0.2631)
Local adapation with distilling: 0.0001
training loss: tensor(0.7221) feature loss: tensor(0.3339)
Global Model Acc on global data: 0.4068 length of data: 10000
-------------Round number:  66  -------------
selected users: [8, 93, 4, 5, 52, 41, 0, 73, 88, 68]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.7976) feature loss: tensor(0.3414)
Local adapation with distilling: 0.0001
training loss: tensor(0.8830) feature loss: tensor(0.3368)
Local adapation with distilling: 0.0001
training loss: tensor(0.8484) feature loss: tensor(0.3398)
Local adapation with distilling: 0.0001
training loss: tensor(0.8786) feature loss: tensor(0.3389)
Local adapation with distilling: 0.0001
training loss: tensor(0.9670) feature loss: tensor(0.3482)
Local adapation with distilling: 0.0001
training loss: tensor(0.8876) feature loss: tensor(0.3412)
Local adapation with distilling: 0.0001
training loss: tensor(0.8375) feature loss: tensor(0.3388)
Local adapation with distilling: 0.0001
training loss: tensor(0.8911) feature loss: tensor(0.3607)
Local adapation with distilling: 0.0001
training loss: tensor(0.7910) feature loss: tensor(0.3406)
Local adapation with distilling: 0.0001
training loss: tensor(0.8168) feature loss: tensor(0.3418)
Global Model Acc on global data: 0.4057 length of data: 10000
-------------Round number:  67  -------------
selected users: [17, 24, 64, 93, 97, 29, 3, 70, 82, 11]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.8778) feature loss: tensor(0.3338)
Local adapation with distilling: 0.0001
training loss: tensor(0.9134) feature loss: tensor(0.3622)
Local adapation with distilling: 0.0001
training loss: tensor(0.8545) feature loss: tensor(0.3868)
Local adapation with distilling: 0.0001
training loss: tensor(0.8756) feature loss: tensor(0.3403)
Local adapation with distilling: 0.0001
training loss: tensor(0.9464) feature loss: tensor(0.3929)
Local adapation with distilling: 0.0001
training loss: tensor(0.9050) feature loss: tensor(0.4041)
Local adapation with distilling: 0.0001
training loss: tensor(0.7499) feature loss: tensor(0.3082)
Local adapation with distilling: 0.0001
training loss: tensor(0.8142) feature loss: tensor(0.3112)
Local adapation with distilling: 0.0001
training loss: tensor(1.0017) feature loss: tensor(0.3704)
Local adapation with distilling: 0.0001
training loss: tensor(0.9253) feature loss: tensor(0.3397)
Global Model Acc on global data: 0.4197 length of data: 10000
-------------Round number:  68  -------------
selected users: [29, 30, 16, 5, 38, 71, 76, 94, 99, 95]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.7314) feature loss: tensor(0.2911)
Local adapation with distilling: 0.0001
training loss: tensor(0.7779) feature loss: tensor(0.2881)
Local adapation with distilling: 0.0001
training loss: tensor(0.9064) feature loss: tensor(0.3016)
Local adapation with distilling: 0.0001
training loss: tensor(0.8117) feature loss: tensor(0.3007)
Local adapation with distilling: 0.0001
training loss: tensor(0.7123) feature loss: tensor(0.2879)
Local adapation with distilling: 0.0001
training loss: tensor(0.8469) feature loss: tensor(0.2936)
Local adapation with distilling: 0.0001
training loss: tensor(0.9093) feature loss: tensor(0.3278)
Local adapation with distilling: 0.0001
training loss: tensor(0.7253) feature loss: tensor(0.2870)
Local adapation with distilling: 0.0001
training loss: tensor(0.7393) feature loss: tensor(0.2917)
Local adapation with distilling: 0.0001
training loss: tensor(0.8498) feature loss: tensor(0.3445)
Global Model Acc on global data: 0.4463 length of data: 10000
-------------Round number:  69  -------------
selected users: [72, 31, 13, 83, 33, 8, 26, 89, 64, 97]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(1.0855) feature loss: tensor(0.3953)
Local adapation with distilling: 0.0001
training loss: tensor(0.8885) feature loss: tensor(0.3612)
Local adapation with distilling: 0.0001
training loss: tensor(0.7927) feature loss: tensor(0.3344)
Local adapation with distilling: 0.0001
training loss: tensor(0.8304) feature loss: tensor(0.3284)
Local adapation with distilling: 0.0001
training loss: tensor(0.7695) feature loss: tensor(0.3206)
Local adapation with distilling: 0.0001
training loss: tensor(0.7196) feature loss: tensor(0.3117)
Local adapation with distilling: 0.0001
training loss: tensor(0.9014) feature loss: tensor(0.3158)
Local adapation with distilling: 0.0001
training loss: tensor(0.7521) feature loss: tensor(0.3209)
Local adapation with distilling: 0.0001
training loss: tensor(0.8268) feature loss: tensor(0.3413)
Local adapation with distilling: 0.0001
training loss: tensor(0.8266) feature loss: tensor(0.3126)
Global Model Acc on global data: 0.4515 length of data: 10000
-------------Round number:  70  -------------
selected users: [81, 43, 88, 32, 50, 71, 73, 55, 42, 2]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.8930) feature loss: tensor(0.3236)
Local adapation with distilling: 0.0001
training loss: tensor(0.8582) feature loss: tensor(0.3288)
Local adapation with distilling: 0.0001
training loss: tensor(0.7733) feature loss: tensor(0.3151)
Local adapation with distilling: 0.0001
training loss: tensor(1.0150) feature loss: tensor(0.3608)
Local adapation with distilling: 0.0001
training loss: tensor(0.8267) feature loss: tensor(0.3183)
Local adapation with distilling: 0.0001
training loss: tensor(0.8278) feature loss: tensor(0.3204)
Local adapation with distilling: 0.0001
training loss: tensor(0.7920) feature loss: tensor(0.3198)
Local adapation with distilling: 0.0001
training loss: tensor(0.8686) feature loss: tensor(0.3183)
Local adapation with distilling: 0.0001
training loss: tensor(0.9625) feature loss: tensor(0.3520)
Local adapation with distilling: 0.0001
training loss: tensor(0.9407) feature loss: tensor(0.3563)
Global Model Acc on global data: 0.4125 length of data: 10000
-------------Round number:  71  -------------
selected users: [41, 84, 98, 42, 75, 25, 60, 19, 52, 29]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.8170) feature loss: tensor(0.2684)
Local adapation with distilling: 0.0001
training loss: tensor(0.8281) feature loss: tensor(0.2605)
Local adapation with distilling: 0.0001
training loss: tensor(0.6634) feature loss: tensor(0.2596)
Local adapation with distilling: 0.0001
training loss: tensor(0.7857) feature loss: tensor(0.2928)
Local adapation with distilling: 0.0001
training loss: tensor(0.7207) feature loss: tensor(0.2650)
Local adapation with distilling: 0.0001
training loss: tensor(0.7619) feature loss: tensor(0.2882)
Local adapation with distilling: 0.0001
training loss: tensor(0.7462) feature loss: tensor(0.2578)
Local adapation with distilling: 0.0001
training loss: tensor(0.7823) feature loss: tensor(0.2990)
Local adapation with distilling: 0.0001
training loss: tensor(0.8407) feature loss: tensor(0.3752)
Local adapation with distilling: 0.0001
training loss: tensor(0.7851) feature loss: tensor(0.2879)
Global Model Acc on global data: 0.4006 length of data: 10000
-------------Round number:  72  -------------
selected users: [76, 82, 43, 16, 84, 95, 78, 91, 30, 22]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.8951) feature loss: tensor(0.2787)
Local adapation with distilling: 0.0001
training loss: tensor(0.7719) feature loss: tensor(0.2777)
Local adapation with distilling: 0.0001
training loss: tensor(0.7706) feature loss: tensor(0.2742)
Local adapation with distilling: 0.0001
training loss: tensor(0.9212) feature loss: tensor(0.3106)
Local adapation with distilling: 0.0001
training loss: tensor(0.8505) feature loss: tensor(0.2740)
Local adapation with distilling: 0.0001
training loss: tensor(0.6905) feature loss: tensor(0.2734)
Local adapation with distilling: 0.0001
training loss: tensor(0.6905) feature loss: tensor(0.2748)
Local adapation with distilling: 0.0001
training loss: tensor(0.8271) feature loss: tensor(0.2791)
Local adapation with distilling: 0.0001
training loss: tensor(0.7400) feature loss: tensor(0.2737)
Local adapation with distilling: 0.0001
training loss: tensor(0.7957) feature loss: tensor(0.2834)
Global Model Acc on global data: 0.4306 length of data: 10000
-------------Round number:  73  -------------
selected users: [49, 14, 34, 70, 90, 35, 68, 76, 80, 9]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.7307) feature loss: tensor(0.2713)
Local adapation with distilling: 0.0001
training loss: tensor(0.7886) feature loss: tensor(0.2836)
Local adapation with distilling: 0.0001
training loss: tensor(0.6871) feature loss: tensor(0.2730)
Local adapation with distilling: 0.0001
training loss: tensor(0.6584) feature loss: tensor(0.2749)
Local adapation with distilling: 0.0001
training loss: tensor(0.6802) feature loss: tensor(0.2713)
Local adapation with distilling: 0.0001
training loss: tensor(0.7105) feature loss: tensor(0.2692)
Local adapation with distilling: 0.0001
training loss: tensor(0.6463) feature loss: tensor(0.2690)
Local adapation with distilling: 0.0001
training loss: tensor(0.7468) feature loss: tensor(0.2820)
Local adapation with distilling: 0.0001
training loss: tensor(0.6484) feature loss: tensor(0.2750)
Local adapation with distilling: 0.0001
training loss: tensor(0.7417) feature loss: tensor(0.2759)
Global Model Acc on global data: 0.4106 length of data: 10000
-------------Round number:  74  -------------
selected users: [85, 64, 63, 80, 6, 12, 43, 17, 7, 8]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.8771) feature loss: tensor(0.3645)
Local adapation with distilling: 0.0001
training loss: tensor(0.8583) feature loss: tensor(0.3624)
Local adapation with distilling: 0.0001
training loss: tensor(1.0738) feature loss: tensor(0.4446)
Local adapation with distilling: 0.0001
training loss: tensor(0.8266) feature loss: tensor(0.3624)
Local adapation with distilling: 0.0001
training loss: tensor(1.0662) feature loss: tensor(0.3601)
Local adapation with distilling: 0.0001
training loss: tensor(1.0528) feature loss: tensor(0.3850)
Local adapation with distilling: 0.0001
training loss: tensor(1.0614) feature loss: tensor(0.3749)
Local adapation with distilling: 0.0001
training loss: tensor(1.0304) feature loss: tensor(0.3612)
Local adapation with distilling: 0.0001
training loss: tensor(1.0737) feature loss: tensor(0.3686)
Local adapation with distilling: 0.0001
training loss: tensor(0.8325) feature loss: tensor(0.3637)
Global Model Acc on global data: 0.4402 length of data: 10000
-------------Round number:  75  -------------
selected users: [36, 7, 6, 45, 56, 54, 22, 37, 53, 68]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.9213) feature loss: tensor(0.3918)
Local adapation with distilling: 0.0001
training loss: tensor(0.8541) feature loss: tensor(0.3225)
Local adapation with distilling: 0.0001
training loss: tensor(0.9647) feature loss: tensor(0.4261)
Local adapation with distilling: 0.0001
training loss: tensor(0.7732) feature loss: tensor(0.2804)
Local adapation with distilling: 0.0001
training loss: tensor(0.9446) feature loss: tensor(0.3437)
Local adapation with distilling: 0.0001
training loss: tensor(0.9343) feature loss: tensor(0.3862)
Local adapation with distilling: 0.0001
training loss: tensor(1.0092) feature loss: tensor(0.3582)
Local adapation with distilling: 0.0001
training loss: tensor(0.8402) feature loss: tensor(0.3596)
Local adapation with distilling: 0.0001
training loss: tensor(0.9072) feature loss: tensor(0.3574)
Local adapation with distilling: 0.0001
training loss: tensor(0.7299) feature loss: tensor(0.2943)
Global Model Acc on global data: 0.4123 length of data: 10000
-------------Round number:  76  -------------
selected users: [38, 37, 32, 50, 10, 94, 19, 44, 86, 23]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.7206) feature loss: tensor(0.2750)
Local adapation with distilling: 0.0001
training loss: tensor(0.7602) feature loss: tensor(0.2783)
Local adapation with distilling: 0.0001
training loss: tensor(0.9894) feature loss: tensor(0.3125)
Local adapation with distilling: 0.0001
training loss: tensor(0.8372) feature loss: tensor(0.3273)
Local adapation with distilling: 0.0001
training loss: tensor(0.8059) feature loss: tensor(0.2937)
Local adapation with distilling: 0.0001
training loss: tensor(0.8234) feature loss: tensor(0.2800)
Local adapation with distilling: 0.0001
training loss: tensor(0.8165) feature loss: tensor(0.2915)
Local adapation with distilling: 0.0001
training loss: tensor(0.9202) feature loss: tensor(0.4072)
Local adapation with distilling: 0.0001
training loss: tensor(0.8424) feature loss: tensor(0.2902)
Local adapation with distilling: 0.0001
training loss: tensor(0.7366) feature loss: tensor(0.2736)
Global Model Acc on global data: 0.4208 length of data: 10000
-------------Round number:  77  -------------
selected users: [5, 93, 41, 96, 16, 42, 81, 91, 50, 58]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.9033) feature loss: tensor(0.4507)
Local adapation with distilling: 0.0001
training loss: tensor(0.8779) feature loss: tensor(0.3581)
Local adapation with distilling: 0.0001
training loss: tensor(1.0227) feature loss: tensor(0.4026)
Local adapation with distilling: 0.0001
training loss: tensor(0.8131) feature loss: tensor(0.3674)
Local adapation with distilling: 0.0001
training loss: tensor(0.7752) feature loss: tensor(0.3564)
Local adapation with distilling: 0.0001
training loss: tensor(1.0071) feature loss: tensor(0.4041)
Local adapation with distilling: 0.0001
training loss: tensor(0.9986) feature loss: tensor(0.4279)
Local adapation with distilling: 0.0001
training loss: tensor(1.0219) feature loss: tensor(0.4107)
Local adapation with distilling: 0.0001
training loss: tensor(0.7672) feature loss: tensor(0.3561)
Local adapation with distilling: 0.0001
training loss: tensor(0.7833) feature loss: tensor(0.3550)
Global Model Acc on global data: 0.4399 length of data: 10000
-------------Round number:  78  -------------
selected users: [9, 46, 7, 63, 15, 2, 74, 31, 5, 36]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.8044) feature loss: tensor(0.2709)
Local adapation with distilling: 0.0001
training loss: tensor(0.8953) feature loss: tensor(0.3223)
Local adapation with distilling: 0.0001
training loss: tensor(0.9859) feature loss: tensor(0.3455)
Local adapation with distilling: 0.0001
training loss: tensor(0.9698) feature loss: tensor(0.4491)
Local adapation with distilling: 0.0001
training loss: tensor(1.0591) feature loss: tensor(0.4914)
Local adapation with distilling: 0.0001
training loss: tensor(0.9400) feature loss: tensor(0.3104)
Local adapation with distilling: 0.0001
training loss: tensor(0.9763) feature loss: tensor(0.3482)
Local adapation with distilling: 0.0001
training loss: tensor(0.7929) feature loss: tensor(0.3073)
Local adapation with distilling: 0.0001
training loss: tensor(0.8247) feature loss: tensor(0.2952)
Local adapation with distilling: 0.0001
training loss: tensor(0.8595) feature loss: tensor(0.2887)
Global Model Acc on global data: 0.4375 length of data: 10000
-------------Round number:  79  -------------
selected users: [68, 18, 86, 60, 56, 32, 30, 24, 45, 92]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.7089) feature loss: tensor(0.2758)
Local adapation with distilling: 0.0001
training loss: tensor(0.7068) feature loss: tensor(0.2760)
Local adapation with distilling: 0.0001
training loss: tensor(0.7051) feature loss: tensor(0.2750)
Local adapation with distilling: 0.0001
training loss: tensor(0.6931) feature loss: tensor(0.2750)
Local adapation with distilling: 0.0001
training loss: tensor(0.6818) feature loss: tensor(0.2728)
Local adapation with distilling: 0.0001
training loss: tensor(0.9295) feature loss: tensor(0.3352)
Local adapation with distilling: 0.0001
training loss: tensor(0.7238) feature loss: tensor(0.2726)
Local adapation with distilling: 0.0001
training loss: tensor(0.7902) feature loss: tensor(0.3353)
Local adapation with distilling: 0.0001
training loss: tensor(0.7470) feature loss: tensor(0.3089)
Local adapation with distilling: 0.0001
training loss: tensor(0.9174) feature loss: tensor(0.3153)
Global Model Acc on global data: 0.4209 length of data: 10000
-------------Round number:  80  -------------
selected users: [37, 65, 95, 53, 66, 30, 73, 85, 45, 36]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.8286) feature loss: tensor(0.3287)
Local adapation with distilling: 0.0001
training loss: tensor(0.7365) feature loss: tensor(0.3198)
Local adapation with distilling: 0.0001
training loss: tensor(0.7233) feature loss: tensor(0.3230)
Local adapation with distilling: 0.0001
training loss: tensor(0.9532) feature loss: tensor(0.3467)
Local adapation with distilling: 0.0001
training loss: tensor(0.8270) feature loss: tensor(0.3763)
Local adapation with distilling: 0.0001
training loss: tensor(0.7321) feature loss: tensor(0.3165)
Local adapation with distilling: 0.0001
training loss: tensor(0.8358) feature loss: tensor(0.3503)
Local adapation with distilling: 0.0001
training loss: tensor(0.7740) feature loss: tensor(0.3801)
Local adapation with distilling: 0.0001
training loss: tensor(0.8314) feature loss: tensor(0.4301)
Local adapation with distilling: 0.0001
training loss: tensor(0.7772) feature loss: tensor(0.3654)
Global Model Acc on global data: 0.366 length of data: 10000
-------------Round number:  81  -------------
selected users: [73, 89, 41, 78, 51, 21, 30, 69, 8, 5]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.7940) feature loss: tensor(0.3690)
Local adapation with distilling: 0.0001
training loss: tensor(0.8531) feature loss: tensor(0.3381)
Local adapation with distilling: 0.0001
training loss: tensor(0.8873) feature loss: tensor(0.3514)
Local adapation with distilling: 0.0001
training loss: tensor(0.7563) feature loss: tensor(0.3146)
Local adapation with distilling: 0.0001
training loss: tensor(0.9038) feature loss: tensor(0.3433)
Local adapation with distilling: 0.0001
training loss: tensor(0.9241) feature loss: tensor(0.3460)
Local adapation with distilling: 0.0001
training loss: tensor(0.7431) feature loss: tensor(0.3099)
Local adapation with distilling: 0.0001
training loss: tensor(0.8129) feature loss: tensor(0.3255)
Local adapation with distilling: 0.0001
training loss: tensor(0.7863) feature loss: tensor(0.3193)
Local adapation with distilling: 0.0001
training loss: tensor(0.6840) feature loss: tensor(0.3085)
Global Model Acc on global data: 0.3738 length of data: 10000
-------------Round number:  82  -------------
selected users: [72, 33, 58, 2, 55, 84, 54, 75, 28, 40]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(1.1510) feature loss: tensor(0.4344)
Local adapation with distilling: 0.0001
training loss: tensor(0.9003) feature loss: tensor(0.4105)
Local adapation with distilling: 0.0001
training loss: tensor(0.8005) feature loss: tensor(0.3447)
Local adapation with distilling: 0.0001
training loss: tensor(1.0581) feature loss: tensor(0.4121)
Local adapation with distilling: 0.0001
training loss: tensor(0.8087) feature loss: tensor(0.3441)
Local adapation with distilling: 0.0001
training loss: tensor(1.0616) feature loss: tensor(0.3770)
Local adapation with distilling: 0.0001
training loss: tensor(1.0568) feature loss: tensor(0.4038)
Local adapation with distilling: 0.0001
training loss: tensor(0.8730) feature loss: tensor(0.3922)
Local adapation with distilling: 0.0001
training loss: tensor(0.8618) feature loss: tensor(0.3959)
Local adapation with distilling: 0.0001
training loss: tensor(0.8428) feature loss: tensor(0.3453)
Global Model Acc on global data: 0.3653 length of data: 10000
-------------Round number:  83  -------------
selected users: [6, 65, 95, 84, 61, 12, 30, 69, 35, 1]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.8390) feature loss: tensor(0.2660)
Local adapation with distilling: 0.0001
training loss: tensor(0.6437) feature loss: tensor(0.2602)
Local adapation with distilling: 0.0001
training loss: tensor(0.6487) feature loss: tensor(0.2590)
Local adapation with distilling: 0.0001
training loss: tensor(0.7138) feature loss: tensor(0.2579)
Local adapation with distilling: 0.0001
training loss: tensor(0.7640) feature loss: tensor(0.2816)
Local adapation with distilling: 0.0001
training loss: tensor(0.8772) feature loss: tensor(0.3130)
Local adapation with distilling: 0.0001
training loss: tensor(0.6994) feature loss: tensor(0.2605)
Local adapation with distilling: 0.0001
training loss: tensor(0.7561) feature loss: tensor(0.2715)
Local adapation with distilling: 0.0001
training loss: tensor(0.6889) feature loss: tensor(0.2844)
Local adapation with distilling: 0.0001
training loss: tensor(0.7961) feature loss: tensor(0.2707)
Global Model Acc on global data: 0.4138 length of data: 10000
-------------Round number:  84  -------------
selected users: [94, 55, 80, 1, 90, 11, 32, 8, 6, 82]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.6890) feature loss: tensor(0.2556)
Local adapation with distilling: 0.0001
training loss: tensor(0.5839) feature loss: tensor(0.2424)
Local adapation with distilling: 0.0001
training loss: tensor(0.6583) feature loss: tensor(0.2390)
Local adapation with distilling: 0.0001
training loss: tensor(0.7057) feature loss: tensor(0.2429)
Local adapation with distilling: 0.0001
training loss: tensor(0.6771) feature loss: tensor(0.2411)
Local adapation with distilling: 0.0001
training loss: tensor(0.7465) feature loss: tensor(0.3075)
Local adapation with distilling: 0.0001
training loss: tensor(0.7717) feature loss: tensor(0.2534)
Local adapation with distilling: 0.0001
training loss: tensor(0.6467) feature loss: tensor(0.2412)
Local adapation with distilling: 0.0001
training loss: tensor(0.7446) feature loss: tensor(0.2490)
Local adapation with distilling: 0.0001
training loss: tensor(0.6832) feature loss: tensor(0.2456)
Global Model Acc on global data: 0.4201 length of data: 10000
-------------Round number:  85  -------------
selected users: [81, 25, 40, 87, 41, 23, 10, 89, 50, 54]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.8260) feature loss: tensor(0.3103)
Local adapation with distilling: 0.0001
training loss: tensor(0.6800) feature loss: tensor(0.2785)
Local adapation with distilling: 0.0001
training loss: tensor(0.7201) feature loss: tensor(0.2769)
Local adapation with distilling: 0.0001
training loss: tensor(1.0295) feature loss: tensor(0.2787)
Local adapation with distilling: 0.0001
training loss: tensor(0.7485) feature loss: tensor(0.2776)
Local adapation with distilling: 0.0001
training loss: tensor(0.8726) feature loss: tensor(0.2759)
Local adapation with distilling: 0.0001
training loss: tensor(0.6840) feature loss: tensor(0.2787)
Local adapation with distilling: 0.0001
training loss: tensor(0.9632) feature loss: tensor(0.3126)
Local adapation with distilling: 0.0001
training loss: tensor(0.6746) feature loss: tensor(0.2797)
Local adapation with distilling: 0.0001
training loss: tensor(0.7509) feature loss: tensor(0.2971)
Global Model Acc on global data: 0.4007 length of data: 10000
-------------Round number:  86  -------------
selected users: [69, 74, 34, 68, 42, 0, 32, 88, 8, 3]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.9190) feature loss: tensor(0.3433)
Local adapation with distilling: 0.0001
training loss: tensor(0.7647) feature loss: tensor(0.3180)
Local adapation with distilling: 0.0001
training loss: tensor(0.8325) feature loss: tensor(0.3396)
Local adapation with distilling: 0.0001
training loss: tensor(0.8295) feature loss: tensor(0.3951)
Local adapation with distilling: 0.0001
training loss: tensor(0.8689) feature loss: tensor(0.3222)
Local adapation with distilling: 0.0001
training loss: tensor(0.7342) feature loss: tensor(0.3407)
Local adapation with distilling: 0.0001
training loss: tensor(0.9240) feature loss: tensor(0.3995)
Local adapation with distilling: 0.0001
training loss: tensor(0.8249) feature loss: tensor(0.3255)
Local adapation with distilling: 0.0001
training loss: tensor(0.8178) feature loss: tensor(0.3312)
Local adapation with distilling: 0.0001
training loss: tensor(0.7922) feature loss: tensor(0.3388)
Global Model Acc on global data: 0.3903 length of data: 10000
-------------Round number:  87  -------------
selected users: [16, 81, 85, 32, 39, 25, 26, 29, 65, 7]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.8986) feature loss: tensor(0.3852)
Local adapation with distilling: 0.0001
training loss: tensor(0.8370) feature loss: tensor(0.3498)
Local adapation with distilling: 0.0001
training loss: tensor(0.8974) feature loss: tensor(0.4245)
Local adapation with distilling: 0.0001
training loss: tensor(0.8956) feature loss: tensor(0.3988)
Local adapation with distilling: 0.0001
training loss: tensor(0.8566) feature loss: tensor(0.3725)
Local adapation with distilling: 0.0001
training loss: tensor(0.8033) feature loss: tensor(0.3479)
Local adapation with distilling: 0.0001
training loss: tensor(0.8854) feature loss: tensor(0.3294)
Local adapation with distilling: 0.0001
training loss: tensor(0.8530) feature loss: tensor(0.3606)
Local adapation with distilling: 0.0001
training loss: tensor(0.8021) feature loss: tensor(0.3415)
Local adapation with distilling: 0.0001
training loss: tensor(0.8436) feature loss: tensor(0.3357)
Global Model Acc on global data: 0.4293 length of data: 10000
-------------Round number:  88  -------------
selected users: [95, 53, 43, 84, 2, 74, 55, 31, 54, 97]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.7448) feature loss: tensor(0.3339)
Local adapation with distilling: 0.0001
training loss: tensor(1.0309) feature loss: tensor(0.3627)
Local adapation with distilling: 0.0001
training loss: tensor(1.1984) feature loss: tensor(0.4581)
Local adapation with distilling: 0.0001
training loss: tensor(1.0556) feature loss: tensor(0.4470)
Local adapation with distilling: 0.0001
training loss: tensor(1.0653) feature loss: tensor(0.3760)
Local adapation with distilling: 0.0001
training loss: tensor(1.1404) feature loss: tensor(0.4954)
Local adapation with distilling: 0.0001
training loss: tensor(0.8222) feature loss: tensor(0.3399)
Local adapation with distilling: 0.0001
training loss: tensor(0.8115) feature loss: tensor(0.3336)
Local adapation with distilling: 0.0001
training loss: tensor(0.9850) feature loss: tensor(0.3914)
Local adapation with distilling: 0.0001
training loss: tensor(1.2517) feature loss: tensor(0.4939)
Global Model Acc on global data: 0.3925 length of data: 10000
-------------Round number:  89  -------------
selected users: [65, 21, 87, 6, 46, 74, 44, 60, 72, 5]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.7317) feature loss: tensor(0.2751)
Local adapation with distilling: 0.0001
training loss: tensor(0.7253) feature loss: tensor(0.2743)
Local adapation with distilling: 0.0001
training loss: tensor(1.0073) feature loss: tensor(0.3238)
Local adapation with distilling: 0.0001
training loss: tensor(0.9642) feature loss: tensor(0.3582)
Local adapation with distilling: 0.0001
training loss: tensor(0.9167) feature loss: tensor(0.3399)
Local adapation with distilling: 0.0001
training loss: tensor(0.9245) feature loss: tensor(0.4580)
Local adapation with distilling: 0.0001
training loss: tensor(0.8812) feature loss: tensor(0.3493)
Local adapation with distilling: 0.0001
training loss: tensor(0.7854) feature loss: tensor(0.2711)
Local adapation with distilling: 0.0001
training loss: tensor(0.9631) feature loss: tensor(0.3445)
Local adapation with distilling: 0.0001
training loss: tensor(0.7864) feature loss: tensor(0.3194)
Global Model Acc on global data: 0.4254 length of data: 10000
-------------Round number:  90  -------------
selected users: [25, 85, 96, 89, 65, 94, 5, 35, 36, 92]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.6899) feature loss: tensor(0.3389)
Local adapation with distilling: 0.0001
training loss: tensor(0.7846) feature loss: tensor(0.4296)
Local adapation with distilling: 0.0001
training loss: tensor(0.8002) feature loss: tensor(0.3093)
Local adapation with distilling: 0.0001
training loss: tensor(0.7868) feature loss: tensor(0.3374)
Local adapation with distilling: 0.0001
training loss: tensor(0.7283) feature loss: tensor(0.4279)
Local adapation with distilling: 0.0001
training loss: tensor(0.8901) feature loss: tensor(0.3660)
Local adapation with distilling: 0.0001
training loss: tensor(0.6966) feature loss: tensor(0.4029)
Local adapation with distilling: 0.0001
training loss: tensor(0.8083) feature loss: tensor(0.4357)
Local adapation with distilling: 0.0001
training loss: tensor(0.8561) feature loss: tensor(0.4206)
Local adapation with distilling: 0.0001
training loss: tensor(1.0421) feature loss: tensor(0.3455)
Global Model Acc on global data: 0.3599 length of data: 10000
-------------Round number:  91  -------------
selected users: [75, 25, 3, 52, 78, 54, 59, 26, 62, 97]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.8875) feature loss: tensor(0.3833)
Local adapation with distilling: 0.0001
training loss: tensor(0.9066) feature loss: tensor(0.3581)
Local adapation with distilling: 0.0001
training loss: tensor(1.2405) feature loss: tensor(0.3608)
Local adapation with distilling: 0.0001
training loss: tensor(1.1194) feature loss: tensor(0.3864)
Local adapation with distilling: 0.0001
training loss: tensor(0.8728) feature loss: tensor(0.3191)
Local adapation with distilling: 0.0001
training loss: tensor(0.9972) feature loss: tensor(0.3392)
Local adapation with distilling: 0.0001
training loss: tensor(0.8942) feature loss: tensor(0.3269)
Local adapation with distilling: 0.0001
training loss: tensor(1.0432) feature loss: tensor(0.3474)
Local adapation with distilling: 0.0001
training loss: tensor(1.1494) feature loss: tensor(0.4144)
Local adapation with distilling: 0.0001
training loss: tensor(1.2418) feature loss: tensor(0.4676)
Global Model Acc on global data: 0.3987 length of data: 10000
-------------Round number:  92  -------------
selected users: [25, 99, 73, 61, 66, 36, 23, 83, 77, 6]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.9516) feature loss: tensor(0.4145)
Local adapation with distilling: 0.0001
training loss: tensor(0.8151) feature loss: tensor(0.3499)
Local adapation with distilling: 0.0001
training loss: tensor(0.9943) feature loss: tensor(0.4538)
Local adapation with distilling: 0.0001
training loss: tensor(0.9546) feature loss: tensor(0.4129)
Local adapation with distilling: 0.0001
training loss: tensor(0.9436) feature loss: tensor(0.4047)
Local adapation with distilling: 0.0001
training loss: tensor(0.8817) feature loss: tensor(0.3669)
Local adapation with distilling: 0.0001
training loss: tensor(1.0766) feature loss: tensor(0.4796)
Local adapation with distilling: 0.0001
training loss: tensor(1.0856) feature loss: tensor(0.5038)
Local adapation with distilling: 0.0001
training loss: tensor(1.1789) feature loss: tensor(0.4493)
Local adapation with distilling: 0.0001
training loss: tensor(1.1057) feature loss: tensor(0.4653)
Global Model Acc on global data: 0.3816 length of data: 10000
-------------Round number:  93  -------------
selected users: [75, 82, 56, 27, 42, 35, 1, 97, 66, 61]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.6673) feature loss: tensor(0.2673)
Local adapation with distilling: 0.0001
training loss: tensor(0.8230) feature loss: tensor(0.3458)
Local adapation with distilling: 0.0001
training loss: tensor(0.7358) feature loss: tensor(0.3348)
Local adapation with distilling: 0.0001
training loss: tensor(0.9641) feature loss: tensor(0.4234)
Local adapation with distilling: 0.0001
training loss: tensor(0.8952) feature loss: tensor(0.3638)
Local adapation with distilling: 0.0001
training loss: tensor(0.7353) feature loss: tensor(0.2743)
Local adapation with distilling: 0.0001
training loss: tensor(0.6706) feature loss: tensor(0.2760)
Local adapation with distilling: 0.0001
training loss: tensor(0.7537) feature loss: tensor(0.2672)
Local adapation with distilling: 0.0001
training loss: tensor(0.7008) feature loss: tensor(0.2734)
Local adapation with distilling: 0.0001
training loss: tensor(0.6699) feature loss: tensor(0.2790)
Global Model Acc on global data: 0.3837 length of data: 10000
-------------Round number:  94  -------------
selected users: [13, 73, 5, 18, 99, 48, 23, 4, 35, 17]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.9051) feature loss: tensor(0.3548)
Local adapation with distilling: 0.0001
training loss: tensor(0.9206) feature loss: tensor(0.3637)
Local adapation with distilling: 0.0001
training loss: tensor(0.8085) feature loss: tensor(0.3580)
Local adapation with distilling: 0.0001
training loss: tensor(0.8737) feature loss: tensor(0.3595)
Local adapation with distilling: 0.0001
training loss: tensor(0.8582) feature loss: tensor(0.3714)
Local adapation with distilling: 0.0001
training loss: tensor(0.8698) feature loss: tensor(0.3581)
Local adapation with distilling: 0.0001
training loss: tensor(0.9788) feature loss: tensor(0.4157)
Local adapation with distilling: 0.0001
training loss: tensor(1.0320) feature loss: tensor(0.3771)
Local adapation with distilling: 0.0001
training loss: tensor(0.8792) feature loss: tensor(0.3557)
Local adapation with distilling: 0.0001
training loss: tensor(0.9147) feature loss: tensor(0.3925)
Global Model Acc on global data: 0.4204 length of data: 10000
-------------Round number:  95  -------------
selected users: [88, 9, 1, 60, 95, 26, 45, 71, 44, 21]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.6116) feature loss: tensor(0.2433)
Local adapation with distilling: 0.0001
training loss: tensor(0.7460) feature loss: tensor(0.2553)
Local adapation with distilling: 0.0001
training loss: tensor(0.6962) feature loss: tensor(0.2604)
Local adapation with distilling: 0.0001
training loss: tensor(0.9129) feature loss: tensor(0.2616)
Local adapation with distilling: 0.0001
training loss: tensor(0.5932) feature loss: tensor(0.2451)
Local adapation with distilling: 0.0001
training loss: tensor(0.8508) feature loss: tensor(0.2601)
Local adapation with distilling: 0.0001
training loss: tensor(0.6309) feature loss: tensor(0.2468)
Local adapation with distilling: 0.0001
training loss: tensor(0.7227) feature loss: tensor(0.2700)
Local adapation with distilling: 0.0001
training loss: tensor(0.7230) feature loss: tensor(0.2416)
Local adapation with distilling: 0.0001
training loss: tensor(0.6912) feature loss: tensor(0.2644)
Global Model Acc on global data: 0.4187 length of data: 10000
-------------Round number:  96  -------------
selected users: [41, 28, 52, 15, 87, 17, 75, 42, 45, 49]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.6741) feature loss: tensor(0.2817)
Local adapation with distilling: 0.0001
training loss: tensor(0.6220) feature loss: tensor(0.2676)
Local adapation with distilling: 0.0001
training loss: tensor(0.8121) feature loss: tensor(0.3183)
Local adapation with distilling: 0.0001
training loss: tensor(0.6110) feature loss: tensor(0.2699)
Local adapation with distilling: 0.0001
training loss: tensor(0.7657) feature loss: tensor(0.2807)
Local adapation with distilling: 0.0001
training loss: tensor(0.7591) feature loss: tensor(0.2908)
Local adapation with distilling: 0.0001
training loss: tensor(0.6335) feature loss: tensor(0.3083)
Local adapation with distilling: 0.0001
training loss: tensor(0.8018) feature loss: tensor(0.2971)
Local adapation with distilling: 0.0001
training loss: tensor(0.6026) feature loss: tensor(0.2734)
Local adapation with distilling: 0.0001
training loss: tensor(0.6894) feature loss: tensor(0.2779)
Global Model Acc on global data: 0.4046 length of data: 10000
-------------Round number:  97  -------------
selected users: [31, 43, 64, 56, 85, 2, 70, 21, 34, 50]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.8047) feature loss: tensor(0.3387)
Local adapation with distilling: 0.0001
training loss: tensor(1.0658) feature loss: tensor(0.3707)
Local adapation with distilling: 0.0001
training loss: tensor(1.0123) feature loss: tensor(0.3948)
Local adapation with distilling: 0.0001
training loss: tensor(0.9153) feature loss: tensor(0.3355)
Local adapation with distilling: 0.0001
training loss: tensor(0.8016) feature loss: tensor(0.3653)
Local adapation with distilling: 0.0001
training loss: tensor(0.9578) feature loss: tensor(0.3388)
Local adapation with distilling: 0.0001
training loss: tensor(0.8588) feature loss: tensor(0.3340)
Local adapation with distilling: 0.0001
training loss: tensor(0.8125) feature loss: tensor(0.3444)
Local adapation with distilling: 0.0001
training loss: tensor(0.9950) feature loss: tensor(0.3534)
Local adapation with distilling: 0.0001
training loss: tensor(1.0269) feature loss: tensor(0.4026)
Global Model Acc on global data: 0.4363 length of data: 10000
-------------Round number:  98  -------------
selected users: [11, 48, 97, 14, 22, 36, 99, 47, 33, 81]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.7328) feature loss: tensor(0.2906)
Local adapation with distilling: 0.0001
training loss: tensor(0.7313) feature loss: tensor(0.2891)
Local adapation with distilling: 0.0001
training loss: tensor(0.7778) feature loss: tensor(0.2964)
Local adapation with distilling: 0.0001
training loss: tensor(0.7228) feature loss: tensor(0.2856)
Local adapation with distilling: 0.0001
training loss: tensor(0.8934) feature loss: tensor(0.2980)
Local adapation with distilling: 0.0001
training loss: tensor(0.8247) feature loss: tensor(0.2966)
Local adapation with distilling: 0.0001
training loss: tensor(0.7891) feature loss: tensor(0.3105)
Local adapation with distilling: 0.0001
training loss: tensor(0.9776) feature loss: tensor(0.4006)
Local adapation with distilling: 0.0001
training loss: tensor(0.8127) feature loss: tensor(0.3121)
Local adapation with distilling: 0.0001
training loss: tensor(0.7760) feature loss: tensor(0.2938)
Global Model Acc on global data: 0.4523 length of data: 10000
-------------Round number:  99  -------------
selected users: [14, 34, 30, 78, 16, 15, 91, 38, 10, 85]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.6344) feature loss: tensor(0.2606)
Local adapation with distilling: 0.0001
training loss: tensor(0.6739) feature loss: tensor(0.2629)
Local adapation with distilling: 0.0001
training loss: tensor(0.6561) feature loss: tensor(0.2641)
Local adapation with distilling: 0.0001
training loss: tensor(0.6476) feature loss: tensor(0.2607)
Local adapation with distilling: 0.0001
training loss: tensor(0.6571) feature loss: tensor(0.2627)
Local adapation with distilling: 0.0001
training loss: tensor(0.6471) feature loss: tensor(0.2641)
Local adapation with distilling: 0.0001
training loss: tensor(0.6594) feature loss: tensor(0.2790)
Local adapation with distilling: 0.0001
training loss: tensor(0.6249) feature loss: tensor(0.2633)
Local adapation with distilling: 0.0001
training loss: tensor(0.6637) feature loss: tensor(0.2642)
Local adapation with distilling: 0.0001
training loss: tensor(0.6313) feature loss: tensor(0.2639)
Global Model Acc on global data: 0.4361 length of data: 10000
