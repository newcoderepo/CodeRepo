nohup: ignoring input
================================================================================
Summary of training process:
Dataset                : Cifar10
Batch size             : 64
Learing rate           : 0.001
Number of total clients: 100
Split method           : quantity
Split parameter        : 1.0
Clients per round      : 10
Number of global rounds: 100
Number of local rounds : 10
Feature from layer     : 0
Feature percentage     : 0.1
Local training loss    : CE_CE_NT
Loss of beta           : 1.0
Algorithm              : FedFea
Modelname              : MOBNET
Mode                   : training
Seed                   : 0
================================================================================
Files already downloaded and verified
Files already downloaded and verified
Class frequencies:
client,class0,class1,class2,class3,class4,class5,class6,class7,class8,class9,Amount
Client   0,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client   1,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client   2,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client   3,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,500
Client   4,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,500
Client   5,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,500
Client   6,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,500
Client   7,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,500
Client   8,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,500
Client   9,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,500
Client  10,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  11,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  12,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  13,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  14,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,500
Client  15,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,500
Client  16,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,500
Client  17,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,500
Client  18,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,500
Client  19,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,500
Client  20,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  21,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  22,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  23,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  24,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,500
Client  25,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,500
Client  26,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,500
Client  27,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,500
Client  28,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,500
Client  29,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,500
Client  30,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  31,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  32,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  33,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  34,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,500
Client  35,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,500
Client  36,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,500
Client  37,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,500
Client  38,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,500
Client  39,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,500
Client  40,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  41,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  42,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  43,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  44,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,500
Client  45,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,500
Client  46,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,500
Client  47,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,500
Client  48,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,500
Client  49,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,500
Client  50,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  51,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  52,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  53,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  54,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,500
Client  55,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,500
Client  56,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,500
Client  57,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,500
Client  58,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,500
Client  59,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,500
Client  60,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  61,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  62,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  63,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  64,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,500
Client  65,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,500
Client  66,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,500
Client  67,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,500
Client  68,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,500
Client  69,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,500
Client  70,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  71,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  72,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  73,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  74,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,500
Client  75,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,500
Client  76,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,500
Client  77,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,500
Client  78,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,500
Client  79,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,500
Client  80,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  81,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  82,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  83,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  84,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,500
Client  85,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,500
Client  86,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,500
Client  87,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,500
Client  88,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,500
Client  89,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,500
Client  90,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  91,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  92,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  93,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  94,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,500
Client  95,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,500
Client  96,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,500
Client  97,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,500
Client  98,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,500
Client  99,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,500
0 [0] [0] [1 2 3 4 5 6 7 8 9]
0 training: Counter({0: 500}) testing iid: Counter({0: 1000})
1 [1] [1] [0 2 3 4 5 6 7 8 9]
1 training: Counter({1: 500}) testing iid: Counter({1: 1000})
2 [2] [2] [0 1 3 4 5 6 7 8 9]
2 training: Counter({2: 500}) testing iid: Counter({2: 1000})
3 [3] [3] [0 1 2 4 5 6 7 8 9]
3 training: Counter({3: 500}) testing iid: Counter({3: 1000})
4 [4] [4] [0 1 2 3 5 6 7 8 9]
4 training: Counter({4: 500}) testing iid: Counter({4: 1000})
5 [5] [5] [0 1 2 3 4 6 7 8 9]
5 training: Counter({5: 500}) testing iid: Counter({5: 1000})
6 [6] [6] [0 1 2 3 4 5 7 8 9]
6 training: Counter({6: 500}) testing iid: Counter({6: 1000})
7 [7] [7] [0 1 2 3 4 5 6 8 9]
7 training: Counter({7: 500}) testing iid: Counter({7: 1000})
8 [8] [8] [0 1 2 3 4 5 6 7 9]
8 training: Counter({8: 500}) testing iid: Counter({8: 1000})
9 [9] [9] [0 1 2 3 4 5 6 7 8]
9 training: Counter({9: 500}) testing iid: Counter({9: 1000})
10 [0] [0] [1 2 3 4 5 6 7 8 9]
10 training: Counter({0: 500}) testing iid: Counter({0: 1000})
11 [1] [1] [0 2 3 4 5 6 7 8 9]
11 training: Counter({1: 500}) testing iid: Counter({1: 1000})
12 [2] [2] [0 1 3 4 5 6 7 8 9]
12 training: Counter({2: 500}) testing iid: Counter({2: 1000})
13 [3] [3] [0 1 2 4 5 6 7 8 9]
13 training: Counter({3: 500}) testing iid: Counter({3: 1000})
14 [4] [4] [0 1 2 3 5 6 7 8 9]
14 training: Counter({4: 500}) testing iid: Counter({4: 1000})
15 [5] [5] [0 1 2 3 4 6 7 8 9]
15 training: Counter({5: 500}) testing iid: Counter({5: 1000})
16 [6] [6] [0 1 2 3 4 5 7 8 9]
16 training: Counter({6: 500}) testing iid: Counter({6: 1000})
17 [7] [7] [0 1 2 3 4 5 6 8 9]
17 training: Counter({7: 500}) testing iid: Counter({7: 1000})
18 [8] [8] [0 1 2 3 4 5 6 7 9]
18 training: Counter({8: 500}) testing iid: Counter({8: 1000})
19 [9] [9] [0 1 2 3 4 5 6 7 8]
19 training: Counter({9: 500}) testing iid: Counter({9: 1000})
20 [0] [0] [1 2 3 4 5 6 7 8 9]
20 training: Counter({0: 500}) testing iid: Counter({0: 1000})
21 [1] [1] [0 2 3 4 5 6 7 8 9]
21 training: Counter({1: 500}) testing iid: Counter({1: 1000})
22 [2] [2] [0 1 3 4 5 6 7 8 9]
22 training: Counter({2: 500}) testing iid: Counter({2: 1000})
23 [3] [3] [0 1 2 4 5 6 7 8 9]
23 training: Counter({3: 500}) testing iid: Counter({3: 1000})
24 [4] [4] [0 1 2 3 5 6 7 8 9]
24 training: Counter({4: 500}) testing iid: Counter({4: 1000})
25 [5] [5] [0 1 2 3 4 6 7 8 9]
25 training: Counter({5: 500}) testing iid: Counter({5: 1000})
26 [6] [6] [0 1 2 3 4 5 7 8 9]
26 training: Counter({6: 500}) testing iid: Counter({6: 1000})
27 [7] [7] [0 1 2 3 4 5 6 8 9]
27 training: Counter({7: 500}) testing iid: Counter({7: 1000})
28 [8] [8] [0 1 2 3 4 5 6 7 9]
28 training: Counter({8: 500}) testing iid: Counter({8: 1000})
29 [9] [9] [0 1 2 3 4 5 6 7 8]
29 training: Counter({9: 500}) testing iid: Counter({9: 1000})
30 [0] [0] [1 2 3 4 5 6 7 8 9]
30 training: Counter({0: 500}) testing iid: Counter({0: 1000})
31 [1] [1] [0 2 3 4 5 6 7 8 9]
31 training: Counter({1: 500}) testing iid: Counter({1: 1000})
32 [2] [2] [0 1 3 4 5 6 7 8 9]
32 training: Counter({2: 500}) testing iid: Counter({2: 1000})
33 [3] [3] [0 1 2 4 5 6 7 8 9]
33 training: Counter({3: 500}) testing iid: Counter({3: 1000})
34 [4] [4] [0 1 2 3 5 6 7 8 9]
34 training: Counter({4: 500}) testing iid: Counter({4: 1000})
35 [5] [5] [0 1 2 3 4 6 7 8 9]
35 training: Counter({5: 500}) testing iid: Counter({5: 1000})
36 [6] [6] [0 1 2 3 4 5 7 8 9]
36 training: Counter({6: 500}) testing iid: Counter({6: 1000})
37 [7] [7] [0 1 2 3 4 5 6 8 9]
37 training: Counter({7: 500}) testing iid: Counter({7: 1000})
38 [8] [8] [0 1 2 3 4 5 6 7 9]
38 training: Counter({8: 500}) testing iid: Counter({8: 1000})
39 [9] [9] [0 1 2 3 4 5 6 7 8]
39 training: Counter({9: 500}) testing iid: Counter({9: 1000})
40 [0] [0] [1 2 3 4 5 6 7 8 9]
40 training: Counter({0: 500}) testing iid: Counter({0: 1000})
41 [1] [1] [0 2 3 4 5 6 7 8 9]
41 training: Counter({1: 500}) testing iid: Counter({1: 1000})
42 [2] [2] [0 1 3 4 5 6 7 8 9]
42 training: Counter({2: 500}) testing iid: Counter({2: 1000})
43 [3] [3] [0 1 2 4 5 6 7 8 9]
43 training: Counter({3: 500}) testing iid: Counter({3: 1000})
44 [4] [4] [0 1 2 3 5 6 7 8 9]
44 training: Counter({4: 500}) testing iid: Counter({4: 1000})
45 [5] [5] [0 1 2 3 4 6 7 8 9]
45 training: Counter({5: 500}) testing iid: Counter({5: 1000})
46 [6] [6] [0 1 2 3 4 5 7 8 9]
46 training: Counter({6: 500}) testing iid: Counter({6: 1000})
47 [7] [7] [0 1 2 3 4 5 6 8 9]
47 training: Counter({7: 500}) testing iid: Counter({7: 1000})
48 [8] [8] [0 1 2 3 4 5 6 7 9]
48 training: Counter({8: 500}) testing iid: Counter({8: 1000})
49 [9] [9] [0 1 2 3 4 5 6 7 8]
49 training: Counter({9: 500}) testing iid: Counter({9: 1000})
50 [0] [0] [1 2 3 4 5 6 7 8 9]
50 training: Counter({0: 500}) testing iid: Counter({0: 1000})
51 [1] [1] [0 2 3 4 5 6 7 8 9]
51 training: Counter({1: 500}) testing iid: Counter({1: 1000})
52 [2] [2] [0 1 3 4 5 6 7 8 9]
52 training: Counter({2: 500}) testing iid: Counter({2: 1000})
53 [3] [3] [0 1 2 4 5 6 7 8 9]
53 training: Counter({3: 500}) testing iid: Counter({3: 1000})
54 [4] [4] [0 1 2 3 5 6 7 8 9]
54 training: Counter({4: 500}) testing iid: Counter({4: 1000})
55 [5] [5] [0 1 2 3 4 6 7 8 9]
55 training: Counter({5: 500}) testing iid: Counter({5: 1000})
56 [6] [6] [0 1 2 3 4 5 7 8 9]
56 training: Counter({6: 500}) testing iid: Counter({6: 1000})
57 [7] [7] [0 1 2 3 4 5 6 8 9]
57 training: Counter({7: 500}) testing iid: Counter({7: 1000})
58 [8] [8] [0 1 2 3 4 5 6 7 9]
58 training: Counter({8: 500}) testing iid: Counter({8: 1000})
59 [9] [9] [0 1 2 3 4 5 6 7 8]
59 training: Counter({9: 500}) testing iid: Counter({9: 1000})
60 [0] [0] [1 2 3 4 5 6 7 8 9]
60 training: Counter({0: 500}) testing iid: Counter({0: 1000})
61 [1] [1] [0 2 3 4 5 6 7 8 9]
61 training: Counter({1: 500}) testing iid: Counter({1: 1000})
62 [2] [2] [0 1 3 4 5 6 7 8 9]
62 training: Counter({2: 500}) testing iid: Counter({2: 1000})
63 [3] [3] [0 1 2 4 5 6 7 8 9]
63 training: Counter({3: 500}) testing iid: Counter({3: 1000})
64 [4] [4] [0 1 2 3 5 6 7 8 9]
64 training: Counter({4: 500}) testing iid: Counter({4: 1000})
65 [5] [5] [0 1 2 3 4 6 7 8 9]
65 training: Counter({5: 500}) testing iid: Counter({5: 1000})
66 [6] [6] [0 1 2 3 4 5 7 8 9]
66 training: Counter({6: 500}) testing iid: Counter({6: 1000})
67 [7] [7] [0 1 2 3 4 5 6 8 9]
67 training: Counter({7: 500}) testing iid: Counter({7: 1000})
68 [8] [8] [0 1 2 3 4 5 6 7 9]
68 training: Counter({8: 500}) testing iid: Counter({8: 1000})
69 [9] [9] [0 1 2 3 4 5 6 7 8]
69 training: Counter({9: 500}) testing iid: Counter({9: 1000})
70 [0] [0] [1 2 3 4 5 6 7 8 9]
70 training: Counter({0: 500}) testing iid: Counter({0: 1000})
71 [1] [1] [0 2 3 4 5 6 7 8 9]
71 training: Counter({1: 500}) testing iid: Counter({1: 1000})
72 [2] [2] [0 1 3 4 5 6 7 8 9]
72 training: Counter({2: 500}) testing iid: Counter({2: 1000})
73 [3] [3] [0 1 2 4 5 6 7 8 9]
73 training: Counter({3: 500}) testing iid: Counter({3: 1000})
74 [4] [4] [0 1 2 3 5 6 7 8 9]
74 training: Counter({4: 500}) testing iid: Counter({4: 1000})
75 [5] [5] [0 1 2 3 4 6 7 8 9]
75 training: Counter({5: 500}) testing iid: Counter({5: 1000})
76 [6] [6] [0 1 2 3 4 5 7 8 9]
76 training: Counter({6: 500}) testing iid: Counter({6: 1000})
77 [7] [7] [0 1 2 3 4 5 6 8 9]
77 training: Counter({7: 500}) testing iid: Counter({7: 1000})
78 [8] [8] [0 1 2 3 4 5 6 7 9]
78 training: Counter({8: 500}) testing iid: Counter({8: 1000})
79 [9] [9] [0 1 2 3 4 5 6 7 8]
79 training: Counter({9: 500}) testing iid: Counter({9: 1000})
80 [0] [0] [1 2 3 4 5 6 7 8 9]
80 training: Counter({0: 500}) testing iid: Counter({0: 1000})
81 [1] [1] [0 2 3 4 5 6 7 8 9]
81 training: Counter({1: 500}) testing iid: Counter({1: 1000})
82 [2] [2] [0 1 3 4 5 6 7 8 9]
82 training: Counter({2: 500}) testing iid: Counter({2: 1000})
83 [3] [3] [0 1 2 4 5 6 7 8 9]
83 training: Counter({3: 500}) testing iid: Counter({3: 1000})
84 [4] [4] [0 1 2 3 5 6 7 8 9]
84 training: Counter({4: 500}) testing iid: Counter({4: 1000})
85 [5] [5] [0 1 2 3 4 6 7 8 9]
85 training: Counter({5: 500}) testing iid: Counter({5: 1000})
86 [6] [6] [0 1 2 3 4 5 7 8 9]
86 training: Counter({6: 500}) testing iid: Counter({6: 1000})
87 [7] [7] [0 1 2 3 4 5 6 8 9]
87 training: Counter({7: 500}) testing iid: Counter({7: 1000})
88 [8] [8] [0 1 2 3 4 5 6 7 9]
88 training: Counter({8: 500}) testing iid: Counter({8: 1000})
89 [9] [9] [0 1 2 3 4 5 6 7 8]
89 training: Counter({9: 500}) testing iid: Counter({9: 1000})
90 [0] [0] [1 2 3 4 5 6 7 8 9]
90 training: Counter({0: 500}) testing iid: Counter({0: 1000})
91 [1] [1] [0 2 3 4 5 6 7 8 9]
91 training: Counter({1: 500}) testing iid: Counter({1: 1000})
92 [2] [2] [0 1 3 4 5 6 7 8 9]
92 training: Counter({2: 500}) testing iid: Counter({2: 1000})
93 [3] [3] [0 1 2 4 5 6 7 8 9]
93 training: Counter({3: 500}) testing iid: Counter({3: 1000})
94 [4] [4] [0 1 2 3 5 6 7 8 9]
94 training: Counter({4: 500}) testing iid: Counter({4: 1000})
95 [5] [5] [0 1 2 3 4 6 7 8 9]
95 training: Counter({5: 500}) testing iid: Counter({5: 1000})
96 [6] [6] [0 1 2 3 4 5 7 8 9]
96 training: Counter({6: 500}) testing iid: Counter({6: 1000})
97 [7] [7] [0 1 2 3 4 5 6 8 9]
97 training: Counter({7: 500}) testing iid: Counter({7: 1000})
98 [8] [8] [0 1 2 3 4 5 6 7 9]
98 training: Counter({8: 500}) testing iid: Counter({8: 1000})
99 [9] [9] [0 1 2 3 4 5 6 7 8]
99 training: Counter({9: 500}) testing iid: Counter({9: 1000})
Num_samples of Training set per client
Total_training_samples: 50000
Global test set: 10000
Finish Generating Samples, distribution saved
MobileNetV2(
  (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (layers): Sequential(
    (0): Block(
      (conv1): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): Block(
      (conv1): Conv2d(16, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=96, bias=False)
      (bn2): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(96, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(16, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (2): Block(
      (conv1): Conv2d(24, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=144, bias=False)
      (bn2): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(144, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (3): Block(
      (conv1): Conv2d(24, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(144, 144, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=144, bias=False)
      (bn2): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(144, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (4): Block(
      (conv1): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
      (bn2): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(192, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (5): Block(
      (conv1): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
      (bn2): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(192, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (6): Block(
      (conv1): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(192, 192, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=192, bias=False)
      (bn2): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(192, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (7): Block(
      (conv1): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
      (bn2): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (8): Block(
      (conv1): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
      (bn2): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (9): Block(
      (conv1): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
      (bn2): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (10): Block(
      (conv1): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
      (bn2): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(384, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(64, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (11): Block(
      (conv1): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)
      (bn2): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (12): Block(
      (conv1): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)
      (bn2): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (13): Block(
      (conv1): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(576, 576, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=576, bias=False)
      (bn2): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(576, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (14): Block(
      (conv1): Conv2d(160, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(960, 960, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=960, bias=False)
      (bn2): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(960, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (15): Block(
      (conv1): Conv2d(160, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(960, 960, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=960, bias=False)
      (bn2): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(960, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (16): Block(
      (conv1): Conv2d(160, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(960, 960, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=960, bias=False)
      (bn2): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(960, 320, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(160, 320, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (conv2): Conv2d(320, 1280, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn2): BatchNorm2d(1280, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (linear): Linear(in_features=1280, out_features=10, bias=True)
)
number of parameters: 2296922
clients initializting...
output size: 10
  0%|          | 0/100 [00:00<?, ?it/s]  1%|          | 1/100 [00:04<06:50,  4.14s/it]  2%|▏         | 2/100 [00:04<05:00,  3.07s/it]  3%|▎         | 3/100 [00:05<03:46,  2.33s/it]  4%|▍         | 4/100 [00:05<02:53,  1.81s/it]  5%|▌         | 5/100 [00:06<02:16,  1.43s/it]  6%|▌         | 6/100 [00:07<01:49,  1.17s/it]  7%|▋         | 7/100 [00:07<01:31,  1.02it/s]  8%|▊         | 8/100 [00:08<01:18,  1.17it/s]  9%|▉         | 9/100 [00:08<01:09,  1.31it/s] 10%|█         | 10/100 [00:09<01:02,  1.43it/s] 11%|█         | 11/100 [00:09<00:58,  1.53it/s] 12%|█▏        | 12/100 [00:10<00:54,  1.62it/s] 13%|█▎        | 13/100 [00:10<00:52,  1.66it/s] 14%|█▍        | 14/100 [00:11<00:50,  1.71it/s] 15%|█▌        | 15/100 [00:11<00:48,  1.76it/s] 16%|█▌        | 16/100 [00:12<00:47,  1.77it/s] 17%|█▋        | 17/100 [00:13<00:46,  1.78it/s] 18%|█▊        | 18/100 [00:13<00:45,  1.80it/s] 19%|█▉        | 19/100 [00:14<00:45,  1.80it/s] 20%|██        | 20/100 [00:14<00:44,  1.81it/s] 21%|██        | 21/100 [00:15<00:43,  1.81it/s] 22%|██▏       | 22/100 [00:15<00:42,  1.84it/s] 23%|██▎       | 23/100 [00:16<00:41,  1.84it/s] 24%|██▍       | 24/100 [00:16<00:41,  1.84it/s] 25%|██▌       | 25/100 [00:17<00:40,  1.85it/s] 26%|██▌       | 26/100 [00:17<00:39,  1.86it/s] 27%|██▋       | 27/100 [00:18<00:39,  1.86it/s] 28%|██▊       | 28/100 [00:19<00:38,  1.85it/s] 29%|██▉       | 29/100 [00:19<00:38,  1.85it/s] 30%|███       | 30/100 [00:20<00:38,  1.84it/s] 31%|███       | 31/100 [00:20<00:37,  1.82it/s] 32%|███▏      | 32/100 [00:21<00:37,  1.83it/s] 33%|███▎      | 33/100 [00:21<00:36,  1.85it/s] 34%|███▍      | 34/100 [00:22<00:36,  1.83it/s] 35%|███▌      | 35/100 [00:22<00:35,  1.85it/s] 36%|███▌      | 36/100 [00:23<00:34,  1.84it/s] 37%|███▋      | 37/100 [00:23<00:34,  1.84it/s] 38%|███▊      | 38/100 [00:24<00:33,  1.83it/s] 39%|███▉      | 39/100 [00:25<00:33,  1.83it/s] 40%|████      | 40/100 [00:25<00:32,  1.85it/s] 41%|████      | 41/100 [00:29<01:29,  1.52s/it] 42%|████▏     | 42/100 [00:29<01:11,  1.23s/it] 43%|████▎     | 43/100 [00:30<00:58,  1.03s/it] 44%|████▍     | 44/100 [00:30<00:49,  1.13it/s] 45%|████▌     | 45/100 [00:31<00:43,  1.27it/s] 46%|████▌     | 46/100 [00:32<00:38,  1.40it/s] 47%|████▋     | 47/100 [00:32<00:35,  1.51it/s] 48%|████▊     | 48/100 [00:33<00:32,  1.60it/s] 49%|████▉     | 49/100 [00:33<00:30,  1.68it/s] 50%|█████     | 50/100 [00:34<00:29,  1.71it/s] 51%|█████     | 51/100 [00:34<00:27,  1.76it/s] 52%|█████▏    | 52/100 [00:35<00:26,  1.78it/s] 53%|█████▎    | 53/100 [00:35<00:25,  1.81it/s] 54%|█████▍    | 54/100 [00:36<00:25,  1.83it/s] 55%|█████▌    | 55/100 [00:36<00:24,  1.84it/s] 56%|█████▌    | 56/100 [00:37<00:23,  1.83it/s] 57%|█████▋    | 57/100 [00:38<00:23,  1.83it/s] 58%|█████▊    | 58/100 [00:38<00:22,  1.85it/s] 59%|█████▉    | 59/100 [00:39<00:22,  1.84it/s] 60%|██████    | 60/100 [00:39<00:21,  1.83it/s] 61%|██████    | 61/100 [00:40<00:21,  1.85it/s] 62%|██████▏   | 62/100 [00:40<00:20,  1.86it/s] 63%|██████▎   | 63/100 [00:41<00:19,  1.87it/s] 64%|██████▍   | 64/100 [00:41<00:19,  1.87it/s] 65%|██████▌   | 65/100 [00:42<00:18,  1.89it/s] 66%|██████▌   | 66/100 [00:42<00:18,  1.88it/s] 67%|██████▋   | 67/100 [00:43<00:17,  1.86it/s] 68%|██████▊   | 68/100 [00:43<00:17,  1.86it/s] 69%|██████▉   | 69/100 [00:44<00:16,  1.86it/s] 70%|███████   | 70/100 [00:44<00:15,  1.88it/s] 71%|███████   | 71/100 [00:45<00:15,  1.84it/s] 72%|███████▏  | 72/100 [00:46<00:15,  1.78it/s] 73%|███████▎  | 73/100 [00:46<00:15,  1.76it/s] 74%|███████▍  | 74/100 [00:47<00:15,  1.72it/s] 75%|███████▌  | 75/100 [00:47<00:14,  1.72it/s] 76%|███████▌  | 76/100 [00:48<00:13,  1.74it/s] 77%|███████▋  | 77/100 [00:49<00:13,  1.75it/s] 78%|███████▊  | 78/100 [00:49<00:12,  1.76it/s] 79%|███████▉  | 79/100 [00:50<00:11,  1.77it/s] 80%|████████  | 80/100 [00:50<00:11,  1.78it/s] 81%|████████  | 81/100 [00:51<00:10,  1.78it/s] 82%|████████▏ | 82/100 [00:51<00:10,  1.78it/s] 83%|████████▎ | 83/100 [00:55<00:26,  1.57s/it] 84%|████████▍ | 84/100 [00:56<00:20,  1.26s/it] 85%|████████▌ | 85/100 [00:56<00:15,  1.04s/it] 86%|████████▌ | 86/100 [00:57<00:12,  1.12it/s] 87%|████████▋ | 87/100 [00:57<00:10,  1.26it/s] 88%|████████▊ | 88/100 [00:58<00:08,  1.40it/s] 89%|████████▉ | 89/100 [00:59<00:07,  1.51it/s] 90%|█████████ | 90/100 [00:59<00:06,  1.59it/s] 91%|█████████ | 91/100 [01:00<00:05,  1.65it/s] 92%|█████████▏| 92/100 [01:00<00:04,  1.69it/s] 93%|█████████▎| 93/100 [01:01<00:04,  1.73it/s] 94%|█████████▍| 94/100 [01:01<00:03,  1.75it/s] 95%|█████████▌| 95/100 [01:02<00:02,  1.78it/s] 96%|█████████▌| 96/100 [01:02<00:02,  1.80it/s] 97%|█████████▋| 97/100 [01:03<00:01,  1.80it/s] 98%|█████████▊| 98/100 [01:03<00:01,  1.80it/s] 99%|█████████▉| 99/100 [01:04<00:00,  1.80it/s]100%|██████████| 100/100 [01:05<00:00,  1.80it/s]100%|██████████| 100/100 [01:05<00:00,  1.54it/s]
Number of users per round / total users: 10  /  100
Finished creating FL server.
=== Training starts: algorithm FedFea ===
-------------Round number:  0  -------------
selected users: [26, 86, 2, 55, 75, 93, 16, 73, 54, 95]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.001
training loss: tensor(1.5162) feature loss: tensor(0.3308)
Local adapation with distilling: 0.001
training loss: tensor(1.5214) feature loss: tensor(0.3463)
Local adapation with distilling: 0.001
training loss: tensor(1.6379) feature loss: tensor(0.3781)
Local adapation with distilling: 0.001
training loss: tensor(1.4542) feature loss: tensor(0.3379)
Local adapation with distilling: 0.001
training loss: tensor(1.4359) feature loss: tensor(0.3365)
Local adapation with distilling: 0.001
training loss: tensor(1.6188) feature loss: tensor(0.3773)
Local adapation with distilling: 0.001
training loss: tensor(1.4916) feature loss: tensor(0.3178)
Local adapation with distilling: 0.001
training loss: tensor(1.6495) feature loss: tensor(0.4221)
Local adapation with distilling: 0.001
training loss: tensor(1.6284) feature loss: tensor(0.4001)
Local adapation with distilling: 0.001
training loss: tensor(1.4334) feature loss: tensor(0.3189)
Global Model Acc on global data: 0.1003 length of data: 10000
save a model
-------------Round number:  1  -------------
selected users: [80, 84, 33, 81, 93, 17, 36, 82, 69, 65]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.000982
training loss: tensor(1.5500) feature loss: tensor(0.4418)
Local adapation with distilling: 0.000982
training loss: tensor(1.6903) feature loss: tensor(0.4241)
Local adapation with distilling: 0.000982
training loss: tensor(1.3348) feature loss: tensor(0.3096)
Local adapation with distilling: 0.000982
training loss: tensor(1.5860) feature loss: tensor(0.4751)
Local adapation with distilling: 0.000982
training loss: tensor(1.3639) feature loss: tensor(0.3604)
Local adapation with distilling: 0.000982
training loss: tensor(1.6853) feature loss: tensor(0.5009)
Local adapation with distilling: 0.000982
training loss: tensor(1.4696) feature loss: tensor(0.3259)
Local adapation with distilling: 0.000982
training loss: tensor(1.6483) feature loss: tensor(0.4634)
Local adapation with distilling: 0.000982
training loss: tensor(1.6563) feature loss: tensor(0.4819)
Local adapation with distilling: 0.000982
training loss: tensor(1.4567) feature loss: tensor(0.4461)
Global Model Acc on global data: 0.1146 length of data: 10000
save a model
-------------Round number:  2  -------------
selected users: [83, 30, 56, 24, 16, 23, 2, 27, 28, 13]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.000964
training loss: tensor(0.9882) feature loss: tensor(0.3547)
Local adapation with distilling: 0.000964
training loss: tensor(1.1795) feature loss: tensor(0.4272)
Local adapation with distilling: 0.000964
training loss: tensor(1.0799) feature loss: tensor(0.3300)
Local adapation with distilling: 0.000964
training loss: tensor(1.2203) feature loss: tensor(0.2867)
Local adapation with distilling: 0.000964
training loss: tensor(1.1026) feature loss: tensor(0.3296)
Local adapation with distilling: 0.000964
training loss: tensor(0.9598) feature loss: tensor(0.3545)
Local adapation with distilling: 0.000964
training loss: tensor(1.3048) feature loss: tensor(0.4055)
Local adapation with distilling: 0.000964
training loss: tensor(1.2575) feature loss: tensor(0.4653)
Local adapation with distilling: 0.000964
training loss: tensor(1.2781) feature loss: tensor(0.4751)
Local adapation with distilling: 0.000964
training loss: tensor(0.9444) feature loss: tensor(0.3341)
Global Model Acc on global data: 0.1336 length of data: 10000
save a model
-------------Round number:  3  -------------
selected users: [93, 67, 6, 64, 96, 83, 98, 42, 25, 15]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.000946
training loss: tensor(0.9105) feature loss: tensor(0.3521)
Local adapation with distilling: 0.000946
training loss: tensor(1.1518) feature loss: tensor(0.4170)
Local adapation with distilling: 0.000946
training loss: tensor(0.9993) feature loss: tensor(0.3460)
Local adapation with distilling: 0.000946
training loss: tensor(1.0358) feature loss: tensor(0.3099)
Local adapation with distilling: 0.000946
training loss: tensor(0.9296) feature loss: tensor(0.3224)
Local adapation with distilling: 0.000946
training loss: tensor(0.9570) feature loss: tensor(0.3381)
Local adapation with distilling: 0.000946
training loss: tensor(1.0821) feature loss: tensor(0.3747)
Local adapation with distilling: 0.000946
training loss: tensor(1.0925) feature loss: tensor(0.3264)
Local adapation with distilling: 0.000946
training loss: tensor(1.0513) feature loss: tensor(0.3557)
Local adapation with distilling: 0.000946
training loss: tensor(1.0337) feature loss: tensor(0.3674)
Global Model Acc on global data: 0.1273 length of data: 10000
-------------Round number:  4  -------------
selected users: [20, 10, 96, 16, 63, 24, 53, 97, 41, 47]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(0.8745) feature loss: tensor(0.3359)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(0.9792) feature loss: tensor(0.3708)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(0.8347) feature loss: tensor(0.3444)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(0.8842) feature loss: tensor(0.3539)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(0.8319) feature loss: tensor(0.3590)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(0.8598) feature loss: tensor(0.2754)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(0.8031) feature loss: tensor(0.3483)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(0.8851) feature loss: tensor(0.3820)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.0212) feature loss: tensor(0.4127)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(0.8956) feature loss: tensor(0.3779)
Global Model Acc on global data: 0.1443 length of data: 10000
save a model
-------------Round number:  5  -------------
selected users: [66, 32, 46, 28, 74, 23, 10, 20, 17, 35]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.00091
training loss: tensor(0.7272) feature loss: tensor(0.3076)
Local adapation with distilling: 0.00091
training loss: tensor(0.8568) feature loss: tensor(0.3418)
Local adapation with distilling: 0.00091
training loss: tensor(0.7788) feature loss: tensor(0.3283)
Local adapation with distilling: 0.00091
training loss: tensor(0.9560) feature loss: tensor(0.3545)
Local adapation with distilling: 0.00091
training loss: tensor(0.8475) feature loss: tensor(0.2565)
Local adapation with distilling: 0.00091
training loss: tensor(0.8734) feature loss: tensor(0.3469)
Local adapation with distilling: 0.00091
training loss: tensor(0.7921) feature loss: tensor(0.3227)
Local adapation with distilling: 0.00091
training loss: tensor(0.8142) feature loss: tensor(0.3301)
Local adapation with distilling: 0.00091
training loss: tensor(0.9043) feature loss: tensor(0.3605)
Local adapation with distilling: 0.00091
training loss: tensor(0.8922) feature loss: tensor(0.3357)
Global Model Acc on global data: 0.1749 length of data: 10000
save a model
-------------Round number:  6  -------------
selected users: [17, 34, 0, 45, 60, 86, 20, 47, 44, 81]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.000892
training loss: tensor(0.8002) feature loss: tensor(0.3164)
Local adapation with distilling: 0.000892
training loss: tensor(0.6750) feature loss: tensor(0.2684)
Local adapation with distilling: 0.000892
training loss: tensor(0.6724) feature loss: tensor(0.2953)
Local adapation with distilling: 0.000892
training loss: tensor(0.8230) feature loss: tensor(0.3296)
Local adapation with distilling: 0.000892
training loss: tensor(0.6738) feature loss: tensor(0.3063)
Local adapation with distilling: 0.000892
training loss: tensor(0.7389) feature loss: tensor(0.3106)
Local adapation with distilling: 0.000892
training loss: tensor(0.6630) feature loss: tensor(0.3073)
Local adapation with distilling: 0.000892
training loss: tensor(0.7216) feature loss: tensor(0.3236)
Local adapation with distilling: 0.000892
training loss: tensor(0.6844) feature loss: tensor(0.2743)
Local adapation with distilling: 0.000892
training loss: tensor(0.8541) feature loss: tensor(0.3471)
Global Model Acc on global data: 0.1806 length of data: 10000
save a model
-------------Round number:  7  -------------
selected users: [37, 26, 78, 91, 49, 15, 93, 71, 86, 22]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.000874
training loss: tensor(1.0913) feature loss: tensor(0.4649)
Local adapation with distilling: 0.000874
training loss: tensor(0.9505) feature loss: tensor(0.3993)
Local adapation with distilling: 0.000874
training loss: tensor(0.9963) feature loss: tensor(0.4237)
Local adapation with distilling: 0.000874
training loss: tensor(0.9716) feature loss: tensor(0.3975)
Local adapation with distilling: 0.000874
training loss: tensor(1.0717) feature loss: tensor(0.4352)
Local adapation with distilling: 0.000874
training loss: tensor(1.1032) feature loss: tensor(0.4491)
Local adapation with distilling: 0.000874
training loss: tensor(1.1238) feature loss: tensor(0.4287)
Local adapation with distilling: 0.000874
training loss: tensor(0.9702) feature loss: tensor(0.4061)
Local adapation with distilling: 0.000874
training loss: tensor(0.9672) feature loss: tensor(0.3961)
Local adapation with distilling: 0.000874
training loss: tensor(1.0613) feature loss: tensor(0.4476)
Global Model Acc on global data: 0.2162 length of data: 10000
save a model
-------------Round number:  8  -------------
selected users: [17, 23, 1, 44, 55, 99, 86, 29, 62, 33]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.000856
training loss: tensor(0.9269) feature loss: tensor(0.3799)
Local adapation with distilling: 0.000856
training loss: tensor(0.8382) feature loss: tensor(0.3580)
Local adapation with distilling: 0.000856
training loss: tensor(0.8876) feature loss: tensor(0.3925)
Local adapation with distilling: 0.000856
training loss: tensor(0.8571) feature loss: tensor(0.3572)
Local adapation with distilling: 0.000856
training loss: tensor(0.9910) feature loss: tensor(0.3878)
Local adapation with distilling: 0.000856
training loss: tensor(0.8900) feature loss: tensor(0.3699)
Local adapation with distilling: 0.000856
training loss: tensor(0.7675) feature loss: tensor(0.3462)
Local adapation with distilling: 0.000856
training loss: tensor(0.9122) feature loss: tensor(0.3709)
Local adapation with distilling: 0.000856
training loss: tensor(0.9298) feature loss: tensor(0.3737)
Local adapation with distilling: 0.000856
training loss: tensor(0.8290) feature loss: tensor(0.3497)
Global Model Acc on global data: 0.2023 length of data: 10000
-------------Round number:  9  -------------
selected users: [75, 42, 46, 68, 3, 39, 23, 20, 70, 73]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.7263) feature loss: tensor(0.3559)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.7926) feature loss: tensor(0.3237)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.8233) feature loss: tensor(0.3582)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.9073) feature loss: tensor(0.3794)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.6550) feature loss: tensor(0.3093)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.8773) feature loss: tensor(0.3447)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.6671) feature loss: tensor(0.3096)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.8667) feature loss: tensor(0.3904)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.7997) feature loss: tensor(0.3450)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.7068) feature loss: tensor(0.3173)
Global Model Acc on global data: 0.2361 length of data: 10000
save a model
-------------Round number:  10  -------------
selected users: [19, 14, 43, 37, 66, 3, 79, 41, 38, 68]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.7315) feature loss: tensor(0.3274)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.7924) feature loss: tensor(0.3458)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.5783) feature loss: tensor(0.2862)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.7452) feature loss: tensor(0.3216)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.7286) feature loss: tensor(0.2925)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.5707) feature loss: tensor(0.2780)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.7669) feature loss: tensor(0.3301)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.8585) feature loss: tensor(0.3468)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.7356) feature loss: tensor(0.3322)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.7758) feature loss: tensor(0.3511)
Global Model Acc on global data: 0.2619 length of data: 10000
save a model
-------------Round number:  11  -------------
selected users: [46, 49, 22, 58, 41, 98, 62, 29, 30, 51]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.5864) feature loss: tensor(0.2739)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.6921) feature loss: tensor(0.3179)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.7780) feature loss: tensor(0.3407)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.6258) feature loss: tensor(0.3019)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.7084) feature loss: tensor(0.3368)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.6800) feature loss: tensor(0.3091)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.7686) feature loss: tensor(0.3132)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.6971) feature loss: tensor(0.2897)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.7401) feature loss: tensor(0.3338)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.8008) feature loss: tensor(0.3492)
Global Model Acc on global data: 0.2705 length of data: 10000
save a model
-------------Round number:  12  -------------
selected users: [17, 41, 92, 14, 68, 31, 89, 15, 21, 60]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.8673) feature loss: tensor(0.3441)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.7494) feature loss: tensor(0.3438)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.6798) feature loss: tensor(0.2886)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.8288) feature loss: tensor(0.3843)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.7469) feature loss: tensor(0.3433)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.8108) feature loss: tensor(0.3442)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.6873) feature loss: tensor(0.3490)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.8893) feature loss: tensor(0.3900)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.7934) feature loss: tensor(0.3809)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.8407) feature loss: tensor(0.3851)
Global Model Acc on global data: 0.2815 length of data: 10000
save a model
-------------Round number:  13  -------------
selected users: [37, 62, 83, 14, 43, 9, 44, 31, 69, 57]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.8724) feature loss: tensor(0.3973)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.7385) feature loss: tensor(0.3499)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.7730) feature loss: tensor(0.3463)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.7458) feature loss: tensor(0.3387)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.8478) feature loss: tensor(0.3933)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.7333) feature loss: tensor(0.3587)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.7480) feature loss: tensor(0.3547)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.7757) feature loss: tensor(0.3684)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.7965) feature loss: tensor(0.3709)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.7839) feature loss: tensor(0.3633)
Global Model Acc on global data: 0.2359 length of data: 10000
-------------Round number:  14  -------------
selected users: [24, 39, 35, 44, 55, 70, 82, 40, 91, 65]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.000748
training loss: tensor(0.6038) feature loss: tensor(0.2717)
Local adapation with distilling: 0.000748
training loss: tensor(0.7908) feature loss: tensor(0.3506)
Local adapation with distilling: 0.000748
training loss: tensor(0.6506) feature loss: tensor(0.2791)
Local adapation with distilling: 0.000748
training loss: tensor(0.6212) feature loss: tensor(0.2942)
Local adapation with distilling: 0.000748
training loss: tensor(0.6180) feature loss: tensor(0.2840)
Local adapation with distilling: 0.000748
training loss: tensor(0.7041) feature loss: tensor(0.3095)
Local adapation with distilling: 0.000748
training loss: tensor(0.7051) feature loss: tensor(0.2966)
Local adapation with distilling: 0.000748
training loss: tensor(0.6771) feature loss: tensor(0.2989)
Local adapation with distilling: 0.000748
training loss: tensor(0.7899) feature loss: tensor(0.3405)
Local adapation with distilling: 0.000748
training loss: tensor(0.5626) feature loss: tensor(0.2821)
Global Model Acc on global data: 0.2396 length of data: 10000
-------------Round number:  15  -------------
selected users: [84, 36, 57, 51, 46, 78, 93, 14, 11, 59]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.00073
training loss: tensor(0.6335) feature loss: tensor(0.2859)
Local adapation with distilling: 0.00073
training loss: tensor(0.8742) feature loss: tensor(0.3880)
Local adapation with distilling: 0.00073
training loss: tensor(0.7665) feature loss: tensor(0.3461)
Local adapation with distilling: 0.00073
training loss: tensor(0.8326) feature loss: tensor(0.3529)
Local adapation with distilling: 0.00073
training loss: tensor(0.7631) feature loss: tensor(0.3255)
Local adapation with distilling: 0.00073
training loss: tensor(0.8764) feature loss: tensor(0.3876)
Local adapation with distilling: 0.00073
training loss: tensor(0.8123) feature loss: tensor(0.3728)
Local adapation with distilling: 0.00073
training loss: tensor(0.6676) feature loss: tensor(0.3023)
Local adapation with distilling: 0.00073
training loss: tensor(0.9082) feature loss: tensor(0.4301)
Local adapation with distilling: 0.00073
training loss: tensor(0.8793) feature loss: tensor(0.3591)
Global Model Acc on global data: 0.2309 length of data: 10000
-------------Round number:  16  -------------
selected users: [7, 25, 71, 42, 47, 29, 63, 88, 50, 9]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.000712
training loss: tensor(0.7679) feature loss: tensor(0.3741)
Local adapation with distilling: 0.000712
training loss: tensor(0.6240) feature loss: tensor(0.2798)
Local adapation with distilling: 0.000712
training loss: tensor(0.8021) feature loss: tensor(0.3564)
Local adapation with distilling: 0.000712
training loss: tensor(0.7481) feature loss: tensor(0.3395)
Local adapation with distilling: 0.000712
training loss: tensor(0.7207) feature loss: tensor(0.3175)
Local adapation with distilling: 0.000712
training loss: tensor(0.8370) feature loss: tensor(0.3462)
Local adapation with distilling: 0.000712
training loss: tensor(0.6669) feature loss: tensor(0.2943)
Local adapation with distilling: 0.000712
training loss: tensor(0.7850) feature loss: tensor(0.3379)
Local adapation with distilling: 0.000712
training loss: tensor(0.8602) feature loss: tensor(0.3587)
Local adapation with distilling: 0.000712
training loss: tensor(0.7917) feature loss: tensor(0.3686)
Global Model Acc on global data: 0.2756 length of data: 10000
-------------Round number:  17  -------------
selected users: [71, 28, 9, 4, 73, 34, 94, 92, 47, 37]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.000694
training loss: tensor(0.8343) feature loss: tensor(0.4138)
Local adapation with distilling: 0.000694
training loss: tensor(0.7423) feature loss: tensor(0.3762)
Local adapation with distilling: 0.000694
training loss: tensor(0.7181) feature loss: tensor(0.3610)
Local adapation with distilling: 0.000694
training loss: tensor(0.5988) feature loss: tensor(0.3182)
Local adapation with distilling: 0.000694
training loss: tensor(0.6505) feature loss: tensor(0.3833)
Local adapation with distilling: 0.000694
training loss: tensor(0.5977) feature loss: tensor(0.3024)
Local adapation with distilling: 0.000694
training loss: tensor(0.5344) feature loss: tensor(0.3013)
Local adapation with distilling: 0.000694
training loss: tensor(0.6757) feature loss: tensor(0.3517)
Local adapation with distilling: 0.000694
training loss: tensor(0.7188) feature loss: tensor(0.3603)
Local adapation with distilling: 0.000694
training loss: tensor(0.6467) feature loss: tensor(0.3398)
Global Model Acc on global data: 0.237 length of data: 10000
-------------Round number:  18  -------------
selected users: [53, 47, 43, 54, 33, 48, 0, 12, 44, 91]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.5690) feature loss: tensor(0.2303)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.5696) feature loss: tensor(0.2356)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.4994) feature loss: tensor(0.2374)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.4988) feature loss: tensor(0.2062)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.6012) feature loss: tensor(0.2402)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.6448) feature loss: tensor(0.2682)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.7483) feature loss: tensor(0.2871)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.6029) feature loss: tensor(0.2527)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.5206) feature loss: tensor(0.2178)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.6728) feature loss: tensor(0.2870)
Global Model Acc on global data: 0.2456 length of data: 10000
-------------Round number:  19  -------------
selected users: [85, 72, 16, 18, 2, 38, 90, 30, 83, 61]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.6454) feature loss: tensor(0.2488)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.6277) feature loss: tensor(0.2556)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.6730) feature loss: tensor(0.2519)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.7799) feature loss: tensor(0.3039)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.7499) feature loss: tensor(0.3339)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.7205) feature loss: tensor(0.3022)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.7819) feature loss: tensor(0.3359)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.7877) feature loss: tensor(0.3053)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.5399) feature loss: tensor(0.2370)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.7003) feature loss: tensor(0.2949)
Global Model Acc on global data: 0.2905 length of data: 10000
save a model
-------------Round number:  20  -------------
selected users: [70, 74, 2, 44, 56, 48, 12, 36, 0, 49]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.00064
training loss: tensor(0.6563) feature loss: tensor(0.3030)
Local adapation with distilling: 0.00064
training loss: tensor(0.5468) feature loss: tensor(0.2582)
Local adapation with distilling: 0.00064
training loss: tensor(0.6263) feature loss: tensor(0.2920)
Local adapation with distilling: 0.00064
training loss: tensor(0.6058) feature loss: tensor(0.2705)
Local adapation with distilling: 0.00064
training loss: tensor(0.5810) feature loss: tensor(0.2737)
Local adapation with distilling: 0.00064
training loss: tensor(0.7323) feature loss: tensor(0.3485)
Local adapation with distilling: 0.00064
training loss: tensor(0.6094) feature loss: tensor(0.3162)
Local adapation with distilling: 0.00064
training loss: tensor(0.5564) feature loss: tensor(0.2759)
Local adapation with distilling: 0.00064
training loss: tensor(0.6737) feature loss: tensor(0.2858)
Local adapation with distilling: 0.00064
training loss: tensor(0.7440) feature loss: tensor(0.3139)
Global Model Acc on global data: 0.2517 length of data: 10000
-------------Round number:  21  -------------
selected users: [23, 81, 85, 34, 62, 46, 42, 31, 93, 11]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.6552) feature loss: tensor(0.2587)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.8116) feature loss: tensor(0.2928)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.7352) feature loss: tensor(0.2542)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.6793) feature loss: tensor(0.2556)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.7031) feature loss: tensor(0.2681)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.7514) feature loss: tensor(0.2707)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.6492) feature loss: tensor(0.2783)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.8051) feature loss: tensor(0.2984)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.7053) feature loss: tensor(0.2668)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.8665) feature loss: tensor(0.3397)
Global Model Acc on global data: 0.2546 length of data: 10000
-------------Round number:  22  -------------
selected users: [2, 49, 82, 31, 37, 12, 87, 42, 99, 85]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.4940) feature loss: tensor(0.2323)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.8731) feature loss: tensor(0.3603)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.5263) feature loss: tensor(0.2309)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.7814) feature loss: tensor(0.3447)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.6343) feature loss: tensor(0.2766)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.5435) feature loss: tensor(0.2709)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.6665) feature loss: tensor(0.3129)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.5093) feature loss: tensor(0.2605)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.9308) feature loss: tensor(0.3294)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.7134) feature loss: tensor(0.3148)
Global Model Acc on global data: 0.2325 length of data: 10000
-------------Round number:  23  -------------
selected users: [26, 80, 82, 68, 77, 37, 3, 55, 20, 17]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.000586
training loss: tensor(0.6851) feature loss: tensor(0.2597)
Local adapation with distilling: 0.000586
training loss: tensor(0.8419) feature loss: tensor(0.3396)
Local adapation with distilling: 0.000586
training loss: tensor(0.5771) feature loss: tensor(0.2596)
Local adapation with distilling: 0.000586
training loss: tensor(1.0223) feature loss: tensor(0.3736)
Local adapation with distilling: 0.000586
training loss: tensor(0.5953) feature loss: tensor(0.2811)
Local adapation with distilling: 0.000586
training loss: tensor(0.5887) feature loss: tensor(0.2647)
Local adapation with distilling: 0.000586
training loss: tensor(0.7287) feature loss: tensor(0.2736)
Local adapation with distilling: 0.000586
training loss: tensor(0.6084) feature loss: tensor(0.2629)
Local adapation with distilling: 0.000586
training loss: tensor(0.8115) feature loss: tensor(0.3474)
Local adapation with distilling: 0.000586
training loss: tensor(0.5956) feature loss: tensor(0.2642)
Global Model Acc on global data: 0.2892 length of data: 10000
-------------Round number:  24  -------------
selected users: [26, 31, 37, 86, 76, 14, 88, 48, 71, 67]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.000568
training loss: tensor(0.5130) feature loss: tensor(0.2227)
Local adapation with distilling: 0.000568
training loss: tensor(0.7680) feature loss: tensor(0.2928)
Local adapation with distilling: 0.000568
training loss: tensor(0.4038) feature loss: tensor(0.2159)
Local adapation with distilling: 0.000568
training loss: tensor(0.5040) feature loss: tensor(0.2195)
Local adapation with distilling: 0.000568
training loss: tensor(0.5489) feature loss: tensor(0.2290)
Local adapation with distilling: 0.000568
training loss: tensor(0.6223) feature loss: tensor(0.2694)
Local adapation with distilling: 0.000568
training loss: tensor(0.7113) feature loss: tensor(0.3023)
Local adapation with distilling: 0.000568
training loss: tensor(0.6205) feature loss: tensor(0.2567)
Local adapation with distilling: 0.000568
training loss: tensor(0.7249) feature loss: tensor(0.2782)
Local adapation with distilling: 0.000568
training loss: tensor(0.4267) feature loss: tensor(0.2521)
Global Model Acc on global data: 0.3076 length of data: 10000
save a model
-------------Round number:  25  -------------
selected users: [41, 29, 33, 65, 74, 6, 57, 89, 87, 98]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.00055
training loss: tensor(0.7088) feature loss: tensor(0.3399)
Local adapation with distilling: 0.00055
training loss: tensor(0.8998) feature loss: tensor(0.3134)
Local adapation with distilling: 0.00055
training loss: tensor(0.5848) feature loss: tensor(0.2528)
Local adapation with distilling: 0.00055
training loss: tensor(0.5680) feature loss: tensor(0.2148)
Local adapation with distilling: 0.00055
training loss: tensor(0.6484) feature loss: tensor(0.2852)
Local adapation with distilling: 0.00055
training loss: tensor(0.6626) feature loss: tensor(0.2713)
Local adapation with distilling: 0.00055
training loss: tensor(0.5351) feature loss: tensor(0.2527)
Local adapation with distilling: 0.00055
training loss: tensor(0.9207) feature loss: tensor(0.3189)
Local adapation with distilling: 0.00055
training loss: tensor(0.5333) feature loss: tensor(0.2264)
Local adapation with distilling: 0.00055
training loss: tensor(0.7533) feature loss: tensor(0.3143)
Global Model Acc on global data: 0.3237 length of data: 10000
save a model
-------------Round number:  26  -------------
selected users: [8, 69, 84, 41, 25, 5, 63, 95, 33, 70]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.000532
training loss: tensor(0.7352) feature loss: tensor(0.2609)
Local adapation with distilling: 0.000532
training loss: tensor(0.6829) feature loss: tensor(0.2464)
Local adapation with distilling: 0.000532
training loss: tensor(0.5463) feature loss: tensor(0.2000)
Local adapation with distilling: 0.000532
training loss: tensor(0.7029) feature loss: tensor(0.2501)
Local adapation with distilling: 0.000532
training loss: tensor(0.4302) feature loss: tensor(0.1851)
Local adapation with distilling: 0.000532
training loss: tensor(0.4416) feature loss: tensor(0.1760)
Local adapation with distilling: 0.000532
training loss: tensor(0.5315) feature loss: tensor(0.2114)
Local adapation with distilling: 0.000532
training loss: tensor(0.5286) feature loss: tensor(0.2159)
Local adapation with distilling: 0.000532
training loss: tensor(0.4388) feature loss: tensor(0.1988)
Local adapation with distilling: 0.000532
training loss: tensor(0.6581) feature loss: tensor(0.2475)
Global Model Acc on global data: 0.3009 length of data: 10000
-------------Round number:  27  -------------
selected users: [89, 68, 43, 50, 40, 95, 27, 85, 22, 44]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.000514
training loss: tensor(0.6570) feature loss: tensor(0.2274)
Local adapation with distilling: 0.000514
training loss: tensor(0.8385) feature loss: tensor(0.2941)
Local adapation with distilling: 0.000514
training loss: tensor(0.4844) feature loss: tensor(0.1842)
Local adapation with distilling: 0.000514
training loss: tensor(0.7416) feature loss: tensor(0.2542)
Local adapation with distilling: 0.000514
training loss: tensor(0.7228) feature loss: tensor(0.2589)
Local adapation with distilling: 0.000514
training loss: tensor(0.4235) feature loss: tensor(0.1867)
Local adapation with distilling: 0.000514
training loss: tensor(0.5014) feature loss: tensor(0.2252)
Local adapation with distilling: 0.000514
training loss: tensor(0.3803) feature loss: tensor(0.1819)
Local adapation with distilling: 0.000514
training loss: tensor(0.7374) feature loss: tensor(0.2486)
Local adapation with distilling: 0.000514
training loss: tensor(0.4982) feature loss: tensor(0.1900)
Global Model Acc on global data: 0.3093 length of data: 10000
-------------Round number:  28  -------------
selected users: [67, 14, 0, 86, 13, 18, 30, 36, 52, 95]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.000496
training loss: tensor(0.4727) feature loss: tensor(0.1636)
Local adapation with distilling: 0.000496
training loss: tensor(0.4415) feature loss: tensor(0.1577)
Local adapation with distilling: 0.000496
training loss: tensor(0.6391) feature loss: tensor(0.2581)
Local adapation with distilling: 0.000496
training loss: tensor(0.4993) feature loss: tensor(0.1727)
Local adapation with distilling: 0.000496
training loss: tensor(0.3923) feature loss: tensor(0.1601)
Local adapation with distilling: 0.000496
training loss: tensor(0.6812) feature loss: tensor(0.2475)
Local adapation with distilling: 0.000496
training loss: tensor(0.6371) feature loss: tensor(0.2466)
Local adapation with distilling: 0.000496
training loss: tensor(0.5381) feature loss: tensor(0.1994)
Local adapation with distilling: 0.000496
training loss: tensor(0.5297) feature loss: tensor(0.1951)
Local adapation with distilling: 0.000496
training loss: tensor(0.3832) feature loss: tensor(0.1701)
Global Model Acc on global data: 0.3015 length of data: 10000
-------------Round number:  29  -------------
selected users: [73, 8, 10, 7, 19, 71, 92, 25, 38, 12]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.5047) feature loss: tensor(0.1827)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.6534) feature loss: tensor(0.2095)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.7087) feature loss: tensor(0.2535)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.4156) feature loss: tensor(0.1786)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.7283) feature loss: tensor(0.2225)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.7490) feature loss: tensor(0.2145)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.5261) feature loss: tensor(0.1761)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.4325) feature loss: tensor(0.1696)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.6904) feature loss: tensor(0.2188)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.5148) feature loss: tensor(0.1821)
Global Model Acc on global data: 0.3157 length of data: 10000
-------------Round number:  30  -------------
selected users: [20, 91, 34, 52, 8, 74, 21, 88, 80, 89]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.5822) feature loss: tensor(0.2637)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.4993) feature loss: tensor(0.1955)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.4482) feature loss: tensor(0.1654)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.4286) feature loss: tensor(0.2036)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.5925) feature loss: tensor(0.2186)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.5793) feature loss: tensor(0.2186)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.6175) feature loss: tensor(0.2515)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.6309) feature loss: tensor(0.2577)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.6495) feature loss: tensor(0.2828)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.6081) feature loss: tensor(0.2193)
Global Model Acc on global data: 0.2755 length of data: 10000
-------------Round number:  31  -------------
selected users: [17, 33, 76, 3, 56, 0, 37, 8, 60, 67]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.4573) feature loss: tensor(0.1747)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.5646) feature loss: tensor(0.2076)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.5623) feature loss: tensor(0.2377)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.5297) feature loss: tensor(0.1998)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.5449) feature loss: tensor(0.2016)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.6089) feature loss: tensor(0.2423)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.4623) feature loss: tensor(0.1831)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.6169) feature loss: tensor(0.2720)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.6905) feature loss: tensor(0.2968)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.4611) feature loss: tensor(0.1872)
Global Model Acc on global data: 0.278 length of data: 10000
-------------Round number:  32  -------------
selected users: [22, 39, 85, 97, 55, 33, 80, 13, 27, 96]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.8751) feature loss: tensor(0.3711)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.9747) feature loss: tensor(0.3962)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.6974) feature loss: tensor(0.2913)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.5820) feature loss: tensor(0.2567)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.7715) feature loss: tensor(0.3050)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.6770) feature loss: tensor(0.2865)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.9084) feature loss: tensor(0.3521)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.6864) feature loss: tensor(0.3258)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.5287) feature loss: tensor(0.2358)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.7496) feature loss: tensor(0.3286)
Global Model Acc on global data: 0.2835 length of data: 10000
-------------Round number:  33  -------------
selected users: [56, 90, 95, 82, 60, 71, 6, 81, 2, 70]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.4044) feature loss: tensor(0.1685)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.5984) feature loss: tensor(0.2053)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.3589) feature loss: tensor(0.1580)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.4274) feature loss: tensor(0.1774)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.6323) feature loss: tensor(0.2309)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.5638) feature loss: tensor(0.1906)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.4739) feature loss: tensor(0.2096)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.5572) feature loss: tensor(0.1911)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.5512) feature loss: tensor(0.1931)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.5242) feature loss: tensor(0.1933)
Global Model Acc on global data: 0.3118 length of data: 10000
-------------Round number:  34  -------------
selected users: [14, 74, 15, 4, 32, 59, 91, 10, 50, 53]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.000388
training loss: tensor(0.6269) feature loss: tensor(0.2498)
Local adapation with distilling: 0.000388
training loss: tensor(0.6915) feature loss: tensor(0.2520)
Local adapation with distilling: 0.000388
training loss: tensor(0.5872) feature loss: tensor(0.2431)
Local adapation with distilling: 0.000388
training loss: tensor(0.6466) feature loss: tensor(0.2332)
Local adapation with distilling: 0.000388
training loss: tensor(0.6571) feature loss: tensor(0.3020)
Local adapation with distilling: 0.000388
training loss: tensor(0.8534) feature loss: tensor(0.3115)
Local adapation with distilling: 0.000388
training loss: tensor(0.6956) feature loss: tensor(0.3026)
Local adapation with distilling: 0.000388
training loss: tensor(0.7402) feature loss: tensor(0.3049)
Local adapation with distilling: 0.000388
training loss: tensor(0.7259) feature loss: tensor(0.3257)
Local adapation with distilling: 0.000388
training loss: tensor(0.6195) feature loss: tensor(0.2314)
Global Model Acc on global data: 0.2715 length of data: 10000
-------------Round number:  35  -------------
selected users: [40, 71, 98, 27, 70, 31, 10, 24, 51, 35]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.00037
training loss: tensor(0.5634) feature loss: tensor(0.1972)
Local adapation with distilling: 0.00037
training loss: tensor(0.5549) feature loss: tensor(0.2286)
Local adapation with distilling: 0.00037
training loss: tensor(0.7978) feature loss: tensor(0.2367)
Local adapation with distilling: 0.00037
training loss: tensor(0.4146) feature loss: tensor(0.1481)
Local adapation with distilling: 0.00037
training loss: tensor(0.5587) feature loss: tensor(0.2094)
Local adapation with distilling: 0.00037
training loss: tensor(0.5585) feature loss: tensor(0.2115)
Local adapation with distilling: 0.00037
training loss: tensor(0.5373) feature loss: tensor(0.1876)
Local adapation with distilling: 0.00037
training loss: tensor(0.3603) feature loss: tensor(0.1571)
Local adapation with distilling: 0.00037
training loss: tensor(0.5157) feature loss: tensor(0.2129)
Local adapation with distilling: 0.00037
training loss: tensor(0.4268) feature loss: tensor(0.1604)
Global Model Acc on global data: 0.2909 length of data: 10000
-------------Round number:  36  -------------
selected users: [59, 42, 2, 27, 28, 75, 58, 68, 52, 74]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.7852) feature loss: tensor(0.2764)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.6707) feature loss: tensor(0.2434)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.6792) feature loss: tensor(0.2292)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.5115) feature loss: tensor(0.1864)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.7515) feature loss: tensor(0.3156)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.5712) feature loss: tensor(0.1885)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.7252) feature loss: tensor(0.2356)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.7673) feature loss: tensor(0.2766)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.7118) feature loss: tensor(0.2630)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.5824) feature loss: tensor(0.2256)
Global Model Acc on global data: 0.2811 length of data: 10000
-------------Round number:  37  -------------
selected users: [61, 49, 86, 78, 5, 91, 81, 82, 89, 18]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.6703) feature loss: tensor(0.2188)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.6973) feature loss: tensor(0.2921)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.5636) feature loss: tensor(0.1954)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.6447) feature loss: tensor(0.2232)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.5272) feature loss: tensor(0.2198)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.6896) feature loss: tensor(0.2805)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.6493) feature loss: tensor(0.2637)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.5120) feature loss: tensor(0.2049)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.7243) feature loss: tensor(0.2511)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.6387) feature loss: tensor(0.2316)
Global Model Acc on global data: 0.3233 length of data: 10000
-------------Round number:  38  -------------
selected users: [40, 73, 49, 45, 64, 16, 69, 17, 72, 66]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(1.0118) feature loss: tensor(0.3062)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.8445) feature loss: tensor(0.2507)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.7931) feature loss: tensor(0.2855)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.7225) feature loss: tensor(0.2858)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.9068) feature loss: tensor(0.3086)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.8228) feature loss: tensor(0.3006)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.7687) feature loss: tensor(0.2579)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.7882) feature loss: tensor(0.2501)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.8496) feature loss: tensor(0.3201)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.7512) feature loss: tensor(0.2971)
Global Model Acc on global data: 0.3274 length of data: 10000
save a model
-------------Round number:  39  -------------
selected users: [22, 53, 84, 57, 87, 58, 29, 21, 85, 79]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.6065) feature loss: tensor(0.2145)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.5800) feature loss: tensor(0.2222)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.5985) feature loss: tensor(0.2182)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.5343) feature loss: tensor(0.1940)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.5836) feature loss: tensor(0.2283)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.8323) feature loss: tensor(0.2944)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.7129) feature loss: tensor(0.2088)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.9502) feature loss: tensor(0.3211)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.5460) feature loss: tensor(0.1753)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.6060) feature loss: tensor(0.2421)
Global Model Acc on global data: 0.3434 length of data: 10000
save a model
-------------Round number:  40  -------------
selected users: [79, 75, 63, 15, 38, 11, 40, 45, 39, 62]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.5028) feature loss: tensor(0.1803)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.4277) feature loss: tensor(0.1591)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.5311) feature loss: tensor(0.1938)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.3874) feature loss: tensor(0.1475)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.7818) feature loss: tensor(0.2700)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.5263) feature loss: tensor(0.1830)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.8892) feature loss: tensor(0.2767)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.4113) feature loss: tensor(0.1617)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.5511) feature loss: tensor(0.2092)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.4771) feature loss: tensor(0.1810)
Global Model Acc on global data: 0.314 length of data: 10000
-------------Round number:  41  -------------
selected users: [42, 94, 37, 6, 79, 32, 24, 0, 33, 93]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.000262
training loss: tensor(0.7948) feature loss: tensor(0.2807)
Local adapation with distilling: 0.000262
training loss: tensor(0.8066) feature loss: tensor(0.2598)
Local adapation with distilling: 0.000262
training loss: tensor(0.6855) feature loss: tensor(0.2433)
Local adapation with distilling: 0.000262
training loss: tensor(0.9823) feature loss: tensor(0.3472)
Local adapation with distilling: 0.000262
training loss: tensor(0.8475) feature loss: tensor(0.3626)
Local adapation with distilling: 0.000262
training loss: tensor(0.8745) feature loss: tensor(0.3375)
Local adapation with distilling: 0.000262
training loss: tensor(0.7981) feature loss: tensor(0.2632)
Local adapation with distilling: 0.000262
training loss: tensor(1.0780) feature loss: tensor(0.3036)
Local adapation with distilling: 0.000262
training loss: tensor(0.6879) feature loss: tensor(0.2445)
Local adapation with distilling: 0.000262
training loss: tensor(0.7815) feature loss: tensor(0.2513)
Global Model Acc on global data: 0.3145 length of data: 10000
-------------Round number:  42  -------------
selected users: [83, 53, 70, 45, 44, 39, 22, 80, 10, 0]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.3621) feature loss: tensor(0.1539)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.4002) feature loss: tensor(0.1773)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.5858) feature loss: tensor(0.1910)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.3862) feature loss: tensor(0.1555)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.3648) feature loss: tensor(0.1463)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.5260) feature loss: tensor(0.1890)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.3673) feature loss: tensor(0.1540)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.5905) feature loss: tensor(0.1989)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.5661) feature loss: tensor(0.1903)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.6063) feature loss: tensor(0.1958)
Global Model Acc on global data: 0.2518 length of data: 10000
-------------Round number:  43  -------------
selected users: [20, 2, 15, 22, 57, 91, 69, 55, 11, 79]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.6909) feature loss: tensor(0.2240)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.5887) feature loss: tensor(0.2013)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.5469) feature loss: tensor(0.2298)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.5557) feature loss: tensor(0.2212)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.6093) feature loss: tensor(0.2035)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.8132) feature loss: tensor(0.2748)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.6981) feature loss: tensor(0.2345)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.5110) feature loss: tensor(0.1825)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.7677) feature loss: tensor(0.2484)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.7029) feature loss: tensor(0.2298)
Global Model Acc on global data: 0.303 length of data: 10000
-------------Round number:  44  -------------
selected users: [42, 54, 27, 93, 39, 65, 7, 26, 24, 60]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.6807) feature loss: tensor(0.2491)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.6877) feature loss: tensor(0.2345)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.6279) feature loss: tensor(0.2180)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.7376) feature loss: tensor(0.2218)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.8521) feature loss: tensor(0.3746)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.5698) feature loss: tensor(0.2103)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.6302) feature loss: tensor(0.2050)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.7823) feature loss: tensor(0.2329)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.6447) feature loss: tensor(0.2143)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.8676) feature loss: tensor(0.2498)
Global Model Acc on global data: 0.3174 length of data: 10000
-------------Round number:  45  -------------
selected users: [0, 1, 62, 76, 37, 99, 78, 38, 2, 84]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.7589) feature loss: tensor(0.1913)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.7446) feature loss: tensor(0.1814)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.5323) feature loss: tensor(0.1816)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.5307) feature loss: tensor(0.1501)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.4329) feature loss: tensor(0.1532)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.7385) feature loss: tensor(0.1639)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.9839) feature loss: tensor(0.3135)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.9341) feature loss: tensor(0.2805)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.5044) feature loss: tensor(0.1584)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.4398) feature loss: tensor(0.1508)
Global Model Acc on global data: 0.3631 length of data: 10000
save a model
-------------Round number:  46  -------------
selected users: [71, 33, 37, 10, 44, 34, 24, 98, 73, 95]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.6320) feature loss: tensor(0.1822)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.6245) feature loss: tensor(0.1658)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.4751) feature loss: tensor(0.1497)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.6548) feature loss: tensor(0.1962)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.4980) feature loss: tensor(0.1583)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.4895) feature loss: tensor(0.1602)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.5073) feature loss: tensor(0.1619)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.7945) feature loss: tensor(0.2492)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.6074) feature loss: tensor(0.1660)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.5751) feature loss: tensor(0.1442)
Global Model Acc on global data: 0.3061 length of data: 10000
-------------Round number:  47  -------------
selected users: [17, 90, 94, 86, 63, 5, 38, 14, 40, 47]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.4563) feature loss: tensor(0.1373)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.6887) feature loss: tensor(0.1739)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.3782) feature loss: tensor(0.1300)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.5864) feature loss: tensor(0.1402)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.4191) feature loss: tensor(0.1295)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.4791) feature loss: tensor(0.1425)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.8080) feature loss: tensor(0.2349)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.4039) feature loss: tensor(0.1320)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.6850) feature loss: tensor(0.1892)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.4645) feature loss: tensor(0.1385)
Global Model Acc on global data: 0.3053 length of data: 10000
-------------Round number:  48  -------------
selected users: [93, 5, 71, 9, 11, 79, 69, 8, 59, 63]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.8014) feature loss: tensor(0.1910)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.7035) feature loss: tensor(0.1772)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.9987) feature loss: tensor(0.2666)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.9768) feature loss: tensor(0.2786)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.9711) feature loss: tensor(0.3004)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.9389) feature loss: tensor(0.2414)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.8686) feature loss: tensor(0.2190)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(1.0265) feature loss: tensor(0.2450)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.9185) feature loss: tensor(0.2711)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.7265) feature loss: tensor(0.1734)
Global Model Acc on global data: 0.2992 length of data: 10000
-------------Round number:  49  -------------
selected users: [76, 25, 28, 75, 81, 47, 41, 22, 29, 1]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.8881) feature loss: tensor(0.2012)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.6763) feature loss: tensor(0.1764)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.9419) feature loss: tensor(0.2664)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.6791) feature loss: tensor(0.1938)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.7313) feature loss: tensor(0.2430)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.7451) feature loss: tensor(0.1780)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.8648) feature loss: tensor(0.2340)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.9487) feature loss: tensor(0.2051)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.8015) feature loss: tensor(0.2361)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.7652) feature loss: tensor(0.2085)
Global Model Acc on global data: 0.3313 length of data: 10000
-------------Round number:  50  -------------
selected users: [80, 79, 25, 15, 39, 40, 53, 17, 57, 50]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(1.0571) feature loss: tensor(0.2457)
Local adapation with distilling: 0.0001
training loss: tensor(0.7407) feature loss: tensor(0.2194)
Local adapation with distilling: 0.0001
training loss: tensor(0.5736) feature loss: tensor(0.1785)
Local adapation with distilling: 0.0001
training loss: tensor(0.5493) feature loss: tensor(0.1476)
Local adapation with distilling: 0.0001
training loss: tensor(0.6915) feature loss: tensor(0.1629)
Local adapation with distilling: 0.0001
training loss: tensor(1.0322) feature loss: tensor(0.2317)
Local adapation with distilling: 0.0001
training loss: tensor(0.7443) feature loss: tensor(0.1583)
Local adapation with distilling: 0.0001
training loss: tensor(0.6451) feature loss: tensor(0.1659)
Local adapation with distilling: 0.0001
training loss: tensor(0.6323) feature loss: tensor(0.1539)
Local adapation with distilling: 0.0001
training loss: tensor(1.0868) feature loss: tensor(0.2450)
Global Model Acc on global data: 0.3061 length of data: 10000
-------------Round number:  51  -------------
selected users: [71, 43, 11, 83, 78, 19, 80, 4, 79, 75]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.8024) feature loss: tensor(0.1918)
Local adapation with distilling: 0.0001
training loss: tensor(0.6991) feature loss: tensor(0.1678)
Local adapation with distilling: 0.0001
training loss: tensor(0.8903) feature loss: tensor(0.2478)
Local adapation with distilling: 0.0001
training loss: tensor(0.6963) feature loss: tensor(0.1804)
Local adapation with distilling: 0.0001
training loss: tensor(1.1054) feature loss: tensor(0.2299)
Local adapation with distilling: 0.0001
training loss: tensor(0.7999) feature loss: tensor(0.2010)
Local adapation with distilling: 0.0001
training loss: tensor(0.9304) feature loss: tensor(0.2024)
Local adapation with distilling: 0.0001
training loss: tensor(0.8438) feature loss: tensor(0.1604)
Local adapation with distilling: 0.0001
training loss: tensor(0.6790) feature loss: tensor(0.2017)
Local adapation with distilling: 0.0001
training loss: tensor(0.5374) feature loss: tensor(0.1482)
Global Model Acc on global data: 0.3267 length of data: 10000
-------------Round number:  52  -------------
selected users: [82, 8, 44, 19, 2, 73, 37, 89, 67, 18]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.9074) feature loss: tensor(0.1953)
Local adapation with distilling: 0.0001
training loss: tensor(0.8846) feature loss: tensor(0.1992)
Local adapation with distilling: 0.0001
training loss: tensor(0.6668) feature loss: tensor(0.1434)
Local adapation with distilling: 0.0001
training loss: tensor(0.7187) feature loss: tensor(0.2460)
Local adapation with distilling: 0.0001
training loss: tensor(0.8387) feature loss: tensor(0.1480)
Local adapation with distilling: 0.0001
training loss: tensor(0.5894) feature loss: tensor(0.1628)
Local adapation with distilling: 0.0001
training loss: tensor(0.6558) feature loss: tensor(0.1422)
Local adapation with distilling: 0.0001
training loss: tensor(0.6540) feature loss: tensor(0.1865)
Local adapation with distilling: 0.0001
training loss: tensor(0.6622) feature loss: tensor(0.1588)
Local adapation with distilling: 0.0001
training loss: tensor(0.9520) feature loss: tensor(0.2150)
Global Model Acc on global data: 0.3177 length of data: 10000
-------------Round number:  53  -------------
selected users: [19, 78, 64, 3, 71, 32, 68, 42, 55, 97]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.5775) feature loss: tensor(0.1826)
Local adapation with distilling: 0.0001
training loss: tensor(0.6463) feature loss: tensor(0.1757)
Local adapation with distilling: 0.0001
training loss: tensor(0.6248) feature loss: tensor(0.1663)
Local adapation with distilling: 0.0001
training loss: tensor(0.5856) feature loss: tensor(0.1657)
Local adapation with distilling: 0.0001
training loss: tensor(0.7660) feature loss: tensor(0.1465)
Local adapation with distilling: 0.0001
training loss: tensor(0.5961) feature loss: tensor(0.2115)
Local adapation with distilling: 0.0001
training loss: tensor(0.7393) feature loss: tensor(0.1963)
Local adapation with distilling: 0.0001
training loss: tensor(0.5368) feature loss: tensor(0.1543)
Local adapation with distilling: 0.0001
training loss: tensor(0.6025) feature loss: tensor(0.1417)
Local adapation with distilling: 0.0001
training loss: tensor(0.4672) feature loss: tensor(0.1387)
Global Model Acc on global data: 0.3226 length of data: 10000
-------------Round number:  54  -------------
selected users: [36, 70, 48, 94, 81, 46, 38, 29, 34, 22]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.8588) feature loss: tensor(0.1730)
Local adapation with distilling: 0.0001
training loss: tensor(1.1925) feature loss: tensor(0.2953)
Local adapation with distilling: 0.0001
training loss: tensor(0.7748) feature loss: tensor(0.2044)
Local adapation with distilling: 0.0001
training loss: tensor(0.6077) feature loss: tensor(0.1495)
Local adapation with distilling: 0.0001
training loss: tensor(0.7178) feature loss: tensor(0.1665)
Local adapation with distilling: 0.0001
training loss: tensor(0.8309) feature loss: tensor(0.1751)
Local adapation with distilling: 0.0001
training loss: tensor(0.7944) feature loss: tensor(0.2125)
Local adapation with distilling: 0.0001
training loss: tensor(0.7870) feature loss: tensor(0.2153)
Local adapation with distilling: 0.0001
training loss: tensor(0.6222) feature loss: tensor(0.1570)
Local adapation with distilling: 0.0001
training loss: tensor(0.5483) feature loss: tensor(0.1617)
Global Model Acc on global data: 0.3404 length of data: 10000
-------------Round number:  55  -------------
selected users: [28, 92, 98, 95, 84, 34, 38, 76, 17, 78]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.4978) feature loss: tensor(0.1593)
Local adapation with distilling: 0.0001
training loss: tensor(0.4163) feature loss: tensor(0.1275)
Local adapation with distilling: 0.0001
training loss: tensor(0.4986) feature loss: tensor(0.1618)
Local adapation with distilling: 0.0001
training loss: tensor(0.5052) feature loss: tensor(0.1178)
Local adapation with distilling: 0.0001
training loss: tensor(0.3376) feature loss: tensor(0.1202)
Local adapation with distilling: 0.0001
training loss: tensor(0.3283) feature loss: tensor(0.1175)
Local adapation with distilling: 0.0001
training loss: tensor(0.4999) feature loss: tensor(0.1619)
Local adapation with distilling: 0.0001
training loss: tensor(0.3904) feature loss: tensor(0.1212)
Local adapation with distilling: 0.0001
training loss: tensor(0.4642) feature loss: tensor(0.1276)
Local adapation with distilling: 0.0001
training loss: tensor(0.4853) feature loss: tensor(0.1637)
Global Model Acc on global data: 0.3016 length of data: 10000
-------------Round number:  56  -------------
selected users: [92, 79, 23, 68, 52, 38, 73, 9, 59, 27]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.5344) feature loss: tensor(0.1560)
Local adapation with distilling: 0.0001
training loss: tensor(0.7338) feature loss: tensor(0.2073)
Local adapation with distilling: 0.0001
training loss: tensor(0.7188) feature loss: tensor(0.1695)
Local adapation with distilling: 0.0001
training loss: tensor(0.6071) feature loss: tensor(0.1748)
Local adapation with distilling: 0.0001
training loss: tensor(0.6129) feature loss: tensor(0.1726)
Local adapation with distilling: 0.0001
training loss: tensor(0.5928) feature loss: tensor(0.1755)
Local adapation with distilling: 0.0001
training loss: tensor(0.6980) feature loss: tensor(0.1584)
Local adapation with distilling: 0.0001
training loss: tensor(0.7118) feature loss: tensor(0.2113)
Local adapation with distilling: 0.0001
training loss: tensor(0.6981) feature loss: tensor(0.1677)
Local adapation with distilling: 0.0001
training loss: tensor(0.6465) feature loss: tensor(0.2138)
Global Model Acc on global data: 0.2976 length of data: 10000
-------------Round number:  57  -------------
selected users: [52, 17, 41, 3, 8, 98, 59, 20, 67, 7]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.5160) feature loss: tensor(0.1862)
Local adapation with distilling: 0.0001
training loss: tensor(0.5542) feature loss: tensor(0.1764)
Local adapation with distilling: 0.0001
training loss: tensor(0.8202) feature loss: tensor(0.1950)
Local adapation with distilling: 0.0001
training loss: tensor(0.5674) feature loss: tensor(0.1549)
Local adapation with distilling: 0.0001
training loss: tensor(0.6031) feature loss: tensor(0.1845)
Local adapation with distilling: 0.0001
training loss: tensor(0.5926) feature loss: tensor(0.1859)
Local adapation with distilling: 0.0001
training loss: tensor(0.4809) feature loss: tensor(0.1553)
Local adapation with distilling: 0.0001
training loss: tensor(0.9907) feature loss: tensor(0.1978)
Local adapation with distilling: 0.0001
training loss: tensor(0.5571) feature loss: tensor(0.1485)
Local adapation with distilling: 0.0001
training loss: tensor(0.5544) feature loss: tensor(0.1482)
Global Model Acc on global data: 0.3089 length of data: 10000
-------------Round number:  58  -------------
selected users: [43, 58, 8, 31, 70, 45, 69, 95, 50, 4]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.6106) feature loss: tensor(0.1484)
Local adapation with distilling: 0.0001
training loss: tensor(0.7369) feature loss: tensor(0.1939)
Local adapation with distilling: 0.0001
training loss: tensor(0.7109) feature loss: tensor(0.1961)
Local adapation with distilling: 0.0001
training loss: tensor(0.7331) feature loss: tensor(0.1897)
Local adapation with distilling: 0.0001
training loss: tensor(0.8740) feature loss: tensor(0.2093)
Local adapation with distilling: 0.0001
training loss: tensor(0.8057) feature loss: tensor(0.1602)
Local adapation with distilling: 0.0001
training loss: tensor(0.6299) feature loss: tensor(0.1769)
Local adapation with distilling: 0.0001
training loss: tensor(0.7903) feature loss: tensor(0.1569)
Local adapation with distilling: 0.0001
training loss: tensor(0.9094) feature loss: tensor(0.2076)
Local adapation with distilling: 0.0001
training loss: tensor(0.7714) feature loss: tensor(0.1578)
Global Model Acc on global data: 0.3353 length of data: 10000
-------------Round number:  59  -------------
selected users: [38, 46, 24, 87, 30, 85, 16, 96, 18, 99]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.6245) feature loss: tensor(0.1752)
Local adapation with distilling: 0.0001
training loss: tensor(0.7355) feature loss: tensor(0.1704)
Local adapation with distilling: 0.0001
training loss: tensor(0.6160) feature loss: tensor(0.1737)
Local adapation with distilling: 0.0001
training loss: tensor(0.5930) feature loss: tensor(0.1506)
Local adapation with distilling: 0.0001
training loss: tensor(0.8790) feature loss: tensor(0.2540)
Local adapation with distilling: 0.0001
training loss: tensor(0.5331) feature loss: tensor(0.1555)
Local adapation with distilling: 0.0001
training loss: tensor(0.7818) feature loss: tensor(0.2071)
Local adapation with distilling: 0.0001
training loss: tensor(0.7807) feature loss: tensor(0.1915)
Local adapation with distilling: 0.0001
training loss: tensor(0.6265) feature loss: tensor(0.1812)
Local adapation with distilling: 0.0001
training loss: tensor(0.7063) feature loss: tensor(0.2421)
Global Model Acc on global data: 0.3621 length of data: 10000
-------------Round number:  60  -------------
selected users: [88, 4, 79, 14, 55, 3, 19, 28, 94, 25]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.4785) feature loss: tensor(0.1559)
Local adapation with distilling: 0.0001
training loss: tensor(0.4617) feature loss: tensor(0.1425)
Local adapation with distilling: 0.0001
training loss: tensor(0.5237) feature loss: tensor(0.1627)
Local adapation with distilling: 0.0001
training loss: tensor(0.4780) feature loss: tensor(0.1565)
Local adapation with distilling: 0.0001
training loss: tensor(0.4399) feature loss: tensor(0.1271)
Local adapation with distilling: 0.0001
training loss: tensor(0.5493) feature loss: tensor(0.1305)
Local adapation with distilling: 0.0001
training loss: tensor(0.5125) feature loss: tensor(0.1808)
Local adapation with distilling: 0.0001
training loss: tensor(0.4734) feature loss: tensor(0.1524)
Local adapation with distilling: 0.0001
training loss: tensor(0.4642) feature loss: tensor(0.1506)
Local adapation with distilling: 0.0001
training loss: tensor(0.4754) feature loss: tensor(0.1368)
Global Model Acc on global data: 0.3018 length of data: 10000
-------------Round number:  61  -------------
selected users: [83, 1, 55, 9, 31, 28, 96, 29, 86, 63]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.7351) feature loss: tensor(0.1998)
Local adapation with distilling: 0.0001
training loss: tensor(0.8753) feature loss: tensor(0.2374)
Local adapation with distilling: 0.0001
training loss: tensor(0.5860) feature loss: tensor(0.1944)
Local adapation with distilling: 0.0001
training loss: tensor(0.6828) feature loss: tensor(0.1986)
Local adapation with distilling: 0.0001
training loss: tensor(0.9341) feature loss: tensor(0.2312)
Local adapation with distilling: 0.0001
training loss: tensor(0.6331) feature loss: tensor(0.1854)
Local adapation with distilling: 0.0001
training loss: tensor(0.7320) feature loss: tensor(0.2040)
Local adapation with distilling: 0.0001
training loss: tensor(0.7536) feature loss: tensor(0.2463)
Local adapation with distilling: 0.0001
training loss: tensor(0.7661) feature loss: tensor(0.2129)
Local adapation with distilling: 0.0001
training loss: tensor(0.7252) feature loss: tensor(0.2210)
Global Model Acc on global data: 0.329 length of data: 10000
-------------Round number:  62  -------------
selected users: [76, 48, 62, 80, 29, 99, 60, 89, 39, 69]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.5514) feature loss: tensor(0.1825)
Local adapation with distilling: 0.0001
training loss: tensor(0.5970) feature loss: tensor(0.1750)
Local adapation with distilling: 0.0001
training loss: tensor(0.7449) feature loss: tensor(0.1418)
Local adapation with distilling: 0.0001
training loss: tensor(1.0422) feature loss: tensor(0.2462)
Local adapation with distilling: 0.0001
training loss: tensor(0.5403) feature loss: tensor(0.1630)
Local adapation with distilling: 0.0001
training loss: tensor(0.5062) feature loss: tensor(0.1814)
Local adapation with distilling: 0.0001
training loss: tensor(1.0855) feature loss: tensor(0.2571)
Local adapation with distilling: 0.0001
training loss: tensor(0.5418) feature loss: tensor(0.1812)
Local adapation with distilling: 0.0001
training loss: tensor(0.5084) feature loss: tensor(0.1676)
Local adapation with distilling: 0.0001
training loss: tensor(0.4745) feature loss: tensor(0.1668)
Global Model Acc on global data: 0.3028 length of data: 10000
-------------Round number:  63  -------------
selected users: [64, 59, 63, 2, 80, 20, 18, 48, 72, 51]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.8697) feature loss: tensor(0.1484)
Local adapation with distilling: 0.0001
training loss: tensor(0.4548) feature loss: tensor(0.1563)
Local adapation with distilling: 0.0001
training loss: tensor(0.8183) feature loss: tensor(0.1479)
Local adapation with distilling: 0.0001
training loss: tensor(0.8208) feature loss: tensor(0.1474)
Local adapation with distilling: 0.0001
training loss: tensor(0.8649) feature loss: tensor(0.2074)
Local adapation with distilling: 0.0001
training loss: tensor(0.8823) feature loss: tensor(0.2140)
Local adapation with distilling: 0.0001
training loss: tensor(0.6931) feature loss: tensor(0.1890)
Local adapation with distilling: 0.0001
training loss: tensor(0.7060) feature loss: tensor(0.1923)
Local adapation with distilling: 0.0001
training loss: tensor(0.9014) feature loss: tensor(0.1630)
Local adapation with distilling: 0.0001
training loss: tensor(0.9982) feature loss: tensor(0.1648)
Global Model Acc on global data: 0.3311 length of data: 10000
-------------Round number:  64  -------------
selected users: [17, 22, 60, 92, 23, 19, 71, 94, 40, 49]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.6500) feature loss: tensor(0.1664)
Local adapation with distilling: 0.0001
training loss: tensor(0.4707) feature loss: tensor(0.1742)
Local adapation with distilling: 0.0001
training loss: tensor(0.7110) feature loss: tensor(0.2190)
Local adapation with distilling: 0.0001
training loss: tensor(0.4783) feature loss: tensor(0.1686)
Local adapation with distilling: 0.0001
training loss: tensor(0.5633) feature loss: tensor(0.1660)
Local adapation with distilling: 0.0001
training loss: tensor(0.4515) feature loss: tensor(0.1789)
Local adapation with distilling: 0.0001
training loss: tensor(0.6487) feature loss: tensor(0.2122)
Local adapation with distilling: 0.0001
training loss: tensor(0.5564) feature loss: tensor(0.1612)
Local adapation with distilling: 0.0001
training loss: tensor(0.7275) feature loss: tensor(0.2086)
Local adapation with distilling: 0.0001
training loss: tensor(0.5569) feature loss: tensor(0.2039)
Global Model Acc on global data: 0.3159 length of data: 10000
-------------Round number:  65  -------------
selected users: [37, 81, 39, 61, 76, 90, 27, 86, 28, 69]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.4956) feature loss: tensor(0.1613)
Local adapation with distilling: 0.0001
training loss: tensor(0.5607) feature loss: tensor(0.1980)
Local adapation with distilling: 0.0001
training loss: tensor(0.4766) feature loss: tensor(0.1922)
Local adapation with distilling: 0.0001
training loss: tensor(0.6003) feature loss: tensor(0.1724)
Local adapation with distilling: 0.0001
training loss: tensor(0.6476) feature loss: tensor(0.1645)
Local adapation with distilling: 0.0001
training loss: tensor(0.7761) feature loss: tensor(0.2205)
Local adapation with distilling: 0.0001
training loss: tensor(0.5144) feature loss: tensor(0.1480)
Local adapation with distilling: 0.0001
training loss: tensor(0.6052) feature loss: tensor(0.1670)
Local adapation with distilling: 0.0001
training loss: tensor(0.5841) feature loss: tensor(0.1621)
Local adapation with distilling: 0.0001
training loss: tensor(0.3786) feature loss: tensor(0.1338)
Global Model Acc on global data: 0.3546 length of data: 10000
-------------Round number:  66  -------------
selected users: [8, 93, 4, 5, 52, 41, 0, 73, 88, 68]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.6230) feature loss: tensor(0.1826)
Local adapation with distilling: 0.0001
training loss: tensor(0.7558) feature loss: tensor(0.1529)
Local adapation with distilling: 0.0001
training loss: tensor(0.6927) feature loss: tensor(0.1502)
Local adapation with distilling: 0.0001
training loss: tensor(0.8195) feature loss: tensor(0.1487)
Local adapation with distilling: 0.0001
training loss: tensor(0.7029) feature loss: tensor(0.1570)
Local adapation with distilling: 0.0001
training loss: tensor(0.5786) feature loss: tensor(0.1550)
Local adapation with distilling: 0.0001
training loss: tensor(0.9192) feature loss: tensor(0.2175)
Local adapation with distilling: 0.0001
training loss: tensor(0.7220) feature loss: tensor(0.1491)
Local adapation with distilling: 0.0001
training loss: tensor(0.6432) feature loss: tensor(0.1930)
Local adapation with distilling: 0.0001
training loss: tensor(0.6291) feature loss: tensor(0.1833)
Global Model Acc on global data: 0.3475 length of data: 10000
-------------Round number:  67  -------------
selected users: [17, 24, 64, 93, 97, 29, 3, 70, 82, 11]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.5510) feature loss: tensor(0.2050)
Local adapation with distilling: 0.0001
training loss: tensor(0.5800) feature loss: tensor(0.2173)
Local adapation with distilling: 0.0001
training loss: tensor(0.6002) feature loss: tensor(0.2188)
Local adapation with distilling: 0.0001
training loss: tensor(0.6364) feature loss: tensor(0.2304)
Local adapation with distilling: 0.0001
training loss: tensor(0.5752) feature loss: tensor(0.2072)
Local adapation with distilling: 0.0001
training loss: tensor(0.6820) feature loss: tensor(0.2218)
Local adapation with distilling: 0.0001
training loss: tensor(0.5665) feature loss: tensor(0.2381)
Local adapation with distilling: 0.0001
training loss: tensor(0.7600) feature loss: tensor(0.2089)
Local adapation with distilling: 0.0001
training loss: tensor(0.6270) feature loss: tensor(0.2378)
Local adapation with distilling: 0.0001
training loss: tensor(0.7224) feature loss: tensor(0.2746)
Global Model Acc on global data: 0.3334 length of data: 10000
-------------Round number:  68  -------------
selected users: [29, 30, 16, 5, 38, 71, 76, 94, 99, 95]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.6214) feature loss: tensor(0.1840)
Local adapation with distilling: 0.0001
training loss: tensor(0.7931) feature loss: tensor(0.2167)
Local adapation with distilling: 0.0001
training loss: tensor(0.6640) feature loss: tensor(0.1644)
Local adapation with distilling: 0.0001
training loss: tensor(0.6493) feature loss: tensor(0.1663)
Local adapation with distilling: 0.0001
training loss: tensor(0.5491) feature loss: tensor(0.1675)
Local adapation with distilling: 0.0001
training loss: tensor(0.6173) feature loss: tensor(0.1595)
Local adapation with distilling: 0.0001
training loss: tensor(0.6619) feature loss: tensor(0.1595)
Local adapation with distilling: 0.0001
training loss: tensor(0.4864) feature loss: tensor(0.1458)
Local adapation with distilling: 0.0001
training loss: tensor(0.6338) feature loss: tensor(0.1957)
Local adapation with distilling: 0.0001
training loss: tensor(0.6714) feature loss: tensor(0.1699)
Global Model Acc on global data: 0.3822 length of data: 10000
save a model
-------------Round number:  69  -------------
selected users: [72, 31, 13, 83, 33, 8, 26, 89, 64, 97]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.7010) feature loss: tensor(0.2196)
Local adapation with distilling: 0.0001
training loss: tensor(0.7233) feature loss: tensor(0.1947)
Local adapation with distilling: 0.0001
training loss: tensor(0.6492) feature loss: tensor(0.2003)
Local adapation with distilling: 0.0001
training loss: tensor(0.5975) feature loss: tensor(0.1770)
Local adapation with distilling: 0.0001
training loss: tensor(0.5850) feature loss: tensor(0.1581)
Local adapation with distilling: 0.0001
training loss: tensor(0.5311) feature loss: tensor(0.1674)
Local adapation with distilling: 0.0001
training loss: tensor(0.4912) feature loss: tensor(0.1783)
Local adapation with distilling: 0.0001
training loss: tensor(0.5851) feature loss: tensor(0.2185)
Local adapation with distilling: 0.0001
training loss: tensor(0.5431) feature loss: tensor(0.1650)
Local adapation with distilling: 0.0001
training loss: tensor(0.5925) feature loss: tensor(0.1826)
Global Model Acc on global data: 0.3774 length of data: 10000
-------------Round number:  70  -------------
selected users: [81, 43, 88, 32, 50, 71, 73, 55, 42, 2]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.6416) feature loss: tensor(0.1619)
Local adapation with distilling: 0.0001
training loss: tensor(0.4337) feature loss: tensor(0.1532)
Local adapation with distilling: 0.0001
training loss: tensor(0.5421) feature loss: tensor(0.1602)
Local adapation with distilling: 0.0001
training loss: tensor(0.6278) feature loss: tensor(0.1811)
Local adapation with distilling: 0.0001
training loss: tensor(0.8791) feature loss: tensor(0.2338)
Local adapation with distilling: 0.0001
training loss: tensor(0.5572) feature loss: tensor(0.1553)
Local adapation with distilling: 0.0001
training loss: tensor(0.4905) feature loss: tensor(0.1852)
Local adapation with distilling: 0.0001
training loss: tensor(0.5912) feature loss: tensor(0.1593)
Local adapation with distilling: 0.0001
training loss: tensor(0.6340) feature loss: tensor(0.2020)
Local adapation with distilling: 0.0001
training loss: tensor(0.6277) feature loss: tensor(0.1881)
Global Model Acc on global data: 0.3128 length of data: 10000
-------------Round number:  71  -------------
selected users: [41, 84, 98, 42, 75, 25, 60, 19, 52, 29]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.6224) feature loss: tensor(0.1929)
Local adapation with distilling: 0.0001
training loss: tensor(0.6535) feature loss: tensor(0.1528)
Local adapation with distilling: 0.0001
training loss: tensor(0.5525) feature loss: tensor(0.1597)
Local adapation with distilling: 0.0001
training loss: tensor(0.4401) feature loss: tensor(0.1506)
Local adapation with distilling: 0.0001
training loss: tensor(0.5531) feature loss: tensor(0.1470)
Local adapation with distilling: 0.0001
training loss: tensor(0.5463) feature loss: tensor(0.1429)
Local adapation with distilling: 0.0001
training loss: tensor(0.8101) feature loss: tensor(0.2233)
Local adapation with distilling: 0.0001
training loss: tensor(0.6811) feature loss: tensor(0.1909)
Local adapation with distilling: 0.0001
training loss: tensor(0.4350) feature loss: tensor(0.1376)
Local adapation with distilling: 0.0001
training loss: tensor(0.9468) feature loss: tensor(0.2055)
Global Model Acc on global data: 0.3402 length of data: 10000
-------------Round number:  72  -------------
selected users: [76, 82, 43, 16, 84, 95, 78, 91, 30, 22]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.6532) feature loss: tensor(0.1480)
Local adapation with distilling: 0.0001
training loss: tensor(0.4867) feature loss: tensor(0.1627)
Local adapation with distilling: 0.0001
training loss: tensor(0.5485) feature loss: tensor(0.1626)
Local adapation with distilling: 0.0001
training loss: tensor(0.6981) feature loss: tensor(0.1674)
Local adapation with distilling: 0.0001
training loss: tensor(0.5556) feature loss: tensor(0.1670)
Local adapation with distilling: 0.0001
training loss: tensor(0.4497) feature loss: tensor(0.1540)
Local adapation with distilling: 0.0001
training loss: tensor(0.5185) feature loss: tensor(0.1597)
Local adapation with distilling: 0.0001
training loss: tensor(0.6425) feature loss: tensor(0.1877)
Local adapation with distilling: 0.0001
training loss: tensor(0.7953) feature loss: tensor(0.2127)
Local adapation with distilling: 0.0001
training loss: tensor(0.4565) feature loss: tensor(0.1639)
Global Model Acc on global data: 0.3578 length of data: 10000
-------------Round number:  73  -------------
selected users: [49, 14, 34, 70, 90, 35, 68, 76, 80, 9]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.5467) feature loss: tensor(0.1281)
Local adapation with distilling: 0.0001
training loss: tensor(0.4716) feature loss: tensor(0.1399)
Local adapation with distilling: 0.0001
training loss: tensor(0.4504) feature loss: tensor(0.1226)
Local adapation with distilling: 0.0001
training loss: tensor(0.6474) feature loss: tensor(0.1778)
Local adapation with distilling: 0.0001
training loss: tensor(0.6349) feature loss: tensor(0.1785)
Local adapation with distilling: 0.0001
training loss: tensor(0.4234) feature loss: tensor(0.1219)
Local adapation with distilling: 0.0001
training loss: tensor(0.5454) feature loss: tensor(0.1578)
Local adapation with distilling: 0.0001
training loss: tensor(0.3890) feature loss: tensor(0.1251)
Local adapation with distilling: 0.0001
training loss: tensor(0.6182) feature loss: tensor(0.1696)
Local adapation with distilling: 0.0001
training loss: tensor(0.5571) feature loss: tensor(0.1380)
Global Model Acc on global data: 0.3586 length of data: 10000
-------------Round number:  74  -------------
selected users: [85, 64, 63, 80, 6, 12, 43, 17, 7, 8]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.6401) feature loss: tensor(0.1791)
Local adapation with distilling: 0.0001
training loss: tensor(0.6039) feature loss: tensor(0.1879)
Local adapation with distilling: 0.0001
training loss: tensor(0.8043) feature loss: tensor(0.2080)
Local adapation with distilling: 0.0001
training loss: tensor(0.7399) feature loss: tensor(0.2154)
Local adapation with distilling: 0.0001
training loss: tensor(0.6754) feature loss: tensor(0.2078)
Local adapation with distilling: 0.0001
training loss: tensor(0.7540) feature loss: tensor(0.1927)
Local adapation with distilling: 0.0001
training loss: tensor(0.7336) feature loss: tensor(0.1908)
Local adapation with distilling: 0.0001
training loss: tensor(0.8279) feature loss: tensor(0.1968)
Local adapation with distilling: 0.0001
training loss: tensor(0.8042) feature loss: tensor(0.1968)
Local adapation with distilling: 0.0001
training loss: tensor(0.6741) feature loss: tensor(0.1830)
Global Model Acc on global data: 0.3634 length of data: 10000
-------------Round number:  75  -------------
selected users: [36, 7, 6, 45, 56, 54, 22, 37, 53, 68]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.5608) feature loss: tensor(0.2044)
Local adapation with distilling: 0.0001
training loss: tensor(0.4701) feature loss: tensor(0.1889)
Local adapation with distilling: 0.0001
training loss: tensor(0.5318) feature loss: tensor(0.1868)
Local adapation with distilling: 0.0001
training loss: tensor(0.5366) feature loss: tensor(0.1928)
Local adapation with distilling: 0.0001
training loss: tensor(0.5246) feature loss: tensor(0.1872)
Local adapation with distilling: 0.0001
training loss: tensor(0.5328) feature loss: tensor(0.1918)
Local adapation with distilling: 0.0001
training loss: tensor(0.5707) feature loss: tensor(0.2435)
Local adapation with distilling: 0.0001
training loss: tensor(0.4650) feature loss: tensor(0.1752)
Local adapation with distilling: 0.0001
training loss: tensor(0.6411) feature loss: tensor(0.2936)
Local adapation with distilling: 0.0001
training loss: tensor(0.4476) feature loss: tensor(0.1397)
Global Model Acc on global data: 0.3266 length of data: 10000
-------------Round number:  76  -------------
selected users: [38, 37, 32, 50, 10, 94, 19, 44, 86, 23]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.4887) feature loss: tensor(0.1621)
Local adapation with distilling: 0.0001
training loss: tensor(0.4335) feature loss: tensor(0.1526)
Local adapation with distilling: 0.0001
training loss: tensor(0.5435) feature loss: tensor(0.1512)
Local adapation with distilling: 0.0001
training loss: tensor(0.6679) feature loss: tensor(0.1970)
Local adapation with distilling: 0.0001
training loss: tensor(0.6756) feature loss: tensor(0.1966)
Local adapation with distilling: 0.0001
training loss: tensor(0.4932) feature loss: tensor(0.1486)
Local adapation with distilling: 0.0001
training loss: tensor(0.6488) feature loss: tensor(0.1567)
Local adapation with distilling: 0.0001
training loss: tensor(0.5045) feature loss: tensor(0.1497)
Local adapation with distilling: 0.0001
training loss: tensor(0.4126) feature loss: tensor(0.1578)
Local adapation with distilling: 0.0001
training loss: tensor(0.4968) feature loss: tensor(0.1469)
Global Model Acc on global data: 0.3493 length of data: 10000
-------------Round number:  77  -------------
selected users: [5, 93, 41, 96, 16, 42, 81, 91, 50, 58]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.6213) feature loss: tensor(0.1456)
Local adapation with distilling: 0.0001
training loss: tensor(0.5953) feature loss: tensor(0.1714)
Local adapation with distilling: 0.0001
training loss: tensor(0.8256) feature loss: tensor(0.1815)
Local adapation with distilling: 0.0001
training loss: tensor(0.5119) feature loss: tensor(0.1550)
Local adapation with distilling: 0.0001
training loss: tensor(0.4950) feature loss: tensor(0.1429)
Local adapation with distilling: 0.0001
training loss: tensor(0.5635) feature loss: tensor(0.1604)
Local adapation with distilling: 0.0001
training loss: tensor(0.7957) feature loss: tensor(0.1700)
Local adapation with distilling: 0.0001
training loss: tensor(0.8292) feature loss: tensor(0.2108)
Local adapation with distilling: 0.0001
training loss: tensor(0.6669) feature loss: tensor(0.1875)
Local adapation with distilling: 0.0001
training loss: tensor(0.5695) feature loss: tensor(0.1587)
Global Model Acc on global data: 0.3551 length of data: 10000
-------------Round number:  78  -------------
selected users: [9, 46, 7, 63, 15, 2, 74, 31, 5, 36]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.9329) feature loss: tensor(0.2630)
Local adapation with distilling: 0.0001
training loss: tensor(0.6062) feature loss: tensor(0.1723)
Local adapation with distilling: 0.0001
training loss: tensor(0.7333) feature loss: tensor(0.2012)
Local adapation with distilling: 0.0001
training loss: tensor(0.7691) feature loss: tensor(0.2221)
Local adapation with distilling: 0.0001
training loss: tensor(0.6531) feature loss: tensor(0.2076)
Local adapation with distilling: 0.0001
training loss: tensor(0.7840) feature loss: tensor(0.2257)
Local adapation with distilling: 0.0001
training loss: tensor(0.8224) feature loss: tensor(0.2224)
Local adapation with distilling: 0.0001
training loss: tensor(0.9226) feature loss: tensor(0.2804)
Local adapation with distilling: 0.0001
training loss: tensor(0.7016) feature loss: tensor(0.2349)
Local adapation with distilling: 0.0001
training loss: tensor(0.7116) feature loss: tensor(0.2228)
Global Model Acc on global data: 0.3461 length of data: 10000
-------------Round number:  79  -------------
selected users: [68, 18, 86, 60, 56, 32, 30, 24, 45, 92]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.4868) feature loss: tensor(0.1725)
Local adapation with distilling: 0.0001
training loss: tensor(0.5071) feature loss: tensor(0.1777)
Local adapation with distilling: 0.0001
training loss: tensor(0.3935) feature loss: tensor(0.1525)
Local adapation with distilling: 0.0001
training loss: tensor(0.6862) feature loss: tensor(0.2101)
Local adapation with distilling: 0.0001
training loss: tensor(0.4028) feature loss: tensor(0.1471)
Local adapation with distilling: 0.0001
training loss: tensor(0.4703) feature loss: tensor(0.1499)
Local adapation with distilling: 0.0001
training loss: tensor(0.6686) feature loss: tensor(0.2137)
Local adapation with distilling: 0.0001
training loss: tensor(0.4915) feature loss: tensor(0.1481)
Local adapation with distilling: 0.0001
training loss: tensor(0.3981) feature loss: tensor(0.1422)
Local adapation with distilling: 0.0001
training loss: tensor(0.4799) feature loss: tensor(0.1490)
Global Model Acc on global data: 0.352 length of data: 10000
-------------Round number:  80  -------------
selected users: [37, 65, 95, 53, 66, 30, 73, 85, 45, 36]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.6413) feature loss: tensor(0.2048)
Local adapation with distilling: 0.0001
training loss: tensor(0.5610) feature loss: tensor(0.2290)
Local adapation with distilling: 0.0001
training loss: tensor(0.5275) feature loss: tensor(0.2020)
Local adapation with distilling: 0.0001
training loss: tensor(0.7345) feature loss: tensor(0.2544)
Local adapation with distilling: 0.0001
training loss: tensor(0.5122) feature loss: tensor(0.2037)
Local adapation with distilling: 0.0001
training loss: tensor(0.5176) feature loss: tensor(0.1715)
Local adapation with distilling: 0.0001
training loss: tensor(0.7643) feature loss: tensor(0.2278)
Local adapation with distilling: 0.0001
training loss: tensor(0.5313) feature loss: tensor(0.1916)
Local adapation with distilling: 0.0001
training loss: tensor(0.5852) feature loss: tensor(0.2192)
Local adapation with distilling: 0.0001
training loss: tensor(0.5502) feature loss: tensor(0.2194)
Global Model Acc on global data: 0.2777 length of data: 10000
-------------Round number:  81  -------------
selected users: [73, 89, 41, 78, 51, 21, 30, 69, 8, 5]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.6126) feature loss: tensor(0.1714)
Local adapation with distilling: 0.0001
training loss: tensor(1.0627) feature loss: tensor(0.2422)
Local adapation with distilling: 0.0001
training loss: tensor(1.0474) feature loss: tensor(0.2396)
Local adapation with distilling: 0.0001
training loss: tensor(0.6138) feature loss: tensor(0.2013)
Local adapation with distilling: 0.0001
training loss: tensor(1.0502) feature loss: tensor(0.2335)
Local adapation with distilling: 0.0001
training loss: tensor(1.0326) feature loss: tensor(0.2306)
Local adapation with distilling: 0.0001
training loss: tensor(0.6929) feature loss: tensor(0.1917)
Local adapation with distilling: 0.0001
training loss: tensor(1.0643) feature loss: tensor(0.2264)
Local adapation with distilling: 0.0001
training loss: tensor(0.6102) feature loss: tensor(0.2005)
Local adapation with distilling: 0.0001
training loss: tensor(0.4481) feature loss: tensor(0.1603)
Global Model Acc on global data: 0.3437 length of data: 10000
-------------Round number:  82  -------------
selected users: [72, 33, 58, 2, 55, 84, 54, 75, 28, 40]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.7793) feature loss: tensor(0.1985)
Local adapation with distilling: 0.0001
training loss: tensor(0.5952) feature loss: tensor(0.1699)
Local adapation with distilling: 0.0001
training loss: tensor(0.5775) feature loss: tensor(0.1730)
Local adapation with distilling: 0.0001
training loss: tensor(0.7390) feature loss: tensor(0.1639)
Local adapation with distilling: 0.0001
training loss: tensor(0.4944) feature loss: tensor(0.1591)
Local adapation with distilling: 0.0001
training loss: tensor(0.7895) feature loss: tensor(0.1595)
Local adapation with distilling: 0.0001
training loss: tensor(0.8029) feature loss: tensor(0.1612)
Local adapation with distilling: 0.0001
training loss: tensor(0.5070) feature loss: tensor(0.1711)
Local adapation with distilling: 0.0001
training loss: tensor(0.5762) feature loss: tensor(0.1705)
Local adapation with distilling: 0.0001
training loss: tensor(0.7801) feature loss: tensor(0.2037)
Global Model Acc on global data: 0.3271 length of data: 10000
-------------Round number:  83  -------------
selected users: [6, 65, 95, 84, 61, 12, 30, 69, 35, 1]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.5868) feature loss: tensor(0.1642)
Local adapation with distilling: 0.0001
training loss: tensor(0.4276) feature loss: tensor(0.1596)
Local adapation with distilling: 0.0001
training loss: tensor(0.4430) feature loss: tensor(0.1731)
Local adapation with distilling: 0.0001
training loss: tensor(0.5032) feature loss: tensor(0.1672)
Local adapation with distilling: 0.0001
training loss: tensor(0.8228) feature loss: tensor(0.2233)
Local adapation with distilling: 0.0001
training loss: tensor(0.5532) feature loss: tensor(0.1873)
Local adapation with distilling: 0.0001
training loss: tensor(0.5863) feature loss: tensor(0.1727)
Local adapation with distilling: 0.0001
training loss: tensor(0.7535) feature loss: tensor(0.2245)
Local adapation with distilling: 0.0001
training loss: tensor(0.4347) feature loss: tensor(0.1581)
Local adapation with distilling: 0.0001
training loss: tensor(0.7016) feature loss: tensor(0.1930)
Global Model Acc on global data: 0.3299 length of data: 10000
-------------Round number:  84  -------------
selected users: [94, 55, 80, 1, 90, 11, 32, 8, 6, 82]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.4387) feature loss: tensor(0.1437)
Local adapation with distilling: 0.0001
training loss: tensor(0.3424) feature loss: tensor(0.1422)
Local adapation with distilling: 0.0001
training loss: tensor(0.4939) feature loss: tensor(0.1724)
Local adapation with distilling: 0.0001
training loss: tensor(0.4381) feature loss: tensor(0.1517)
Local adapation with distilling: 0.0001
training loss: tensor(0.5132) feature loss: tensor(0.1662)
Local adapation with distilling: 0.0001
training loss: tensor(0.4541) feature loss: tensor(0.1634)
Local adapation with distilling: 0.0001
training loss: tensor(0.4409) feature loss: tensor(0.1577)
Local adapation with distilling: 0.0001
training loss: tensor(0.4251) feature loss: tensor(0.1511)
Local adapation with distilling: 0.0001
training loss: tensor(0.4531) feature loss: tensor(0.1489)
Local adapation with distilling: 0.0001
training loss: tensor(0.4333) feature loss: tensor(0.1394)
Global Model Acc on global data: 0.3464 length of data: 10000
-------------Round number:  85  -------------
selected users: [81, 25, 40, 87, 41, 23, 10, 89, 50, 54]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.4615) feature loss: tensor(0.1373)
Local adapation with distilling: 0.0001
training loss: tensor(0.4392) feature loss: tensor(0.1300)
Local adapation with distilling: 0.0001
training loss: tensor(0.4872) feature loss: tensor(0.1451)
Local adapation with distilling: 0.0001
training loss: tensor(0.6203) feature loss: tensor(0.1262)
Local adapation with distilling: 0.0001
training loss: tensor(0.4438) feature loss: tensor(0.1333)
Local adapation with distilling: 0.0001
training loss: tensor(0.5930) feature loss: tensor(0.1233)
Local adapation with distilling: 0.0001
training loss: tensor(0.5047) feature loss: tensor(0.1493)
Local adapation with distilling: 0.0001
training loss: tensor(0.6513) feature loss: tensor(0.1378)
Local adapation with distilling: 0.0001
training loss: tensor(0.4867) feature loss: tensor(0.1463)
Local adapation with distilling: 0.0001
training loss: tensor(0.5244) feature loss: tensor(0.1338)
Global Model Acc on global data: 0.3239 length of data: 10000
-------------Round number:  86  -------------
selected users: [69, 74, 34, 68, 42, 0, 32, 88, 8, 3]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.5336) feature loss: tensor(0.1484)
Local adapation with distilling: 0.0001
training loss: tensor(0.4946) feature loss: tensor(0.1352)
Local adapation with distilling: 0.0001
training loss: tensor(0.4973) feature loss: tensor(0.1341)
Local adapation with distilling: 0.0001
training loss: tensor(0.5916) feature loss: tensor(0.1693)
Local adapation with distilling: 0.0001
training loss: tensor(0.5797) feature loss: tensor(0.1429)
Local adapation with distilling: 0.0001
training loss: tensor(0.5535) feature loss: tensor(0.1577)
Local adapation with distilling: 0.0001
training loss: tensor(0.5715) feature loss: tensor(0.1461)
Local adapation with distilling: 0.0001
training loss: tensor(0.6113) feature loss: tensor(0.1744)
Local adapation with distilling: 0.0001
training loss: tensor(0.5690) feature loss: tensor(0.1688)
Local adapation with distilling: 0.0001
training loss: tensor(0.5302) feature loss: tensor(0.1310)
Global Model Acc on global data: 0.3201 length of data: 10000
-------------Round number:  87  -------------
selected users: [16, 81, 85, 32, 39, 25, 26, 29, 65, 7]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.7865) feature loss: tensor(0.2383)
Local adapation with distilling: 0.0001
training loss: tensor(0.8675) feature loss: tensor(0.2843)
Local adapation with distilling: 0.0001
training loss: tensor(0.6824) feature loss: tensor(0.2124)
Local adapation with distilling: 0.0001
training loss: tensor(0.7609) feature loss: tensor(0.2342)
Local adapation with distilling: 0.0001
training loss: tensor(0.8170) feature loss: tensor(0.2685)
Local adapation with distilling: 0.0001
training loss: tensor(0.6967) feature loss: tensor(0.2312)
Local adapation with distilling: 0.0001
training loss: tensor(0.8239) feature loss: tensor(0.2782)
Local adapation with distilling: 0.0001
training loss: tensor(0.8546) feature loss: tensor(0.3054)
Local adapation with distilling: 0.0001
training loss: tensor(0.6971) feature loss: tensor(0.2173)
Local adapation with distilling: 0.0001
training loss: tensor(0.7634) feature loss: tensor(0.2412)
Global Model Acc on global data: 0.3257 length of data: 10000
-------------Round number:  88  -------------
selected users: [95, 53, 43, 84, 2, 74, 55, 31, 54, 97]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.5720) feature loss: tensor(0.1970)
Local adapation with distilling: 0.0001
training loss: tensor(0.8068) feature loss: tensor(0.2399)
Local adapation with distilling: 0.0001
training loss: tensor(0.7434) feature loss: tensor(0.2266)
Local adapation with distilling: 0.0001
training loss: tensor(0.7496) feature loss: tensor(0.2660)
Local adapation with distilling: 0.0001
training loss: tensor(0.7676) feature loss: tensor(0.2421)
Local adapation with distilling: 0.0001
training loss: tensor(0.7900) feature loss: tensor(0.2595)
Local adapation with distilling: 0.0001
training loss: tensor(0.5980) feature loss: tensor(0.1975)
Local adapation with distilling: 0.0001
training loss: tensor(0.9487) feature loss: tensor(0.3255)
Local adapation with distilling: 0.0001
training loss: tensor(0.7584) feature loss: tensor(0.2647)
Local adapation with distilling: 0.0001
training loss: tensor(0.6671) feature loss: tensor(0.2357)
Global Model Acc on global data: 0.2706 length of data: 10000
-------------Round number:  89  -------------
selected users: [65, 21, 87, 6, 46, 74, 44, 60, 72, 5]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.3907) feature loss: tensor(0.1408)
Local adapation with distilling: 0.0001
training loss: tensor(0.7954) feature loss: tensor(0.2197)
Local adapation with distilling: 0.0001
training loss: tensor(0.5011) feature loss: tensor(0.1732)
Local adapation with distilling: 0.0001
training loss: tensor(0.5488) feature loss: tensor(0.1560)
Local adapation with distilling: 0.0001
training loss: tensor(0.5946) feature loss: tensor(0.1860)
Local adapation with distilling: 0.0001
training loss: tensor(0.4181) feature loss: tensor(0.1744)
Local adapation with distilling: 0.0001
training loss: tensor(0.4631) feature loss: tensor(0.1676)
Local adapation with distilling: 0.0001
training loss: tensor(0.5503) feature loss: tensor(0.1507)
Local adapation with distilling: 0.0001
training loss: tensor(0.5583) feature loss: tensor(0.1701)
Local adapation with distilling: 0.0001
training loss: tensor(0.4244) feature loss: tensor(0.1564)
Global Model Acc on global data: 0.3342 length of data: 10000
-------------Round number:  90  -------------
selected users: [25, 85, 96, 89, 65, 94, 5, 35, 36, 92]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.4206) feature loss: tensor(0.1850)
Local adapation with distilling: 0.0001
training loss: tensor(0.3954) feature loss: tensor(0.1505)
Local adapation with distilling: 0.0001
training loss: tensor(0.5607) feature loss: tensor(0.2260)
Local adapation with distilling: 0.0001
training loss: tensor(0.8839) feature loss: tensor(0.3016)
Local adapation with distilling: 0.0001
training loss: tensor(0.3783) feature loss: tensor(0.1493)
Local adapation with distilling: 0.0001
training loss: tensor(0.4904) feature loss: tensor(0.1413)
Local adapation with distilling: 0.0001
training loss: tensor(0.4122) feature loss: tensor(0.1618)
Local adapation with distilling: 0.0001
training loss: tensor(0.4134) feature loss: tensor(0.1728)
Local adapation with distilling: 0.0001
training loss: tensor(0.5539) feature loss: tensor(0.1914)
Local adapation with distilling: 0.0001
training loss: tensor(0.8127) feature loss: tensor(0.2532)
Global Model Acc on global data: 0.2688 length of data: 10000
-------------Round number:  91  -------------
selected users: [75, 25, 3, 52, 78, 54, 59, 26, 62, 97]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.5567) feature loss: tensor(0.1621)
Local adapation with distilling: 0.0001
training loss: tensor(0.4923) feature loss: tensor(0.1493)
Local adapation with distilling: 0.0001
training loss: tensor(0.9681) feature loss: tensor(0.2238)
Local adapation with distilling: 0.0001
training loss: tensor(0.7756) feature loss: tensor(0.1899)
Local adapation with distilling: 0.0001
training loss: tensor(0.6640) feature loss: tensor(0.1669)
Local adapation with distilling: 0.0001
training loss: tensor(0.7164) feature loss: tensor(0.1793)
Local adapation with distilling: 0.0001
training loss: tensor(1.1534) feature loss: tensor(0.2428)
Local adapation with distilling: 0.0001
training loss: tensor(0.7224) feature loss: tensor(0.1703)
Local adapation with distilling: 0.0001
training loss: tensor(0.8454) feature loss: tensor(0.2025)
Local adapation with distilling: 0.0001
training loss: tensor(0.8633) feature loss: tensor(0.1879)
Global Model Acc on global data: 0.3254 length of data: 10000
-------------Round number:  92  -------------
selected users: [25, 99, 73, 61, 66, 36, 23, 83, 77, 6]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.4616) feature loss: tensor(0.1633)
Local adapation with distilling: 0.0001
training loss: tensor(0.9157) feature loss: tensor(0.2433)
Local adapation with distilling: 0.0001
training loss: tensor(0.7651) feature loss: tensor(0.2566)
Local adapation with distilling: 0.0001
training loss: tensor(1.2882) feature loss: tensor(0.2487)
Local adapation with distilling: 0.0001
training loss: tensor(0.6029) feature loss: tensor(0.1932)
Local adapation with distilling: 0.0001
training loss: tensor(0.5973) feature loss: tensor(0.1989)
Local adapation with distilling: 0.0001
training loss: tensor(0.7466) feature loss: tensor(0.2211)
Local adapation with distilling: 0.0001
training loss: tensor(0.7881) feature loss: tensor(0.2859)
Local adapation with distilling: 0.0001
training loss: tensor(0.7071) feature loss: tensor(0.2056)
Local adapation with distilling: 0.0001
training loss: tensor(0.5985) feature loss: tensor(0.1900)
Global Model Acc on global data: 0.3043 length of data: 10000
-------------Round number:  93  -------------
selected users: [75, 82, 56, 27, 42, 35, 1, 97, 66, 61]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.4378) feature loss: tensor(0.1547)
Local adapation with distilling: 0.0001
training loss: tensor(0.6485) feature loss: tensor(0.1650)
Local adapation with distilling: 0.0001
training loss: tensor(0.4003) feature loss: tensor(0.1528)
Local adapation with distilling: 0.0001
training loss: tensor(0.5018) feature loss: tensor(0.1495)
Local adapation with distilling: 0.0001
training loss: tensor(0.6772) feature loss: tensor(0.1651)
Local adapation with distilling: 0.0001
training loss: tensor(0.4183) feature loss: tensor(0.1501)
Local adapation with distilling: 0.0001
training loss: tensor(0.7858) feature loss: tensor(0.2091)
Local adapation with distilling: 0.0001
training loss: tensor(0.4927) feature loss: tensor(0.1467)
Local adapation with distilling: 0.0001
training loss: tensor(0.3394) feature loss: tensor(0.1381)
Local adapation with distilling: 0.0001
training loss: tensor(0.8863) feature loss: tensor(0.2362)
Global Model Acc on global data: 0.3074 length of data: 10000
-------------Round number:  94  -------------
selected users: [13, 73, 5, 18, 99, 48, 23, 4, 35, 17]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.7229) feature loss: tensor(0.1610)
Local adapation with distilling: 0.0001
training loss: tensor(0.6923) feature loss: tensor(0.1677)
Local adapation with distilling: 0.0001
training loss: tensor(0.5369) feature loss: tensor(0.1590)
Local adapation with distilling: 0.0001
training loss: tensor(0.6672) feature loss: tensor(0.1729)
Local adapation with distilling: 0.0001
training loss: tensor(0.8705) feature loss: tensor(0.1786)
Local adapation with distilling: 0.0001
training loss: tensor(0.6586) feature loss: tensor(0.1780)
Local adapation with distilling: 0.0001
training loss: tensor(0.6691) feature loss: tensor(0.1807)
Local adapation with distilling: 0.0001
training loss: tensor(0.8211) feature loss: tensor(0.1972)
Local adapation with distilling: 0.0001
training loss: tensor(0.5497) feature loss: tensor(0.1555)
Local adapation with distilling: 0.0001
training loss: tensor(0.6007) feature loss: tensor(0.1651)
Global Model Acc on global data: 0.322 length of data: 10000
-------------Round number:  95  -------------
selected users: [88, 9, 1, 60, 95, 26, 45, 71, 44, 21]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.5219) feature loss: tensor(0.1564)
Local adapation with distilling: 0.0001
training loss: tensor(0.7474) feature loss: tensor(0.1880)
Local adapation with distilling: 0.0001
training loss: tensor(0.6856) feature loss: tensor(0.1748)
Local adapation with distilling: 0.0001
training loss: tensor(0.8659) feature loss: tensor(0.2021)
Local adapation with distilling: 0.0001
training loss: tensor(0.4223) feature loss: tensor(0.1433)
Local adapation with distilling: 0.0001
training loss: tensor(0.5748) feature loss: tensor(0.1501)
Local adapation with distilling: 0.0001
training loss: tensor(0.4496) feature loss: tensor(0.1427)
Local adapation with distilling: 0.0001
training loss: tensor(0.7519) feature loss: tensor(0.1769)
Local adapation with distilling: 0.0001
training loss: tensor(0.6141) feature loss: tensor(0.1442)
Local adapation with distilling: 0.0001
training loss: tensor(0.7605) feature loss: tensor(0.1780)
Global Model Acc on global data: 0.3562 length of data: 10000
-------------Round number:  96  -------------
selected users: [41, 28, 52, 15, 87, 17, 75, 42, 45, 49]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.5634) feature loss: tensor(0.2022)
Local adapation with distilling: 0.0001
training loss: tensor(0.4737) feature loss: tensor(0.1546)
Local adapation with distilling: 0.0001
training loss: tensor(0.6660) feature loss: tensor(0.2246)
Local adapation with distilling: 0.0001
training loss: tensor(0.4117) feature loss: tensor(0.1478)
Local adapation with distilling: 0.0001
training loss: tensor(0.5686) feature loss: tensor(0.1734)
Local adapation with distilling: 0.0001
training loss: tensor(0.5578) feature loss: tensor(0.1459)
Local adapation with distilling: 0.0001
training loss: tensor(0.4103) feature loss: tensor(0.1584)
Local adapation with distilling: 0.0001
training loss: tensor(0.6358) feature loss: tensor(0.1654)
Local adapation with distilling: 0.0001
training loss: tensor(0.4135) feature loss: tensor(0.1510)
Local adapation with distilling: 0.0001
training loss: tensor(0.6782) feature loss: tensor(0.2442)
Global Model Acc on global data: 0.3496 length of data: 10000
-------------Round number:  97  -------------
selected users: [31, 43, 64, 56, 85, 2, 70, 21, 34, 50]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.7066) feature loss: tensor(0.1723)
Local adapation with distilling: 0.0001
training loss: tensor(0.6906) feature loss: tensor(0.1556)
Local adapation with distilling: 0.0001
training loss: tensor(0.7297) feature loss: tensor(0.1729)
Local adapation with distilling: 0.0001
training loss: tensor(0.7049) feature loss: tensor(0.1630)
Local adapation with distilling: 0.0001
training loss: tensor(0.4902) feature loss: tensor(0.1554)
Local adapation with distilling: 0.0001
training loss: tensor(0.6841) feature loss: tensor(0.1821)
Local adapation with distilling: 0.0001
training loss: tensor(0.7688) feature loss: tensor(0.1817)
Local adapation with distilling: 0.0001
training loss: tensor(0.7363) feature loss: tensor(0.2001)
Local adapation with distilling: 0.0001
training loss: tensor(0.7101) feature loss: tensor(0.1698)
Local adapation with distilling: 0.0001
training loss: tensor(0.7606) feature loss: tensor(0.1753)
Global Model Acc on global data: 0.3349 length of data: 10000
-------------Round number:  98  -------------
selected users: [11, 48, 97, 14, 22, 36, 99, 47, 33, 81]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.6054) feature loss: tensor(0.1700)
Local adapation with distilling: 0.0001
training loss: tensor(0.5326) feature loss: tensor(0.1485)
Local adapation with distilling: 0.0001
training loss: tensor(0.5444) feature loss: tensor(0.1517)
Local adapation with distilling: 0.0001
training loss: tensor(0.4835) feature loss: tensor(0.1510)
Local adapation with distilling: 0.0001
training loss: tensor(0.5295) feature loss: tensor(0.1711)
Local adapation with distilling: 0.0001
training loss: tensor(0.5479) feature loss: tensor(0.1617)
Local adapation with distilling: 0.0001
training loss: tensor(0.7826) feature loss: tensor(0.2050)
Local adapation with distilling: 0.0001
training loss: tensor(0.5917) feature loss: tensor(0.1606)
Local adapation with distilling: 0.0001
training loss: tensor(0.6281) feature loss: tensor(0.1951)
Local adapation with distilling: 0.0001
training loss: tensor(0.5495) feature loss: tensor(0.1623)
Global Model Acc on global data: 0.3686 length of data: 10000
-------------Round number:  99  -------------
selected users: [14, 34, 30, 78, 16, 15, 91, 38, 10, 85]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.3912) feature loss: tensor(0.1291)
Local adapation with distilling: 0.0001
training loss: tensor(0.4104) feature loss: tensor(0.1284)
Local adapation with distilling: 0.0001
training loss: tensor(0.5509) feature loss: tensor(0.1761)
Local adapation with distilling: 0.0001
training loss: tensor(0.4235) feature loss: tensor(0.1533)
Local adapation with distilling: 0.0001
training loss: tensor(0.3960) feature loss: tensor(0.1266)
Local adapation with distilling: 0.0001
training loss: tensor(0.4328) feature loss: tensor(0.1239)
Local adapation with distilling: 0.0001
training loss: tensor(0.4262) feature loss: tensor(0.1417)
Local adapation with distilling: 0.0001
training loss: tensor(0.4548) feature loss: tensor(0.1611)
Local adapation with distilling: 0.0001
training loss: tensor(0.5741) feature loss: tensor(0.1737)
Local adapation with distilling: 0.0001
training loss: tensor(0.4455) feature loss: tensor(0.1261)
Global Model Acc on global data: 0.3744 length of data: 10000
