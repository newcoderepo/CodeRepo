nohup: ignoring input
================================================================================
Summary of training process:
Dataset                : Cifar10
Batch size             : 64
Learing rate           : 0.001
Number of total clients: 100
Split method           : quantity
Split parameter        : 1.0
Clients per round      : 10
Number of global rounds: 100
Number of local rounds : 10
Feature from layer     : 0
Feature percentage     : 1.0
Local training loss    : CE_CE_KL
Loss of beta           : 1.0
Algorithm              : FedFea
Modelname              : MOBNET
Mode                   : training
Seed                   : 0
================================================================================
Files already downloaded and verified
Files already downloaded and verified
Class frequencies:
client,class0,class1,class2,class3,class4,class5,class6,class7,class8,class9,Amount
Client   0,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client   1,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client   2,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client   3,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,500
Client   4,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,500
Client   5,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,500
Client   6,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,500
Client   7,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,500
Client   8,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,500
Client   9,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,500
Client  10,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  11,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  12,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  13,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  14,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,500
Client  15,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,500
Client  16,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,500
Client  17,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,500
Client  18,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,500
Client  19,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,500
Client  20,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  21,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  22,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  23,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  24,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,500
Client  25,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,500
Client  26,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,500
Client  27,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,500
Client  28,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,500
Client  29,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,500
Client  30,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  31,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  32,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  33,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  34,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,500
Client  35,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,500
Client  36,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,500
Client  37,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,500
Client  38,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,500
Client  39,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,500
Client  40,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  41,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  42,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  43,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  44,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,500
Client  45,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,500
Client  46,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,500
Client  47,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,500
Client  48,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,500
Client  49,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,500
Client  50,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  51,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  52,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  53,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  54,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,500
Client  55,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,500
Client  56,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,500
Client  57,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,500
Client  58,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,500
Client  59,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,500
Client  60,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  61,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  62,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  63,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  64,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,500
Client  65,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,500
Client  66,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,500
Client  67,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,500
Client  68,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,500
Client  69,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,500
Client  70,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  71,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  72,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  73,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  74,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,500
Client  75,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,500
Client  76,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,500
Client  77,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,500
Client  78,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,500
Client  79,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,500
Client  80,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  81,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  82,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  83,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  84,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,500
Client  85,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,500
Client  86,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,500
Client  87,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,500
Client  88,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,500
Client  89,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,500
Client  90,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  91,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  92,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  93,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,500
Client  94,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,500
Client  95,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,500
Client  96,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,0.00,500
Client  97,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,0.00,500
Client  98,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,0.00,500
Client  99,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,500
0 [0] [0] [1 2 3 4 5 6 7 8 9]
0 training: Counter({0: 500}) testing iid: Counter({0: 1000})
1 [1] [1] [0 2 3 4 5 6 7 8 9]
1 training: Counter({1: 500}) testing iid: Counter({1: 1000})
2 [2] [2] [0 1 3 4 5 6 7 8 9]
2 training: Counter({2: 500}) testing iid: Counter({2: 1000})
3 [3] [3] [0 1 2 4 5 6 7 8 9]
3 training: Counter({3: 500}) testing iid: Counter({3: 1000})
4 [4] [4] [0 1 2 3 5 6 7 8 9]
4 training: Counter({4: 500}) testing iid: Counter({4: 1000})
5 [5] [5] [0 1 2 3 4 6 7 8 9]
5 training: Counter({5: 500}) testing iid: Counter({5: 1000})
6 [6] [6] [0 1 2 3 4 5 7 8 9]
6 training: Counter({6: 500}) testing iid: Counter({6: 1000})
7 [7] [7] [0 1 2 3 4 5 6 8 9]
7 training: Counter({7: 500}) testing iid: Counter({7: 1000})
8 [8] [8] [0 1 2 3 4 5 6 7 9]
8 training: Counter({8: 500}) testing iid: Counter({8: 1000})
9 [9] [9] [0 1 2 3 4 5 6 7 8]
9 training: Counter({9: 500}) testing iid: Counter({9: 1000})
10 [0] [0] [1 2 3 4 5 6 7 8 9]
10 training: Counter({0: 500}) testing iid: Counter({0: 1000})
11 [1] [1] [0 2 3 4 5 6 7 8 9]
11 training: Counter({1: 500}) testing iid: Counter({1: 1000})
12 [2] [2] [0 1 3 4 5 6 7 8 9]
12 training: Counter({2: 500}) testing iid: Counter({2: 1000})
13 [3] [3] [0 1 2 4 5 6 7 8 9]
13 training: Counter({3: 500}) testing iid: Counter({3: 1000})
14 [4] [4] [0 1 2 3 5 6 7 8 9]
14 training: Counter({4: 500}) testing iid: Counter({4: 1000})
15 [5] [5] [0 1 2 3 4 6 7 8 9]
15 training: Counter({5: 500}) testing iid: Counter({5: 1000})
16 [6] [6] [0 1 2 3 4 5 7 8 9]
16 training: Counter({6: 500}) testing iid: Counter({6: 1000})
17 [7] [7] [0 1 2 3 4 5 6 8 9]
17 training: Counter({7: 500}) testing iid: Counter({7: 1000})
18 [8] [8] [0 1 2 3 4 5 6 7 9]
18 training: Counter({8: 500}) testing iid: Counter({8: 1000})
19 [9] [9] [0 1 2 3 4 5 6 7 8]
19 training: Counter({9: 500}) testing iid: Counter({9: 1000})
20 [0] [0] [1 2 3 4 5 6 7 8 9]
20 training: Counter({0: 500}) testing iid: Counter({0: 1000})
21 [1] [1] [0 2 3 4 5 6 7 8 9]
21 training: Counter({1: 500}) testing iid: Counter({1: 1000})
22 [2] [2] [0 1 3 4 5 6 7 8 9]
22 training: Counter({2: 500}) testing iid: Counter({2: 1000})
23 [3] [3] [0 1 2 4 5 6 7 8 9]
23 training: Counter({3: 500}) testing iid: Counter({3: 1000})
24 [4] [4] [0 1 2 3 5 6 7 8 9]
24 training: Counter({4: 500}) testing iid: Counter({4: 1000})
25 [5] [5] [0 1 2 3 4 6 7 8 9]
25 training: Counter({5: 500}) testing iid: Counter({5: 1000})
26 [6] [6] [0 1 2 3 4 5 7 8 9]
26 training: Counter({6: 500}) testing iid: Counter({6: 1000})
27 [7] [7] [0 1 2 3 4 5 6 8 9]
27 training: Counter({7: 500}) testing iid: Counter({7: 1000})
28 [8] [8] [0 1 2 3 4 5 6 7 9]
28 training: Counter({8: 500}) testing iid: Counter({8: 1000})
29 [9] [9] [0 1 2 3 4 5 6 7 8]
29 training: Counter({9: 500}) testing iid: Counter({9: 1000})
30 [0] [0] [1 2 3 4 5 6 7 8 9]
30 training: Counter({0: 500}) testing iid: Counter({0: 1000})
31 [1] [1] [0 2 3 4 5 6 7 8 9]
31 training: Counter({1: 500}) testing iid: Counter({1: 1000})
32 [2] [2] [0 1 3 4 5 6 7 8 9]
32 training: Counter({2: 500}) testing iid: Counter({2: 1000})
33 [3] [3] [0 1 2 4 5 6 7 8 9]
33 training: Counter({3: 500}) testing iid: Counter({3: 1000})
34 [4] [4] [0 1 2 3 5 6 7 8 9]
34 training: Counter({4: 500}) testing iid: Counter({4: 1000})
35 [5] [5] [0 1 2 3 4 6 7 8 9]
35 training: Counter({5: 500}) testing iid: Counter({5: 1000})
36 [6] [6] [0 1 2 3 4 5 7 8 9]
36 training: Counter({6: 500}) testing iid: Counter({6: 1000})
37 [7] [7] [0 1 2 3 4 5 6 8 9]
37 training: Counter({7: 500}) testing iid: Counter({7: 1000})
38 [8] [8] [0 1 2 3 4 5 6 7 9]
38 training: Counter({8: 500}) testing iid: Counter({8: 1000})
39 [9] [9] [0 1 2 3 4 5 6 7 8]
39 training: Counter({9: 500}) testing iid: Counter({9: 1000})
40 [0] [0] [1 2 3 4 5 6 7 8 9]
40 training: Counter({0: 500}) testing iid: Counter({0: 1000})
41 [1] [1] [0 2 3 4 5 6 7 8 9]
41 training: Counter({1: 500}) testing iid: Counter({1: 1000})
42 [2] [2] [0 1 3 4 5 6 7 8 9]
42 training: Counter({2: 500}) testing iid: Counter({2: 1000})
43 [3] [3] [0 1 2 4 5 6 7 8 9]
43 training: Counter({3: 500}) testing iid: Counter({3: 1000})
44 [4] [4] [0 1 2 3 5 6 7 8 9]
44 training: Counter({4: 500}) testing iid: Counter({4: 1000})
45 [5] [5] [0 1 2 3 4 6 7 8 9]
45 training: Counter({5: 500}) testing iid: Counter({5: 1000})
46 [6] [6] [0 1 2 3 4 5 7 8 9]
46 training: Counter({6: 500}) testing iid: Counter({6: 1000})
47 [7] [7] [0 1 2 3 4 5 6 8 9]
47 training: Counter({7: 500}) testing iid: Counter({7: 1000})
48 [8] [8] [0 1 2 3 4 5 6 7 9]
48 training: Counter({8: 500}) testing iid: Counter({8: 1000})
49 [9] [9] [0 1 2 3 4 5 6 7 8]
49 training: Counter({9: 500}) testing iid: Counter({9: 1000})
50 [0] [0] [1 2 3 4 5 6 7 8 9]
50 training: Counter({0: 500}) testing iid: Counter({0: 1000})
51 [1] [1] [0 2 3 4 5 6 7 8 9]
51 training: Counter({1: 500}) testing iid: Counter({1: 1000})
52 [2] [2] [0 1 3 4 5 6 7 8 9]
52 training: Counter({2: 500}) testing iid: Counter({2: 1000})
53 [3] [3] [0 1 2 4 5 6 7 8 9]
53 training: Counter({3: 500}) testing iid: Counter({3: 1000})
54 [4] [4] [0 1 2 3 5 6 7 8 9]
54 training: Counter({4: 500}) testing iid: Counter({4: 1000})
55 [5] [5] [0 1 2 3 4 6 7 8 9]
55 training: Counter({5: 500}) testing iid: Counter({5: 1000})
56 [6] [6] [0 1 2 3 4 5 7 8 9]
56 training: Counter({6: 500}) testing iid: Counter({6: 1000})
57 [7] [7] [0 1 2 3 4 5 6 8 9]
57 training: Counter({7: 500}) testing iid: Counter({7: 1000})
58 [8] [8] [0 1 2 3 4 5 6 7 9]
58 training: Counter({8: 500}) testing iid: Counter({8: 1000})
59 [9] [9] [0 1 2 3 4 5 6 7 8]
59 training: Counter({9: 500}) testing iid: Counter({9: 1000})
60 [0] [0] [1 2 3 4 5 6 7 8 9]
60 training: Counter({0: 500}) testing iid: Counter({0: 1000})
61 [1] [1] [0 2 3 4 5 6 7 8 9]
61 training: Counter({1: 500}) testing iid: Counter({1: 1000})
62 [2] [2] [0 1 3 4 5 6 7 8 9]
62 training: Counter({2: 500}) testing iid: Counter({2: 1000})
63 [3] [3] [0 1 2 4 5 6 7 8 9]
63 training: Counter({3: 500}) testing iid: Counter({3: 1000})
64 [4] [4] [0 1 2 3 5 6 7 8 9]
64 training: Counter({4: 500}) testing iid: Counter({4: 1000})
65 [5] [5] [0 1 2 3 4 6 7 8 9]
65 training: Counter({5: 500}) testing iid: Counter({5: 1000})
66 [6] [6] [0 1 2 3 4 5 7 8 9]
66 training: Counter({6: 500}) testing iid: Counter({6: 1000})
67 [7] [7] [0 1 2 3 4 5 6 8 9]
67 training: Counter({7: 500}) testing iid: Counter({7: 1000})
68 [8] [8] [0 1 2 3 4 5 6 7 9]
68 training: Counter({8: 500}) testing iid: Counter({8: 1000})
69 [9] [9] [0 1 2 3 4 5 6 7 8]
69 training: Counter({9: 500}) testing iid: Counter({9: 1000})
70 [0] [0] [1 2 3 4 5 6 7 8 9]
70 training: Counter({0: 500}) testing iid: Counter({0: 1000})
71 [1] [1] [0 2 3 4 5 6 7 8 9]
71 training: Counter({1: 500}) testing iid: Counter({1: 1000})
72 [2] [2] [0 1 3 4 5 6 7 8 9]
72 training: Counter({2: 500}) testing iid: Counter({2: 1000})
73 [3] [3] [0 1 2 4 5 6 7 8 9]
73 training: Counter({3: 500}) testing iid: Counter({3: 1000})
74 [4] [4] [0 1 2 3 5 6 7 8 9]
74 training: Counter({4: 500}) testing iid: Counter({4: 1000})
75 [5] [5] [0 1 2 3 4 6 7 8 9]
75 training: Counter({5: 500}) testing iid: Counter({5: 1000})
76 [6] [6] [0 1 2 3 4 5 7 8 9]
76 training: Counter({6: 500}) testing iid: Counter({6: 1000})
77 [7] [7] [0 1 2 3 4 5 6 8 9]
77 training: Counter({7: 500}) testing iid: Counter({7: 1000})
78 [8] [8] [0 1 2 3 4 5 6 7 9]
78 training: Counter({8: 500}) testing iid: Counter({8: 1000})
79 [9] [9] [0 1 2 3 4 5 6 7 8]
79 training: Counter({9: 500}) testing iid: Counter({9: 1000})
80 [0] [0] [1 2 3 4 5 6 7 8 9]
80 training: Counter({0: 500}) testing iid: Counter({0: 1000})
81 [1] [1] [0 2 3 4 5 6 7 8 9]
81 training: Counter({1: 500}) testing iid: Counter({1: 1000})
82 [2] [2] [0 1 3 4 5 6 7 8 9]
82 training: Counter({2: 500}) testing iid: Counter({2: 1000})
83 [3] [3] [0 1 2 4 5 6 7 8 9]
83 training: Counter({3: 500}) testing iid: Counter({3: 1000})
84 [4] [4] [0 1 2 3 5 6 7 8 9]
84 training: Counter({4: 500}) testing iid: Counter({4: 1000})
85 [5] [5] [0 1 2 3 4 6 7 8 9]
85 training: Counter({5: 500}) testing iid: Counter({5: 1000})
86 [6] [6] [0 1 2 3 4 5 7 8 9]
86 training: Counter({6: 500}) testing iid: Counter({6: 1000})
87 [7] [7] [0 1 2 3 4 5 6 8 9]
87 training: Counter({7: 500}) testing iid: Counter({7: 1000})
88 [8] [8] [0 1 2 3 4 5 6 7 9]
88 training: Counter({8: 500}) testing iid: Counter({8: 1000})
89 [9] [9] [0 1 2 3 4 5 6 7 8]
89 training: Counter({9: 500}) testing iid: Counter({9: 1000})
90 [0] [0] [1 2 3 4 5 6 7 8 9]
90 training: Counter({0: 500}) testing iid: Counter({0: 1000})
91 [1] [1] [0 2 3 4 5 6 7 8 9]
91 training: Counter({1: 500}) testing iid: Counter({1: 1000})
92 [2] [2] [0 1 3 4 5 6 7 8 9]
92 training: Counter({2: 500}) testing iid: Counter({2: 1000})
93 [3] [3] [0 1 2 4 5 6 7 8 9]
93 training: Counter({3: 500}) testing iid: Counter({3: 1000})
94 [4] [4] [0 1 2 3 5 6 7 8 9]
94 training: Counter({4: 500}) testing iid: Counter({4: 1000})
95 [5] [5] [0 1 2 3 4 6 7 8 9]
95 training: Counter({5: 500}) testing iid: Counter({5: 1000})
96 [6] [6] [0 1 2 3 4 5 7 8 9]
96 training: Counter({6: 500}) testing iid: Counter({6: 1000})
97 [7] [7] [0 1 2 3 4 5 6 8 9]
97 training: Counter({7: 500}) testing iid: Counter({7: 1000})
98 [8] [8] [0 1 2 3 4 5 6 7 9]
98 training: Counter({8: 500}) testing iid: Counter({8: 1000})
99 [9] [9] [0 1 2 3 4 5 6 7 8]
99 training: Counter({9: 500}) testing iid: Counter({9: 1000})
Num_samples of Training set per client
Total_training_samples: 50000
Global test set: 10000
Finish Generating Samples, distribution saved
MobileNetV2(
  (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (layers): Sequential(
    (0): Block(
      (conv1): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): Block(
      (conv1): Conv2d(16, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=96, bias=False)
      (bn2): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(96, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(16, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (2): Block(
      (conv1): Conv2d(24, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=144, bias=False)
      (bn2): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(144, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (3): Block(
      (conv1): Conv2d(24, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(144, 144, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=144, bias=False)
      (bn2): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(144, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (4): Block(
      (conv1): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
      (bn2): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(192, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (5): Block(
      (conv1): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
      (bn2): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(192, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (6): Block(
      (conv1): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(192, 192, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=192, bias=False)
      (bn2): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(192, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (7): Block(
      (conv1): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
      (bn2): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (8): Block(
      (conv1): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
      (bn2): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (9): Block(
      (conv1): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
      (bn2): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (10): Block(
      (conv1): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
      (bn2): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(384, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(64, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (11): Block(
      (conv1): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)
      (bn2): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (12): Block(
      (conv1): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)
      (bn2): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (13): Block(
      (conv1): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(576, 576, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=576, bias=False)
      (bn2): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(576, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (14): Block(
      (conv1): Conv2d(160, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(960, 960, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=960, bias=False)
      (bn2): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(960, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (15): Block(
      (conv1): Conv2d(160, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(960, 960, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=960, bias=False)
      (bn2): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(960, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (16): Block(
      (conv1): Conv2d(160, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(960, 960, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=960, bias=False)
      (bn2): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(960, 320, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(160, 320, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (conv2): Conv2d(320, 1280, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn2): BatchNorm2d(1280, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (linear): Linear(in_features=1280, out_features=10, bias=True)
)
number of parameters: 2296922
clients initializting...
output size: 10
  0%|          | 0/100 [00:00<?, ?it/s]  1%|          | 1/100 [00:03<06:14,  3.78s/it]  2%|▏         | 2/100 [00:04<04:35,  2.81s/it]  3%|▎         | 3/100 [00:04<03:26,  2.13s/it]  4%|▍         | 4/100 [00:05<02:38,  1.65s/it]  5%|▌         | 5/100 [00:05<02:05,  1.32s/it]  6%|▌         | 6/100 [00:06<01:41,  1.08s/it]  7%|▋         | 7/100 [00:06<01:25,  1.09it/s]  8%|▊         | 8/100 [00:07<01:13,  1.26it/s]  9%|▉         | 9/100 [00:08<01:04,  1.40it/s] 10%|█         | 10/100 [00:08<00:58,  1.54it/s] 11%|█         | 11/100 [00:09<00:54,  1.65it/s] 12%|█▏        | 12/100 [00:09<00:51,  1.72it/s] 13%|█▎        | 13/100 [00:10<00:49,  1.77it/s] 14%|█▍        | 14/100 [00:10<00:47,  1.81it/s] 15%|█▌        | 15/100 [00:11<00:46,  1.84it/s] 16%|█▌        | 16/100 [00:11<00:45,  1.85it/s] 17%|█▋        | 17/100 [00:12<00:45,  1.84it/s] 18%|█▊        | 18/100 [00:12<00:44,  1.84it/s] 19%|█▉        | 19/100 [00:13<00:43,  1.87it/s] 20%|██        | 20/100 [00:13<00:42,  1.90it/s] 21%|██        | 21/100 [00:14<00:41,  1.92it/s] 22%|██▏       | 22/100 [00:14<00:40,  1.93it/s] 23%|██▎       | 23/100 [00:15<00:40,  1.90it/s] 24%|██▍       | 24/100 [00:15<00:39,  1.91it/s] 25%|██▌       | 25/100 [00:16<00:39,  1.89it/s] 26%|██▌       | 26/100 [00:16<00:38,  1.91it/s] 27%|██▋       | 27/100 [00:17<00:38,  1.90it/s] 28%|██▊       | 28/100 [00:17<00:38,  1.88it/s] 29%|██▉       | 29/100 [00:18<00:37,  1.88it/s] 30%|███       | 30/100 [00:19<00:37,  1.88it/s] 31%|███       | 31/100 [00:19<00:36,  1.88it/s] 32%|███▏      | 32/100 [00:20<00:35,  1.89it/s] 33%|███▎      | 33/100 [00:20<00:35,  1.91it/s] 34%|███▍      | 34/100 [00:21<00:35,  1.87it/s] 35%|███▌      | 35/100 [00:21<00:35,  1.82it/s] 36%|███▌      | 36/100 [00:22<00:35,  1.80it/s] 37%|███▋      | 37/100 [00:22<00:35,  1.79it/s] 38%|███▊      | 38/100 [00:23<00:34,  1.79it/s] 39%|███▉      | 39/100 [00:24<00:34,  1.78it/s] 40%|████      | 40/100 [00:24<00:33,  1.78it/s] 41%|████      | 41/100 [00:29<01:44,  1.77s/it] 42%|████▏     | 42/100 [00:29<01:21,  1.41s/it] 43%|████▎     | 43/100 [00:30<01:06,  1.16s/it] 44%|████▍     | 44/100 [00:30<00:54,  1.03it/s] 45%|████▌     | 45/100 [00:31<00:46,  1.17it/s] 46%|████▌     | 46/100 [00:31<00:41,  1.31it/s] 47%|████▋     | 47/100 [00:32<00:37,  1.43it/s] 48%|████▊     | 48/100 [00:33<00:33,  1.55it/s] 49%|████▉     | 49/100 [00:33<00:31,  1.64it/s] 50%|█████     | 50/100 [00:34<00:29,  1.71it/s] 51%|█████     | 51/100 [00:34<00:27,  1.77it/s] 52%|█████▏    | 52/100 [00:35<00:26,  1.82it/s] 53%|█████▎    | 53/100 [00:35<00:25,  1.85it/s] 54%|█████▍    | 54/100 [00:36<00:24,  1.87it/s] 55%|█████▌    | 55/100 [00:36<00:24,  1.86it/s] 56%|█████▌    | 56/100 [00:37<00:23,  1.87it/s] 57%|█████▋    | 57/100 [00:37<00:22,  1.88it/s] 58%|█████▊    | 58/100 [00:38<00:22,  1.89it/s] 59%|█████▉    | 59/100 [00:38<00:21,  1.91it/s] 60%|██████    | 60/100 [00:39<00:21,  1.89it/s] 61%|██████    | 61/100 [00:39<00:20,  1.88it/s] 62%|██████▏   | 62/100 [00:40<00:20,  1.87it/s] 63%|██████▎   | 63/100 [00:40<00:19,  1.88it/s] 64%|██████▍   | 64/100 [00:41<00:19,  1.89it/s] 65%|██████▌   | 65/100 [00:42<00:18,  1.87it/s] 66%|██████▌   | 66/100 [00:42<00:18,  1.87it/s] 67%|██████▋   | 67/100 [00:43<00:17,  1.85it/s] 68%|██████▊   | 68/100 [00:43<00:17,  1.86it/s] 69%|██████▉   | 69/100 [00:44<00:16,  1.88it/s] 70%|███████   | 70/100 [00:44<00:15,  1.88it/s] 71%|███████   | 71/100 [00:45<00:15,  1.85it/s] 72%|███████▏  | 72/100 [00:45<00:15,  1.86it/s] 73%|███████▎  | 73/100 [00:46<00:14,  1.88it/s] 74%|███████▍  | 74/100 [00:46<00:13,  1.88it/s] 75%|███████▌  | 75/100 [00:47<00:13,  1.79it/s] 76%|███████▌  | 76/100 [00:48<00:13,  1.77it/s] 77%|███████▋  | 77/100 [00:48<00:12,  1.79it/s] 78%|███████▊  | 78/100 [00:49<00:12,  1.80it/s] 79%|███████▉  | 79/100 [00:49<00:11,  1.80it/s] 80%|████████  | 80/100 [00:50<00:11,  1.81it/s] 81%|████████  | 81/100 [00:50<00:10,  1.81it/s] 82%|████████▏ | 82/100 [00:51<00:09,  1.83it/s] 83%|████████▎ | 83/100 [00:55<00:26,  1.58s/it] 84%|████████▍ | 84/100 [00:55<00:20,  1.27s/it] 85%|████████▌ | 85/100 [00:56<00:15,  1.05s/it] 86%|████████▌ | 86/100 [00:56<00:12,  1.12it/s] 87%|████████▋ | 87/100 [00:57<00:10,  1.27it/s] 88%|████████▊ | 88/100 [00:57<00:08,  1.41it/s] 89%|████████▉ | 89/100 [00:58<00:07,  1.51it/s] 90%|█████████ | 90/100 [00:59<00:06,  1.61it/s] 91%|█████████ | 91/100 [00:59<00:05,  1.70it/s] 92%|█████████▏| 92/100 [01:00<00:04,  1.75it/s] 93%|█████████▎| 93/100 [01:00<00:03,  1.80it/s] 94%|█████████▍| 94/100 [01:01<00:03,  1.81it/s] 95%|█████████▌| 95/100 [01:01<00:02,  1.85it/s] 96%|█████████▌| 96/100 [01:02<00:02,  1.88it/s] 97%|█████████▋| 97/100 [01:02<00:01,  1.89it/s] 98%|█████████▊| 98/100 [01:03<00:01,  1.90it/s] 99%|█████████▉| 99/100 [01:03<00:00,  1.92it/s]100%|██████████| 100/100 [01:04<00:00,  1.92it/s]100%|██████████| 100/100 [01:04<00:00,  1.56it/s]
Number of users per round / total users: 10  /  100
Finished creating FL server.
=== Training starts: algorithm FedFea ===
-------------Round number:  0  -------------
selected users: [26, 86, 2, 55, 75, 93, 16, 73, 54, 95]
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
all data: 5000
Local adapation with distilling: 0.001
training loss: tensor(2.4125) feature loss: tensor(0.4520)
Local adapation with distilling: 0.001
training loss: tensor(2.2064) feature loss: tensor(0.3741)
Local adapation with distilling: 0.001
training loss: tensor(2.3463) feature loss: tensor(0.3720)
Local adapation with distilling: 0.001
training loss: tensor(2.2281) feature loss: tensor(0.3691)
Local adapation with distilling: 0.001
training loss: tensor(2.2366) feature loss: tensor(0.3938)
Local adapation with distilling: 0.001
training loss: tensor(2.4277) feature loss: tensor(0.4516)
Local adapation with distilling: 0.001
training loss: tensor(2.3285) feature loss: tensor(0.4681)
Local adapation with distilling: 0.001
training loss: tensor(2.2944) feature loss: tensor(0.4051)
Local adapation with distilling: 0.001
training loss: tensor(2.3995) feature loss: tensor(0.4873)
Local adapation with distilling: 0.001
training loss: tensor(2.2862) feature loss: tensor(0.4548)
Global Model Acc on global data: 0.1 length of data: 10000
save a model
-------------Round number:  1  -------------
selected users: [80, 84, 33, 81, 93, 17, 36, 82, 69, 65]
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
all data: 5000
Local adapation with distilling: 0.000982
training loss: tensor(2.4796) feature loss: tensor(0.2728)
Local adapation with distilling: 0.000982
training loss: tensor(2.6303) feature loss: tensor(0.2631)
Local adapation with distilling: 0.000982
training loss: tensor(2.5700) feature loss: tensor(0.2627)
Local adapation with distilling: 0.000982
training loss: tensor(2.6369) feature loss: tensor(0.3249)
Local adapation with distilling: 0.000982
training loss: tensor(2.5443) feature loss: tensor(0.2804)
Local adapation with distilling: 0.000982
training loss: tensor(2.6797) feature loss: tensor(0.3114)
Local adapation with distilling: 0.000982
training loss: tensor(2.6284) feature loss: tensor(0.2582)
Local adapation with distilling: 0.000982
training loss: tensor(2.7155) feature loss: tensor(0.3351)
Local adapation with distilling: 0.000982
training loss: tensor(2.5776) feature loss: tensor(0.3024)
Local adapation with distilling: 0.000982
training loss: tensor(2.5956) feature loss: tensor(0.2288)
Global Model Acc on global data: 0.1339 length of data: 10000
save a model
-------------Round number:  2  -------------
selected users: [83, 30, 56, 24, 16, 23, 2, 27, 28, 13]
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
all data: 5000
Local adapation with distilling: 0.000964
training loss: tensor(1.9067) feature loss: tensor(0.2680)
Local adapation with distilling: 0.000964
training loss: tensor(2.0859) feature loss: tensor(0.3131)
Local adapation with distilling: 0.000964
training loss: tensor(2.0246) feature loss: tensor(0.3429)
Local adapation with distilling: 0.000964
training loss: tensor(2.0539) feature loss: tensor(0.2849)
Local adapation with distilling: 0.000964
training loss: tensor(1.9234) feature loss: tensor(0.2621)
Local adapation with distilling: 0.000964
training loss: tensor(1.8755) feature loss: tensor(0.2604)
Local adapation with distilling: 0.000964
training loss: tensor(2.0558) feature loss: tensor(0.2779)
Local adapation with distilling: 0.000964
training loss: tensor(1.9427) feature loss: tensor(0.2654)
Local adapation with distilling: 0.000964
training loss: tensor(2.2161) feature loss: tensor(0.3728)
Local adapation with distilling: 0.000964
training loss: tensor(1.8743) feature loss: tensor(0.2966)
Global Model Acc on global data: 0.1698 length of data: 10000
save a model
-------------Round number:  3  -------------
selected users: [93, 67, 6, 64, 96, 83, 98, 42, 25, 15]
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
all data: 5000
Local adapation with distilling: 0.000946
training loss: tensor(1.8183) feature loss: tensor(0.2782)
Local adapation with distilling: 0.000946
training loss: tensor(1.9545) feature loss: tensor(0.3081)
Local adapation with distilling: 0.000946
training loss: tensor(1.8351) feature loss: tensor(0.2441)
Local adapation with distilling: 0.000946
training loss: tensor(1.9511) feature loss: tensor(0.2673)
Local adapation with distilling: 0.000946
training loss: tensor(1.8142) feature loss: tensor(0.2352)
Local adapation with distilling: 0.000946
training loss: tensor(1.7608) feature loss: tensor(0.2368)
Local adapation with distilling: 0.000946
training loss: tensor(2.0105) feature loss: tensor(0.3075)
Local adapation with distilling: 0.000946
training loss: tensor(1.8873) feature loss: tensor(0.2782)
Local adapation with distilling: 0.000946
training loss: tensor(1.8663) feature loss: tensor(0.2768)
Local adapation with distilling: 0.000946
training loss: tensor(1.9216) feature loss: tensor(0.3285)
Global Model Acc on global data: 0.1785 length of data: 10000
save a model
-------------Round number:  4  -------------
selected users: [20, 10, 96, 16, 63, 24, 53, 97, 41, 47]
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
all data: 5000
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(2.2020) feature loss: tensor(0.5197)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(2.0821) feature loss: tensor(0.4527)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.6751) feature loss: tensor(0.3790)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.6209) feature loss: tensor(0.3703)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.5994) feature loss: tensor(0.4248)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.5981) feature loss: tensor(0.3625)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.5521) feature loss: tensor(0.3844)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.7378) feature loss: tensor(0.4589)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(2.3483) feature loss: tensor(0.5154)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.7889) feature loss: tensor(0.4105)
Global Model Acc on global data: 0.2052 length of data: 10000
save a model
-------------Round number:  5  -------------
selected users: [66, 32, 46, 28, 74, 23, 10, 20, 17, 35]
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
all data: 5000
Local adapation with distilling: 0.00091
training loss: tensor(1.6121) feature loss: tensor(0.2756)
Local adapation with distilling: 0.00091
training loss: tensor(1.8114) feature loss: tensor(0.3435)
Local adapation with distilling: 0.00091
training loss: tensor(1.7530) feature loss: tensor(0.3054)
Local adapation with distilling: 0.00091
training loss: tensor(2.3160) feature loss: tensor(0.3405)
Local adapation with distilling: 0.00091
training loss: tensor(1.7460) feature loss: tensor(0.2856)
Local adapation with distilling: 0.00091
training loss: tensor(1.6649) feature loss: tensor(0.2789)
Local adapation with distilling: 0.00091
training loss: tensor(2.1324) feature loss: tensor(0.4596)
Local adapation with distilling: 0.00091
training loss: tensor(1.8690) feature loss: tensor(0.3591)
Local adapation with distilling: 0.00091
training loss: tensor(1.7630) feature loss: tensor(0.3131)
Local adapation with distilling: 0.00091
training loss: tensor(1.8222) feature loss: tensor(0.3258)
Global Model Acc on global data: 0.2013 length of data: 10000
-------------Round number:  6  -------------
selected users: [17, 34, 0, 45, 60, 86, 20, 47, 44, 81]
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
all data: 5000
Local adapation with distilling: 0.000892
training loss: tensor(1.4975) feature loss: tensor(0.4804)
Local adapation with distilling: 0.000892
training loss: tensor(1.4282) feature loss: tensor(0.3733)
Local adapation with distilling: 0.000892
training loss: tensor(1.7148) feature loss: tensor(0.4751)
Local adapation with distilling: 0.000892
training loss: tensor(1.5860) feature loss: tensor(0.4440)
Local adapation with distilling: 0.000892
training loss: tensor(1.7832) feature loss: tensor(0.5401)
Local adapation with distilling: 0.000892
training loss: tensor(1.3909) feature loss: tensor(0.3403)
Local adapation with distilling: 0.000892
training loss: tensor(1.7190) feature loss: tensor(0.4630)
Local adapation with distilling: 0.000892
training loss: tensor(1.5069) feature loss: tensor(0.3968)
Local adapation with distilling: 0.000892
training loss: tensor(1.4464) feature loss: tensor(0.3631)
Local adapation with distilling: 0.000892
training loss: tensor(2.2033) feature loss: tensor(0.4451)
Global Model Acc on global data: 0.2026 length of data: 10000
-------------Round number:  7  -------------
selected users: [37, 26, 78, 91, 49, 15, 93, 71, 86, 22]
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
all data: 5000
Local adapation with distilling: 0.000874
training loss: tensor(2.0660) feature loss: tensor(0.4619)
Local adapation with distilling: 0.000874
training loss: tensor(2.0452) feature loss: tensor(0.4119)
Local adapation with distilling: 0.000874
training loss: tensor(2.6846) feature loss: tensor(0.5488)
Local adapation with distilling: 0.000874
training loss: tensor(2.3816) feature loss: tensor(0.5921)
Local adapation with distilling: 0.000874
training loss: tensor(5.0562) feature loss: tensor(0.5591)
Local adapation with distilling: 0.000874
training loss: tensor(2.1543) feature loss: tensor(0.4700)
Local adapation with distilling: 0.000874
training loss: tensor(2.2257) feature loss: tensor(0.5347)
Local adapation with distilling: 0.000874
training loss: tensor(2.4631) feature loss: tensor(0.5355)
Local adapation with distilling: 0.000874
training loss: tensor(2.0685) feature loss: tensor(0.4547)
Local adapation with distilling: 0.000874
training loss: tensor(2.3695) feature loss: tensor(0.5724)
Global Model Acc on global data: 0.2418 length of data: 10000
save a model
-------------Round number:  8  -------------
selected users: [17, 23, 1, 44, 55, 99, 86, 29, 62, 33]
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
all data: 5000
Local adapation with distilling: 0.000856
training loss: tensor(2.0299) feature loss: tensor(0.4556)
Local adapation with distilling: 0.000856
training loss: tensor(1.7773) feature loss: tensor(0.3472)
Local adapation with distilling: 0.000856
training loss: tensor(1.8481) feature loss: tensor(0.3308)
Local adapation with distilling: 0.000856
training loss: tensor(1.8182) feature loss: tensor(0.2842)
Local adapation with distilling: 0.000856
training loss: tensor(1.9074) feature loss: tensor(0.4083)
Local adapation with distilling: 0.000856
training loss: tensor(2.3697) feature loss: tensor(0.3999)
Local adapation with distilling: 0.000856
training loss: tensor(1.8513) feature loss: tensor(0.3451)
Local adapation with distilling: 0.000856
training loss: tensor(2.3568) feature loss: tensor(0.3905)
Local adapation with distilling: 0.000856
training loss: tensor(1.8788) feature loss: tensor(0.3395)
Local adapation with distilling: 0.000856
training loss: tensor(1.7401) feature loss: tensor(0.3751)
Global Model Acc on global data: 0.2042 length of data: 10000
-------------Round number:  9  -------------
selected users: [75, 42, 46, 68, 3, 39, 23, 20, 70, 73]
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
all data: 5000
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(1.6479) feature loss: tensor(0.3809)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(1.6855) feature loss: tensor(0.3680)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(1.7271) feature loss: tensor(0.4160)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(2.2629) feature loss: tensor(0.4641)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(1.6115) feature loss: tensor(0.4051)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(1.9320) feature loss: tensor(0.4548)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(1.4932) feature loss: tensor(0.3664)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(2.0033) feature loss: tensor(0.4751)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(2.0673) feature loss: tensor(0.4381)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(1.6765) feature loss: tensor(0.4217)
Global Model Acc on global data: 0.1857 length of data: 10000
-------------Round number:  10  -------------
selected users: [19, 14, 43, 37, 66, 3, 79, 41, 38, 68]
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
all data: 5000
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(1.8055) feature loss: tensor(0.4992)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(1.5552) feature loss: tensor(0.4387)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(1.3897) feature loss: tensor(0.4053)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(1.8057) feature loss: tensor(0.4776)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(1.4810) feature loss: tensor(0.4094)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(1.3996) feature loss: tensor(0.4151)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(1.8528) feature loss: tensor(0.5032)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(2.0615) feature loss: tensor(0.4976)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(1.8105) feature loss: tensor(0.4863)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(1.6785) feature loss: tensor(0.4685)
Global Model Acc on global data: 0.2361 length of data: 10000
-------------Round number:  11  -------------
selected users: [46, 49, 22, 58, 41, 98, 62, 29, 30, 51]
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
all data: 5000
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(1.4494) feature loss: tensor(0.4262)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(1.7598) feature loss: tensor(0.4835)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(1.4673) feature loss: tensor(0.4471)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(1.6387) feature loss: tensor(0.4680)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(1.5825) feature loss: tensor(0.4720)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(1.6625) feature loss: tensor(0.4657)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(1.4913) feature loss: tensor(0.4536)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(1.6593) feature loss: tensor(0.4838)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(1.8484) feature loss: tensor(0.4894)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(1.7636) feature loss: tensor(0.5089)
Global Model Acc on global data: 0.2971 length of data: 10000
save a model
-------------Round number:  12  -------------
selected users: [17, 41, 92, 14, 68, 31, 89, 15, 21, 60]
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
all data: 5000
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(2.0923) feature loss: tensor(0.4975)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(1.7048) feature loss: tensor(0.4914)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(1.7719) feature loss: tensor(0.5359)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(1.7139) feature loss: tensor(0.4867)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(1.7161) feature loss: tensor(0.4351)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(1.7974) feature loss: tensor(0.4710)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(1.8075) feature loss: tensor(0.4785)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(1.9960) feature loss: tensor(0.4631)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(1.8342) feature loss: tensor(0.4982)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(1.8053) feature loss: tensor(0.4706)
Global Model Acc on global data: 0.3347 length of data: 10000
save a model
-------------Round number:  13  -------------
selected users: [37, 62, 83, 14, 43, 9, 44, 31, 69, 57]
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
all data: 5000
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(1.5513) feature loss: tensor(0.4162)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(1.5337) feature loss: tensor(0.4017)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(1.4581) feature loss: tensor(0.4244)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(1.4008) feature loss: tensor(0.3715)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(1.4182) feature loss: tensor(0.4029)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(1.4980) feature loss: tensor(0.3904)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(1.4421) feature loss: tensor(0.3943)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(1.4002) feature loss: tensor(0.3721)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(1.4216) feature loss: tensor(0.3971)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(1.5594) feature loss: tensor(0.4170)
Global Model Acc on global data: 0.2636 length of data: 10000
-------------Round number:  14  -------------
selected users: [24, 39, 35, 44, 55, 70, 82, 40, 91, 65]
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
all data: 5000
Local adapation with distilling: 0.000748
training loss: tensor(1.4749) feature loss: tensor(0.5046)
Local adapation with distilling: 0.000748
training loss: tensor(1.5231) feature loss: tensor(0.4916)
Local adapation with distilling: 0.000748
training loss: tensor(1.6751) feature loss: tensor(0.5223)
Local adapation with distilling: 0.000748
training loss: tensor(1.4278) feature loss: tensor(0.4683)
Local adapation with distilling: 0.000748
training loss: tensor(1.6883) feature loss: tensor(0.5255)
Local adapation with distilling: 0.000748
training loss: tensor(1.6445) feature loss: tensor(0.4919)
Local adapation with distilling: 0.000748
training loss: tensor(1.4538) feature loss: tensor(0.4945)
Local adapation with distilling: 0.000748
training loss: tensor(1.6350) feature loss: tensor(0.4953)
Local adapation with distilling: 0.000748
training loss: tensor(1.4931) feature loss: tensor(0.4747)
Local adapation with distilling: 0.000748
training loss: tensor(1.7698) feature loss: tensor(0.5223)
Global Model Acc on global data: 0.2499 length of data: 10000
-------------Round number:  15  -------------
selected users: [84, 36, 57, 51, 46, 78, 93, 14, 11, 59]
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
all data: 5000
Local adapation with distilling: 0.00073
training loss: tensor(1.3059) feature loss: tensor(0.3973)
Local adapation with distilling: 0.00073
training loss: tensor(1.4933) feature loss: tensor(0.4543)
Local adapation with distilling: 0.00073
training loss: tensor(1.5326) feature loss: tensor(0.4546)
Local adapation with distilling: 0.00073
training loss: tensor(1.3922) feature loss: tensor(0.4398)
Local adapation with distilling: 0.00073
training loss: tensor(1.5304) feature loss: tensor(0.4678)
Local adapation with distilling: 0.00073
training loss: tensor(1.5953) feature loss: tensor(0.4340)
Local adapation with distilling: 0.00073
training loss: tensor(1.4174) feature loss: tensor(0.4781)
Local adapation with distilling: 0.00073
training loss: tensor(1.2823) feature loss: tensor(0.3976)
Local adapation with distilling: 0.00073
training loss: tensor(1.5019) feature loss: tensor(0.4292)
Local adapation with distilling: 0.00073
training loss: tensor(1.4508) feature loss: tensor(0.4338)
Global Model Acc on global data: 0.2112 length of data: 10000
-------------Round number:  16  -------------
selected users: [7, 25, 71, 42, 47, 29, 63, 88, 50, 9]
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
all data: 5000
Local adapation with distilling: 0.000712
training loss: tensor(1.6980) feature loss: tensor(0.5563)
Local adapation with distilling: 0.000712
training loss: tensor(1.7612) feature loss: tensor(0.4978)
Local adapation with distilling: 0.000712
training loss: tensor(1.6528) feature loss: tensor(0.4805)
Local adapation with distilling: 0.000712
training loss: tensor(1.7138) feature loss: tensor(0.5383)
Local adapation with distilling: 0.000712
training loss: tensor(1.7201) feature loss: tensor(0.5660)
Local adapation with distilling: 0.000712
training loss: tensor(1.7762) feature loss: tensor(0.4959)
Local adapation with distilling: 0.000712
training loss: tensor(1.6707) feature loss: tensor(0.5429)
Local adapation with distilling: 0.000712
training loss: tensor(1.8244) feature loss: tensor(0.5032)
Local adapation with distilling: 0.000712
training loss: tensor(1.7017) feature loss: tensor(0.4897)
Local adapation with distilling: 0.000712
training loss: tensor(1.7559) feature loss: tensor(0.4990)
Global Model Acc on global data: 0.3412 length of data: 10000
save a model
-------------Round number:  17  -------------
selected users: [71, 28, 9, 4, 73, 34, 94, 92, 47, 37]
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
all data: 5000
Local adapation with distilling: 0.000694
training loss: tensor(1.0978) feature loss: tensor(0.2145)
Local adapation with distilling: 0.000694
training loss: tensor(1.0494) feature loss: tensor(0.2044)
Local adapation with distilling: 0.000694
training loss: tensor(1.2844) feature loss: tensor(0.2150)
Local adapation with distilling: 0.000694
training loss: tensor(1.0274) feature loss: tensor(0.2184)
Local adapation with distilling: 0.000694
training loss: tensor(1.0569) feature loss: tensor(0.1985)
Local adapation with distilling: 0.000694
training loss: tensor(1.0215) feature loss: tensor(0.2043)
Local adapation with distilling: 0.000694
training loss: tensor(1.0672) feature loss: tensor(0.2239)
Local adapation with distilling: 0.000694
training loss: tensor(1.1625) feature loss: tensor(0.2801)
Local adapation with distilling: 0.000694
training loss: tensor(1.0303) feature loss: tensor(0.2338)
Local adapation with distilling: 0.000694
training loss: tensor(1.0470) feature loss: tensor(0.2280)
Global Model Acc on global data: 0.2735 length of data: 10000
-------------Round number:  18  -------------
selected users: [53, 47, 43, 54, 33, 48, 0, 12, 44, 91]
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
all data: 5000
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(1.1748) feature loss: tensor(0.3016)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(1.2029) feature loss: tensor(0.3063)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(1.1472) feature loss: tensor(0.2549)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(1.1348) feature loss: tensor(0.2439)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(1.1638) feature loss: tensor(0.2692)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(1.2499) feature loss: tensor(0.2614)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(1.2703) feature loss: tensor(0.2715)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(1.3335) feature loss: tensor(0.3102)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(1.0980) feature loss: tensor(0.2442)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(1.3307) feature loss: tensor(0.2672)
Global Model Acc on global data: 0.2636 length of data: 10000
-------------Round number:  19  -------------
selected users: [85, 72, 16, 18, 2, 38, 90, 30, 83, 61]
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
all data: 5000
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(2.0589) feature loss: tensor(0.4299)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(1.5656) feature loss: tensor(0.4916)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(2.0463) feature loss: tensor(0.4488)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(1.4960) feature loss: tensor(0.4017)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(1.4938) feature loss: tensor(0.4032)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(1.5177) feature loss: tensor(0.3985)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(1.5647) feature loss: tensor(0.4121)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(1.4808) feature loss: tensor(0.4032)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(1.4240) feature loss: tensor(0.4078)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(1.5543) feature loss: tensor(0.4148)
Global Model Acc on global data: 0.3293 length of data: 10000
-------------Round number:  20  -------------
selected users: [70, 74, 2, 44, 56, 48, 12, 36, 0, 49]
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
all data: 5000
Local adapation with distilling: 0.00064
training loss: tensor(1.1590) feature loss: tensor(0.2807)
Local adapation with distilling: 0.00064
training loss: tensor(1.0897) feature loss: tensor(0.2531)
Local adapation with distilling: 0.00064
training loss: tensor(1.1934) feature loss: tensor(0.3086)
Local adapation with distilling: 0.00064
training loss: tensor(1.1588) feature loss: tensor(0.2788)
Local adapation with distilling: 0.00064
training loss: tensor(1.3092) feature loss: tensor(0.2975)
Local adapation with distilling: 0.00064
training loss: tensor(1.2028) feature loss: tensor(0.2684)
Local adapation with distilling: 0.00064
training loss: tensor(1.2196) feature loss: tensor(0.3133)
Local adapation with distilling: 0.00064
training loss: tensor(1.3696) feature loss: tensor(0.3044)
Local adapation with distilling: 0.00064
training loss: tensor(1.1058) feature loss: tensor(0.2727)
Local adapation with distilling: 0.00064
training loss: tensor(1.6070) feature loss: tensor(0.3113)
Global Model Acc on global data: 0.3116 length of data: 10000
-------------Round number:  21  -------------
selected users: [23, 81, 85, 34, 62, 46, 42, 31, 93, 11]
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
all data: 5000
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(1.4284) feature loss: tensor(0.4746)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(1.3698) feature loss: tensor(0.3975)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(1.5877) feature loss: tensor(0.4378)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(1.2854) feature loss: tensor(0.3722)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(1.3228) feature loss: tensor(0.4520)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(1.3533) feature loss: tensor(0.3801)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(1.5276) feature loss: tensor(0.5620)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(1.5159) feature loss: tensor(0.3932)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(1.3510) feature loss: tensor(0.3992)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(1.3521) feature loss: tensor(0.3979)
Global Model Acc on global data: 0.3263 length of data: 10000
-------------Round number:  22  -------------
selected users: [2, 49, 82, 31, 37, 12, 87, 42, 99, 85]
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
all data: 5000
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(1.6696) feature loss: tensor(0.5452)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(2.0462) feature loss: tensor(0.4675)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(1.7790) feature loss: tensor(0.6100)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(1.4604) feature loss: tensor(0.4424)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(4.4683) feature loss: tensor(0.5866)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(1.6343) feature loss: tensor(0.4681)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(4.3276) feature loss: tensor(0.5818)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(1.6485) feature loss: tensor(0.4750)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(2.1428) feature loss: tensor(0.4719)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(1.8983) feature loss: tensor(0.5298)
Global Model Acc on global data: 0.3046 length of data: 10000
-------------Round number:  23  -------------
selected users: [26, 80, 82, 68, 77, 37, 3, 55, 20, 17]
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
all data: 5000
Local adapation with distilling: 0.000586
training loss: tensor(1.6583) feature loss: tensor(0.4349)
Local adapation with distilling: 0.000586
training loss: tensor(1.4305) feature loss: tensor(0.4038)
Local adapation with distilling: 0.000586
training loss: tensor(1.5929) feature loss: tensor(0.5257)
Local adapation with distilling: 0.000586
training loss: tensor(1.8752) feature loss: tensor(0.4283)
Local adapation with distilling: 0.000586
training loss: tensor(2.0277) feature loss: tensor(0.5487)
Local adapation with distilling: 0.000586
training loss: tensor(1.9536) feature loss: tensor(0.4945)
Local adapation with distilling: 0.000586
training loss: tensor(1.5295) feature loss: tensor(0.4266)
Local adapation with distilling: 0.000586
training loss: tensor(1.5078) feature loss: tensor(0.4363)
Local adapation with distilling: 0.000586
training loss: tensor(1.4629) feature loss: tensor(0.4166)
Local adapation with distilling: 0.000586
training loss: tensor(2.0660) feature loss: tensor(0.5229)
Global Model Acc on global data: 0.3768 length of data: 10000
save a model
-------------Round number:  24  -------------
selected users: [26, 31, 37, 86, 76, 14, 88, 48, 71, 67]
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
all data: 5000
Local adapation with distilling: 0.000568
training loss: tensor(1.0895) feature loss: tensor(0.4082)
Local adapation with distilling: 0.000568
training loss: tensor(1.0291) feature loss: tensor(0.3515)
Local adapation with distilling: 0.000568
training loss: tensor(1.0334) feature loss: tensor(0.3620)
Local adapation with distilling: 0.000568
training loss: tensor(0.9546) feature loss: tensor(0.3328)
Local adapation with distilling: 0.000568
training loss: tensor(1.0527) feature loss: tensor(0.3533)
Local adapation with distilling: 0.000568
training loss: tensor(1.0818) feature loss: tensor(0.4092)
Local adapation with distilling: 0.000568
training loss: tensor(1.0549) feature loss: tensor(0.3354)
Local adapation with distilling: 0.000568
training loss: tensor(0.9943) feature loss: tensor(0.3423)
Local adapation with distilling: 0.000568
training loss: tensor(1.0697) feature loss: tensor(0.3543)
Local adapation with distilling: 0.000568
training loss: tensor(0.9974) feature loss: tensor(0.3478)
Global Model Acc on global data: 0.3759 length of data: 10000
-------------Round number:  25  -------------
selected users: [41, 29, 33, 65, 74, 6, 57, 89, 87, 98]
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
all data: 5000
Local adapation with distilling: 0.00055
training loss: tensor(1.3512) feature loss: tensor(0.3746)
Local adapation with distilling: 0.00055
training loss: tensor(1.6765) feature loss: tensor(0.3989)
Local adapation with distilling: 0.00055
training loss: tensor(1.3470) feature loss: tensor(0.4116)
Local adapation with distilling: 0.00055
training loss: tensor(1.4703) feature loss: tensor(0.4355)
Local adapation with distilling: 0.00055
training loss: tensor(1.3153) feature loss: tensor(0.3963)
Local adapation with distilling: 0.00055
training loss: tensor(1.2501) feature loss: tensor(0.3825)
Local adapation with distilling: 0.00055
training loss: tensor(1.3197) feature loss: tensor(0.3970)
Local adapation with distilling: 0.00055
training loss: tensor(1.4208) feature loss: tensor(0.4061)
Local adapation with distilling: 0.00055
training loss: tensor(1.4321) feature loss: tensor(0.4104)
Local adapation with distilling: 0.00055
training loss: tensor(1.3047) feature loss: tensor(0.4003)
Global Model Acc on global data: 0.4112 length of data: 10000
save a model
-------------Round number:  26  -------------
selected users: [8, 69, 84, 41, 25, 5, 63, 95, 33, 70]
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
all data: 5000
Local adapation with distilling: 0.000532
training loss: tensor(1.1969) feature loss: tensor(0.3093)
Local adapation with distilling: 0.000532
training loss: tensor(1.2332) feature loss: tensor(0.3267)
Local adapation with distilling: 0.000532
training loss: tensor(1.2662) feature loss: tensor(0.3196)
Local adapation with distilling: 0.000532
training loss: tensor(1.1950) feature loss: tensor(0.3159)
Local adapation with distilling: 0.000532
training loss: tensor(1.1506) feature loss: tensor(0.3108)
Local adapation with distilling: 0.000532
training loss: tensor(1.1631) feature loss: tensor(0.3123)
Local adapation with distilling: 0.000532
training loss: tensor(1.3187) feature loss: tensor(0.4128)
Local adapation with distilling: 0.000532
training loss: tensor(1.2208) feature loss: tensor(0.3115)
Local adapation with distilling: 0.000532
training loss: tensor(1.2444) feature loss: tensor(0.3845)
Local adapation with distilling: 0.000532
training loss: tensor(1.2463) feature loss: tensor(0.3234)
Global Model Acc on global data: 0.4599 length of data: 10000
save a model
-------------Round number:  27  -------------
selected users: [89, 68, 43, 50, 40, 95, 27, 85, 22, 44]
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
all data: 5000
Local adapation with distilling: 0.000514
training loss: tensor(1.3735) feature loss: tensor(0.2826)
Local adapation with distilling: 0.000514
training loss: tensor(1.1797) feature loss: tensor(0.2683)
Local adapation with distilling: 0.000514
training loss: tensor(1.1374) feature loss: tensor(0.2707)
Local adapation with distilling: 0.000514
training loss: tensor(1.1929) feature loss: tensor(0.2759)
Local adapation with distilling: 0.000514
training loss: tensor(1.1564) feature loss: tensor(0.2770)
Local adapation with distilling: 0.000514
training loss: tensor(1.1099) feature loss: tensor(0.2721)
Local adapation with distilling: 0.000514
training loss: tensor(1.4243) feature loss: tensor(0.2787)
Local adapation with distilling: 0.000514
training loss: tensor(1.1981) feature loss: tensor(0.3111)
Local adapation with distilling: 0.000514
training loss: tensor(1.3690) feature loss: tensor(0.2965)
Local adapation with distilling: 0.000514
training loss: tensor(1.2471) feature loss: tensor(0.2634)
Global Model Acc on global data: 0.4816 length of data: 10000
save a model
-------------Round number:  28  -------------
selected users: [67, 14, 0, 86, 13, 18, 30, 36, 52, 95]
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
all data: 5000
Local adapation with distilling: 0.000496
training loss: tensor(1.1791) feature loss: tensor(0.2021)
Local adapation with distilling: 0.000496
training loss: tensor(1.0446) feature loss: tensor(0.1889)
Local adapation with distilling: 0.000496
training loss: tensor(0.9768) feature loss: tensor(0.1830)
Local adapation with distilling: 0.000496
training loss: tensor(1.0956) feature loss: tensor(0.1804)
Local adapation with distilling: 0.000496
training loss: tensor(1.0780) feature loss: tensor(0.2295)
Local adapation with distilling: 0.000496
training loss: tensor(1.0350) feature loss: tensor(0.1935)
Local adapation with distilling: 0.000496
training loss: tensor(0.9711) feature loss: tensor(0.1942)
Local adapation with distilling: 0.000496
training loss: tensor(1.1747) feature loss: tensor(0.2795)
Local adapation with distilling: 0.000496
training loss: tensor(1.2101) feature loss: tensor(0.2842)
Local adapation with distilling: 0.000496
training loss: tensor(0.9748) feature loss: tensor(0.1834)
Global Model Acc on global data: 0.419 length of data: 10000
-------------Round number:  29  -------------
selected users: [73, 8, 10, 7, 19, 71, 92, 25, 38, 12]
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
all data: 5000
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(1.1868) feature loss: tensor(0.3646)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(1.1845) feature loss: tensor(0.3242)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(1.1029) feature loss: tensor(0.3217)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(1.2566) feature loss: tensor(0.3282)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(1.3939) feature loss: tensor(0.3394)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(1.4741) feature loss: tensor(0.3459)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(1.0993) feature loss: tensor(0.3237)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(1.1323) feature loss: tensor(0.3678)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(1.1671) feature loss: tensor(0.3227)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(1.3150) feature loss: tensor(0.3783)
Global Model Acc on global data: 0.4765 length of data: 10000
-------------Round number:  30  -------------
selected users: [20, 91, 34, 52, 8, 74, 21, 88, 80, 89]
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
all data: 5000
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.7925) feature loss: tensor(0.2341)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(1.1162) feature loss: tensor(0.2593)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.9052) feature loss: tensor(0.2409)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.8881) feature loss: tensor(0.2478)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.9053) feature loss: tensor(0.2554)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.9133) feature loss: tensor(0.2478)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(1.0589) feature loss: tensor(0.3223)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.8699) feature loss: tensor(0.2540)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.8362) feature loss: tensor(0.2406)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(1.0301) feature loss: tensor(0.2907)
Global Model Acc on global data: 0.4246 length of data: 10000
-------------Round number:  31  -------------
selected users: [17, 33, 76, 3, 56, 0, 37, 8, 60, 67]
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
all data: 5000
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(1.6144) feature loss: tensor(0.3936)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(1.0960) feature loss: tensor(0.4021)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(1.0507) feature loss: tensor(0.3771)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(1.1289) feature loss: tensor(0.3766)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(1.0554) feature loss: tensor(0.3771)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.9994) feature loss: tensor(0.3744)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(1.6616) feature loss: tensor(0.3788)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(1.0800) feature loss: tensor(0.3768)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(1.0140) feature loss: tensor(0.4140)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(1.5999) feature loss: tensor(0.3917)
Global Model Acc on global data: 0.3901 length of data: 10000
-------------Round number:  32  -------------
selected users: [22, 39, 85, 97, 55, 33, 80, 13, 27, 96]
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
all data: 5000
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(1.6236) feature loss: tensor(0.4688)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(1.4289) feature loss: tensor(0.3493)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(1.9413) feature loss: tensor(0.5145)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(1.4778) feature loss: tensor(0.4432)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(1.8759) feature loss: tensor(0.4480)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(1.3110) feature loss: tensor(0.3726)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(1.1931) feature loss: tensor(0.3388)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(1.4564) feature loss: tensor(0.4966)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(1.2629) feature loss: tensor(0.3605)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(1.2914) feature loss: tensor(0.3836)
Global Model Acc on global data: 0.4058 length of data: 10000
-------------Round number:  33  -------------
selected users: [56, 90, 95, 82, 60, 71, 6, 81, 2, 70]
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
all data: 5000
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.8849) feature loss: tensor(0.3057)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.8691) feature loss: tensor(0.3138)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.8600) feature loss: tensor(0.3081)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.9025) feature loss: tensor(0.2981)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.8606) feature loss: tensor(0.3168)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(1.2250) feature loss: tensor(0.3759)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.8866) feature loss: tensor(0.3135)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(1.2247) feature loss: tensor(0.3617)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(1.0113) feature loss: tensor(0.3057)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.8537) feature loss: tensor(0.3108)
Global Model Acc on global data: 0.3335 length of data: 10000
-------------Round number:  34  -------------
selected users: [14, 74, 15, 4, 32, 59, 91, 10, 50, 53]
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
all data: 5000
Local adapation with distilling: 0.000388
training loss: tensor(1.3882) feature loss: tensor(0.3707)
Local adapation with distilling: 0.000388
training loss: tensor(1.4157) feature loss: tensor(0.3730)
Local adapation with distilling: 0.000388
training loss: tensor(1.3528) feature loss: tensor(0.3778)
Local adapation with distilling: 0.000388
training loss: tensor(1.3974) feature loss: tensor(0.3921)
Local adapation with distilling: 0.000388
training loss: tensor(1.2577) feature loss: tensor(0.3733)
Local adapation with distilling: 0.000388
training loss: tensor(1.4314) feature loss: tensor(0.3667)
Local adapation with distilling: 0.000388
training loss: tensor(1.2445) feature loss: tensor(0.3685)
Local adapation with distilling: 0.000388
training loss: tensor(1.0972) feature loss: tensor(0.3517)
Local adapation with distilling: 0.000388
training loss: tensor(1.1179) feature loss: tensor(0.3564)
Local adapation with distilling: 0.000388
training loss: tensor(1.2357) feature loss: tensor(0.3594)
Global Model Acc on global data: 0.4092 length of data: 10000
-------------Round number:  35  -------------
selected users: [40, 71, 98, 27, 70, 31, 10, 24, 51, 35]
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
all data: 5000
Local adapation with distilling: 0.00037
training loss: tensor(0.7792) feature loss: tensor(0.2841)
Local adapation with distilling: 0.00037
training loss: tensor(0.9010) feature loss: tensor(0.2893)
Local adapation with distilling: 0.00037
training loss: tensor(0.9834) feature loss: tensor(0.2921)
Local adapation with distilling: 0.00037
training loss: tensor(1.2414) feature loss: tensor(0.2864)
Local adapation with distilling: 0.00037
training loss: tensor(0.7821) feature loss: tensor(0.2898)
Local adapation with distilling: 0.00037
training loss: tensor(0.9345) feature loss: tensor(0.2997)
Local adapation with distilling: 0.00037
training loss: tensor(0.7764) feature loss: tensor(0.2830)
Local adapation with distilling: 0.00037
training loss: tensor(0.8128) feature loss: tensor(0.2808)
Local adapation with distilling: 0.00037
training loss: tensor(0.9651) feature loss: tensor(0.3050)
Local adapation with distilling: 0.00037
training loss: tensor(0.8566) feature loss: tensor(0.2850)
Global Model Acc on global data: 0.3449 length of data: 10000
-------------Round number:  36  -------------
selected users: [59, 42, 2, 27, 28, 75, 58, 68, 52, 74]
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
all data: 5000
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(1.5363) feature loss: tensor(0.4984)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(1.3387) feature loss: tensor(0.5011)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(1.3938) feature loss: tensor(0.5021)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(1.4923) feature loss: tensor(0.4885)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(1.4803) feature loss: tensor(0.5296)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(1.4036) feature loss: tensor(0.4822)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(1.2843) feature loss: tensor(0.4826)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(1.3267) feature loss: tensor(0.5150)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(1.4280) feature loss: tensor(0.5759)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(1.1670) feature loss: tensor(0.4792)
Global Model Acc on global data: 0.4645 length of data: 10000
-------------Round number:  37  -------------
selected users: [61, 49, 86, 78, 5, 91, 81, 82, 89, 18]
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
all data: 5000
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.9257) feature loss: tensor(0.2764)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(1.0877) feature loss: tensor(0.2561)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.8656) feature loss: tensor(0.2438)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.9670) feature loss: tensor(0.3710)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.8055) feature loss: tensor(0.2462)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.9948) feature loss: tensor(0.2606)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.9623) feature loss: tensor(0.2975)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.7815) feature loss: tensor(0.2538)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(1.0936) feature loss: tensor(0.2609)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.8541) feature loss: tensor(0.3111)
Global Model Acc on global data: 0.4623 length of data: 10000
-------------Round number:  38  -------------
selected users: [40, 73, 49, 45, 64, 16, 69, 17, 72, 66]
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
all data: 5000
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(1.2517) feature loss: tensor(0.3124)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(1.5034) feature loss: tensor(0.2925)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(1.4059) feature loss: tensor(0.3004)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(1.4225) feature loss: tensor(0.3295)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(1.2971) feature loss: tensor(0.2881)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(1.1817) feature loss: tensor(0.2875)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(1.4168) feature loss: tensor(0.3019)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(1.7148) feature loss: tensor(0.3055)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(1.4162) feature loss: tensor(0.3424)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(1.1810) feature loss: tensor(0.2683)
Global Model Acc on global data: 0.4469 length of data: 10000
-------------Round number:  39  -------------
selected users: [22, 53, 84, 57, 87, 58, 29, 21, 85, 79]
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
all data: 5000
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(1.1261) feature loss: tensor(0.2926)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(1.1598) feature loss: tensor(0.3247)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(1.0702) feature loss: tensor(0.3158)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(1.4491) feature loss: tensor(0.3930)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(1.3379) feature loss: tensor(0.2969)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(1.0895) feature loss: tensor(0.2925)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(1.1103) feature loss: tensor(0.2969)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(1.2002) feature loss: tensor(0.3085)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(1.1192) feature loss: tensor(0.3465)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(1.2085) feature loss: tensor(0.3044)
Global Model Acc on global data: 0.5543 length of data: 10000
save a model
-------------Round number:  40  -------------
selected users: [79, 75, 63, 15, 38, 11, 40, 45, 39, 62]
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
all data: 5000
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.8450) feature loss: tensor(0.1965)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.7975) feature loss: tensor(0.1852)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.9398) feature loss: tensor(0.2455)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.8073) feature loss: tensor(0.1817)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.8535) feature loss: tensor(0.1795)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.9299) feature loss: tensor(0.1952)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.8289) feature loss: tensor(0.1783)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.8293) feature loss: tensor(0.1836)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.8404) feature loss: tensor(0.1888)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.8831) feature loss: tensor(0.1871)
Global Model Acc on global data: 0.5082 length of data: 10000
-------------Round number:  41  -------------
selected users: [42, 94, 37, 6, 79, 32, 24, 0, 33, 93]
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
all data: 5000
Local adapation with distilling: 0.000262
training loss: tensor(1.2127) feature loss: tensor(0.3524)
Local adapation with distilling: 0.000262
training loss: tensor(1.2414) feature loss: tensor(0.3494)
Local adapation with distilling: 0.000262
training loss: tensor(1.4873) feature loss: tensor(0.2507)
Local adapation with distilling: 0.000262
training loss: tensor(1.1914) feature loss: tensor(0.2712)
Local adapation with distilling: 0.000262
training loss: tensor(1.0562) feature loss: tensor(0.2530)
Local adapation with distilling: 0.000262
training loss: tensor(1.3057) feature loss: tensor(0.3813)
Local adapation with distilling: 0.000262
training loss: tensor(1.2156) feature loss: tensor(0.2674)
Local adapation with distilling: 0.000262
training loss: tensor(1.0215) feature loss: tensor(0.2326)
Local adapation with distilling: 0.000262
training loss: tensor(1.1043) feature loss: tensor(0.2748)
Local adapation with distilling: 0.000262
training loss: tensor(1.2329) feature loss: tensor(0.2955)
Global Model Acc on global data: 0.4782 length of data: 10000
-------------Round number:  42  -------------
selected users: [83, 53, 70, 45, 44, 39, 22, 80, 10, 0]
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
all data: 5000
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.7846) feature loss: tensor(0.2091)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.7474) feature loss: tensor(0.1931)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.7223) feature loss: tensor(0.1744)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.8239) feature loss: tensor(0.2016)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.7776) feature loss: tensor(0.1919)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.8634) feature loss: tensor(0.1930)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.8599) feature loss: tensor(0.1779)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.7579) feature loss: tensor(0.1854)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.7050) feature loss: tensor(0.1690)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.7098) feature loss: tensor(0.1741)
Global Model Acc on global data: 0.3764 length of data: 10000
-------------Round number:  43  -------------
selected users: [20, 2, 15, 22, 57, 91, 69, 55, 11, 79]
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
all data: 5000
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.8196) feature loss: tensor(0.3586)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.9779) feature loss: tensor(0.3713)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.9276) feature loss: tensor(0.3596)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(1.0770) feature loss: tensor(0.4451)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(1.5356) feature loss: tensor(0.3536)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(1.1681) feature loss: tensor(0.3986)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(1.0089) feature loss: tensor(0.3722)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.9081) feature loss: tensor(0.3568)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(1.2397) feature loss: tensor(0.3978)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.9941) feature loss: tensor(0.3668)
Global Model Acc on global data: 0.4569 length of data: 10000
-------------Round number:  44  -------------
selected users: [42, 54, 27, 93, 39, 65, 7, 26, 24, 60]
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
all data: 5000
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(1.0588) feature loss: tensor(0.2199)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(1.1853) feature loss: tensor(0.2898)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(1.2398) feature loss: tensor(0.2427)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(1.1000) feature loss: tensor(0.2049)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.9695) feature loss: tensor(0.2289)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(1.0120) feature loss: tensor(0.2051)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(1.3204) feature loss: tensor(0.2561)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(1.0938) feature loss: tensor(0.2484)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(1.1040) feature loss: tensor(0.2746)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.9268) feature loss: tensor(0.1985)
Global Model Acc on global data: 0.4698 length of data: 10000
-------------Round number:  45  -------------
selected users: [0, 1, 62, 76, 37, 99, 78, 38, 2, 84]
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
all data: 5000
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.8937) feature loss: tensor(0.2647)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(1.1824) feature loss: tensor(0.2925)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(1.0636) feature loss: tensor(0.2938)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(1.0452) feature loss: tensor(0.2801)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(1.0311) feature loss: tensor(0.2646)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(1.1825) feature loss: tensor(0.2705)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(1.2359) feature loss: tensor(0.2634)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(1.2778) feature loss: tensor(0.2618)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(1.1431) feature loss: tensor(0.2938)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(1.0594) feature loss: tensor(0.3558)
Global Model Acc on global data: 0.4535 length of data: 10000
-------------Round number:  46  -------------
selected users: [71, 33, 37, 10, 44, 34, 24, 98, 73, 95]
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
all data: 5000
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(1.1766) feature loss: tensor(0.2965)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.9650) feature loss: tensor(0.2947)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(1.0867) feature loss: tensor(0.2789)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.8832) feature loss: tensor(0.2736)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.9285) feature loss: tensor(0.2891)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.9794) feature loss: tensor(0.3157)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.9175) feature loss: tensor(0.3057)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(1.0229) feature loss: tensor(0.3270)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.9564) feature loss: tensor(0.2787)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(1.0325) feature loss: tensor(0.3077)
Global Model Acc on global data: 0.5017 length of data: 10000
-------------Round number:  47  -------------
selected users: [17, 90, 94, 86, 63, 5, 38, 14, 40, 47]
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
all data: 5000
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(1.0032) feature loss: tensor(0.1701)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.8142) feature loss: tensor(0.1719)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.7998) feature loss: tensor(0.1677)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.9177) feature loss: tensor(0.1670)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.9871) feature loss: tensor(0.2283)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.8468) feature loss: tensor(0.1702)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.8803) feature loss: tensor(0.1681)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.7854) feature loss: tensor(0.1667)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.8006) feature loss: tensor(0.1678)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(1.0425) feature loss: tensor(0.2106)
Global Model Acc on global data: 0.4683 length of data: 10000
-------------Round number:  48  -------------
selected users: [93, 5, 71, 9, 11, 79, 69, 8, 59, 63]
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
all data: 5000
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(1.1146) feature loss: tensor(0.4283)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.8745) feature loss: tensor(0.3026)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(1.1997) feature loss: tensor(0.3635)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(1.0649) feature loss: tensor(0.3615)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(1.2622) feature loss: tensor(0.4019)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(1.2715) feature loss: tensor(0.3339)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(1.1161) feature loss: tensor(0.3405)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(1.0511) feature loss: tensor(0.3563)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(1.0764) feature loss: tensor(0.3313)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.9720) feature loss: tensor(0.3176)
Global Model Acc on global data: 0.433 length of data: 10000
-------------Round number:  49  -------------
selected users: [76, 25, 28, 75, 81, 47, 41, 22, 29, 1]
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
all data: 5000
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(1.0325) feature loss: tensor(0.2947)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(1.0914) feature loss: tensor(0.2917)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(1.0336) feature loss: tensor(0.2950)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.9961) feature loss: tensor(0.2853)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.9994) feature loss: tensor(0.3052)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(1.4812) feature loss: tensor(0.2865)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(1.0761) feature loss: tensor(0.3148)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(1.4644) feature loss: tensor(0.3165)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.8990) feature loss: tensor(0.2903)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(1.0014) feature loss: tensor(0.3061)
Global Model Acc on global data: 0.5111 length of data: 10000
-------------Round number:  50  -------------
selected users: [80, 79, 25, 15, 39, 40, 53, 17, 57, 50]
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
all data: 5000
Local adapation with distilling: 0.0001
training loss: tensor(0.7402) feature loss: tensor(0.1806)
Local adapation with distilling: 0.0001
training loss: tensor(0.6957) feature loss: tensor(0.1882)
Local adapation with distilling: 0.0001
training loss: tensor(0.6941) feature loss: tensor(0.1875)
Local adapation with distilling: 0.0001
training loss: tensor(0.7255) feature loss: tensor(0.1952)
Local adapation with distilling: 0.0001
training loss: tensor(0.7146) feature loss: tensor(0.2012)
Local adapation with distilling: 0.0001
training loss: tensor(0.7493) feature loss: tensor(0.1880)
Local adapation with distilling: 0.0001
training loss: tensor(0.8042) feature loss: tensor(0.1847)
Local adapation with distilling: 0.0001
training loss: tensor(0.9133) feature loss: tensor(0.1866)
Local adapation with distilling: 0.0001
training loss: tensor(0.8909) feature loss: tensor(0.1843)
Local adapation with distilling: 0.0001
training loss: tensor(0.7887) feature loss: tensor(0.2014)
Global Model Acc on global data: 0.4326 length of data: 10000
-------------Round number:  51  -------------
selected users: [71, 43, 11, 83, 78, 19, 80, 4, 79, 75]
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
all data: 5000
Local adapation with distilling: 0.0001
training loss: tensor(1.0509) feature loss: tensor(0.2786)
Local adapation with distilling: 0.0001
training loss: tensor(0.9269) feature loss: tensor(0.1806)
Local adapation with distilling: 0.0001
training loss: tensor(1.0167) feature loss: tensor(0.2044)
Local adapation with distilling: 0.0001
training loss: tensor(0.9138) feature loss: tensor(0.2048)
Local adapation with distilling: 0.0001
training loss: tensor(1.0065) feature loss: tensor(0.1876)
Local adapation with distilling: 0.0001
training loss: tensor(0.9135) feature loss: tensor(0.1994)
Local adapation with distilling: 0.0001
training loss: tensor(0.8432) feature loss: tensor(0.2082)
Local adapation with distilling: 0.0001
training loss: tensor(1.0184) feature loss: tensor(0.1874)
Local adapation with distilling: 0.0001
training loss: tensor(0.8894) feature loss: tensor(0.1958)
Local adapation with distilling: 0.0001
training loss: tensor(0.7873) feature loss: tensor(0.1835)
Global Model Acc on global data: 0.4531 length of data: 10000
-------------Round number:  52  -------------
selected users: [82, 8, 44, 19, 2, 73, 37, 89, 67, 18]
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
all data: 5000
Local adapation with distilling: 0.0001
training loss: tensor(1.5293) feature loss: tensor(0.4303)
Local adapation with distilling: 0.0001
training loss: tensor(1.0475) feature loss: tensor(0.2936)
Local adapation with distilling: 0.0001
training loss: tensor(1.0307) feature loss: tensor(0.2923)
Local adapation with distilling: 0.0001
training loss: tensor(1.0670) feature loss: tensor(0.2940)
Local adapation with distilling: 0.0001
training loss: tensor(1.4168) feature loss: tensor(0.3088)
Local adapation with distilling: 0.0001
training loss: tensor(0.9580) feature loss: tensor(0.2937)
Local adapation with distilling: 0.0001
training loss: tensor(1.2752) feature loss: tensor(0.3009)
Local adapation with distilling: 0.0001
training loss: tensor(1.0455) feature loss: tensor(0.3008)
Local adapation with distilling: 0.0001
training loss: tensor(1.3197) feature loss: tensor(0.2966)
Local adapation with distilling: 0.0001
training loss: tensor(1.1013) feature loss: tensor(0.3184)
Global Model Acc on global data: 0.4936 length of data: 10000
-------------Round number:  53  -------------
selected users: [19, 78, 64, 3, 71, 32, 68, 42, 55, 97]
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
all data: 5000
Local adapation with distilling: 0.0001
training loss: tensor(0.8971) feature loss: tensor(0.1742)
Local adapation with distilling: 0.0001
training loss: tensor(0.8777) feature loss: tensor(0.1793)
Local adapation with distilling: 0.0001
training loss: tensor(0.8658) feature loss: tensor(0.1712)
Local adapation with distilling: 0.0001
training loss: tensor(0.8652) feature loss: tensor(0.1762)
Local adapation with distilling: 0.0001
training loss: tensor(1.0483) feature loss: tensor(0.2153)
Local adapation with distilling: 0.0001
training loss: tensor(0.9265) feature loss: tensor(0.1755)
Local adapation with distilling: 0.0001
training loss: tensor(0.8672) feature loss: tensor(0.1750)
Local adapation with distilling: 0.0001
training loss: tensor(0.9119) feature loss: tensor(0.1709)
Local adapation with distilling: 0.0001
training loss: tensor(0.9060) feature loss: tensor(0.1809)
Local adapation with distilling: 0.0001
training loss: tensor(0.9643) feature loss: tensor(0.1840)
Global Model Acc on global data: 0.5224 length of data: 10000
-------------Round number:  54  -------------
selected users: [36, 70, 48, 94, 81, 46, 38, 29, 34, 22]
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
all data: 5000
Local adapation with distilling: 0.0001
training loss: tensor(0.8931) feature loss: tensor(0.1767)
Local adapation with distilling: 0.0001
training loss: tensor(0.8362) feature loss: tensor(0.1719)
Local adapation with distilling: 0.0001
training loss: tensor(0.7576) feature loss: tensor(0.1701)
Local adapation with distilling: 0.0001
training loss: tensor(0.7585) feature loss: tensor(0.1711)
Local adapation with distilling: 0.0001
training loss: tensor(0.9294) feature loss: tensor(0.1843)
Local adapation with distilling: 0.0001
training loss: tensor(0.8811) feature loss: tensor(0.1706)
Local adapation with distilling: 0.0001
training loss: tensor(0.7459) feature loss: tensor(0.1701)
Local adapation with distilling: 0.0001
training loss: tensor(0.8176) feature loss: tensor(0.1834)
Local adapation with distilling: 0.0001
training loss: tensor(0.7704) feature loss: tensor(0.1819)
Local adapation with distilling: 0.0001
training loss: tensor(0.8604) feature loss: tensor(0.2003)
Global Model Acc on global data: 0.4807 length of data: 10000
-------------Round number:  55  -------------
selected users: [28, 92, 98, 95, 84, 34, 38, 76, 17, 78]
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
all data: 5000
Local adapation with distilling: 0.0001
training loss: tensor(0.6721) feature loss: tensor(0.2017)
Local adapation with distilling: 0.0001
training loss: tensor(0.7320) feature loss: tensor(0.2005)
Local adapation with distilling: 0.0001
training loss: tensor(0.6709) feature loss: tensor(0.2053)
Local adapation with distilling: 0.0001
training loss: tensor(0.8485) feature loss: tensor(0.2097)
Local adapation with distilling: 0.0001
training loss: tensor(0.6674) feature loss: tensor(0.1980)
Local adapation with distilling: 0.0001
training loss: tensor(0.6852) feature loss: tensor(0.1998)
Local adapation with distilling: 0.0001
training loss: tensor(0.6966) feature loss: tensor(0.2068)
Local adapation with distilling: 0.0001
training loss: tensor(0.7096) feature loss: tensor(0.1968)
Local adapation with distilling: 0.0001
training loss: tensor(1.0986) feature loss: tensor(0.2036)
Local adapation with distilling: 0.0001
training loss: tensor(0.6735) feature loss: tensor(0.1976)
Global Model Acc on global data: 0.4663 length of data: 10000
-------------Round number:  56  -------------
selected users: [92, 79, 23, 68, 52, 38, 73, 9, 59, 27]
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
all data: 5000
Local adapation with distilling: 0.0001
training loss: tensor(0.8709) feature loss: tensor(0.3060)
Local adapation with distilling: 0.0001
training loss: tensor(1.0731) feature loss: tensor(0.3072)
Local adapation with distilling: 0.0001
training loss: tensor(0.9282) feature loss: tensor(0.3010)
Local adapation with distilling: 0.0001
training loss: tensor(0.7807) feature loss: tensor(0.3039)
Local adapation with distilling: 0.0001
training loss: tensor(0.9129) feature loss: tensor(0.3115)
Local adapation with distilling: 0.0001
training loss: tensor(0.7607) feature loss: tensor(0.3009)
Local adapation with distilling: 0.0001
training loss: tensor(0.9479) feature loss: tensor(0.2997)
Local adapation with distilling: 0.0001
training loss: tensor(0.9913) feature loss: tensor(0.3076)
Local adapation with distilling: 0.0001
training loss: tensor(0.9878) feature loss: tensor(0.3102)
Local adapation with distilling: 0.0001
training loss: tensor(1.1197) feature loss: tensor(0.3205)
Global Model Acc on global data: 0.4751 length of data: 10000
-------------Round number:  57  -------------
selected users: [52, 17, 41, 3, 8, 98, 59, 20, 67, 7]
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
all data: 5000
Local adapation with distilling: 0.0001
training loss: tensor(0.8347) feature loss: tensor(0.2643)
Local adapation with distilling: 0.0001
training loss: tensor(0.8719) feature loss: tensor(0.2061)
Local adapation with distilling: 0.0001
training loss: tensor(1.0212) feature loss: tensor(0.2218)
Local adapation with distilling: 0.0001
training loss: tensor(0.7363) feature loss: tensor(0.1976)
Local adapation with distilling: 0.0001
training loss: tensor(0.6910) feature loss: tensor(0.1962)
Local adapation with distilling: 0.0001
training loss: tensor(0.7062) feature loss: tensor(0.2045)
Local adapation with distilling: 0.0001
training loss: tensor(0.7382) feature loss: tensor(0.2082)
Local adapation with distilling: 0.0001
training loss: tensor(0.8630) feature loss: tensor(0.2081)
Local adapation with distilling: 0.0001
training loss: tensor(0.8594) feature loss: tensor(0.2043)
Local adapation with distilling: 0.0001
training loss: tensor(0.8731) feature loss: tensor(0.2051)
Global Model Acc on global data: 0.4856 length of data: 10000
-------------Round number:  58  -------------
selected users: [43, 58, 8, 31, 70, 45, 69, 95, 50, 4]
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
all data: 5000
Local adapation with distilling: 0.0001
training loss: tensor(0.8860) feature loss: tensor(0.2546)
Local adapation with distilling: 0.0001
training loss: tensor(0.7793) feature loss: tensor(0.1929)
Local adapation with distilling: 0.0001
training loss: tensor(0.7986) feature loss: tensor(0.1910)
Local adapation with distilling: 0.0001
training loss: tensor(0.9758) feature loss: tensor(0.2033)
Local adapation with distilling: 0.0001
training loss: tensor(0.8807) feature loss: tensor(0.1962)
Local adapation with distilling: 0.0001
training loss: tensor(0.9369) feature loss: tensor(0.1983)
Local adapation with distilling: 0.0001
training loss: tensor(0.8976) feature loss: tensor(0.1999)
Local adapation with distilling: 0.0001
training loss: tensor(0.9261) feature loss: tensor(0.2047)
Local adapation with distilling: 0.0001
training loss: tensor(0.8595) feature loss: tensor(0.2004)
Local adapation with distilling: 0.0001
training loss: tensor(0.9759) feature loss: tensor(0.2722)
Global Model Acc on global data: 0.4457 length of data: 10000
-------------Round number:  59  -------------
selected users: [38, 46, 24, 87, 30, 85, 16, 96, 18, 99]
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
all data: 5000
Local adapation with distilling: 0.0001
training loss: tensor(0.8679) feature loss: tensor(0.2633)
Local adapation with distilling: 0.0001
training loss: tensor(0.9006) feature loss: tensor(0.2397)
Local adapation with distilling: 0.0001
training loss: tensor(0.8425) feature loss: tensor(0.2281)
Local adapation with distilling: 0.0001
training loss: tensor(0.9054) feature loss: tensor(0.2291)
Local adapation with distilling: 0.0001
training loss: tensor(0.8442) feature loss: tensor(0.2702)
Local adapation with distilling: 0.0001
training loss: tensor(0.8259) feature loss: tensor(0.2488)
Local adapation with distilling: 0.0001
training loss: tensor(0.9053) feature loss: tensor(0.2430)
Local adapation with distilling: 0.0001
training loss: tensor(0.9116) feature loss: tensor(0.2295)
Local adapation with distilling: 0.0001
training loss: tensor(0.7921) feature loss: tensor(0.2247)
Local adapation with distilling: 0.0001
training loss: tensor(0.9072) feature loss: tensor(0.2449)
Global Model Acc on global data: 0.488 length of data: 10000
-------------Round number:  60  -------------
selected users: [88, 4, 79, 14, 55, 3, 19, 28, 94, 25]
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
all data: 5000
Local adapation with distilling: 0.0001
training loss: tensor(0.6871) feature loss: tensor(0.2214)
Local adapation with distilling: 0.0001
training loss: tensor(0.6898) feature loss: tensor(0.2016)
Local adapation with distilling: 0.0001
training loss: tensor(0.7651) feature loss: tensor(0.2019)
Local adapation with distilling: 0.0001
training loss: tensor(0.7432) feature loss: tensor(0.2526)
Local adapation with distilling: 0.0001
training loss: tensor(0.7457) feature loss: tensor(0.2012)
Local adapation with distilling: 0.0001
training loss: tensor(0.8972) feature loss: tensor(0.3147)
Local adapation with distilling: 0.0001
training loss: tensor(0.8047) feature loss: tensor(0.2094)
Local adapation with distilling: 0.0001
training loss: tensor(0.6883) feature loss: tensor(0.2258)
Local adapation with distilling: 0.0001
training loss: tensor(0.7156) feature loss: tensor(0.2124)
Local adapation with distilling: 0.0001
training loss: tensor(0.7158) feature loss: tensor(0.2025)
Global Model Acc on global data: 0.4678 length of data: 10000
-------------Round number:  61  -------------
selected users: [83, 1, 55, 9, 31, 28, 96, 29, 86, 63]
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
all data: 5000
Local adapation with distilling: 0.0001
training loss: tensor(0.7745) feature loss: tensor(0.2172)
Local adapation with distilling: 0.0001
training loss: tensor(0.9619) feature loss: tensor(0.2408)
Local adapation with distilling: 0.0001
training loss: tensor(0.7728) feature loss: tensor(0.2340)
Local adapation with distilling: 0.0001
training loss: tensor(0.9675) feature loss: tensor(0.2016)
Local adapation with distilling: 0.0001
training loss: tensor(0.9685) feature loss: tensor(0.2478)
Local adapation with distilling: 0.0001
training loss: tensor(0.7224) feature loss: tensor(0.2240)
Local adapation with distilling: 0.0001
training loss: tensor(0.8300) feature loss: tensor(0.2518)
Local adapation with distilling: 0.0001
training loss: tensor(0.9073) feature loss: tensor(0.2633)
Local adapation with distilling: 0.0001
training loss: tensor(0.7919) feature loss: tensor(0.2227)
Local adapation with distilling: 0.0001
training loss: tensor(0.8397) feature loss: tensor(0.2317)
Global Model Acc on global data: 0.4525 length of data: 10000
-------------Round number:  62  -------------
selected users: [76, 48, 62, 80, 29, 99, 60, 89, 39, 69]
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
all data: 5000
Local adapation with distilling: 0.0001
training loss: tensor(0.6606) feature loss: tensor(0.1878)
Local adapation with distilling: 0.0001
training loss: tensor(0.6561) feature loss: tensor(0.1866)
Local adapation with distilling: 0.0001
training loss: tensor(1.1020) feature loss: tensor(0.1960)
Local adapation with distilling: 0.0001
training loss: tensor(0.7281) feature loss: tensor(0.1925)
Local adapation with distilling: 0.0001
training loss: tensor(0.6132) feature loss: tensor(0.1954)
Local adapation with distilling: 0.0001
training loss: tensor(0.6351) feature loss: tensor(0.1990)
Local adapation with distilling: 0.0001
training loss: tensor(0.8292) feature loss: tensor(0.2689)
Local adapation with distilling: 0.0001
training loss: tensor(0.6823) feature loss: tensor(0.2377)
Local adapation with distilling: 0.0001
training loss: tensor(0.6273) feature loss: tensor(0.1946)
Local adapation with distilling: 0.0001
training loss: tensor(0.6556) feature loss: tensor(0.2143)
Global Model Acc on global data: 0.322 length of data: 10000
-------------Round number:  63  -------------
selected users: [64, 59, 63, 2, 80, 20, 18, 48, 72, 51]
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
all data: 5000
Local adapation with distilling: 0.0001
training loss: tensor(1.1432) feature loss: tensor(0.2826)
Local adapation with distilling: 0.0001
training loss: tensor(1.0239) feature loss: tensor(0.2735)
Local adapation with distilling: 0.0001
training loss: tensor(1.1832) feature loss: tensor(0.2830)
Local adapation with distilling: 0.0001
training loss: tensor(1.3287) feature loss: tensor(0.2989)
Local adapation with distilling: 0.0001
training loss: tensor(1.0180) feature loss: tensor(0.2840)
Local adapation with distilling: 0.0001
training loss: tensor(1.0338) feature loss: tensor(0.2781)
Local adapation with distilling: 0.0001
training loss: tensor(1.0579) feature loss: tensor(0.2857)
Local adapation with distilling: 0.0001
training loss: tensor(1.1095) feature loss: tensor(0.2860)
Local adapation with distilling: 0.0001
training loss: tensor(1.3299) feature loss: tensor(0.2929)
Local adapation with distilling: 0.0001
training loss: tensor(1.3402) feature loss: tensor(0.3451)
Global Model Acc on global data: 0.4271 length of data: 10000
-------------Round number:  64  -------------
selected users: [17, 22, 60, 92, 23, 19, 71, 94, 40, 49]
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
all data: 5000
Local adapation with distilling: 0.0001
training loss: tensor(1.6963) feature loss: tensor(0.1988)
Local adapation with distilling: 0.0001
training loss: tensor(0.9349) feature loss: tensor(0.2150)
Local adapation with distilling: 0.0001
training loss: tensor(0.8697) feature loss: tensor(0.2158)
Local adapation with distilling: 0.0001
training loss: tensor(0.9094) feature loss: tensor(0.2245)
Local adapation with distilling: 0.0001
training loss: tensor(0.9698) feature loss: tensor(0.2483)
Local adapation with distilling: 0.0001
training loss: tensor(1.0424) feature loss: tensor(0.2371)
Local adapation with distilling: 0.0001
training loss: tensor(1.1405) feature loss: tensor(0.2460)
Local adapation with distilling: 0.0001
training loss: tensor(0.8582) feature loss: tensor(0.2021)
Local adapation with distilling: 0.0001
training loss: tensor(0.8607) feature loss: tensor(0.2008)
Local adapation with distilling: 0.0001
training loss: tensor(0.9867) feature loss: tensor(0.2295)
Global Model Acc on global data: 0.4607 length of data: 10000
-------------Round number:  65  -------------
selected users: [37, 81, 39, 61, 76, 90, 27, 86, 28, 69]
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
all data: 5000
Local adapation with distilling: 0.0001
training loss: tensor(0.9826) feature loss: tensor(0.2559)
Local adapation with distilling: 0.0001
training loss: tensor(0.8085) feature loss: tensor(0.2320)
Local adapation with distilling: 0.0001
training loss: tensor(0.7460) feature loss: tensor(0.2164)
Local adapation with distilling: 0.0001
training loss: tensor(0.8159) feature loss: tensor(0.2346)
Local adapation with distilling: 0.0001
training loss: tensor(0.7284) feature loss: tensor(0.2170)
Local adapation with distilling: 0.0001
training loss: tensor(0.6476) feature loss: tensor(0.2147)
Local adapation with distilling: 0.0001
training loss: tensor(1.0102) feature loss: tensor(0.2079)
Local adapation with distilling: 0.0001
training loss: tensor(0.7593) feature loss: tensor(0.2332)
Local adapation with distilling: 0.0001
training loss: tensor(0.7056) feature loss: tensor(0.2165)
Local adapation with distilling: 0.0001
training loss: tensor(0.7166) feature loss: tensor(0.2218)
Global Model Acc on global data: 0.4596 length of data: 10000
-------------Round number:  66  -------------
selected users: [8, 93, 4, 5, 52, 41, 0, 73, 88, 68]
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
all data: 5000
Local adapation with distilling: 0.0001
training loss: tensor(0.9777) feature loss: tensor(0.2531)
Local adapation with distilling: 0.0001
training loss: tensor(0.9756) feature loss: tensor(0.2530)
Local adapation with distilling: 0.0001
training loss: tensor(0.9293) feature loss: tensor(0.2535)
Local adapation with distilling: 0.0001
training loss: tensor(1.0569) feature loss: tensor(0.2432)
Local adapation with distilling: 0.0001
training loss: tensor(1.0026) feature loss: tensor(0.2634)
Local adapation with distilling: 0.0001
training loss: tensor(0.9554) feature loss: tensor(0.2512)
Local adapation with distilling: 0.0001
training loss: tensor(0.8777) feature loss: tensor(0.2435)
Local adapation with distilling: 0.0001
training loss: tensor(0.9646) feature loss: tensor(0.2517)
Local adapation with distilling: 0.0001
training loss: tensor(0.9234) feature loss: tensor(0.2454)
Local adapation with distilling: 0.0001
training loss: tensor(0.9448) feature loss: tensor(0.2657)
Global Model Acc on global data: 0.4771 length of data: 10000
-------------Round number:  67  -------------
selected users: [17, 24, 64, 93, 97, 29, 3, 70, 82, 11]
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
all data: 5000
Local adapation with distilling: 0.0001
training loss: tensor(1.2035) feature loss: tensor(0.2480)
Local adapation with distilling: 0.0001
training loss: tensor(0.9167) feature loss: tensor(0.2652)
Local adapation with distilling: 0.0001
training loss: tensor(0.8994) feature loss: tensor(0.2665)
Local adapation with distilling: 0.0001
training loss: tensor(0.9456) feature loss: tensor(0.2916)
Local adapation with distilling: 0.0001
training loss: tensor(1.3121) feature loss: tensor(0.2925)
Local adapation with distilling: 0.0001
training loss: tensor(1.0291) feature loss: tensor(0.2606)
Local adapation with distilling: 0.0001
training loss: tensor(1.0503) feature loss: tensor(0.3748)
Local adapation with distilling: 0.0001
training loss: tensor(0.9181) feature loss: tensor(0.2640)
Local adapation with distilling: 0.0001
training loss: tensor(1.0483) feature loss: tensor(0.3092)
Local adapation with distilling: 0.0001
training loss: tensor(0.9710) feature loss: tensor(0.2502)
Global Model Acc on global data: 0.4682 length of data: 10000
-------------Round number:  68  -------------
selected users: [29, 30, 16, 5, 38, 71, 76, 94, 99, 95]
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
all data: 5000
Local adapation with distilling: 0.0001
training loss: tensor(0.8295) feature loss: tensor(0.2528)
Local adapation with distilling: 0.0001
training loss: tensor(0.7048) feature loss: tensor(0.2388)
Local adapation with distilling: 0.0001
training loss: tensor(0.8004) feature loss: tensor(0.2575)
Local adapation with distilling: 0.0001
training loss: tensor(0.8273) feature loss: tensor(0.2391)
Local adapation with distilling: 0.0001
training loss: tensor(0.8161) feature loss: tensor(0.2708)
Local adapation with distilling: 0.0001
training loss: tensor(0.8138) feature loss: tensor(0.2429)
Local adapation with distilling: 0.0001
training loss: tensor(0.8441) feature loss: tensor(0.2737)
Local adapation with distilling: 0.0001
training loss: tensor(0.7357) feature loss: tensor(0.2826)
Local adapation with distilling: 0.0001
training loss: tensor(0.8146) feature loss: tensor(0.2469)
Local adapation with distilling: 0.0001
training loss: tensor(0.8798) feature loss: tensor(0.2417)
Global Model Acc on global data: 0.479 length of data: 10000
-------------Round number:  69  -------------
selected users: [72, 31, 13, 83, 33, 8, 26, 89, 64, 97]
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
all data: 5000
Local adapation with distilling: 0.0001
training loss: tensor(1.1267) feature loss: tensor(0.2598)
Local adapation with distilling: 0.0001
training loss: tensor(0.9313) feature loss: tensor(0.2272)
Local adapation with distilling: 0.0001
training loss: tensor(0.9250) feature loss: tensor(0.2822)
Local adapation with distilling: 0.0001
training loss: tensor(0.8845) feature loss: tensor(0.2291)
Local adapation with distilling: 0.0001
training loss: tensor(0.8666) feature loss: tensor(0.2334)
Local adapation with distilling: 0.0001
training loss: tensor(0.8541) feature loss: tensor(0.2181)
Local adapation with distilling: 0.0001
training loss: tensor(0.9773) feature loss: tensor(0.2489)
Local adapation with distilling: 0.0001
training loss: tensor(0.9237) feature loss: tensor(0.2169)
Local adapation with distilling: 0.0001
training loss: tensor(0.8415) feature loss: tensor(0.2285)
Local adapation with distilling: 0.0001
training loss: tensor(1.2101) feature loss: tensor(0.2691)
Global Model Acc on global data: 0.5155 length of data: 10000
-------------Round number:  70  -------------
selected users: [81, 43, 88, 32, 50, 71, 73, 55, 42, 2]
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
all data: 5000
Local adapation with distilling: 0.0001
training loss: tensor(0.8836) feature loss: tensor(0.2272)
Local adapation with distilling: 0.0001
training loss: tensor(0.7781) feature loss: tensor(0.2244)
Local adapation with distilling: 0.0001
training loss: tensor(0.7615) feature loss: tensor(0.2131)
Local adapation with distilling: 0.0001
training loss: tensor(0.8803) feature loss: tensor(0.2485)
Local adapation with distilling: 0.0001
training loss: tensor(0.7410) feature loss: tensor(0.2022)
Local adapation with distilling: 0.0001
training loss: tensor(0.8167) feature loss: tensor(0.2189)
Local adapation with distilling: 0.0001
training loss: tensor(0.7622) feature loss: tensor(0.2244)
Local adapation with distilling: 0.0001
training loss: tensor(0.9021) feature loss: tensor(0.2064)
Local adapation with distilling: 0.0001
training loss: tensor(0.8857) feature loss: tensor(0.2321)
Local adapation with distilling: 0.0001
training loss: tensor(0.9116) feature loss: tensor(0.2223)
Global Model Acc on global data: 0.4497 length of data: 10000
-------------Round number:  71  -------------
selected users: [41, 84, 98, 42, 75, 25, 60, 19, 52, 29]
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
all data: 5000
Local adapation with distilling: 0.0001
training loss: tensor(0.8600) feature loss: tensor(0.2588)
Local adapation with distilling: 0.0001
training loss: tensor(0.8459) feature loss: tensor(0.2399)
Local adapation with distilling: 0.0001
training loss: tensor(0.7571) feature loss: tensor(0.2428)
Local adapation with distilling: 0.0001
training loss: tensor(0.7698) feature loss: tensor(0.2357)
Local adapation with distilling: 0.0001
training loss: tensor(0.8550) feature loss: tensor(0.2353)
Local adapation with distilling: 0.0001
training loss: tensor(0.8703) feature loss: tensor(0.2734)
Local adapation with distilling: 0.0001
training loss: tensor(0.7726) feature loss: tensor(0.2499)
Local adapation with distilling: 0.0001
training loss: tensor(0.8562) feature loss: tensor(0.2435)
Local adapation with distilling: 0.0001
training loss: tensor(0.7548) feature loss: tensor(0.2394)
Local adapation with distilling: 0.0001
training loss: tensor(0.8355) feature loss: tensor(0.2425)
Global Model Acc on global data: 0.4461 length of data: 10000
-------------Round number:  72  -------------
selected users: [76, 82, 43, 16, 84, 95, 78, 91, 30, 22]
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
all data: 5000
Local adapation with distilling: 0.0001
training loss: tensor(0.8676) feature loss: tensor(0.1768)
Local adapation with distilling: 0.0001
training loss: tensor(0.7760) feature loss: tensor(0.1779)
Local adapation with distilling: 0.0001
training loss: tensor(0.8311) feature loss: tensor(0.1785)
Local adapation with distilling: 0.0001
training loss: tensor(0.8694) feature loss: tensor(0.1754)
Local adapation with distilling: 0.0001
training loss: tensor(0.7912) feature loss: tensor(0.1765)
Local adapation with distilling: 0.0001
training loss: tensor(0.8807) feature loss: tensor(0.2509)
Local adapation with distilling: 0.0001
training loss: tensor(0.7749) feature loss: tensor(0.1733)
Local adapation with distilling: 0.0001
training loss: tensor(0.8662) feature loss: tensor(0.1832)
Local adapation with distilling: 0.0001
training loss: tensor(0.7559) feature loss: tensor(0.1766)
Local adapation with distilling: 0.0001
training loss: tensor(0.7971) feature loss: tensor(0.1835)
Global Model Acc on global data: 0.4706 length of data: 10000
-------------Round number:  73  -------------
selected users: [49, 14, 34, 70, 90, 35, 68, 76, 80, 9]
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
all data: 5000
Local adapation with distilling: 0.0001
training loss: tensor(0.8780) feature loss: tensor(0.2305)
Local adapation with distilling: 0.0001
training loss: tensor(0.7155) feature loss: tensor(0.2148)
Local adapation with distilling: 0.0001
training loss: tensor(0.7220) feature loss: tensor(0.2129)
Local adapation with distilling: 0.0001
training loss: tensor(0.6810) feature loss: tensor(0.2105)
Local adapation with distilling: 0.0001
training loss: tensor(0.7424) feature loss: tensor(0.2265)
Local adapation with distilling: 0.0001
training loss: tensor(0.8004) feature loss: tensor(0.2085)
Local adapation with distilling: 0.0001
training loss: tensor(0.6971) feature loss: tensor(0.2115)
Local adapation with distilling: 0.0001
training loss: tensor(0.7503) feature loss: tensor(0.2236)
Local adapation with distilling: 0.0001
training loss: tensor(0.7423) feature loss: tensor(0.2094)
Local adapation with distilling: 0.0001
training loss: tensor(0.8353) feature loss: tensor(0.2139)
Global Model Acc on global data: 0.3562 length of data: 10000
-------------Round number:  74  -------------
selected users: [85, 64, 63, 80, 6, 12, 43, 17, 7, 8]
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
all data: 5000
Local adapation with distilling: 0.0001
training loss: tensor(1.2055) feature loss: tensor(0.3285)
Local adapation with distilling: 0.0001
training loss: tensor(1.0549) feature loss: tensor(0.3146)
Local adapation with distilling: 0.0001
training loss: tensor(1.2351) feature loss: tensor(0.3434)
Local adapation with distilling: 0.0001
training loss: tensor(1.0647) feature loss: tensor(0.3162)
Local adapation with distilling: 0.0001
training loss: tensor(1.0867) feature loss: tensor(0.3171)
Local adapation with distilling: 0.0001
training loss: tensor(1.2296) feature loss: tensor(0.3285)
Local adapation with distilling: 0.0001
training loss: tensor(1.1817) feature loss: tensor(0.3168)
Local adapation with distilling: 0.0001
training loss: tensor(2.5364) feature loss: tensor(0.3118)
Local adapation with distilling: 0.0001
training loss: tensor(2.6178) feature loss: tensor(0.3128)
Local adapation with distilling: 0.0001
training loss: tensor(1.0866) feature loss: tensor(0.3136)
Global Model Acc on global data: 0.4294 length of data: 10000
-------------Round number:  75  -------------
selected users: [36, 7, 6, 45, 56, 54, 22, 37, 53, 68]
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
all data: 5000
Local adapation with distilling: 0.0001
training loss: tensor(0.9683) feature loss: tensor(0.2700)
Local adapation with distilling: 0.0001
training loss: tensor(1.2819) feature loss: tensor(0.2482)
Local adapation with distilling: 0.0001
training loss: tensor(1.1088) feature loss: tensor(0.2590)
Local adapation with distilling: 0.0001
training loss: tensor(1.0563) feature loss: tensor(0.3731)
Local adapation with distilling: 0.0001
training loss: tensor(0.9087) feature loss: tensor(0.2381)
Local adapation with distilling: 0.0001
training loss: tensor(0.9646) feature loss: tensor(0.2756)
Local adapation with distilling: 0.0001
training loss: tensor(1.0000) feature loss: tensor(0.2222)
Local adapation with distilling: 0.0001
training loss: tensor(1.1499) feature loss: tensor(0.1941)
Local adapation with distilling: 0.0001
training loss: tensor(0.9626) feature loss: tensor(0.2269)
Local adapation with distilling: 0.0001
training loss: tensor(0.8574) feature loss: tensor(0.1940)
Global Model Acc on global data: 0.4045 length of data: 10000
-------------Round number:  76  -------------
selected users: [38, 37, 32, 50, 10, 94, 19, 44, 86, 23]
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
all data: 5000
Local adapation with distilling: 0.0001
training loss: tensor(0.9490) feature loss: tensor(0.2068)
Local adapation with distilling: 0.0001
training loss: tensor(1.2373) feature loss: tensor(0.2182)
Local adapation with distilling: 0.0001
training loss: tensor(1.0557) feature loss: tensor(0.2384)
Local adapation with distilling: 0.0001
training loss: tensor(0.8742) feature loss: tensor(0.2094)
Local adapation with distilling: 0.0001
training loss: tensor(0.8904) feature loss: tensor(0.2055)
Local adapation with distilling: 0.0001
training loss: tensor(0.9520) feature loss: tensor(0.2453)
Local adapation with distilling: 0.0001
training loss: tensor(1.0979) feature loss: tensor(0.2168)
Local adapation with distilling: 0.0001
training loss: tensor(0.9437) feature loss: tensor(0.2154)
Local adapation with distilling: 0.0001
training loss: tensor(1.1210) feature loss: tensor(0.3170)
Local adapation with distilling: 0.0001
training loss: tensor(0.9953) feature loss: tensor(0.2581)
Global Model Acc on global data: 0.4055 length of data: 10000
-------------Round number:  77  -------------
selected users: [5, 93, 41, 96, 16, 42, 81, 91, 50, 58]
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
all data: 5000
Local adapation with distilling: 0.0001
training loss: tensor(0.8500) feature loss: tensor(0.2928)
Local adapation with distilling: 0.0001
training loss: tensor(0.8624) feature loss: tensor(0.2979)
Local adapation with distilling: 0.0001
training loss: tensor(1.1656) feature loss: tensor(0.3723)
Local adapation with distilling: 0.0001
training loss: tensor(0.8092) feature loss: tensor(0.2845)
Local adapation with distilling: 0.0001
training loss: tensor(0.7936) feature loss: tensor(0.2925)
Local adapation with distilling: 0.0001
training loss: tensor(0.9077) feature loss: tensor(0.2940)
Local adapation with distilling: 0.0001
training loss: tensor(1.1058) feature loss: tensor(0.3413)
Local adapation with distilling: 0.0001
training loss: tensor(1.1327) feature loss: tensor(0.3335)
Local adapation with distilling: 0.0001
training loss: tensor(0.7556) feature loss: tensor(0.2937)
Local adapation with distilling: 0.0001
training loss: tensor(0.7872) feature loss: tensor(0.2988)
Global Model Acc on global data: 0.3936 length of data: 10000
-------------Round number:  78  -------------
selected users: [9, 46, 7, 63, 15, 2, 74, 31, 5, 36]
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
all data: 5000
Local adapation with distilling: 0.0001
training loss: tensor(1.1187) feature loss: tensor(0.2844)
Local adapation with distilling: 0.0001
training loss: tensor(1.0296) feature loss: tensor(0.2982)
Local adapation with distilling: 0.0001
training loss: tensor(1.6739) feature loss: tensor(0.2820)
Local adapation with distilling: 0.0001
training loss: tensor(1.2594) feature loss: tensor(0.3598)
Local adapation with distilling: 0.0001
training loss: tensor(1.0696) feature loss: tensor(0.3102)
Local adapation with distilling: 0.0001
training loss: tensor(1.3938) feature loss: tensor(0.3782)
Local adapation with distilling: 0.0001
training loss: tensor(1.2117) feature loss: tensor(0.3418)
Local adapation with distilling: 0.0001
training loss: tensor(1.1871) feature loss: tensor(0.3204)
Local adapation with distilling: 0.0001
training loss: tensor(1.0531) feature loss: tensor(0.2856)
Local adapation with distilling: 0.0001
training loss: tensor(0.9876) feature loss: tensor(0.2892)
Global Model Acc on global data: 0.4847 length of data: 10000
-------------Round number:  79  -------------
selected users: [68, 18, 86, 60, 56, 32, 30, 24, 45, 92]
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
all data: 5000
Local adapation with distilling: 0.0001
training loss: tensor(0.7365) feature loss: tensor(0.1931)
Local adapation with distilling: 0.0001
training loss: tensor(0.7662) feature loss: tensor(0.2046)
Local adapation with distilling: 0.0001
training loss: tensor(0.7358) feature loss: tensor(0.1901)
Local adapation with distilling: 0.0001
training loss: tensor(0.7014) feature loss: tensor(0.1930)
Local adapation with distilling: 0.0001
training loss: tensor(0.7198) feature loss: tensor(0.1862)
Local adapation with distilling: 0.0001
training loss: tensor(0.8345) feature loss: tensor(0.2329)
Local adapation with distilling: 0.0001
training loss: tensor(0.6958) feature loss: tensor(0.1894)
Local adapation with distilling: 0.0001
training loss: tensor(0.7444) feature loss: tensor(0.1901)
Local adapation with distilling: 0.0001
training loss: tensor(0.7369) feature loss: tensor(0.1899)
Local adapation with distilling: 0.0001
training loss: tensor(0.7919) feature loss: tensor(0.1978)
Global Model Acc on global data: 0.3643 length of data: 10000
-------------Round number:  80  -------------
selected users: [37, 65, 95, 53, 66, 30, 73, 85, 45, 36]
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
all data: 5000
Local adapation with distilling: 0.0001
training loss: tensor(1.6650) feature loss: tensor(0.2904)
Local adapation with distilling: 0.0001
training loss: tensor(0.9647) feature loss: tensor(0.3618)
Local adapation with distilling: 0.0001
training loss: tensor(0.9648) feature loss: tensor(0.3805)
Local adapation with distilling: 0.0001
training loss: tensor(1.0123) feature loss: tensor(0.3678)
Local adapation with distilling: 0.0001
training loss: tensor(0.9114) feature loss: tensor(0.2993)
Local adapation with distilling: 0.0001
training loss: tensor(0.8950) feature loss: tensor(0.2965)
Local adapation with distilling: 0.0001
training loss: tensor(1.0346) feature loss: tensor(0.3586)
Local adapation with distilling: 0.0001
training loss: tensor(0.8577) feature loss: tensor(0.3221)
Local adapation with distilling: 0.0001
training loss: tensor(0.9124) feature loss: tensor(0.4099)
Local adapation with distilling: 0.0001
training loss: tensor(0.8555) feature loss: tensor(0.2970)
Global Model Acc on global data: 0.3134 length of data: 10000
-------------Round number:  81  -------------
selected users: [73, 89, 41, 78, 51, 21, 30, 69, 8, 5]
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
all data: 5000
Local adapation with distilling: 0.0001
training loss: tensor(1.2673) feature loss: tensor(0.4721)
Local adapation with distilling: 0.0001
training loss: tensor(1.4553) feature loss: tensor(0.4460)
Local adapation with distilling: 0.0001
training loss: tensor(1.4025) feature loss: tensor(0.4842)
Local adapation with distilling: 0.0001
training loss: tensor(1.0970) feature loss: tensor(0.4286)
Local adapation with distilling: 0.0001
training loss: tensor(1.3334) feature loss: tensor(0.4895)
Local adapation with distilling: 0.0001
training loss: tensor(1.4084) feature loss: tensor(0.5040)
Local adapation with distilling: 0.0001
training loss: tensor(0.9834) feature loss: tensor(0.4104)
Local adapation with distilling: 0.0001
training loss: tensor(1.4134) feature loss: tensor(0.4399)
Local adapation with distilling: 0.0001
training loss: tensor(1.0635) feature loss: tensor(0.4158)
Local adapation with distilling: 0.0001
training loss: tensor(1.0013) feature loss: tensor(0.4143)
Global Model Acc on global data: 0.3738 length of data: 10000
-------------Round number:  82  -------------
selected users: [72, 33, 58, 2, 55, 84, 54, 75, 28, 40]
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
all data: 5000
Local adapation with distilling: 0.0001
training loss: tensor(1.4492) feature loss: tensor(0.4154)
Local adapation with distilling: 0.0001
training loss: tensor(1.1865) feature loss: tensor(0.3761)
Local adapation with distilling: 0.0001
training loss: tensor(1.0745) feature loss: tensor(0.3775)
Local adapation with distilling: 0.0001
training loss: tensor(1.4517) feature loss: tensor(0.4215)
Local adapation with distilling: 0.0001
training loss: tensor(1.2365) feature loss: tensor(0.3813)
Local adapation with distilling: 0.0001
training loss: tensor(1.4095) feature loss: tensor(0.3876)
Local adapation with distilling: 0.0001
training loss: tensor(1.3497) feature loss: tensor(0.3826)
Local adapation with distilling: 0.0001
training loss: tensor(1.1439) feature loss: tensor(0.3826)
Local adapation with distilling: 0.0001
training loss: tensor(1.0656) feature loss: tensor(0.3786)
Local adapation with distilling: 0.0001
training loss: tensor(1.0799) feature loss: tensor(0.3744)
Global Model Acc on global data: 0.4121 length of data: 10000
-------------Round number:  83  -------------
selected users: [6, 65, 95, 84, 61, 12, 30, 69, 35, 1]
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
all data: 5000
Local adapation with distilling: 0.0001
training loss: tensor(0.8477) feature loss: tensor(0.2450)
Local adapation with distilling: 0.0001
training loss: tensor(0.7708) feature loss: tensor(0.2389)
Local adapation with distilling: 0.0001
training loss: tensor(0.8044) feature loss: tensor(0.2850)
Local adapation with distilling: 0.0001
training loss: tensor(0.8102) feature loss: tensor(0.2375)
Local adapation with distilling: 0.0001
training loss: tensor(0.8996) feature loss: tensor(0.2628)
Local adapation with distilling: 0.0001
training loss: tensor(1.0555) feature loss: tensor(0.3448)
Local adapation with distilling: 0.0001
training loss: tensor(0.9486) feature loss: tensor(0.2784)
Local adapation with distilling: 0.0001
training loss: tensor(0.9867) feature loss: tensor(0.2629)
Local adapation with distilling: 0.0001
training loss: tensor(0.8119) feature loss: tensor(0.2556)
Local adapation with distilling: 0.0001
training loss: tensor(0.9154) feature loss: tensor(0.2818)
Global Model Acc on global data: 0.4554 length of data: 10000
-------------Round number:  84  -------------
selected users: [94, 55, 80, 1, 90, 11, 32, 8, 6, 82]
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
all data: 5000
Local adapation with distilling: 0.0001
training loss: tensor(0.6780) feature loss: tensor(0.1693)
Local adapation with distilling: 0.0001
training loss: tensor(0.6479) feature loss: tensor(0.1739)
Local adapation with distilling: 0.0001
training loss: tensor(0.6320) feature loss: tensor(0.1684)
Local adapation with distilling: 0.0001
training loss: tensor(0.6836) feature loss: tensor(0.1871)
Local adapation with distilling: 0.0001
training loss: tensor(0.6318) feature loss: tensor(0.1661)
Local adapation with distilling: 0.0001
training loss: tensor(0.7068) feature loss: tensor(0.1790)
Local adapation with distilling: 0.0001
training loss: tensor(0.7363) feature loss: tensor(0.1815)
Local adapation with distilling: 0.0001
training loss: tensor(0.6416) feature loss: tensor(0.1664)
Local adapation with distilling: 0.0001
training loss: tensor(0.6944) feature loss: tensor(0.1629)
Local adapation with distilling: 0.0001
training loss: tensor(0.7159) feature loss: tensor(0.1680)
Global Model Acc on global data: 0.4007 length of data: 10000
-------------Round number:  85  -------------
selected users: [81, 25, 40, 87, 41, 23, 10, 89, 50, 54]
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
all data: 5000
Local adapation with distilling: 0.0001
training loss: tensor(0.8644) feature loss: tensor(0.2238)
Local adapation with distilling: 0.0001
training loss: tensor(0.8068) feature loss: tensor(0.2143)
Local adapation with distilling: 0.0001
training loss: tensor(0.7772) feature loss: tensor(0.2131)
Local adapation with distilling: 0.0001
training loss: tensor(2.9980) feature loss: tensor(0.2139)
Local adapation with distilling: 0.0001
training loss: tensor(0.8817) feature loss: tensor(0.2198)
Local adapation with distilling: 0.0001
training loss: tensor(0.9546) feature loss: tensor(0.2132)
Local adapation with distilling: 0.0001
training loss: tensor(0.8285) feature loss: tensor(0.2310)
Local adapation with distilling: 0.0001
training loss: tensor(1.0663) feature loss: tensor(0.2284)
Local adapation with distilling: 0.0001
training loss: tensor(0.7797) feature loss: tensor(0.2122)
Local adapation with distilling: 0.0001
training loss: tensor(0.8853) feature loss: tensor(0.2536)
Global Model Acc on global data: 0.3556 length of data: 10000
-------------Round number:  86  -------------
selected users: [69, 74, 34, 68, 42, 0, 32, 88, 8, 3]
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
all data: 5000
Local adapation with distilling: 0.0001
training loss: tensor(0.9669) feature loss: tensor(0.3152)
Local adapation with distilling: 0.0001
training loss: tensor(0.9247) feature loss: tensor(0.3044)
Local adapation with distilling: 0.0001
training loss: tensor(0.8802) feature loss: tensor(0.3072)
Local adapation with distilling: 0.0001
training loss: tensor(0.9051) feature loss: tensor(0.3063)
Local adapation with distilling: 0.0001
training loss: tensor(0.9811) feature loss: tensor(0.3078)
Local adapation with distilling: 0.0001
training loss: tensor(0.8391) feature loss: tensor(0.3078)
Local adapation with distilling: 0.0001
training loss: tensor(0.9673) feature loss: tensor(0.3104)
Local adapation with distilling: 0.0001
training loss: tensor(0.9089) feature loss: tensor(0.3056)
Local adapation with distilling: 0.0001
training loss: tensor(0.9204) feature loss: tensor(0.3257)
Local adapation with distilling: 0.0001
training loss: tensor(0.9620) feature loss: tensor(0.3084)
Global Model Acc on global data: 0.3568 length of data: 10000
-------------Round number:  87  -------------
selected users: [16, 81, 85, 32, 39, 25, 26, 29, 65, 7]
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
all data: 5000
Local adapation with distilling: 0.0001
training loss: tensor(0.9621) feature loss: tensor(0.3585)
Local adapation with distilling: 0.0001
training loss: tensor(1.1132) feature loss: tensor(0.3805)
Local adapation with distilling: 0.0001
training loss: tensor(0.9620) feature loss: tensor(0.3810)
Local adapation with distilling: 0.0001
training loss: tensor(1.0585) feature loss: tensor(0.4258)
Local adapation with distilling: 0.0001
training loss: tensor(1.1015) feature loss: tensor(0.3740)
Local adapation with distilling: 0.0001
training loss: tensor(0.9622) feature loss: tensor(0.3860)
Local adapation with distilling: 0.0001
training loss: tensor(1.1056) feature loss: tensor(0.4144)
Local adapation with distilling: 0.0001
training loss: tensor(1.0136) feature loss: tensor(0.3704)
Local adapation with distilling: 0.0001
training loss: tensor(0.9637) feature loss: tensor(0.3813)
Local adapation with distilling: 0.0001
training loss: tensor(2.3666) feature loss: tensor(0.3424)
Global Model Acc on global data: 0.4807 length of data: 10000
-------------Round number:  88  -------------
selected users: [95, 53, 43, 84, 2, 74, 55, 31, 54, 97]
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
all data: 5000
Local adapation with distilling: 0.0001
training loss: tensor(1.1273) feature loss: tensor(0.3893)
Local adapation with distilling: 0.0001
training loss: tensor(1.1304) feature loss: tensor(0.2913)
Local adapation with distilling: 0.0001
training loss: tensor(1.1985) feature loss: tensor(0.3240)
Local adapation with distilling: 0.0001
training loss: tensor(1.1051) feature loss: tensor(0.3649)
Local adapation with distilling: 0.0001
training loss: tensor(1.6156) feature loss: tensor(0.4213)
Local adapation with distilling: 0.0001
training loss: tensor(1.0942) feature loss: tensor(0.3143)
Local adapation with distilling: 0.0001
training loss: tensor(1.2271) feature loss: tensor(0.4164)
Local adapation with distilling: 0.0001
training loss: tensor(1.1061) feature loss: tensor(0.2892)
Local adapation with distilling: 0.0001
training loss: tensor(1.1327) feature loss: tensor(0.3934)
Local adapation with distilling: 0.0001
training loss: tensor(1.7384) feature loss: tensor(0.2943)
Global Model Acc on global data: 0.4559 length of data: 10000
-------------Round number:  89  -------------
selected users: [65, 21, 87, 6, 46, 74, 44, 60, 72, 5]
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
all data: 5000
Local adapation with distilling: 0.0001
training loss: tensor(0.8715) feature loss: tensor(0.2160)
Local adapation with distilling: 0.0001
training loss: tensor(0.9622) feature loss: tensor(0.2058)
Local adapation with distilling: 0.0001
training loss: tensor(1.6406) feature loss: tensor(0.2514)
Local adapation with distilling: 0.0001
training loss: tensor(0.9633) feature loss: tensor(0.2499)
Local adapation with distilling: 0.0001
training loss: tensor(0.9978) feature loss: tensor(0.2280)
Local adapation with distilling: 0.0001
training loss: tensor(0.9901) feature loss: tensor(0.2961)
Local adapation with distilling: 0.0001
training loss: tensor(0.8963) feature loss: tensor(0.2341)
Local adapation with distilling: 0.0001
training loss: tensor(0.8168) feature loss: tensor(0.1931)
Local adapation with distilling: 0.0001
training loss: tensor(1.2082) feature loss: tensor(0.3114)
Local adapation with distilling: 0.0001
training loss: tensor(0.8461) feature loss: tensor(0.2006)
Global Model Acc on global data: 0.4597 length of data: 10000
-------------Round number:  90  -------------
selected users: [25, 85, 96, 89, 65, 94, 5, 35, 36, 92]
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
all data: 5000
Local adapation with distilling: 0.0001
training loss: tensor(0.7469) feature loss: tensor(0.3058)
Local adapation with distilling: 0.0001
training loss: tensor(0.7484) feature loss: tensor(0.2515)
Local adapation with distilling: 0.0001
training loss: tensor(1.0699) feature loss: tensor(0.3447)
Local adapation with distilling: 0.0001
training loss: tensor(0.8557) feature loss: tensor(0.2171)
Local adapation with distilling: 0.0001
training loss: tensor(0.7415) feature loss: tensor(0.3192)
Local adapation with distilling: 0.0001
training loss: tensor(0.8989) feature loss: tensor(0.3443)
Local adapation with distilling: 0.0001
training loss: tensor(0.6833) feature loss: tensor(0.2521)
Local adapation with distilling: 0.0001
training loss: tensor(0.7759) feature loss: tensor(0.2769)
Local adapation with distilling: 0.0001
training loss: tensor(0.9899) feature loss: tensor(0.3932)
Local adapation with distilling: 0.0001
training loss: tensor(1.1599) feature loss: tensor(0.4609)
Global Model Acc on global data: 0.4065 length of data: 10000
-------------Round number:  91  -------------
selected users: [75, 25, 3, 52, 78, 54, 59, 26, 62, 97]
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
all data: 5000
Local adapation with distilling: 0.0001
training loss: tensor(0.9104) feature loss: tensor(0.2479)
Local adapation with distilling: 0.0001
training loss: tensor(0.8935) feature loss: tensor(0.2460)
Local adapation with distilling: 0.0001
training loss: tensor(1.1901) feature loss: tensor(0.3066)
Local adapation with distilling: 0.0001
training loss: tensor(1.1625) feature loss: tensor(0.3208)
Local adapation with distilling: 0.0001
training loss: tensor(1.0153) feature loss: tensor(0.2609)
Local adapation with distilling: 0.0001
training loss: tensor(1.0324) feature loss: tensor(0.2581)
Local adapation with distilling: 0.0001
training loss: tensor(1.0873) feature loss: tensor(0.2626)
Local adapation with distilling: 0.0001
training loss: tensor(1.0325) feature loss: tensor(0.2551)
Local adapation with distilling: 0.0001
training loss: tensor(1.1081) feature loss: tensor(0.2832)
Local adapation with distilling: 0.0001
training loss: tensor(1.7524) feature loss: tensor(0.2581)
Global Model Acc on global data: 0.4986 length of data: 10000
-------------Round number:  92  -------------
selected users: [25, 99, 73, 61, 66, 36, 23, 83, 77, 6]
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
all data: 5000
Local adapation with distilling: 0.0001
training loss: tensor(0.8607) feature loss: tensor(0.2732)
Local adapation with distilling: 0.0001
training loss: tensor(0.8662) feature loss: tensor(0.2065)
Local adapation with distilling: 0.0001
training loss: tensor(0.8972) feature loss: tensor(0.2511)
Local adapation with distilling: 0.0001
training loss: tensor(0.9237) feature loss: tensor(0.2075)
Local adapation with distilling: 0.0001
training loss: tensor(0.8614) feature loss: tensor(0.2112)
Local adapation with distilling: 0.0001
training loss: tensor(0.8654) feature loss: tensor(0.2304)
Local adapation with distilling: 0.0001
training loss: tensor(0.9732) feature loss: tensor(0.2939)
Local adapation with distilling: 0.0001
training loss: tensor(0.8436) feature loss: tensor(0.2085)
Local adapation with distilling: 0.0001
training loss: tensor(1.4029) feature loss: tensor(0.2198)
Local adapation with distilling: 0.0001
training loss: tensor(0.9091) feature loss: tensor(0.2451)
Global Model Acc on global data: 0.47 length of data: 10000
-------------Round number:  93  -------------
selected users: [75, 82, 56, 27, 42, 35, 1, 97, 66, 61]
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
all data: 5000
Local adapation with distilling: 0.0001
training loss: tensor(0.8019) feature loss: tensor(0.2624)
Local adapation with distilling: 0.0001
training loss: tensor(1.0954) feature loss: tensor(0.3834)
Local adapation with distilling: 0.0001
training loss: tensor(0.7788) feature loss: tensor(0.2390)
Local adapation with distilling: 0.0001
training loss: tensor(1.3610) feature loss: tensor(0.2863)
Local adapation with distilling: 0.0001
training loss: tensor(1.1195) feature loss: tensor(0.3891)
Local adapation with distilling: 0.0001
training loss: tensor(0.8451) feature loss: tensor(0.2543)
Local adapation with distilling: 0.0001
training loss: tensor(0.8570) feature loss: tensor(0.2548)
Local adapation with distilling: 0.0001
training loss: tensor(1.4723) feature loss: tensor(0.2934)
Local adapation with distilling: 0.0001
training loss: tensor(0.8527) feature loss: tensor(0.2964)
Local adapation with distilling: 0.0001
training loss: tensor(0.7585) feature loss: tensor(0.2383)
Global Model Acc on global data: 0.469 length of data: 10000
-------------Round number:  94  -------------
selected users: [13, 73, 5, 18, 99, 48, 23, 4, 35, 17]
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
all data: 5000
Local adapation with distilling: 0.0001
training loss: tensor(0.9723) feature loss: tensor(0.2985)
Local adapation with distilling: 0.0001
training loss: tensor(0.9284) feature loss: tensor(0.2876)
Local adapation with distilling: 0.0001
training loss: tensor(0.8541) feature loss: tensor(0.2603)
Local adapation with distilling: 0.0001
training loss: tensor(0.9215) feature loss: tensor(0.2594)
Local adapation with distilling: 0.0001
training loss: tensor(0.9375) feature loss: tensor(0.2679)
Local adapation with distilling: 0.0001
training loss: tensor(0.9293) feature loss: tensor(0.2636)
Local adapation with distilling: 0.0001
training loss: tensor(0.9110) feature loss: tensor(0.2829)
Local adapation with distilling: 0.0001
training loss: tensor(1.0952) feature loss: tensor(0.2671)
Local adapation with distilling: 0.0001
training loss: tensor(0.9103) feature loss: tensor(0.2576)
Local adapation with distilling: 0.0001
training loss: tensor(1.1377) feature loss: tensor(0.2580)
Global Model Acc on global data: 0.515 length of data: 10000
-------------Round number:  95  -------------
selected users: [88, 9, 1, 60, 95, 26, 45, 71, 44, 21]
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
all data: 5000
Local adapation with distilling: 0.0001
training loss: tensor(0.6587) feature loss: tensor(0.1826)
Local adapation with distilling: 0.0001
training loss: tensor(0.7018) feature loss: tensor(0.1839)
Local adapation with distilling: 0.0001
training loss: tensor(0.7012) feature loss: tensor(0.2181)
Local adapation with distilling: 0.0001
training loss: tensor(0.7112) feature loss: tensor(0.1871)
Local adapation with distilling: 0.0001
training loss: tensor(0.6369) feature loss: tensor(0.1849)
Local adapation with distilling: 0.0001
training loss: tensor(0.7873) feature loss: tensor(0.2039)
Local adapation with distilling: 0.0001
training loss: tensor(0.6591) feature loss: tensor(0.1934)
Local adapation with distilling: 0.0001
training loss: tensor(0.6977) feature loss: tensor(0.2004)
Local adapation with distilling: 0.0001
training loss: tensor(0.8979) feature loss: tensor(0.2655)
Local adapation with distilling: 0.0001
training loss: tensor(0.7148) feature loss: tensor(0.1978)
Global Model Acc on global data: 0.497 length of data: 10000
-------------Round number:  96  -------------
selected users: [41, 28, 52, 15, 87, 17, 75, 42, 45, 49]
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
all data: 5000
Local adapation with distilling: 0.0001
training loss: tensor(0.7942) feature loss: tensor(0.3053)
Local adapation with distilling: 0.0001
training loss: tensor(0.7533) feature loss: tensor(0.2973)
Local adapation with distilling: 0.0001
training loss: tensor(1.0549) feature loss: tensor(0.3250)
Local adapation with distilling: 0.0001
training loss: tensor(0.7652) feature loss: tensor(0.2988)
Local adapation with distilling: 0.0001
training loss: tensor(1.3961) feature loss: tensor(0.3180)
Local adapation with distilling: 0.0001
training loss: tensor(1.3339) feature loss: tensor(0.3394)
Local adapation with distilling: 0.0001
training loss: tensor(0.7297) feature loss: tensor(0.2999)
Local adapation with distilling: 0.0001
training loss: tensor(0.9794) feature loss: tensor(0.3267)
Local adapation with distilling: 0.0001
training loss: tensor(0.8628) feature loss: tensor(0.3818)
Local adapation with distilling: 0.0001
training loss: tensor(0.8079) feature loss: tensor(0.3065)
Global Model Acc on global data: 0.5318 length of data: 10000
-------------Round number:  97  -------------
selected users: [31, 43, 64, 56, 85, 2, 70, 21, 34, 50]
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
all data: 5000
Local adapation with distilling: 0.0001
training loss: tensor(0.8096) feature loss: tensor(0.1930)
Local adapation with distilling: 0.0001
training loss: tensor(0.9429) feature loss: tensor(0.2397)
Local adapation with distilling: 0.0001
training loss: tensor(0.8701) feature loss: tensor(0.1940)
Local adapation with distilling: 0.0001
training loss: tensor(0.8478) feature loss: tensor(0.1860)
Local adapation with distilling: 0.0001
training loss: tensor(0.7515) feature loss: tensor(0.1881)
Local adapation with distilling: 0.0001
training loss: tensor(1.0833) feature loss: tensor(0.2950)
Local adapation with distilling: 0.0001
training loss: tensor(0.7875) feature loss: tensor(0.1892)
Local adapation with distilling: 0.0001
training loss: tensor(0.7699) feature loss: tensor(0.1959)
Local adapation with distilling: 0.0001
training loss: tensor(0.9136) feature loss: tensor(0.2065)
Local adapation with distilling: 0.0001
training loss: tensor(0.7831) feature loss: tensor(0.1889)
Global Model Acc on global data: 0.4919 length of data: 10000
-------------Round number:  98  -------------
selected users: [11, 48, 97, 14, 22, 36, 99, 47, 33, 81]
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
all data: 5000
Local adapation with distilling: 0.0001
training loss: tensor(0.8092) feature loss: tensor(0.2324)
Local adapation with distilling: 0.0001
training loss: tensor(0.8417) feature loss: tensor(0.2376)
Local adapation with distilling: 0.0001
training loss: tensor(1.2164) feature loss: tensor(0.2392)
Local adapation with distilling: 0.0001
training loss: tensor(0.8174) feature loss: tensor(0.2329)
Local adapation with distilling: 0.0001
training loss: tensor(0.9438) feature loss: tensor(0.2770)
Local adapation with distilling: 0.0001
training loss: tensor(0.8102) feature loss: tensor(0.2309)
Local adapation with distilling: 0.0001
training loss: tensor(0.8647) feature loss: tensor(0.2438)
Local adapation with distilling: 0.0001
training loss: tensor(1.2535) feature loss: tensor(0.2335)
Local adapation with distilling: 0.0001
training loss: tensor(0.9058) feature loss: tensor(0.2617)
Local adapation with distilling: 0.0001
training loss: tensor(0.9656) feature loss: tensor(0.2531)
Global Model Acc on global data: 0.5454 length of data: 10000
-------------Round number:  99  -------------
selected users: [14, 34, 30, 78, 16, 15, 91, 38, 10, 85]
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
random features: torch.Size([500, 16, 32, 32]) torch.Size([500])
all data: 5000
Local adapation with distilling: 0.0001
training loss: tensor(0.5666) feature loss: tensor(0.1802)
Local adapation with distilling: 0.0001
training loss: tensor(0.6084) feature loss: tensor(0.1840)
Local adapation with distilling: 0.0001
training loss: tensor(0.6080) feature loss: tensor(0.1843)
Local adapation with distilling: 0.0001
training loss: tensor(0.6093) feature loss: tensor(0.1875)
Local adapation with distilling: 0.0001
training loss: tensor(0.5810) feature loss: tensor(0.1771)
Local adapation with distilling: 0.0001
training loss: tensor(0.5958) feature loss: tensor(0.1810)
Local adapation with distilling: 0.0001
training loss: tensor(0.5818) feature loss: tensor(0.1836)
Local adapation with distilling: 0.0001
training loss: tensor(0.6129) feature loss: tensor(0.1798)
Local adapation with distilling: 0.0001
training loss: tensor(0.6173) feature loss: tensor(0.1783)
Local adapation with distilling: 0.0001
training loss: tensor(0.6110) feature loss: tensor(0.1814)
Global Model Acc on global data: 0.4256 length of data: 10000
