nohup: ignoring input
================================================================================
Summary of training process:
Dataset:                 Cifar10
Batch size:              64
Learing rate :           0.001
personal learning rate : 0.001
Number of total clients: 100
Split parameter        : 0.1
Clients per round      : 10
Number of global rounds: 100
Number of local rounds : 10
Feature from layer     : 0
Feature reduction      : 64
Local training loss    : CE_CE
Loss of beta           : 1.0
Algorithm              : FedPP
Modelname              : MOBNET
Mode                   : training
================================================================================
Files already downloaded and verified
Files already downloaded and verified
Here
Done
Class frequencies:
client,class0,class1,class2,class3,class4,class5,class6,class7,class8,class9,Amount
Client   0,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,171
Client   1,0.231,0.038,0.00,0.00,0.00,0.077,0.00,0.654,0.00,0.00,52
Client   2,0.374,0.015,0.00,0.00,0.519,0.011,0.007,0.015,0.00,0.059,457
Client   3,0.00,0.00,0.00,0.232,0.768,0.00,0.00,0.00,0.00,0.00,56
Client   4,0.660,0.071,0.032,0.122,0.00,0.00,0.083,0.00,0.00,0.032,156
Client   5,0.00,0.00,0.00,0.00,0.029,0.00,0.00,0.00,0.121,0.850,479
Client   6,0.00,0.080,0.00,0.00,0.009,0.017,0.894,0.00,0.00,0.00,538
Client   7,0.00,0.00,0.00,0.00,0.991,0.00,0.00,0.009,0.00,0.00,110
Client   8,0.131,0.116,0.00,0.00,0.00,0.00,0.00,0.00,0.753,0.00,1059
Client   9,0.00,0.00,0.175,0.00,0.467,0.017,0.192,0.150,0.00,0.00,120
Client  10,0.00,0.331,0.540,0.00,0.00,0.00,0.129,0.00,0.00,0.00,513
Client  11,0.00,0.00,0.250,0.00,0.004,0.358,0.254,0.008,0.121,0.004,240
Client  12,0.00,0.00,0.00,0.00,0.00,0.562,0.00,0.00,0.396,0.042,48
Client  13,0.00,0.00,0.00,0.371,0.185,0.00,0.444,0.00,0.00,0.00,453
Client  14,0.068,0.00,0.003,0.011,0.00,0.042,0.641,0.234,0.00,0.00,354
Client  15,0.00,0.005,0.00,0.00,0.995,0.00,0.00,0.00,0.00,0.00,213
Client  16,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,830
Client  17,0.335,0.00,0.004,0.00,0.007,0.00,0.00,0.654,0.00,0.00,543
Client  18,0.00,0.743,0.00,0.127,0.053,0.076,0.00,0.00,0.00,0.00,526
Client  19,0.008,0.00,0.057,0.676,0.185,0.074,0.00,0.00,0.00,0.00,524
Client  20,0.00,0.00,0.243,0.108,0.00,0.00,0.00,0.216,0.432,0.00,37
Client  21,0.00,0.00,0.00,0.141,0.848,0.00,0.004,0.007,0.00,0.00,277
Client  22,0.00,0.192,0.00,0.00,0.00,0.010,0.00,0.028,0.063,0.708,718
Client  23,0.00,0.100,0.529,0.00,0.00,0.214,0.129,0.00,0.00,0.029,70
Client  24,0.014,0.00,0.002,0.002,0.00,0.00,0.00,0.982,0.00,0.00,1084
Client  25,0.00,0.00,0.006,0.105,0.00,0.169,0.010,0.025,0.684,0.00,484
Client  26,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.194,0.00,0.806,72
Client  27,0.00,0.00,0.00,0.00,0.011,0.086,0.004,0.00,0.019,0.881,269
Client  28,0.237,0.00,0.00,0.001,0.038,0.167,0.001,0.011,0.546,0.00,951
Client  29,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,845
Client  30,0.004,0.00,0.218,0.743,0.00,0.00,0.00,0.023,0.008,0.004,257
Client  31,0.014,0.730,0.00,0.005,0.194,0.005,0.052,0.00,0.00,0.00,211
Client  32,0.00,0.00,0.00,0.00,0.004,0.00,0.743,0.222,0.031,0.00,257
Client  33,0.559,0.084,0.002,0.00,0.013,0.00,0.00,0.234,0.108,0.00,546
Client  34,0.00,0.010,0.093,0.00,0.202,0.010,0.00,0.00,0.685,0.00,1363
Client  35,0.913,0.008,0.00,0.011,0.00,0.065,0.00,0.00,0.00,0.004,263
Client  36,0.029,0.00,0.001,0.00,0.139,0.006,0.001,0.003,0.821,0.00,979
Client  37,0.00,0.00,0.259,0.194,0.237,0.245,0.029,0.00,0.00,0.036,139
Client  38,0.075,0.00,0.00,0.00,0.00,0.925,0.00,0.00,0.00,0.00,239
Client  39,0.00,0.334,0.00,0.00,0.00,0.00,0.00,0.666,0.00,0.00,1283
Client  40,0.00,0.00,0.00,0.00,0.00,0.353,0.00,0.211,0.436,0.00,337
Client  41,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,502
Client  42,0.218,0.00,0.020,0.259,0.00,0.041,0.00,0.463,0.00,0.00,147
Client  43,0.073,0.008,0.024,0.062,0.073,0.00,0.00,0.00,0.003,0.758,372
Client  44,0.003,0.00,0.00,0.064,0.269,0.00,0.114,0.247,0.302,0.00,668
Client  45,0.00,0.025,0.00,0.066,0.689,0.00,0.213,0.00,0.008,0.00,122
Client  46,0.002,0.258,0.019,0.00,0.042,0.274,0.00,0.406,0.00,0.00,530
Client  47,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,689
Client  48,0.023,0.00,0.003,0.036,0.00,0.00,0.227,0.006,0.605,0.100,309
Client  49,0.102,0.377,0.001,0.519,0.00,0.00,0.00,0.00,0.00,0.00,695
Client  50,0.00,0.00,0.00,0.136,0.00,0.00,0.00,0.017,0.00,0.847,118
Client  51,0.331,0.035,0.00,0.052,0.00,0.083,0.034,0.00,0.012,0.453,762
Client  52,0.007,0.276,0.717,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1078
Client  53,0.00,0.073,0.153,0.00,0.00,0.00,0.271,0.00,0.504,0.00,262
Client  54,0.003,0.003,0.127,0.173,0.663,0.025,0.00,0.006,0.00,0.00,323
Client  55,0.000,0.00,0.000,0.00,0.00,0.999,0.00,0.00,0.00,0.00,2015
Client  56,0.00,0.00,0.014,0.986,0.00,0.00,0.00,0.00,0.00,0.00,876
Client  57,0.424,0.299,0.002,0.275,0.00,0.00,0.00,0.00,0.00,0.00,655
Client  58,0.003,0.997,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,787
Client  59,0.00,0.00,0.908,0.00,0.00,0.00,0.031,0.00,0.061,0.00,131
Client  60,0.067,0.00,0.00,0.00,0.067,0.200,0.00,0.200,0.333,0.133,15
Client  61,0.00,0.027,0.001,0.00,0.00,0.00,0.430,0.177,0.364,0.00,711
Client  62,0.00,0.00,0.00,0.00,0.006,0.983,0.00,0.00,0.011,0.00,359
Client  63,0.00,0.00,0.519,0.002,0.005,0.229,0.246,0.00,0.00,0.00,582
Client  64,0.00,0.00,0.00,0.00,0.00,0.064,0.207,0.729,0.00,0.00,299
Client  65,0.295,0.003,0.00,0.00,0.00,0.00,0.00,0.011,0.691,0.00,356
Client  66,0.375,0.267,0.003,0.00,0.182,0.020,0.00,0.003,0.131,0.020,352
Client  67,0.053,0.00,0.037,0.00,0.910,0.00,0.00,0.00,0.00,0.00,543
Client  68,0.00,0.001,0.999,0.00,0.00,0.00,0.00,0.00,0.00,0.00,993
Client  69,0.00,0.185,0.00,0.00,0.228,0.587,0.00,0.00,0.00,0.00,584
Client  70,0.00,0.00,0.011,0.00,0.122,0.00,0.867,0.00,0.00,0.00,90
Client  71,0.00,0.931,0.00,0.00,0.038,0.013,0.00,0.00,0.019,0.00,159
Client  72,0.00,0.00,0.034,0.00,0.00,0.00,0.00,0.966,0.00,0.00,206
Client  73,0.00,0.103,0.00,0.068,0.017,0.222,0.00,0.00,0.111,0.479,117
Client  74,0.00,0.00,0.003,0.861,0.00,0.00,0.00,0.136,0.00,0.00,309
Client  75,0.00,0.00,0.00,0.001,0.009,0.00,0.991,0.00,0.00,0.00,2441
Client  76,0.026,0.00,0.00,0.00,0.071,0.00,0.00,0.00,0.002,0.900,2848
Client  77,0.00,0.00,0.026,0.00,0.00,0.974,0.00,0.00,0.00,0.00,693
Client  78,0.440,0.004,0.00,0.00,0.444,0.00,0.00,0.00,0.112,0.00,277
Client  79,0.828,0.007,0.00,0.131,0.004,0.029,0.00,0.00,0.00,0.00,274
Client  80,0.00,0.201,0.003,0.661,0.00,0.013,0.003,0.119,0.00,0.00,319
Client  81,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,1152
Client  82,0.00,0.009,0.757,0.009,0.00,0.00,0.036,0.00,0.009,0.180,111
Client  83,0.005,0.00,0.00,0.00,0.003,0.228,0.00,0.750,0.00,0.013,372
Client  84,0.00,0.00,0.00,0.063,0.077,0.00,0.860,0.00,0.00,0.00,271
Client  85,0.00,0.244,0.555,0.00,0.00,0.00,0.00,0.088,0.113,0.00,238
Client  86,0.002,0.00,0.314,0.00,0.666,0.00,0.00,0.00,0.018,0.00,437
Client  87,0.00,0.022,0.022,0.011,0.022,0.043,0.269,0.258,0.032,0.323,93
Client  88,0.00,0.00,0.00,0.281,0.00,0.00,0.00,0.357,0.010,0.352,210
Client  89,0.086,0.029,0.642,0.011,0.103,0.019,0.00,0.00,0.00,0.109,523
Client  90,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,800
Client  91,0.00,0.00,0.377,0.003,0.00,0.002,0.00,0.619,0.00,0.00,1199
Client  92,0.065,0.00,0.015,0.915,0.00,0.005,0.00,0.00,0.00,0.00,400
Client  93,0.00,0.496,0.00,0.00,0.331,0.132,0.00,0.041,0.00,0.00,516
Client  94,0.00,0.00,0.00,0.00,0.008,0.032,0.944,0.00,0.016,0.00,125
Client  95,0.00,0.00,0.375,0.00,0.00,0.00,0.00,0.00,0.625,0.00,32
Client  96,0.00,0.073,0.011,0.00,0.915,0.00,0.00,0.00,0.00,0.00,1321
Client  97,0.00,0.00,0.00,0.00,0.00,0.00,0.925,0.00,0.050,0.025,40
Client  98,0.00,0.073,0.00,0.00,0.00,0.836,0.018,0.009,0.064,0.00,110
Client  99,0.173,0.003,0.003,0.799,0.003,0.003,0.003,0.003,0.006,0.006,359
Num_samples of Training set per client: [171, 52, 457, 56, 156, 479, 538, 110, 1059, 120, 513, 240, 48, 453, 354, 213, 830, 543, 526, 524, 37, 277, 718, 70, 1084, 484, 72, 269, 951, 845, 257, 211, 257, 546, 1363, 263, 979, 139, 239, 1283, 337, 502, 147, 372, 668, 122, 530, 689, 309, 695, 118, 762, 1078, 262, 323, 2015, 876, 655, 787, 131, 15, 711, 359, 582, 299, 356, 352, 543, 993, 584, 90, 159, 206, 117, 309, 2441, 2848, 693, 277, 274, 319, 1152, 111, 372, 271, 238, 437, 93, 210, 523, 800, 1199, 400, 516, 125, 32, 1321, 40, 110, 359]
Total_training_samples: 50000
Global test set: 10000
Finish Generating Samples, distribution saved
MobileNetV2(
  (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (layers): Sequential(
    (0): Block(
      (conv1): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): Block(
      (conv1): Conv2d(16, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=96, bias=False)
      (bn2): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(96, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(16, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (2): Block(
      (conv1): Conv2d(24, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=144, bias=False)
      (bn2): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(144, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (3): Block(
      (conv1): Conv2d(24, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(144, 144, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=144, bias=False)
      (bn2): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(144, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (4): Block(
      (conv1): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
      (bn2): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(192, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (5): Block(
      (conv1): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
      (bn2): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(192, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (6): Block(
      (conv1): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(192, 192, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=192, bias=False)
      (bn2): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(192, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (7): Block(
      (conv1): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
      (bn2): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (8): Block(
      (conv1): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
      (bn2): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (9): Block(
      (conv1): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
      (bn2): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (10): Block(
      (conv1): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
      (bn2): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(384, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(64, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (11): Block(
      (conv1): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)
      (bn2): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (12): Block(
      (conv1): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)
      (bn2): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (13): Block(
      (conv1): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(576, 576, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=576, bias=False)
      (bn2): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(576, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (14): Block(
      (conv1): Conv2d(160, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(960, 960, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=960, bias=False)
      (bn2): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(960, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (15): Block(
      (conv1): Conv2d(160, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(960, 960, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=960, bias=False)
      (bn2): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(960, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (16): Block(
      (conv1): Conv2d(160, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(960, 960, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=960, bias=False)
      (bn2): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(960, 320, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(160, 320, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (conv2): Conv2d(320, 1280, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn2): BatchNorm2d(1280, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (linear): Linear(in_features=1280, out_features=10, bias=True)
)
number of parameters: 2296922
clients initializting...
output size: 10
  0%|          | 0/100 [00:00<?, ?it/s]  1%|          | 1/100 [00:00<00:54,  1.83it/s]  2%|▏         | 2/100 [00:01<01:00,  1.63it/s]  3%|▎         | 3/100 [00:02<01:10,  1.38it/s]  4%|▍         | 4/100 [00:06<02:39,  1.66s/it]  5%|▌         | 5/100 [00:06<02:12,  1.40s/it]  6%|▌         | 6/100 [00:07<01:50,  1.18s/it]  7%|▋         | 7/100 [00:08<01:35,  1.03s/it]  8%|▊         | 8/100 [00:08<01:22,  1.12it/s]  9%|▉         | 9/100 [00:09<01:16,  1.20it/s] 10%|█         | 10/100 [00:10<01:12,  1.24it/s] 11%|█         | 11/100 [00:10<01:07,  1.32it/s] 12%|█▏        | 12/100 [00:11<01:07,  1.29it/s] 13%|█▎        | 13/100 [00:12<01:03,  1.36it/s] 14%|█▍        | 14/100 [00:13<01:01,  1.41it/s] 15%|█▌        | 15/100 [00:13<01:02,  1.35it/s] 16%|█▌        | 16/100 [00:14<00:58,  1.43it/s] 17%|█▋        | 17/100 [00:15<00:55,  1.50it/s] 18%|█▊        | 18/100 [00:15<00:55,  1.46it/s] 19%|█▉        | 19/100 [00:16<00:55,  1.45it/s] 20%|██        | 20/100 [00:17<00:56,  1.41it/s] 21%|██        | 21/100 [00:17<00:55,  1.43it/s] 22%|██▏       | 22/100 [00:18<00:54,  1.44it/s] 23%|██▎       | 23/100 [00:19<00:55,  1.39it/s] 24%|██▍       | 24/100 [00:20<00:56,  1.36it/s] 25%|██▌       | 25/100 [00:20<00:55,  1.35it/s] 26%|██▌       | 26/100 [00:21<00:56,  1.32it/s] 27%|██▋       | 27/100 [00:22<00:51,  1.41it/s] 28%|██▊       | 28/100 [00:23<00:51,  1.39it/s] 29%|██▉       | 29/100 [00:23<00:54,  1.31it/s] 30%|███       | 30/100 [00:24<00:49,  1.40it/s] 31%|███       | 31/100 [00:25<00:51,  1.35it/s] 32%|███▏      | 32/100 [00:26<00:50,  1.33it/s] 33%|███▎      | 33/100 [00:26<00:48,  1.37it/s] 34%|███▍      | 34/100 [00:27<00:49,  1.33it/s] 35%|███▌      | 35/100 [00:28<00:49,  1.32it/s] 36%|███▌      | 36/100 [00:32<01:53,  1.77s/it] 37%|███▋      | 37/100 [00:33<01:33,  1.48s/it] 38%|███▊      | 38/100 [00:34<01:18,  1.26s/it] 39%|███▉      | 39/100 [00:34<01:04,  1.05s/it] 40%|████      | 40/100 [00:35<00:55,  1.08it/s] 41%|████      | 41/100 [00:35<00:49,  1.20it/s] 42%|████▏     | 42/100 [00:36<00:43,  1.32it/s] 43%|████▎     | 43/100 [00:37<00:42,  1.35it/s] 44%|████▍     | 44/100 [00:37<00:42,  1.33it/s] 45%|████▌     | 45/100 [00:38<00:41,  1.33it/s] 46%|████▌     | 46/100 [00:39<00:39,  1.35it/s] 47%|████▋     | 47/100 [00:40<00:39,  1.33it/s] 48%|████▊     | 48/100 [00:40<00:36,  1.44it/s] 49%|████▉     | 49/100 [00:41<00:37,  1.38it/s] 50%|█████     | 50/100 [00:42<00:35,  1.40it/s] 51%|█████     | 51/100 [00:42<00:33,  1.46it/s] 52%|█████▏    | 52/100 [00:43<00:34,  1.38it/s] 53%|█████▎    | 53/100 [00:44<00:33,  1.41it/s] 54%|█████▍    | 54/100 [00:44<00:31,  1.44it/s] 55%|█████▌    | 55/100 [00:45<00:32,  1.37it/s] 56%|█████▌    | 56/100 [00:46<00:31,  1.38it/s] 57%|█████▋    | 57/100 [00:47<00:29,  1.46it/s] 58%|█████▊    | 58/100 [00:47<00:28,  1.46it/s] 59%|█████▉    | 59/100 [00:48<00:26,  1.52it/s] 60%|██████    | 60/100 [00:48<00:25,  1.54it/s] 61%|██████    | 61/100 [00:49<00:26,  1.47it/s] 62%|██████▏   | 62/100 [00:50<00:26,  1.43it/s] 63%|██████▎   | 63/100 [00:51<00:25,  1.48it/s] 64%|██████▍   | 64/100 [00:51<00:24,  1.45it/s] 65%|██████▌   | 65/100 [00:52<00:23,  1.50it/s] 66%|██████▌   | 66/100 [00:53<00:22,  1.49it/s] 67%|██████▋   | 67/100 [00:53<00:23,  1.38it/s] 68%|██████▊   | 68/100 [00:57<00:53,  1.67s/it] 69%|██████▉   | 69/100 [00:58<00:41,  1.35s/it] 70%|███████   | 70/100 [00:59<00:34,  1.13s/it] 71%|███████   | 71/100 [00:59<00:28,  1.02it/s] 72%|███████▏  | 72/100 [01:00<00:24,  1.13it/s] 73%|███████▎  | 73/100 [01:00<00:21,  1.26it/s] 74%|███████▍  | 74/100 [01:01<00:20,  1.28it/s] 75%|███████▌  | 75/100 [01:02<00:18,  1.36it/s] 76%|███████▌  | 76/100 [01:03<00:17,  1.38it/s] 77%|███████▋  | 77/100 [01:03<00:17,  1.34it/s] 78%|███████▊  | 78/100 [01:04<00:15,  1.44it/s] 79%|███████▉  | 79/100 [01:05<00:14,  1.45it/s] 80%|████████  | 80/100 [01:05<00:13,  1.43it/s] 81%|████████  | 81/100 [01:06<00:13,  1.40it/s] 82%|████████▏ | 82/100 [01:07<00:12,  1.48it/s] 83%|████████▎ | 83/100 [01:07<00:11,  1.44it/s] 84%|████████▍ | 84/100 [01:08<00:11,  1.43it/s] 85%|████████▌ | 85/100 [01:09<00:10,  1.47it/s] 86%|████████▌ | 86/100 [01:09<00:09,  1.48it/s] 87%|████████▋ | 87/100 [01:10<00:08,  1.47it/s] 88%|████████▊ | 88/100 [01:11<00:08,  1.35it/s] 89%|████████▉ | 89/100 [01:12<00:07,  1.39it/s] 90%|█████████ | 90/100 [01:12<00:07,  1.35it/s] 91%|█████████ | 91/100 [01:13<00:06,  1.46it/s] 92%|█████████▏| 92/100 [01:14<00:05,  1.45it/s] 93%|█████████▎| 93/100 [01:14<00:04,  1.46it/s] 94%|█████████▍| 94/100 [01:15<00:04,  1.46it/s] 95%|█████████▌| 95/100 [01:16<00:03,  1.46it/s] 96%|█████████▌| 96/100 [01:16<00:02,  1.55it/s] 97%|█████████▋| 97/100 [01:17<00:01,  1.53it/s] 98%|█████████▊| 98/100 [01:18<00:01,  1.56it/s] 99%|█████████▉| 99/100 [01:18<00:00,  1.51it/s]100%|██████████| 100/100 [01:19<00:00,  1.35it/s]100%|██████████| 100/100 [01:19<00:00,  1.26it/s]
Number of users per round / total users: 10  /  100
Finished creating FedAvg server.
=== FedPP ===
-------------Round number:  0  -------------
selected users: [26, 86, 2, 55, 75, 93, 16, 73, 54, 95]
torch.Size([72, 16, 32, 32]) torch.Size([72])
torch.Size([437, 16, 32, 32]) torch.Size([437])
torch.Size([457, 16, 32, 32]) torch.Size([457])
torch.Size([2015, 16, 32, 32]) torch.Size([2015])
torch.Size([2441, 16, 32, 32]) torch.Size([2441])
torch.Size([516, 16, 32, 32]) torch.Size([516])
torch.Size([830, 16, 32, 32]) torch.Size([830])
torch.Size([117, 16, 32, 32]) torch.Size([117])
torch.Size([323, 16, 32, 32]) torch.Size([323])
torch.Size([32, 16, 32, 32]) torch.Size([32])
7240 72 72
all data: 1000
Local adapation with distilling: 0.001
training loss: tensor(1.0037) feature loss: tensor(2.1628)
Local adapation with distilling: 0.001
training loss: tensor(0.8217) feature loss: tensor(1.5198)
Local adapation with distilling: 0.001
training loss: tensor(0.7855) feature loss: tensor(1.3822)
Local adapation with distilling: 0.001
training loss: tensor(0.0931) feature loss: tensor(0.6436)
Local adapation with distilling: 0.001
training loss: tensor(0.1217) feature loss: tensor(0.5786)
Local adapation with distilling: 0.001
training loss: tensor(0.8695) feature loss: tensor(1.4115)
Local adapation with distilling: 0.001
training loss: tensor(0.2031) feature loss: tensor(1.1380)
Local adapation with distilling: 0.001
training loss: tensor(1.0727) feature loss: tensor(1.9471)
Local adapation with distilling: 0.001
training loss: tensor(1.1686) feature loss: tensor(1.6009)
Local adapation with distilling: 0.001
training loss: tensor(0.9971) feature loss: tensor(2.3011)
         GM acc on global data: 0.1169 length of data: 10000
-------------Round number:  1  -------------
selected users: [80, 84, 33, 81, 93, 17, 36, 82, 69, 65]
torch.Size([319, 16, 32, 32]) torch.Size([319])
torch.Size([271, 16, 32, 32]) torch.Size([271])
torch.Size([546, 16, 32, 32]) torch.Size([546])
torch.Size([1216, 16, 32, 32]) torch.Size([1216])
torch.Size([516, 16, 32, 32]) torch.Size([516])
torch.Size([543, 16, 32, 32]) torch.Size([543])
torch.Size([979, 16, 32, 32]) torch.Size([979])
torch.Size([111, 16, 32, 32]) torch.Size([111])
torch.Size([584, 16, 32, 32]) torch.Size([584])
torch.Size([356, 16, 32, 32]) torch.Size([356])
5441 72 72
all data: 1000
Local adapation with distilling: 0.000982
training loss: tensor(7.1027) feature loss: tensor(6.1590)
Local adapation with distilling: 0.000982
training loss: tensor(1.4255) feature loss: tensor(6.9114)
Local adapation with distilling: 0.000982
training loss: tensor(2.2197) feature loss: tensor(4.4424)
Local adapation with distilling: 0.000982
training loss: tensor(2.5858) feature loss: tensor(2.2441)
Local adapation with distilling: 0.000982
training loss: tensor(1.8496) feature loss: tensor(4.6492)
Local adapation with distilling: 0.000982
training loss: tensor(2.6056) feature loss: tensor(4.8799)
Local adapation with distilling: 0.000982
training loss: tensor(2.7840) feature loss: tensor(2.9207)
Local adapation with distilling: 0.000982
training loss: tensor(4.7070) feature loss: tensor(11.8951)
Local adapation with distilling: 0.000982
training loss: tensor(1.0328) feature loss: tensor(4.1948)
Local adapation with distilling: 0.000982
training loss: tensor(6.0984) feature loss: tensor(5.9362)
         GM acc on global data: 0.1131 length of data: 10000
-------------Round number:  2  -------------
selected users: [83, 30, 56, 24, 16, 23, 2, 27, 28, 13]
torch.Size([372, 16, 32, 32]) torch.Size([372])
torch.Size([257, 16, 32, 32]) torch.Size([257])
torch.Size([876, 16, 32, 32]) torch.Size([876])
torch.Size([1084, 16, 32, 32]) torch.Size([1084])
torch.Size([830, 16, 32, 32]) torch.Size([830])
torch.Size([70, 16, 32, 32]) torch.Size([70])
torch.Size([457, 16, 32, 32]) torch.Size([457])
torch.Size([269, 16, 32, 32]) torch.Size([269])
torch.Size([951, 16, 32, 32]) torch.Size([951])
torch.Size([453, 16, 32, 32]) torch.Size([453])
5619 72 72
all data: 1000
Local adapation with distilling: 0.000964
training loss: tensor(0.6334) feature loss: tensor(1.3802)
Local adapation with distilling: 0.000964
training loss: tensor(1.0061) feature loss: tensor(1.4737)
Local adapation with distilling: 0.000964
training loss: tensor(0.2345) feature loss: tensor(0.8972)
Local adapation with distilling: 0.000964
training loss: tensor(0.1781) feature loss: tensor(0.8175)
Local adapation with distilling: 0.000964
training loss: tensor(0.1339) feature loss: tensor(0.8762)
Local adapation with distilling: 0.000964
training loss: tensor(2.1443) feature loss: tensor(2.1153)
Local adapation with distilling: 0.000964
training loss: tensor(0.7316) feature loss: tensor(1.4130)
Local adapation with distilling: 0.000964
training loss: tensor(1.7113) feature loss: tensor(1.9251)
Local adapation with distilling: 0.000964
training loss: tensor(0.5921) feature loss: tensor(0.8826)
Local adapation with distilling: 0.000964
training loss: tensor(0.8254) feature loss: tensor(1.2754)
         GM acc on global data: 0.1737 length of data: 10000
-------------Round number:  3  -------------
selected users: [93, 67, 6, 64, 96, 83, 98, 42, 25, 15]
torch.Size([516, 16, 32, 32]) torch.Size([516])
torch.Size([543, 16, 32, 32]) torch.Size([543])
torch.Size([538, 16, 32, 32]) torch.Size([538])
torch.Size([299, 16, 32, 32]) torch.Size([299])
torch.Size([1321, 16, 32, 32]) torch.Size([1321])
torch.Size([372, 16, 32, 32]) torch.Size([372])
torch.Size([110, 16, 32, 32]) torch.Size([110])
torch.Size([147, 16, 32, 32]) torch.Size([147])
torch.Size([484, 16, 32, 32]) torch.Size([484])
torch.Size([213, 16, 32, 32]) torch.Size([213])
4543 72 72
all data: 1000
Local adapation with distilling: 0.000946
training loss: tensor(0.9415) feature loss: tensor(0.9517)
Local adapation with distilling: 0.000946
training loss: tensor(0.4271) feature loss: tensor(0.8349)
Local adapation with distilling: 0.000946
training loss: tensor(0.6446) feature loss: tensor(1.0699)
Local adapation with distilling: 0.000946
training loss: tensor(0.4993) feature loss: tensor(1.3298)
Local adapation with distilling: 0.000946
training loss: tensor(0.2787) feature loss: tensor(0.5252)
Local adapation with distilling: 0.000946
training loss: tensor(0.5319) feature loss: tensor(1.1920)
Local adapation with distilling: 0.000946
training loss: tensor(1.1938) feature loss: tensor(2.0660)
Local adapation with distilling: 0.000946
training loss: tensor(0.6009) feature loss: tensor(1.6322)
Local adapation with distilling: 0.000946
training loss: tensor(0.5887) feature loss: tensor(1.0164)
Local adapation with distilling: 0.000946
training loss: tensor(0.4823) feature loss: tensor(1.4238)
         GM acc on global data: 0.22 length of data: 10000
-------------Round number:  4  -------------
selected users: [20, 10, 96, 16, 63, 24, 53, 97, 41, 47]
torch.Size([37, 16, 32, 32]) torch.Size([37])
torch.Size([513, 16, 32, 32]) torch.Size([513])
torch.Size([1321, 16, 32, 32]) torch.Size([1321])
torch.Size([830, 16, 32, 32]) torch.Size([830])
torch.Size([582, 16, 32, 32]) torch.Size([582])
torch.Size([1084, 16, 32, 32]) torch.Size([1084])
torch.Size([262, 16, 32, 32]) torch.Size([262])
torch.Size([40, 16, 32, 32]) torch.Size([40])
torch.Size([502, 16, 32, 32]) torch.Size([502])
torch.Size([689, 16, 32, 32]) torch.Size([689])
5860 72 72
all data: 1000
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.1411) feature loss: tensor(2.3390)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.9495) feature loss: tensor(0.8642)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(0.1320) feature loss: tensor(0.4719)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(0.2666) feature loss: tensor(0.6217)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(0.8999) feature loss: tensor(0.7785)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(0.1546) feature loss: tensor(0.4930)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(0.9338) feature loss: tensor(1.2680)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.4843) feature loss: tensor(2.5202)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(0.5442) feature loss: tensor(0.8408)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(0.4223) feature loss: tensor(0.6674)
         GM acc on global data: 0.1841 length of data: 10000
-------------Round number:  5  -------------
selected users: [66, 32, 46, 28, 74, 23, 10, 20, 17, 35]
torch.Size([352, 16, 32, 32]) torch.Size([352])
torch.Size([257, 16, 32, 32]) torch.Size([257])
torch.Size([530, 16, 32, 32]) torch.Size([530])
torch.Size([951, 16, 32, 32]) torch.Size([951])
torch.Size([309, 16, 32, 32]) torch.Size([309])
torch.Size([70, 16, 32, 32]) torch.Size([70])
torch.Size([513, 16, 32, 32]) torch.Size([513])
torch.Size([37, 16, 32, 32]) torch.Size([37])
torch.Size([543, 16, 32, 32]) torch.Size([543])
torch.Size([263, 16, 32, 32]) torch.Size([263])
3825 72 72
all data: 1000
Local adapation with distilling: 0.00091
training loss: tensor(0.5842) feature loss: tensor(1.0943)
Local adapation with distilling: 0.00091
training loss: tensor(1.0335) feature loss: tensor(1.5009)
Local adapation with distilling: 0.00091
training loss: tensor(0.4988) feature loss: tensor(0.8949)
Local adapation with distilling: 0.00091
training loss: tensor(0.4252) feature loss: tensor(0.6160)
Local adapation with distilling: 0.00091
training loss: tensor(2.6198) feature loss: tensor(1.3614)
Local adapation with distilling: 0.00091
training loss: tensor(2.2547) feature loss: tensor(2.3661)
Local adapation with distilling: 0.00091
training loss: tensor(1.0912) feature loss: tensor(1.0053)
Local adapation with distilling: 0.00091
training loss: tensor(1.5495) feature loss: tensor(2.8955)
Local adapation with distilling: 0.00091
training loss: tensor(0.2793) feature loss: tensor(0.8519)
Local adapation with distilling: 0.00091
training loss: tensor(0.4265) feature loss: tensor(1.3055)
         GM acc on global data: 0.3513 length of data: 10000
-------------Round number:  6  -------------
selected users: [17, 34, 0, 45, 60, 86, 20, 47, 44, 81]
torch.Size([543, 16, 32, 32]) torch.Size([543])
torch.Size([1363, 16, 32, 32]) torch.Size([1363])
torch.Size([171, 16, 32, 32]) torch.Size([171])
torch.Size([122, 16, 32, 32]) torch.Size([122])
torch.Size([15, 16, 32, 32]) torch.Size([15])
torch.Size([437, 16, 32, 32]) torch.Size([437])
torch.Size([37, 16, 32, 32]) torch.Size([37])
torch.Size([689, 16, 32, 32]) torch.Size([689])
torch.Size([668, 16, 32, 32]) torch.Size([668])
torch.Size([1216, 16, 32, 32]) torch.Size([1216])
5261 72 72
all data: 1000
Local adapation with distilling: 0.000892
training loss: tensor(0.2638) feature loss: tensor(0.7527)
Local adapation with distilling: 0.000892
training loss: tensor(0.3682) feature loss: tensor(0.4314)
Local adapation with distilling: 0.000892
training loss: tensor(4.9062) feature loss: tensor(1.8211)
Local adapation with distilling: 0.000892
training loss: tensor(1.0633) feature loss: tensor(1.7717)
Local adapation with distilling: 0.000892
training loss: tensor(1.2188) feature loss: tensor(2.1176)
Local adapation with distilling: 0.000892
training loss: tensor(0.5566) feature loss: tensor(0.8727)
Local adapation with distilling: 0.000892
training loss: tensor(0.4234) feature loss: tensor(2.1778)
Local adapation with distilling: 0.000892
training loss: tensor(0.1481) feature loss: tensor(0.6252)
Local adapation with distilling: 0.000892
training loss: tensor(0.4125) feature loss: tensor(0.6009)
Local adapation with distilling: 0.000892
training loss: tensor(0.2677) feature loss: tensor(0.4848)
         GM acc on global data: 0.2588 length of data: 10000
-------------Round number:  7  -------------
selected users: [37, 26, 78, 91, 49, 15, 93, 71, 86, 22]
torch.Size([139, 16, 32, 32]) torch.Size([139])
torch.Size([72, 16, 32, 32]) torch.Size([72])
torch.Size([277, 16, 32, 32]) torch.Size([277])
torch.Size([1199, 16, 32, 32]) torch.Size([1199])
torch.Size([695, 16, 32, 32]) torch.Size([695])
torch.Size([213, 16, 32, 32]) torch.Size([213])
torch.Size([516, 16, 32, 32]) torch.Size([516])
torch.Size([159, 16, 32, 32]) torch.Size([159])
torch.Size([437, 16, 32, 32]) torch.Size([437])
torch.Size([718, 16, 32, 32]) torch.Size([718])
4425 72 72
all data: 1000
Local adapation with distilling: 0.000874
training loss: tensor(1.2373) feature loss: tensor(1.9776)
Local adapation with distilling: 0.000874
training loss: tensor(4.9668) feature loss: tensor(2.2229)
Local adapation with distilling: 0.000874
training loss: tensor(0.4162) feature loss: tensor(1.2477)
Local adapation with distilling: 0.000874
training loss: tensor(0.3313) feature loss: tensor(0.5047)
Local adapation with distilling: 0.000874
training loss: tensor(0.4851) feature loss: tensor(0.7718)
Local adapation with distilling: 0.000874
training loss: tensor(0.5476) feature loss: tensor(1.6212)
Local adapation with distilling: 0.000874
training loss: tensor(0.8796) feature loss: tensor(0.8743)
Local adapation with distilling: 0.000874
training loss: tensor(2.3325) feature loss: tensor(1.9323)
Local adapation with distilling: 0.000874
training loss: tensor(0.4126) feature loss: tensor(1.0393)
Local adapation with distilling: 0.000874
training loss: tensor(1.5014) feature loss: tensor(0.7501)
         GM acc on global data: 0.3363 length of data: 10000
-------------Round number:  8  -------------
selected users: [17, 23, 1, 44, 55, 99, 86, 29, 62, 33]
torch.Size([543, 16, 32, 32]) torch.Size([543])
torch.Size([70, 16, 32, 32]) torch.Size([70])
torch.Size([52, 16, 32, 32]) torch.Size([52])
torch.Size([668, 16, 32, 32]) torch.Size([668])
torch.Size([2015, 16, 32, 32]) torch.Size([2015])
torch.Size([359, 16, 32, 32]) torch.Size([359])
torch.Size([437, 16, 32, 32]) torch.Size([437])
torch.Size([845, 16, 32, 32]) torch.Size([845])
torch.Size([359, 16, 32, 32]) torch.Size([359])
torch.Size([546, 16, 32, 32]) torch.Size([546])
5894 72 72
all data: 1000
Local adapation with distilling: 0.000856
training loss: tensor(0.1970) feature loss: tensor(0.5930)
Local adapation with distilling: 0.000856
training loss: tensor(2.0217) feature loss: tensor(1.8858)
Local adapation with distilling: 0.000856
training loss: tensor(0.5017) feature loss: tensor(2.2441)
Local adapation with distilling: 0.000856
training loss: tensor(0.4597) feature loss: tensor(0.5902)
Local adapation with distilling: 0.000856
training loss: tensor(0.1297) feature loss: tensor(0.2693)
Local adapation with distilling: 0.000856
training loss: tensor(0.4841) feature loss: tensor(0.8705)
Local adapation with distilling: 0.000856
training loss: tensor(0.3293) feature loss: tensor(0.8674)
Local adapation with distilling: 0.000856
training loss: tensor(0.7263) feature loss: tensor(0.5534)
Local adapation with distilling: 0.000856
training loss: tensor(0.7302) feature loss: tensor(0.7867)
Local adapation with distilling: 0.000856
training loss: tensor(0.3775) feature loss: tensor(0.6017)
         GM acc on global data: 0.3019 length of data: 10000
-------------Round number:  9  -------------
selected users: [75, 42, 46, 68, 3, 39, 23, 20, 70, 73]
torch.Size([2441, 16, 32, 32]) torch.Size([2441])
torch.Size([147, 16, 32, 32]) torch.Size([147])
torch.Size([530, 16, 32, 32]) torch.Size([530])
torch.Size([993, 16, 32, 32]) torch.Size([993])
torch.Size([56, 16, 32, 32]) torch.Size([56])
torch.Size([1283, 16, 32, 32]) torch.Size([1283])
torch.Size([70, 16, 32, 32]) torch.Size([70])
torch.Size([37, 16, 32, 32]) torch.Size([37])
torch.Size([90, 16, 32, 32]) torch.Size([90])
torch.Size([117, 16, 32, 32]) torch.Size([117])
5764 72 72
all data: 1000
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.4508) feature loss: tensor(0.2823)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.6024) feature loss: tensor(2.2981)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.4482) feature loss: tensor(0.9852)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.3042) feature loss: tensor(0.5746)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(1.4993) feature loss: tensor(4.4602)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.2225) feature loss: tensor(0.4767)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(1.5797) feature loss: tensor(2.9348)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(1.1374) feature loss: tensor(4.6593)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(4.0422) feature loss: tensor(3.0008)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(2.4861) feature loss: tensor(3.4005)
         GM acc on global data: 0.2233 length of data: 10000
-------------Round number:  10  -------------
selected users: [19, 14, 43, 37, 66, 3, 79, 41, 38, 68]
torch.Size([524, 16, 32, 32]) torch.Size([524])
torch.Size([354, 16, 32, 32]) torch.Size([354])
torch.Size([372, 16, 32, 32]) torch.Size([372])
torch.Size([139, 16, 32, 32]) torch.Size([139])
torch.Size([352, 16, 32, 32]) torch.Size([352])
torch.Size([56, 16, 32, 32]) torch.Size([56])
torch.Size([274, 16, 32, 32]) torch.Size([274])
torch.Size([502, 16, 32, 32]) torch.Size([502])
torch.Size([239, 16, 32, 32]) torch.Size([239])
torch.Size([993, 16, 32, 32]) torch.Size([993])
3805 72 72
all data: 1000
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.8355) feature loss: tensor(0.9804)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.4959) feature loss: tensor(1.3417)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(2.0943) feature loss: tensor(1.3059)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(1.2631) feature loss: tensor(2.1328)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(1.0632) feature loss: tensor(1.1989)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(2.1618) feature loss: tensor(4.4634)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(1.4261) feature loss: tensor(1.6165)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(1.0970) feature loss: tensor(1.0671)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(1.2079) feature loss: tensor(1.8886)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.1537) feature loss: tensor(0.6409)
         GM acc on global data: 0.2963 length of data: 10000
-------------Round number:  11  -------------
selected users: [46, 49, 22, 58, 41, 98, 62, 29, 30, 51]
torch.Size([530, 16, 32, 32]) torch.Size([530])
torch.Size([695, 16, 32, 32]) torch.Size([695])
torch.Size([718, 16, 32, 32]) torch.Size([718])
torch.Size([787, 16, 32, 32]) torch.Size([787])
torch.Size([502, 16, 32, 32]) torch.Size([502])
torch.Size([110, 16, 32, 32]) torch.Size([110])
torch.Size([359, 16, 32, 32]) torch.Size([359])
torch.Size([845, 16, 32, 32]) torch.Size([845])
torch.Size([257, 16, 32, 32]) torch.Size([257])
torch.Size([762, 16, 32, 32]) torch.Size([762])
5565 72 72
all data: 1000
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.3609) feature loss: tensor(0.5744)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.3158) feature loss: tensor(0.4875)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.7224) feature loss: tensor(0.5430)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.2847) feature loss: tensor(0.4517)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.3081) feature loss: tensor(0.7622)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.9491) feature loss: tensor(2.1679)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.5174) feature loss: tensor(1.2316)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.2529) feature loss: tensor(0.4252)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(3.6413) feature loss: tensor(1.2764)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.4347) feature loss: tensor(0.4717)
         GM acc on global data: 0.3238 length of data: 10000
-------------Round number:  12  -------------
selected users: [17, 41, 92, 14, 68, 31, 89, 15, 21, 60]
torch.Size([543, 16, 32, 32]) torch.Size([543])
torch.Size([502, 16, 32, 32]) torch.Size([502])
torch.Size([400, 16, 32, 32]) torch.Size([400])
torch.Size([354, 16, 32, 32]) torch.Size([354])
torch.Size([993, 16, 32, 32]) torch.Size([993])
torch.Size([211, 16, 32, 32]) torch.Size([211])
torch.Size([523, 16, 32, 32]) torch.Size([523])
torch.Size([213, 16, 32, 32]) torch.Size([213])
torch.Size([277, 16, 32, 32]) torch.Size([277])
torch.Size([15, 16, 32, 32]) torch.Size([15])
4031 72 72
all data: 1000
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.2397) feature loss: tensor(0.6281)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.2900) feature loss: tensor(0.7634)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.5744) feature loss: tensor(0.8827)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.5555) feature loss: tensor(0.9051)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.1709) feature loss: tensor(0.3897)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.4721) feature loss: tensor(1.2786)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.5176) feature loss: tensor(0.5709)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(1.1309) feature loss: tensor(1.3702)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.9039) feature loss: tensor(1.0771)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.8544) feature loss: tensor(2.9865)
         GM acc on global data: 0.3236 length of data: 10000
-------------Round number:  13  -------------
selected users: [37, 62, 83, 14, 43, 9, 44, 31, 69, 57]
torch.Size([139, 16, 32, 32]) torch.Size([139])
torch.Size([359, 16, 32, 32]) torch.Size([359])
torch.Size([372, 16, 32, 32]) torch.Size([372])
torch.Size([354, 16, 32, 32]) torch.Size([354])
torch.Size([372, 16, 32, 32]) torch.Size([372])
torch.Size([120, 16, 32, 32]) torch.Size([120])
torch.Size([668, 16, 32, 32]) torch.Size([668])
torch.Size([211, 16, 32, 32]) torch.Size([211])
torch.Size([584, 16, 32, 32]) torch.Size([584])
torch.Size([655, 16, 32, 32]) torch.Size([655])
3834 72 72
all data: 1000
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.5726) feature loss: tensor(1.5586)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.5606) feature loss: tensor(0.9627)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.5049) feature loss: tensor(0.9281)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.4303) feature loss: tensor(0.9395)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.7083) feature loss: tensor(0.9054)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.8036) feature loss: tensor(2.2068)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.4603) feature loss: tensor(0.5050)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.5161) feature loss: tensor(1.2277)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.4050) feature loss: tensor(0.5669)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.3284) feature loss: tensor(0.5412)
         GM acc on global data: 0.426 length of data: 10000
-------------Round number:  14  -------------
selected users: [24, 39, 35, 44, 55, 70, 82, 40, 91, 65]
torch.Size([1084, 16, 32, 32]) torch.Size([1084])
torch.Size([1283, 16, 32, 32]) torch.Size([1283])
torch.Size([263, 16, 32, 32]) torch.Size([263])
torch.Size([668, 16, 32, 32]) torch.Size([668])
torch.Size([2015, 16, 32, 32]) torch.Size([2015])
torch.Size([90, 16, 32, 32]) torch.Size([90])
torch.Size([111, 16, 32, 32]) torch.Size([111])
torch.Size([337, 16, 32, 32]) torch.Size([337])
torch.Size([1199, 16, 32, 32]) torch.Size([1199])
torch.Size([356, 16, 32, 32]) torch.Size([356])
7406 72 72
all data: 1000
Local adapation with distilling: 0.000748
training loss: tensor(0.1416) feature loss: tensor(0.4033)
Local adapation with distilling: 0.000748
training loss: tensor(0.1528) feature loss: tensor(0.2400)
Local adapation with distilling: 0.000748
training loss: tensor(0.4958) feature loss: tensor(0.8407)
Local adapation with distilling: 0.000748
training loss: tensor(0.2300) feature loss: tensor(0.4111)
Local adapation with distilling: 0.000748
training loss: tensor(0.0594) feature loss: tensor(0.1989)
Local adapation with distilling: 0.000748
training loss: tensor(1.2327) feature loss: tensor(1.6119)
Local adapation with distilling: 0.000748
training loss: tensor(0.9509) feature loss: tensor(1.4882)
Local adapation with distilling: 0.000748
training loss: tensor(0.3936) feature loss: tensor(0.6470)
Local adapation with distilling: 0.000748
training loss: tensor(0.2322) feature loss: tensor(0.2588)
Local adapation with distilling: 0.000748
training loss: tensor(0.7361) feature loss: tensor(0.8904)
         GM acc on global data: 0.3194 length of data: 10000
-------------Round number:  15  -------------
selected users: [84, 36, 57, 51, 46, 78, 93, 14, 11, 59]
torch.Size([271, 16, 32, 32]) torch.Size([271])
torch.Size([979, 16, 32, 32]) torch.Size([979])
torch.Size([655, 16, 32, 32]) torch.Size([655])
torch.Size([762, 16, 32, 32]) torch.Size([762])
torch.Size([530, 16, 32, 32]) torch.Size([530])
torch.Size([277, 16, 32, 32]) torch.Size([277])
torch.Size([516, 16, 32, 32]) torch.Size([516])
torch.Size([354, 16, 32, 32]) torch.Size([354])
torch.Size([240, 16, 32, 32]) torch.Size([240])
torch.Size([131, 16, 32, 32]) torch.Size([131])
4715 72 72
all data: 1000
Local adapation with distilling: 0.00073
training loss: tensor(1.6185) feature loss: tensor(1.4060)
Local adapation with distilling: 0.00073
training loss: tensor(0.4335) feature loss: tensor(0.4478)
Local adapation with distilling: 0.00073
training loss: tensor(0.3252) feature loss: tensor(0.5377)
Local adapation with distilling: 0.00073
training loss: tensor(0.4901) feature loss: tensor(0.5309)
Local adapation with distilling: 0.00073
training loss: tensor(0.3055) feature loss: tensor(0.6952)
Local adapation with distilling: 0.00073
training loss: tensor(0.8260) feature loss: tensor(1.0475)
Local adapation with distilling: 0.00073
training loss: tensor(0.5466) feature loss: tensor(0.6987)
Local adapation with distilling: 0.00073
training loss: tensor(0.5907) feature loss: tensor(0.9978)
Local adapation with distilling: 0.00073
training loss: tensor(0.6537) feature loss: tensor(1.2504)
Local adapation with distilling: 0.00073
training loss: tensor(1.0989) feature loss: tensor(1.8837)
         GM acc on global data: 0.4492 length of data: 10000
-------------Round number:  16  -------------
selected users: [7, 25, 71, 42, 47, 29, 63, 88, 50, 9]
torch.Size([110, 16, 32, 32]) torch.Size([110])
torch.Size([484, 16, 32, 32]) torch.Size([484])
torch.Size([159, 16, 32, 32]) torch.Size([159])
torch.Size([147, 16, 32, 32]) torch.Size([147])
torch.Size([689, 16, 32, 32]) torch.Size([689])
torch.Size([845, 16, 32, 32]) torch.Size([845])
torch.Size([582, 16, 32, 32]) torch.Size([582])
torch.Size([210, 16, 32, 32]) torch.Size([210])
torch.Size([118, 16, 32, 32]) torch.Size([118])
torch.Size([120, 16, 32, 32]) torch.Size([120])
3464 72 72
all data: 1000
Local adapation with distilling: 0.000712
training loss: tensor(0.8992) feature loss: tensor(1.7959)
Local adapation with distilling: 0.000712
training loss: tensor(0.2695) feature loss: tensor(0.5048)
Local adapation with distilling: 0.000712
training loss: tensor(0.4029) feature loss: tensor(1.1943)
Local adapation with distilling: 0.000712
training loss: tensor(0.4725) feature loss: tensor(1.1173)
Local adapation with distilling: 0.000712
training loss: tensor(0.1486) feature loss: tensor(0.4095)
Local adapation with distilling: 0.000712
training loss: tensor(0.1959) feature loss: tensor(0.3321)
Local adapation with distilling: 0.000712
training loss: tensor(0.4598) feature loss: tensor(0.4591)
Local adapation with distilling: 0.000712
training loss: tensor(0.6069) feature loss: tensor(0.8849)
Local adapation with distilling: 0.000712
training loss: tensor(1.2520) feature loss: tensor(1.3373)
Local adapation with distilling: 0.000712
training loss: tensor(0.7709) feature loss: tensor(1.4766)
         GM acc on global data: 0.4274 length of data: 10000
-------------Round number:  17  -------------
selected users: [71, 28, 9, 4, 73, 34, 94, 92, 47, 37]
torch.Size([159, 16, 32, 32]) torch.Size([159])
torch.Size([951, 16, 32, 32]) torch.Size([951])
torch.Size([120, 16, 32, 32]) torch.Size([120])
torch.Size([156, 16, 32, 32]) torch.Size([156])
torch.Size([117, 16, 32, 32]) torch.Size([117])
torch.Size([1363, 16, 32, 32]) torch.Size([1363])
torch.Size([125, 16, 32, 32]) torch.Size([125])
torch.Size([400, 16, 32, 32]) torch.Size([400])
torch.Size([689, 16, 32, 32]) torch.Size([689])
torch.Size([139, 16, 32, 32]) torch.Size([139])
4219 72 72
all data: 1000
Local adapation with distilling: 0.000694
training loss: tensor(0.3332) feature loss: tensor(1.4552)
Local adapation with distilling: 0.000694
training loss: tensor(0.2126) feature loss: tensor(0.2771)
Local adapation with distilling: 0.000694
training loss: tensor(0.7767) feature loss: tensor(1.5186)
Local adapation with distilling: 0.000694
training loss: tensor(0.4430) feature loss: tensor(0.9643)
Local adapation with distilling: 0.000694
training loss: tensor(0.9020) feature loss: tensor(1.3760)
Local adapation with distilling: 0.000694
training loss: tensor(0.1987) feature loss: tensor(0.2117)
Local adapation with distilling: 0.000694
training loss: tensor(2.2803) feature loss: tensor(1.6186)
Local adapation with distilling: 0.000694
training loss: tensor(0.4515) feature loss: tensor(0.7097)
Local adapation with distilling: 0.000694
training loss: tensor(0.0825) feature loss: tensor(0.3867)
Local adapation with distilling: 0.000694
training loss: tensor(0.8284) feature loss: tensor(1.1184)
         GM acc on global data: 0.3681 length of data: 10000
-------------Round number:  18  -------------
selected users: [53, 47, 43, 54, 33, 48, 0, 12, 44, 91]
torch.Size([262, 16, 32, 32]) torch.Size([262])
torch.Size([689, 16, 32, 32]) torch.Size([689])
torch.Size([372, 16, 32, 32]) torch.Size([372])
torch.Size([323, 16, 32, 32]) torch.Size([323])
torch.Size([546, 16, 32, 32]) torch.Size([546])
torch.Size([309, 16, 32, 32]) torch.Size([309])
torch.Size([171, 16, 32, 32]) torch.Size([171])
torch.Size([48, 16, 32, 32]) torch.Size([48])
torch.Size([668, 16, 32, 32]) torch.Size([668])
torch.Size([1199, 16, 32, 32]) torch.Size([1199])
4587 72 72
all data: 1000
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.6529) feature loss: tensor(0.8910)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.0730) feature loss: tensor(0.3804)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.7865) feature loss: tensor(0.6737)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.7185) feature loss: tensor(0.8519)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.2245) feature loss: tensor(0.4188)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.3837) feature loss: tensor(0.7833)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(2.1859) feature loss: tensor(1.3508)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.5499) feature loss: tensor(2.1329)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.2597) feature loss: tensor(0.3558)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.2581) feature loss: tensor(0.2441)
         GM acc on global data: 0.4183 length of data: 10000
-------------Round number:  19  -------------
selected users: [85, 72, 16, 18, 2, 38, 90, 30, 83, 61]
torch.Size([238, 16, 32, 32]) torch.Size([238])
torch.Size([206, 16, 32, 32]) torch.Size([206])
torch.Size([830, 16, 32, 32]) torch.Size([830])
torch.Size([526, 16, 32, 32]) torch.Size([526])
torch.Size([457, 16, 32, 32]) torch.Size([457])
torch.Size([239, 16, 32, 32]) torch.Size([239])
torch.Size([800, 16, 32, 32]) torch.Size([800])
torch.Size([257, 16, 32, 32]) torch.Size([257])
torch.Size([372, 16, 32, 32]) torch.Size([372])
torch.Size([711, 16, 32, 32]) torch.Size([711])
4636 72 72
all data: 1000
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.3112) feature loss: tensor(1.0509)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.2672) feature loss: tensor(1.0334)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.0471) feature loss: tensor(0.3542)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.3498) feature loss: tensor(0.5496)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.3518) feature loss: tensor(0.5850)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.8291) feature loss: tensor(1.1422)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.1135) feature loss: tensor(0.3992)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(1.5411) feature loss: tensor(1.0484)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.3344) feature loss: tensor(0.7815)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.2881) feature loss: tensor(0.4135)
         GM acc on global data: 0.4158 length of data: 10000
-------------Round number:  20  -------------
selected users: [70, 74, 2, 44, 56, 48, 12, 36, 0, 49]
torch.Size([90, 16, 32, 32]) torch.Size([90])
torch.Size([309, 16, 32, 32]) torch.Size([309])
torch.Size([457, 16, 32, 32]) torch.Size([457])
torch.Size([668, 16, 32, 32]) torch.Size([668])
torch.Size([876, 16, 32, 32]) torch.Size([876])
torch.Size([309, 16, 32, 32]) torch.Size([309])
torch.Size([48, 16, 32, 32]) torch.Size([48])
torch.Size([979, 16, 32, 32]) torch.Size([979])
torch.Size([171, 16, 32, 32]) torch.Size([171])
torch.Size([695, 16, 32, 32]) torch.Size([695])
4602 72 72
all data: 1000
Local adapation with distilling: 0.00064
training loss: tensor(1.1423) feature loss: tensor(1.9356)
Local adapation with distilling: 0.00064
training loss: tensor(0.3439) feature loss: tensor(0.7843)
Local adapation with distilling: 0.00064
training loss: tensor(0.4096) feature loss: tensor(0.4885)
Local adapation with distilling: 0.00064
training loss: tensor(0.1895) feature loss: tensor(0.3601)
Local adapation with distilling: 0.00064
training loss: tensor(0.1824) feature loss: tensor(0.3423)
Local adapation with distilling: 0.00064
training loss: tensor(0.3913) feature loss: tensor(0.6968)
Local adapation with distilling: 0.00064
training loss: tensor(0.9149) feature loss: tensor(2.1135)
Local adapation with distilling: 0.00064
training loss: tensor(0.1851) feature loss: tensor(0.2938)
Local adapation with distilling: 0.00064
training loss: tensor(2.6344) feature loss: tensor(1.3563)
Local adapation with distilling: 0.00064
training loss: tensor(0.2329) feature loss: tensor(0.3520)
         GM acc on global data: 0.371 length of data: 10000
-------------Round number:  21  -------------
selected users: [23, 81, 85, 34, 62, 46, 42, 31, 93, 11]
torch.Size([70, 16, 32, 32]) torch.Size([70])
torch.Size([1216, 16, 32, 32]) torch.Size([1216])
torch.Size([238, 16, 32, 32]) torch.Size([238])
torch.Size([1363, 16, 32, 32]) torch.Size([1363])
torch.Size([359, 16, 32, 32]) torch.Size([359])
torch.Size([530, 16, 32, 32]) torch.Size([530])
torch.Size([147, 16, 32, 32]) torch.Size([147])
torch.Size([211, 16, 32, 32]) torch.Size([211])
torch.Size([516, 16, 32, 32]) torch.Size([516])
torch.Size([240, 16, 32, 32]) torch.Size([240])
4890 72 72
all data: 1000
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(1.6546) feature loss: tensor(1.4478)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.0317) feature loss: tensor(0.2886)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.6061) feature loss: tensor(0.8038)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.1007) feature loss: tensor(0.2117)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.5464) feature loss: tensor(0.6312)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.3627) feature loss: tensor(0.4400)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.5648) feature loss: tensor(1.1736)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(1.0507) feature loss: tensor(0.9940)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.4619) feature loss: tensor(0.4650)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.6914) feature loss: tensor(0.7873)
         GM acc on global data: 0.3563 length of data: 10000
-------------Round number:  22  -------------
selected users: [2, 49, 82, 31, 37, 12, 87, 42, 99, 85]
torch.Size([457, 16, 32, 32]) torch.Size([457])
torch.Size([695, 16, 32, 32]) torch.Size([695])
torch.Size([111, 16, 32, 32]) torch.Size([111])
torch.Size([211, 16, 32, 32]) torch.Size([211])
torch.Size([139, 16, 32, 32]) torch.Size([139])
torch.Size([48, 16, 32, 32]) torch.Size([48])
torch.Size([93, 16, 32, 32]) torch.Size([93])
torch.Size([147, 16, 32, 32]) torch.Size([147])
torch.Size([359, 16, 32, 32]) torch.Size([359])
torch.Size([238, 16, 32, 32]) torch.Size([238])
2498 72 72
all data: 1000
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.3052) feature loss: tensor(0.4119)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.1306) feature loss: tensor(0.2972)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.9310) feature loss: tensor(1.4506)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.3372) feature loss: tensor(0.8396)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.5657) feature loss: tensor(1.0048)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.4606) feature loss: tensor(1.7424)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(1.2056) feature loss: tensor(1.1840)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.6131) feature loss: tensor(0.9631)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.2817) feature loss: tensor(0.5452)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.3952) feature loss: tensor(0.7198)
         GM acc on global data: 0.4126 length of data: 10000
-------------Round number:  23  -------------
selected users: [26, 80, 82, 68, 77, 37, 3, 55, 20, 17]
torch.Size([72, 16, 32, 32]) torch.Size([72])
torch.Size([319, 16, 32, 32]) torch.Size([319])
torch.Size([111, 16, 32, 32]) torch.Size([111])
torch.Size([993, 16, 32, 32]) torch.Size([993])
torch.Size([693, 16, 32, 32]) torch.Size([693])
torch.Size([139, 16, 32, 32]) torch.Size([139])
torch.Size([56, 16, 32, 32]) torch.Size([56])
torch.Size([2015, 16, 32, 32]) torch.Size([2015])
torch.Size([37, 16, 32, 32]) torch.Size([37])
torch.Size([543, 16, 32, 32]) torch.Size([543])
4978 72 72
all data: 1000
Local adapation with distilling: 0.000586
training loss: tensor(4.6619) feature loss: tensor(2.0374)
Local adapation with distilling: 0.000586
training loss: tensor(0.3471) feature loss: tensor(1.0242)
Local adapation with distilling: 0.000586
training loss: tensor(0.5795) feature loss: tensor(1.7497)
Local adapation with distilling: 0.000586
training loss: tensor(0.1497) feature loss: tensor(0.3292)
Local adapation with distilling: 0.000586
training loss: tensor(0.2856) feature loss: tensor(0.4193)
Local adapation with distilling: 0.000586
training loss: tensor(0.3406) feature loss: tensor(1.2041)
Local adapation with distilling: 0.000586
training loss: tensor(0.7408) feature loss: tensor(2.8235)
Local adapation with distilling: 0.000586
training loss: tensor(0.0927) feature loss: tensor(0.1707)
Local adapation with distilling: 0.000586
training loss: tensor(0.5032) feature loss: tensor(2.5221)
Local adapation with distilling: 0.000586
training loss: tensor(0.2400) feature loss: tensor(0.5069)
         GM acc on global data: 0.3002 length of data: 10000
-------------Round number:  24  -------------
selected users: [26, 31, 37, 86, 76, 14, 88, 48, 71, 67]
torch.Size([72, 16, 32, 32]) torch.Size([72])
torch.Size([211, 16, 32, 32]) torch.Size([211])
torch.Size([139, 16, 32, 32]) torch.Size([139])
torch.Size([437, 16, 32, 32]) torch.Size([437])
torch.Size([2848, 16, 32, 32]) torch.Size([2848])
torch.Size([354, 16, 32, 32]) torch.Size([354])
torch.Size([210, 16, 32, 32]) torch.Size([210])
torch.Size([309, 16, 32, 32]) torch.Size([309])
torch.Size([159, 16, 32, 32]) torch.Size([159])
torch.Size([543, 16, 32, 32]) torch.Size([543])
5282 72 72
all data: 1000
Local adapation with distilling: 0.000568
training loss: tensor(3.0335) feature loss: tensor(3.0514)
Local adapation with distilling: 0.000568
training loss: tensor(1.1472) feature loss: tensor(1.8340)
Local adapation with distilling: 0.000568
training loss: tensor(0.8444) feature loss: tensor(2.5530)
Local adapation with distilling: 0.000568
training loss: tensor(0.7477) feature loss: tensor(1.1046)
Local adapation with distilling: 0.000568
training loss: tensor(0.2276) feature loss: tensor(0.1842)
Local adapation with distilling: 0.000568
training loss: tensor(1.3212) feature loss: tensor(1.3225)
Local adapation with distilling: 0.000568
training loss: tensor(0.8654) feature loss: tensor(1.8423)
Local adapation with distilling: 0.000568
training loss: tensor(1.2372) feature loss: tensor(1.3319)
Local adapation with distilling: 0.000568
training loss: tensor(2.1251) feature loss: tensor(2.4621)
Local adapation with distilling: 0.000568
training loss: tensor(0.6820) feature loss: tensor(0.8703)
         GM acc on global data: 0.3363 length of data: 10000
-------------Round number:  25  -------------
selected users: [41, 29, 33, 65, 74, 6, 57, 89, 87, 98]
torch.Size([502, 16, 32, 32]) torch.Size([502])
torch.Size([845, 16, 32, 32]) torch.Size([845])
torch.Size([546, 16, 32, 32]) torch.Size([546])
torch.Size([356, 16, 32, 32]) torch.Size([356])
torch.Size([309, 16, 32, 32]) torch.Size([309])
torch.Size([538, 16, 32, 32]) torch.Size([538])
torch.Size([655, 16, 32, 32]) torch.Size([655])
torch.Size([523, 16, 32, 32]) torch.Size([523])
torch.Size([93, 16, 32, 32]) torch.Size([93])
torch.Size([110, 16, 32, 32]) torch.Size([110])
4477 72 72
all data: 1000
Local adapation with distilling: 0.00055
training loss: tensor(0.3409) feature loss: tensor(0.5930)
Local adapation with distilling: 0.00055
training loss: tensor(0.2115) feature loss: tensor(0.3796)
Local adapation with distilling: 0.00055
training loss: tensor(0.3322) feature loss: tensor(0.4879)
Local adapation with distilling: 0.00055
training loss: tensor(0.5670) feature loss: tensor(0.7200)
Local adapation with distilling: 0.00055
training loss: tensor(0.7972) feature loss: tensor(0.9498)
Local adapation with distilling: 0.00055
training loss: tensor(0.5567) feature loss: tensor(0.6781)
Local adapation with distilling: 0.00055
training loss: tensor(0.2712) feature loss: tensor(0.4008)
Local adapation with distilling: 0.00055
training loss: tensor(0.4654) feature loss: tensor(0.6026)
Local adapation with distilling: 0.00055
training loss: tensor(0.6176) feature loss: tensor(1.9708)
Local adapation with distilling: 0.00055
training loss: tensor(1.4564) feature loss: tensor(2.1036)
         GM acc on global data: 0.4469 length of data: 10000
-------------Round number:  26  -------------
selected users: [8, 69, 84, 41, 25, 5, 63, 95, 33, 70]
torch.Size([1059, 16, 32, 32]) torch.Size([1059])
torch.Size([584, 16, 32, 32]) torch.Size([584])
torch.Size([271, 16, 32, 32]) torch.Size([271])
torch.Size([502, 16, 32, 32]) torch.Size([502])
torch.Size([484, 16, 32, 32]) torch.Size([484])
torch.Size([479, 16, 32, 32]) torch.Size([479])
torch.Size([582, 16, 32, 32]) torch.Size([582])
torch.Size([32, 16, 32, 32]) torch.Size([32])
torch.Size([546, 16, 32, 32]) torch.Size([546])
torch.Size([90, 16, 32, 32]) torch.Size([90])
4629 72 72
all data: 1000
Local adapation with distilling: 0.000532
training loss: tensor(0.2039) feature loss: tensor(0.2596)
Local adapation with distilling: 0.000532
training loss: tensor(0.3755) feature loss: tensor(0.4032)
Local adapation with distilling: 0.000532
training loss: tensor(0.4300) feature loss: tensor(0.7855)
Local adapation with distilling: 0.000532
training loss: tensor(0.0755) feature loss: tensor(0.4512)
Local adapation with distilling: 0.000532
training loss: tensor(0.3455) feature loss: tensor(0.4323)
Local adapation with distilling: 0.000532
training loss: tensor(0.3932) feature loss: tensor(0.5361)
Local adapation with distilling: 0.000532
training loss: tensor(0.4706) feature loss: tensor(0.4304)
Local adapation with distilling: 0.000532
training loss: tensor(0.9593) feature loss: tensor(2.1098)
Local adapation with distilling: 0.000532
training loss: tensor(0.1139) feature loss: tensor(0.4085)
Local adapation with distilling: 0.000532
training loss: tensor(0.9187) feature loss: tensor(1.7590)
         GM acc on global data: 0.4351 length of data: 10000
-------------Round number:  27  -------------
selected users: [89, 68, 43, 50, 40, 95, 27, 85, 22, 44]
torch.Size([523, 16, 32, 32]) torch.Size([523])
torch.Size([993, 16, 32, 32]) torch.Size([993])
torch.Size([372, 16, 32, 32]) torch.Size([372])
torch.Size([118, 16, 32, 32]) torch.Size([118])
torch.Size([337, 16, 32, 32]) torch.Size([337])
torch.Size([32, 16, 32, 32]) torch.Size([32])
torch.Size([269, 16, 32, 32]) torch.Size([269])
torch.Size([238, 16, 32, 32]) torch.Size([238])
torch.Size([718, 16, 32, 32]) torch.Size([718])
torch.Size([668, 16, 32, 32]) torch.Size([668])
4268 72 72
all data: 1000
Local adapation with distilling: 0.000514
training loss: tensor(0.2488) feature loss: tensor(0.3562)
Local adapation with distilling: 0.000514
training loss: tensor(0.1469) feature loss: tensor(0.2570)
Local adapation with distilling: 0.000514
training loss: tensor(0.3242) feature loss: tensor(0.5059)
Local adapation with distilling: 0.000514
training loss: tensor(0.6957) feature loss: tensor(1.4017)
Local adapation with distilling: 0.000514
training loss: tensor(0.3351) feature loss: tensor(0.5378)
Local adapation with distilling: 0.000514
training loss: tensor(0.4575) feature loss: tensor(2.1430)
Local adapation with distilling: 0.000514
training loss: tensor(0.5683) feature loss: tensor(0.7102)
Local adapation with distilling: 0.000514
training loss: tensor(0.3052) feature loss: tensor(0.7066)
Local adapation with distilling: 0.000514
training loss: tensor(0.2697) feature loss: tensor(0.3055)
Local adapation with distilling: 0.000514
training loss: tensor(0.2651) feature loss: tensor(0.3023)
         GM acc on global data: 0.4139 length of data: 10000
-------------Round number:  28  -------------
selected users: [67, 14, 0, 86, 13, 18, 30, 36, 52, 95]
torch.Size([543, 16, 32, 32]) torch.Size([543])
torch.Size([354, 16, 32, 32]) torch.Size([354])
torch.Size([171, 16, 32, 32]) torch.Size([171])
torch.Size([437, 16, 32, 32]) torch.Size([437])
torch.Size([453, 16, 32, 32]) torch.Size([453])
torch.Size([526, 16, 32, 32]) torch.Size([526])
torch.Size([257, 16, 32, 32]) torch.Size([257])
torch.Size([979, 16, 32, 32]) torch.Size([979])
torch.Size([1078, 16, 32, 32]) torch.Size([1078])
torch.Size([32, 16, 32, 32]) torch.Size([32])
4830 72 72
all data: 1000
Local adapation with distilling: 0.000496
training loss: tensor(0.3507) feature loss: tensor(0.4809)
Local adapation with distilling: 0.000496
training loss: tensor(0.5109) feature loss: tensor(0.6900)
Local adapation with distilling: 0.000496
training loss: tensor(0.3957) feature loss: tensor(1.5649)
Local adapation with distilling: 0.000496
training loss: tensor(0.3037) feature loss: tensor(0.5598)
Local adapation with distilling: 0.000496
training loss: tensor(0.9534) feature loss: tensor(0.5402)
Local adapation with distilling: 0.000496
training loss: tensor(0.3310) feature loss: tensor(0.4733)
Local adapation with distilling: 0.000496
training loss: tensor(2.1661) feature loss: tensor(0.9563)
Local adapation with distilling: 0.000496
training loss: tensor(0.1442) feature loss: tensor(0.2776)
Local adapation with distilling: 0.000496
training loss: tensor(0.1231) feature loss: tensor(0.2482)
Local adapation with distilling: 0.000496
training loss: tensor(0.3655) feature loss: tensor(2.2121)
         GM acc on global data: 0.423 length of data: 10000
-------------Round number:  29  -------------
selected users: [73, 8, 10, 7, 19, 71, 92, 25, 38, 12]
torch.Size([117, 16, 32, 32]) torch.Size([117])
torch.Size([1059, 16, 32, 32]) torch.Size([1059])
torch.Size([513, 16, 32, 32]) torch.Size([513])
torch.Size([110, 16, 32, 32]) torch.Size([110])
torch.Size([524, 16, 32, 32]) torch.Size([524])
torch.Size([159, 16, 32, 32]) torch.Size([159])
torch.Size([400, 16, 32, 32]) torch.Size([400])
torch.Size([484, 16, 32, 32]) torch.Size([484])
torch.Size([239, 16, 32, 32]) torch.Size([239])
torch.Size([48, 16, 32, 32]) torch.Size([48])
3653 72 72
all data: 1000
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.7937) feature loss: tensor(1.2929)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.0901) feature loss: tensor(0.1982)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(1.1452) feature loss: tensor(0.3977)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.6310) feature loss: tensor(1.5558)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.4050) feature loss: tensor(0.3637)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.3338) feature loss: tensor(1.0916)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.3099) feature loss: tensor(0.5101)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.1697) feature loss: tensor(0.3739)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.8306) feature loss: tensor(0.9301)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(1.0807) feature loss: tensor(1.7954)
         GM acc on global data: 0.4069 length of data: 10000
-------------Round number:  30  -------------
selected users: [20, 91, 34, 52, 8, 74, 21, 88, 80, 89]
torch.Size([37, 16, 32, 32]) torch.Size([37])
torch.Size([1199, 16, 32, 32]) torch.Size([1199])
torch.Size([1363, 16, 32, 32]) torch.Size([1363])
torch.Size([1078, 16, 32, 32]) torch.Size([1078])
torch.Size([1059, 16, 32, 32]) torch.Size([1059])
torch.Size([309, 16, 32, 32]) torch.Size([309])
torch.Size([277, 16, 32, 32]) torch.Size([277])
torch.Size([210, 16, 32, 32]) torch.Size([210])
torch.Size([319, 16, 32, 32]) torch.Size([319])
torch.Size([523, 16, 32, 32]) torch.Size([523])
6374 72 72
all data: 1000
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.3777) feature loss: tensor(1.4614)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.2306) feature loss: tensor(0.1945)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.0863) feature loss: tensor(0.1477)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.0844) feature loss: tensor(0.2064)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.0355) feature loss: tensor(0.1767)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.1592) feature loss: tensor(0.5312)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.4869) feature loss: tensor(0.5665)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.6364) feature loss: tensor(0.6685)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.2552) feature loss: tensor(0.5958)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.1978) feature loss: tensor(0.2945)
         GM acc on global data: 0.3907 length of data: 10000
-------------Round number:  31  -------------
selected users: [17, 33, 76, 3, 56, 0, 37, 8, 60, 67]
torch.Size([543, 16, 32, 32]) torch.Size([543])
torch.Size([546, 16, 32, 32]) torch.Size([546])
torch.Size([2848, 16, 32, 32]) torch.Size([2848])
torch.Size([56, 16, 32, 32]) torch.Size([56])
torch.Size([876, 16, 32, 32]) torch.Size([876])
torch.Size([171, 16, 32, 32]) torch.Size([171])
torch.Size([139, 16, 32, 32]) torch.Size([139])
torch.Size([1059, 16, 32, 32]) torch.Size([1059])
torch.Size([15, 16, 32, 32]) torch.Size([15])
torch.Size([543, 16, 32, 32]) torch.Size([543])
6796 72 72
all data: 1000
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.3095) feature loss: tensor(0.4793)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.2580) feature loss: tensor(0.4141)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.1030) feature loss: tensor(0.1194)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(1.3373) feature loss: tensor(2.4312)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.1982) feature loss: tensor(0.3783)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(1.1567) feature loss: tensor(1.1274)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.6778) feature loss: tensor(1.4016)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.0320) feature loss: tensor(0.2384)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.7980) feature loss: tensor(2.4859)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.3131) feature loss: tensor(0.4623)
         GM acc on global data: 0.3726 length of data: 10000
-------------Round number:  32  -------------
selected users: [22, 39, 85, 97, 55, 33, 80, 13, 27, 96]
torch.Size([718, 16, 32, 32]) torch.Size([718])
torch.Size([1283, 16, 32, 32]) torch.Size([1283])
torch.Size([238, 16, 32, 32]) torch.Size([238])
torch.Size([40, 16, 32, 32]) torch.Size([40])
torch.Size([2015, 16, 32, 32]) torch.Size([2015])
torch.Size([546, 16, 32, 32]) torch.Size([546])
torch.Size([319, 16, 32, 32]) torch.Size([319])
torch.Size([453, 16, 32, 32]) torch.Size([453])
torch.Size([269, 16, 32, 32]) torch.Size([269])
torch.Size([1321, 16, 32, 32]) torch.Size([1321])
7202 72 72
all data: 1000
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.2315) feature loss: tensor(0.5769)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.4359) feature loss: tensor(0.4055)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.8535) feature loss: tensor(1.6810)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(6.6976) feature loss: tensor(4.5973)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.1507) feature loss: tensor(0.2677)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.1838) feature loss: tensor(0.7450)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.6302) feature loss: tensor(1.3723)
Local adapation with distilling: 0.00042400000000000006
 