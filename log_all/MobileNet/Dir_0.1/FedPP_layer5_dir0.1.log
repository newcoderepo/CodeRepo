nohup: ignoring input
================================================================================
Summary of training process:
Dataset:                 Cifar10
Batch size:              64
Learing rate :           0.001
personal learning rate : 0.001
Number of total clients: 100
Split parameter        : 0.1
Clients per round      : 10
Number of global rounds: 100
Number of local rounds : 10
Feature from layer     : 5
Feature reduction      : 64
Local training loss    : CE_CE
Loss of beta           : 1.0
Algorithm              : FedPP
Modelname              : MOBNET
Mode                   : training
================================================================================
Files already downloaded and verified
Files already downloaded and verified
Here
Done
Class frequencies:
client,class0,class1,class2,class3,class4,class5,class6,class7,class8,class9,Amount
Client   0,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,171
Client   1,0.231,0.038,0.00,0.00,0.00,0.077,0.00,0.654,0.00,0.00,52
Client   2,0.374,0.015,0.00,0.00,0.519,0.011,0.007,0.015,0.00,0.059,457
Client   3,0.00,0.00,0.00,0.232,0.768,0.00,0.00,0.00,0.00,0.00,56
Client   4,0.660,0.071,0.032,0.122,0.00,0.00,0.083,0.00,0.00,0.032,156
Client   5,0.00,0.00,0.00,0.00,0.029,0.00,0.00,0.00,0.121,0.850,479
Client   6,0.00,0.080,0.00,0.00,0.009,0.017,0.894,0.00,0.00,0.00,538
Client   7,0.00,0.00,0.00,0.00,0.991,0.00,0.00,0.009,0.00,0.00,110
Client   8,0.131,0.116,0.00,0.00,0.00,0.00,0.00,0.00,0.753,0.00,1059
Client   9,0.00,0.00,0.175,0.00,0.467,0.017,0.192,0.150,0.00,0.00,120
Client  10,0.00,0.331,0.540,0.00,0.00,0.00,0.129,0.00,0.00,0.00,513
Client  11,0.00,0.00,0.250,0.00,0.004,0.358,0.254,0.008,0.121,0.004,240
Client  12,0.00,0.00,0.00,0.00,0.00,0.562,0.00,0.00,0.396,0.042,48
Client  13,0.00,0.00,0.00,0.371,0.185,0.00,0.444,0.00,0.00,0.00,453
Client  14,0.068,0.00,0.003,0.011,0.00,0.042,0.641,0.234,0.00,0.00,354
Client  15,0.00,0.005,0.00,0.00,0.995,0.00,0.00,0.00,0.00,0.00,213
Client  16,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,830
Client  17,0.335,0.00,0.004,0.00,0.007,0.00,0.00,0.654,0.00,0.00,543
Client  18,0.00,0.743,0.00,0.127,0.053,0.076,0.00,0.00,0.00,0.00,526
Client  19,0.008,0.00,0.057,0.676,0.185,0.074,0.00,0.00,0.00,0.00,524
Client  20,0.00,0.00,0.243,0.108,0.00,0.00,0.00,0.216,0.432,0.00,37
Client  21,0.00,0.00,0.00,0.141,0.848,0.00,0.004,0.007,0.00,0.00,277
Client  22,0.00,0.192,0.00,0.00,0.00,0.010,0.00,0.028,0.063,0.708,718
Client  23,0.00,0.100,0.529,0.00,0.00,0.214,0.129,0.00,0.00,0.029,70
Client  24,0.014,0.00,0.002,0.002,0.00,0.00,0.00,0.982,0.00,0.00,1084
Client  25,0.00,0.00,0.006,0.105,0.00,0.169,0.010,0.025,0.684,0.00,484
Client  26,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.194,0.00,0.806,72
Client  27,0.00,0.00,0.00,0.00,0.011,0.086,0.004,0.00,0.019,0.881,269
Client  28,0.237,0.00,0.00,0.001,0.038,0.167,0.001,0.011,0.546,0.00,951
Client  29,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,845
Client  30,0.004,0.00,0.218,0.743,0.00,0.00,0.00,0.023,0.008,0.004,257
Client  31,0.014,0.730,0.00,0.005,0.194,0.005,0.052,0.00,0.00,0.00,211
Client  32,0.00,0.00,0.00,0.00,0.004,0.00,0.743,0.222,0.031,0.00,257
Client  33,0.559,0.084,0.002,0.00,0.013,0.00,0.00,0.234,0.108,0.00,546
Client  34,0.00,0.010,0.093,0.00,0.202,0.010,0.00,0.00,0.685,0.00,1363
Client  35,0.913,0.008,0.00,0.011,0.00,0.065,0.00,0.00,0.00,0.004,263
Client  36,0.029,0.00,0.001,0.00,0.139,0.006,0.001,0.003,0.821,0.00,979
Client  37,0.00,0.00,0.259,0.194,0.237,0.245,0.029,0.00,0.00,0.036,139
Client  38,0.075,0.00,0.00,0.00,0.00,0.925,0.00,0.00,0.00,0.00,239
Client  39,0.00,0.334,0.00,0.00,0.00,0.00,0.00,0.666,0.00,0.00,1283
Client  40,0.00,0.00,0.00,0.00,0.00,0.353,0.00,0.211,0.436,0.00,337
Client  41,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,502
Client  42,0.218,0.00,0.020,0.259,0.00,0.041,0.00,0.463,0.00,0.00,147
Client  43,0.073,0.008,0.024,0.062,0.073,0.00,0.00,0.00,0.003,0.758,372
Client  44,0.003,0.00,0.00,0.064,0.269,0.00,0.114,0.247,0.302,0.00,668
Client  45,0.00,0.025,0.00,0.066,0.689,0.00,0.213,0.00,0.008,0.00,122
Client  46,0.002,0.258,0.019,0.00,0.042,0.274,0.00,0.406,0.00,0.00,530
Client  47,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,689
Client  48,0.023,0.00,0.003,0.036,0.00,0.00,0.227,0.006,0.605,0.100,309
Client  49,0.102,0.377,0.001,0.519,0.00,0.00,0.00,0.00,0.00,0.00,695
Client  50,0.00,0.00,0.00,0.136,0.00,0.00,0.00,0.017,0.00,0.847,118
Client  51,0.331,0.035,0.00,0.052,0.00,0.083,0.034,0.00,0.012,0.453,762
Client  52,0.007,0.276,0.717,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1078
Client  53,0.00,0.073,0.153,0.00,0.00,0.00,0.271,0.00,0.504,0.00,262
Client  54,0.003,0.003,0.127,0.173,0.663,0.025,0.00,0.006,0.00,0.00,323
Client  55,0.000,0.00,0.000,0.00,0.00,0.999,0.00,0.00,0.00,0.00,2015
Client  56,0.00,0.00,0.014,0.986,0.00,0.00,0.00,0.00,0.00,0.00,876
Client  57,0.424,0.299,0.002,0.275,0.00,0.00,0.00,0.00,0.00,0.00,655
Client  58,0.003,0.997,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,787
Client  59,0.00,0.00,0.908,0.00,0.00,0.00,0.031,0.00,0.061,0.00,131
Client  60,0.067,0.00,0.00,0.00,0.067,0.200,0.00,0.200,0.333,0.133,15
Client  61,0.00,0.027,0.001,0.00,0.00,0.00,0.430,0.177,0.364,0.00,711
Client  62,0.00,0.00,0.00,0.00,0.006,0.983,0.00,0.00,0.011,0.00,359
Client  63,0.00,0.00,0.519,0.002,0.005,0.229,0.246,0.00,0.00,0.00,582
Client  64,0.00,0.00,0.00,0.00,0.00,0.064,0.207,0.729,0.00,0.00,299
Client  65,0.295,0.003,0.00,0.00,0.00,0.00,0.00,0.011,0.691,0.00,356
Client  66,0.375,0.267,0.003,0.00,0.182,0.020,0.00,0.003,0.131,0.020,352
Client  67,0.053,0.00,0.037,0.00,0.910,0.00,0.00,0.00,0.00,0.00,543
Client  68,0.00,0.001,0.999,0.00,0.00,0.00,0.00,0.00,0.00,0.00,993
Client  69,0.00,0.185,0.00,0.00,0.228,0.587,0.00,0.00,0.00,0.00,584
Client  70,0.00,0.00,0.011,0.00,0.122,0.00,0.867,0.00,0.00,0.00,90
Client  71,0.00,0.931,0.00,0.00,0.038,0.013,0.00,0.00,0.019,0.00,159
Client  72,0.00,0.00,0.034,0.00,0.00,0.00,0.00,0.966,0.00,0.00,206
Client  73,0.00,0.103,0.00,0.068,0.017,0.222,0.00,0.00,0.111,0.479,117
Client  74,0.00,0.00,0.003,0.861,0.00,0.00,0.00,0.136,0.00,0.00,309
Client  75,0.00,0.00,0.00,0.001,0.009,0.00,0.991,0.00,0.00,0.00,2441
Client  76,0.026,0.00,0.00,0.00,0.071,0.00,0.00,0.00,0.002,0.900,2848
Client  77,0.00,0.00,0.026,0.00,0.00,0.974,0.00,0.00,0.00,0.00,693
Client  78,0.440,0.004,0.00,0.00,0.444,0.00,0.00,0.00,0.112,0.00,277
Client  79,0.828,0.007,0.00,0.131,0.004,0.029,0.00,0.00,0.00,0.00,274
Client  80,0.00,0.201,0.003,0.661,0.00,0.013,0.003,0.119,0.00,0.00,319
Client  81,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,1152
Client  82,0.00,0.009,0.757,0.009,0.00,0.00,0.036,0.00,0.009,0.180,111
Client  83,0.005,0.00,0.00,0.00,0.003,0.228,0.00,0.750,0.00,0.013,372
Client  84,0.00,0.00,0.00,0.063,0.077,0.00,0.860,0.00,0.00,0.00,271
Client  85,0.00,0.244,0.555,0.00,0.00,0.00,0.00,0.088,0.113,0.00,238
Client  86,0.002,0.00,0.314,0.00,0.666,0.00,0.00,0.00,0.018,0.00,437
Client  87,0.00,0.022,0.022,0.011,0.022,0.043,0.269,0.258,0.032,0.323,93
Client  88,0.00,0.00,0.00,0.281,0.00,0.00,0.00,0.357,0.010,0.352,210
Client  89,0.086,0.029,0.642,0.011,0.103,0.019,0.00,0.00,0.00,0.109,523
Client  90,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,800
Client  91,0.00,0.00,0.377,0.003,0.00,0.002,0.00,0.619,0.00,0.00,1199
Client  92,0.065,0.00,0.015,0.915,0.00,0.005,0.00,0.00,0.00,0.00,400
Client  93,0.00,0.496,0.00,0.00,0.331,0.132,0.00,0.041,0.00,0.00,516
Client  94,0.00,0.00,0.00,0.00,0.008,0.032,0.944,0.00,0.016,0.00,125
Client  95,0.00,0.00,0.375,0.00,0.00,0.00,0.00,0.00,0.625,0.00,32
Client  96,0.00,0.073,0.011,0.00,0.915,0.00,0.00,0.00,0.00,0.00,1321
Client  97,0.00,0.00,0.00,0.00,0.00,0.00,0.925,0.00,0.050,0.025,40
Client  98,0.00,0.073,0.00,0.00,0.00,0.836,0.018,0.009,0.064,0.00,110
Client  99,0.173,0.003,0.003,0.799,0.003,0.003,0.003,0.003,0.006,0.006,359
Num_samples of Training set per client: [171, 52, 457, 56, 156, 479, 538, 110, 1059, 120, 513, 240, 48, 453, 354, 213, 830, 543, 526, 524, 37, 277, 718, 70, 1084, 484, 72, 269, 951, 845, 257, 211, 257, 546, 1363, 263, 979, 139, 239, 1283, 337, 502, 147, 372, 668, 122, 530, 689, 309, 695, 118, 762, 1078, 262, 323, 2015, 876, 655, 787, 131, 15, 711, 359, 582, 299, 356, 352, 543, 993, 584, 90, 159, 206, 117, 309, 2441, 2848, 693, 277, 274, 319, 1152, 111, 372, 271, 238, 437, 93, 210, 523, 800, 1199, 400, 516, 125, 32, 1321, 40, 110, 359]
Total_training_samples: 50000
Global test set: 10000
Finish Generating Samples, distribution saved
MobileNetV2(
  (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (layers): Sequential(
    (0): Block(
      (conv1): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): Block(
      (conv1): Conv2d(16, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=96, bias=False)
      (bn2): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(96, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(16, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (2): Block(
      (conv1): Conv2d(24, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=144, bias=False)
      (bn2): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(144, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (3): Block(
      (conv1): Conv2d(24, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(144, 144, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=144, bias=False)
      (bn2): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(144, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (4): Block(
      (conv1): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
      (bn2): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(192, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (5): Block(
      (conv1): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
      (bn2): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(192, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (6): Block(
      (conv1): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(192, 192, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=192, bias=False)
      (bn2): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(192, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (7): Block(
      (conv1): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
      (bn2): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (8): Block(
      (conv1): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
      (bn2): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (9): Block(
      (conv1): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
      (bn2): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (10): Block(
      (conv1): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
      (bn2): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(384, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(64, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (11): Block(
      (conv1): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)
      (bn2): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (12): Block(
      (conv1): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)
      (bn2): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (13): Block(
      (conv1): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(576, 576, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=576, bias=False)
      (bn2): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(576, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (14): Block(
      (conv1): Conv2d(160, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(960, 960, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=960, bias=False)
      (bn2): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(960, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (15): Block(
      (conv1): Conv2d(160, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(960, 960, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=960, bias=False)
      (bn2): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(960, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (16): Block(
      (conv1): Conv2d(160, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(960, 960, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=960, bias=False)
      (bn2): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(960, 320, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(160, 320, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (conv2): Conv2d(320, 1280, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn2): BatchNorm2d(1280, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (linear): Linear(in_features=1280, out_features=10, bias=True)
)
number of parameters: 2296922
clients initializting...
output size: 10
  0%|          | 0/100 [00:00<?, ?it/s]  1%|          | 1/100 [00:00<00:59,  1.65it/s]  2%|▏         | 2/100 [00:01<01:03,  1.54it/s]  3%|▎         | 3/100 [00:02<01:10,  1.37it/s]  4%|▍         | 4/100 [00:06<02:49,  1.77s/it]  5%|▌         | 5/100 [00:07<02:22,  1.50s/it]  6%|▌         | 6/100 [00:08<01:59,  1.28s/it]  7%|▋         | 7/100 [00:08<01:45,  1.13s/it]  8%|▊         | 8/100 [00:09<01:31,  1.00it/s]  9%|▉         | 9/100 [00:10<01:24,  1.07it/s] 10%|█         | 10/100 [00:11<01:21,  1.11it/s] 11%|█         | 11/100 [00:11<01:16,  1.17it/s] 12%|█▏        | 12/100 [00:12<01:17,  1.14it/s] 13%|█▎        | 13/100 [00:13<01:12,  1.19it/s] 14%|█▍        | 14/100 [00:14<01:10,  1.22it/s] 15%|█▌        | 15/100 [00:15<01:12,  1.18it/s] 16%|█▌        | 16/100 [00:15<01:07,  1.25it/s] 17%|█▋        | 17/100 [00:16<01:03,  1.31it/s] 18%|█▊        | 18/100 [00:17<01:03,  1.29it/s] 19%|█▉        | 19/100 [00:18<01:03,  1.28it/s] 20%|██        | 20/100 [00:19<01:04,  1.24it/s] 21%|██        | 21/100 [00:19<01:03,  1.24it/s] 22%|██▏       | 22/100 [00:20<01:02,  1.24it/s] 23%|██▎       | 23/100 [00:21<01:03,  1.21it/s] 24%|██▍       | 24/100 [00:22<01:02,  1.21it/s] 25%|██▌       | 25/100 [00:23<01:02,  1.21it/s] 26%|██▌       | 26/100 [00:24<01:03,  1.17it/s] 27%|██▋       | 27/100 [00:24<00:58,  1.25it/s] 28%|██▊       | 28/100 [00:25<00:58,  1.23it/s] 29%|██▉       | 29/100 [00:26<01:01,  1.16it/s] 30%|███       | 30/100 [00:27<00:56,  1.24it/s] 31%|███       | 31/100 [00:28<00:57,  1.21it/s] 32%|███▏      | 32/100 [00:29<00:57,  1.19it/s] 33%|███▎      | 33/100 [00:29<00:55,  1.21it/s] 34%|███▍      | 34/100 [00:30<00:55,  1.18it/s] 35%|███▌      | 35/100 [00:31<00:55,  1.17it/s] 36%|███▌      | 36/100 [00:36<02:03,  1.92s/it] 37%|███▋      | 37/100 [00:37<01:43,  1.65s/it] 38%|███▊      | 38/100 [00:37<01:28,  1.42s/it] 39%|███▉      | 39/100 [00:38<01:13,  1.20s/it] 40%|████      | 40/100 [00:39<01:03,  1.06s/it] 41%|████      | 41/100 [00:40<00:56,  1.04it/s] 42%|████▏     | 42/100 [00:40<00:49,  1.16it/s] 43%|████▎     | 43/100 [00:41<00:48,  1.18it/s] 44%|████▍     | 44/100 [00:42<00:49,  1.13it/s] 45%|████▌     | 45/100 [00:43<00:48,  1.12it/s] 46%|████▌     | 46/100 [00:44<00:47,  1.14it/s] 47%|████▋     | 47/100 [00:45<00:46,  1.13it/s] 48%|████▊     | 48/100 [00:45<00:42,  1.24it/s] 49%|████▉     | 49/100 [00:46<00:42,  1.19it/s] 50%|█████     | 50/100 [00:47<00:41,  1.21it/s] 51%|█████     | 51/100 [00:48<00:38,  1.27it/s] 52%|█████▏    | 52/100 [00:49<00:40,  1.19it/s] 53%|█████▎    | 53/100 [00:49<00:38,  1.21it/s] 54%|█████▍    | 54/100 [00:50<00:37,  1.23it/s] 55%|█████▌    | 55/100 [00:51<00:38,  1.18it/s] 56%|█████▌    | 56/100 [00:52<00:37,  1.19it/s] 57%|█████▋    | 57/100 [00:53<00:34,  1.25it/s] 58%|█████▊    | 58/100 [00:54<00:33,  1.25it/s] 59%|█████▉    | 59/100 [00:54<00:31,  1.30it/s] 60%|██████    | 60/100 [00:55<00:30,  1.31it/s] 61%|██████    | 61/100 [00:56<00:32,  1.22it/s] 62%|██████▏   | 62/100 [00:57<00:31,  1.20it/s] 63%|██████▎   | 63/100 [00:58<00:29,  1.25it/s] 64%|██████▍   | 64/100 [00:58<00:29,  1.23it/s] 65%|██████▌   | 65/100 [00:59<00:27,  1.27it/s] 66%|██████▌   | 66/100 [01:00<00:26,  1.27it/s] 67%|██████▋   | 67/100 [01:01<00:27,  1.18it/s] 68%|██████▊   | 68/100 [01:05<01:01,  1.91s/it] 69%|██████▉   | 69/100 [01:06<00:48,  1.55s/it] 70%|███████   | 70/100 [01:07<00:39,  1.32s/it] 71%|███████   | 71/100 [01:07<00:33,  1.14s/it] 72%|███████▏  | 72/100 [01:08<00:28,  1.03s/it] 73%|███████▎  | 73/100 [01:09<00:24,  1.08it/s] 74%|███████▍  | 74/100 [01:10<00:23,  1.10it/s] 75%|███████▌  | 75/100 [01:11<00:21,  1.16it/s] 76%|███████▌  | 76/100 [01:11<00:20,  1.16it/s] 77%|███████▋  | 77/100 [01:12<00:20,  1.13it/s] 78%|███████▊  | 78/100 [01:13<00:18,  1.21it/s] 79%|███████▉  | 79/100 [01:14<00:17,  1.22it/s] 80%|████████  | 80/100 [01:15<00:16,  1.21it/s] 81%|████████  | 81/100 [01:16<00:16,  1.18it/s] 82%|████████▏ | 82/100 [01:16<00:14,  1.26it/s] 83%|████████▎ | 83/100 [01:17<00:13,  1.22it/s] 84%|████████▍ | 84/100 [01:18<00:13,  1.21it/s] 85%|████████▌ | 85/100 [01:19<00:11,  1.25it/s] 86%|████████▌ | 86/100 [01:19<00:11,  1.26it/s] 87%|████████▋ | 87/100 [01:20<00:10,  1.26it/s] 88%|████████▊ | 88/100 [01:21<00:10,  1.16it/s] 89%|████████▉ | 89/100 [01:22<00:09,  1.19it/s] 90%|█████████ | 90/100 [01:23<00:08,  1.15it/s] 91%|█████████ | 91/100 [01:24<00:07,  1.24it/s] 92%|█████████▏| 92/100 [01:24<00:06,  1.24it/s] 93%|█████████▎| 93/100 [01:25<00:05,  1.24it/s] 94%|█████████▍| 94/100 [01:26<00:04,  1.25it/s] 95%|█████████▌| 95/100 [01:27<00:03,  1.26it/s] 96%|█████████▌| 96/100 [01:28<00:03,  1.32it/s] 97%|█████████▋| 97/100 [01:28<00:02,  1.31it/s] 98%|█████████▊| 98/100 [01:29<00:01,  1.34it/s] 99%|█████████▉| 99/100 [01:30<00:00,  1.32it/s]100%|██████████| 100/100 [01:31<00:00,  1.18it/s]100%|██████████| 100/100 [01:31<00:00,  1.09it/s]
Number of users per round / total users: 10  /  100
Finished creating FedAvg server.
=== FedPP ===
-------------Round number:  0  -------------
selected users: [26, 86, 2, 55, 75, 93, 16, 73, 54, 95]
torch.Size([72, 32, 16, 16]) torch.Size([72])
torch.Size([437, 32, 16, 16]) torch.Size([437])
torch.Size([457, 32, 16, 16]) torch.Size([457])
torch.Size([2015, 32, 16, 16]) torch.Size([2015])
torch.Size([2441, 32, 16, 16]) torch.Size([2441])
torch.Size([516, 32, 16, 16]) torch.Size([516])
torch.Size([830, 32, 16, 16]) torch.Size([830])
torch.Size([117, 32, 16, 16]) torch.Size([117])
torch.Size([323, 32, 16, 16]) torch.Size([323])
torch.Size([32, 32, 16, 16]) torch.Size([32])
7240 72 72
all data: 1000
Local adapation with distilling: 0.001
training loss: tensor(0.9796) feature loss: tensor(2.0544)
Local adapation with distilling: 0.001
training loss: tensor(0.7122) feature loss: tensor(1.1655)
Local adapation with distilling: 0.001
training loss: tensor(0.7629) feature loss: tensor(1.0999)
Local adapation with distilling: 0.001
training loss: tensor(0.0568) feature loss: tensor(0.4685)
Local adapation with distilling: 0.001
training loss: tensor(0.1186) feature loss: tensor(0.4267)
Local adapation with distilling: 0.001
training loss: tensor(0.8111) feature loss: tensor(1.1067)
Local adapation with distilling: 0.001
training loss: tensor(0.1473) feature loss: tensor(0.8206)
Local adapation with distilling: 0.001
training loss: tensor(1.0639) feature loss: tensor(1.8611)
Local adapation with distilling: 0.001
training loss: tensor(1.0252) feature loss: tensor(1.3037)
Local adapation with distilling: 0.001
training loss: tensor(0.9554) feature loss: tensor(2.2424)
         GM acc on global data: 0.1006 length of data: 10000
-------------Round number:  1  -------------
selected users: [80, 84, 33, 81, 93, 17, 36, 82, 69, 65]
torch.Size([319, 32, 16, 16]) torch.Size([319])
torch.Size([271, 32, 16, 16]) torch.Size([271])
torch.Size([546, 32, 16, 16]) torch.Size([546])
torch.Size([1216, 32, 16, 16]) torch.Size([1216])
torch.Size([516, 32, 16, 16]) torch.Size([516])
torch.Size([543, 32, 16, 16]) torch.Size([543])
torch.Size([979, 32, 16, 16]) torch.Size([979])
torch.Size([111, 32, 16, 16]) torch.Size([111])
torch.Size([584, 32, 16, 16]) torch.Size([584])
torch.Size([356, 32, 16, 16]) torch.Size([356])
5441 72 72
all data: 1000
Local adapation with distilling: 0.000982
training loss: tensor(9.3133) feature loss: tensor(7.2134)
Local adapation with distilling: 0.000982
training loss: tensor(1.3387) feature loss: tensor(8.8376)
Local adapation with distilling: 0.000982
training loss: tensor(3.0404) feature loss: tensor(5.0568)
Local adapation with distilling: 0.000982
training loss: tensor(2.8604) feature loss: tensor(2.3375)
Local adapation with distilling: 0.000982
training loss: tensor(2.1602) feature loss: tensor(6.2950)
Local adapation with distilling: 0.000982
training loss: tensor(3.1340) feature loss: tensor(5.2122)
Local adapation with distilling: 0.000982
training loss: tensor(3.1613) feature loss: tensor(3.1304)
Local adapation with distilling: 0.000982
training loss: tensor(6.3671) feature loss: tensor(15.4468)
Local adapation with distilling: 0.000982
training loss: tensor(1.0970) feature loss: tensor(5.3212)
Local adapation with distilling: 0.000982
training loss: tensor(5.8567) feature loss: tensor(6.6237)
         GM acc on global data: 0.1603 length of data: 10000
-------------Round number:  2  -------------
selected users: [83, 30, 56, 24, 16, 23, 2, 27, 28, 13]
torch.Size([372, 32, 16, 16]) torch.Size([372])
torch.Size([257, 32, 16, 16]) torch.Size([257])
torch.Size([876, 32, 16, 16]) torch.Size([876])
torch.Size([1084, 32, 16, 16]) torch.Size([1084])
torch.Size([830, 32, 16, 16]) torch.Size([830])
torch.Size([70, 32, 16, 16]) torch.Size([70])
torch.Size([457, 32, 16, 16]) torch.Size([457])
torch.Size([269, 32, 16, 16]) torch.Size([269])
torch.Size([951, 32, 16, 16]) torch.Size([951])
torch.Size([453, 32, 16, 16]) torch.Size([453])
5619 72 72
all data: 1000
Local adapation with distilling: 0.000964
training loss: tensor(1.0827) feature loss: tensor(1.5519)
Local adapation with distilling: 0.000964
training loss: tensor(1.8118) feature loss: tensor(1.8564)
Local adapation with distilling: 0.000964
training loss: tensor(0.3059) feature loss: tensor(0.7320)
Local adapation with distilling: 0.000964
training loss: tensor(0.3621) feature loss: tensor(0.7806)
Local adapation with distilling: 0.000964
training loss: tensor(0.1280) feature loss: tensor(0.9022)
Local adapation with distilling: 0.000964
training loss: tensor(4.0848) feature loss: tensor(2.9722)
Local adapation with distilling: 0.000964
training loss: tensor(0.7820) feature loss: tensor(1.3691)
Local adapation with distilling: 0.000964
training loss: tensor(4.2275) feature loss: tensor(2.1085)
Local adapation with distilling: 0.000964
training loss: tensor(0.6752) feature loss: tensor(0.7542)
Local adapation with distilling: 0.000964
training loss: tensor(0.9376) feature loss: tensor(1.3011)
         GM acc on global data: 0.1817 length of data: 10000
-------------Round number:  3  -------------
selected users: [93, 67, 6, 64, 96, 83, 98, 42, 25, 15]
torch.Size([516, 32, 16, 16]) torch.Size([516])
torch.Size([543, 32, 16, 16]) torch.Size([543])
torch.Size([538, 32, 16, 16]) torch.Size([538])
torch.Size([299, 32, 16, 16]) torch.Size([299])
torch.Size([1321, 32, 16, 16]) torch.Size([1321])
torch.Size([372, 32, 16, 16]) torch.Size([372])
torch.Size([110, 32, 16, 16]) torch.Size([110])
torch.Size([147, 32, 16, 16]) torch.Size([147])
torch.Size([484, 32, 16, 16]) torch.Size([484])
torch.Size([213, 32, 16, 16]) torch.Size([213])
4543 72 72
all data: 1000
Local adapation with distilling: 0.000946
training loss: tensor(1.2433) feature loss: tensor(0.9707)
Local adapation with distilling: 0.000946
training loss: tensor(0.4668) feature loss: tensor(0.8195)
Local adapation with distilling: 0.000946
training loss: tensor(0.6625) feature loss: tensor(0.9670)
Local adapation with distilling: 0.000946
training loss: tensor(0.6190) feature loss: tensor(1.3984)
Local adapation with distilling: 0.000946
training loss: tensor(0.3111) feature loss: tensor(0.4662)
Local adapation with distilling: 0.000946
training loss: tensor(0.6242) feature loss: tensor(1.2224)
Local adapation with distilling: 0.000946
training loss: tensor(1.4674) feature loss: tensor(2.2807)
Local adapation with distilling: 0.000946
training loss: tensor(0.6642) feature loss: tensor(1.9264)
Local adapation with distilling: 0.000946
training loss: tensor(0.6017) feature loss: tensor(0.9404)
Local adapation with distilling: 0.000946
training loss: tensor(0.5519) feature loss: tensor(1.6451)
         GM acc on global data: 0.1536 length of data: 10000
-------------Round number:  4  -------------
selected users: [20, 10, 96, 16, 63, 24, 53, 97, 41, 47]
torch.Size([37, 32, 16, 16]) torch.Size([37])
torch.Size([513, 32, 16, 16]) torch.Size([513])
torch.Size([1321, 32, 16, 16]) torch.Size([1321])
torch.Size([830, 32, 16, 16]) torch.Size([830])
torch.Size([582, 32, 16, 16]) torch.Size([582])
torch.Size([1084, 32, 16, 16]) torch.Size([1084])
torch.Size([262, 32, 16, 16]) torch.Size([262])
torch.Size([40, 32, 16, 16]) torch.Size([40])
torch.Size([502, 32, 16, 16]) torch.Size([502])
torch.Size([689, 32, 16, 16]) torch.Size([689])
5860 72 72
all data: 1000
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.1094) feature loss: tensor(2.8823)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(2.1711) feature loss: tensor(0.9575)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(0.1524) feature loss: tensor(0.4721)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(0.3457) feature loss: tensor(0.6313)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.3062) feature loss: tensor(0.7772)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(0.1526) feature loss: tensor(0.5103)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.2133) feature loss: tensor(1.4094)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.7439) feature loss: tensor(3.0530)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(0.5224) feature loss: tensor(0.8475)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(0.4399) feature loss: tensor(0.6616)
         GM acc on global data: 0.1331 length of data: 10000
-------------Round number:  5  -------------
selected users: [66, 32, 46, 28, 74, 23, 10, 20, 17, 35]
torch.Size([352, 32, 16, 16]) torch.Size([352])
torch.Size([257, 32, 16, 16]) torch.Size([257])
torch.Size([530, 32, 16, 16]) torch.Size([530])
torch.Size([951, 32, 16, 16]) torch.Size([951])
torch.Size([309, 32, 16, 16]) torch.Size([309])
torch.Size([70, 32, 16, 16]) torch.Size([70])
torch.Size([513, 32, 16, 16]) torch.Size([513])
torch.Size([37, 32, 16, 16]) torch.Size([37])
torch.Size([543, 32, 16, 16]) torch.Size([543])
torch.Size([263, 32, 16, 16]) torch.Size([263])
3825 72 72
all data: 1000
Local adapation with distilling: 0.00091
training loss: tensor(0.6537) feature loss: tensor(1.1550)
Local adapation with distilling: 0.00091
training loss: tensor(1.6217) feature loss: tensor(1.3912)
Local adapation with distilling: 0.00091
training loss: tensor(0.6367) feature loss: tensor(0.9286)
Local adapation with distilling: 0.00091
training loss: tensor(0.5593) feature loss: tensor(0.6189)
Local adapation with distilling: 0.00091
training loss: tensor(2.0403) feature loss: tensor(1.2943)
Local adapation with distilling: 0.00091
training loss: tensor(3.0361) feature loss: tensor(2.4415)
Local adapation with distilling: 0.00091
training loss: tensor(1.3038) feature loss: tensor(0.8966)
Local adapation with distilling: 0.00091
training loss: tensor(1.1157) feature loss: tensor(2.8269)
Local adapation with distilling: 0.00091
training loss: tensor(0.2893) feature loss: tensor(0.7934)
Local adapation with distilling: 0.00091
training loss: tensor(0.4950) feature loss: tensor(1.2687)
         GM acc on global data: 0.2507 length of data: 10000
-------------Round number:  6  -------------
selected users: [17, 34, 0, 45, 60, 86, 20, 47, 44, 81]
torch.Size([543, 32, 16, 16]) torch.Size([543])
torch.Size([1363, 32, 16, 16]) torch.Size([1363])
torch.Size([171, 32, 16, 16]) torch.Size([171])
torch.Size([122, 32, 16, 16]) torch.Size([122])
torch.Size([15, 32, 16, 16]) torch.Size([15])
torch.Size([437, 32, 16, 16]) torch.Size([437])
torch.Size([37, 32, 16, 16]) torch.Size([37])
torch.Size([689, 32, 16, 16]) torch.Size([689])
torch.Size([668, 32, 16, 16]) torch.Size([668])
torch.Size([1216, 32, 16, 16]) torch.Size([1216])
5261 72 72
all data: 1000
Local adapation with distilling: 0.000892
training loss: tensor(0.2289) feature loss: tensor(0.7095)
Local adapation with distilling: 0.000892
training loss: tensor(0.3963) feature loss: tensor(0.4087)
Local adapation with distilling: 0.000892
training loss: tensor(6.0944) feature loss: tensor(1.8260)
Local adapation with distilling: 0.000892
training loss: tensor(0.9542) feature loss: tensor(1.8860)
Local adapation with distilling: 0.000892
training loss: tensor(1.2377) feature loss: tensor(2.4311)
Local adapation with distilling: 0.000892
training loss: tensor(0.6304) feature loss: tensor(0.9324)
Local adapation with distilling: 0.000892
training loss: tensor(0.3835) feature loss: tensor(2.5484)
Local adapation with distilling: 0.000892
training loss: tensor(0.1398) feature loss: tensor(0.6490)
Local adapation with distilling: 0.000892
training loss: tensor(0.5210) feature loss: tensor(0.5743)
Local adapation with distilling: 0.000892
training loss: tensor(0.1609) feature loss: tensor(0.4319)
         GM acc on global data: 0.1761 length of data: 10000
-------------Round number:  7  -------------
selected users: [37, 26, 78, 91, 49, 15, 93, 71, 86, 22]
torch.Size([139, 32, 16, 16]) torch.Size([139])
torch.Size([72, 32, 16, 16]) torch.Size([72])
torch.Size([277, 32, 16, 16]) torch.Size([277])
torch.Size([1199, 32, 16, 16]) torch.Size([1199])
torch.Size([695, 32, 16, 16]) torch.Size([695])
torch.Size([213, 32, 16, 16]) torch.Size([213])
torch.Size([516, 32, 16, 16]) torch.Size([516])
torch.Size([159, 32, 16, 16]) torch.Size([159])
torch.Size([437, 32, 16, 16]) torch.Size([437])
torch.Size([718, 32, 16, 16]) torch.Size([718])
4425 72 72
all data: 1000
Local adapation with distilling: 0.000874
training loss: tensor(1.1766) feature loss: tensor(1.8995)
Local adapation with distilling: 0.000874
training loss: tensor(5.5600) feature loss: tensor(2.4462)
Local adapation with distilling: 0.000874
training loss: tensor(0.4676) feature loss: tensor(1.2087)
Local adapation with distilling: 0.000874
training loss: tensor(0.3592) feature loss: tensor(0.4454)
Local adapation with distilling: 0.000874
training loss: tensor(0.4444) feature loss: tensor(0.6584)
Local adapation with distilling: 0.000874
training loss: tensor(0.3432) feature loss: tensor(1.4730)
Local adapation with distilling: 0.000874
training loss: tensor(1.2044) feature loss: tensor(0.7607)
Local adapation with distilling: 0.000874
training loss: tensor(1.7321) feature loss: tensor(1.8828)
Local adapation with distilling: 0.000874
training loss: tensor(0.4700) feature loss: tensor(0.9324)
Local adapation with distilling: 0.000874
training loss: tensor(1.4112) feature loss: tensor(0.7639)
         GM acc on global data: 0.2093 length of data: 10000
-------------Round number:  8  -------------
selected users: [17, 23, 1, 44, 55, 99, 86, 29, 62, 33]
torch.Size([543, 32, 16, 16]) torch.Size([543])
torch.Size([70, 32, 16, 16]) torch.Size([70])
torch.Size([52, 32, 16, 16]) torch.Size([52])
torch.Size([668, 32, 16, 16]) torch.Size([668])
torch.Size([2015, 32, 16, 16]) torch.Size([2015])
torch.Size([359, 32, 16, 16]) torch.Size([359])
torch.Size([437, 32, 16, 16]) torch.Size([437])
torch.Size([845, 32, 16, 16]) torch.Size([845])
torch.Size([359, 32, 16, 16]) torch.Size([359])
torch.Size([546, 32, 16, 16]) torch.Size([546])
5894 72 72
all data: 1000
Local adapation with distilling: 0.000856
training loss: tensor(0.2266) feature loss: tensor(0.6430)
Local adapation with distilling: 0.000856
training loss: tensor(2.7871) feature loss: tensor(2.0000)
Local adapation with distilling: 0.000856
training loss: tensor(0.4721) feature loss: tensor(2.4488)
Local adapation with distilling: 0.000856
training loss: tensor(0.5311) feature loss: tensor(0.5534)
Local adapation with distilling: 0.000856
training loss: tensor(0.1635) feature loss: tensor(0.2784)
Local adapation with distilling: 0.000856
training loss: tensor(0.4078) feature loss: tensor(0.9371)
Local adapation with distilling: 0.000856
training loss: tensor(0.3280) feature loss: tensor(0.8344)
Local adapation with distilling: 0.000856
training loss: tensor(0.2654) feature loss: tensor(0.5310)
Local adapation with distilling: 0.000856
training loss: tensor(0.6862) feature loss: tensor(0.9325)
Local adapation with distilling: 0.000856
training loss: tensor(0.4639) feature loss: tensor(0.6308)
         GM acc on global data: 0.1513 length of data: 10000
-------------Round number:  9  -------------
selected users: [75, 42, 46, 68, 3, 39, 23, 20, 70, 73]
torch.Size([2441, 32, 16, 16]) torch.Size([2441])
torch.Size([147, 32, 16, 16]) torch.Size([147])
torch.Size([530, 32, 16, 16]) torch.Size([530])
torch.Size([993, 32, 16, 16]) torch.Size([993])
torch.Size([56, 32, 16, 16]) torch.Size([56])
torch.Size([1283, 32, 16, 16]) torch.Size([1283])
torch.Size([70, 32, 16, 16]) torch.Size([70])
torch.Size([37, 32, 16, 16]) torch.Size([37])
torch.Size([90, 32, 16, 16]) torch.Size([90])
torch.Size([117, 32, 16, 16]) torch.Size([117])
5764 72 72
all data: 1000
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.2698) feature loss: tensor(0.2879)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.6588) feature loss: tensor(2.5475)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.5061) feature loss: tensor(0.9066)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.2341) feature loss: tensor(0.6426)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(1.2235) feature loss: tensor(4.9246)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.2690) feature loss: tensor(0.4755)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(1.9998) feature loss: tensor(3.3326)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(1.0975) feature loss: tensor(4.9958)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(3.0599) feature loss: tensor(3.1014)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(1.8624) feature loss: tensor(3.2980)
         GM acc on global data: 0.11 length of data: 10000
-------------Round number:  10  -------------
selected users: [19, 14, 43, 37, 66, 3, 79, 41, 38, 68]
torch.Size([524, 32, 16, 16]) torch.Size([524])
torch.Size([354, 32, 16, 16]) torch.Size([354])
torch.Size([372, 32, 16, 16]) torch.Size([372])
torch.Size([139, 32, 16, 16]) torch.Size([139])
torch.Size([352, 32, 16, 16]) torch.Size([352])
torch.Size([56, 32, 16, 16]) torch.Size([56])
torch.Size([274, 32, 16, 16]) torch.Size([274])
torch.Size([502, 32, 16, 16]) torch.Size([502])
torch.Size([239, 32, 16, 16]) torch.Size([239])
torch.Size([993, 32, 16, 16]) torch.Size([993])
3805 72 72
all data: 1000
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(1.1576) feature loss: tensor(1.0737)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.4650) feature loss: tensor(1.5032)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(1.4590) feature loss: tensor(1.4384)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(1.4338) feature loss: tensor(2.3741)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(1.1473) feature loss: tensor(1.3148)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(2.3047) feature loss: tensor(5.1961)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(1.5443) feature loss: tensor(1.6851)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(1.0840) feature loss: tensor(1.1685)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(1.2748) feature loss: tensor(2.1124)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.1255) feature loss: tensor(0.6227)
         GM acc on global data: 0.1331 length of data: 10000
-------------Round number:  11  -------------
selected users: [46, 49, 22, 58, 41, 98, 62, 29, 30, 51]
torch.Size([530, 32, 16, 16]) torch.Size([530])
torch.Size([695, 32, 16, 16]) torch.Size([695])
torch.Size([718, 32, 16, 16]) torch.Size([718])
torch.Size([787, 32, 16, 16]) torch.Size([787])
torch.Size([502, 32, 16, 16]) torch.Size([502])
torch.Size([110, 32, 16, 16]) torch.Size([110])
torch.Size([359, 32, 16, 16]) torch.Size([359])
torch.Size([845, 32, 16, 16]) torch.Size([845])
torch.Size([257, 32, 16, 16]) torch.Size([257])
torch.Size([762, 32, 16, 16]) torch.Size([762])
5565 72 72
all data: 1000
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.4867) feature loss: tensor(0.6245)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.2979) feature loss: tensor(0.5240)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.6757) feature loss: tensor(0.5246)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.1516) feature loss: tensor(0.4470)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.2154) feature loss: tensor(0.7181)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.7198) feature loss: tensor(2.0845)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.3411) feature loss: tensor(0.9715)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.1367) feature loss: tensor(0.4335)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(2.8926) feature loss: tensor(1.2224)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.5342) feature loss: tensor(0.5052)
         GM acc on global data: 0.2165 length of data: 10000
-------------Round number:  12  -------------
selected users: [17, 41, 92, 14, 68, 31, 89, 15, 21, 60]
torch.Size([543, 32, 16, 16]) torch.Size([543])
torch.Size([502, 32, 16, 16]) torch.Size([502])
torch.Size([400, 32, 16, 16]) torch.Size([400])
torch.Size([354, 32, 16, 16]) torch.Size([354])
torch.Size([993, 32, 16, 16]) torch.Size([993])
torch.Size([211, 32, 16, 16]) torch.Size([211])
torch.Size([523, 32, 16, 16]) torch.Size([523])
torch.Size([213, 32, 16, 16]) torch.Size([213])
torch.Size([277, 32, 16, 16]) torch.Size([277])
torch.Size([15, 32, 16, 16]) torch.Size([15])
4031 72 72
all data: 1000
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.2964) feature loss: tensor(0.6857)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.2070) feature loss: tensor(0.8144)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.3690) feature loss: tensor(0.8883)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.5906) feature loss: tensor(0.9690)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.1654) feature loss: tensor(0.4447)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.3985) feature loss: tensor(1.3398)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.5503) feature loss: tensor(0.6692)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.8376) feature loss: tensor(1.4301)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.7336) feature loss: tensor(1.1475)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.9171) feature loss: tensor(2.9653)
         GM acc on global data: 0.148 length of data: 10000
-------------Round number:  13  -------------
selected users: [37, 62, 83, 14, 43, 9, 44, 31, 69, 57]
torch.Size([139, 32, 16, 16]) torch.Size([139])
torch.Size([359, 32, 16, 16]) torch.Size([359])
torch.Size([372, 32, 16, 16]) torch.Size([372])
torch.Size([354, 32, 16, 16]) torch.Size([354])
torch.Size([372, 32, 16, 16]) torch.Size([372])
torch.Size([120, 32, 16, 16]) torch.Size([120])
torch.Size([668, 32, 16, 16]) torch.Size([668])
torch.Size([211, 32, 16, 16]) torch.Size([211])
torch.Size([584, 32, 16, 16]) torch.Size([584])
torch.Size([655, 32, 16, 16]) torch.Size([655])
3834 72 72
all data: 1000
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.7321) feature loss: tensor(1.8573)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.4402) feature loss: tensor(1.0947)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.5105) feature loss: tensor(1.0778)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.4726) feature loss: tensor(1.1197)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.5622) feature loss: tensor(1.0683)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.7051) feature loss: tensor(2.2860)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.6558) feature loss: tensor(0.6368)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.4417) feature loss: tensor(1.4788)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.5209) feature loss: tensor(0.6868)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.4294) feature loss: tensor(0.6787)
         GM acc on global data: 0.2765 length of data: 10000
-------------Round number:  14  -------------
selected users: [24, 39, 35, 44, 55, 70, 82, 40, 91, 65]
torch.Size([1084, 32, 16, 16]) torch.Size([1084])
torch.Size([1283, 32, 16, 16]) torch.Size([1283])
torch.Size([263, 32, 16, 16]) torch.Size([263])
torch.Size([668, 32, 16, 16]) torch.Size([668])
torch.Size([2015, 32, 16, 16]) torch.Size([2015])
torch.Size([90, 32, 16, 16]) torch.Size([90])
torch.Size([111, 32, 16, 16]) torch.Size([111])
torch.Size([337, 32, 16, 16]) torch.Size([337])
torch.Size([1199, 32, 16, 16]) torch.Size([1199])
torch.Size([356, 32, 16, 16]) torch.Size([356])
7406 72 72
all data: 1000
Local adapation with distilling: 0.000748
training loss: tensor(0.1056) feature loss: tensor(0.3310)
Local adapation with distilling: 0.000748
training loss: tensor(0.2312) feature loss: tensor(0.2635)
Local adapation with distilling: 0.000748
training loss: tensor(0.5526) feature loss: tensor(0.9249)
Local adapation with distilling: 0.000748
training loss: tensor(0.3613) feature loss: tensor(0.4282)
Local adapation with distilling: 0.000748
training loss: tensor(0.0329) feature loss: tensor(0.2207)
Local adapation with distilling: 0.000748
training loss: tensor(0.9338) feature loss: tensor(1.7213)
Local adapation with distilling: 0.000748
training loss: tensor(0.8176) feature loss: tensor(1.5246)
Local adapation with distilling: 0.000748
training loss: tensor(0.4348) feature loss: tensor(0.7142)
Local adapation with distilling: 0.000748
training loss: tensor(0.2711) feature loss: tensor(0.2801)
Local adapation with distilling: 0.000748
training loss: tensor(0.6739) feature loss: tensor(0.8605)
         GM acc on global data: 0.1764 length of data: 10000
-------------Round number:  15  -------------
selected users: [84, 36, 57, 51, 46, 78, 93, 14, 11, 59]
torch.Size([271, 32, 16, 16]) torch.Size([271])
torch.Size([979, 32, 16, 16]) torch.Size([979])
torch.Size([655, 32, 16, 16]) torch.Size([655])
torch.Size([762, 32, 16, 16]) torch.Size([762])
torch.Size([530, 32, 16, 16]) torch.Size([530])
torch.Size([277, 32, 16, 16]) torch.Size([277])
torch.Size([516, 32, 16, 16]) torch.Size([516])
torch.Size([354, 32, 16, 16]) torch.Size([354])
torch.Size([240, 32, 16, 16]) torch.Size([240])
torch.Size([131, 32, 16, 16]) torch.Size([131])
4715 72 72
all data: 1000
Local adapation with distilling: 0.00073
training loss: tensor(1.1211) feature loss: tensor(1.5112)
Local adapation with distilling: 0.00073
training loss: tensor(0.3987) feature loss: tensor(0.5343)
Local adapation with distilling: 0.00073
training loss: tensor(0.4437) feature loss: tensor(0.6595)
Local adapation with distilling: 0.00073
training loss: tensor(0.5966) feature loss: tensor(0.6119)
Local adapation with distilling: 0.00073
training loss: tensor(0.3669) feature loss: tensor(0.7771)
Local adapation with distilling: 0.00073
training loss: tensor(0.7413) feature loss: tensor(1.2872)
Local adapation with distilling: 0.00073
training loss: tensor(0.6795) feature loss: tensor(0.7938)
Local adapation with distilling: 0.00073
training loss: tensor(0.5409) feature loss: tensor(1.1723)
Local adapation with distilling: 0.00073
training loss: tensor(0.6152) feature loss: tensor(1.5238)
Local adapation with distilling: 0.00073
training loss: tensor(1.9380) feature loss: tensor(2.3529)
         GM acc on global data: 0.3002 length of data: 10000
-------------Round number:  16  -------------
selected users: [7, 25, 71, 42, 47, 29, 63, 88, 50, 9]
torch.Size([110, 32, 16, 16]) torch.Size([110])
torch.Size([484, 32, 16, 16]) torch.Size([484])
torch.Size([159, 32, 16, 16]) torch.Size([159])
torch.Size([147, 32, 16, 16]) torch.Size([147])
torch.Size([689, 32, 16, 16]) torch.Size([689])
torch.Size([845, 32, 16, 16]) torch.Size([845])
torch.Size([582, 32, 16, 16]) torch.Size([582])
torch.Size([210, 32, 16, 16]) torch.Size([210])
torch.Size([118, 32, 16, 16]) torch.Size([118])
torch.Size([120, 32, 16, 16]) torch.Size([120])
3464 72 72
all data: 1000
Local adapation with distilling: 0.000712
training loss: tensor(0.6836) feature loss: tensor(1.7453)
Local adapation with distilling: 0.000712
training loss: tensor(0.3081) feature loss: tensor(0.5523)
Local adapation with distilling: 0.000712
training loss: tensor(0.3478) feature loss: tensor(1.0672)
Local adapation with distilling: 0.000712
training loss: tensor(0.5700) feature loss: tensor(1.1881)
Local adapation with distilling: 0.000712
training loss: tensor(0.1301) feature loss: tensor(0.4564)
Local adapation with distilling: 0.000712
training loss: tensor(0.0925) feature loss: tensor(0.3414)
Local adapation with distilling: 0.000712
training loss: tensor(0.5320) feature loss: tensor(0.4463)
Local adapation with distilling: 0.000712
training loss: tensor(0.6082) feature loss: tensor(1.0155)
Local adapation with distilling: 0.000712
training loss: tensor(0.8307) feature loss: tensor(1.5747)
Local adapation with distilling: 0.000712
training loss: tensor(0.7949) feature loss: tensor(1.5479)
         GM acc on global data: 0.2561 length of data: 10000
-------------Round number:  17  -------------
selected users: [71, 28, 9, 4, 73, 34, 94, 92, 47, 37]
torch.Size([159, 32, 16, 16]) torch.Size([159])
torch.Size([951, 32, 16, 16]) torch.Size([951])
torch.Size([120, 32, 16, 16]) torch.Size([120])
torch.Size([156, 32, 16, 16]) torch.Size([156])
torch.Size([117, 32, 16, 16]) torch.Size([117])
torch.Size([1363, 32, 16, 16]) torch.Size([1363])
torch.Size([125, 32, 16, 16]) torch.Size([125])
torch.Size([400, 32, 16, 16]) torch.Size([400])
torch.Size([689, 32, 16, 16]) torch.Size([689])
torch.Size([139, 32, 16, 16]) torch.Size([139])
4219 72 72
all data: 1000
Local adapation with distilling: 0.000694
training loss: tensor(0.1917) feature loss: tensor(1.3161)
Local adapation with distilling: 0.000694
training loss: tensor(0.3353) feature loss: tensor(0.3254)
Local adapation with distilling: 0.000694
training loss: tensor(0.8337) feature loss: tensor(1.6213)
Local adapation with distilling: 0.000694
training loss: tensor(0.4004) feature loss: tensor(1.2024)
Local adapation with distilling: 0.000694
training loss: tensor(0.7805) feature loss: tensor(1.5175)
Local adapation with distilling: 0.000694
training loss: tensor(0.3132) feature loss: tensor(0.2453)
Local adapation with distilling: 0.000694
training loss: tensor(1.1519) feature loss: tensor(1.8808)
Local adapation with distilling: 0.000694
training loss: tensor(0.3781) feature loss: tensor(0.6772)
Local adapation with distilling: 0.000694
training loss: tensor(0.0700) feature loss: tensor(0.4430)
Local adapation with distilling: 0.000694
training loss: tensor(0.8665) feature loss: tensor(1.2299)
         GM acc on global data: 0.2297 length of data: 10000
-------------Round number:  18  -------------
selected users: [53, 47, 43, 54, 33, 48, 0, 12, 44, 91]
torch.Size([262, 32, 16, 16]) torch.Size([262])
torch.Size([689, 32, 16, 16]) torch.Size([689])
torch.Size([372, 32, 16, 16]) torch.Size([372])
torch.Size([323, 32, 16, 16]) torch.Size([323])
torch.Size([546, 32, 16, 16]) torch.Size([546])
torch.Size([309, 32, 16, 16]) torch.Size([309])
torch.Size([171, 32, 16, 16]) torch.Size([171])
torch.Size([48, 32, 16, 16]) torch.Size([48])
torch.Size([668, 32, 16, 16]) torch.Size([668])
torch.Size([1199, 32, 16, 16]) torch.Size([1199])
4587 72 72
all data: 1000
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.8595) feature loss: tensor(1.1291)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.0875) feature loss: tensor(0.4921)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.7434) feature loss: tensor(0.8859)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.7245) feature loss: tensor(0.9051)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.3646) feature loss: tensor(0.5658)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.4076) feature loss: tensor(1.0001)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(2.1264) feature loss: tensor(1.6130)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.6170) feature loss: tensor(2.9523)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.3887) feature loss: tensor(0.4811)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.3514) feature loss: tensor(0.3305)
         GM acc on global data: 0.2888 length of data: 10000
-------------Round number:  19  -------------
selected users: [85, 72, 16, 18, 2, 38, 90, 30, 83, 61]
torch.Size([238, 32, 16, 16]) torch.Size([238])
torch.Size([206, 32, 16, 16]) torch.Size([206])
torch.Size([830, 32, 16, 16]) torch.Size([830])
torch.Size([526, 32, 16, 16]) torch.Size([526])
torch.Size([457, 32, 16, 16]) torch.Size([457])
torch.Size([239, 32, 16, 16]) torch.Size([239])
torch.Size([800, 32, 16, 16]) torch.Size([800])
torch.Size([257, 32, 16, 16]) torch.Size([257])
torch.Size([372, 32, 16, 16]) torch.Size([372])
torch.Size([711, 32, 16, 16]) torch.Size([711])
4636 72 72
all data: 1000
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.3503) feature loss: tensor(1.0358)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.2607) feature loss: tensor(1.2596)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.0667) feature loss: tensor(0.3816)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.4361) feature loss: tensor(0.5750)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.3715) feature loss: tensor(0.6526)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.5897) feature loss: tensor(1.1659)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.0779) feature loss: tensor(0.3892)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(1.9812) feature loss: tensor(1.0934)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.3143) feature loss: tensor(0.7849)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.4488) feature loss: tensor(0.4501)
         GM acc on global data: 0.2844 length of data: 10000
-------------Round number:  20  -------------
selected users: [70, 74, 2, 44, 56, 48, 12, 36, 0, 49]
torch.Size([90, 32, 16, 16]) torch.Size([90])
torch.Size([309, 32, 16, 16]) torch.Size([309])
torch.Size([457, 32, 16, 16]) torch.Size([457])
torch.Size([668, 32, 16, 16]) torch.Size([668])
torch.Size([876, 32, 16, 16]) torch.Size([876])
torch.Size([309, 32, 16, 16]) torch.Size([309])
torch.Size([48, 32, 16, 16]) torch.Size([48])
torch.Size([979, 32, 16, 16]) torch.Size([979])
torch.Size([171, 32, 16, 16]) torch.Size([171])
torch.Size([695, 32, 16, 16]) torch.Size([695])
4602 72 72
all data: 1000
Local adapation with distilling: 0.00064
training loss: tensor(1.0868) feature loss: tensor(1.8633)
Local adapation with distilling: 0.00064
training loss: tensor(0.3979) feature loss: tensor(0.8663)
Local adapation with distilling: 0.00064
training loss: tensor(0.3997) feature loss: tensor(0.5432)
Local adapation with distilling: 0.00064
training loss: tensor(0.3217) feature loss: tensor(0.4147)
Local adapation with distilling: 0.00064
training loss: tensor(0.1349) feature loss: tensor(0.3588)
Local adapation with distilling: 0.00064
training loss: tensor(0.3802) feature loss: tensor(0.7624)
Local adapation with distilling: 0.00064
training loss: tensor(0.8390) feature loss: tensor(2.4629)
Local adapation with distilling: 0.00064
training loss: tensor(0.2800) feature loss: tensor(0.3303)
Local adapation with distilling: 0.00064
training loss: tensor(1.4991) feature loss: tensor(1.4743)
Local adapation with distilling: 0.00064
training loss: tensor(0.2739) feature loss: tensor(0.4013)
         GM acc on global data: 0.2344 length of data: 10000
-------------Round number:  21  -------------
selected users: [23, 81, 85, 34, 62, 46, 42, 31, 93, 11]
torch.Size([70, 32, 16, 16]) torch.Size([70])
torch.Size([1216, 32, 16, 16]) torch.Size([1216])
torch.Size([238, 32, 16, 16]) torch.Size([238])
torch.Size([1363, 32, 16, 16]) torch.Size([1363])
torch.Size([359, 32, 16, 16]) torch.Size([359])
torch.Size([530, 32, 16, 16]) torch.Size([530])
torch.Size([147, 32, 16, 16]) torch.Size([147])
torch.Size([211, 32, 16, 16]) torch.Size([211])
torch.Size([516, 32, 16, 16]) torch.Size([516])
torch.Size([240, 32, 16, 16]) torch.Size([240])
4890 72 72
all data: 1000
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(1.7230) feature loss: tensor(1.7773)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.0387) feature loss: tensor(0.3017)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.5842) feature loss: tensor(1.0508)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.2019) feature loss: tensor(0.2596)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.4211) feature loss: tensor(0.8056)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.4257) feature loss: tensor(0.5534)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.6064) feature loss: tensor(1.4037)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.5302) feature loss: tensor(1.1686)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.5465) feature loss: tensor(0.5361)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.6804) feature loss: tensor(0.9828)
         GM acc on global data: 0.2174 length of data: 10000
-------------Round number:  22  -------------
selected users: [2, 49, 82, 31, 37, 12, 87, 42, 99, 85]
torch.Size([457, 32, 16, 16]) torch.Size([457])
torch.Size([695, 32, 16, 16]) torch.Size([695])
torch.Size([111, 32, 16, 16]) torch.Size([111])
torch.Size([211, 32, 16, 16]) torch.Size([211])
torch.Size([139, 32, 16, 16]) torch.Size([139])
torch.Size([48, 32, 16, 16]) torch.Size([48])
torch.Size([93, 32, 16, 16]) torch.Size([93])
torch.Size([147, 32, 16, 16]) torch.Size([147])
torch.Size([359, 32, 16, 16]) torch.Size([359])
torch.Size([238, 32, 16, 16]) torch.Size([238])
2498 72 72
all data: 1000
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.4647) feature loss: tensor(0.4708)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.2080) feature loss: tensor(0.3498)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.9614) feature loss: tensor(1.5411)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.4097) feature loss: tensor(0.9131)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.6588) feature loss: tensor(1.1964)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.4592) feature loss: tensor(2.2064)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(1.4170) feature loss: tensor(1.3939)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.5183) feature loss: tensor(1.1238)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.2917) feature loss: tensor(0.6167)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.4466) feature loss: tensor(0.9167)
         GM acc on global data: 0.3026 length of data: 10000
-------------Round number:  23  -------------
selected users: [26, 80, 82, 68, 77, 37, 3, 55, 20, 17]
torch.Size([72, 32, 16, 16]) torch.Size([72])
torch.Size([319, 32, 16, 16]) torch.Size([319])
torch.Size([111, 32, 16, 16]) torch.Size([111])
torch.Size([993, 32, 16, 16]) torch.Size([993])
torch.Size([693, 32, 16, 16]) torch.Size([693])
torch.Size([139, 32, 16, 16]) torch.Size([139])
torch.Size([56, 32, 16, 16]) torch.Size([56])
torch.Size([2015, 32, 16, 16]) torch.Size([2015])
torch.Size([37, 32, 16, 16]) torch.Size([37])
torch.Size([543, 32, 16, 16]) torch.Size([543])
4978 72 72
all data: 1000
Local adapation with distilling: 0.000586
training loss: tensor(4.2182) feature loss: tensor(2.0798)
Local adapation with distilling: 0.000586
training loss: tensor(0.2787) feature loss: tensor(0.8259)
Local adapation with distilling: 0.000586
training loss: tensor(0.6257) feature loss: tensor(1.6427)
Local adapation with distilling: 0.000586
training loss: tensor(0.1121) feature loss: tensor(0.3093)
Local adapation with distilling: 0.000586
training loss: tensor(0.2214) feature loss: tensor(0.3893)
Local adapation with distilling: 0.000586
training loss: tensor(0.4526) feature loss: tensor(1.2228)
Local adapation with distilling: 0.000586
training loss: tensor(0.6920) feature loss: tensor(2.5136)
Local adapation with distilling: 0.000586
training loss: tensor(0.0672) feature loss: tensor(0.1709)
Local adapation with distilling: 0.000586
training loss: tensor(0.7787) feature loss: tensor(2.4487)
Local adapation with distilling: 0.000586
training loss: tensor(0.2501) feature loss: tensor(0.4917)
         GM acc on global data: 0.1031 length of data: 10000
-------------Round number:  24  -------------
selected users: [26, 31, 37, 86, 76, 14, 88, 48, 71, 67]
torch.Size([72, 32, 16, 16]) torch.Size([72])
torch.Size([211, 32, 16, 16]) torch.Size([211])
torch.Size([139, 32, 16, 16]) torch.Size([139])
torch.Size([437, 32, 16, 16]) torch.Size([437])
torch.Size([2848, 32, 16, 16]) torch.Size([2848])
torch.Size([354, 32, 16, 16]) torch.Size([354])
torch.Size([210, 32, 16, 16]) torch.Size([210])
torch.Size([309, 32, 16, 16]) torch.Size([309])
torch.Size([159, 32, 16, 16]) torch.Size([159])
torch.Size([543, 32, 16, 16]) torch.Size([543])
5282 72 72
all data: 1000
Local adapation with distilling: 0.000568
training loss: tensor(6.7759) feature loss: tensor(4.9916)
Local adapation with distilling: 0.000568
training loss: tensor(1.8826) feature loss: tensor(2.6353)
Local adapation with distilling: 0.000568
training loss: tensor(1.2962) feature loss: tensor(3.7595)
Local adapation with distilling: 0.000568
training loss: tensor(0.8674) feature loss: tensor(1.6545)
Local adapation with distilling: 0.000568
training loss: tensor(0.3214) feature loss: tensor(0.2770)
Local adapation with distilling: 0.000568
training loss: tensor(1.5224) feature loss: tensor(1.8424)
Local adapation with distilling: 0.000568
training loss: tensor(1.6013) feature loss: tensor(2.6543)
Local adapation with distilling: 0.000568
training loss: tensor(1.7501) feature loss: tensor(2.2369)
Local adapation with distilling: 0.000568
training loss: tensor(2.4837) feature loss: tensor(3.5171)
Local adapation with distilling: 0.000568
training loss: tensor(0.6926) feature loss: tensor(1.2798)
         GM acc on global data: 0.2352 length of data: 10000
-------------Round number:  25  -------------
selected users: [41, 29, 33, 65, 74, 6, 57, 89, 87, 98]
torch.Size([502, 32, 16, 16]) torch.Size([502])
torch.Size([845, 32, 16, 16]) torch.Size([845])
torch.Size([546, 32, 16, 16]) torch.Size([546])
torch.Size([356, 32, 16, 16]) torch.Size([356])
torch.Size([309, 32, 16, 16]) torch.Size([309])
torch.Size([538, 32, 16, 16]) torch.Size([538])
torch.Size([655, 32, 16, 16]) torch.Size([655])
torch.Size([523, 32, 16, 16]) torch.Size([523])
torch.Size([93, 32, 16, 16]) torch.Size([93])
torch.Size([110, 32, 16, 16]) torch.Size([110])
4477 72 72
all data: 1000
Local adapation with distilling: 0.00055
training loss: tensor(0.3998) feature loss: tensor(0.7442)
Local adapation with distilling: 0.00055
training loss: tensor(0.3427) feature loss: tensor(0.4615)
Local adapation with distilling: 0.00055
training loss: tensor(0.5110) feature loss: tensor(0.6267)
Local adapation with distilling: 0.00055
training loss: tensor(0.6918) feature loss: tensor(0.9996)
Local adapation with distilling: 0.00055
training loss: tensor(0.7829) feature loss: tensor(1.1991)
Local adapation with distilling: 0.00055
training loss: tensor(0.5518) feature loss: tensor(0.7776)
Local adapation with distilling: 0.00055
training loss: tensor(0.3778) feature loss: tensor(0.5493)
Local adapation with distilling: 0.00055
training loss: tensor(0.6384) feature loss: tensor(0.6903)
Local adapation with distilling: 0.00055
training loss: tensor(0.8908) feature loss: tensor(2.5565)
Local adapation with distilling: 0.00055
training loss: tensor(1.8965) feature loss: tensor(2.4951)
         GM acc on global data: 0.2922 length of data: 10000
-------------Round number:  26  -------------
selected users: [8, 69, 84, 41, 25, 5, 63, 95, 33, 70]
torch.Size([1059, 32, 16, 16]) torch.Size([1059])
torch.Size([584, 32, 16, 16]) torch.Size([584])
torch.Size([271, 32, 16, 16]) torch.Size([271])
torch.Size([502, 32, 16, 16]) torch.Size([502])
torch.Size([484, 32, 16, 16]) torch.Size([484])
torch.Size([479, 32, 16, 16]) torch.Size([479])
torch.Size([582, 32, 16, 16]) torch.Size([582])
torch.Size([32, 32, 16, 16]) torch.Size([32])
torch.Size([546, 32, 16, 16]) torch.Size([546])
torch.Size([90, 32, 16, 16]) torch.Size([90])
4629 72 72
all data: 1000
Local adapation with distilling: 0.000532
training loss: tensor(0.2806) feature loss: tensor(0.3060)
Local adapation with distilling: 0.000532
training loss: tensor(0.7042) feature loss: tensor(0.5365)
Local adapation with distilling: 0.000532
training loss: tensor(0.7299) feature loss: tensor(1.0854)
Local adapation with distilling: 0.000532
training loss: tensor(0.1282) feature loss: tensor(0.5914)
Local adapation with distilling: 0.000532
training loss: tensor(0.3884) feature loss: tensor(0.5594)
Local adapation with distilling: 0.000532
training loss: tensor(0.3475) feature loss: tensor(0.6067)
Local adapation with distilling: 0.000532
training loss: tensor(0.6186) feature loss: tensor(0.5277)
Local adapation with distilling: 0.000532
training loss: tensor(1.0374) feature loss: tensor(2.4350)
Local adapation with distilling: 0.000532
training loss: tensor(0.2356) feature loss: tensor(0.5220)
Local adapation with distilling: 0.000532
training loss: tensor(1.3340) feature loss: tensor(2.1004)
         GM acc on global data: 0.3059 length of data: 10000
-------------Round number:  27  -------------
selected users: [89, 68, 43, 50, 40, 95, 27, 85, 22, 44]
torch.Size([523, 32, 16, 16]) torch.Size([523])
torch.Size([993, 32, 16, 16]) torch.Size([993])
torch.Size([372, 32, 16, 16]) torch.Size([372])
torch.Size([118, 32, 16, 16]) torch.Size([118])
torch.Size([337, 32, 16, 16]) torch.Size([337])
torch.Size([32, 32, 16, 16]) torch.Size([32])
torch.Size([269, 32, 16, 16]) torch.Size([269])
torch.Size([238, 32, 16, 16]) torch.Size([238])
torch.Size([718, 32, 16, 16]) torch.Size([718])
torch.Size([668, 32, 16, 16]) torch.Size([668])
4268 72 72
all data: 1000
Local adapation with distilling: 0.000514
training loss: tensor(0.3448) feature loss: tensor(0.4811)
Local adapation with distilling: 0.000514
training loss: tensor(0.1095) feature loss: tensor(0.3313)
Local adapation with distilling: 0.000514
training loss: tensor(0.3128) feature loss: tensor(0.6831)
Local adapation with distilling: 0.000514
training loss: tensor(0.6964) feature loss: tensor(1.8160)
Local adapation with distilling: 0.000514
training loss: tensor(0.3823) feature loss: tensor(0.7239)
Local adapation with distilling: 0.000514
training loss: tensor(0.4993) feature loss: tensor(2.2695)
Local adapation with distilling: 0.000514
training loss: tensor(0.4753) feature loss: tensor(0.8965)
Local adapation with distilling: 0.000514
training loss: tensor(0.3845) feature loss: tensor(0.9011)
Local adapation with distilling: 0.000514
training loss: tensor(0.3925) feature loss: tensor(0.3899)
Local adapation with distilling: 0.000514
training loss: tensor(0.3950) feature loss: tensor(0.4126)
         GM acc on global data: 0.2817 length of data: 10000
-------------Round number:  28  -------------
selected users: [67, 14, 0, 86, 13, 18, 30, 36, 52, 95]
torch.Size([543, 32, 16, 16]) torch.Size([543])
torch.Size([354, 32, 16, 16]) torch.Size([354])
torch.Size([171, 32, 16, 16]) torch.Size([171])
torch.Size([437, 32, 16, 16]) torch.Size([437])
torch.Size([453, 32, 16, 16]) torch.Size([453])
torch.Size([526, 32, 16, 16]) torch.Size([526])
torch.Size([257, 32, 16, 16]) torch.Size([257])
torch.Size([979, 32, 16, 16]) torch.Size([979])
torch.Size([1078, 32, 16, 16]) torch.Size([1078])
torch.Size([32, 32, 16, 16]) torch.Size([32])
4830 72 72
all data: 1000
Local adapation with distilling: 0.000496
training loss: tensor(0.3041) feature loss: tensor(0.5191)
Local adapation with distilling: 0.000496
training loss: tensor(0.5310) feature loss: tensor(0.7782)
Local adapation with distilling: 0.000496
training loss: tensor(0.4581) feature loss: tensor(1.4406)
Local adapation with distilling: 0.000496
training loss: tensor(0.3389) feature loss: tensor(0.6171)
Local adapation with distilling: 0.000496
training loss: tensor(0.9211) feature loss: tensor(0.6140)
Local adapation with distilling: 0.000496
training loss: tensor(0.3612) feature loss: tensor(0.5314)
Local adapation with distilling: 0.000496
training loss: tensor(2.9379) feature loss: tensor(0.9522)
Local adapation with distilling: 0.000496
training loss: tensor(0.2034) feature loss: tensor(0.3291)
Local adapation with distilling: 0.000496
training loss: tensor(0.1701) feature loss: tensor(0.3019)
Local adapation with distilling: 0.000496
training loss: tensor(0.6254) feature loss: tensor(2.5485)
         GM acc on global data: 0.296 length of data: 10000
-------------Round number:  29  -------------
selected users: [73, 8, 10, 7, 19, 71, 92, 25, 38, 12]
torch.Size([117, 32, 16, 16]) torch.Size([117])
torch.Size([1059, 32, 16, 16]) torch.Size([1059])
torch.Size([513, 32, 16, 16]) torch.Size([513])
torch.Size([110, 32, 16, 16]) torch.Size([110])
torch.Size([524, 32, 16, 16]) torch.Size([524])
torch.Size([159, 32, 16, 16]) torch.Size([159])
torch.Size([400, 32, 16, 16]) torch.Size([400])
torch.Size([484, 32, 16, 16]) torch.Size([484])
torch.Size([239, 32, 16, 16]) torch.Size([239])
torch.Size([48, 32, 16, 16]) torch.Size([48])
3653 72 72
all data: 1000
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.7238) feature loss: tensor(1.4380)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.1755) feature loss: tensor(0.2449)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(2.1817) feature loss: tensor(0.4448)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.6393) feature loss: tensor(1.6230)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.4524) feature loss: tensor(0.4325)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.3950) feature loss: tensor(1.2613)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.2855) feature loss: tensor(0.5694)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.2529) feature loss: tensor(0.4636)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.7238) feature loss: tensor(1.0676)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.8856) feature loss: tensor(1.8315)
         GM acc on global data: 0.2962 length of data: 10000
-------------Round number:  30  -------------
selected users: [20, 91, 34, 52, 8, 74, 21, 88, 80, 89]
torch.Size([37, 32, 16, 16]) torch.Size([37])
torch.Size([1199, 32, 16, 16]) torch.Size([1199])
torch.Size([1363, 32, 16, 16]) torch.Size([1363])
torch.Size([1078, 32, 16, 16]) torch.Size([1078])
torch.Size([1059, 32, 16, 16]) torch.Size([1059])
torch.Size([309, 32, 16, 16]) torch.Size([309])
torch.Size([277, 32, 16, 16]) torch.Size([277])
torch.Size([210, 32, 16, 16]) torch.Size([210])
torch.Size([319, 32, 16, 16]) torch.Size([319])
torch.Size([523, 32, 16, 16]) torch.Size([523])
6374 72 72
all data: 1000
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.4534) feature loss: tensor(1.7813)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.2996) feature loss: tensor(0.2354)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.1787) feature loss: tensor(0.1799)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.1196) feature loss: tensor(0.2305)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.0894) feature loss: tensor(0.2171)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.3030) feature loss: tensor(0.7333)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.4647) feature loss: tensor(0.7019)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.9618) feature loss: tensor(0.8745)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.3334) feature loss: tensor(0.6819)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.2845) feature loss: tensor(0.3861)
         GM acc on global data: 0.2984 length of data: 10000
-------------Round number:  31  -------------
selected users: [17, 33, 76, 3, 56, 0, 37, 8, 60, 67]
torch.Size([543, 32, 16, 16]) torch.Size([543])
torch.Size([546, 32, 16, 16]) torch.Size([546])
torch.Size([2848, 32, 16, 16]) torch.Size([2848])
torch.Size([56, 32, 16, 16]) torch.Size([56])
torch.Size([876, 32, 16, 16]) torch.Size([876])
torch.Size([171, 32, 16, 16]) torch.Size([171])
torch.Size([139, 32, 16, 16]) torch.Size([139])
torch.Size([1059, 32, 16, 16]) torch.Size([1059])
torch.Size([15, 32, 16, 16]) torch.Size([15])
torch.Size([543, 32, 16, 16]) torch.Size([543])
6796 72 72
all data: 1000
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.2656) feature loss: tensor(0.4780)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.2964) feature loss: tensor(0.4278)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.1039) feature loss: tensor(0.1075)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(1.0749) feature loss: tensor(2.3061)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.1447) feature loss: tensor(0.3473)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.7594) feature loss: tensor(1.2181)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.8996) feature loss: tensor(1.2819)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.0827) feature loss: tensor(0.2433)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.7394) feature loss: tensor(2.3352)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.2559) feature loss: tensor(0.4712)
         GM acc on global data: 0.2886 length of data: 10000
-------------Round number:  32  -------------
selected users: [22, 39, 85, 97, 55, 33, 80, 13, 27, 96]
torch.Size([718, 32, 16, 16]) torch.Size([718])
torch.Size([1283, 32, 16, 16]) torch.Size([1283])
torch.Size([238, 32, 16, 16]) torch.Size([238])
torch.Size([40, 32, 16, 16]) torch.Size([40])
torch.Size([2015, 32, 16, 16]) torch.Size([2015])
torch.Size([546, 32, 16, 16]) torch.Size([546])
torch.Size([319, 32, 16, 16]) torch.Size([319])
torch.Size([453, 32, 16, 16]) torch.Size([453])
torch.Size([269, 32, 16, 16]) torch.Size([269])
torch.Size([1321, 32, 16, 16]) torch.Size([1321])
7202 72 72
all data: 1000
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.2656) feature loss: tensor(0.6391)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.4822) feature loss: tensor(0.4357)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(1.0032) feature loss: tensor(1.9053)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(6.7283) feature loss: tensor(5.0374)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.1741) feature loss: tensor(0.2869)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.3575) feature loss: tensor(0.9336)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.7026) feature loss: tensor(1.5428)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(1.6950) feature loss: tensor(1.0454)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.4297) feature loss: tensor(1.5485)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.2194) feature loss: tensor(0.4116)
         GM acc on global data: 0.2227 length of data: 10000
-------------Round number:  33  -------------
selected users: [56, 90, 95, 82, 60, 71, 6, 81, 2, 70]
torch.Size([876, 32, 16, 16]) torch.Size([876])
torch.Size([800, 32, 16, 16]) torch.Size([800])
torch.Size([32, 32, 16, 16]) torch.Size([32])
torch.Size([111, 32, 16, 16]) torch.Size([111])
torch.Size([15, 32, 16, 16]) torch.Size([15])
torch.Size([159, 32, 16, 16]) torch.Size([159])
torch.Size([538, 32, 16, 16]) torch.Size([538])
torch.Size([1216, 32, 16, 16]) torch.Size([1216])
torch.Size([457, 32, 16, 16]) torch.Size([457])
torch.Size([90, 32, 16, 16]) torch.Size([90])
4294 72 72
all data: 1000
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.1794) feature loss: tensor(0.4868)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.2851) feature loss: tensor(0.5701)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(2.8043) feature loss: tensor(3.9707)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(1.3782) feature loss: tensor(2.7002)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(1.1121) feature loss: tensor(4.0826)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(1.2048) feature loss: tensor(2.1486)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.8131) feature loss: tensor(0.7379)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.1317) feature loss: tensor(0.3798)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.5622) feature loss: tensor(0.8005)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(2.8201) feature loss: tensor(2.5581)
         GM acc on global data: 0.1465 length of data: 10000
-------------Round number:  34  -------------
selected users: [14, 74, 15, 4, 32, 59, 91, 10, 50, 53]
torch.Size([354, 32, 16, 16]) torch.Size([354])
torch.Size([309, 32, 16, 16]) torch.Size([309])
torch.Size([213, 32, 16, 16]) torch.Size([213])
torch.Size([156, 32, 16, 16]) torch.Size([156])
torch.Size([257, 32, 16, 16]) torch.Size([257])
torch.Size([131, 32, 16, 16]) torch.Size([131])
torch.Size([1199, 32, 16, 16]) torch.Size([1199])
torch.Size([513, 32, 16, 16]) torch.Size([513])
torch.Size([118, 32, 16, 16]) torch.Size([118])
torch.Size([262, 32, 16, 16]) torch.Size([262])
3512 72 72
all data: 1000
Local adapation with distilling: 0.000388
training loss: tensor(0.7610) feature loss: tensor(1.0984)
Local adapation with distilling: 0.000388
training loss: tensor(0.3414) feature loss: tensor(1.3859)
Local adapation with distilling: 0.000388
training loss: tensor(0.8129) feature loss: tensor(1.7157)
Local adapation with distilling: 0.000388
training loss: tensor(1.3848) feature loss: tensor(2.2353)
Local adapation with distilling: 0.000388
training loss: tensor(5.0755) feature loss: tensor(1.4535)
Local adapation with distilling: 0.000388
training loss: tensor(1.6615) feature loss: tensor(2.4368)
Local adapation with distilling: 0.000388
training loss: tensor(0.3000) feature loss: tensor(0.3553)
Local adapation with distilling: 0.000388
training loss: tensor(2.6502) feature loss: tensor(0.7535)
Local adapation with distilling: 0.000388
training loss: tensor(2.1636) feature loss: tensor(2.6867)
Local adapation with distilling: 0.000388
training loss: tensor(1.1981) feature loss: tensor(1.3889)
         GM acc on global data: 0.3069 length of data: 10000
-------------Round number:  35  -------------
selected users: [40, 71, 98, 27, 70, 31, 10, 24, 51, 35]
torch.Size([337, 32, 16, 16]) torch.Size([337])
torch.Size([159, 32, 16, 16]) torch.Size([159])
torch.Size([110, 32, 16, 16]) torch.Size([110])
torch.Size([269, 32, 16, 16]) torch.Size([269])
torch.Size([90, 32, 16, 16]) torch.Size([90])
torch.Size([211, 32, 16, 16]) torch.Size([211])
torch.Size([513, 32, 16, 16]) torch.Size([513])
torch.Size([1084, 32, 16, 16]) torch.Size([1084])
torch.Size([762, 32, 16, 16]) torch.Size([762])
torch.Size([263, 32, 16, 16]) torch.Size([263])
3798 72 72
all data: 1000
Local adapation with distilling: 0.00037
training loss: tensor(0.7474) feature loss: tensor(0.7942)
Local adapation with distilling: 0.00037
training loss: tensor(0.5685) feature loss: tensor(1.4381)
Local adapation with distilling: 0.00037
training loss: tensor(1.3266) feature loss: tensor(1.8717)
Local adapation with distilling: 0.00037
training loss: tensor(0.5402) feature loss: tensor(0.9571)
Local adapation with distilling: 0.00037
training loss: tensor(1.0157) feature loss: tensor(2.2887)
Local adapation with distilling: 0.00037
training loss: tensor(0.4969) feature loss: tensor(1.1942)
Local adapation with distilling: 0.00037
training loss: tensor(1.2855) feature loss: tensor(0.6169)
Local adapation with distilling: 0.00037
training loss: tensor(0.0830) feature loss: tensor(0.3111)
Local adapation with distilling: 0.00037
training loss: tensor(0.3783) feature loss: tensor(0.3992)
Local adapation with distilling: 0.00037
training loss: tensor(0.6823) feature loss: tensor(0.9754)
         GM acc on global data: 0.3187 length of data: 10000
-------------Round number:  36  -------------
selected users: [59, 42, 2, 27, 28, 75, 58, 68, 52, 74]
torch.Size([131, 32, 16, 16]) torch.Size([131])
torch.Size([147, 32, 16, 16]) torch.Size([147])
torch.Size([457, 32, 16, 16]) torch.Size([457])
torch.Size([269, 32, 16, 16]) torch.Size([269])
torch.Size([951, 32, 16, 16]) torch.Size([951])
torch.Size([2441, 32, 16, 16]) torch.Size([2441])
torch.Size([787, 32, 16, 16]) torch.Size([787])
torch.Size([993, 32, 16, 16]) torch.Size([993])
torch.Size([1078, 32, 16, 16]) torch.Size([1078])
torch.Size([309, 32, 16, 16]) torch.Size([309])
7563 72 72
all data: 1000
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.9670) feature loss: tensor(1.6390)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.7773) feature loss: tensor(1.5270)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.3565) feature loss: tensor(0.6525)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.4319) feature loss: tensor(1.0106)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.3514) feature loss: tensor(0.3505)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.1179) feature loss: tensor(0.1729)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.1176) feature loss: tensor(0.3957)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.1155) feature loss: tensor(0.3296)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.1318) feature loss: tensor(0.2932)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.3752) feature loss: tensor(1.0235)
         GM acc on global data: 0.2077 length of data: 10000
-------------Round number:  37  -------------
selected users: [61, 49, 86, 78, 5, 91, 81, 82, 89, 18]
torch.Size([711, 32, 16, 16]) torch.Size([711])
torch.Size([695, 32, 16, 16]) torch.Size([695])
torch.Size([437, 32, 16, 16]) torch.Size([437])
torch.Size([277, 32, 16, 16]) torch.Size([277])
torch.Size([479, 32, 16, 16]) torch.Size([479])
torch.Size([1199, 32, 16, 16]) torch.Size([1199])
torch.Size([1216, 32, 16, 16]) torch.Size([1216])
torch.Size([111, 32, 16, 16]) torch.Size([111])
torch.Size([523, 32, 16, 16]) torch.Size([523])
torch.Size([526, 32, 16, 16]) torch.Size([526])
6174 72 72
all data: 1000
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.5820) feature loss: tensor(0.6120)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.3776) feature loss: tensor(0.6126)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.5957) feature loss: tensor(0.9153)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.9297) feature loss: tensor(1.2632)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.6016) feature loss: tensor(0.8636)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.1773) feature loss: tensor(0.3601)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.1586) feature loss: tensor(0.3817)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.6357) feature loss: tensor(2.6372)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.5211) feature loss: tensor(0.7417)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.4285) feature loss: tensor(0.7694)
         GM acc on global data: 0.2975 length of data: 10000
-------------Round number:  38  -------------
selected users: [40, 73, 49, 45, 64, 16, 69, 17, 72, 66]
torch.Size([337, 32, 16, 16]) torch.Size([337])
torch.Size([117, 32, 16, 16]) torch.Size([117])
torch.Size([695, 32, 16, 16]) torch.Size([695])
torch.Size([122, 32, 16, 16]) torch.Size([122])
torch.Size([299, 32, 16, 16]) torch.Size([299])
torch.Size([830, 32, 16, 16]) torch.Size([830])
torch.Size([584, 32, 16, 16]) torch.Size([584])
torch.Size([543, 32, 16, 16]) torch.Size([543])
torch.Size([206, 32, 16, 16]) torch.Size([206])
torch.Size([352, 32, 16, 16]) torch.Size([352])
4085 72 72
all data: 1000
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.5670) feature loss: tensor(0.8541)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.9145) feature loss: tensor(1.9751)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.1976) feature loss: tensor(0.4811)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(1.0381) feature loss: tensor(2.1834)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.5769) feature loss: tensor(1.0003)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.2229) feature loss: tensor(0.4303)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.5774) feature loss: tensor(0.5599)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.2540) feature loss: tensor(0.5530)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.4640) feature loss: tensor(1.2909)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.5464) feature loss: tensor(0.8193)
         GM acc on global data: 0.3017 length of data: 10000
-------------Round number:  39  -------------
selected users: [22, 53, 84, 57, 87, 58, 29, 21, 85, 79]
torch.Size([718, 32, 16, 16]) torch.Size([718])
torch.Size([262, 32, 16, 16]) torch.Size([262])
torch.Size([271, 32, 16, 16]) torch.Size([271])
torch.Size([655, 32, 16, 16]) torch.Size([655])
torch.Size([93, 32, 16, 16]) torch.Size([93])
torch.Size([787, 32, 16, 16]) torch.Size([787])
torch.Size([845, 32, 16, 16]) torch.Size([845])
torch.Size([277, 32, 16, 16]) torch.Size([277])
torch.Size([238, 32, 16, 16]) torch.Size([238])
torch.Size([274, 32, 16, 16]) torch.Size([274])
4420 72 72
all data: 1000
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.3078) feature loss: tensor(0.4137)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.8615) feature loss: tensor(0.9731)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.7848) feature loss: tensor(1.0296)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.2677) feature loss: tensor(0.4557)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.9915) feature loss: tensor(1.9078)
Local adapation with distilling: 0.00029800000000000003
