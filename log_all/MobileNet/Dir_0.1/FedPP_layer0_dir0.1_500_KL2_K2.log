nohup: ignoring input
================================================================================
Summary of training process:
Dataset:                 Cifar10
Batch size:              64
Learing rate :           0.001
personal learning rate : 0.001
Number of total clients: 100
Split parameter        : 0.1
Clients per round      : 10
Number of global rounds: 100
Number of local rounds : 10
Feature from layer     : 0
Feature reduction      : 64
Local training loss    : CE_KL2
Loss of beta           : 1.0
Algorithm              : FedPP
Modelname              : MOBNET
Mode                   : training
================================================================================
Files already downloaded and verified
Files already downloaded and verified
Here
Done
Class frequencies:
client,class0,class1,class2,class3,class4,class5,class6,class7,class8,class9,Amount
Client   0,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,171
Client   1,0.231,0.038,0.00,0.00,0.00,0.077,0.00,0.654,0.00,0.00,52
Client   2,0.374,0.015,0.00,0.00,0.519,0.011,0.007,0.015,0.00,0.059,457
Client   3,0.00,0.00,0.00,0.232,0.768,0.00,0.00,0.00,0.00,0.00,56
Client   4,0.660,0.071,0.032,0.122,0.00,0.00,0.083,0.00,0.00,0.032,156
Client   5,0.00,0.00,0.00,0.00,0.029,0.00,0.00,0.00,0.121,0.850,479
Client   6,0.00,0.080,0.00,0.00,0.009,0.017,0.894,0.00,0.00,0.00,538
Client   7,0.00,0.00,0.00,0.00,0.991,0.00,0.00,0.009,0.00,0.00,110
Client   8,0.131,0.116,0.00,0.00,0.00,0.00,0.00,0.00,0.753,0.00,1059
Client   9,0.00,0.00,0.175,0.00,0.467,0.017,0.192,0.150,0.00,0.00,120
Client  10,0.00,0.331,0.540,0.00,0.00,0.00,0.129,0.00,0.00,0.00,513
Client  11,0.00,0.00,0.250,0.00,0.004,0.358,0.254,0.008,0.121,0.004,240
Client  12,0.00,0.00,0.00,0.00,0.00,0.562,0.00,0.00,0.396,0.042,48
Client  13,0.00,0.00,0.00,0.371,0.185,0.00,0.444,0.00,0.00,0.00,453
Client  14,0.068,0.00,0.003,0.011,0.00,0.042,0.641,0.234,0.00,0.00,354
Client  15,0.00,0.005,0.00,0.00,0.995,0.00,0.00,0.00,0.00,0.00,213
Client  16,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,830
Client  17,0.335,0.00,0.004,0.00,0.007,0.00,0.00,0.654,0.00,0.00,543
Client  18,0.00,0.743,0.00,0.127,0.053,0.076,0.00,0.00,0.00,0.00,526
Client  19,0.008,0.00,0.057,0.676,0.185,0.074,0.00,0.00,0.00,0.00,524
Client  20,0.00,0.00,0.243,0.108,0.00,0.00,0.00,0.216,0.432,0.00,37
Client  21,0.00,0.00,0.00,0.141,0.848,0.00,0.004,0.007,0.00,0.00,277
Client  22,0.00,0.192,0.00,0.00,0.00,0.010,0.00,0.028,0.063,0.708,718
Client  23,0.00,0.100,0.529,0.00,0.00,0.214,0.129,0.00,0.00,0.029,70
Client  24,0.014,0.00,0.002,0.002,0.00,0.00,0.00,0.982,0.00,0.00,1084
Client  25,0.00,0.00,0.006,0.105,0.00,0.169,0.010,0.025,0.684,0.00,484
Client  26,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.194,0.00,0.806,72
Client  27,0.00,0.00,0.00,0.00,0.011,0.086,0.004,0.00,0.019,0.881,269
Client  28,0.237,0.00,0.00,0.001,0.038,0.167,0.001,0.011,0.546,0.00,951
Client  29,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,845
Client  30,0.004,0.00,0.218,0.743,0.00,0.00,0.00,0.023,0.008,0.004,257
Client  31,0.014,0.730,0.00,0.005,0.194,0.005,0.052,0.00,0.00,0.00,211
Client  32,0.00,0.00,0.00,0.00,0.004,0.00,0.743,0.222,0.031,0.00,257
Client  33,0.559,0.084,0.002,0.00,0.013,0.00,0.00,0.234,0.108,0.00,546
Client  34,0.00,0.010,0.093,0.00,0.202,0.010,0.00,0.00,0.685,0.00,1363
Client  35,0.913,0.008,0.00,0.011,0.00,0.065,0.00,0.00,0.00,0.004,263
Client  36,0.029,0.00,0.001,0.00,0.139,0.006,0.001,0.003,0.821,0.00,979
Client  37,0.00,0.00,0.259,0.194,0.237,0.245,0.029,0.00,0.00,0.036,139
Client  38,0.075,0.00,0.00,0.00,0.00,0.925,0.00,0.00,0.00,0.00,239
Client  39,0.00,0.334,0.00,0.00,0.00,0.00,0.00,0.666,0.00,0.00,1283
Client  40,0.00,0.00,0.00,0.00,0.00,0.353,0.00,0.211,0.436,0.00,337
Client  41,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,502
Client  42,0.218,0.00,0.020,0.259,0.00,0.041,0.00,0.463,0.00,0.00,147
Client  43,0.073,0.008,0.024,0.062,0.073,0.00,0.00,0.00,0.003,0.758,372
Client  44,0.003,0.00,0.00,0.064,0.269,0.00,0.114,0.247,0.302,0.00,668
Client  45,0.00,0.025,0.00,0.066,0.689,0.00,0.213,0.00,0.008,0.00,122
Client  46,0.002,0.258,0.019,0.00,0.042,0.274,0.00,0.406,0.00,0.00,530
Client  47,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,689
Client  48,0.023,0.00,0.003,0.036,0.00,0.00,0.227,0.006,0.605,0.100,309
Client  49,0.102,0.377,0.001,0.519,0.00,0.00,0.00,0.00,0.00,0.00,695
Client  50,0.00,0.00,0.00,0.136,0.00,0.00,0.00,0.017,0.00,0.847,118
Client  51,0.331,0.035,0.00,0.052,0.00,0.083,0.034,0.00,0.012,0.453,762
Client  52,0.007,0.276,0.717,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1078
Client  53,0.00,0.073,0.153,0.00,0.00,0.00,0.271,0.00,0.504,0.00,262
Client  54,0.003,0.003,0.127,0.173,0.663,0.025,0.00,0.006,0.00,0.00,323
Client  55,0.000,0.00,0.000,0.00,0.00,0.999,0.00,0.00,0.00,0.00,2015
Client  56,0.00,0.00,0.014,0.986,0.00,0.00,0.00,0.00,0.00,0.00,876
Client  57,0.424,0.299,0.002,0.275,0.00,0.00,0.00,0.00,0.00,0.00,655
Client  58,0.003,0.997,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,787
Client  59,0.00,0.00,0.908,0.00,0.00,0.00,0.031,0.00,0.061,0.00,131
Client  60,0.067,0.00,0.00,0.00,0.067,0.200,0.00,0.200,0.333,0.133,15
Client  61,0.00,0.027,0.001,0.00,0.00,0.00,0.430,0.177,0.364,0.00,711
Client  62,0.00,0.00,0.00,0.00,0.006,0.983,0.00,0.00,0.011,0.00,359
Client  63,0.00,0.00,0.519,0.002,0.005,0.229,0.246,0.00,0.00,0.00,582
Client  64,0.00,0.00,0.00,0.00,0.00,0.064,0.207,0.729,0.00,0.00,299
Client  65,0.295,0.003,0.00,0.00,0.00,0.00,0.00,0.011,0.691,0.00,356
Client  66,0.375,0.267,0.003,0.00,0.182,0.020,0.00,0.003,0.131,0.020,352
Client  67,0.053,0.00,0.037,0.00,0.910,0.00,0.00,0.00,0.00,0.00,543
Client  68,0.00,0.001,0.999,0.00,0.00,0.00,0.00,0.00,0.00,0.00,993
Client  69,0.00,0.185,0.00,0.00,0.228,0.587,0.00,0.00,0.00,0.00,584
Client  70,0.00,0.00,0.011,0.00,0.122,0.00,0.867,0.00,0.00,0.00,90
Client  71,0.00,0.931,0.00,0.00,0.038,0.013,0.00,0.00,0.019,0.00,159
Client  72,0.00,0.00,0.034,0.00,0.00,0.00,0.00,0.966,0.00,0.00,206
Client  73,0.00,0.103,0.00,0.068,0.017,0.222,0.00,0.00,0.111,0.479,117
Client  74,0.00,0.00,0.003,0.861,0.00,0.00,0.00,0.136,0.00,0.00,309
Client  75,0.00,0.00,0.00,0.001,0.009,0.00,0.991,0.00,0.00,0.00,2441
Client  76,0.026,0.00,0.00,0.00,0.071,0.00,0.00,0.00,0.002,0.900,2848
Client  77,0.00,0.00,0.026,0.00,0.00,0.974,0.00,0.00,0.00,0.00,693
Client  78,0.440,0.004,0.00,0.00,0.444,0.00,0.00,0.00,0.112,0.00,277
Client  79,0.828,0.007,0.00,0.131,0.004,0.029,0.00,0.00,0.00,0.00,274
Client  80,0.00,0.201,0.003,0.661,0.00,0.013,0.003,0.119,0.00,0.00,319
Client  81,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,1152
Client  82,0.00,0.009,0.757,0.009,0.00,0.00,0.036,0.00,0.009,0.180,111
Client  83,0.005,0.00,0.00,0.00,0.003,0.228,0.00,0.750,0.00,0.013,372
Client  84,0.00,0.00,0.00,0.063,0.077,0.00,0.860,0.00,0.00,0.00,271
Client  85,0.00,0.244,0.555,0.00,0.00,0.00,0.00,0.088,0.113,0.00,238
Client  86,0.002,0.00,0.314,0.00,0.666,0.00,0.00,0.00,0.018,0.00,437
Client  87,0.00,0.022,0.022,0.011,0.022,0.043,0.269,0.258,0.032,0.323,93
Client  88,0.00,0.00,0.00,0.281,0.00,0.00,0.00,0.357,0.010,0.352,210
Client  89,0.086,0.029,0.642,0.011,0.103,0.019,0.00,0.00,0.00,0.109,523
Client  90,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,800
Client  91,0.00,0.00,0.377,0.003,0.00,0.002,0.00,0.619,0.00,0.00,1199
Client  92,0.065,0.00,0.015,0.915,0.00,0.005,0.00,0.00,0.00,0.00,400
Client  93,0.00,0.496,0.00,0.00,0.331,0.132,0.00,0.041,0.00,0.00,516
Client  94,0.00,0.00,0.00,0.00,0.008,0.032,0.944,0.00,0.016,0.00,125
Client  95,0.00,0.00,0.375,0.00,0.00,0.00,0.00,0.00,0.625,0.00,32
Client  96,0.00,0.073,0.011,0.00,0.915,0.00,0.00,0.00,0.00,0.00,1321
Client  97,0.00,0.00,0.00,0.00,0.00,0.00,0.925,0.00,0.050,0.025,40
Client  98,0.00,0.073,0.00,0.00,0.00,0.836,0.018,0.009,0.064,0.00,110
Client  99,0.173,0.003,0.003,0.799,0.003,0.003,0.003,0.003,0.006,0.006,359
Num_samples of Training set per client: [171, 52, 457, 56, 156, 479, 538, 110, 1059, 120, 513, 240, 48, 453, 354, 213, 830, 543, 526, 524, 37, 277, 718, 70, 1084, 484, 72, 269, 951, 845, 257, 211, 257, 546, 1363, 263, 979, 139, 239, 1283, 337, 502, 147, 372, 668, 122, 530, 689, 309, 695, 118, 762, 1078, 262, 323, 2015, 876, 655, 787, 131, 15, 711, 359, 582, 299, 356, 352, 543, 993, 584, 90, 159, 206, 117, 309, 2441, 2848, 693, 277, 274, 319, 1152, 111, 372, 271, 238, 437, 93, 210, 523, 800, 1199, 400, 516, 125, 32, 1321, 40, 110, 359]
Total_training_samples: 50000
Global test set: 10000
Finish Generating Samples, distribution saved
MobileNetV2(
  (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (layers): Sequential(
    (0): Block(
      (conv1): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): Block(
      (conv1): Conv2d(16, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=96, bias=False)
      (bn2): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(96, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(16, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (2): Block(
      (conv1): Conv2d(24, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=144, bias=False)
      (bn2): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(144, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (3): Block(
      (conv1): Conv2d(24, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(144, 144, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=144, bias=False)
      (bn2): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(144, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (4): Block(
      (conv1): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
      (bn2): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(192, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (5): Block(
      (conv1): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
      (bn2): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(192, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (6): Block(
      (conv1): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(192, 192, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=192, bias=False)
      (bn2): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(192, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (7): Block(
      (conv1): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
      (bn2): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (8): Block(
      (conv1): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
      (bn2): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (9): Block(
      (conv1): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
      (bn2): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (10): Block(
      (conv1): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
      (bn2): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(384, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(64, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (11): Block(
      (conv1): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)
      (bn2): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (12): Block(
      (conv1): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)
      (bn2): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (13): Block(
      (conv1): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(576, 576, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=576, bias=False)
      (bn2): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(576, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (14): Block(
      (conv1): Conv2d(160, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(960, 960, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=960, bias=False)
      (bn2): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(960, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (15): Block(
      (conv1): Conv2d(160, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(960, 960, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=960, bias=False)
      (bn2): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(960, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (16): Block(
      (conv1): Conv2d(160, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(960, 960, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=960, bias=False)
      (bn2): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(960, 320, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(160, 320, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (conv2): Conv2d(320, 1280, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn2): BatchNorm2d(1280, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (linear): Linear(in_features=1280, out_features=10, bias=True)
)
number of parameters: 2296922
clients initializting...
output size: 10
  0%|          | 0/100 [00:00<?, ?it/s]  1%|          | 1/100 [00:00<00:49,  1.98it/s]  2%|▏         | 2/100 [00:01<00:53,  1.84it/s]  3%|▎         | 3/100 [00:01<00:59,  1.63it/s]  4%|▍         | 4/100 [00:05<02:29,  1.55s/it]  5%|▌         | 5/100 [00:06<02:03,  1.30s/it]  6%|▌         | 6/100 [00:06<01:42,  1.09s/it]  7%|▋         | 7/100 [00:07<01:28,  1.05it/s]  8%|▊         | 8/100 [00:08<01:16,  1.20it/s]  9%|▉         | 9/100 [00:08<01:10,  1.29it/s] 10%|█         | 10/100 [00:09<01:07,  1.33it/s] 11%|█         | 11/100 [00:10<01:03,  1.41it/s] 12%|█▏        | 12/100 [00:10<01:03,  1.38it/s] 13%|█▎        | 13/100 [00:11<00:59,  1.46it/s] 14%|█▍        | 14/100 [00:12<00:56,  1.52it/s] 15%|█▌        | 15/100 [00:12<00:57,  1.47it/s] 16%|█▌        | 16/100 [00:13<00:53,  1.56it/s] 17%|█▋        | 17/100 [00:13<00:50,  1.63it/s] 18%|█▊        | 18/100 [00:14<00:51,  1.59it/s] 19%|█▉        | 19/100 [00:15<00:51,  1.58it/s] 20%|██        | 20/100 [00:15<00:52,  1.54it/s] 21%|██        | 21/100 [00:16<00:50,  1.55it/s] 22%|██▏       | 22/100 [00:17<00:49,  1.56it/s] 23%|██▎       | 23/100 [00:17<00:50,  1.52it/s] 24%|██▍       | 24/100 [00:18<00:50,  1.51it/s] 25%|██▌       | 25/100 [00:19<00:50,  1.49it/s] 26%|██▌       | 26/100 [00:19<00:51,  1.45it/s] 27%|██▋       | 27/100 [00:20<00:46,  1.56it/s] 28%|██▊       | 28/100 [00:21<00:47,  1.53it/s] 29%|██▉       | 29/100 [00:21<00:49,  1.44it/s] 30%|███       | 30/100 [00:22<00:45,  1.54it/s] 31%|███       | 31/100 [00:23<00:46,  1.49it/s] 32%|███▏      | 32/100 [00:23<00:46,  1.45it/s] 33%|███▎      | 33/100 [00:24<00:45,  1.48it/s] 34%|███▍      | 34/100 [00:25<00:45,  1.44it/s] 35%|███▌      | 35/100 [00:26<00:45,  1.42it/s] 36%|███▌      | 36/100 [00:26<00:44,  1.43it/s] 37%|███▋      | 37/100 [00:30<01:45,  1.68s/it] 38%|███▊      | 38/100 [00:31<01:26,  1.39s/it] 39%|███▉      | 39/100 [00:31<01:09,  1.14s/it] 40%|████      | 40/100 [00:32<00:58,  1.03it/s] 41%|████      | 41/100 [00:33<00:51,  1.16it/s] 42%|████▏     | 42/100 [00:33<00:45,  1.29it/s] 43%|████▎     | 43/100 [00:34<00:44,  1.27it/s] 44%|████▍     | 44/100 [00:35<00:44,  1.26it/s] 45%|████▌     | 45/100 [00:36<00:43,  1.27it/s] 46%|████▌     | 46/100 [00:36<00:41,  1.30it/s] 47%|████▋     | 47/100 [00:37<00:42,  1.26it/s] 48%|████▊     | 48/100 [00:38<00:38,  1.36it/s] 49%|████▉     | 49/100 [00:39<00:38,  1.33it/s] 50%|█████     | 50/100 [00:39<00:37,  1.35it/s] 51%|█████     | 51/100 [00:40<00:35,  1.39it/s] 52%|█████▏    | 52/100 [00:41<00:37,  1.29it/s] 53%|█████▎    | 53/100 [00:42<00:35,  1.32it/s] 54%|█████▍    | 54/100 [00:42<00:33,  1.38it/s] 55%|█████▌    | 55/100 [00:43<00:33,  1.35it/s] 56%|█████▌    | 56/100 [00:44<00:31,  1.38it/s] 57%|█████▋    | 57/100 [00:44<00:29,  1.46it/s] 58%|█████▊    | 58/100 [00:45<00:28,  1.48it/s] 59%|█████▉    | 59/100 [00:46<00:26,  1.55it/s] 60%|██████    | 60/100 [00:46<00:25,  1.59it/s] 61%|██████    | 61/100 [00:47<00:25,  1.53it/s] 62%|██████▏   | 62/100 [00:48<00:25,  1.50it/s] 63%|██████▎   | 63/100 [00:48<00:24,  1.54it/s] 64%|██████▍   | 64/100 [00:49<00:23,  1.51it/s] 65%|██████▌   | 65/100 [00:49<00:22,  1.54it/s] 66%|██████▌   | 66/100 [00:50<00:22,  1.54it/s] 67%|██████▋   | 67/100 [00:51<00:22,  1.44it/s] 68%|██████▊   | 68/100 [00:52<00:21,  1.50it/s] 69%|██████▉   | 69/100 [00:52<00:19,  1.57it/s] 70%|███████   | 70/100 [00:56<00:47,  1.59s/it] 71%|███████   | 71/100 [00:56<00:37,  1.29s/it] 72%|███████▏  | 72/100 [00:57<00:30,  1.09s/it] 73%|███████▎  | 73/100 [00:58<00:25,  1.08it/s] 74%|███████▍  | 74/100 [00:58<00:22,  1.15it/s] 75%|███████▌  | 75/100 [00:59<00:19,  1.27it/s] 76%|███████▌  | 76/100 [01:00<00:18,  1.30it/s] 77%|███████▋  | 77/100 [01:00<00:17,  1.31it/s] 78%|███████▊  | 78/100 [01:01<00:15,  1.42it/s] 79%|███████▉  | 79/100 [01:02<00:14,  1.46it/s] 80%|████████  | 80/100 [01:02<00:13,  1.46it/s] 81%|████████  | 81/100 [01:03<00:13,  1.44it/s] 82%|████████▏ | 82/100 [01:04<00:11,  1.53it/s] 83%|████████▎ | 83/100 [01:04<00:11,  1.47it/s] 84%|████████▍ | 84/100 [01:05<00:11,  1.45it/s] 85%|████████▌ | 85/100 [01:06<00:09,  1.50it/s] 86%|████████▌ | 86/100 [01:06<00:09,  1.52it/s] 87%|████████▋ | 87/100 [01:07<00:08,  1.52it/s] 88%|████████▊ | 88/100 [01:08<00:08,  1.40it/s] 89%|████████▉ | 89/100 [01:08<00:07,  1.44it/s] 90%|█████████ | 90/100 [01:09<00:07,  1.38it/s] 91%|█████████ | 91/100 [01:10<00:06,  1.49it/s] 92%|█████████▏| 92/100 [01:11<00:05,  1.49it/s] 93%|█████████▎| 93/100 [01:11<00:04,  1.51it/s] 94%|█████████▍| 94/100 [01:12<00:03,  1.52it/s] 95%|█████████▌| 95/100 [01:12<00:03,  1.54it/s] 96%|█████████▌| 96/100 [01:13<00:02,  1.62it/s] 97%|█████████▋| 97/100 [01:14<00:01,  1.60it/s] 98%|█████████▊| 98/100 [01:14<00:01,  1.63it/s] 99%|█████████▉| 99/100 [01:15<00:00,  1.57it/s]100%|██████████| 100/100 [01:16<00:00,  1.40it/s]100%|██████████| 100/100 [01:16<00:00,  1.31it/s]
Number of users per round / total users: 10  /  100
Finished creating FedAvg server.
=== FedPP ===
-------------Round number:  0  -------------
selected users: [26, 86, 2, 55, 75, 93, 16, 73, 54, 95]
K 2 torch.Size([72, 16, 32, 32]) torch.Size([72])
K 2 torch.Size([437, 16, 32, 32]) torch.Size([437])
K 2 torch.Size([457, 16, 32, 32]) torch.Size([457])
K 2 torch.Size([2015, 16, 32, 32]) torch.Size([2015])
K 2 torch.Size([2441, 16, 32, 32]) torch.Size([2441])
K 2 torch.Size([516, 16, 32, 32]) torch.Size([516])
K 2 torch.Size([830, 16, 32, 32]) torch.Size([830])
K 2 torch.Size([117, 16, 32, 32]) torch.Size([117])
K 2 torch.Size([323, 16, 32, 32]) torch.Size([323])
K 2 torch.Size([32, 16, 32, 32]) torch.Size([32])
all data: 500
Local adapation with distilling: 0.001
training loss: tensor(3.2612) feature loss: tensor(0.3931)
Local adapation with distilling: 0.001
training loss: tensor(2.3697) feature loss: tensor(0.4753)
Local adapation with distilling: 0.001
training loss: tensor(2.3198) feature loss: tensor(0.5049)
Local adapation with distilling: 0.001
training loss: tensor(0.9995) feature loss: tensor(0.4684)
Local adapation with distilling: 0.001
training loss: tensor(0.9909) feature loss: tensor(0.5022)
Local adapation with distilling: 0.001
training loss: tensor(2.3828) feature loss: tensor(0.5373)
Local adapation with distilling: 0.001
training loss: tensor(1.4296) feature loss: tensor(0.4679)
Local adapation with distilling: 0.001
training loss: tensor(3.1034) feature loss: tensor(0.3903)
Local adapation with distilling: 0.001
training loss: tensor(2.7575) feature loss: tensor(0.5088)
Local adapation with distilling: 0.001
training loss: tensor(3.2552) feature loss: tensor(0.3389)
         GM acc on global data: 0.1091 length of data: 10000
-------------Round number:  1  -------------
selected users: [80, 84, 33, 81, 93, 17, 36, 82, 69, 65]
K 2 torch.Size([319, 16, 32, 32]) torch.Size([319])
K 2 torch.Size([271, 16, 32, 32]) torch.Size([271])
K 2 torch.Size([546, 16, 32, 32]) torch.Size([546])
K 2 torch.Size([1216, 16, 32, 32]) torch.Size([1216])
K 2 torch.Size([516, 16, 32, 32]) torch.Size([516])
K 2 torch.Size([543, 16, 32, 32]) torch.Size([543])
K 2 torch.Size([979, 16, 32, 32]) torch.Size([979])
K 2 torch.Size([111, 16, 32, 32]) torch.Size([111])
K 2 torch.Size([584, 16, 32, 32]) torch.Size([584])
K 2 torch.Size([356, 16, 32, 32]) torch.Size([356])
all data: 500
Local adapation with distilling: 0.000982
training loss: tensor(1.8788) feature loss: tensor(0.5270)
Local adapation with distilling: 0.000982
training loss: tensor(1.7618) feature loss: tensor(0.4765)
Local adapation with distilling: 0.000982
training loss: tensor(1.7103) feature loss: tensor(0.4728)
Local adapation with distilling: 0.000982
training loss: tensor(1.0059) feature loss: tensor(0.4893)
Local adapation with distilling: 0.000982
training loss: tensor(1.7341) feature loss: tensor(0.4771)
Local adapation with distilling: 0.000982
training loss: tensor(1.4626) feature loss: tensor(0.4712)
Local adapation with distilling: 0.000982
training loss: tensor(1.2957) feature loss: tensor(0.4958)
Local adapation with distilling: 0.000982
training loss: tensor(2.6710) feature loss: tensor(0.3519)
Local adapation with distilling: 0.000982
training loss: tensor(1.5226) feature loss: tensor(0.4411)
Local adapation with distilling: 0.000982
training loss: tensor(1.7416) feature loss: tensor(0.4677)
         GM acc on global data: 0.1679 length of data: 10000
-------------Round number:  2  -------------
selected users: [83, 30, 56, 24, 16, 23, 2, 27, 28, 13]
K 2 torch.Size([372, 16, 32, 32]) torch.Size([372])
K 2 torch.Size([257, 16, 32, 32]) torch.Size([257])
K 2 torch.Size([876, 16, 32, 32]) torch.Size([876])
K 2 torch.Size([1084, 16, 32, 32]) torch.Size([1084])
K 2 torch.Size([830, 16, 32, 32]) torch.Size([830])
K 2 torch.Size([70, 16, 32, 32]) torch.Size([70])
K 2 torch.Size([457, 16, 32, 32]) torch.Size([457])
K 2 torch.Size([269, 16, 32, 32]) torch.Size([269])
K 2 torch.Size([951, 16, 32, 32]) torch.Size([951])
K 2 torch.Size([453, 16, 32, 32]) torch.Size([453])
all data: 500
Local adapation with distilling: 0.000964
training loss: tensor(1.4798) feature loss: tensor(0.5088)
Local adapation with distilling: 0.000964
training loss: tensor(1.6827) feature loss: tensor(0.4872)
Local adapation with distilling: 0.000964
training loss: tensor(1.0175) feature loss: tensor(0.5445)
Local adapation with distilling: 0.000964
training loss: tensor(0.9512) feature loss: tensor(0.4974)
Local adapation with distilling: 0.000964
training loss: tensor(1.1504) feature loss: tensor(0.5719)
Local adapation with distilling: 0.000964
training loss: tensor(2.5326) feature loss: tensor(0.5567)
Local adapation with distilling: 0.000964
training loss: tensor(1.3806) feature loss: tensor(0.5066)
Local adapation with distilling: 0.000964
training loss: tensor(1.7254) feature loss: tensor(0.5390)
Local adapation with distilling: 0.000964
training loss: tensor(1.2512) feature loss: tensor(0.4702)
Local adapation with distilling: 0.000964
training loss: tensor(1.5233) feature loss: tensor(0.4892)
         GM acc on global data: 0.2129 length of data: 10000
-------------Round number:  3  -------------
selected users: [93, 67, 6, 64, 96, 83, 98, 42, 25, 15]
K 2 torch.Size([516, 16, 32, 32]) torch.Size([516])
K 2 torch.Size([543, 16, 32, 32]) torch.Size([543])
K 2 torch.Size([538, 16, 32, 32]) torch.Size([538])
K 2 torch.Size([299, 16, 32, 32]) torch.Size([299])
K 2 torch.Size([1321, 16, 32, 32]) torch.Size([1321])
K 2 torch.Size([372, 16, 32, 32]) torch.Size([372])
K 2 torch.Size([110, 16, 32, 32]) torch.Size([110])
K 2 torch.Size([147, 16, 32, 32]) torch.Size([147])
K 2 torch.Size([484, 16, 32, 32]) torch.Size([484])
K 2 torch.Size([213, 16, 32, 32]) torch.Size([213])
all data: 500
Local adapation with distilling: 0.000946
training loss: tensor(1.1649) feature loss: tensor(0.4052)
Local adapation with distilling: 0.000946
training loss: tensor(0.8757) feature loss: tensor(0.3668)
Local adapation with distilling: 0.000946
training loss: tensor(1.1349) feature loss: tensor(0.4355)
Local adapation with distilling: 0.000946
training loss: tensor(1.4461) feature loss: tensor(0.4987)
Local adapation with distilling: 0.000946
training loss: tensor(0.7405) feature loss: tensor(0.3800)
Local adapation with distilling: 0.000946
training loss: tensor(1.3062) feature loss: tensor(0.4816)
Local adapation with distilling: 0.000946
training loss: tensor(2.1240) feature loss: tensor(0.5707)
Local adapation with distilling: 0.000946
training loss: tensor(1.6178) feature loss: tensor(0.4011)
Local adapation with distilling: 0.000946
training loss: tensor(1.2578) feature loss: tensor(0.5436)
Local adapation with distilling: 0.000946
training loss: tensor(1.1964) feature loss: tensor(0.4202)
         GM acc on global data: 0.194 length of data: 10000
-------------Round number:  4  -------------
selected users: [20, 10, 96, 16, 63, 24, 53, 97, 41, 47]
K 2 torch.Size([37, 16, 32, 32]) torch.Size([37])
K 2 torch.Size([513, 16, 32, 32]) torch.Size([513])
K 2 torch.Size([1321, 16, 32, 32]) torch.Size([1321])
K 2 torch.Size([830, 16, 32, 32]) torch.Size([830])
K 2 torch.Size([582, 16, 32, 32]) torch.Size([582])
K 2 torch.Size([1084, 16, 32, 32]) torch.Size([1084])
K 2 torch.Size([262, 16, 32, 32]) torch.Size([262])
K 2 torch.Size([40, 16, 32, 32]) torch.Size([40])
K 2 torch.Size([502, 16, 32, 32]) torch.Size([502])
K 2 torch.Size([689, 16, 32, 32]) torch.Size([689])
all data: 500
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(2.4242) feature loss: tensor(0.4912)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.5467) feature loss: tensor(0.5147)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(0.7460) feature loss: tensor(0.4225)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.0043) feature loss: tensor(0.6751)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.3361) feature loss: tensor(0.5115)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(0.8776) feature loss: tensor(0.5627)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.4243) feature loss: tensor(0.4427)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(3.0689) feature loss: tensor(0.5206)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.0180) feature loss: tensor(0.4609)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(0.9300) feature loss: tensor(0.4753)
         GM acc on global data: 0.2089 length of data: 10000
-------------Round number:  5  -------------
selected users: [66, 32, 46, 28, 74, 23, 10, 20, 17, 35]
K 2 torch.Size([352, 16, 32, 32]) torch.Size([352])
K 2 torch.Size([257, 16, 32, 32]) torch.Size([257])
K 2 torch.Size([530, 16, 32, 32]) torch.Size([530])
K 2 torch.Size([951, 16, 32, 32]) torch.Size([951])
K 2 torch.Size([309, 16, 32, 32]) torch.Size([309])
K 2 torch.Size([70, 16, 32, 32]) torch.Size([70])
K 2 torch.Size([513, 16, 32, 32]) torch.Size([513])
K 2 torch.Size([37, 16, 32, 32]) torch.Size([37])
K 2 torch.Size([543, 16, 32, 32]) torch.Size([543])
K 2 torch.Size([263, 16, 32, 32]) torch.Size([263])
all data: 500
Local adapation with distilling: 0.00091
training loss: tensor(1.3443) feature loss: tensor(0.5247)
Local adapation with distilling: 0.00091
training loss: tensor(1.8900) feature loss: tensor(0.6409)
Local adapation with distilling: 0.00091
training loss: tensor(1.3655) feature loss: tensor(0.6626)
Local adapation with distilling: 0.00091
training loss: tensor(1.0171) feature loss: tensor(0.5227)
Local adapation with distilling: 0.00091
training loss: tensor(1.5521) feature loss: tensor(0.6136)
Local adapation with distilling: 0.00091
training loss: tensor(2.6860) feature loss: tensor(0.6138)
Local adapation with distilling: 0.00091
training loss: tensor(1.3994) feature loss: tensor(0.5392)
Local adapation with distilling: 0.00091
training loss: tensor(2.3016) feature loss: tensor(0.5246)
Local adapation with distilling: 0.00091
training loss: tensor(1.1155) feature loss: tensor(0.5935)
Local adapation with distilling: 0.00091
training loss: tensor(1.3546) feature loss: tensor(0.6151)
         GM acc on global data: 0.3072 length of data: 10000
-------------Round number:  6  -------------
selected users: [17, 34, 0, 45, 60, 86, 20, 47, 44, 81]
K 2 torch.Size([543, 16, 32, 32]) torch.Size([543])
K 2 torch.Size([1363, 16, 32, 32]) torch.Size([1363])
K 2 torch.Size([171, 16, 32, 32]) torch.Size([171])
K 2 torch.Size([122, 16, 32, 32]) torch.Size([122])
K 2 torch.Size([15, 16, 32, 32]) torch.Size([15])
K 2 torch.Size([437, 16, 32, 32]) torch.Size([437])
K 2 torch.Size([37, 16, 32, 32]) torch.Size([37])
K 2 torch.Size([689, 16, 32, 32]) torch.Size([689])
K 2 torch.Size([668, 16, 32, 32]) torch.Size([668])
K 2 torch.Size([1216, 16, 32, 32]) torch.Size([1216])
all data: 500
Local adapation with distilling: 0.000892
training loss: tensor(0.9808) feature loss: tensor(0.5145)
Local adapation with distilling: 0.000892
training loss: tensor(0.8229) feature loss: tensor(0.4120)
Local adapation with distilling: 0.000892
training loss: tensor(4.8276) feature loss: tensor(0.4408)
Local adapation with distilling: 0.000892
training loss: tensor(1.8751) feature loss: tensor(0.3973)
Local adapation with distilling: 0.000892
training loss: tensor(2.4432) feature loss: tensor(0.4849)
Local adapation with distilling: 0.000892
training loss: tensor(1.1115) feature loss: tensor(0.4358)
Local adapation with distilling: 0.000892
training loss: tensor(2.0743) feature loss: tensor(0.4711)
Local adapation with distilling: 0.000892
training loss: tensor(0.7926) feature loss: tensor(0.4442)
Local adapation with distilling: 0.000892
training loss: tensor(1.0064) feature loss: tensor(0.4180)
Local adapation with distilling: 0.000892
training loss: tensor(0.8143) feature loss: tensor(0.4822)
         GM acc on global data: 0.2628 length of data: 10000
-------------Round number:  7  -------------
selected users: [37, 26, 78, 91, 49, 15, 93, 71, 86, 22]
K 2 torch.Size([139, 16, 32, 32]) torch.Size([139])
K 2 torch.Size([72, 16, 32, 32]) torch.Size([72])
K 2 torch.Size([277, 16, 32, 32]) torch.Size([277])
K 2 torch.Size([1199, 16, 32, 32]) torch.Size([1199])
K 2 torch.Size([695, 16, 32, 32]) torch.Size([695])
K 2 torch.Size([213, 16, 32, 32]) torch.Size([213])
K 2 torch.Size([516, 16, 32, 32]) torch.Size([516])
K 2 torch.Size([159, 16, 32, 32]) torch.Size([159])
K 2 torch.Size([437, 16, 32, 32]) torch.Size([437])
K 2 torch.Size([718, 16, 32, 32]) torch.Size([718])
all data: 500
Local adapation with distilling: 0.000874
training loss: tensor(2.2548) feature loss: tensor(0.6017)
Local adapation with distilling: 0.000874
training loss: tensor(8.7503) feature loss: tensor(0.6675)
Local adapation with distilling: 0.000874
training loss: tensor(1.5168) feature loss: tensor(0.5281)
Local adapation with distilling: 0.000874
training loss: tensor(1.0235) feature loss: tensor(0.5707)
Local adapation with distilling: 0.000874
training loss: tensor(1.1870) feature loss: tensor(0.5766)
Local adapation with distilling: 0.000874
training loss: tensor(1.4320) feature loss: tensor(0.4917)
Local adapation with distilling: 0.000874
training loss: tensor(1.3291) feature loss: tensor(0.6243)
Local adapation with distilling: 0.000874
training loss: tensor(3.3120) feature loss: tensor(0.7035)
Local adapation with distilling: 0.000874
training loss: tensor(1.2542) feature loss: tensor(0.5170)
Local adapation with distilling: 0.000874
training loss: tensor(2.1401) feature loss: tensor(0.6935)
         GM acc on global data: 0.3064 length of data: 10000
-------------Round number:  8  -------------
selected users: [17, 23, 1, 44, 55, 99, 86, 29, 62, 33]
K 2 torch.Size([543, 16, 32, 32]) torch.Size([543])
K 2 torch.Size([70, 16, 32, 32]) torch.Size([70])
K 2 torch.Size([52, 16, 32, 32]) torch.Size([52])
K 2 torch.Size([668, 16, 32, 32]) torch.Size([668])
K 2 torch.Size([2015, 16, 32, 32]) torch.Size([2015])
K 2 torch.Size([359, 16, 32, 32]) torch.Size([359])
K 2 torch.Size([437, 16, 32, 32]) torch.Size([437])
K 2 torch.Size([845, 16, 32, 32]) torch.Size([845])
K 2 torch.Size([359, 16, 32, 32]) torch.Size([359])
K 2 torch.Size([546, 16, 32, 32]) torch.Size([546])
all data: 500
Local adapation with distilling: 0.000856
training loss: tensor(1.0906) feature loss: tensor(0.6703)
Local adapation with distilling: 0.000856
training loss: tensor(2.4333) feature loss: tensor(0.5900)
Local adapation with distilling: 0.000856
training loss: tensor(2.3368) feature loss: tensor(0.4306)
Local adapation with distilling: 0.000856
training loss: tensor(1.0078) feature loss: tensor(0.5536)
Local adapation with distilling: 0.000856
training loss: tensor(0.7849) feature loss: tensor(0.5508)
Local adapation with distilling: 0.000856
training loss: tensor(1.3369) feature loss: tensor(0.5988)
Local adapation with distilling: 0.000856
training loss: tensor(1.1561) feature loss: tensor(0.5781)
Local adapation with distilling: 0.000856
training loss: tensor(1.0267) feature loss: tensor(0.5941)
Local adapation with distilling: 0.000856
training loss: tensor(1.6801) feature loss: tensor(0.6653)
Local adapation with distilling: 0.000856
training loss: tensor(1.1286) feature loss: tensor(0.6530)
         GM acc on global data: 0.2704 length of data: 10000
-------------Round number:  9  -------------
selected users: [75, 42, 46, 68, 3, 39, 23, 20, 70, 73]
K 2 torch.Size([2441, 16, 32, 32]) torch.Size([2441])
K 2 torch.Size([147, 16, 32, 32]) torch.Size([147])
K 2 torch.Size([530, 16, 32, 32]) torch.Size([530])
K 2 torch.Size([993, 16, 32, 32]) torch.Size([993])
K 2 torch.Size([56, 16, 32, 32]) torch.Size([56])
K 2 torch.Size([1283, 16, 32, 32]) torch.Size([1283])
K 2 torch.Size([70, 16, 32, 32]) torch.Size([70])
K 2 torch.Size([37, 16, 32, 32]) torch.Size([37])
K 2 torch.Size([90, 16, 32, 32]) torch.Size([90])
K 2 torch.Size([117, 16, 32, 32]) torch.Size([117])
all data: 500
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.9090) feature loss: tensor(0.6977)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(1.9826) feature loss: tensor(0.7511)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(1.3154) feature loss: tensor(0.6895)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.9741) feature loss: tensor(0.6531)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(3.0529) feature loss: tensor(0.4175)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.9936) feature loss: tensor(0.6958)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(3.0116) feature loss: tensor(0.7753)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(2.9833) feature loss: tensor(0.6043)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(3.0040) feature loss: tensor(0.7218)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(3.4429) feature loss: tensor(0.6486)
         GM acc on global data: 0.2775 length of data: 10000
-------------Round number:  10  -------------
selected users: [19, 14, 43, 37, 66, 3, 79, 41, 38, 68]
K 2 torch.Size([524, 16, 32, 32]) torch.Size([524])
K 2 torch.Size([354, 16, 32, 32]) torch.Size([354])
K 2 torch.Size([372, 16, 32, 32]) torch.Size([372])
K 2 torch.Size([139, 16, 32, 32]) torch.Size([139])
K 2 torch.Size([352, 16, 32, 32]) torch.Size([352])
K 2 torch.Size([56, 16, 32, 32]) torch.Size([56])
K 2 torch.Size([274, 16, 32, 32]) torch.Size([274])
K 2 torch.Size([502, 16, 32, 32]) torch.Size([502])
K 2 torch.Size([239, 16, 32, 32]) torch.Size([239])
K 2 torch.Size([993, 16, 32, 32]) torch.Size([993])
all data: 500
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(1.4024) feature loss: tensor(0.6485)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(1.5102) feature loss: tensor(0.6295)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(2.8449) feature loss: tensor(0.6038)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(2.0252) feature loss: tensor(0.5868)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(1.4375) feature loss: tensor(0.5061)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(2.7685) feature loss: tensor(0.3461)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(1.5510) feature loss: tensor(0.5510)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(1.1713) feature loss: tensor(0.5180)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(1.7498) feature loss: tensor(0.5682)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.8881) feature loss: tensor(0.5080)
         GM acc on global data: 0.2938 length of data: 10000
-------------Round number:  11  -------------
selected users: [46, 49, 22, 58, 41, 98, 62, 29, 30, 51]
K 2 torch.Size([530, 16, 32, 32]) torch.Size([530])
K 2 torch.Size([695, 16, 32, 32]) torch.Size([695])
K 2 torch.Size([718, 16, 32, 32]) torch.Size([718])
K 2 torch.Size([787, 16, 32, 32]) torch.Size([787])
K 2 torch.Size([502, 16, 32, 32]) torch.Size([502])
K 2 torch.Size([110, 16, 32, 32]) torch.Size([110])
K 2 torch.Size([359, 16, 32, 32]) torch.Size([359])
K 2 torch.Size([845, 16, 32, 32]) torch.Size([845])
K 2 torch.Size([257, 16, 32, 32]) torch.Size([257])
K 2 torch.Size([762, 16, 32, 32]) torch.Size([762])
all data: 500
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(1.4952) feature loss: tensor(0.7647)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(1.2496) feature loss: tensor(0.6136)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(2.9635) feature loss: tensor(0.7169)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(1.0539) feature loss: tensor(0.6241)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(1.2625) feature loss: tensor(0.5468)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(3.0313) feature loss: tensor(0.6661)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(1.8685) feature loss: tensor(0.5965)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(1.0504) feature loss: tensor(0.6586)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(1.8716) feature loss: tensor(0.5709)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(1.4642) feature loss: tensor(0.6993)
         GM acc on global data: 0.3451 length of data: 10000
-------------Round number:  12  -------------
selected users: [17, 41, 92, 14, 68, 31, 89, 15, 21, 60]
K 2 torch.Size([543, 16, 32, 32]) torch.Size([543])
K 2 torch.Size([502, 16, 32, 32]) torch.Size([502])
K 2 torch.Size([400, 16, 32, 32]) torch.Size([400])
K 2 torch.Size([354, 16, 32, 32]) torch.Size([354])
K 2 torch.Size([993, 16, 32, 32]) torch.Size([993])
K 2 torch.Size([211, 16, 32, 32]) torch.Size([211])
K 2 torch.Size([523, 16, 32, 32]) torch.Size([523])
K 2 torch.Size([213, 16, 32, 32]) torch.Size([213])
K 2 torch.Size([277, 16, 32, 32]) torch.Size([277])
K 2 torch.Size([15, 16, 32, 32]) torch.Size([15])
all data: 500
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.9431) feature loss: tensor(0.3943)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.9896) feature loss: tensor(0.4438)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(1.1356) feature loss: tensor(0.4707)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(1.2148) feature loss: tensor(0.4921)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.7370) feature loss: tensor(0.4250)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(1.2826) feature loss: tensor(0.4817)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(1.2094) feature loss: tensor(0.5112)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(1.3690) feature loss: tensor(0.4552)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(1.2441) feature loss: tensor(0.4622)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(2.6301) feature loss: tensor(0.6438)
         GM acc on global data: 0.3329 length of data: 10000
-------------Round number:  13  -------------
selected users: [37, 62, 83, 14, 43, 9, 44, 31, 69, 57]
K 2 torch.Size([139, 16, 32, 32]) torch.Size([139])
K 2 torch.Size([359, 16, 32, 32]) torch.Size([359])
K 2 torch.Size([372, 16, 32, 32]) torch.Size([372])
K 2 torch.Size([354, 16, 32, 32]) torch.Size([354])
K 2 torch.Size([372, 16, 32, 32]) torch.Size([372])
K 2 torch.Size([120, 16, 32, 32]) torch.Size([120])
K 2 torch.Size([668, 16, 32, 32]) torch.Size([668])
K 2 torch.Size([211, 16, 32, 32]) torch.Size([211])
K 2 torch.Size([584, 16, 32, 32]) torch.Size([584])
K 2 torch.Size([655, 16, 32, 32]) torch.Size([655])
all data: 500
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(1.8363) feature loss: tensor(0.5850)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(1.2428) feature loss: tensor(0.4914)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(1.7409) feature loss: tensor(0.6881)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(1.2295) feature loss: tensor(0.5105)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(2.8113) feature loss: tensor(0.4861)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(1.9610) feature loss: tensor(0.4964)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(1.0697) feature loss: tensor(0.4736)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(1.4996) feature loss: tensor(0.5177)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(1.0509) feature loss: tensor(0.5088)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(1.0611) feature loss: tensor(0.4900)
         GM acc on global data: 0.3932 length of data: 10000
-------------Round number:  14  -------------
selected users: [24, 39, 35, 44, 55, 70, 82, 40, 91, 65]
K 2 torch.Size([1084, 16, 32, 32]) torch.Size([1084])
K 2 torch.Size([1283, 16, 32, 32]) torch.Size([1283])
K 2 torch.Size([263, 16, 32, 32]) torch.Size([263])
K 2 torch.Size([668, 16, 32, 32]) torch.Size([668])
K 2 torch.Size([2015, 16, 32, 32]) torch.Size([2015])
K 2 torch.Size([90, 16, 32, 32]) torch.Size([90])
K 2 torch.Size([111, 16, 32, 32]) torch.Size([111])
K 2 torch.Size([337, 16, 32, 32]) torch.Size([337])
K 2 torch.Size([1199, 16, 32, 32]) torch.Size([1199])
K 2 torch.Size([356, 16, 32, 32]) torch.Size([356])
all data: 500
Local adapation with distilling: 0.000748
training loss: tensor(0.8333) feature loss: tensor(0.5491)
Local adapation with distilling: 0.000748
training loss: tensor(0.7533) feature loss: tensor(0.4624)
Local adapation with distilling: 0.000748
training loss: tensor(1.2865) feature loss: tensor(0.6025)
Local adapation with distilling: 0.000748
training loss: tensor(0.8473) feature loss: tensor(0.4851)
Local adapation with distilling: 0.000748
training loss: tensor(0.6856) feature loss: tensor(0.4848)
Local adapation with distilling: 0.000748
training loss: tensor(1.8576) feature loss: tensor(0.5085)
Local adapation with distilling: 0.000748
training loss: tensor(1.9126) feature loss: tensor(0.5435)
Local adapation with distilling: 0.000748
training loss: tensor(1.0770) feature loss: tensor(0.7161)
Local adapation with distilling: 0.000748
training loss: tensor(0.8021) feature loss: tensor(0.4862)
Local adapation with distilling: 0.000748
training loss: tensor(1.2286) feature loss: tensor(0.5449)
         GM acc on global data: 0.3923 length of data: 10000
-------------Round number:  15  -------------
selected users: [84, 36, 57, 51, 46, 78, 93, 14, 11, 59]
K 2 torch.Size([271, 16, 32, 32]) torch.Size([271])
K 2 torch.Size([979, 16, 32, 32]) torch.Size([979])
K 2 torch.Size([655, 16, 32, 32]) torch.Size([655])
K 2 torch.Size([762, 16, 32, 32]) torch.Size([762])
K 2 torch.Size([530, 16, 32, 32]) torch.Size([530])
K 2 torch.Size([277, 16, 32, 32]) torch.Size([277])
K 2 torch.Size([516, 16, 32, 32]) torch.Size([516])
K 2 torch.Size([354, 16, 32, 32]) torch.Size([354])
K 2 torch.Size([240, 16, 32, 32]) torch.Size([240])
K 2 torch.Size([131, 16, 32, 32]) torch.Size([131])
all data: 500
Local adapation with distilling: 0.00073
training loss: tensor(1.4957) feature loss: tensor(0.4662)
Local adapation with distilling: 0.00073
training loss: tensor(0.8933) feature loss: tensor(0.5028)
Local adapation with distilling: 0.00073
training loss: tensor(1.0056) feature loss: tensor(0.5518)
Local adapation with distilling: 0.00073
training loss: tensor(1.4430) feature loss: tensor(0.4949)
Local adapation with distilling: 0.00073
training loss: tensor(1.0099) feature loss: tensor(0.4676)
Local adapation with distilling: 0.00073
training loss: tensor(1.2765) feature loss: tensor(0.4629)
Local adapation with distilling: 0.00073
training loss: tensor(1.1704) feature loss: tensor(0.4795)
Local adapation with distilling: 0.00073
training loss: tensor(1.2596) feature loss: tensor(0.5286)
Local adapation with distilling: 0.00073
training loss: tensor(1.4454) feature loss: tensor(0.5264)
Local adapation with distilling: 0.00073
training loss: tensor(2.0157) feature loss: tensor(0.4789)
         GM acc on global data: 0.4182 length of data: 10000
-------------Round number:  16  -------------
selected users: [7, 25, 71, 42, 47, 29, 63, 88, 50, 9]
K 2 torch.Size([110, 16, 32, 32]) torch.Size([110])
K 2 torch.Size([484, 16, 32, 32]) torch.Size([484])
K 2 torch.Size([159, 16, 32, 32]) torch.Size([159])
K 2 torch.Size([147, 16, 32, 32]) torch.Size([147])
K 2 torch.Size([689, 16, 32, 32]) torch.Size([689])
K 2 torch.Size([845, 16, 32, 32]) torch.Size([845])
K 2 torch.Size([582, 16, 32, 32]) torch.Size([582])
K 2 torch.Size([210, 16, 32, 32]) torch.Size([210])
K 2 torch.Size([118, 16, 32, 32]) torch.Size([118])
K 2 torch.Size([120, 16, 32, 32]) torch.Size([120])
all data: 500
Local adapation with distilling: 0.000712
training loss: tensor(1.4422) feature loss: tensor(0.2753)
Local adapation with distilling: 0.000712
training loss: tensor(0.8608) feature loss: tensor(0.4452)
Local adapation with distilling: 0.000712
training loss: tensor(1.3395) feature loss: tensor(0.3692)
Local adapation with distilling: 0.000712
training loss: tensor(1.2845) feature loss: tensor(0.3944)
Local adapation with distilling: 0.000712
training loss: tensor(0.7540) feature loss: tensor(0.4092)
Local adapation with distilling: 0.000712
training loss: tensor(0.7587) feature loss: tensor(0.4195)
Local adapation with distilling: 0.000712
training loss: tensor(0.9170) feature loss: tensor(0.4006)
Local adapation with distilling: 0.000712
training loss: tensor(1.6134) feature loss: tensor(0.4215)
Local adapation with distilling: 0.000712
training loss: tensor(5.1074) feature loss: tensor(0.3401)
Local adapation with distilling: 0.000712
training loss: tensor(1.4138) feature loss: tensor(0.3069)
         GM acc on global data: 0.4152 length of data: 10000
-------------Round number:  17  -------------
selected users: [71, 28, 9, 4, 73, 34, 94, 92, 47, 37]
K 2 torch.Size([159, 16, 32, 32]) torch.Size([159])
K 2 torch.Size([951, 16, 32, 32]) torch.Size([951])
K 2 torch.Size([120, 16, 32, 32]) torch.Size([120])
K 2 torch.Size([156, 16, 32, 32]) torch.Size([156])
K 2 torch.Size([117, 16, 32, 32]) torch.Size([117])
K 2 torch.Size([1363, 16, 32, 32]) torch.Size([1363])
K 2 torch.Size([125, 16, 32, 32]) torch.Size([125])
K 2 torch.Size([400, 16, 32, 32]) torch.Size([400])
K 2 torch.Size([689, 16, 32, 32]) torch.Size([689])
K 2 torch.Size([139, 16, 32, 32]) torch.Size([139])
all data: 500
Local adapation with distilling: 0.000694
training loss: tensor(1.2060) feature loss: tensor(0.4162)
Local adapation with distilling: 0.000694
training loss: tensor(0.6238) feature loss: tensor(0.3084)
Local adapation with distilling: 0.000694
training loss: tensor(1.1335) feature loss: tensor(0.2452)
Local adapation with distilling: 0.000694
training loss: tensor(1.1727) feature loss: tensor(0.3318)
Local adapation with distilling: 0.000694
training loss: tensor(2.3442) feature loss: tensor(0.3325)
Local adapation with distilling: 0.000694
training loss: tensor(0.5545) feature loss: tensor(0.2895)
Local adapation with distilling: 0.000694
training loss: tensor(1.5104) feature loss: tensor(0.2621)
Local adapation with distilling: 0.000694
training loss: tensor(0.8508) feature loss: tensor(0.3380)
Local adapation with distilling: 0.000694
training loss: tensor(0.6270) feature loss: tensor(0.3032)
Local adapation with distilling: 0.000694
training loss: tensor(1.3098) feature loss: tensor(0.2901)
         GM acc on global data: 0.4017 length of data: 10000
-------------Round number:  18  -------------
selected users: [53, 47, 43, 54, 33, 48, 0, 12, 44, 91]
K 2 torch.Size([262, 16, 32, 32]) torch.Size([262])
K 2 torch.Size([689, 16, 32, 32]) torch.Size([689])
K 2 torch.Size([372, 16, 32, 32]) torch.Size([372])
K 2 torch.Size([323, 16, 32, 32]) torch.Size([323])
K 2 torch.Size([546, 16, 32, 32]) torch.Size([546])
K 2 torch.Size([309, 16, 32, 32]) torch.Size([309])
K 2 torch.Size([171, 16, 32, 32]) torch.Size([171])
K 2 torch.Size([48, 16, 32, 32]) torch.Size([48])
K 2 torch.Size([668, 16, 32, 32]) torch.Size([668])
K 2 torch.Size([1199, 16, 32, 32]) torch.Size([1199])
all data: 500
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(1.3305) feature loss: tensor(0.4562)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.9557) feature loss: tensor(0.5483)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(2.9896) feature loss: tensor(0.4845)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(1.3636) feature loss: tensor(0.4325)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(1.0385) feature loss: tensor(0.5835)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(1.4402) feature loss: tensor(0.4665)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(9.8493) feature loss: tensor(0.4554)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(2.9670) feature loss: tensor(0.5147)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.9226) feature loss: tensor(0.4584)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.8833) feature loss: tensor(0.5092)
         GM acc on global data: 0.4244 length of data: 10000
-------------Round number:  19  -------------
selected users: [85, 72, 16, 18, 2, 38, 90, 30, 83, 61]
K 2 torch.Size([238, 16, 32, 32]) torch.Size([238])
K 2 torch.Size([206, 16, 32, 32]) torch.Size([206])
K 2 torch.Size([830, 16, 32, 32]) torch.Size([830])
K 2 torch.Size([526, 16, 32, 32]) torch.Size([526])
K 2 torch.Size([457, 16, 32, 32]) torch.Size([457])
K 2 torch.Size([239, 16, 32, 32]) torch.Size([239])
K 2 torch.Size([800, 16, 32, 32]) torch.Size([800])
K 2 torch.Size([257, 16, 32, 32]) torch.Size([257])
K 2 torch.Size([372, 16, 32, 32]) torch.Size([372])
K 2 torch.Size([711, 16, 32, 32]) torch.Size([711])
all data: 500
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(1.0030) feature loss: tensor(0.3440)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(1.2117) feature loss: tensor(0.3309)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.7623) feature loss: tensor(0.4497)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.9178) feature loss: tensor(0.3846)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.8934) feature loss: tensor(0.3705)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(1.3719) feature loss: tensor(0.6167)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.7670) feature loss: tensor(0.4339)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(1.1283) feature loss: tensor(0.3525)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(1.0472) feature loss: tensor(0.3224)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.8681) feature loss: tensor(0.4322)
         GM acc on global data: 0.4159 length of data: 10000
-------------Round number:  20  -------------
selected users: [70, 74, 2, 44, 56, 48, 12, 36, 0, 49]
K 2 torch.Size([90, 16, 32, 32]) torch.Size([90])
K 2 torch.Size([309, 16, 32, 32]) torch.Size([309])
K 2 torch.Size([457, 16, 32, 32]) torch.Size([457])
K 2 torch.Size([668, 16, 32, 32]) torch.Size([668])
K 2 torch.Size([876, 16, 32, 32]) torch.Size([876])
K 2 torch.Size([309, 16, 32, 32]) torch.Size([309])
K 2 torch.Size([48, 16, 32, 32]) torch.Size([48])
K 2 torch.Size([979, 16, 32, 32]) torch.Size([979])
K 2 torch.Size([171, 16, 32, 32]) torch.Size([171])
K 2 torch.Size([695, 16, 32, 32]) torch.Size([695])
all data: 500
Local adapation with distilling: 0.00064
training loss: tensor(1.7032) feature loss: tensor(0.3213)
Local adapation with distilling: 0.00064
training loss: tensor(0.9444) feature loss: tensor(0.3980)
Local adapation with distilling: 0.00064
training loss: tensor(0.8464) feature loss: tensor(0.4034)
Local adapation with distilling: 0.00064
training loss: tensor(0.7054) feature loss: tensor(0.3998)
Local adapation with distilling: 0.00064
training loss: tensor(0.7110) feature loss: tensor(0.3901)
Local adapation with distilling: 0.00064
training loss: tensor(1.0220) feature loss: tensor(0.3996)
Local adapation with distilling: 0.00064
training loss: tensor(2.1492) feature loss: tensor(0.3475)
Local adapation with distilling: 0.00064
training loss: tensor(0.7305) feature loss: tensor(0.4517)
Local adapation with distilling: 0.00064
training loss: tensor(9.0174) feature loss: tensor(0.3550)
Local adapation with distilling: 0.00064
training loss: tensor(0.7956) feature loss: tensor(0.4874)
         GM acc on global data: 0.4142 length of data: 10000
-------------Round number:  21  -------------
selected users: [23, 81, 85, 34, 62, 46, 42, 31, 93, 11]
K 2 torch.Size([70, 16, 32, 32]) torch.Size([70])
K 2 torch.Size([1216, 16, 32, 32]) torch.Size([1216])
K 2 torch.Size([238, 16, 32, 32]) torch.Size([238])
K 2 torch.Size([1363, 16, 32, 32]) torch.Size([1363])
K 2 torch.Size([359, 16, 32, 32]) torch.Size([359])
K 2 torch.Size([530, 16, 32, 32]) torch.Size([530])
K 2 torch.Size([147, 16, 32, 32]) torch.Size([147])
K 2 torch.Size([211, 16, 32, 32]) torch.Size([211])
K 2 torch.Size([516, 16, 32, 32]) torch.Size([516])
K 2 torch.Size([240, 16, 32, 32]) torch.Size([240])
all data: 500
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(1.8821) feature loss: tensor(0.2292)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.5184) feature loss: tensor(0.3316)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(1.0525) feature loss: tensor(0.3530)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.5894) feature loss: tensor(0.3774)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(1.1068) feature loss: tensor(0.3538)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.8659) feature loss: tensor(0.3254)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(1.2248) feature loss: tensor(0.3504)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(1.0889) feature loss: tensor(0.3280)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.9757) feature loss: tensor(0.3613)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(1.1128) feature loss: tensor(0.3596)
         GM acc on global data: 0.3701 length of data: 10000
-------------Round number:  22  -------------
selected users: [2, 49, 82, 31, 37, 12, 87, 42, 99, 85]
K 2 torch.Size([457, 16, 32, 32]) torch.Size([457])
K 2 torch.Size([695, 16, 32, 32]) torch.Size([695])
K 2 torch.Size([111, 16, 32, 32]) torch.Size([111])
K 2 torch.Size([211, 16, 32, 32]) torch.Size([211])
K 2 torch.Size([139, 16, 32, 32]) torch.Size([139])
K 2 torch.Size([48, 16, 32, 32]) torch.Size([48])
K 2 torch.Size([93, 16, 32, 32]) torch.Size([93])
K 2 torch.Size([147, 16, 32, 32]) torch.Size([147])
K 2 torch.Size([359, 16, 32, 32]) torch.Size([359])
K 2 torch.Size([238, 16, 32, 32]) torch.Size([238])
all data: 500
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.7317) feature loss: tensor(0.3787)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.5952) feature loss: tensor(0.3353)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(2.1170) feature loss: tensor(0.2332)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(1.0692) feature loss: tensor(0.2653)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(1.1178) feature loss: tensor(0.2500)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(1.6072) feature loss: tensor(0.2072)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(2.8052) feature loss: tensor(0.2754)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(1.0947) feature loss: tensor(0.3722)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.7469) feature loss: tensor(0.3873)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.9327) feature loss: tensor(0.3498)
         GM acc on global data: 0.382 length of data: 10000
-------------Round number:  23  -------------
selected users: [26, 80, 82, 68, 77, 37, 3, 55, 20, 17]
K 2 torch.Size([72, 16, 32, 32]) torch.Size([72])
K 2 torch.Size([319, 16, 32, 32]) torch.Size([319])
K 2 torch.Size([111, 16, 32, 32]) torch.Size([111])
K 2 torch.Size([993, 16, 32, 32]) torch.Size([993])
K 2 torch.Size([693, 16, 32, 32]) torch.Size([693])
K 2 torch.Size([139, 16, 32, 32]) torch.Size([139])
K 2 torch.Size([56, 16, 32, 32]) torch.Size([56])
K 2 torch.Size([2015, 16, 32, 32]) torch.Size([2015])
K 2 torch.Size([37, 16, 32, 32]) torch.Size([37])
K 2 torch.Size([543, 16, 32, 32]) torch.Size([543])
all data: 500
Local adapation with distilling: 0.000586
training loss: tensor(11.7952) feature loss: tensor(0.5032)
Local adapation with distilling: 0.000586
training loss: tensor(1.2895) feature loss: tensor(0.5775)
Local adapation with distilling: 0.000586
training loss: tensor(2.4016) feature loss: tensor(0.6995)
Local adapation with distilling: 0.000586
training loss: tensor(0.9325) feature loss: tensor(0.6717)
Local adapation with distilling: 0.000586
training loss: tensor(1.0658) feature loss: tensor(0.7881)
Local adapation with distilling: 0.000586
training loss: tensor(1.5418) feature loss: tensor(0.5747)
Local adapation with distilling: 0.000586
training loss: tensor(2.5903) feature loss: tensor(0.3614)
Local adapation with distilling: 0.000586
training loss: tensor(0.7319) feature loss: tensor(0.5884)
Local adapation with distilling: 0.000586
training loss: tensor(2.4524) feature loss: tensor(0.4736)
Local adapation with distilling: 0.000586
training loss: tensor(1.1674) feature loss: tensor(0.6753)
         GM acc on global data: 0.3503 length of data: 10000
-------------Round number:  24  -------------
selected users: [26, 31, 37, 86, 76, 14, 88, 48, 71, 67]
K 2 torch.Size([72, 16, 32, 32]) torch.Size([72])
K 2 torch.Size([211, 16, 32, 32]) torch.Size([211])
K 2 torch.Size([139, 16, 32, 32]) torch.Size([139])
K 2 torch.Size([437, 16, 32, 32]) torch.Size([437])
K 2 torch.Size([2848, 16, 32, 32]) torch.Size([2848])
K 2 torch.Size([354, 16, 32, 32]) torch.Size([354])
K 2 torch.Size([210, 16, 32, 32]) torch.Size([210])
K 2 torch.Size([309, 16, 32, 32]) torch.Size([309])
K 2 torch.Size([159, 16, 32, 32]) torch.Size([159])
K 2 torch.Size([543, 16, 32, 32]) torch.Size([543])
all data: 500
Local adapation with distilling: 0.000568
training loss: tensor(21.5066) feature loss: tensor(0.5961)
Local adapation with distilling: 0.000568
training loss: tensor(4.7336) feature loss: tensor(0.7825)
Local adapation with distilling: 0.000568
training loss: tensor(4.4438) feature loss: tensor(0.5360)
Local adapation with distilling: 0.000568
training loss: tensor(2.9290) feature loss: tensor(0.6327)
Local adapation with distilling: 0.000568
training loss: tensor(1.7782) feature loss: tensor(0.6403)
Local adapation with distilling: 0.000568
training loss: tensor(4.2736) feature loss: tensor(0.7592)
Local adapation with distilling: 0.000568
training loss: tensor(4.4838) feature loss: tensor(0.7066)
Local adapation with distilling: 0.000568
training loss: tensor(4.0407) feature loss: tensor(0.7377)
Local adapation with distilling: 0.000568
training loss: tensor(5.1335) feature loss: tensor(0.8112)
Local adapation with distilling: 0.000568
training loss: tensor(3.0781) feature loss: tensor(0.7601)
         GM acc on global data: 0.345 length of data: 10000
-------------Round number:  25  -------------
selected users: [41, 29, 33, 65, 74, 6, 57, 89, 87, 98]
K 2 torch.Size([502, 16, 32, 32]) torch.Size([502])
K 2 torch.Size([845, 16, 32, 32]) torch.Size([845])
K 2 torch.Size([546, 16, 32, 32]) torch.Size([546])
K 2 torch.Size([356, 16, 32, 32]) torch.Size([356])
K 2 torch.Size([309, 16, 32, 32]) torch.Size([309])
K 2 torch.Size([538, 16, 32, 32]) torch.Size([538])
K 2 torch.Size([655, 16, 32, 32]) torch.Size([655])
K 2 torch.Size([523, 16, 32, 32]) torch.Size([523])
K 2 torch.Size([93, 16, 32, 32]) torch.Size([93])
K 2 torch.Size([110, 16, 32, 32]) torch.Size([110])
all data: 500
Local adapation with distilling: 0.00055
training loss: tensor(0.9818) feature loss: tensor(0.4921)
Local adapation with distilling: 0.00055
training loss: tensor(0.8036) feature loss: tensor(0.4693)
Local adapation with distilling: 0.00055
training loss: tensor(0.9752) feature loss: tensor(0.5675)
Local adapation with distilling: 0.00055
training loss: tensor(1.1937) feature loss: tensor(0.5935)
Local adapation with distilling: 0.00055
training loss: tensor(1.0463) feature loss: tensor(0.3963)
Local adapation with distilling: 0.00055
training loss: tensor(1.3379) feature loss: tensor(0.4625)
Local adapation with distilling: 0.00055
training loss: tensor(0.8959) feature loss: tensor(0.5815)
Local adapation with distilling: 0.00055
training loss: tensor(1.1240) feature loss: tensor(0.4354)
Local adapation with distilling: 0.00055
training loss: tensor(1.6025) feature loss: tensor(0.4932)
Local adapation with distilling: 0.00055
training loss: tensor(1.8257) feature loss: tensor(0.3756)
         GM acc on global data: 0.3647 length of data: 10000
-------------Round number:  26  -------------
selected users: [8, 69, 84, 41, 25, 5, 63, 95, 33, 70]
K 2 torch.Size([1059, 16, 32, 32]) torch.Size([1059])
K 2 torch.Size([584, 16, 32, 32]) torch.Size([584])
K 2 torch.Size([271, 16, 32, 32]) torch.Size([271])
K 2 torch.Size([502, 16, 32, 32]) torch.Size([502])
K 2 torch.Size([484, 16, 32, 32]) torch.Size([484])
K 2 torch.Size([479, 16, 32, 32]) torch.Size([479])
K 2 torch.Size([582, 16, 32, 32]) torch.Size([582])
K 2 torch.Size([32, 16, 32, 32]) torch.Size([32])
K 2 torch.Size([546, 16, 32, 32]) torch.Size([546])
K 2 torch.Size([90, 16, 32, 32]) torch.Size([90])
all data: 500
Local adapation with distilling: 0.000532
training loss: tensor(0.7927) feature loss: tensor(0.4266)
Local adapation with distilling: 0.000532
training loss: tensor(0.7832) feature loss: tensor(0.3443)
Local adapation with distilling: 0.000532
training loss: tensor(1.5194) feature loss: tensor(0.3092)
Local adapation with distilling: 0.000532
training loss: tensor(0.6523) feature loss: tensor(0.3423)
Local adapation with distilling: 0.000532
training loss: tensor(0.8648) feature loss: tensor(0.3797)
Local adapation with distilling: 0.000532
training loss: tensor(1.4224) feature loss: tensor(0.3833)
Local adapation with distilling: 0.000532
training loss: tensor(0.9794) feature loss: tensor(0.3434)
Local adapation with distilling: 0.000532
training loss: tensor(1.9113) feature loss: tensor(0.3059)
Local adapation with distilling: 0.000532
training loss: tensor(0.7890) feature loss: tensor(0.3447)
Local adapation with distilling: 0.000532
training loss: tensor(2.7330) feature loss: tensor(0.3022)
         GM acc on global data: 0.4216 length of data: 10000
-------------Round number:  27  -------------
selected users: [89, 68, 43, 50, 40, 95, 27, 85, 22, 44]
K 2 torch.Size([523, 16, 32, 32]) torch.Size([523])
K 2 torch.Size([993, 16, 32, 32]) torch.Size([993])
K 2 torch.Size([372, 16, 32, 32]) torch.Size([372])
K 2 torch.Size([118, 16, 32, 32]) torch.Size([118])
K 2 torch.Size([337, 16, 32, 32]) torch.Size([337])
K 2 torch.Size([32, 16, 32, 32]) torch.Size([32])
K 2 torch.Size([269, 16, 32, 32]) torch.Size([269])
K 2 torch.Size([238, 16, 32, 32]) torch.Size([238])
K 2 torch.Size([718, 16, 32, 32]) torch.Size([718])
K 2 torch.Size([668, 16, 32, 32]) torch.Size([668])
all data: 500
Local adapation with distilling: 0.000514
training loss: tensor(0.8834) feature loss: tensor(0.4224)
Local adapation with distilling: 0.000514
training loss: tensor(0.6568) feature loss: tensor(0.3769)
Local adapation with distilling: 0.000514
training loss: tensor(1.9374) feature loss: tensor(0.3931)
Local adapation with distilling: 0.000514
training loss: tensor(4.9325) feature loss: tensor(0.4251)
Local adapation with distilling: 0.000514
training loss: tensor(0.9670) feature loss: tensor(0.3712)
Local adapation with distilling: 0.000514
training loss: tensor(1.7522) feature loss: tensor(0.4120)
Local adapation with distilling: 0.000514
training loss: tensor(4.8060) feature loss: tensor(0.4213)
Local adapation with distilling: 0.000514
training loss: tensor(1.0526) feature loss: tensor(0.3963)
Local adapation with distilling: 0.000514
training loss: tensor(1.7745) feature loss: tensor(0.4228)
Local adapation with distilling: 0.000514
training loss: tensor(0.8847) feature loss: tensor(0.3766)
         GM acc on global data: 0.4223 length of data: 10000
-------------Round number:  28  -------------
selected users: [67, 14, 0, 86, 13, 18, 30, 36, 52, 95]
K 2 torch.Size([543, 16, 32, 32]) torch.Size([543])
K 2 torch.Size([354, 16, 32, 32]) torch.Size([354])
K 2 torch.Size([171, 16, 32, 32]) torch.Size([171])
K 2 torch.Size([437, 16, 32, 32]) torch.Size([437])
K 2 torch.Size([453, 16, 32, 32]) torch.Size([453])
K 2 torch.Size([526, 16, 32, 32]) torch.Size([526])
K 2 torch.Size([257, 16, 32, 32]) torch.Size([257])
K 2 torch.Size([979, 16, 32, 32]) torch.Size([979])
K 2 torch.Size([1078, 16, 32, 32]) torch.Size([1078])
K 2 torch.Size([32, 16, 32, 32]) torch.Size([32])
all data: 500
Local adapation with distilling: 0.000496
training loss: tensor(0.6930) feature loss: tensor(0.2810)
Local adapation with distilling: 0.000496
training loss: tensor(1.1448) feature loss: tensor(0.2981)
Local adapation with distilling: 0.000496
training loss: tensor(2.7927) feature loss: tensor(0.2672)
Local adapation with distilling: 0.000496
training loss: tensor(0.7143) feature loss: tensor(0.2569)
Local adapation with distilling: 0.000496
training loss: tensor(1.1514) feature loss: tensor(0.2724)
Local adapation with distilling: 0.000496
training loss: tensor(0.7878) feature loss: tensor(0.3938)
Local adapation with distilling: 0.000496
training loss: tensor(1.3037) feature loss: tensor(0.2581)
Local adapation with distilling: 0.000496
training loss: tensor(0.6135) feature loss: tensor(0.2918)
Local adapation with distilling: 0.000496
training loss: tensor(0.5362) feature loss: tensor(0.2728)
Local adapation with distilling: 0.000496
training loss: tensor(1.4361) feature loss: tensor(0.1628)
         GM acc on global data: 0.3738 length of data: 10000
-------------Round number:  29  -------------
selected users: [73, 8, 10, 7, 19, 71, 92, 25, 38, 12]
K 2 torch.Size([117, 16, 32, 32]) torch.Size([117])
K 2 torch.Size([1059, 16, 32, 32]) torch.Size([1059])
K 2 torch.Size([513, 16, 32, 32]) torch.Size([513])
K 2 torch.Size([110, 16, 32, 32]) torch.Size([110])
K 2 torch.Size([524, 16, 32, 32]) torch.Size([524])
K 2 torch.Size([159, 16, 32, 32]) torch.Size([159])
K 2 torch.Size([400, 16, 32, 32]) torch.Size([400])
K 2 torch.Size([484, 16, 32, 32]) torch.Size([484])
K 2 torch.Size([239, 16, 32, 32]) torch.Size([239])
K 2 torch.Size([48, 16, 32, 32]) torch.Size([48])
all data: 500
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(2.5576) feature loss: tensor(0.1978)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.5421) feature loss: tensor(0.2981)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(1.4155) feature loss: tensor(0.2549)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(1.1052) feature loss: tensor(0.1762)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.6829) feature loss: tensor(0.2539)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(1.0593) feature loss: tensor(0.2173)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.7224) feature loss: tensor(0.2745)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.6604) feature loss: tensor(0.2585)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.9781) feature loss: tensor(0.2928)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(1.6362) feature loss: tensor(0.1692)
         GM acc on global data: 0.3838 length of data: 10000
-------------Round number:  30  -------------
selected users: [20, 91, 34, 52, 8, 74, 21, 88, 80, 89]
K 2 torch.Size([37, 16, 32, 32]) torch.Size([37])
K 2 torch.Size([1199, 16, 32, 32]) torch.Size([1199])
K 2 torch.Size([1363, 16, 32, 32]) torch.Size([1363])
K 2 torch.Size([1078, 16, 32, 32]) torch.Size([1078])
K 2 torch.Size([1059, 16, 32, 32]) torch.Size([1059])
K 2 torch.Size([309, 16, 32, 32]) torch.Size([309])
K 2 torch.Size([277, 16, 32, 32]) torch.Size([277])
K 2 torch.Size([210, 16, 32, 32]) torch.Size([210])
K 2 torch.Size([319, 16, 32, 32]) torch.Size([319])
K 2 torch.Size([523, 16, 32, 32]) torch.Size([523])
all data: 500
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(1.3967) feature loss: tensor(0.1602)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.6436) feature loss: tensor(0.2551)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.4646) feature loss: tensor(0.2592)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.4523) feature loss: tensor(0.2551)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.4311) feature loss: tensor(0.2649)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.7320) feature loss: tensor(0.2407)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.7896) feature loss: tensor(0.2261)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(2.3444) feature loss: tensor(0.2386)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.8274) feature loss: tensor(0.2568)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.8542) feature loss: tensor(0.2700)
         GM acc on global data: 0.3922 length of data: 10000
-------------Round number:  31  -------------
selected users: [17, 33, 76, 3, 56, 0, 37, 8, 60, 67]
K 2 torch.Size([543, 16, 32, 32]) torch.Size([543])
K 2 torch.Size([546, 16, 32, 32]) torch.Size([546])
K 2 torch.Size([2848, 16, 32, 32]) torch.Size([2848])
K 2 torch.Size([56, 16, 32, 32]) torch.Size([56])
K 2 torch.Size([876, 16, 32, 32]) torch.Size([876])
K 2 torch.Size([171, 16, 32, 32]) torch.Size([171])
K 2 torch.Size([139, 16, 32, 32]) torch.Size([139])
K 2 torch.Size([1059, 16, 32, 32]) torch.Size([1059])
K 2 torch.Size([15, 16, 32, 32]) torch.Size([15])
K 2 torch.Size([543, 16, 32, 32]) torch.Size([543])
all data: 500
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(1.0333) feature loss: tensor(0.4688)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.9869) feature loss: tensor(0.4487)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.9275) feature loss: tensor(0.4489)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(2.5308) feature loss: tensor(0.3128)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.9112) feature loss: tensor(0.4640)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(7.0677) feature loss: tensor(0.4251)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(1.8449) feature loss: tensor(0.3836)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.7623) feature loss: tensor(0.4700)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(2.0751) feature loss: tensor(0.3917)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.8785) feature loss: tensor(0.4320)
         GM acc on global data: 0.4152 length of data: 10000
-------------Round number:  32  -------------
selected users: [22, 39, 85, 97, 55, 33, 80, 13, 27, 96]
K 2 torch.Size([718, 16, 32, 32]) torch.Size([718])
K 2 torch.Size([1283, 16, 32, 32]) torch.Size([1283])
K 2 torch.Size([238, 16, 32, 32]) torch.Size([238])
K 2 torch.Size([40, 16, 32, 32]) torch.Size([40])
K 2 torch.Size([2015, 16, 32, 32]) torch.Size([2015])
K 2 torch.Size([546, 16, 32, 32]) torch.Size([546])
K 2 torch.Size([319, 16, 32, 32]) torch.Size([319])
K 2 torch.Size([453, 16, 32, 32]) torch.Size([453])
K 2 torch.Size([269, 16, 32, 32]) torch.Size([269])
K 2 torch.Size([1321, 16, 32, 32]) torch.Size([1321])
all data: 500
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(1.1952) feature loss: tensor(0.4883)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(1.0362) feature loss: tensor(0.5261)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(1.2993) feature loss: tensor(0.5504)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(8.9345) feature loss: tensor(0.3521)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.7252) feature loss: tensor(0.5338)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(1.0493) feature loss: tensor(0.5735)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(1.2919) feature loss: tensor(0.6517)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(1.7209) feature loss: tensor(0.4678)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(2.6130) feature loss: tensor(0.4762)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.7700) feature loss: tensor(0.4861)
         GM acc on global data: 0.4189 length of data: 10000
-------------Round number:  33  -------------
selected users: [56, 90, 95, 82, 60, 71, 6, 81, 2, 70]
K 2 torch.Size([876, 16, 32, 32]) torch.Size([876])
K 2 torch.Size([800, 16, 32, 32]) torch.Size([800])
K 2 torch.Size([32, 16, 32, 32]) torch.Size([32])
K 2 torch.Size([111, 16, 32, 32]) torch.Size([111])
K 2 torch.Size([15, 16, 32, 32]) torch.Size([15])
K 2 torch.Size([159, 16, 32, 32]) torch.Size([159])
K 2 torch.Size([538, 16, 32, 32]) torch.Size([538])
K 2 torch.Size([1216, 16, 32, 32]) torch.Size([1216])
K 2 torch.Size([457, 16, 32, 32]) torch.Size([457])
K 2 torch.Size([90, 16, 32, 32]) torch.Size([90])
all data: 500
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.7047) feature loss: tensor(0.5181)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.8450) feature loss: tensor(0.5515)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(2.1389) feature loss: tensor(0.2257)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(2.0110) feature loss: tensor(0.4659)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(2.0698) feature loss: tensor(0.2472)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(1.4253) feature loss: tensor(0.3702)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(1.9711) feature loss: tensor(0.4051)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.6268) feature loss: tensor(0.4519)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(1.0464) feature loss: tensor(0.3286)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(4.9501) feature loss: tensor(0.2889)
         GM acc on global data: 0.3556 length of data: 10000
-------------Round number:  34  -------------
selected users: [14, 74, 15, 4, 32, 59, 91, 10, 50, 53]
K 2 torch.Size([354, 16, 32, 32]) torch.Size([354])
K 2 torch.Size([309, 16, 32, 32]) torch.Size([309])
K 2 torch.Size([213, 16, 32, 32]) torch.Size([213])
K 2 torch.Size([156, 16, 32, 32]) torch.Size([156])
K 2 torch.Size([257, 16, 32, 32]) torch.Size([257])
K 2 torch.Size([131, 16, 32, 32]) torch.Size([131])
K 2 torch.Size([1199, 16, 32, 32]) torch.Size([1199])
K 2 torch.Size([513, 16, 32, 32]) torch.Size([513])
K 2 torch.Size([118, 16, 32, 32]) torch.Size([118])
K 2 torch.Size([262, 16, 32, 32]) torch.Size([262])
all data: 500
Local adapation with distilling: 0.000388
training loss: tensor(1.6575) feature loss: tensor(0.4873)
Local adapation with distilling: 0.000388
training loss: tensor(1.1299) feature loss: tensor(0.5120)
Local adapation with distilling: 0.000388
training loss: tensor(1.3703) feature loss: tensor(0.4238)
Local adapation with distilling: 0.000388
training loss: tensor(2.1674) feature loss: tensor(0.4400)
Local adapation with distilling: 0.000388
training loss: tensor(9.1639) feature loss: tensor(0.4445)
Local adapation with distilling: 0.000388
training loss: tensor(1.7728) feature loss: tensor(0.5524)
Local adapation with distilling: 0.000388
training loss: tensor(0.8016) feature loss: tensor(0.4551)
Local adapation with distilling: 0.000388
training loss: tensor(2.4322) feature loss: tensor(0.4321)
Local adapation with distilling: 0.000388
training loss: tensor(4.2057) feature loss: tensor(0.3356)
Local adapation with distilling: 0.000388
training loss: tensor(1.5323) feature loss: tensor(0.4550)
         GM acc on global data: 0.4267 length of data: 10000
-------------Round number:  35  -------------
selected users: [40, 71, 98, 27, 70, 31, 10, 24, 51, 35]
K 2 torch.Size([337, 16, 32, 32]) torch.Size([337])
K 2 torch.Size([159, 16, 32, 32]) torch.Size([159])
K 2 torch.Size([110, 16, 32, 32]) torch.Size([110])
K 2 torch.Size([269, 16, 32, 32]) torch.Size([269])
K 2 torch.Size([90, 16, 32, 32]) torch.Size([90])
K 2 torch.Size([211, 16, 32, 32]) torch.Size([211])
K 2 torch.Size([513, 16, 32, 32]) torch.Size([513])
K 2 torch.Size([1084, 16, 32, 32]) torch.Size([1084])
K 2 torch.Size([762, 16, 32, 32]) torch.Size([762])
K 2 torch.Size([263, 16, 32, 32]) torch.Size([263])
all data: 500
Local adapation with distilling: 0.00037
training loss: tensor(1.1450) feature loss: tensor(0.4445)
Local adapation with distilling: 0.00037
training loss: tensor(1.4424) feature loss: tensor(0.3683)
Local adapation with distilling: 0.00037
training loss: tensor(2.3260) feature loss: tensor(0.4258)
Local adapation with distilling: 0.00037
training loss: tensor(3.3078) feature loss: tensor(0.4325)
Local adapation with distilling: 0.00037
training loss: tensor(3.6978) feature loss: tensor(0.3465)
Local adapation with distilling: 0.00037
training loss: tensor(1.4070) feature loss: tensor(0.4063)
Local adapation with distilling: 0.00037
training loss: tensor(2.6570) feature loss: tensor(0.4036)
Local adapation with distilling: 0.00037
training loss: tensor(0.6827) feature loss: tensor(0.4127)
Local adapation with distilling: 0.00037
training loss: tensor(1.1657) feature loss: tensor(0.4643)
Local adapation with distilling: 0.00037
training loss: tensor(1.9616) feature loss: tensor(0.5565)
         GM acc on global data: 0.4619 length of data: 10000
-------------Round number:  36  -------------
selected users: [59, 42, 2, 27, 28, 75, 58, 68, 52, 74]
K 2 torch.Size([131, 16, 32, 32]) torch.Size([131])
K 2 torch.Size([147, 16, 32, 32]) torch.Size([147])
K 2 torch.Size([457, 16, 32, 32]) torch.Size([457])
K 2 torch.Size([269, 16, 32, 32]) torch.Size([269])
K 2 torch.Size([951, 16, 32, 32]) torch.Size([951])
K 2 torch.Size([2441, 16, 32, 32]) torch.Size([2441])
K 2 torch.Size([787, 16, 32, 32]) torch.Size([787])
K 2 torch.Size([993, 16, 32, 32]) torch.Size([993])
K 2 torch.Size([1078, 16, 32, 32]) torch.Size([1078])
K 2 torch.Size([309, 16, 32, 32]) torch.Size([309])
all data: 500
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(1.7641) feature loss: tensor(0.3649)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(1.1684) feature loss: tensor(0.2697)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(1.0399) feature loss: tensor(0.3622)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(3.3355) feature loss: tensor(0.3466)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.8178) feature loss: tensor(0.3808)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.7953) feature loss: tensor(0.3215)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.6918) feature loss: tensor(0.3614)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.6372) feature loss: tensor(0.3688)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.6000) feature loss: tensor(0.3968)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.8626) feature loss: tensor(0.3042)
         GM acc on global data: 0.42 length of data: 10000
-------------Round number:  37  -------------
selected users: [61, 49, 86, 78, 5, 91, 81, 82, 89, 18]
K 2 torch.Size([711, 16, 32, 32]) torch.Size([711])
K 2 torch.Size([695, 16, 32, 32]) torch.Size([695])
K 2 torch.Size([437, 16, 32, 32]) torch.Size([437])
K 2 torch.Size([277, 16, 32, 32]) torch.Size([277])
K 2 torch.Size([479, 16, 32, 32]) torch.Size([479])
K 2 torch.Size([1199, 16, 32, 32]) torch.Size([1199])
K 2 torch.Size([1216, 16, 32, 32]) torch.Size([1216])
K 2 torch.Size([111, 16, 32, 32]) torch.Size([111])
K 2 torch.Size([523, 16, 32, 32]) torch.Size([523])
K 2 torch.Size([526, 16, 32, 32]) torch.Size([526])
all data: 500
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.7874) feature loss: tensor(0.3491)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.7477) feature loss: tensor(0.3473)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.8558) feature loss: tensor(0.2886)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(1.2244) feature loss: tensor(0.3092)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(1.9181) feature loss: tensor(0.3503)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.6070) feature loss: tensor(0.3452)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.6182) feature loss: tensor(0.3515)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(1.8268) feature loss: tensor(0.2019)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.9231) feature loss: tensor(0.3048)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.9951) feature loss: tensor(0.3566)
         GM acc on global data: 0.4095 length of data: 10000
-------------Round number:  38  -------------
selected users: [40, 73, 49, 45, 64, 16, 69, 17, 72, 66]
K 2 torch.Size([337, 16, 32, 32]) torch.Size([337])
K 2 torch.Size([117, 16, 32, 32]) torch.Size([117])
K 2 torch.Size([695, 16, 32, 32]) torch.Size([695])
K 2 torch.Size([122, 16, 32, 32]) torch.Size([122])
K 2 torch.Size([299, 16, 32, 32]) torch.Size([299])
K 2 torch.Size([830, 16, 32, 32]) torch.Size([830])
K 2 torch.Size([584, 16, 32, 32]) torch.Size([584])
K 2 torch.Size([543, 16, 32, 32]) torch.Size([543])
K 2 torch.Size([206, 16, 32, 32]) torch.Size([206])
K 2 torch.Size([352, 16, 32, 32]) torch.Size([352])
all data: 500
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.9513) feature loss: tensor(0.3738)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(2.7309) feature loss: tensor(0.2646)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.6711) feature loss: tensor(0.3590)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(1.7136) feature loss: tensor(0.2727)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.9995) feature loss: tensor(0.3142)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.7914) feature loss: tensor(0.3516)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.8448) feature loss: tensor(0.3317)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.7602) feature loss: tensor(0.3968)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(1.0248) feature loss: tensor(0.2995)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(1.0402) feature loss: tensor(0.3494)
         GM acc on global data: 0.424 length of data: 10000
-------------Round number:  39  -------------
selected users: [22, 53, 84, 57, 87, 58, 29, 21, 85, 79]
K 2 torch.Size([718, 16, 32, 32]) torch.Size([718])
K 2 torch.Size([262, 16, 32, 32]) torch.Size([262])
K 2 torch.Size([271, 16, 32, 32]) torch.Size([271])
K 2 torch.Size([655, 16, 32, 32]) torch.Size([655])
K 2 torch.Size([93, 16, 32, 32]) torch.Size([93])
K 2 torch.Size([787, 16, 32, 32]) torch.Size([787])
K 2 torch.Size([845, 16, 32, 32]) torch.Size([845])
K 2 torch.Size([277, 16, 32, 32]) torch.Size([277])
K 2 torch.Size([238, 16, 32, 32]) torch.Size([238])
K 2 torch.Size([274, 16, 32, 32]) torch.Size([274])
all data: 500
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(1.6210) feature loss: tensor(0.2925)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(1.2459) feature loss: tensor(0.3198)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(2.2155) feature loss: tensor(0.3202)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.8046) feature loss: tensor(0.3611)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(2.7852) feature loss: tensor(0.2670)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.6557) feature loss: tensor(0.3459)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.6122) feature loss: tensor(0.3229)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(1.0813) feature loss: tensor(0.2878)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(1.0944) feature loss: tensor(0.2657)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(1.4978) feature loss: tensor(0.4638)
         GM acc on global data: 0.4255 length of data: 10000
-------------Round number:  40  -------------
selected users: [79, 75, 63, 15, 38, 11, 40, 45, 39, 62]
K 2 torch.Size([274, 16, 32, 32]) torch.Size([274])
K 2 torch.Size([2441, 16, 32, 32]) torch.Size([2441])
K 2 torch.Size([582, 16, 32, 32]) torch.Size([582])
K 2 torch.Size([213, 16, 32, 32]) torch.Size([213])
K 2 torch.Size([239, 16, 32, 32]) torch.Size([239])
K 2 torch.Size([240, 16, 32, 32]) torch.Size([240])
K 2 torch.Size([337, 16, 32, 32]) torch.Size([337])
K 2 torch.Size([122, 16, 32, 32]) torch.Size([122])
K 2 torch.Size([1283, 16, 32, 32]) torch.Size([1283])
K 2 torch.Size([359, 16, 32, 32]) torch.Size([359])
all data: 500
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(1.3070) feature loss: tensor(0.4870)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.7209) feature loss: tensor(0.4719)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(1.2472) feature loss: tensor(0.4548)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(1.6300) feature loss: tensor(0.5042)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(1.8460) feature loss: tensor(0.5008)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(1.5742) feature loss: tensor(0.4772)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(1.1249) feature loss: tensor(0.4917)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(2.1226) feature loss: tensor(0.4844)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.9215) feature loss: tensor(0.4445)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(1.5426) feature loss: tensor(0.5337)
         GM acc on global data: 0.4405 length of data: 10000
-------------Round number:  41  -------------
selected users: [42, 94, 37, 6, 79, 32, 24, 0, 33, 93]
K 2 torch.Size([147, 16, 32, 32]) torch.Size([147])
K 2 torch.Size([125, 16, 32, 32]) torch.Size([125])
K 2 torch.Size([139, 16, 32, 32]) torch.Size([139])
K 2 torch.Size([538, 16, 32, 32]) torch.Size([538])
K 2 torch.Size([274, 16, 32, 32]) torch.Size([274])
K 2 torch.Size([257, 16, 32, 32]) torch.Size([257])
K 2 torch.Size([1084, 16, 32, 32]) torch.Size([1084])
K 2 torch.Size([171, 16, 32, 32]) torch.Size([171])
K 2 torch.Size([546, 16, 32, 32]) torch.Size([546])
K 2 torch.Size([516, 16, 32, 32]) torch.Size([516])
all data: 500
Local adapation with distilling: 0.000262
training loss: tensor(1.2169) feature loss: tensor(0.3089)
Local adapation with distilling: 0.000262
training loss: tensor(1.1368) feature loss: tensor(0.2690)
Local adapation with distilling: 0.000262
training loss: tensor(1.3983) feature loss: tensor(0.2490)
Local adapation with distilling: 0.000262
training loss: tensor(0.6840) feature loss: tensor(0.3080)
Local adapation with distilling: 0.000262
training loss: tensor(1.2782) feature loss: tensor(0.4099)
Local adapation with distilling: 0.000262
training loss: tensor(6.3004) feature loss: tensor(0.3055)
Local adapation with distilling: 0.000262
training loss: tensor(0.6247) feature loss: tensor(0.3538)
Local adapation with distilling: 0.000262
training loss: tensor(5.1839) feature loss: tensor(0.2400)
Local adapation with distilling: 0.000262
training loss: tensor(0.8677) feature loss: tensor(0.4567)
Local adapation with distilling: 0.000262
training loss: tensor(0.9053) feature loss: tensor(0.3052)
         GM acc on global data: 0.4447 length of data: 10000
-------------Round number:  42  -------------
selected users: [83, 53, 70, 45, 44, 39, 22, 80, 10, 0]
K 2 torch.Size([372, 16, 32, 32]) torch.Size([372])
K 2 torch.Size([262, 16, 32, 32]) torch.Size([262])
K 2 torch.Size([90, 16, 32, 32]) torch.Size([90])
K 2 torch.Size([122, 16, 32, 32]) torch.Size([122])
K 2 torch.Size([668, 16, 32, 32]) torch.Size([668])
K 2 torch.Size([1283, 16, 32, 32]) torch.Size([1283])
K 2 torch.Size([718, 16, 32, 32]) torch.Size([718])
K 2 torch.Size([319, 16, 32, 32]) torch.Size([319])
K 2 torch.Size([513, 16, 32, 32]) torch.Size([513])
K 2 torch.Size([171, 16, 32, 32]) torch.Size([171])
all data: 500
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.9904) feature loss: tensor(0.3661)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(1.1766) feature loss: tensor(0.3945)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(2.0514) feature loss: tensor(0.4091)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(1.5519) feature loss: tensor(0.2310)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.8357) feature loss: tensor(0.3996)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.7824) feature loss: tensor(0.3904)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(1.2327) feature loss: tensor(0.3676)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(1.0532) feature loss: tensor(0.3387)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(1.5269) feature loss: tensor(0.4107)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(5.4799) feature loss: tensor(0.2931)
         GM acc on global data: 0.4439 length of data: 10000
-------------Round number:  43  -------------
selected users: [20, 2, 15, 22, 57, 91, 69, 55, 11, 79]
K 2 torch.Size([37, 16, 32, 32]) torch.Size([37])
K 2 torch.Size([457, 16, 32, 32]) torch.Size([457])
K 2 torch.Size([213, 16, 32, 32]) torch.Size([213])
K 2 torch.Size([718, 16, 32, 32]) torch.Size([718])
K 2 torch.Size([655, 16, 32, 32]) torch.Size([655])
K 2 torch.Size([1199, 16, 32, 32]) torch.Size([1199])
K 2 torch.Size([584, 16, 32, 32]) torch.Size([584])
K 2 torch.Size([2015, 16, 32, 32]) torch.Size([2015])
K 2 torch.Size([240, 16, 32, 32]) torch.Size([240])
K 2 torch.Size([274, 16, 32, 32]) torch.Size([274])
all data: 500
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(1.8952) feature loss: tensor(0.1875)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.9488) feature loss: tensor(0.3466)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(1.1588) feature loss: tensor(0.2721)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(1.0686) feature loss: tensor(0.3338)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.7610) feature loss: tensor(0.3309)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.6435) feature loss: tensor(0.3796)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.8079) feature loss: tensor(0.3405)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.5619) feature loss: tensor(0.3353)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(1.2936) feature loss: tensor(0.4230)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(1.1295) feature loss: tensor(0.3076)
         GM acc on global data: 0.462 length of data: 10000
-------------Round number:  44  -------------
selected users: [42, 54, 27, 93, 39, 65, 7, 26, 24, 60]
K 2 torch.Size([147, 16, 32, 32]) torch.Size([147])
K 2 torch.Size([323, 16, 32, 32]) torch.Size([323])
K 2 torch.Size([269, 16, 32, 32]) torch.Size([269])
K 2 torch.Size([516, 16, 32, 32]) torch.Size([516])
K 2 torch.Size([1283, 16, 32, 32]) torch.Size([1283])
K 2 torch.Size([356, 16, 32, 32]) torch.Size([356])
K 2 torch.Size([110, 16, 32, 32]) torch.Size([110])
K 2 torch.Size([72, 16, 32, 32]) torch.Size([72])
K 2 torch.Size([1084, 16, 32, 32]) torch.Size([1084])
K 2 torch.Size([15, 16, 32, 32]) torch.Size([15])
all data: 500
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(1.0486) feature loss: tensor(0.3807)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(1.0089) feature loss: tensor(0.2870)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(4.0317) feature loss: tensor(0.3464)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.9815) feature loss: tensor(0.3310)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.5120) feature loss: tensor(0.2996)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(1.0988) feature loss: tensor(0.4113)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(1.5379) feature loss: tensor(0.2297)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(10.9048) feature loss: tensor(0.2639)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.5110) feature loss: tensor(0.3653)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(1.2686) feature loss: tensor(0.3439)
         GM acc on global data: 0.417 length of data: 10000
-------------Round number:  45  -------------
selected users: [0, 1, 62, 76, 37, 99, 78, 38, 2, 84]
K 2 torch.Size([171, 16, 32, 32]) torch.Size([171])
K 2 torch.Size([52, 16, 32, 32]) torch.Size([52])
K 2 torch.Size([359, 16, 32, 32]) torch.Size([359])
K 2 torch.Size([2848, 16, 32, 32]) torch.Size([2848])
K 2 torch.Size([139, 16, 32, 32]) torch.Size([139])
K 2 torch.Size([359, 16, 32, 32]) torch.Size([359])
K 2 torch.Size([277, 16, 32, 32]) torch.Size([277])
K 2 torch.Size([239, 16, 32, 32]) torch.Size([239])
K 2 torch.Size([457, 16, 32, 32]) torch.Size([457])
K 2 torch.Size([271, 16, 32, 32]) torch.Size([271])
all data: 500
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(3.8569) feature loss: tensor(0.4882)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(3.1285) feature loss: tensor(0.5014)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(1.2960) feature loss: tensor(0.4479)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.8052) feature loss: tensor(0.4867)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(2.0462) feature loss: tensor(0.4270)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(1.6122) feature loss: tensor(0.5564)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(1.6934) feature loss: tensor(0.5056)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(1.8172) feature loss: tensor(0.5223)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(1.1049) feature loss: tensor(0.4848)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(2.5251) feature loss: tensor(0.4493)
         GM acc on global data: 0.4384 length of data: 10000
-------------Round number:  46  -------------
selected users: [71, 33, 37, 10, 44, 34, 24, 98, 73, 95]
K 2 torch.Size([159, 16, 32, 32]) torch.Size([159])
K 2 torch.Size([546, 16, 32, 32]) torch.Size([546])
K 2 torch.Size([139, 16, 32, 32]) torch.Size([139])
K 2 torch.Size([513, 16, 32, 32]) torch.Size([513])
K 2 torch.Size([668, 16, 32, 32]) torch.Size([668])
K 2 torch.Size([1363, 16, 32, 32]) torch.Size([1363])
K 2 torch.Size([1084, 16, 32, 32]) torch.Size([1084])
K 2 torch.Size([110, 16, 32, 32]) torch.Size([110])
K 2 torch.Size([117, 16, 32, 32]) torch.Size([117])
K 2 torch.Size([32, 16, 32, 32]) torch.Size([32])
all data: 500
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.9153) feature loss: tensor(0.2352)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.6928) feature loss: tensor(0.2764)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(1.3537) feature loss: tensor(0.2220)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(1.0456) feature loss: tensor(0.2663)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.7029) feature loss: tensor(0.2881)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.5708) feature loss: tensor(0.2763)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.5086) feature loss: tensor(0.2727)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(1.6009) feature loss: tensor(0.2271)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(1.2116) feature loss: tensor(0.2401)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(2.1036) feature loss: tensor(0.2155)
         GM acc on global data: 0.4353 length of data: 10000
-------------Round number:  47  -------------
selected users: [17, 90, 94, 86, 63, 5, 38, 14, 40, 47]
K 2 torch.Size([543, 16, 32, 32]) torch.Size([543])
K 2 torch.Size([800, 16, 32, 32]) torch.Size([800])
K 2 torch.Size([125, 16, 32, 32]) torch.Size([125])
K 2 torch.Size([437, 16, 32, 32]) torch.Size([437])
K 2 torch.Size([582, 16, 32, 32]) torch.Size([582])
K 2 torch.Size([479, 16, 32, 32]) torch.Size([479])
K 2 torch.Size([239, 16, 32, 32]) torch.Size([239])
K 2 torch.Size([354, 16, 32, 32]) torch.Size([354])
K 2 torch.Size([337, 16, 32, 32]) torch.Size([337])
K 2 torch.Size([689, 16, 32, 32]) torch.Size([689])
all data: 500
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.8131) feature loss: tensor(0.3763)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.7367) feature loss: tensor(0.3683)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(4.2769) feature loss: tensor(0.1912)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.9791) feature loss: tensor(0.3206)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(1.1237) feature loss: tensor(0.3138)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(1.7011) feature loss: tensor(0.3005)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(1.3162) feature loss: tensor(0.2806)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(1.4939) feature loss: tensor(0.3397)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(1.0191) feature loss: tensor(0.3573)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.7957) feature loss: tensor(0.3235)
         GM acc on global data: 0.4819 length of data: 10000
-------------Round number:  48  -------------
selected users: [93, 5, 71, 9, 11, 79, 69, 8, 59, 63]
K 2 torch.Size([516, 16, 32, 32]) torch.Size([516])
K 2 torch.Size([479, 16, 32, 32]) torch.Size([479])
K 2 torch.Size([159, 16, 32, 32]) torch.Size([159])
K 2 torch.Size([120, 16, 32, 32]) torch.Size([120])
K 2 torch.Size([240, 16, 32, 32]) torch.Size([240])
K 2 torch.Size([274, 16, 32, 32]) torch.Size([274])
K 2 torch.Size([584, 16, 32, 32]) torch.Size([584])
K 2 torch.Size([1059, 16, 32, 32]) torch.Size([1059])
K 2 torch.Size([131, 16, 32, 32]) torch.Size([131])
K 2 torch.Size([582, 16, 32, 32]) torch.Size([582])
all data: 500
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(1.0065) feature loss: tensor(0.2765)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(2.0294) feature loss: tensor(0.2815)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(1.3610) feature loss: tensor(0.2240)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(1.5107) feature loss: tensor(0.1922)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(1.2195) feature loss: tensor(0.3046)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(1.0117) feature loss: tensor(0.3099)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.7716) feature loss: tensor(0.2716)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.6011) feature loss: tensor(0.2884)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(1.6025) feature loss: tensor(0.3300)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.7810) feature loss: tensor(0.2616)
         GM acc on global data: 0.4809 length of data: 10000
-------------Round number:  49  -------------
selected users: [76, 25, 28, 75, 81, 47, 41, 22, 29, 1]
K 2 torch.Size([2848, 16, 32, 32]) torch.Size([2848])
K 2 torch.Size([484, 16, 32, 32]) torch.Size([484])
K 2 torch.Size([951, 16, 32, 32]) torch.Size([951])
K 2 torch.Size([2441, 16, 32, 32]) torch.Size([2441])
K 2 torch.Size([1216, 16, 32, 32]) torch.Size([1216])
K 2 torch.Size([689, 16, 32, 32]) torch.Size([689])
K 2 torch.Size([502, 16, 32, 32]) torch.Size([502])
K 2 torch.Size([718, 16, 32, 32]) torch.Size([718])
K 2 torch.Size([845, 16, 32, 32]) torch.Size([845])
K 2 torch.Size([52, 16, 32, 32]) torch.Size([52])
all data: 500
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.7141) feature loss: tensor(0.4064)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(1.2486) feature loss: tensor(0.4439)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.9706) feature loss: tensor(0.4472)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.7528) feature loss: tensor(0.3910)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.7641) feature loss: tensor(0.3932)
Local adapation with distilling: 0.0001180000000000001
