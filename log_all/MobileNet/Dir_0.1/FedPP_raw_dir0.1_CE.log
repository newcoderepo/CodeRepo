nohup: ignoring input
================================================================================
Summary of training process:
Dataset:                 Cifar10
Batch size:              64
Learing rate :           0.001
personal learning rate : 0.001
Number of total clients: 100
Split parameter        : 0.1
Clients per round      : 10
Number of global rounds: 100
Number of local rounds : 10
Feature from layer     : 0
Feature reduction      : 64
Local training loss    : CE_CE
Loss of beta           : 1.0
Algorithm              : FedPP
Modelname              : MOBNET
Mode                   : training
================================================================================
Files already downloaded and verified
Files already downloaded and verified
Here
Done
Class frequencies:
client,class0,class1,class2,class3,class4,class5,class6,class7,class8,class9,Amount
Client   0,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,171
Client   1,0.231,0.038,0.00,0.00,0.00,0.077,0.00,0.654,0.00,0.00,52
Client   2,0.374,0.015,0.00,0.00,0.519,0.011,0.007,0.015,0.00,0.059,457
Client   3,0.00,0.00,0.00,0.232,0.768,0.00,0.00,0.00,0.00,0.00,56
Client   4,0.660,0.071,0.032,0.122,0.00,0.00,0.083,0.00,0.00,0.032,156
Client   5,0.00,0.00,0.00,0.00,0.029,0.00,0.00,0.00,0.121,0.850,479
Client   6,0.00,0.080,0.00,0.00,0.009,0.017,0.894,0.00,0.00,0.00,538
Client   7,0.00,0.00,0.00,0.00,0.991,0.00,0.00,0.009,0.00,0.00,110
Client   8,0.131,0.116,0.00,0.00,0.00,0.00,0.00,0.00,0.753,0.00,1059
Client   9,0.00,0.00,0.175,0.00,0.467,0.017,0.192,0.150,0.00,0.00,120
Client  10,0.00,0.331,0.540,0.00,0.00,0.00,0.129,0.00,0.00,0.00,513
Client  11,0.00,0.00,0.250,0.00,0.004,0.358,0.254,0.008,0.121,0.004,240
Client  12,0.00,0.00,0.00,0.00,0.00,0.562,0.00,0.00,0.396,0.042,48
Client  13,0.00,0.00,0.00,0.371,0.185,0.00,0.444,0.00,0.00,0.00,453
Client  14,0.068,0.00,0.003,0.011,0.00,0.042,0.641,0.234,0.00,0.00,354
Client  15,0.00,0.005,0.00,0.00,0.995,0.00,0.00,0.00,0.00,0.00,213
Client  16,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,830
Client  17,0.335,0.00,0.004,0.00,0.007,0.00,0.00,0.654,0.00,0.00,543
Client  18,0.00,0.743,0.00,0.127,0.053,0.076,0.00,0.00,0.00,0.00,526
Client  19,0.008,0.00,0.057,0.676,0.185,0.074,0.00,0.00,0.00,0.00,524
Client  20,0.00,0.00,0.243,0.108,0.00,0.00,0.00,0.216,0.432,0.00,37
Client  21,0.00,0.00,0.00,0.141,0.848,0.00,0.004,0.007,0.00,0.00,277
Client  22,0.00,0.192,0.00,0.00,0.00,0.010,0.00,0.028,0.063,0.708,718
Client  23,0.00,0.100,0.529,0.00,0.00,0.214,0.129,0.00,0.00,0.029,70
Client  24,0.014,0.00,0.002,0.002,0.00,0.00,0.00,0.982,0.00,0.00,1084
Client  25,0.00,0.00,0.006,0.105,0.00,0.169,0.010,0.025,0.684,0.00,484
Client  26,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.194,0.00,0.806,72
Client  27,0.00,0.00,0.00,0.00,0.011,0.086,0.004,0.00,0.019,0.881,269
Client  28,0.237,0.00,0.00,0.001,0.038,0.167,0.001,0.011,0.546,0.00,951
Client  29,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,845
Client  30,0.004,0.00,0.218,0.743,0.00,0.00,0.00,0.023,0.008,0.004,257
Client  31,0.014,0.730,0.00,0.005,0.194,0.005,0.052,0.00,0.00,0.00,211
Client  32,0.00,0.00,0.00,0.00,0.004,0.00,0.743,0.222,0.031,0.00,257
Client  33,0.559,0.084,0.002,0.00,0.013,0.00,0.00,0.234,0.108,0.00,546
Client  34,0.00,0.010,0.093,0.00,0.202,0.010,0.00,0.00,0.685,0.00,1363
Client  35,0.913,0.008,0.00,0.011,0.00,0.065,0.00,0.00,0.00,0.004,263
Client  36,0.029,0.00,0.001,0.00,0.139,0.006,0.001,0.003,0.821,0.00,979
Client  37,0.00,0.00,0.259,0.194,0.237,0.245,0.029,0.00,0.00,0.036,139
Client  38,0.075,0.00,0.00,0.00,0.00,0.925,0.00,0.00,0.00,0.00,239
Client  39,0.00,0.334,0.00,0.00,0.00,0.00,0.00,0.666,0.00,0.00,1283
Client  40,0.00,0.00,0.00,0.00,0.00,0.353,0.00,0.211,0.436,0.00,337
Client  41,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,502
Client  42,0.218,0.00,0.020,0.259,0.00,0.041,0.00,0.463,0.00,0.00,147
Client  43,0.073,0.008,0.024,0.062,0.073,0.00,0.00,0.00,0.003,0.758,372
Client  44,0.003,0.00,0.00,0.064,0.269,0.00,0.114,0.247,0.302,0.00,668
Client  45,0.00,0.025,0.00,0.066,0.689,0.00,0.213,0.00,0.008,0.00,122
Client  46,0.002,0.258,0.019,0.00,0.042,0.274,0.00,0.406,0.00,0.00,530
Client  47,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,689
Client  48,0.023,0.00,0.003,0.036,0.00,0.00,0.227,0.006,0.605,0.100,309
Client  49,0.102,0.377,0.001,0.519,0.00,0.00,0.00,0.00,0.00,0.00,695
Client  50,0.00,0.00,0.00,0.136,0.00,0.00,0.00,0.017,0.00,0.847,118
Client  51,0.331,0.035,0.00,0.052,0.00,0.083,0.034,0.00,0.012,0.453,762
Client  52,0.007,0.276,0.717,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1078
Client  53,0.00,0.073,0.153,0.00,0.00,0.00,0.271,0.00,0.504,0.00,262
Client  54,0.003,0.003,0.127,0.173,0.663,0.025,0.00,0.006,0.00,0.00,323
Client  55,0.000,0.00,0.000,0.00,0.00,0.999,0.00,0.00,0.00,0.00,2015
Client  56,0.00,0.00,0.014,0.986,0.00,0.00,0.00,0.00,0.00,0.00,876
Client  57,0.424,0.299,0.002,0.275,0.00,0.00,0.00,0.00,0.00,0.00,655
Client  58,0.003,0.997,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,787
Client  59,0.00,0.00,0.908,0.00,0.00,0.00,0.031,0.00,0.061,0.00,131
Client  60,0.067,0.00,0.00,0.00,0.067,0.200,0.00,0.200,0.333,0.133,15
Client  61,0.00,0.027,0.001,0.00,0.00,0.00,0.430,0.177,0.364,0.00,711
Client  62,0.00,0.00,0.00,0.00,0.006,0.983,0.00,0.00,0.011,0.00,359
Client  63,0.00,0.00,0.519,0.002,0.005,0.229,0.246,0.00,0.00,0.00,582
Client  64,0.00,0.00,0.00,0.00,0.00,0.064,0.207,0.729,0.00,0.00,299
Client  65,0.295,0.003,0.00,0.00,0.00,0.00,0.00,0.011,0.691,0.00,356
Client  66,0.375,0.267,0.003,0.00,0.182,0.020,0.00,0.003,0.131,0.020,352
Client  67,0.053,0.00,0.037,0.00,0.910,0.00,0.00,0.00,0.00,0.00,543
Client  68,0.00,0.001,0.999,0.00,0.00,0.00,0.00,0.00,0.00,0.00,993
Client  69,0.00,0.185,0.00,0.00,0.228,0.587,0.00,0.00,0.00,0.00,584
Client  70,0.00,0.00,0.011,0.00,0.122,0.00,0.867,0.00,0.00,0.00,90
Client  71,0.00,0.931,0.00,0.00,0.038,0.013,0.00,0.00,0.019,0.00,159
Client  72,0.00,0.00,0.034,0.00,0.00,0.00,0.00,0.966,0.00,0.00,206
Client  73,0.00,0.103,0.00,0.068,0.017,0.222,0.00,0.00,0.111,0.479,117
Client  74,0.00,0.00,0.003,0.861,0.00,0.00,0.00,0.136,0.00,0.00,309
Client  75,0.00,0.00,0.00,0.001,0.009,0.00,0.991,0.00,0.00,0.00,2441
Client  76,0.026,0.00,0.00,0.00,0.071,0.00,0.00,0.00,0.002,0.900,2848
Client  77,0.00,0.00,0.026,0.00,0.00,0.974,0.00,0.00,0.00,0.00,693
Client  78,0.440,0.004,0.00,0.00,0.444,0.00,0.00,0.00,0.112,0.00,277
Client  79,0.828,0.007,0.00,0.131,0.004,0.029,0.00,0.00,0.00,0.00,274
Client  80,0.00,0.201,0.003,0.661,0.00,0.013,0.003,0.119,0.00,0.00,319
Client  81,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,1152
Client  82,0.00,0.009,0.757,0.009,0.00,0.00,0.036,0.00,0.009,0.180,111
Client  83,0.005,0.00,0.00,0.00,0.003,0.228,0.00,0.750,0.00,0.013,372
Client  84,0.00,0.00,0.00,0.063,0.077,0.00,0.860,0.00,0.00,0.00,271
Client  85,0.00,0.244,0.555,0.00,0.00,0.00,0.00,0.088,0.113,0.00,238
Client  86,0.002,0.00,0.314,0.00,0.666,0.00,0.00,0.00,0.018,0.00,437
Client  87,0.00,0.022,0.022,0.011,0.022,0.043,0.269,0.258,0.032,0.323,93
Client  88,0.00,0.00,0.00,0.281,0.00,0.00,0.00,0.357,0.010,0.352,210
Client  89,0.086,0.029,0.642,0.011,0.103,0.019,0.00,0.00,0.00,0.109,523
Client  90,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,800
Client  91,0.00,0.00,0.377,0.003,0.00,0.002,0.00,0.619,0.00,0.00,1199
Client  92,0.065,0.00,0.015,0.915,0.00,0.005,0.00,0.00,0.00,0.00,400
Client  93,0.00,0.496,0.00,0.00,0.331,0.132,0.00,0.041,0.00,0.00,516
Client  94,0.00,0.00,0.00,0.00,0.008,0.032,0.944,0.00,0.016,0.00,125
Client  95,0.00,0.00,0.375,0.00,0.00,0.00,0.00,0.00,0.625,0.00,32
Client  96,0.00,0.073,0.011,0.00,0.915,0.00,0.00,0.00,0.00,0.00,1321
Client  97,0.00,0.00,0.00,0.00,0.00,0.00,0.925,0.00,0.050,0.025,40
Client  98,0.00,0.073,0.00,0.00,0.00,0.836,0.018,0.009,0.064,0.00,110
Client  99,0.173,0.003,0.003,0.799,0.003,0.003,0.003,0.003,0.006,0.006,359
Num_samples of Training set per client: [171, 52, 457, 56, 156, 479, 538, 110, 1059, 120, 513, 240, 48, 453, 354, 213, 830, 543, 526, 524, 37, 277, 718, 70, 1084, 484, 72, 269, 951, 845, 257, 211, 257, 546, 1363, 263, 979, 139, 239, 1283, 337, 502, 147, 372, 668, 122, 530, 689, 309, 695, 118, 762, 1078, 262, 323, 2015, 876, 655, 787, 131, 15, 711, 359, 582, 299, 356, 352, 543, 993, 584, 90, 159, 206, 117, 309, 2441, 2848, 693, 277, 274, 319, 1152, 111, 372, 271, 238, 437, 93, 210, 523, 800, 1199, 400, 516, 125, 32, 1321, 40, 110, 359]
Total_training_samples: 50000
Global test set: 10000
Finish Generating Samples, distribution saved
MobileNetV2(
  (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (layers): Sequential(
    (0): Block(
      (conv1): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): Block(
      (conv1): Conv2d(16, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=96, bias=False)
      (bn2): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(96, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(16, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (2): Block(
      (conv1): Conv2d(24, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=144, bias=False)
      (bn2): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(144, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (3): Block(
      (conv1): Conv2d(24, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(144, 144, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=144, bias=False)
      (bn2): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(144, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (4): Block(
      (conv1): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
      (bn2): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(192, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (5): Block(
      (conv1): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
      (bn2): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(192, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (6): Block(
      (conv1): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(192, 192, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=192, bias=False)
      (bn2): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(192, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (7): Block(
      (conv1): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
      (bn2): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (8): Block(
      (conv1): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
      (bn2): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (9): Block(
      (conv1): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
      (bn2): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (10): Block(
      (conv1): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
      (bn2): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(384, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(64, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (11): Block(
      (conv1): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)
      (bn2): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (12): Block(
      (conv1): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)
      (bn2): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (13): Block(
      (conv1): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(576, 576, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=576, bias=False)
      (bn2): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(576, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (14): Block(
      (conv1): Conv2d(160, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(960, 960, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=960, bias=False)
      (bn2): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(960, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (15): Block(
      (conv1): Conv2d(160, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(960, 960, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=960, bias=False)
      (bn2): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(960, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (16): Block(
      (conv1): Conv2d(160, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(960, 960, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=960, bias=False)
      (bn2): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(960, 320, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(160, 320, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (conv2): Conv2d(320, 1280, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn2): BatchNorm2d(1280, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (linear): Linear(in_features=1280, out_features=10, bias=True)
)
number of parameters: 2296922
clients initializting...
output size: 10
  0%|          | 0/100 [00:00<?, ?it/s]  1%|          | 1/100 [00:01<02:40,  1.63s/it]  2%|▏         | 2/100 [00:02<02:14,  1.37s/it]  3%|▎         | 3/100 [00:03<02:00,  1.25s/it]  4%|▍         | 4/100 [00:07<03:25,  2.14s/it]  5%|▌         | 5/100 [00:08<02:47,  1.77s/it]  6%|▌         | 6/100 [00:09<02:16,  1.46s/it]  7%|▋         | 7/100 [00:10<01:56,  1.26s/it]  8%|▊         | 8/100 [00:10<01:38,  1.07s/it]  9%|▉         | 9/100 [00:11<01:28,  1.03it/s] 10%|█         | 10/100 [00:12<01:22,  1.09it/s] 11%|█         | 11/100 [00:12<01:16,  1.16it/s] 12%|█▏        | 12/100 [00:13<01:17,  1.14it/s] 13%|█▎        | 13/100 [00:14<01:12,  1.20it/s] 14%|█▍        | 14/100 [00:15<01:09,  1.24it/s] 15%|█▌        | 15/100 [00:16<01:10,  1.21it/s] 16%|█▌        | 16/100 [00:16<01:05,  1.28it/s] 17%|█▋        | 17/100 [00:17<01:01,  1.35it/s] 18%|█▊        | 18/100 [00:18<01:01,  1.32it/s] 19%|█▉        | 19/100 [00:19<01:02,  1.30it/s] 20%|██        | 20/100 [00:19<01:03,  1.27it/s] 21%|██        | 21/100 [00:20<01:01,  1.28it/s] 22%|██▏       | 22/100 [00:21<01:00,  1.28it/s] 23%|██▎       | 23/100 [00:22<01:01,  1.25it/s] 24%|██▍       | 24/100 [00:23<01:01,  1.24it/s] 25%|██▌       | 25/100 [00:23<01:00,  1.23it/s] 26%|██▌       | 26/100 [00:24<01:01,  1.20it/s] 27%|██▋       | 27/100 [00:25<00:57,  1.28it/s] 28%|██▊       | 28/100 [00:26<00:57,  1.26it/s] 29%|██▉       | 29/100 [00:27<01:00,  1.18it/s] 30%|███       | 30/100 [00:27<00:55,  1.27it/s] 31%|███       | 31/100 [00:28<00:56,  1.22it/s] 32%|███▏      | 32/100 [00:29<00:56,  1.19it/s] 33%|███▎      | 33/100 [00:30<00:54,  1.22it/s] 34%|███▍      | 34/100 [00:31<00:55,  1.19it/s] 35%|███▌      | 35/100 [00:35<02:07,  1.95s/it] 36%|███▌      | 36/100 [00:36<01:42,  1.61s/it] 37%|███▋      | 37/100 [00:37<01:27,  1.39s/it] 38%|███▊      | 38/100 [00:38<01:16,  1.23s/it] 39%|███▉      | 39/100 [00:39<01:04,  1.05s/it] 40%|████      | 40/100 [00:39<00:56,  1.05it/s] 41%|████      | 41/100 [00:40<00:51,  1.14it/s] 42%|████▏     | 42/100 [00:41<00:45,  1.26it/s] 43%|████▎     | 43/100 [00:41<00:45,  1.27it/s] 44%|████▍     | 44/100 [00:42<00:45,  1.23it/s] 45%|████▌     | 45/100 [00:43<00:45,  1.21it/s] 46%|████▌     | 46/100 [00:44<00:44,  1.22it/s] 47%|████▋     | 47/100 [00:45<00:43,  1.22it/s] 48%|████▊     | 48/100 [00:45<00:39,  1.33it/s] 49%|████▉     | 49/100 [00:46<00:39,  1.28it/s] 50%|█████     | 50/100 [00:47<00:38,  1.30it/s] 51%|█████     | 51/100 [00:48<00:35,  1.36it/s] 52%|█████▏    | 52/100 [00:48<00:37,  1.28it/s] 53%|█████▎    | 53/100 [00:49<00:35,  1.31it/s] 54%|█████▍    | 54/100 [00:50<00:34,  1.34it/s] 55%|█████▌    | 55/100 [00:51<00:34,  1.29it/s] 56%|█████▌    | 56/100 [00:52<00:34,  1.29it/s] 57%|█████▋    | 57/100 [00:52<00:31,  1.36it/s] 58%|█████▊    | 58/100 [00:53<00:31,  1.35it/s] 59%|█████▉    | 59/100 [00:54<00:29,  1.40it/s] 60%|██████    | 60/100 [00:54<00:28,  1.40it/s] 61%|██████    | 61/100 [00:55<00:29,  1.34it/s] 62%|██████▏   | 62/100 [00:56<00:29,  1.31it/s] 63%|██████▎   | 63/100 [00:57<00:27,  1.35it/s] 64%|██████▍   | 64/100 [00:57<00:27,  1.33it/s] 65%|██████▌   | 65/100 [00:58<00:25,  1.36it/s] 66%|██████▌   | 66/100 [00:59<00:25,  1.35it/s] 67%|██████▋   | 67/100 [01:00<00:26,  1.24it/s] 68%|██████▊   | 68/100 [01:04<00:59,  1.85s/it] 69%|██████▉   | 69/100 [01:05<00:46,  1.51s/it] 70%|███████   | 70/100 [01:05<00:38,  1.27s/it] 71%|███████   | 71/100 [01:06<00:31,  1.09s/it] 72%|███████▏  | 72/100 [01:07<00:27,  1.02it/s] 73%|███████▎  | 73/100 [01:08<00:23,  1.15it/s] 74%|███████▍  | 74/100 [01:08<00:22,  1.17it/s] 75%|███████▌  | 75/100 [01:09<00:20,  1.24it/s] 76%|███████▌  | 76/100 [01:10<00:19,  1.25it/s] 77%|███████▋  | 77/100 [01:11<00:18,  1.22it/s] 78%|███████▊  | 78/100 [01:11<00:16,  1.31it/s] 79%|███████▉  | 79/100 [01:12<00:15,  1.33it/s] 80%|████████  | 80/100 [01:13<00:15,  1.31it/s] 81%|████████  | 81/100 [01:14<00:14,  1.28it/s] 82%|████████▏ | 82/100 [01:14<00:13,  1.35it/s] 83%|████████▎ | 83/100 [01:15<00:13,  1.30it/s] 84%|████████▍ | 84/100 [01:16<00:12,  1.29it/s] 85%|████████▌ | 85/100 [01:17<00:11,  1.33it/s] 86%|████████▌ | 86/100 [01:17<00:10,  1.31it/s] 87%|████████▋ | 87/100 [01:18<00:10,  1.29it/s] 88%|████████▊ | 88/100 [01:19<00:10,  1.16it/s] 89%|████████▉ | 89/100 [01:20<00:09,  1.19it/s] 90%|█████████ | 90/100 [01:21<00:08,  1.17it/s] 91%|█████████ | 91/100 [01:22<00:07,  1.26it/s] 92%|█████████▏| 92/100 [01:22<00:06,  1.25it/s] 93%|█████████▎| 93/100 [01:23<00:05,  1.24it/s] 94%|█████████▍| 94/100 [01:24<00:04,  1.23it/s] 95%|█████████▌| 95/100 [01:25<00:04,  1.24it/s] 96%|█████████▌| 96/100 [01:26<00:03,  1.30it/s] 97%|█████████▋| 97/100 [01:26<00:02,  1.26it/s] 98%|█████████▊| 98/100 [01:27<00:01,  1.27it/s] 99%|█████████▉| 99/100 [01:28<00:00,  1.24it/s]100%|██████████| 100/100 [01:29<00:00,  1.13it/s]100%|██████████| 100/100 [01:29<00:00,  1.12it/s]
Number of users per round / total users: 10  /  100
Finished creating FedAvg server.
=== FedPP ===
-------------Round number:  0  -------------
selected users: [26, 86, 2, 55, 75, 93, 16, 73, 54, 95]
torch.Size([72, 3, 32, 32]) torch.Size([72])
torch.Size([437, 3, 32, 32]) torch.Size([437])
torch.Size([457, 3, 32, 32]) torch.Size([457])
torch.Size([2015, 3, 32, 32]) torch.Size([2015])
torch.Size([2441, 3, 32, 32]) torch.Size([2441])
torch.Size([516, 3, 32, 32]) torch.Size([516])
torch.Size([830, 3, 32, 32]) torch.Size([830])
torch.Size([117, 3, 32, 32]) torch.Size([117])
torch.Size([323, 3, 32, 32]) torch.Size([323])
torch.Size([32, 3, 32, 32]) torch.Size([32])
7240 72 72
all data: 1000
Local adapation with distilling: 0.001
training loss: tensor(1.0148) feature loss: tensor(2.2562)
Local adapation with distilling: 0.001
training loss: tensor(0.9740) feature loss: tensor(1.6753)
Local adapation with distilling: 0.001
training loss: tensor(0.8585) feature loss: tensor(1.5200)
Local adapation with distilling: 0.001
training loss: tensor(0.2168) feature loss: tensor(0.8113)
Local adapation with distilling: 0.001
training loss: tensor(0.2658) feature loss: tensor(0.6936)
Local adapation with distilling: 0.001
training loss: tensor(0.9676) feature loss: tensor(1.5492)
Local adapation with distilling: 0.001
training loss: tensor(0.4050) feature loss: tensor(1.4269)
Local adapation with distilling: 0.001
training loss: tensor(1.1500) feature loss: tensor(1.9864)
Local adapation with distilling: 0.001
training loss: tensor(1.2340) feature loss: tensor(1.7378)
Local adapation with distilling: 0.001
training loss: tensor(0.9441) feature loss: tensor(2.2127)
         GM acc on global data: 0.1 length of data: 10000
-------------Round number:  1  -------------
selected users: [80, 84, 33, 81, 93, 17, 36, 82, 69, 65]
torch.Size([319, 3, 32, 32]) torch.Size([319])
torch.Size([271, 3, 32, 32]) torch.Size([271])
torch.Size([546, 3, 32, 32]) torch.Size([546])
torch.Size([1216, 3, 32, 32]) torch.Size([1216])
torch.Size([516, 3, 32, 32]) torch.Size([516])
torch.Size([543, 3, 32, 32]) torch.Size([543])
torch.Size([979, 3, 32, 32]) torch.Size([979])
torch.Size([111, 3, 32, 32]) torch.Size([111])
torch.Size([584, 3, 32, 32]) torch.Size([584])
torch.Size([356, 3, 32, 32]) torch.Size([356])
5441 72 72
all data: 1000
Local adapation with distilling: 0.000982
training loss: tensor(7.4584) feature loss: tensor(7.3825)
Local adapation with distilling: 0.000982
training loss: tensor(1.2817) feature loss: tensor(7.8067)
Local adapation with distilling: 0.000982
training loss: tensor(2.4270) feature loss: tensor(5.1313)
Local adapation with distilling: 0.000982
training loss: tensor(3.2622) feature loss: tensor(2.6911)
Local adapation with distilling: 0.000982
training loss: tensor(1.8363) feature loss: tensor(5.6121)
Local adapation with distilling: 0.000982
training loss: tensor(2.0498) feature loss: tensor(5.1427)
Local adapation with distilling: 0.000982
training loss: tensor(3.0299) feature loss: tensor(3.4869)
Local adapation with distilling: 0.000982
training loss: tensor(4.2012) feature loss: tensor(13.9497)
Local adapation with distilling: 0.000982
training loss: tensor(1.1547) feature loss: tensor(5.1078)
Local adapation with distilling: 0.000982
training loss: tensor(5.9917) feature loss: tensor(6.8561)
         GM acc on global data: 0.1468 length of data: 10000
-------------Round number:  2  -------------
selected users: [83, 30, 56, 24, 16, 23, 2, 27, 28, 13]
torch.Size([372, 3, 32, 32]) torch.Size([372])
torch.Size([257, 3, 32, 32]) torch.Size([257])
torch.Size([876, 3, 32, 32]) torch.Size([876])
torch.Size([1084, 3, 32, 32]) torch.Size([1084])
torch.Size([830, 3, 32, 32]) torch.Size([830])
torch.Size([70, 3, 32, 32]) torch.Size([70])
torch.Size([457, 3, 32, 32]) torch.Size([457])
torch.Size([269, 3, 32, 32]) torch.Size([269])
torch.Size([951, 3, 32, 32]) torch.Size([951])
torch.Size([453, 3, 32, 32]) torch.Size([453])
5619 72 72
all data: 1000
Local adapation with distilling: 0.000964
training loss: tensor(0.7497) feature loss: tensor(1.5870)
Local adapation with distilling: 0.000964
training loss: tensor(1.1806) feature loss: tensor(1.6936)
Local adapation with distilling: 0.000964
training loss: tensor(0.3867) feature loss: tensor(1.0991)
Local adapation with distilling: 0.000964
training loss: tensor(0.3577) feature loss: tensor(0.9620)
Local adapation with distilling: 0.000964
training loss: tensor(0.3216) feature loss: tensor(1.1837)
Local adapation with distilling: 0.000964
training loss: tensor(2.3644) feature loss: tensor(2.1657)
Local adapation with distilling: 0.000964
training loss: tensor(0.6513) feature loss: tensor(1.5169)
Local adapation with distilling: 0.000964
training loss: tensor(3.0231) feature loss: tensor(1.9346)
Local adapation with distilling: 0.000964
training loss: tensor(0.6350) feature loss: tensor(1.0200)
Local adapation with distilling: 0.000964
training loss: tensor(0.8104) feature loss: tensor(1.5489)
         GM acc on global data: 0.2166 length of data: 10000
-------------Round number:  3  -------------
selected users: [93, 67, 6, 64, 96, 83, 98, 42, 25, 15]
torch.Size([516, 3, 32, 32]) torch.Size([516])
torch.Size([543, 3, 32, 32]) torch.Size([543])
torch.Size([538, 3, 32, 32]) torch.Size([538])
torch.Size([299, 3, 32, 32]) torch.Size([299])
torch.Size([1321, 3, 32, 32]) torch.Size([1321])
torch.Size([372, 3, 32, 32]) torch.Size([372])
torch.Size([110, 3, 32, 32]) torch.Size([110])
torch.Size([147, 3, 32, 32]) torch.Size([147])
torch.Size([484, 3, 32, 32]) torch.Size([484])
torch.Size([213, 3, 32, 32]) torch.Size([213])
4543 72 72
all data: 1000
Local adapation with distilling: 0.000946
training loss: tensor(1.0112) feature loss: tensor(1.0430)
Local adapation with distilling: 0.000946
training loss: tensor(0.4128) feature loss: tensor(0.9047)
Local adapation with distilling: 0.000946
training loss: tensor(0.6873) feature loss: tensor(1.1581)
Local adapation with distilling: 0.000946
training loss: tensor(0.5411) feature loss: tensor(1.2824)
Local adapation with distilling: 0.000946
training loss: tensor(0.3008) feature loss: tensor(0.5498)
Local adapation with distilling: 0.000946
training loss: tensor(0.4967) feature loss: tensor(1.2575)
Local adapation with distilling: 0.000946
training loss: tensor(1.1868) feature loss: tensor(2.0685)
Local adapation with distilling: 0.000946
training loss: tensor(0.6025) feature loss: tensor(1.6629)
Local adapation with distilling: 0.000946
training loss: tensor(0.5948) feature loss: tensor(1.0647)
Local adapation with distilling: 0.000946
training loss: tensor(0.5814) feature loss: tensor(1.5421)
         GM acc on global data: 0.2325 length of data: 10000
-------------Round number:  4  -------------
selected users: [20, 10, 96, 16, 63, 24, 53, 97, 41, 47]
torch.Size([37, 3, 32, 32]) torch.Size([37])
torch.Size([513, 3, 32, 32]) torch.Size([513])
torch.Size([1321, 3, 32, 32]) torch.Size([1321])
torch.Size([830, 3, 32, 32]) torch.Size([830])
torch.Size([582, 3, 32, 32]) torch.Size([582])
torch.Size([1084, 3, 32, 32]) torch.Size([1084])
torch.Size([262, 3, 32, 32]) torch.Size([262])
torch.Size([40, 3, 32, 32]) torch.Size([40])
torch.Size([502, 3, 32, 32]) torch.Size([502])
torch.Size([689, 3, 32, 32]) torch.Size([689])
5860 72 72
all data: 1000
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(0.9400) feature loss: tensor(2.1027)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.7697) feature loss: tensor(0.9556)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(0.2053) feature loss: tensor(0.5801)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(0.4596) feature loss: tensor(0.7231)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(0.8566) feature loss: tensor(0.8361)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(0.2300) feature loss: tensor(0.6043)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(0.8964) feature loss: tensor(1.3272)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.2463) feature loss: tensor(2.3648)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(0.6141) feature loss: tensor(0.9229)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(0.4607) feature loss: tensor(0.7582)
         GM acc on global data: 0.2129 length of data: 10000
-------------Round number:  5  -------------
selected users: [66, 32, 46, 28, 74, 23, 10, 20, 17, 35]
torch.Size([352, 3, 32, 32]) torch.Size([352])
torch.Size([257, 3, 32, 32]) torch.Size([257])
torch.Size([530, 3, 32, 32]) torch.Size([530])
torch.Size([951, 3, 32, 32]) torch.Size([951])
torch.Size([309, 3, 32, 32]) torch.Size([309])
torch.Size([70, 3, 32, 32]) torch.Size([70])
torch.Size([513, 3, 32, 32]) torch.Size([513])
torch.Size([37, 3, 32, 32]) torch.Size([37])
torch.Size([543, 3, 32, 32]) torch.Size([543])
torch.Size([263, 3, 32, 32]) torch.Size([263])
3825 72 72
all data: 1000
Local adapation with distilling: 0.00091
training loss: tensor(0.5421) feature loss: tensor(1.1189)
Local adapation with distilling: 0.00091
training loss: tensor(0.9314) feature loss: tensor(1.4007)
Local adapation with distilling: 0.00091
training loss: tensor(0.5157) feature loss: tensor(0.9189)
Local adapation with distilling: 0.00091
training loss: tensor(0.4092) feature loss: tensor(0.6456)
Local adapation with distilling: 0.00091
training loss: tensor(2.3865) feature loss: tensor(1.3075)
Local adapation with distilling: 0.00091
training loss: tensor(2.0392) feature loss: tensor(2.0818)
Local adapation with distilling: 0.00091
training loss: tensor(0.9507) feature loss: tensor(0.9514)
Local adapation with distilling: 0.00091
training loss: tensor(1.1547) feature loss: tensor(2.5802)
Local adapation with distilling: 0.00091
training loss: tensor(0.2497) feature loss: tensor(1.0280)
Local adapation with distilling: 0.00091
training loss: tensor(0.4991) feature loss: tensor(1.3139)
         GM acc on global data: 0.3717 length of data: 10000
-------------Round number:  6  -------------
selected users: [17, 34, 0, 45, 60, 86, 20, 47, 44, 81]
torch.Size([543, 3, 32, 32]) torch.Size([543])
torch.Size([1363, 3, 32, 32]) torch.Size([1363])
torch.Size([171, 3, 32, 32]) torch.Size([171])
torch.Size([122, 3, 32, 32]) torch.Size([122])
torch.Size([15, 3, 32, 32]) torch.Size([15])
torch.Size([437, 3, 32, 32]) torch.Size([437])
torch.Size([37, 3, 32, 32]) torch.Size([37])
torch.Size([689, 3, 32, 32]) torch.Size([689])
torch.Size([668, 3, 32, 32]) torch.Size([668])
torch.Size([1216, 3, 32, 32]) torch.Size([1216])
5261 72 72
all data: 1000
Local adapation with distilling: 0.000892
training loss: tensor(0.2180) feature loss: tensor(0.8669)
Local adapation with distilling: 0.000892
training loss: tensor(0.3558) feature loss: tensor(0.4610)
Local adapation with distilling: 0.000892
training loss: tensor(5.0464) feature loss: tensor(1.7034)
Local adapation with distilling: 0.000892
training loss: tensor(0.8739) feature loss: tensor(1.6520)
Local adapation with distilling: 0.000892
training loss: tensor(0.9735) feature loss: tensor(1.9134)
Local adapation with distilling: 0.000892
training loss: tensor(0.5315) feature loss: tensor(0.9325)
Local adapation with distilling: 0.000892
training loss: tensor(0.3820) feature loss: tensor(2.0971)
Local adapation with distilling: 0.000892
training loss: tensor(0.2257) feature loss: tensor(0.7336)
Local adapation with distilling: 0.000892
training loss: tensor(0.3648) feature loss: tensor(0.6317)
Local adapation with distilling: 0.000892
training loss: tensor(0.2539) feature loss: tensor(0.5383)
         GM acc on global data: 0.2986 length of data: 10000
-------------Round number:  7  -------------
selected users: [37, 26, 78, 91, 49, 15, 93, 71, 86, 22]
torch.Size([139, 3, 32, 32]) torch.Size([139])
torch.Size([72, 3, 32, 32]) torch.Size([72])
torch.Size([277, 3, 32, 32]) torch.Size([277])
torch.Size([1199, 3, 32, 32]) torch.Size([1199])
torch.Size([695, 3, 32, 32]) torch.Size([695])
torch.Size([213, 3, 32, 32]) torch.Size([213])
torch.Size([516, 3, 32, 32]) torch.Size([516])
torch.Size([159, 3, 32, 32]) torch.Size([159])
torch.Size([437, 3, 32, 32]) torch.Size([437])
torch.Size([718, 3, 32, 32]) torch.Size([718])
4425 72 72
all data: 1000
Local adapation with distilling: 0.000874
training loss: tensor(1.1310) feature loss: tensor(1.9085)
Local adapation with distilling: 0.000874
training loss: tensor(5.0807) feature loss: tensor(2.1943)
Local adapation with distilling: 0.000874
training loss: tensor(0.4836) feature loss: tensor(1.3172)
Local adapation with distilling: 0.000874
training loss: tensor(0.3019) feature loss: tensor(0.5165)
Local adapation with distilling: 0.000874
training loss: tensor(0.4434) feature loss: tensor(0.7794)
Local adapation with distilling: 0.000874
training loss: tensor(0.6292) feature loss: tensor(1.7091)
Local adapation with distilling: 0.000874
training loss: tensor(0.9020) feature loss: tensor(0.8775)
Local adapation with distilling: 0.000874
training loss: tensor(2.6036) feature loss: tensor(1.9183)
Local adapation with distilling: 0.000874
training loss: tensor(0.4491) feature loss: tensor(1.0700)
Local adapation with distilling: 0.000874
training loss: tensor(1.3381) feature loss: tensor(0.8340)
         GM acc on global data: 0.3712 length of data: 10000
-------------Round number:  8  -------------
selected users: [17, 23, 1, 44, 55, 99, 86, 29, 62, 33]
torch.Size([543, 3, 32, 32]) torch.Size([543])
torch.Size([70, 3, 32, 32]) torch.Size([70])
torch.Size([52, 3, 32, 32]) torch.Size([52])
torch.Size([668, 3, 32, 32]) torch.Size([668])
torch.Size([2015, 3, 32, 32]) torch.Size([2015])
torch.Size([359, 3, 32, 32]) torch.Size([359])
torch.Size([437, 3, 32, 32]) torch.Size([437])
torch.Size([845, 3, 32, 32]) torch.Size([845])
torch.Size([359, 3, 32, 32]) torch.Size([359])
torch.Size([546, 3, 32, 32]) torch.Size([546])
5894 72 72
all data: 1000
Local adapation with distilling: 0.000856
training loss: tensor(0.2219) feature loss: tensor(0.7171)
Local adapation with distilling: 0.000856
training loss: tensor(1.5843) feature loss: tensor(1.7313)
Local adapation with distilling: 0.000856
training loss: tensor(0.4216) feature loss: tensor(2.1885)
Local adapation with distilling: 0.000856
training loss: tensor(0.4295) feature loss: tensor(0.5906)
Local adapation with distilling: 0.000856
training loss: tensor(0.1682) feature loss: tensor(0.2953)
Local adapation with distilling: 0.000856
training loss: tensor(0.4729) feature loss: tensor(0.8790)
Local adapation with distilling: 0.000856
training loss: tensor(0.3471) feature loss: tensor(0.8208)
Local adapation with distilling: 0.000856
training loss: tensor(0.3292) feature loss: tensor(0.5947)
Local adapation with distilling: 0.000856
training loss: tensor(0.7084) feature loss: tensor(0.8610)
Local adapation with distilling: 0.000856
training loss: tensor(0.3885) feature loss: tensor(0.6520)
         GM acc on global data: 0.3611 length of data: 10000
-------------Round number:  9  -------------
selected users: [75, 42, 46, 68, 3, 39, 23, 20, 70, 73]
torch.Size([2441, 3, 32, 32]) torch.Size([2441])
torch.Size([147, 3, 32, 32]) torch.Size([147])
torch.Size([530, 3, 32, 32]) torch.Size([530])
torch.Size([993, 3, 32, 32]) torch.Size([993])
torch.Size([56, 3, 32, 32]) torch.Size([56])
torch.Size([1283, 3, 32, 32]) torch.Size([1283])
torch.Size([70, 3, 32, 32]) torch.Size([70])
torch.Size([37, 3, 32, 32]) torch.Size([37])
torch.Size([90, 3, 32, 32]) torch.Size([90])
torch.Size([117, 3, 32, 32]) torch.Size([117])
5764 72 72
all data: 1000
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.3282) feature loss: tensor(0.2971)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.5464) feature loss: tensor(2.1311)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.3786) feature loss: tensor(0.9024)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.3397) feature loss: tensor(0.6055)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(1.2410) feature loss: tensor(4.4964)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.2213) feature loss: tensor(0.4992)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(1.2311) feature loss: tensor(2.7628)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(1.1006) feature loss: tensor(4.5731)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(3.0151) feature loss: tensor(2.6698)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(2.3315) feature loss: tensor(3.0299)
         GM acc on global data: 0.3139 length of data: 10000
-------------Round number:  10  -------------
selected users: [19, 14, 43, 37, 66, 3, 79, 41, 38, 68]
torch.Size([524, 3, 32, 32]) torch.Size([524])
torch.Size([354, 3, 32, 32]) torch.Size([354])
torch.Size([372, 3, 32, 32]) torch.Size([372])
torch.Size([139, 3, 32, 32]) torch.Size([139])
torch.Size([352, 3, 32, 32]) torch.Size([352])
torch.Size([56, 3, 32, 32]) torch.Size([56])
torch.Size([274, 3, 32, 32]) torch.Size([274])
torch.Size([502, 3, 32, 32]) torch.Size([502])
torch.Size([239, 3, 32, 32]) torch.Size([239])
torch.Size([993, 3, 32, 32]) torch.Size([993])
3805 72 72
all data: 1000
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.8185) feature loss: tensor(0.8356)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.3470) feature loss: tensor(1.2430)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(1.5723) feature loss: tensor(1.2162)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(1.1936) feature loss: tensor(1.8820)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.9589) feature loss: tensor(1.0958)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(2.6388) feature loss: tensor(3.8483)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(1.4217) feature loss: tensor(1.3089)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.9550) feature loss: tensor(0.8902)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(1.2249) feature loss: tensor(1.7237)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.1818) feature loss: tensor(0.5443)
         GM acc on global data: 0.3889 length of data: 10000
-------------Round number:  11  -------------
selected users: [46, 49, 22, 58, 41, 98, 62, 29, 30, 51]
torch.Size([530, 3, 32, 32]) torch.Size([530])
torch.Size([695, 3, 32, 32]) torch.Size([695])
torch.Size([718, 3, 32, 32]) torch.Size([718])
torch.Size([787, 3, 32, 32]) torch.Size([787])
torch.Size([502, 3, 32, 32]) torch.Size([502])
torch.Size([110, 3, 32, 32]) torch.Size([110])
torch.Size([359, 3, 32, 32]) torch.Size([359])
torch.Size([845, 3, 32, 32]) torch.Size([845])
torch.Size([257, 3, 32, 32]) torch.Size([257])
torch.Size([762, 3, 32, 32]) torch.Size([762])
5565 72 72
all data: 1000
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.3309) feature loss: tensor(0.5669)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.2726) feature loss: tensor(0.5091)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.6821) feature loss: tensor(0.5130)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.1994) feature loss: tensor(0.4065)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.2451) feature loss: tensor(0.7099)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.9017) feature loss: tensor(1.8865)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.4168) feature loss: tensor(0.9539)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.2415) feature loss: tensor(0.4181)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(2.6773) feature loss: tensor(1.1169)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.4093) feature loss: tensor(0.4482)
         GM acc on global data: 0.3784 length of data: 10000
-------------Round number:  12  -------------
selected users: [17, 41, 92, 14, 68, 31, 89, 15, 21, 60]
torch.Size([543, 3, 32, 32]) torch.Size([543])
torch.Size([502, 3, 32, 32]) torch.Size([502])
torch.Size([400, 3, 32, 32]) torch.Size([400])
torch.Size([354, 3, 32, 32]) torch.Size([354])
torch.Size([993, 3, 32, 32]) torch.Size([993])
torch.Size([211, 3, 32, 32]) torch.Size([211])
torch.Size([523, 3, 32, 32]) torch.Size([523])
torch.Size([213, 3, 32, 32]) torch.Size([213])
torch.Size([277, 3, 32, 32]) torch.Size([277])
torch.Size([15, 3, 32, 32]) torch.Size([15])
4031 72 72
all data: 1000
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.2229) feature loss: tensor(0.6212)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.2464) feature loss: tensor(0.6837)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.5007) feature loss: tensor(0.8539)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.3992) feature loss: tensor(0.8247)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.1681) feature loss: tensor(0.3921)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.4673) feature loss: tensor(1.1897)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.4302) feature loss: tensor(0.5578)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.9424) feature loss: tensor(1.2179)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.8042) feature loss: tensor(0.9975)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.8531) feature loss: tensor(2.5297)
         GM acc on global data: 0.3915 length of data: 10000
-------------Round number:  13  -------------
selected users: [37, 62, 83, 14, 43, 9, 44, 31, 69, 57]
torch.Size([139, 3, 32, 32]) torch.Size([139])
torch.Size([359, 3, 32, 32]) torch.Size([359])
torch.Size([372, 3, 32, 32]) torch.Size([372])
torch.Size([354, 3, 32, 32]) torch.Size([354])
torch.Size([372, 3, 32, 32]) torch.Size([372])
torch.Size([120, 3, 32, 32]) torch.Size([120])
torch.Size([668, 3, 32, 32]) torch.Size([668])
torch.Size([211, 3, 32, 32]) torch.Size([211])
torch.Size([584, 3, 32, 32]) torch.Size([584])
torch.Size([655, 3, 32, 32]) torch.Size([655])
3834 72 72
all data: 1000
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.4442) feature loss: tensor(1.2647)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.5022) feature loss: tensor(0.8762)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.3943) feature loss: tensor(0.7790)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.3002) feature loss: tensor(0.7500)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.5161) feature loss: tensor(0.7991)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.5852) feature loss: tensor(1.6166)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.3865) feature loss: tensor(0.4740)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.3909) feature loss: tensor(1.0490)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.3717) feature loss: tensor(0.5353)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.3130) feature loss: tensor(0.5149)
         GM acc on global data: 0.4648 length of data: 10000
-------------Round number:  14  -------------
selected users: [24, 39, 35, 44, 55, 70, 82, 40, 91, 65]
torch.Size([1084, 3, 32, 32]) torch.Size([1084])
torch.Size([1283, 3, 32, 32]) torch.Size([1283])
torch.Size([263, 3, 32, 32]) torch.Size([263])
torch.Size([668, 3, 32, 32]) torch.Size([668])
torch.Size([2015, 3, 32, 32]) torch.Size([2015])
torch.Size([90, 3, 32, 32]) torch.Size([90])
torch.Size([111, 3, 32, 32]) torch.Size([111])
torch.Size([337, 3, 32, 32]) torch.Size([337])
torch.Size([1199, 3, 32, 32]) torch.Size([1199])
torch.Size([356, 3, 32, 32]) torch.Size([356])
7406 72 72
all data: 1000
Local adapation with distilling: 0.000748
training loss: tensor(0.1223) feature loss: tensor(0.2775)
Local adapation with distilling: 0.000748
training loss: tensor(0.1919) feature loss: tensor(0.2569)
Local adapation with distilling: 0.000748
training loss: tensor(0.5304) feature loss: tensor(0.7735)
Local adapation with distilling: 0.000748
training loss: tensor(0.2022) feature loss: tensor(0.3505)
Local adapation with distilling: 0.000748
training loss: tensor(0.0628) feature loss: tensor(0.2172)
Local adapation with distilling: 0.000748
training loss: tensor(0.9481) feature loss: tensor(1.3106)
Local adapation with distilling: 0.000748
training loss: tensor(0.7695) feature loss: tensor(1.2333)
Local adapation with distilling: 0.000748
training loss: tensor(0.3616) feature loss: tensor(0.5401)
Local adapation with distilling: 0.000748
training loss: tensor(0.1603) feature loss: tensor(0.2329)
Local adapation with distilling: 0.000748
training loss: tensor(0.5855) feature loss: tensor(0.6519)
         GM acc on global data: 0.4011 length of data: 10000
-------------Round number:  15  -------------
selected users: [84, 36, 57, 51, 46, 78, 93, 14, 11, 59]
torch.Size([271, 3, 32, 32]) torch.Size([271])
torch.Size([979, 3, 32, 32]) torch.Size([979])
torch.Size([655, 3, 32, 32]) torch.Size([655])
torch.Size([762, 3, 32, 32]) torch.Size([762])
torch.Size([530, 3, 32, 32]) torch.Size([530])
torch.Size([277, 3, 32, 32]) torch.Size([277])
torch.Size([516, 3, 32, 32]) torch.Size([516])
torch.Size([354, 3, 32, 32]) torch.Size([354])
torch.Size([240, 3, 32, 32]) torch.Size([240])
torch.Size([131, 3, 32, 32]) torch.Size([131])
4715 72 72
all data: 1000
Local adapation with distilling: 0.00073
training loss: tensor(0.9166) feature loss: tensor(1.0025)
Local adapation with distilling: 0.00073
training loss: tensor(0.3606) feature loss: tensor(0.3919)
Local adapation with distilling: 0.00073
training loss: tensor(0.2964) feature loss: tensor(0.5071)
Local adapation with distilling: 0.00073
training loss: tensor(0.4453) feature loss: tensor(0.4627)
Local adapation with distilling: 0.00073
training loss: tensor(0.2214) feature loss: tensor(0.5655)
Local adapation with distilling: 0.00073
training loss: tensor(0.7401) feature loss: tensor(0.9194)
Local adapation with distilling: 0.00073
training loss: tensor(0.4377) feature loss: tensor(0.5790)
Local adapation with distilling: 0.00073
training loss: tensor(0.3495) feature loss: tensor(0.8786)
Local adapation with distilling: 0.00073
training loss: tensor(0.5020) feature loss: tensor(1.1107)
Local adapation with distilling: 0.00073
training loss: tensor(1.1854) feature loss: tensor(1.6905)
         GM acc on global data: 0.4821 length of data: 10000
-------------Round number:  16  -------------
selected users: [7, 25, 71, 42, 47, 29, 63, 88, 50, 9]
torch.Size([110, 3, 32, 32]) torch.Size([110])
torch.Size([484, 3, 32, 32]) torch.Size([484])
torch.Size([159, 3, 32, 32]) torch.Size([159])
torch.Size([147, 3, 32, 32]) torch.Size([147])
torch.Size([689, 3, 32, 32]) torch.Size([689])
torch.Size([845, 3, 32, 32]) torch.Size([845])
torch.Size([582, 3, 32, 32]) torch.Size([582])
torch.Size([210, 3, 32, 32]) torch.Size([210])
torch.Size([118, 3, 32, 32]) torch.Size([118])
torch.Size([120, 3, 32, 32]) torch.Size([120])
3464 72 72
all data: 1000
Local adapation with distilling: 0.000712
training loss: tensor(0.8544) feature loss: tensor(1.4780)
Local adapation with distilling: 0.000712
training loss: tensor(0.2853) feature loss: tensor(0.5002)
Local adapation with distilling: 0.000712
training loss: tensor(0.3928) feature loss: tensor(1.0119)
Local adapation with distilling: 0.000712
training loss: tensor(0.3720) feature loss: tensor(0.9928)
Local adapation with distilling: 0.000712
training loss: tensor(0.1630) feature loss: tensor(0.3998)
Local adapation with distilling: 0.000712
training loss: tensor(0.1692) feature loss: tensor(0.3153)
Local adapation with distilling: 0.000712
training loss: tensor(0.3703) feature loss: tensor(0.4091)
Local adapation with distilling: 0.000712
training loss: tensor(0.4641) feature loss: tensor(0.8190)
Local adapation with distilling: 0.000712
training loss: tensor(1.2002) feature loss: tensor(1.2971)
Local adapation with distilling: 0.000712
training loss: tensor(0.6232) feature loss: tensor(1.2669)
         GM acc on global data: 0.482 length of data: 10000
-------------Round number:  17  -------------
selected users: [71, 28, 9, 4, 73, 34, 94, 92, 47, 37]
torch.Size([159, 3, 32, 32]) torch.Size([159])
torch.Size([951, 3, 32, 32]) torch.Size([951])
torch.Size([120, 3, 32, 32]) torch.Size([120])
torch.Size([156, 3, 32, 32]) torch.Size([156])
torch.Size([117, 3, 32, 32]) torch.Size([117])
torch.Size([1363, 3, 32, 32]) torch.Size([1363])
torch.Size([125, 3, 32, 32]) torch.Size([125])
torch.Size([400, 3, 32, 32]) torch.Size([400])
torch.Size([689, 3, 32, 32]) torch.Size([689])
torch.Size([139, 3, 32, 32]) torch.Size([139])
4219 72 72
all data: 1000
Local adapation with distilling: 0.000694
training loss: tensor(0.2126) feature loss: tensor(0.9768)
Local adapation with distilling: 0.000694
training loss: tensor(0.1894) feature loss: tensor(0.2539)
Local adapation with distilling: 0.000694
training loss: tensor(0.5496) feature loss: tensor(1.1545)
Local adapation with distilling: 0.000694
training loss: tensor(0.3588) feature loss: tensor(0.8006)
Local adapation with distilling: 0.000694
training loss: tensor(0.8050) feature loss: tensor(1.2188)
Local adapation with distilling: 0.000694
training loss: tensor(0.1752) feature loss: tensor(0.1977)
Local adapation with distilling: 0.000694
training loss: tensor(1.1041) feature loss: tensor(1.3569)
Local adapation with distilling: 0.000694
training loss: tensor(0.3813) feature loss: tensor(0.5470)
Local adapation with distilling: 0.000694
training loss: tensor(0.1178) feature loss: tensor(0.3741)
Local adapation with distilling: 0.000694
training loss: tensor(0.4800) feature loss: tensor(0.8783)
         GM acc on global data: 0.3972 length of data: 10000
-------------Round number:  18  -------------
selected users: [53, 47, 43, 54, 33, 48, 0, 12, 44, 91]
torch.Size([262, 3, 32, 32]) torch.Size([262])
torch.Size([689, 3, 32, 32]) torch.Size([689])
torch.Size([372, 3, 32, 32]) torch.Size([372])
torch.Size([323, 3, 32, 32]) torch.Size([323])
torch.Size([546, 3, 32, 32]) torch.Size([546])
torch.Size([309, 3, 32, 32]) torch.Size([309])
torch.Size([171, 3, 32, 32]) torch.Size([171])
torch.Size([48, 3, 32, 32]) torch.Size([48])
torch.Size([668, 3, 32, 32]) torch.Size([668])
torch.Size([1199, 3, 32, 32]) torch.Size([1199])
4587 72 72
all data: 1000
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.5631) feature loss: tensor(0.7977)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.1006) feature loss: tensor(0.3792)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.6550) feature loss: tensor(0.6534)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.6346) feature loss: tensor(0.6501)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.2385) feature loss: tensor(0.3919)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.3473) feature loss: tensor(0.7615)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(1.8862) feature loss: tensor(1.1618)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.5348) feature loss: tensor(2.0865)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.2070) feature loss: tensor(0.3446)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.1867) feature loss: tensor(0.2402)
         GM acc on global data: 0.4774 length of data: 10000
-------------Round number:  19  -------------
selected users: [85, 72, 16, 18, 2, 38, 90, 30, 83, 61]
torch.Size([238, 3, 32, 32]) torch.Size([238])
torch.Size([206, 3, 32, 32]) torch.Size([206])
torch.Size([830, 3, 32, 32]) torch.Size([830])
torch.Size([526, 3, 32, 32]) torch.Size([526])
torch.Size([457, 3, 32, 32]) torch.Size([457])
torch.Size([239, 3, 32, 32]) torch.Size([239])
torch.Size([800, 3, 32, 32]) torch.Size([800])
torch.Size([257, 3, 32, 32]) torch.Size([257])
torch.Size([372, 3, 32, 32]) torch.Size([372])
torch.Size([711, 3, 32, 32]) torch.Size([711])
4636 72 72
all data: 1000
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.3124) feature loss: tensor(0.8927)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.2035) feature loss: tensor(0.9716)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.0877) feature loss: tensor(0.3534)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.2977) feature loss: tensor(0.4851)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.3116) feature loss: tensor(0.5418)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.7612) feature loss: tensor(1.0271)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.1489) feature loss: tensor(0.3961)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(1.5446) feature loss: tensor(0.9180)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.2417) feature loss: tensor(0.6290)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.2706) feature loss: tensor(0.4140)
         GM acc on global data: 0.4854 length of data: 10000
-------------Round number:  20  -------------
selected users: [70, 74, 2, 44, 56, 48, 12, 36, 0, 49]
torch.Size([90, 3, 32, 32]) torch.Size([90])
torch.Size([309, 3, 32, 32]) torch.Size([309])
torch.Size([457, 3, 32, 32]) torch.Size([457])
torch.Size([668, 3, 32, 32]) torch.Size([668])
torch.Size([876, 3, 32, 32]) torch.Size([876])
torch.Size([309, 3, 32, 32]) torch.Size([309])
torch.Size([48, 3, 32, 32]) torch.Size([48])
torch.Size([979, 3, 32, 32]) torch.Size([979])
torch.Size([171, 3, 32, 32]) torch.Size([171])
torch.Size([695, 3, 32, 32]) torch.Size([695])
4602 72 72
all data: 1000
Local adapation with distilling: 0.00064
training loss: tensor(0.9209) feature loss: tensor(1.3932)
Local adapation with distilling: 0.00064
training loss: tensor(0.3115) feature loss: tensor(0.5910)
Local adapation with distilling: 0.00064
training loss: tensor(0.2584) feature loss: tensor(0.4261)
Local adapation with distilling: 0.00064
training loss: tensor(0.1331) feature loss: tensor(0.2972)
Local adapation with distilling: 0.00064
training loss: tensor(0.1399) feature loss: tensor(0.2719)
Local adapation with distilling: 0.00064
training loss: tensor(0.2684) feature loss: tensor(0.5517)
Local adapation with distilling: 0.00064
training loss: tensor(0.8103) feature loss: tensor(1.8012)
Local adapation with distilling: 0.00064
training loss: tensor(0.1484) feature loss: tensor(0.2485)
Local adapation with distilling: 0.00064
training loss: tensor(1.6044) feature loss: tensor(1.0908)
Local adapation with distilling: 0.00064
training loss: tensor(0.2051) feature loss: tensor(0.3060)
         GM acc on global data: 0.4367 length of data: 10000
-------------Round number:  21  -------------
selected users: [23, 81, 85, 34, 62, 46, 42, 31, 93, 11]
torch.Size([70, 3, 32, 32]) torch.Size([70])
torch.Size([1216, 3, 32, 32]) torch.Size([1216])
torch.Size([238, 3, 32, 32]) torch.Size([238])
torch.Size([1363, 3, 32, 32]) torch.Size([1363])
torch.Size([359, 3, 32, 32]) torch.Size([359])
torch.Size([530, 3, 32, 32]) torch.Size([530])
torch.Size([147, 3, 32, 32]) torch.Size([147])
torch.Size([211, 3, 32, 32]) torch.Size([211])
torch.Size([516, 3, 32, 32]) torch.Size([516])
torch.Size([240, 3, 32, 32]) torch.Size([240])
4890 72 72
all data: 1000
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(1.4708) feature loss: tensor(1.3464)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.0467) feature loss: tensor(0.2394)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.5258) feature loss: tensor(0.7360)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.1094) feature loss: tensor(0.1983)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.5168) feature loss: tensor(0.5676)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.2957) feature loss: tensor(0.4144)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.3646) feature loss: tensor(0.9926)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.4464) feature loss: tensor(0.8155)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.4106) feature loss: tensor(0.4257)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.5700) feature loss: tensor(0.7134)
         GM acc on global data: 0.4162 length of data: 10000
-------------Round number:  22  -------------
selected users: [2, 49, 82, 31, 37, 12, 87, 42, 99, 85]
torch.Size([457, 3, 32, 32]) torch.Size([457])
torch.Size([695, 3, 32, 32]) torch.Size([695])
torch.Size([111, 3, 32, 32]) torch.Size([111])
torch.Size([211, 3, 32, 32]) torch.Size([211])
torch.Size([139, 3, 32, 32]) torch.Size([139])
torch.Size([48, 3, 32, 32]) torch.Size([48])
torch.Size([93, 3, 32, 32]) torch.Size([93])
torch.Size([147, 3, 32, 32]) torch.Size([147])
torch.Size([359, 3, 32, 32]) torch.Size([359])
torch.Size([238, 3, 32, 32]) torch.Size([238])
2498 72 72
all data: 1000
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.2533) feature loss: tensor(0.3398)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.1041) feature loss: tensor(0.2502)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(1.0915) feature loss: tensor(1.0515)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.2753) feature loss: tensor(0.6197)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.4739) feature loss: tensor(0.8551)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.4872) feature loss: tensor(1.4936)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(1.1799) feature loss: tensor(0.9810)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.4097) feature loss: tensor(0.7954)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.2125) feature loss: tensor(0.4114)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.3118) feature loss: tensor(0.6169)
         GM acc on global data: 0.4549 length of data: 10000
-------------Round number:  23  -------------
selected users: [26, 80, 82, 68, 77, 37, 3, 55, 20, 17]
torch.Size([72, 3, 32, 32]) torch.Size([72])
torch.Size([319, 3, 32, 32]) torch.Size([319])
torch.Size([111, 3, 32, 32]) torch.Size([111])
torch.Size([993, 3, 32, 32]) torch.Size([993])
torch.Size([693, 3, 32, 32]) torch.Size([693])
torch.Size([139, 3, 32, 32]) torch.Size([139])
torch.Size([56, 3, 32, 32]) torch.Size([56])
torch.Size([2015, 3, 32, 32]) torch.Size([2015])
torch.Size([37, 3, 32, 32]) torch.Size([37])
torch.Size([543, 3, 32, 32]) torch.Size([543])
4978 72 72
all data: 1000
Local adapation with distilling: 0.000586
training loss: tensor(3.5071) feature loss: tensor(1.7462)
Local adapation with distilling: 0.000586
training loss: tensor(0.2906) feature loss: tensor(0.7113)
Local adapation with distilling: 0.000586
training loss: tensor(0.5457) feature loss: tensor(1.3674)
Local adapation with distilling: 0.000586
training loss: tensor(0.1652) feature loss: tensor(0.3050)
Local adapation with distilling: 0.000586
training loss: tensor(0.2088) feature loss: tensor(0.3206)
Local adapation with distilling: 0.000586
training loss: tensor(0.3006) feature loss: tensor(0.9632)
Local adapation with distilling: 0.000586
training loss: tensor(0.6762) feature loss: tensor(2.1087)
Local adapation with distilling: 0.000586
training loss: tensor(0.0753) feature loss: tensor(0.1547)
Local adapation with distilling: 0.000586
training loss: tensor(0.5871) feature loss: tensor(2.0861)
Local adapation with distilling: 0.000586
training loss: tensor(0.2267) feature loss: tensor(0.4317)
         GM acc on global data: 0.3731 length of data: 10000
-------------Round number:  24  -------------
selected users: [26, 31, 37, 86, 76, 14, 88, 48, 71, 67]
torch.Size([72, 3, 32, 32]) torch.Size([72])
torch.Size([211, 3, 32, 32]) torch.Size([211])
torch.Size([139, 3, 32, 32]) torch.Size([139])
torch.Size([437, 3, 32, 32]) torch.Size([437])
torch.Size([2848, 3, 32, 32]) torch.Size([2848])
torch.Size([354, 3, 32, 32]) torch.Size([354])
torch.Size([210, 3, 32, 32]) torch.Size([210])
torch.Size([309, 3, 32, 32]) torch.Size([309])
torch.Size([159, 3, 32, 32]) torch.Size([159])
torch.Size([543, 3, 32, 32]) torch.Size([543])
5282 72 72
all data: 1000
Local adapation with distilling: 0.000568
training loss: tensor(4.1388) feature loss: tensor(3.4122)
Local adapation with distilling: 0.000568
training loss: tensor(1.0274) feature loss: tensor(1.8978)
Local adapation with distilling: 0.000568
training loss: tensor(0.4956) feature loss: tensor(2.5985)
Local adapation with distilling: 0.000568
training loss: tensor(0.7461) feature loss: tensor(1.1010)
Local adapation with distilling: 0.000568
training loss: tensor(0.2371) feature loss: tensor(0.1883)
Local adapation with distilling: 0.000568
training loss: tensor(0.9787) feature loss: tensor(1.1542)
Local adapation with distilling: 0.000568
training loss: tensor(0.9742) feature loss: tensor(1.8250)
Local adapation with distilling: 0.000568
training loss: tensor(1.0688) feature loss: tensor(1.3759)
Local adapation with distilling: 0.000568
training loss: tensor(1.4528) feature loss: tensor(2.5463)
Local adapation with distilling: 0.000568
training loss: tensor(0.7202) feature loss: tensor(0.8432)
         GM acc on global data: 0.3917 length of data: 10000
-------------Round number:  25  -------------
selected users: [41, 29, 33, 65, 74, 6, 57, 89, 87, 98]
torch.Size([502, 3, 32, 32]) torch.Size([502])
torch.Size([845, 3, 32, 32]) torch.Size([845])
torch.Size([546, 3, 32, 32]) torch.Size([546])
torch.Size([356, 3, 32, 32]) torch.Size([356])
torch.Size([309, 3, 32, 32]) torch.Size([309])
torch.Size([538, 3, 32, 32]) torch.Size([538])
torch.Size([655, 3, 32, 32]) torch.Size([655])
torch.Size([523, 3, 32, 32]) torch.Size([523])
torch.Size([93, 3, 32, 32]) torch.Size([93])
torch.Size([110, 3, 32, 32]) torch.Size([110])
4477 72 72
all data: 1000
Local adapation with distilling: 0.00055
training loss: tensor(0.3122) feature loss: tensor(0.5630)
Local adapation with distilling: 0.00055
training loss: tensor(0.2786) feature loss: tensor(0.3708)
Local adapation with distilling: 0.00055
training loss: tensor(0.3505) feature loss: tensor(0.4873)
Local adapation with distilling: 0.00055
training loss: tensor(0.5892) feature loss: tensor(0.7470)
Local adapation with distilling: 0.00055
training loss: tensor(0.6401) feature loss: tensor(0.9011)
Local adapation with distilling: 0.00055
training loss: tensor(0.5811) feature loss: tensor(0.6407)
Local adapation with distilling: 0.00055
training loss: tensor(0.2885) feature loss: tensor(0.4028)
Local adapation with distilling: 0.00055
training loss: tensor(0.4038) feature loss: tensor(0.5443)
Local adapation with distilling: 0.00055
training loss: tensor(0.4816) feature loss: tensor(2.0168)
Local adapation with distilling: 0.00055
training loss: tensor(1.5588) feature loss: tensor(2.0152)
         GM acc on global data: 0.4771 length of data: 10000
-------------Round number:  26  -------------
selected users: [8, 69, 84, 41, 25, 5, 63, 95, 33, 70]
torch.Size([1059, 3, 32, 32]) torch.Size([1059])
torch.Size([584, 3, 32, 32]) torch.Size([584])
torch.Size([271, 3, 32, 32]) torch.Size([271])
torch.Size([502, 3, 32, 32]) torch.Size([502])
torch.Size([484, 3, 32, 32]) torch.Size([484])
torch.Size([479, 3, 32, 32]) torch.Size([479])
torch.Size([582, 3, 32, 32]) torch.Size([582])
torch.Size([32, 3, 32, 32]) torch.Size([32])
torch.Size([546, 3, 32, 32]) torch.Size([546])
torch.Size([90, 3, 32, 32]) torch.Size([90])
4629 72 72
all data: 1000
Local adapation with distilling: 0.000532
training loss: tensor(0.1827) feature loss: tensor(0.2259)
Local adapation with distilling: 0.000532
training loss: tensor(0.2751) feature loss: tensor(0.3897)
Local adapation with distilling: 0.000532
training loss: tensor(0.9645) feature loss: tensor(0.7786)
Local adapation with distilling: 0.000532
training loss: tensor(0.0882) feature loss: tensor(0.4343)
Local adapation with distilling: 0.000532
training loss: tensor(0.2825) feature loss: tensor(0.3826)
Local adapation with distilling: 0.000532
training loss: tensor(0.2945) feature loss: tensor(0.4269)
Local adapation with distilling: 0.000532
training loss: tensor(0.3689) feature loss: tensor(0.3565)
Local adapation with distilling: 0.000532
training loss: tensor(0.8779) feature loss: tensor(1.7215)
Local adapation with distilling: 0.000532
training loss: tensor(0.1378) feature loss: tensor(0.3749)
Local adapation with distilling: 0.000532
training loss: tensor(1.1237) feature loss: tensor(1.3970)
         GM acc on global data: 0.5254 length of data: 10000
-------------Round number:  27  -------------
selected users: [89, 68, 43, 50, 40, 95, 27, 85, 22, 44]
torch.Size([523, 3, 32, 32]) torch.Size([523])
torch.Size([993, 3, 32, 32]) torch.Size([993])
torch.Size([372, 3, 32, 32]) torch.Size([372])
torch.Size([118, 3, 32, 32]) torch.Size([118])
torch.Size([337, 3, 32, 32]) torch.Size([337])
torch.Size([32, 3, 32, 32]) torch.Size([32])
torch.Size([269, 3, 32, 32]) torch.Size([269])
torch.Size([238, 3, 32, 32]) torch.Size([238])
torch.Size([718, 3, 32, 32]) torch.Size([718])
torch.Size([668, 3, 32, 32]) torch.Size([668])
4268 72 72
all data: 1000
Local adapation with distilling: 0.000514
training loss: tensor(0.1856) feature loss: tensor(0.2744)
Local adapation with distilling: 0.000514
training loss: tensor(0.0922) feature loss: tensor(0.2011)
Local adapation with distilling: 0.000514
training loss: tensor(0.1998) feature loss: tensor(0.3970)
Local adapation with distilling: 0.000514
training loss: tensor(0.4442) feature loss: tensor(1.0697)
Local adapation with distilling: 0.000514
training loss: tensor(0.2272) feature loss: tensor(0.4671)
Local adapation with distilling: 0.000514
training loss: tensor(0.3814) feature loss: tensor(1.4256)
Local adapation with distilling: 0.000514
training loss: tensor(0.3688) feature loss: tensor(0.5605)
Local adapation with distilling: 0.000514
training loss: tensor(0.1784) feature loss: tensor(0.5637)
Local adapation with distilling: 0.000514
training loss: tensor(0.2637) feature loss: tensor(0.2432)
Local adapation with distilling: 0.000514
training loss: tensor(0.1863) feature loss: tensor(0.2552)
         GM acc on global data: 0.477 length of data: 10000
-------------Round number:  28  -------------
selected users: [67, 14, 0, 86, 13, 18, 30, 36, 52, 95]
torch.Size([543, 3, 32, 32]) torch.Size([543])
torch.Size([354, 3, 32, 32]) torch.Size([354])
torch.Size([171, 3, 32, 32]) torch.Size([171])
torch.Size([437, 3, 32, 32]) torch.Size([437])
torch.Size([453, 3, 32, 32]) torch.Size([453])
torch.Size([526, 3, 32, 32]) torch.Size([526])
torch.Size([257, 3, 32, 32]) torch.Size([257])
torch.Size([979, 3, 32, 32]) torch.Size([979])
torch.Size([1078, 3, 32, 32]) torch.Size([1078])
torch.Size([32, 3, 32, 32]) torch.Size([32])
4830 72 72
all data: 1000
Local adapation with distilling: 0.000496
training loss: tensor(0.2953) feature loss: tensor(0.3850)
Local adapation with distilling: 0.000496
training loss: tensor(0.3278) feature loss: tensor(0.5436)
Local adapation with distilling: 0.000496
training loss: tensor(0.2969) feature loss: tensor(1.1311)
Local adapation with distilling: 0.000496
training loss: tensor(0.2259) feature loss: tensor(0.4634)
Local adapation with distilling: 0.000496
training loss: tensor(0.5910) feature loss: tensor(0.4248)
Local adapation with distilling: 0.000496
training loss: tensor(0.2539) feature loss: tensor(0.4063)
Local adapation with distilling: 0.000496
training loss: tensor(2.4255) feature loss: tensor(0.7786)
Local adapation with distilling: 0.000496
training loss: tensor(0.1266) feature loss: tensor(0.2437)
Local adapation with distilling: 0.000496
training loss: tensor(0.1154) feature loss: tensor(0.2328)
Local adapation with distilling: 0.000496
training loss: tensor(0.5653) feature loss: tensor(1.8216)
         GM acc on global data: 0.4936 length of data: 10000
-------------Round number:  29  -------------
selected users: [73, 8, 10, 7, 19, 71, 92, 25, 38, 12]
torch.Size([117, 3, 32, 32]) torch.Size([117])
torch.Size([1059, 3, 32, 32]) torch.Size([1059])
torch.Size([513, 3, 32, 32]) torch.Size([513])
torch.Size([110, 3, 32, 32]) torch.Size([110])
torch.Size([524, 3, 32, 32]) torch.Size([524])
torch.Size([159, 3, 32, 32]) torch.Size([159])
torch.Size([400, 3, 32, 32]) torch.Size([400])
torch.Size([484, 3, 32, 32]) torch.Size([484])
torch.Size([239, 3, 32, 32]) torch.Size([239])
torch.Size([48, 3, 32, 32]) torch.Size([48])
3653 72 72
all data: 1000
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.6579) feature loss: tensor(1.1072)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.0706) feature loss: tensor(0.1732)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(2.2754) feature loss: tensor(0.3369)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.4453) feature loss: tensor(1.2424)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.2784) feature loss: tensor(0.2970)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.2410) feature loss: tensor(0.8859)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.2477) feature loss: tensor(0.4351)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.1335) feature loss: tensor(0.3269)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.6041) feature loss: tensor(0.6435)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.6706) feature loss: tensor(1.3833)
         GM acc on global data: 0.4834 length of data: 10000
-------------Round number:  30  -------------
selected users: [20, 91, 34, 52, 8, 74, 21, 88, 80, 89]
torch.Size([37, 3, 32, 32]) torch.Size([37])
torch.Size([1199, 3, 32, 32]) torch.Size([1199])
torch.Size([1363, 3, 32, 32]) torch.Size([1363])
torch.Size([1078, 3, 32, 32]) torch.Size([1078])
torch.Size([1059, 3, 32, 32]) torch.Size([1059])
torch.Size([309, 3, 32, 32]) torch.Size([309])
torch.Size([277, 3, 32, 32]) torch.Size([277])
torch.Size([210, 3, 32, 32]) torch.Size([210])
torch.Size([319, 3, 32, 32]) torch.Size([319])
torch.Size([523, 3, 32, 32]) torch.Size([523])
6374 72 72
all data: 1000
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.3335) feature loss: tensor(1.2626)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.1729) feature loss: tensor(0.1386)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.0758) feature loss: tensor(0.1221)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.0704) feature loss: tensor(0.1619)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.0352) feature loss: tensor(0.1438)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.1735) feature loss: tensor(0.4591)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.3259) feature loss: tensor(0.4646)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.5588) feature loss: tensor(0.5681)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.2204) feature loss: tensor(0.4757)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.1208) feature loss: tensor(0.2519)
         GM acc on global data: 0.4524 length of data: 10000
-------------Round number:  31  -------------
selected users: [17, 33, 76, 3, 56, 0, 37, 8, 60, 67]
torch.Size([543, 3, 32, 32]) torch.Size([543])
torch.Size([546, 3, 32, 32]) torch.Size([546])
torch.Size([2848, 3, 32, 32]) torch.Size([2848])
torch.Size([56, 3, 32, 32]) torch.Size([56])
torch.Size([876, 3, 32, 32]) torch.Size([876])
torch.Size([171, 3, 32, 32]) torch.Size([171])
torch.Size([139, 3, 32, 32]) torch.Size([139])
torch.Size([1059, 3, 32, 32]) torch.Size([1059])
torch.Size([15, 3, 32, 32]) torch.Size([15])
torch.Size([543, 3, 32, 32]) torch.Size([543])
6796 72 72
all data: 1000
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.2221) feature loss: tensor(0.3563)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.2155) feature loss: tensor(0.3386)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.0979) feature loss: tensor(0.0856)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.7607) feature loss: tensor(2.1229)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.1319) feature loss: tensor(0.2683)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(1.2573) feature loss: tensor(0.9471)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.5976) feature loss: tensor(1.1013)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.0409) feature loss: tensor(0.2102)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(1.0707) feature loss: tensor(2.1014)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.2723) feature loss: tensor(0.4036)
         GM acc on global data: 0.4193 length of data: 10000
-------------Round number:  32  -------------
selected users: [22, 39, 85, 97, 55, 33, 80, 13, 27, 96]
torch.Size([718, 3, 32, 32]) torch.Size([718])
torch.Size([1283, 3, 32, 32]) torch.Size([1283])
torch.Size([238, 3, 32, 32]) torch.Size([238])
torch.Size([40, 3, 32, 32]) torch.Size([40])
torch.Size([2015, 3, 32, 32]) torch.Size([2015])
torch.Size([546, 3, 32, 32]) torch.Size([546])
torch.Size([319, 3, 32, 32]) torch.Size([319])
torch.Size([453, 3, 32, 32]) torch.Size([453])
torch.Size([269, 3, 32, 32]) torch.Size([269])
torch.Size([1321, 3, 32, 32]) torch.Size([1321])
7202 72 72
all data: 1000
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.1406) feature loss: tensor(0.4215)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.2714) feature loss: tensor(0.2824)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.4874) feature loss: tensor(1.1827)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(4.9700) feature loss: tensor(3.4194)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.1218) feature loss: tensor(0.1858)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.1505) feature loss: tensor(0.5525)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.4208) feature loss: tensor(0.9676)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(1.2072) feature loss: tensor(0.7151)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.2325) feature loss: tensor(0.9617)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.1720) feature loss: tensor(0.2982)
         GM acc on global data: 0.5166 length of data: 10000
-------------Round number:  33  -------------
selected users: [56, 90, 95, 82, 60, 71, 6, 81, 2, 70]
torch.Size([876, 3, 32, 32]) torch.Size([876])
torch.Size([800, 3, 32, 32]) torch.Size([800])
torch.Size([32, 3, 32, 32]) torch.Size([32])
torch.Size([111, 3, 32, 32]) torch.Size([111])
torch.Size([15, 3, 32, 32]) torch.Size([15])
torch.Size([159, 3, 32, 32]) torch.Size([159])
torch.Size([538, 3, 32, 32]) torch.Size([538])
torch.Size([1216, 3, 32, 32]) torch.Size([1216])
torch.Size([457, 3, 32, 32]) torch.Size([457])
torch.Size([90, 3, 32, 32]) torch.Size([90])
4294 72 72
all data: 1000
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.1755) feature loss: tensor(0.3580)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.3000) feature loss: tensor(0.4196)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(1.5797) feature loss: tensor(3.2105)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.9829) feature loss: tensor(2.0365)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.3853) feature loss: tensor(3.4345)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.5338) feature loss: tensor(1.6697)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.8503) feature loss: tensor(0.5794)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.1394) feature loss: tensor(0.2798)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.2733) feature loss: tensor(0.6169)
Local adapation with distilling: 0.00040600000000000006
Killed
