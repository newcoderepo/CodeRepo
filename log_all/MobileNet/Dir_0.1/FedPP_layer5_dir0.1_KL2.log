nohup: ignoring input
================================================================================
Summary of training process:
Dataset:                 Cifar10
Batch size:              64
Learing rate :           0.001
personal learning rate : 0.001
Number of total clients: 100
Split parameter        : 0.1
Clients per round      : 10
Number of global rounds: 100
Number of local rounds : 10
Feature from layer     : 5
Feature reduction      : 64
Local training loss    : CE_KL2
Loss of beta           : 1.0
Algorithm              : FedPP
Modelname              : MOBNET
Mode                   : training
================================================================================
Files already downloaded and verified
Files already downloaded and verified
Here
Done
Class frequencies:
client,class0,class1,class2,class3,class4,class5,class6,class7,class8,class9,Amount
Client   0,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1.000,171
Client   1,0.231,0.038,0.00,0.00,0.00,0.077,0.00,0.654,0.00,0.00,52
Client   2,0.374,0.015,0.00,0.00,0.519,0.011,0.007,0.015,0.00,0.059,457
Client   3,0.00,0.00,0.00,0.232,0.768,0.00,0.00,0.00,0.00,0.00,56
Client   4,0.660,0.071,0.032,0.122,0.00,0.00,0.083,0.00,0.00,0.032,156
Client   5,0.00,0.00,0.00,0.00,0.029,0.00,0.00,0.00,0.121,0.850,479
Client   6,0.00,0.080,0.00,0.00,0.009,0.017,0.894,0.00,0.00,0.00,538
Client   7,0.00,0.00,0.00,0.00,0.991,0.00,0.00,0.009,0.00,0.00,110
Client   8,0.131,0.116,0.00,0.00,0.00,0.00,0.00,0.00,0.753,0.00,1059
Client   9,0.00,0.00,0.175,0.00,0.467,0.017,0.192,0.150,0.00,0.00,120
Client  10,0.00,0.331,0.540,0.00,0.00,0.00,0.129,0.00,0.00,0.00,513
Client  11,0.00,0.00,0.250,0.00,0.004,0.358,0.254,0.008,0.121,0.004,240
Client  12,0.00,0.00,0.00,0.00,0.00,0.562,0.00,0.00,0.396,0.042,48
Client  13,0.00,0.00,0.00,0.371,0.185,0.00,0.444,0.00,0.00,0.00,453
Client  14,0.068,0.00,0.003,0.011,0.00,0.042,0.641,0.234,0.00,0.00,354
Client  15,0.00,0.005,0.00,0.00,0.995,0.00,0.00,0.00,0.00,0.00,213
Client  16,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,830
Client  17,0.335,0.00,0.004,0.00,0.007,0.00,0.00,0.654,0.00,0.00,543
Client  18,0.00,0.743,0.00,0.127,0.053,0.076,0.00,0.00,0.00,0.00,526
Client  19,0.008,0.00,0.057,0.676,0.185,0.074,0.00,0.00,0.00,0.00,524
Client  20,0.00,0.00,0.243,0.108,0.00,0.00,0.00,0.216,0.432,0.00,37
Client  21,0.00,0.00,0.00,0.141,0.848,0.00,0.004,0.007,0.00,0.00,277
Client  22,0.00,0.192,0.00,0.00,0.00,0.010,0.00,0.028,0.063,0.708,718
Client  23,0.00,0.100,0.529,0.00,0.00,0.214,0.129,0.00,0.00,0.029,70
Client  24,0.014,0.00,0.002,0.002,0.00,0.00,0.00,0.982,0.00,0.00,1084
Client  25,0.00,0.00,0.006,0.105,0.00,0.169,0.010,0.025,0.684,0.00,484
Client  26,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.194,0.00,0.806,72
Client  27,0.00,0.00,0.00,0.00,0.011,0.086,0.004,0.00,0.019,0.881,269
Client  28,0.237,0.00,0.00,0.001,0.038,0.167,0.001,0.011,0.546,0.00,951
Client  29,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,845
Client  30,0.004,0.00,0.218,0.743,0.00,0.00,0.00,0.023,0.008,0.004,257
Client  31,0.014,0.730,0.00,0.005,0.194,0.005,0.052,0.00,0.00,0.00,211
Client  32,0.00,0.00,0.00,0.00,0.004,0.00,0.743,0.222,0.031,0.00,257
Client  33,0.559,0.084,0.002,0.00,0.013,0.00,0.00,0.234,0.108,0.00,546
Client  34,0.00,0.010,0.093,0.00,0.202,0.010,0.00,0.00,0.685,0.00,1363
Client  35,0.913,0.008,0.00,0.011,0.00,0.065,0.00,0.00,0.00,0.004,263
Client  36,0.029,0.00,0.001,0.00,0.139,0.006,0.001,0.003,0.821,0.00,979
Client  37,0.00,0.00,0.259,0.194,0.237,0.245,0.029,0.00,0.00,0.036,139
Client  38,0.075,0.00,0.00,0.00,0.00,0.925,0.00,0.00,0.00,0.00,239
Client  39,0.00,0.334,0.00,0.00,0.00,0.00,0.00,0.666,0.00,0.00,1283
Client  40,0.00,0.00,0.00,0.00,0.00,0.353,0.00,0.211,0.436,0.00,337
Client  41,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,502
Client  42,0.218,0.00,0.020,0.259,0.00,0.041,0.00,0.463,0.00,0.00,147
Client  43,0.073,0.008,0.024,0.062,0.073,0.00,0.00,0.00,0.003,0.758,372
Client  44,0.003,0.00,0.00,0.064,0.269,0.00,0.114,0.247,0.302,0.00,668
Client  45,0.00,0.025,0.00,0.066,0.689,0.00,0.213,0.00,0.008,0.00,122
Client  46,0.002,0.258,0.019,0.00,0.042,0.274,0.00,0.406,0.00,0.00,530
Client  47,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,689
Client  48,0.023,0.00,0.003,0.036,0.00,0.00,0.227,0.006,0.605,0.100,309
Client  49,0.102,0.377,0.001,0.519,0.00,0.00,0.00,0.00,0.00,0.00,695
Client  50,0.00,0.00,0.00,0.136,0.00,0.00,0.00,0.017,0.00,0.847,118
Client  51,0.331,0.035,0.00,0.052,0.00,0.083,0.034,0.00,0.012,0.453,762
Client  52,0.007,0.276,0.717,0.00,0.00,0.00,0.00,0.00,0.00,0.00,1078
Client  53,0.00,0.073,0.153,0.00,0.00,0.00,0.271,0.00,0.504,0.00,262
Client  54,0.003,0.003,0.127,0.173,0.663,0.025,0.00,0.006,0.00,0.00,323
Client  55,0.000,0.00,0.000,0.00,0.00,0.999,0.00,0.00,0.00,0.00,2015
Client  56,0.00,0.00,0.014,0.986,0.00,0.00,0.00,0.00,0.00,0.00,876
Client  57,0.424,0.299,0.002,0.275,0.00,0.00,0.00,0.00,0.00,0.00,655
Client  58,0.003,0.997,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,787
Client  59,0.00,0.00,0.908,0.00,0.00,0.00,0.031,0.00,0.061,0.00,131
Client  60,0.067,0.00,0.00,0.00,0.067,0.200,0.00,0.200,0.333,0.133,15
Client  61,0.00,0.027,0.001,0.00,0.00,0.00,0.430,0.177,0.364,0.00,711
Client  62,0.00,0.00,0.00,0.00,0.006,0.983,0.00,0.00,0.011,0.00,359
Client  63,0.00,0.00,0.519,0.002,0.005,0.229,0.246,0.00,0.00,0.00,582
Client  64,0.00,0.00,0.00,0.00,0.00,0.064,0.207,0.729,0.00,0.00,299
Client  65,0.295,0.003,0.00,0.00,0.00,0.00,0.00,0.011,0.691,0.00,356
Client  66,0.375,0.267,0.003,0.00,0.182,0.020,0.00,0.003,0.131,0.020,352
Client  67,0.053,0.00,0.037,0.00,0.910,0.00,0.00,0.00,0.00,0.00,543
Client  68,0.00,0.001,0.999,0.00,0.00,0.00,0.00,0.00,0.00,0.00,993
Client  69,0.00,0.185,0.00,0.00,0.228,0.587,0.00,0.00,0.00,0.00,584
Client  70,0.00,0.00,0.011,0.00,0.122,0.00,0.867,0.00,0.00,0.00,90
Client  71,0.00,0.931,0.00,0.00,0.038,0.013,0.00,0.00,0.019,0.00,159
Client  72,0.00,0.00,0.034,0.00,0.00,0.00,0.00,0.966,0.00,0.00,206
Client  73,0.00,0.103,0.00,0.068,0.017,0.222,0.00,0.00,0.111,0.479,117
Client  74,0.00,0.00,0.003,0.861,0.00,0.00,0.00,0.136,0.00,0.00,309
Client  75,0.00,0.00,0.00,0.001,0.009,0.00,0.991,0.00,0.00,0.00,2441
Client  76,0.026,0.00,0.00,0.00,0.071,0.00,0.00,0.00,0.002,0.900,2848
Client  77,0.00,0.00,0.026,0.00,0.00,0.974,0.00,0.00,0.00,0.00,693
Client  78,0.440,0.004,0.00,0.00,0.444,0.00,0.00,0.00,0.112,0.00,277
Client  79,0.828,0.007,0.00,0.131,0.004,0.029,0.00,0.00,0.00,0.00,274
Client  80,0.00,0.201,0.003,0.661,0.00,0.013,0.003,0.119,0.00,0.00,319
Client  81,0.00,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,1152
Client  82,0.00,0.009,0.757,0.009,0.00,0.00,0.036,0.00,0.009,0.180,111
Client  83,0.005,0.00,0.00,0.00,0.003,0.228,0.00,0.750,0.00,0.013,372
Client  84,0.00,0.00,0.00,0.063,0.077,0.00,0.860,0.00,0.00,0.00,271
Client  85,0.00,0.244,0.555,0.00,0.00,0.00,0.00,0.088,0.113,0.00,238
Client  86,0.002,0.00,0.314,0.00,0.666,0.00,0.00,0.00,0.018,0.00,437
Client  87,0.00,0.022,0.022,0.011,0.022,0.043,0.269,0.258,0.032,0.323,93
Client  88,0.00,0.00,0.00,0.281,0.00,0.00,0.00,0.357,0.010,0.352,210
Client  89,0.086,0.029,0.642,0.011,0.103,0.019,0.00,0.00,0.00,0.109,523
Client  90,0.00,0.00,1.000,0.00,0.00,0.00,0.00,0.00,0.00,0.00,800
Client  91,0.00,0.00,0.377,0.003,0.00,0.002,0.00,0.619,0.00,0.00,1199
Client  92,0.065,0.00,0.015,0.915,0.00,0.005,0.00,0.00,0.00,0.00,400
Client  93,0.00,0.496,0.00,0.00,0.331,0.132,0.00,0.041,0.00,0.00,516
Client  94,0.00,0.00,0.00,0.00,0.008,0.032,0.944,0.00,0.016,0.00,125
Client  95,0.00,0.00,0.375,0.00,0.00,0.00,0.00,0.00,0.625,0.00,32
Client  96,0.00,0.073,0.011,0.00,0.915,0.00,0.00,0.00,0.00,0.00,1321
Client  97,0.00,0.00,0.00,0.00,0.00,0.00,0.925,0.00,0.050,0.025,40
Client  98,0.00,0.073,0.00,0.00,0.00,0.836,0.018,0.009,0.064,0.00,110
Client  99,0.173,0.003,0.003,0.799,0.003,0.003,0.003,0.003,0.006,0.006,359
Num_samples of Training set per client: [171, 52, 457, 56, 156, 479, 538, 110, 1059, 120, 513, 240, 48, 453, 354, 213, 830, 543, 526, 524, 37, 277, 718, 70, 1084, 484, 72, 269, 951, 845, 257, 211, 257, 546, 1363, 263, 979, 139, 239, 1283, 337, 502, 147, 372, 668, 122, 530, 689, 309, 695, 118, 762, 1078, 262, 323, 2015, 876, 655, 787, 131, 15, 711, 359, 582, 299, 356, 352, 543, 993, 584, 90, 159, 206, 117, 309, 2441, 2848, 693, 277, 274, 319, 1152, 111, 372, 271, 238, 437, 93, 210, 523, 800, 1199, 400, 516, 125, 32, 1321, 40, 110, 359]
Total_training_samples: 50000
Global test set: 10000
Finish Generating Samples, distribution saved
MobileNetV2(
  (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (layers): Sequential(
    (0): Block(
      (conv1): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): Block(
      (conv1): Conv2d(16, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=96, bias=False)
      (bn2): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(96, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(16, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (2): Block(
      (conv1): Conv2d(24, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=144, bias=False)
      (bn2): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(144, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (3): Block(
      (conv1): Conv2d(24, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(144, 144, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=144, bias=False)
      (bn2): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(144, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (4): Block(
      (conv1): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
      (bn2): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(192, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (5): Block(
      (conv1): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
      (bn2): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(192, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (6): Block(
      (conv1): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(192, 192, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=192, bias=False)
      (bn2): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(192, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (7): Block(
      (conv1): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
      (bn2): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (8): Block(
      (conv1): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
      (bn2): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (9): Block(
      (conv1): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
      (bn2): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (10): Block(
      (conv1): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
      (bn2): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(384, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(64, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (11): Block(
      (conv1): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)
      (bn2): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (12): Block(
      (conv1): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)
      (bn2): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (13): Block(
      (conv1): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(576, 576, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=576, bias=False)
      (bn2): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(576, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (14): Block(
      (conv1): Conv2d(160, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(960, 960, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=960, bias=False)
      (bn2): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(960, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (15): Block(
      (conv1): Conv2d(160, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(960, 960, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=960, bias=False)
      (bn2): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(960, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (16): Block(
      (conv1): Conv2d(160, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(960, 960, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=960, bias=False)
      (bn2): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(960, 320, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(160, 320, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (conv2): Conv2d(320, 1280, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn2): BatchNorm2d(1280, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (linear): Linear(in_features=1280, out_features=10, bias=True)
)
number of parameters: 2296922
clients initializting...
output size: 10
  0%|          | 0/100 [00:00<?, ?it/s]  1%|          | 1/100 [00:00<01:01,  1.60it/s]  2%|▏         | 2/100 [00:01<01:05,  1.50it/s]  3%|▎         | 3/100 [00:02<01:12,  1.34it/s]  4%|▍         | 4/100 [00:06<02:56,  1.84s/it]  5%|▌         | 5/100 [00:07<02:27,  1.55s/it]  6%|▌         | 6/100 [00:08<02:04,  1.33s/it]  7%|▋         | 7/100 [00:09<01:50,  1.19s/it]  8%|▊         | 8/100 [00:09<01:36,  1.05s/it]  9%|▉         | 9/100 [00:10<01:29,  1.01it/s] 10%|█         | 10/100 [00:11<01:26,  1.04it/s] 11%|█         | 11/100 [00:12<01:20,  1.10it/s] 12%|█▏        | 12/100 [00:13<01:21,  1.07it/s] 13%|█▎        | 13/100 [00:14<01:16,  1.13it/s] 14%|█▍        | 14/100 [00:15<01:13,  1.17it/s] 15%|█▌        | 15/100 [00:15<01:14,  1.14it/s] 16%|█▌        | 16/100 [00:16<01:09,  1.21it/s] 17%|█▋        | 17/100 [00:17<01:05,  1.27it/s] 18%|█▊        | 18/100 [00:18<01:06,  1.24it/s] 19%|█▉        | 19/100 [00:19<01:05,  1.24it/s] 20%|██        | 20/100 [00:19<01:05,  1.23it/s] 21%|██        | 21/100 [00:20<01:03,  1.24it/s] 22%|██▏       | 22/100 [00:21<01:02,  1.25it/s] 23%|██▎       | 23/100 [00:22<01:02,  1.23it/s] 24%|██▍       | 24/100 [00:23<01:02,  1.22it/s] 25%|██▌       | 25/100 [00:23<01:01,  1.21it/s] 26%|██▌       | 26/100 [00:24<01:02,  1.18it/s] 27%|██▋       | 27/100 [00:25<00:57,  1.26it/s] 28%|██▊       | 28/100 [00:26<00:57,  1.24it/s] 29%|██▉       | 29/100 [00:27<01:00,  1.17it/s] 30%|███       | 30/100 [00:27<00:55,  1.25it/s] 31%|███       | 31/100 [00:28<00:56,  1.21it/s] 32%|███▏      | 32/100 [00:29<00:57,  1.19it/s] 33%|███▎      | 33/100 [00:30<00:55,  1.22it/s] 34%|███▍      | 34/100 [00:31<00:55,  1.18it/s] 35%|███▌      | 35/100 [00:32<00:55,  1.17it/s] 36%|███▌      | 36/100 [00:36<02:02,  1.92s/it] 37%|███▋      | 37/100 [00:37<01:42,  1.63s/it] 38%|███▊      | 38/100 [00:38<01:26,  1.40s/it] 39%|███▉      | 39/100 [00:39<01:12,  1.18s/it] 40%|████      | 40/100 [00:39<01:02,  1.05s/it] 41%|████      | 41/100 [00:40<00:56,  1.05it/s] 42%|████▏     | 42/100 [00:41<00:50,  1.16it/s] 43%|████▎     | 43/100 [00:42<00:48,  1.17it/s] 44%|████▍     | 44/100 [00:43<00:48,  1.14it/s] 45%|████▌     | 45/100 [00:43<00:48,  1.14it/s] 46%|████▌     | 46/100 [00:44<00:46,  1.16it/s] 47%|████▋     | 47/100 [00:45<00:46,  1.15it/s] 48%|████▊     | 48/100 [00:46<00:42,  1.23it/s] 49%|████▉     | 49/100 [00:47<00:43,  1.18it/s] 50%|█████     | 50/100 [00:48<00:41,  1.20it/s] 51%|█████     | 51/100 [00:48<00:39,  1.25it/s] 52%|█████▏    | 52/100 [00:49<00:40,  1.18it/s] 53%|█████▎    | 53/100 [00:50<00:38,  1.21it/s] 54%|█████▍    | 54/100 [00:51<00:37,  1.22it/s] 55%|█████▌    | 55/100 [00:52<00:38,  1.17it/s] 56%|█████▌    | 56/100 [00:53<00:37,  1.17it/s] 57%|█████▋    | 57/100 [00:53<00:34,  1.23it/s] 58%|█████▊    | 58/100 [00:54<00:34,  1.22it/s] 59%|█████▉    | 59/100 [00:55<00:32,  1.27it/s] 60%|██████    | 60/100 [00:56<00:31,  1.28it/s] 61%|██████    | 61/100 [00:57<00:31,  1.23it/s] 62%|██████▏   | 62/100 [00:57<00:31,  1.19it/s] 63%|██████▎   | 63/100 [00:58<00:30,  1.22it/s] 64%|██████▍   | 64/100 [00:59<00:30,  1.20it/s] 65%|██████▌   | 65/100 [01:00<00:28,  1.22it/s] 66%|██████▌   | 66/100 [01:01<00:28,  1.20it/s] 67%|██████▋   | 67/100 [01:02<00:29,  1.12it/s] 68%|██████▊   | 68/100 [01:06<01:03,  1.99s/it] 69%|██████▉   | 69/100 [01:07<00:50,  1.62s/it] 70%|███████   | 70/100 [01:08<00:41,  1.37s/it] 71%|███████   | 71/100 [01:09<00:34,  1.18s/it] 72%|███████▏  | 72/100 [01:09<00:29,  1.06s/it] 73%|███████▎  | 73/100 [01:10<00:25,  1.06it/s] 74%|███████▍  | 74/100 [01:11<00:23,  1.09it/s] 75%|███████▌  | 75/100 [01:12<00:21,  1.16it/s] 76%|███████▌  | 76/100 [01:12<00:20,  1.17it/s] 77%|███████▋  | 77/100 [01:13<00:20,  1.14it/s] 78%|███████▊  | 78/100 [01:14<00:17,  1.22it/s] 79%|███████▉  | 79/100 [01:15<00:16,  1.24it/s] 80%|████████  | 80/100 [01:16<00:16,  1.23it/s] 81%|████████  | 81/100 [01:17<00:15,  1.19it/s] 82%|████████▏ | 82/100 [01:17<00:14,  1.26it/s] 83%|████████▎ | 83/100 [01:18<00:13,  1.22it/s] 84%|████████▍ | 84/100 [01:19<00:13,  1.21it/s] 85%|████████▌ | 85/100 [01:20<00:12,  1.24it/s] 86%|████████▌ | 86/100 [01:21<00:11,  1.25it/s] 87%|████████▋ | 87/100 [01:21<00:10,  1.25it/s] 88%|████████▊ | 88/100 [01:22<00:10,  1.15it/s] 89%|████████▉ | 89/100 [01:23<00:09,  1.18it/s] 90%|█████████ | 90/100 [01:24<00:08,  1.14it/s] 91%|█████████ | 91/100 [01:25<00:07,  1.24it/s] 92%|█████████▏| 92/100 [01:26<00:06,  1.22it/s] 93%|█████████▎| 93/100 [01:26<00:05,  1.23it/s] 94%|█████████▍| 94/100 [01:27<00:04,  1.23it/s] 95%|█████████▌| 95/100 [01:28<00:04,  1.25it/s] 96%|█████████▌| 96/100 [01:29<00:03,  1.31it/s] 97%|█████████▋| 97/100 [01:29<00:02,  1.29it/s] 98%|█████████▊| 98/100 [01:30<00:01,  1.32it/s] 99%|█████████▉| 99/100 [01:31<00:00,  1.29it/s]100%|██████████| 100/100 [01:32<00:00,  1.15it/s]100%|██████████| 100/100 [01:32<00:00,  1.08it/s]
Number of users per round / total users: 10  /  100
Finished creating FedAvg server.
=== FedPP ===
-------------Round number:  0  -------------
selected users: [26, 86, 2, 55, 75, 93, 16, 73, 54, 95]
torch.Size([72, 32, 16, 16]) torch.Size([72])
torch.Size([437, 32, 16, 16]) torch.Size([437])
torch.Size([457, 32, 16, 16]) torch.Size([457])
torch.Size([2015, 32, 16, 16]) torch.Size([2015])
torch.Size([2441, 32, 16, 16]) torch.Size([2441])
torch.Size([516, 32, 16, 16]) torch.Size([516])
torch.Size([830, 32, 16, 16]) torch.Size([830])
torch.Size([117, 32, 16, 16]) torch.Size([117])
torch.Size([323, 32, 16, 16]) torch.Size([323])
torch.Size([32, 32, 16, 16]) torch.Size([32])
7240 72 72
all data: 1000
Local adapation with distilling: 0.001
training loss: tensor(3.3030) feature loss: tensor(0.3853)
Local adapation with distilling: 0.001
training loss: tensor(2.2832) feature loss: tensor(0.4166)
Local adapation with distilling: 0.001
training loss: tensor(2.2156) feature loss: tensor(0.4513)
Local adapation with distilling: 0.001
training loss: tensor(1.0330) feature loss: tensor(0.4825)
Local adapation with distilling: 0.001
training loss: tensor(0.9881) feature loss: tensor(0.4911)
Local adapation with distilling: 0.001
training loss: tensor(2.2632) feature loss: tensor(0.4524)
Local adapation with distilling: 0.001
training loss: tensor(1.4284) feature loss: tensor(0.4685)
Local adapation with distilling: 0.001
training loss: tensor(3.1593) feature loss: tensor(0.3750)
Local adapation with distilling: 0.001
training loss: tensor(2.7184) feature loss: tensor(0.4279)
Local adapation with distilling: 0.001
training loss: tensor(3.2495) feature loss: tensor(0.3234)
         GM acc on global data: 0.101 length of data: 10000
-------------Round number:  1  -------------
selected users: [80, 84, 33, 81, 93, 17, 36, 82, 69, 65]
torch.Size([319, 32, 16, 16]) torch.Size([319])
torch.Size([271, 32, 16, 16]) torch.Size([271])
torch.Size([546, 32, 16, 16]) torch.Size([546])
torch.Size([1216, 32, 16, 16]) torch.Size([1216])
torch.Size([516, 32, 16, 16]) torch.Size([516])
torch.Size([543, 32, 16, 16]) torch.Size([543])
torch.Size([979, 32, 16, 16]) torch.Size([979])
torch.Size([111, 32, 16, 16]) torch.Size([111])
torch.Size([584, 32, 16, 16]) torch.Size([584])
torch.Size([356, 32, 16, 16]) torch.Size([356])
5441 72 72
all data: 1000
Local adapation with distilling: 0.000982
training loss: tensor(2.0441) feature loss: tensor(0.4223)
Local adapation with distilling: 0.000982
training loss: tensor(2.0572) feature loss: tensor(0.3718)
Local adapation with distilling: 0.000982
training loss: tensor(1.8770) feature loss: tensor(0.4569)
Local adapation with distilling: 0.000982
training loss: tensor(1.0771) feature loss: tensor(0.4755)
Local adapation with distilling: 0.000982
training loss: tensor(1.9890) feature loss: tensor(0.4191)
Local adapation with distilling: 0.000982
training loss: tensor(1.6952) feature loss: tensor(0.4534)
Local adapation with distilling: 0.000982
training loss: tensor(1.3991) feature loss: tensor(0.4734)
Local adapation with distilling: 0.000982
training loss: tensor(2.8859) feature loss: tensor(0.3289)
Local adapation with distilling: 0.000982
training loss: tensor(1.7708) feature loss: tensor(0.4114)
Local adapation with distilling: 0.000982
training loss: tensor(1.9996) feature loss: tensor(0.4233)
         GM acc on global data: 0.1285 length of data: 10000
-------------Round number:  2  -------------
selected users: [83, 30, 56, 24, 16, 23, 2, 27, 28, 13]
torch.Size([372, 32, 16, 16]) torch.Size([372])
torch.Size([257, 32, 16, 16]) torch.Size([257])
torch.Size([876, 32, 16, 16]) torch.Size([876])
torch.Size([1084, 32, 16, 16]) torch.Size([1084])
torch.Size([830, 32, 16, 16]) torch.Size([830])
torch.Size([70, 32, 16, 16]) torch.Size([70])
torch.Size([457, 32, 16, 16]) torch.Size([457])
torch.Size([269, 32, 16, 16]) torch.Size([269])
torch.Size([951, 32, 16, 16]) torch.Size([951])
torch.Size([453, 32, 16, 16]) torch.Size([453])
5619 72 72
all data: 1000
Local adapation with distilling: 0.000964
training loss: tensor(1.6744) feature loss: tensor(0.4002)
Local adapation with distilling: 0.000964
training loss: tensor(1.8960) feature loss: tensor(0.4217)
Local adapation with distilling: 0.000964
training loss: tensor(1.0909) feature loss: tensor(0.4283)
Local adapation with distilling: 0.000964
training loss: tensor(1.0611) feature loss: tensor(0.4537)
Local adapation with distilling: 0.000964
training loss: tensor(1.0585) feature loss: tensor(0.4359)
Local adapation with distilling: 0.000964
training loss: tensor(2.8422) feature loss: tensor(0.3025)
Local adapation with distilling: 0.000964
training loss: tensor(1.5787) feature loss: tensor(0.3840)
Local adapation with distilling: 0.000964
training loss: tensor(1.9248) feature loss: tensor(0.4119)
Local adapation with distilling: 0.000964
training loss: tensor(1.4334) feature loss: tensor(0.4215)
Local adapation with distilling: 0.000964
training loss: tensor(1.7817) feature loss: tensor(0.3930)
         GM acc on global data: 0.1555 length of data: 10000
-------------Round number:  3  -------------
selected users: [93, 67, 6, 64, 96, 83, 98, 42, 25, 15]
torch.Size([516, 32, 16, 16]) torch.Size([516])
torch.Size([543, 32, 16, 16]) torch.Size([543])
torch.Size([538, 32, 16, 16]) torch.Size([538])
torch.Size([299, 32, 16, 16]) torch.Size([299])
torch.Size([1321, 32, 16, 16]) torch.Size([1321])
torch.Size([372, 32, 16, 16]) torch.Size([372])
torch.Size([110, 32, 16, 16]) torch.Size([110])
torch.Size([147, 32, 16, 16]) torch.Size([147])
torch.Size([484, 32, 16, 16]) torch.Size([484])
torch.Size([213, 32, 16, 16]) torch.Size([213])
4543 72 72
all data: 1000
Local adapation with distilling: 0.000946
training loss: tensor(1.4983) feature loss: tensor(0.4436)
Local adapation with distilling: 0.000946
training loss: tensor(1.1996) feature loss: tensor(0.4168)
Local adapation with distilling: 0.000946
training loss: tensor(1.3857) feature loss: tensor(0.5199)
Local adapation with distilling: 0.000946
training loss: tensor(1.8241) feature loss: tensor(0.5035)
Local adapation with distilling: 0.000946
training loss: tensor(0.9238) feature loss: tensor(0.4235)
Local adapation with distilling: 0.000946
training loss: tensor(1.5876) feature loss: tensor(0.4602)
Local adapation with distilling: 0.000946
training loss: tensor(2.6145) feature loss: tensor(0.4991)
Local adapation with distilling: 0.000946
training loss: tensor(2.0047) feature loss: tensor(0.3549)
Local adapation with distilling: 0.000946
training loss: tensor(1.5377) feature loss: tensor(0.4384)
Local adapation with distilling: 0.000946
training loss: tensor(1.5256) feature loss: tensor(0.3719)
         GM acc on global data: 0.1616 length of data: 10000
-------------Round number:  4  -------------
selected users: [20, 10, 96, 16, 63, 24, 53, 97, 41, 47]
torch.Size([37, 32, 16, 16]) torch.Size([37])
torch.Size([513, 32, 16, 16]) torch.Size([513])
torch.Size([1321, 32, 16, 16]) torch.Size([1321])
torch.Size([830, 32, 16, 16]) torch.Size([830])
torch.Size([582, 32, 16, 16]) torch.Size([582])
torch.Size([1084, 32, 16, 16]) torch.Size([1084])
torch.Size([262, 32, 16, 16]) torch.Size([262])
torch.Size([40, 32, 16, 16]) torch.Size([40])
torch.Size([502, 32, 16, 16]) torch.Size([502])
torch.Size([689, 32, 16, 16]) torch.Size([689])
5860 72 72
all data: 1000
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(2.5120) feature loss: tensor(0.3621)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.6557) feature loss: tensor(0.5133)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(0.8746) feature loss: tensor(0.4396)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(0.9946) feature loss: tensor(0.4793)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.5826) feature loss: tensor(0.5015)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(0.9678) feature loss: tensor(0.4843)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.9180) feature loss: tensor(0.4516)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(3.1381) feature loss: tensor(0.5139)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.2177) feature loss: tensor(0.4760)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.0563) feature loss: tensor(0.4880)
         GM acc on global data: 0.1161 length of data: 10000
-------------Round number:  5  -------------
selected users: [66, 32, 46, 28, 74, 23, 10, 20, 17, 35]
torch.Size([352, 32, 16, 16]) torch.Size([352])
torch.Size([257, 32, 16, 16]) torch.Size([257])
torch.Size([530, 32, 16, 16]) torch.Size([530])
torch.Size([951, 32, 16, 16]) torch.Size([951])
torch.Size([309, 32, 16, 16]) torch.Size([309])
torch.Size([70, 32, 16, 16]) torch.Size([70])
torch.Size([513, 32, 16, 16]) torch.Size([513])
torch.Size([37, 32, 16, 16]) torch.Size([37])
torch.Size([543, 32, 16, 16]) torch.Size([543])
torch.Size([263, 32, 16, 16]) torch.Size([263])
3825 72 72
all data: 1000
Local adapation with distilling: 0.00091
training loss: tensor(1.6918) feature loss: tensor(0.6062)
Local adapation with distilling: 0.00091
training loss: tensor(2.2959) feature loss: tensor(0.6705)
Local adapation with distilling: 0.00091
training loss: tensor(1.6221) feature loss: tensor(0.6032)
Local adapation with distilling: 0.00091
training loss: tensor(1.3341) feature loss: tensor(0.6287)
Local adapation with distilling: 0.00091
training loss: tensor(1.8491) feature loss: tensor(0.6807)
Local adapation with distilling: 0.00091
training loss: tensor(3.3614) feature loss: tensor(0.6670)
Local adapation with distilling: 0.00091
training loss: tensor(1.7154) feature loss: tensor(0.5939)
Local adapation with distilling: 0.00091
training loss: tensor(2.6817) feature loss: tensor(0.5786)
Local adapation with distilling: 0.00091
training loss: tensor(1.3623) feature loss: tensor(0.6317)
Local adapation with distilling: 0.00091
training loss: tensor(1.6607) feature loss: tensor(0.5856)
         GM acc on global data: 0.2178 length of data: 10000
-------------Round number:  6  -------------
selected users: [17, 34, 0, 45, 60, 86, 20, 47, 44, 81]
torch.Size([543, 32, 16, 16]) torch.Size([543])
torch.Size([1363, 32, 16, 16]) torch.Size([1363])
torch.Size([171, 32, 16, 16]) torch.Size([171])
torch.Size([122, 32, 16, 16]) torch.Size([122])
torch.Size([15, 32, 16, 16]) torch.Size([15])
torch.Size([437, 32, 16, 16]) torch.Size([437])
torch.Size([37, 32, 16, 16]) torch.Size([37])
torch.Size([689, 32, 16, 16]) torch.Size([689])
torch.Size([668, 32, 16, 16]) torch.Size([668])
torch.Size([1216, 32, 16, 16]) torch.Size([1216])
5261 72 72
all data: 1000
Local adapation with distilling: 0.000892
training loss: tensor(1.0737) feature loss: tensor(0.4081)
Local adapation with distilling: 0.000892
training loss: tensor(0.9686) feature loss: tensor(0.4318)
Local adapation with distilling: 0.000892
training loss: tensor(3.7172) feature loss: tensor(0.3959)
Local adapation with distilling: 0.000892
training loss: tensor(1.9477) feature loss: tensor(0.3323)
Local adapation with distilling: 0.000892
training loss: tensor(2.2777) feature loss: tensor(0.2655)
Local adapation with distilling: 0.000892
training loss: tensor(1.2311) feature loss: tensor(0.3826)
Local adapation with distilling: 0.000892
training loss: tensor(2.1454) feature loss: tensor(0.3093)
Local adapation with distilling: 0.000892
training loss: tensor(0.8712) feature loss: tensor(0.4099)
Local adapation with distilling: 0.000892
training loss: tensor(1.1887) feature loss: tensor(0.4365)
Local adapation with distilling: 0.000892
training loss: tensor(0.8572) feature loss: tensor(0.4555)
         GM acc on global data: 0.143 length of data: 10000
-------------Round number:  7  -------------
selected users: [37, 26, 78, 91, 49, 15, 93, 71, 86, 22]
torch.Size([139, 32, 16, 16]) torch.Size([139])
torch.Size([72, 32, 16, 16]) torch.Size([72])
torch.Size([277, 32, 16, 16]) torch.Size([277])
torch.Size([1199, 32, 16, 16]) torch.Size([1199])
torch.Size([695, 32, 16, 16]) torch.Size([695])
torch.Size([213, 32, 16, 16]) torch.Size([213])
torch.Size([516, 32, 16, 16]) torch.Size([516])
torch.Size([159, 32, 16, 16]) torch.Size([159])
torch.Size([437, 32, 16, 16]) torch.Size([437])
torch.Size([718, 32, 16, 16]) torch.Size([718])
4425 72 72
all data: 1000
Local adapation with distilling: 0.000874
training loss: tensor(2.4245) feature loss: tensor(0.5919)
Local adapation with distilling: 0.000874
training loss: tensor(7.0066) feature loss: tensor(0.6905)
Local adapation with distilling: 0.000874
training loss: tensor(1.5240) feature loss: tensor(0.5049)
Local adapation with distilling: 0.000874
training loss: tensor(1.1210) feature loss: tensor(0.5834)
Local adapation with distilling: 0.000874
training loss: tensor(1.3106) feature loss: tensor(0.5971)
Local adapation with distilling: 0.000874
training loss: tensor(1.5532) feature loss: tensor(0.4712)
Local adapation with distilling: 0.000874
training loss: tensor(1.5783) feature loss: tensor(0.5849)
Local adapation with distilling: 0.000874
training loss: tensor(2.9196) feature loss: tensor(0.6924)
Local adapation with distilling: 0.000874
training loss: tensor(1.4300) feature loss: tensor(0.5312)
Local adapation with distilling: 0.000874
training loss: tensor(1.8502) feature loss: tensor(0.6585)
         GM acc on global data: 0.2219 length of data: 10000
-------------Round number:  8  -------------
selected users: [17, 23, 1, 44, 55, 99, 86, 29, 62, 33]
torch.Size([543, 32, 16, 16]) torch.Size([543])
torch.Size([70, 32, 16, 16]) torch.Size([70])
torch.Size([52, 32, 16, 16]) torch.Size([52])
torch.Size([668, 32, 16, 16]) torch.Size([668])
torch.Size([2015, 32, 16, 16]) torch.Size([2015])
torch.Size([359, 32, 16, 16]) torch.Size([359])
torch.Size([437, 32, 16, 16]) torch.Size([437])
torch.Size([845, 32, 16, 16]) torch.Size([845])
torch.Size([359, 32, 16, 16]) torch.Size([359])
torch.Size([546, 32, 16, 16]) torch.Size([546])
5894 72 72
all data: 1000
Local adapation with distilling: 0.000856
training loss: tensor(1.2491) feature loss: tensor(0.6079)
Local adapation with distilling: 0.000856
training loss: tensor(3.1642) feature loss: tensor(0.5410)
Local adapation with distilling: 0.000856
training loss: tensor(2.5746) feature loss: tensor(0.3720)
Local adapation with distilling: 0.000856
training loss: tensor(1.2638) feature loss: tensor(0.5608)
Local adapation with distilling: 0.000856
training loss: tensor(0.8718) feature loss: tensor(0.5669)
Local adapation with distilling: 0.000856
training loss: tensor(1.4371) feature loss: tensor(0.5614)
Local adapation with distilling: 0.000856
training loss: tensor(1.3591) feature loss: tensor(0.5281)
Local adapation with distilling: 0.000856
training loss: tensor(1.0553) feature loss: tensor(0.5618)
Local adapation with distilling: 0.000856
training loss: tensor(1.7171) feature loss: tensor(0.6102)
Local adapation with distilling: 0.000856
training loss: tensor(1.2966) feature loss: tensor(0.5486)
         GM acc on global data: 0.1021 length of data: 10000
-------------Round number:  9  -------------
selected users: [75, 42, 46, 68, 3, 39, 23, 20, 70, 73]
torch.Size([2441, 32, 16, 16]) torch.Size([2441])
torch.Size([147, 32, 16, 16]) torch.Size([147])
torch.Size([530, 32, 16, 16]) torch.Size([530])
torch.Size([993, 32, 16, 16]) torch.Size([993])
torch.Size([56, 32, 16, 16]) torch.Size([56])
torch.Size([1283, 32, 16, 16]) torch.Size([1283])
torch.Size([70, 32, 16, 16]) torch.Size([70])
torch.Size([37, 32, 16, 16]) torch.Size([37])
torch.Size([90, 32, 16, 16]) torch.Size([90])
torch.Size([117, 32, 16, 16]) torch.Size([117])
5764 72 72
all data: 1000
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(1.0769) feature loss: tensor(0.6659)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(2.4841) feature loss: tensor(0.6338)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(1.6300) feature loss: tensor(0.6888)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(1.0924) feature loss: tensor(0.6370)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(3.5702) feature loss: tensor(0.3470)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(1.1723) feature loss: tensor(0.6759)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(3.2410) feature loss: tensor(0.6414)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(4.4448) feature loss: tensor(0.6378)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(5.1917) feature loss: tensor(0.7026)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(3.9059) feature loss: tensor(0.6253)
         GM acc on global data: 0.1024 length of data: 10000
-------------Round number:  10  -------------
selected users: [19, 14, 43, 37, 66, 3, 79, 41, 38, 68]
torch.Size([524, 32, 16, 16]) torch.Size([524])
torch.Size([354, 32, 16, 16]) torch.Size([354])
torch.Size([372, 32, 16, 16]) torch.Size([372])
torch.Size([139, 32, 16, 16]) torch.Size([139])
torch.Size([352, 32, 16, 16]) torch.Size([352])
torch.Size([56, 32, 16, 16]) torch.Size([56])
torch.Size([274, 32, 16, 16]) torch.Size([274])
torch.Size([502, 32, 16, 16]) torch.Size([502])
torch.Size([239, 32, 16, 16]) torch.Size([239])
torch.Size([993, 32, 16, 16]) torch.Size([993])
3805 72 72
all data: 1000
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(1.9338) feature loss: tensor(0.5207)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(2.0403) feature loss: tensor(0.4484)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(4.3099) feature loss: tensor(0.4806)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(2.7075) feature loss: tensor(0.4640)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(2.1911) feature loss: tensor(0.5057)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(3.6935) feature loss: tensor(0.3027)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(2.1498) feature loss: tensor(0.5107)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(1.5420) feature loss: tensor(0.4853)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(2.3116) feature loss: tensor(0.4784)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(1.0848) feature loss: tensor(0.4916)
         GM acc on global data: 0.1068 length of data: 10000
-------------Round number:  11  -------------
selected users: [46, 49, 22, 58, 41, 98, 62, 29, 30, 51]
torch.Size([530, 32, 16, 16]) torch.Size([530])
torch.Size([695, 32, 16, 16]) torch.Size([695])
torch.Size([718, 32, 16, 16]) torch.Size([718])
torch.Size([787, 32, 16, 16]) torch.Size([787])
torch.Size([502, 32, 16, 16]) torch.Size([502])
torch.Size([110, 32, 16, 16]) torch.Size([110])
torch.Size([359, 32, 16, 16]) torch.Size([359])
torch.Size([845, 32, 16, 16]) torch.Size([845])
torch.Size([257, 32, 16, 16]) torch.Size([257])
torch.Size([762, 32, 16, 16]) torch.Size([762])
5565 72 72
all data: 1000
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(1.9349) feature loss: tensor(0.6795)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(1.6788) feature loss: tensor(0.7246)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(2.7322) feature loss: tensor(0.7483)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(1.5451) feature loss: tensor(0.6765)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(1.6172) feature loss: tensor(0.6893)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(3.2457) feature loss: tensor(0.6401)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(1.8749) feature loss: tensor(0.6312)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(1.6408) feature loss: tensor(0.6794)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(2.6023) feature loss: tensor(0.6215)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(1.8543) feature loss: tensor(0.7352)
         GM acc on global data: 0.1623 length of data: 10000
-------------Round number:  12  -------------
selected users: [17, 41, 92, 14, 68, 31, 89, 15, 21, 60]
torch.Size([543, 32, 16, 16]) torch.Size([543])
torch.Size([502, 32, 16, 16]) torch.Size([502])
torch.Size([400, 32, 16, 16]) torch.Size([400])
torch.Size([354, 32, 16, 16]) torch.Size([354])
torch.Size([993, 32, 16, 16]) torch.Size([993])
torch.Size([211, 32, 16, 16]) torch.Size([211])
torch.Size([523, 32, 16, 16]) torch.Size([523])
torch.Size([213, 32, 16, 16]) torch.Size([213])
torch.Size([277, 32, 16, 16]) torch.Size([277])
torch.Size([15, 32, 16, 16]) torch.Size([15])
4031 72 72
all data: 1000
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(1.3417) feature loss: tensor(0.3734)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(1.2616) feature loss: tensor(0.3547)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(1.5103) feature loss: tensor(0.4003)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(1.8010) feature loss: tensor(0.4014)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.9077) feature loss: tensor(0.3920)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(2.0852) feature loss: tensor(0.3588)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(1.5612) feature loss: tensor(0.3997)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(1.7164) feature loss: tensor(0.3413)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(1.7050) feature loss: tensor(0.3554)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(3.1051) feature loss: tensor(0.4280)
         GM acc on global data: 0.1094 length of data: 10000
-------------Round number:  13  -------------
selected users: [37, 62, 83, 14, 43, 9, 44, 31, 69, 57]
torch.Size([139, 32, 16, 16]) torch.Size([139])
torch.Size([359, 32, 16, 16]) torch.Size([359])
torch.Size([372, 32, 16, 16]) torch.Size([372])
torch.Size([354, 32, 16, 16]) torch.Size([354])
torch.Size([372, 32, 16, 16]) torch.Size([372])
torch.Size([120, 32, 16, 16]) torch.Size([120])
torch.Size([668, 32, 16, 16]) torch.Size([668])
torch.Size([211, 32, 16, 16]) torch.Size([211])
torch.Size([584, 32, 16, 16]) torch.Size([584])
torch.Size([655, 32, 16, 16]) torch.Size([655])
3834 72 72
all data: 1000
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(2.5962) feature loss: tensor(0.6875)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(1.8483) feature loss: tensor(0.6347)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(1.9633) feature loss: tensor(0.6395)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(1.9002) feature loss: tensor(0.6398)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(2.3421) feature loss: tensor(0.6729)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(2.8772) feature loss: tensor(0.6647)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(1.7033) feature loss: tensor(0.6648)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(2.1680) feature loss: tensor(0.6570)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(1.6025) feature loss: tensor(0.6425)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(1.5485) feature loss: tensor(0.6094)
         GM acc on global data: 0.2585 length of data: 10000
-------------Round number:  14  -------------
selected users: [24, 39, 35, 44, 55, 70, 82, 40, 91, 65]
torch.Size([1084, 32, 16, 16]) torch.Size([1084])
torch.Size([1283, 32, 16, 16]) torch.Size([1283])
torch.Size([263, 32, 16, 16]) torch.Size([263])
torch.Size([668, 32, 16, 16]) torch.Size([668])
torch.Size([2015, 32, 16, 16]) torch.Size([2015])
torch.Size([90, 32, 16, 16]) torch.Size([90])
torch.Size([111, 32, 16, 16]) torch.Size([111])
torch.Size([337, 32, 16, 16]) torch.Size([337])
torch.Size([1199, 32, 16, 16]) torch.Size([1199])
torch.Size([356, 32, 16, 16]) torch.Size([356])
7406 72 72
all data: 1000
Local adapation with distilling: 0.000748
training loss: tensor(0.9009) feature loss: tensor(0.5104)
Local adapation with distilling: 0.000748
training loss: tensor(1.0027) feature loss: tensor(0.5094)
Local adapation with distilling: 0.000748
training loss: tensor(1.4436) feature loss: tensor(0.4515)
Local adapation with distilling: 0.000748
training loss: tensor(1.2979) feature loss: tensor(0.5102)
Local adapation with distilling: 0.000748
training loss: tensor(0.7589) feature loss: tensor(0.4950)
Local adapation with distilling: 0.000748
training loss: tensor(2.8806) feature loss: tensor(0.5164)
Local adapation with distilling: 0.000748
training loss: tensor(2.2892) feature loss: tensor(0.4835)
Local adapation with distilling: 0.000748
training loss: tensor(1.5055) feature loss: tensor(0.5218)
Local adapation with distilling: 0.000748
training loss: tensor(1.0702) feature loss: tensor(0.5140)
Local adapation with distilling: 0.000748
training loss: tensor(1.6643) feature loss: tensor(0.5009)
         GM acc on global data: 0.1333 length of data: 10000
-------------Round number:  15  -------------
selected users: [84, 36, 57, 51, 46, 78, 93, 14, 11, 59]
torch.Size([271, 32, 16, 16]) torch.Size([271])
torch.Size([979, 32, 16, 16]) torch.Size([979])
torch.Size([655, 32, 16, 16]) torch.Size([655])
torch.Size([762, 32, 16, 16]) torch.Size([762])
torch.Size([530, 32, 16, 16]) torch.Size([530])
torch.Size([277, 32, 16, 16]) torch.Size([277])
torch.Size([516, 32, 16, 16]) torch.Size([516])
torch.Size([354, 32, 16, 16]) torch.Size([354])
torch.Size([240, 32, 16, 16]) torch.Size([240])
torch.Size([131, 32, 16, 16]) torch.Size([131])
4715 72 72
all data: 1000
Local adapation with distilling: 0.00073
training loss: tensor(2.4444) feature loss: tensor(0.6020)
Local adapation with distilling: 0.00073
training loss: tensor(1.4094) feature loss: tensor(0.5999)
Local adapation with distilling: 0.00073
training loss: tensor(1.6136) feature loss: tensor(0.6044)
Local adapation with distilling: 0.00073
training loss: tensor(1.9502) feature loss: tensor(0.6273)
Local adapation with distilling: 0.00073
training loss: tensor(1.7317) feature loss: tensor(0.5533)
Local adapation with distilling: 0.00073
training loss: tensor(2.1386) feature loss: tensor(0.6104)
Local adapation with distilling: 0.00073
training loss: tensor(1.7600) feature loss: tensor(0.5996)
Local adapation with distilling: 0.00073
training loss: tensor(2.0224) feature loss: tensor(0.5904)
Local adapation with distilling: 0.00073
training loss: tensor(2.4151) feature loss: tensor(0.5861)
Local adapation with distilling: 0.00073
training loss: tensor(2.8258) feature loss: tensor(0.5960)
         GM acc on global data: 0.2839 length of data: 10000
-------------Round number:  16  -------------
selected users: [7, 25, 71, 42, 47, 29, 63, 88, 50, 9]
torch.Size([110, 32, 16, 16]) torch.Size([110])
torch.Size([484, 32, 16, 16]) torch.Size([484])
torch.Size([159, 32, 16, 16]) torch.Size([159])
torch.Size([147, 32, 16, 16]) torch.Size([147])
torch.Size([689, 32, 16, 16]) torch.Size([689])
torch.Size([845, 32, 16, 16]) torch.Size([845])
torch.Size([582, 32, 16, 16]) torch.Size([582])
torch.Size([210, 32, 16, 16]) torch.Size([210])
torch.Size([118, 32, 16, 16]) torch.Size([118])
torch.Size([120, 32, 16, 16]) torch.Size([120])
3464 72 72
all data: 1000
Local adapation with distilling: 0.000712
training loss: tensor(2.2098) feature loss: tensor(0.4121)
Local adapation with distilling: 0.000712
training loss: tensor(1.3360) feature loss: tensor(0.4063)
Local adapation with distilling: 0.000712
training loss: tensor(2.2888) feature loss: tensor(0.4463)
Local adapation with distilling: 0.000712
training loss: tensor(1.9077) feature loss: tensor(0.4556)
Local adapation with distilling: 0.000712
training loss: tensor(0.9095) feature loss: tensor(0.4204)
Local adapation with distilling: 0.000712
training loss: tensor(1.0914) feature loss: tensor(0.4303)
Local adapation with distilling: 0.000712
training loss: tensor(1.3556) feature loss: tensor(0.4468)
Local adapation with distilling: 0.000712
training loss: tensor(1.9473) feature loss: tensor(0.4756)
Local adapation with distilling: 0.000712
training loss: tensor(4.4496) feature loss: tensor(0.6134)
Local adapation with distilling: 0.000712
training loss: tensor(2.3356) feature loss: tensor(0.4825)
         GM acc on global data: 0.125 length of data: 10000
-------------Round number:  17  -------------
selected users: [71, 28, 9, 4, 73, 34, 94, 92, 47, 37]
torch.Size([159, 32, 16, 16]) torch.Size([159])
torch.Size([951, 32, 16, 16]) torch.Size([951])
torch.Size([120, 32, 16, 16]) torch.Size([120])
torch.Size([156, 32, 16, 16]) torch.Size([156])
torch.Size([117, 32, 16, 16]) torch.Size([117])
torch.Size([1363, 32, 16, 16]) torch.Size([1363])
torch.Size([125, 32, 16, 16]) torch.Size([125])
torch.Size([400, 32, 16, 16]) torch.Size([400])
torch.Size([689, 32, 16, 16]) torch.Size([689])
torch.Size([139, 32, 16, 16]) torch.Size([139])
4219 72 72
all data: 1000
Local adapation with distilling: 0.000694
training loss: tensor(1.9345) feature loss: tensor(0.3888)
Local adapation with distilling: 0.000694
training loss: tensor(1.0291) feature loss: tensor(0.3942)
Local adapation with distilling: 0.000694
training loss: tensor(2.3175) feature loss: tensor(0.4933)
Local adapation with distilling: 0.000694
training loss: tensor(1.9605) feature loss: tensor(0.6483)
Local adapation with distilling: 0.000694
training loss: tensor(2.4163) feature loss: tensor(0.5142)
Local adapation with distilling: 0.000694
training loss: tensor(0.9066) feature loss: tensor(0.3858)
Local adapation with distilling: 0.000694
training loss: tensor(2.5106) feature loss: tensor(0.4965)
Local adapation with distilling: 0.000694
training loss: tensor(1.3561) feature loss: tensor(0.4234)
Local adapation with distilling: 0.000694
training loss: tensor(0.8816) feature loss: tensor(0.4633)
Local adapation with distilling: 0.000694
training loss: tensor(2.1473) feature loss: tensor(0.4330)
         GM acc on global data: 0.2207 length of data: 10000
-------------Round number:  18  -------------
selected users: [53, 47, 43, 54, 33, 48, 0, 12, 44, 91]
torch.Size([262, 32, 16, 16]) torch.Size([262])
torch.Size([689, 32, 16, 16]) torch.Size([689])
torch.Size([372, 32, 16, 16]) torch.Size([372])
torch.Size([323, 32, 16, 16]) torch.Size([323])
torch.Size([546, 32, 16, 16]) torch.Size([546])
torch.Size([309, 32, 16, 16]) torch.Size([309])
torch.Size([171, 32, 16, 16]) torch.Size([171])
torch.Size([48, 32, 16, 16]) torch.Size([48])
torch.Size([668, 32, 16, 16]) torch.Size([668])
torch.Size([1199, 32, 16, 16]) torch.Size([1199])
4587 72 72
all data: 1000
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(1.7326) feature loss: tensor(0.4474)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.9266) feature loss: tensor(0.4775)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(2.0569) feature loss: tensor(0.5111)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(1.8464) feature loss: tensor(0.4323)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(1.1928) feature loss: tensor(0.4965)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(1.6097) feature loss: tensor(0.4519)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(3.0883) feature loss: tensor(0.4485)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(2.5751) feature loss: tensor(0.3291)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(1.2471) feature loss: tensor(0.4741)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(1.0072) feature loss: tensor(0.4925)
         GM acc on global data: 0.2375 length of data: 10000
-------------Round number:  19  -------------
selected users: [85, 72, 16, 18, 2, 38, 90, 30, 83, 61]
torch.Size([238, 32, 16, 16]) torch.Size([238])
torch.Size([206, 32, 16, 16]) torch.Size([206])
torch.Size([830, 32, 16, 16]) torch.Size([830])
torch.Size([526, 32, 16, 16]) torch.Size([526])
torch.Size([457, 32, 16, 16]) torch.Size([457])
torch.Size([239, 32, 16, 16]) torch.Size([239])
torch.Size([800, 32, 16, 16]) torch.Size([800])
torch.Size([257, 32, 16, 16]) torch.Size([257])
torch.Size([372, 32, 16, 16]) torch.Size([372])
torch.Size([711, 32, 16, 16]) torch.Size([711])
4636 72 72
all data: 1000
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(1.4880) feature loss: tensor(0.3801)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(1.5379) feature loss: tensor(0.4146)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.7975) feature loss: tensor(0.4303)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(1.4228) feature loss: tensor(0.4362)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(1.4048) feature loss: tensor(0.4004)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(1.5417) feature loss: tensor(0.3909)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.8704) feature loss: tensor(0.4321)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(2.3926) feature loss: tensor(0.4165)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(1.4161) feature loss: tensor(0.4057)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(1.1742) feature loss: tensor(0.4146)
         GM acc on global data: 0.1904 length of data: 10000
-------------Round number:  20  -------------
selected users: [70, 74, 2, 44, 56, 48, 12, 36, 0, 49]
torch.Size([90, 32, 16, 16]) torch.Size([90])
torch.Size([309, 32, 16, 16]) torch.Size([309])
torch.Size([457, 32, 16, 16]) torch.Size([457])
torch.Size([668, 32, 16, 16]) torch.Size([668])
torch.Size([876, 32, 16, 16]) torch.Size([876])
torch.Size([309, 32, 16, 16]) torch.Size([309])
torch.Size([48, 32, 16, 16]) torch.Size([48])
torch.Size([979, 32, 16, 16]) torch.Size([979])
torch.Size([171, 32, 16, 16]) torch.Size([171])
torch.Size([695, 32, 16, 16]) torch.Size([695])
4602 72 72
all data: 1000
Local adapation with distilling: 0.00064
training loss: tensor(2.8279) feature loss: tensor(0.5486)
Local adapation with distilling: 0.00064
training loss: tensor(1.6055) feature loss: tensor(0.5201)
Local adapation with distilling: 0.00064
training loss: tensor(1.2695) feature loss: tensor(0.5065)
Local adapation with distilling: 0.00064
training loss: tensor(1.1771) feature loss: tensor(0.5045)
Local adapation with distilling: 0.00064
training loss: tensor(0.9945) feature loss: tensor(0.5130)
Local adapation with distilling: 0.00064
training loss: tensor(1.5040) feature loss: tensor(0.4982)
Local adapation with distilling: 0.00064
training loss: tensor(2.8111) feature loss: tensor(0.4133)
Local adapation with distilling: 0.00064
training loss: tensor(0.9203) feature loss: tensor(0.5041)
Local adapation with distilling: 0.00064
training loss: tensor(6.6557) feature loss: tensor(0.5146)
Local adapation with distilling: 0.00064
training loss: tensor(1.2259) feature loss: tensor(0.5292)
         GM acc on global data: 0.253 length of data: 10000
-------------Round number:  21  -------------
selected users: [23, 81, 85, 34, 62, 46, 42, 31, 93, 11]
torch.Size([70, 32, 16, 16]) torch.Size([70])
torch.Size([1216, 32, 16, 16]) torch.Size([1216])
torch.Size([238, 32, 16, 16]) torch.Size([238])
torch.Size([1363, 32, 16, 16]) torch.Size([1363])
torch.Size([359, 32, 16, 16]) torch.Size([359])
torch.Size([530, 32, 16, 16]) torch.Size([530])
torch.Size([147, 32, 16, 16]) torch.Size([147])
torch.Size([211, 32, 16, 16]) torch.Size([211])
torch.Size([516, 32, 16, 16]) torch.Size([516])
torch.Size([240, 32, 16, 16]) torch.Size([240])
4890 72 72
all data: 1000
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(2.6957) feature loss: tensor(0.4264)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.7305) feature loss: tensor(0.4098)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(1.5040) feature loss: tensor(0.3741)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.7985) feature loss: tensor(0.4058)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(1.2792) feature loss: tensor(0.3932)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(1.2851) feature loss: tensor(0.4289)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(1.7625) feature loss: tensor(0.3426)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(1.6365) feature loss: tensor(0.3751)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(1.3021) feature loss: tensor(0.4063)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(1.5928) feature loss: tensor(0.4005)
         GM acc on global data: 0.2139 length of data: 10000
-------------Round number:  22  -------------
selected users: [2, 49, 82, 31, 37, 12, 87, 42, 99, 85]
torch.Size([457, 32, 16, 16]) torch.Size([457])
torch.Size([695, 32, 16, 16]) torch.Size([695])
torch.Size([111, 32, 16, 16]) torch.Size([111])
torch.Size([211, 32, 16, 16]) torch.Size([211])
torch.Size([139, 32, 16, 16]) torch.Size([139])
torch.Size([48, 32, 16, 16]) torch.Size([48])
torch.Size([93, 32, 16, 16]) torch.Size([93])
torch.Size([147, 32, 16, 16]) torch.Size([147])
torch.Size([359, 32, 16, 16]) torch.Size([359])
torch.Size([238, 32, 16, 16]) torch.Size([238])
2498 72 72
all data: 1000
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(1.2748) feature loss: tensor(0.5242)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(1.1150) feature loss: tensor(0.4967)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(2.5844) feature loss: tensor(0.5842)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(2.1235) feature loss: tensor(0.5406)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(2.0013) feature loss: tensor(0.4537)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(2.7013) feature loss: tensor(0.4101)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(3.0356) feature loss: tensor(0.5837)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(1.8440) feature loss: tensor(0.5117)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(1.3919) feature loss: tensor(0.4991)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(1.5724) feature loss: tensor(0.4646)
         GM acc on global data: 0.3198 length of data: 10000
-------------Round number:  23  -------------
selected users: [26, 80, 82, 68, 77, 37, 3, 55, 20, 17]
torch.Size([72, 32, 16, 16]) torch.Size([72])
torch.Size([319, 32, 16, 16]) torch.Size([319])
torch.Size([111, 32, 16, 16]) torch.Size([111])
torch.Size([993, 32, 16, 16]) torch.Size([993])
torch.Size([693, 32, 16, 16]) torch.Size([693])
torch.Size([139, 32, 16, 16]) torch.Size([139])
torch.Size([56, 32, 16, 16]) torch.Size([56])
torch.Size([2015, 32, 16, 16]) torch.Size([2015])
torch.Size([37, 32, 16, 16]) torch.Size([37])
torch.Size([543, 32, 16, 16]) torch.Size([543])
4978 72 72
all data: 1000
Local adapation with distilling: 0.000586
training loss: tensor(4.9486) feature loss: tensor(0.4882)
Local adapation with distilling: 0.000586
training loss: tensor(1.3002) feature loss: tensor(0.4319)
Local adapation with distilling: 0.000586
training loss: tensor(1.8169) feature loss: tensor(0.4405)
Local adapation with distilling: 0.000586
training loss: tensor(0.7800) feature loss: tensor(0.4657)
Local adapation with distilling: 0.000586
training loss: tensor(0.8848) feature loss: tensor(0.4602)
Local adapation with distilling: 0.000586
training loss: tensor(1.4544) feature loss: tensor(0.3827)
Local adapation with distilling: 0.000586
training loss: tensor(2.0329) feature loss: tensor(0.2471)
Local adapation with distilling: 0.000586
training loss: tensor(0.6674) feature loss: tensor(0.4878)
Local adapation with distilling: 0.000586
training loss: tensor(1.9758) feature loss: tensor(0.3940)
Local adapation with distilling: 0.000586
training loss: tensor(1.0475) feature loss: tensor(0.4725)
         GM acc on global data: 0.1 length of data: 10000
-------------Round number:  24  -------------
selected users: [26, 31, 37, 86, 76, 14, 88, 48, 71, 67]
torch.Size([72, 32, 16, 16]) torch.Size([72])
torch.Size([211, 32, 16, 16]) torch.Size([211])
torch.Size([139, 32, 16, 16]) torch.Size([139])
torch.Size([437, 32, 16, 16]) torch.Size([437])
torch.Size([2848, 32, 16, 16]) torch.Size([2848])
torch.Size([354, 32, 16, 16]) torch.Size([354])
torch.Size([210, 32, 16, 16]) torch.Size([210])
torch.Size([309, 32, 16, 16]) torch.Size([309])
torch.Size([159, 32, 16, 16]) torch.Size([159])
torch.Size([543, 32, 16, 16]) torch.Size([543])
5282 72 72
all data: 1000
Local adapation with distilling: 0.000568
training loss: tensor(28.6334) feature loss: tensor(0.9334)
Local adapation with distilling: 0.000568
training loss: tensor(8.7992) feature loss: tensor(0.7965)
Local adapation with distilling: 0.000568
training loss: tensor(7.5296) feature loss: tensor(0.6930)
Local adapation with distilling: 0.000568
training loss: tensor(4.6364) feature loss: tensor(0.6966)
Local adapation with distilling: 0.000568
training loss: tensor(2.1972) feature loss: tensor(0.6913)
Local adapation with distilling: 0.000568
training loss: tensor(5.4506) feature loss: tensor(0.7131)
Local adapation with distilling: 0.000568
training loss: tensor(8.0319) feature loss: tensor(0.7979)
Local adapation with distilling: 0.000568
training loss: tensor(7.0907) feature loss: tensor(0.7690)
Local adapation with distilling: 0.000568
training loss: tensor(9.7441) feature loss: tensor(0.8573)
Local adapation with distilling: 0.000568
training loss: tensor(3.7813) feature loss: tensor(0.7262)
         GM acc on global data: 0.204 length of data: 10000
-------------Round number:  25  -------------
selected users: [41, 29, 33, 65, 74, 6, 57, 89, 87, 98]
torch.Size([502, 32, 16, 16]) torch.Size([502])
torch.Size([845, 32, 16, 16]) torch.Size([845])
torch.Size([546, 32, 16, 16]) torch.Size([546])
torch.Size([356, 32, 16, 16]) torch.Size([356])
torch.Size([309, 32, 16, 16]) torch.Size([309])
torch.Size([538, 32, 16, 16]) torch.Size([538])
torch.Size([655, 32, 16, 16]) torch.Size([655])
torch.Size([523, 32, 16, 16]) torch.Size([523])
torch.Size([93, 32, 16, 16]) torch.Size([93])
torch.Size([110, 32, 16, 16]) torch.Size([110])
4477 72 72
all data: 1000
Local adapation with distilling: 0.00055
training loss: tensor(1.5297) feature loss: tensor(0.5648)
Local adapation with distilling: 0.00055
training loss: tensor(1.2733) feature loss: tensor(0.5891)
Local adapation with distilling: 0.00055
training loss: tensor(1.6902) feature loss: tensor(0.5954)
Local adapation with distilling: 0.00055
training loss: tensor(2.1212) feature loss: tensor(0.5822)
Local adapation with distilling: 0.00055
training loss: tensor(2.0863) feature loss: tensor(0.5483)
Local adapation with distilling: 0.00055
training loss: tensor(1.8158) feature loss: tensor(0.6303)
Local adapation with distilling: 0.00055
