nohup: ignoring input
================================================================================
Summary of training process:
Dataset                : Cifar10
Batch size             : 64
Learing rate           : 0.001
Number of total clients: 100
Split method           : quantity
Split parameter        : 3.0
Clients per round      : 10
Number of global rounds: 100
Number of local rounds : 10
Feature from layer     : 0
Feature percentage     : 0.1
Local training loss    : CE_CE_KL_LC
Loss of beta           : 1.0
Algorithm              : FedFea
Modelname              : MOBNET
Mode                   : training
Seed                   : 0
================================================================================
Files already downloaded and verified
Files already downloaded and verified
Class frequencies:
client,class0,class1,class2,class3,class4,class5,class6,class7,class8,class9,Amount
Client   0,0.298,0.00,0.00,0.00,0.00,0.375,0.00,0.00,0.327,0.00,496
Client   1,0.00,0.321,0.00,0.00,0.00,0.358,0.00,0.00,0.00,0.321,520
Client   2,0.307,0.346,0.346,0.00,0.00,0.00,0.00,0.00,0.00,0.00,482
Client   3,0.00,0.00,0.00,0.337,0.00,0.00,0.377,0.286,0.00,0.00,531
Client   4,0.00,0.00,0.340,0.00,0.320,0.00,0.00,0.00,0.00,0.340,491
Client   5,0.00,0.00,0.327,0.00,0.308,0.365,0.00,0.00,0.00,0.00,510
Client   6,0.00,0.00,0.319,0.00,0.300,0.00,0.382,0.00,0.00,0.00,524
Client   7,0.00,0.00,0.00,0.00,0.330,0.00,0.00,0.319,0.00,0.351,476
Client   8,0.00,0.347,0.00,0.00,0.00,0.00,0.00,0.316,0.337,0.00,481
Client   9,0.286,0.00,0.00,0.00,0.00,0.00,0.389,0.00,0.00,0.325,514
Client  10,0.315,0.00,0.00,0.00,0.00,0.00,0.00,0.326,0.00,0.358,466
Client  11,0.00,0.313,0.00,0.00,0.00,0.00,0.375,0.00,0.00,0.313,534
Client  12,0.306,0.347,0.347,0.00,0.00,0.00,0.00,0.00,0.00,0.00,481
Client  13,0.00,0.329,0.00,0.352,0.00,0.00,0.00,0.00,0.319,0.00,508
Client  14,0.00,0.00,0.00,0.359,0.315,0.00,0.00,0.00,0.325,0.00,498
Client  15,0.00,0.00,0.00,0.00,0.00,0.361,0.00,0.00,0.315,0.324,515
Client  16,0.00,0.00,0.00,0.337,0.00,0.00,0.377,0.286,0.00,0.00,531
Client  17,0.00,0.00,0.00,0.00,0.00,0.346,0.372,0.283,0.00,0.00,538
Client  18,0.00,0.337,0.00,0.00,0.00,0.00,0.00,0.00,0.327,0.337,496
Client  19,0.00,0.00,0.00,0.356,0.312,0.00,0.00,0.00,0.00,0.332,503
Client  20,0.309,0.351,0.00,0.00,0.00,0.00,0.00,0.00,0.340,0.00,476
Client  21,0.312,0.355,0.00,0.00,0.333,0.00,0.00,0.00,0.00,0.00,471
Client  22,0.00,0.00,0.326,0.349,0.00,0.00,0.00,0.00,0.00,0.326,513
Client  23,0.298,0.00,0.339,0.363,0.00,0.00,0.00,0.00,0.00,0.00,493
Client  24,0.00,0.00,0.340,0.00,0.320,0.00,0.00,0.00,0.00,0.340,491
Client  25,0.00,0.00,0.00,0.00,0.00,0.367,0.00,0.302,0.00,0.331,504
Client  26,0.00,0.00,0.00,0.00,0.00,0.00,0.378,0.00,0.306,0.316,529
Client  27,0.00,0.00,0.00,0.368,0.320,0.00,0.00,0.312,0.00,0.00,487
Client  28,0.00,0.00,0.00,0.00,0.00,0.360,0.00,0.00,0.315,0.325,514
Client  29,0.00,0.00,0.00,0.328,0.00,0.00,0.366,0.00,0.00,0.306,546
Client  30,0.309,0.00,0.352,0.00,0.00,0.00,0.00,0.00,0.339,0.00,475
Client  31,0.00,0.344,0.00,0.00,0.00,0.00,0.00,0.313,0.00,0.344,486
Client  32,0.00,0.00,0.335,0.359,0.00,0.00,0.00,0.305,0.00,0.00,498
Client  33,0.302,0.00,0.00,0.368,0.00,0.00,0.00,0.00,0.331,0.00,487
Client  34,0.00,0.352,0.00,0.00,0.328,0.00,0.00,0.320,0.00,0.00,475
Client  35,0.00,0.315,0.00,0.337,0.00,0.348,0.00,0.00,0.00,0.00,531
Client  36,0.289,0.00,0.00,0.00,0.00,0.00,0.394,0.00,0.317,0.00,508
Client  37,0.00,0.00,0.00,0.00,0.307,0.00,0.394,0.299,0.00,0.00,508
Client  38,0.00,0.00,0.00,0.00,0.00,0.339,0.366,0.00,0.295,0.00,546
Client  39,0.00,0.00,0.322,0.00,0.00,0.356,0.00,0.00,0.00,0.322,519
Client  40,0.320,0.00,0.00,0.00,0.00,0.00,0.00,0.330,0.350,0.00,460
Client  41,0.00,0.352,0.00,0.00,0.328,0.00,0.00,0.320,0.00,0.00,475
Client  42,0.00,0.00,0.352,0.00,0.328,0.00,0.00,0.320,0.00,0.00,475
Client  43,0.298,0.00,0.00,0.363,0.00,0.00,0.00,0.00,0.00,0.339,493
Client  44,0.313,0.00,0.355,0.00,0.332,0.00,0.00,0.00,0.00,0.00,470
Client  45,0.00,0.331,0.00,0.00,0.00,0.367,0.00,0.302,0.00,0.00,504
Client  46,0.00,0.00,0.00,0.00,0.00,0.00,0.385,0.293,0.00,0.322,519
Client  47,0.00,0.00,0.00,0.00,0.333,0.00,0.00,0.323,0.344,0.00,468
Client  48,0.309,0.352,0.00,0.00,0.00,0.00,0.00,0.00,0.339,0.00,475
Client  49,0.00,0.00,0.337,0.00,0.00,0.00,0.00,0.00,0.325,0.337,495
Client  50,0.298,0.339,0.00,0.363,0.00,0.00,0.00,0.00,0.00,0.00,493
Client  51,0.00,0.344,0.344,0.00,0.00,0.00,0.00,0.311,0.00,0.00,485
Client  52,0.286,0.00,0.325,0.00,0.00,0.00,0.389,0.00,0.00,0.00,514
Client  53,0.00,0.00,0.326,0.350,0.00,0.00,0.00,0.00,0.00,0.324,512
Client  54,0.00,0.00,0.319,0.00,0.298,0.00,0.382,0.00,0.00,0.00,523
Client  55,0.304,0.00,0.00,0.00,0.00,0.383,0.00,0.313,0.00,0.00,483
Client  56,0.00,0.303,0.00,0.00,0.00,0.335,0.362,0.00,0.00,0.00,552
Client  57,0.00,0.00,0.00,0.00,0.308,0.00,0.394,0.298,0.00,0.00,507
Client  58,0.289,0.00,0.00,0.00,0.00,0.00,0.394,0.00,0.317,0.00,508
Client  59,0.00,0.322,0.00,0.00,0.00,0.357,0.00,0.00,0.00,0.320,518
Client  60,0.306,0.347,0.347,0.00,0.00,0.00,0.00,0.00,0.00,0.00,481
Client  61,0.00,0.327,0.00,0.00,0.308,0.365,0.00,0.00,0.00,0.00,507
Client  62,0.316,0.00,0.359,0.00,0.00,0.00,0.00,0.325,0.00,0.00,465
Client  63,0.00,0.00,0.00,0.354,0.00,0.00,0.00,0.00,0.318,0.328,506
Client  64,0.00,0.00,0.00,0.00,0.317,0.376,0.00,0.307,0.00,0.00,492
Client  65,0.295,0.00,0.00,0.00,0.00,0.371,0.00,0.00,0.00,0.333,498
Client  66,0.00,0.00,0.00,0.327,0.00,0.00,0.368,0.00,0.00,0.305,544
Client  67,0.00,0.351,0.00,0.00,0.330,0.00,0.00,0.319,0.00,0.00,473
Client  68,0.00,0.00,0.00,0.00,0.302,0.00,0.387,0.00,0.311,0.00,517
Client  69,0.00,0.00,0.337,0.00,0.00,0.00,0.00,0.00,0.327,0.337,493
Client  70,0.304,0.00,0.00,0.00,0.00,0.383,0.00,0.313,0.00,0.00,483
Client  71,0.00,0.327,0.00,0.00,0.308,0.365,0.00,0.00,0.00,0.00,507
Client  72,0.00,0.00,0.324,0.00,0.00,0.361,0.00,0.00,0.314,0.00,512
Client  73,0.00,0.00,0.00,0.340,0.00,0.353,0.00,0.00,0.307,0.00,524
Client  74,0.00,0.344,0.00,0.00,0.323,0.00,0.00,0.00,0.333,0.00,483
Client  75,0.304,0.00,0.00,0.00,0.00,0.383,0.00,0.313,0.00,0.00,483
Client  76,0.00,0.00,0.00,0.333,0.292,0.00,0.375,0.00,0.00,0.00,534
Client  77,0.317,0.00,0.358,0.00,0.00,0.00,0.00,0.325,0.00,0.00,464
Client  78,0.00,0.00,0.00,0.340,0.00,0.353,0.00,0.00,0.307,0.00,524
Client  79,0.00,0.333,0.333,0.00,0.00,0.00,0.00,0.00,0.00,0.333,498
Client  80,0.306,0.00,0.00,0.370,0.324,0.00,0.00,0.00,0.00,0.00,481
Client  81,0.287,0.324,0.00,0.00,0.00,0.00,0.390,0.00,0.00,0.00,513
Client  82,0.317,0.00,0.358,0.00,0.00,0.00,0.00,0.325,0.00,0.00,464
Client  83,0.00,0.00,0.329,0.352,0.00,0.00,0.00,0.00,0.319,0.00,505
Client  84,0.306,0.00,0.00,0.370,0.324,0.00,0.00,0.00,0.00,0.00,481
Client  85,0.00,0.00,0.00,0.00,0.311,0.369,0.00,0.00,0.321,0.00,502
Client  86,0.00,0.00,0.312,0.00,0.00,0.00,0.376,0.00,0.00,0.312,532
Client  87,0.309,0.00,0.00,0.374,0.00,0.00,0.00,0.317,0.00,0.00,476
Client  88,0.00,0.344,0.00,0.00,0.323,0.00,0.00,0.00,0.333,0.00,483
Client  89,0.00,0.00,0.00,0.327,0.00,0.00,0.368,0.00,0.00,0.305,544
Client  90,0.309,0.00,0.00,0.374,0.00,0.00,0.00,0.317,0.00,0.00,476
Client  91,0.00,0.314,0.00,0.336,0.00,0.350,0.00,0.00,0.00,0.00,529
Client  92,0.313,0.00,0.354,0.00,0.333,0.00,0.00,0.00,0.00,0.00,469
Client  93,0.00,0.00,0.00,0.340,0.00,0.353,0.00,0.00,0.307,0.00,524
Client  94,0.00,0.00,0.00,0.00,0.308,0.00,0.394,0.298,0.00,0.00,507
Client  95,0.00,0.331,0.00,0.00,0.00,0.369,0.00,0.301,0.00,0.00,502
Client  96,0.287,0.00,0.324,0.00,0.00,0.00,0.390,0.00,0.00,0.00,513
Client  97,0.00,0.00,0.347,0.00,0.00,0.00,0.00,0.316,0.337,0.00,478
Client  98,0.00,0.344,0.00,0.00,0.323,0.00,0.00,0.00,0.333,0.00,483
Client  99,0.313,0.00,0.00,0.00,0.333,0.00,0.00,0.00,0.00,0.354,469
0 [0 5 8] [0 5 8] [1 2 3 4 6 7 9]
0 training: Counter({5: 186, 8: 162, 0: 148}) testing iid: Counter({8: 1000, 0: 1000, 5: 1000})
1 [1 5 9] [1 5 9] [0 2 3 4 6 7 8]
1 training: Counter({5: 186, 1: 167, 9: 167}) testing iid: Counter({1: 1000, 9: 1000, 5: 1000})
2 [0 1 2] [0 1 2] [3 4 5 6 7 8 9]
2 training: Counter({1: 167, 2: 167, 0: 148}) testing iid: Counter({0: 1000, 1: 1000, 2: 1000})
3 [3 6 7] [3 6 7] [0 1 2 4 5 8 9]
3 training: Counter({6: 200, 3: 179, 7: 152}) testing iid: Counter({3: 1000, 6: 1000, 7: 1000})
4 [2 4 9] [2 4 9] [0 1 3 5 6 7 8]
4 training: Counter({2: 167, 9: 167, 4: 157}) testing iid: Counter({9: 1000, 4: 1000, 2: 1000})
5 [2 4 5] [2 4 5] [0 1 3 6 7 8 9]
5 training: Counter({5: 186, 2: 167, 4: 157}) testing iid: Counter({5: 1000, 4: 1000, 2: 1000})
6 [2 4 6] [2 4 6] [0 1 3 5 7 8 9]
6 training: Counter({6: 200, 2: 167, 4: 157}) testing iid: Counter({6: 1000, 4: 1000, 2: 1000})
7 [4 7 9] [4 7 9] [0 1 2 3 5 6 8]
7 training: Counter({9: 167, 4: 157, 7: 152}) testing iid: Counter({9: 1000, 7: 1000, 4: 1000})
8 [1 7 8] [1 7 8] [0 2 3 4 5 6 9]
8 training: Counter({1: 167, 8: 162, 7: 152}) testing iid: Counter({8: 1000, 1: 1000, 7: 1000})
9 [0 6 9] [0 6 9] [1 2 3 4 5 7 8]
9 training: Counter({6: 200, 9: 167, 0: 147}) testing iid: Counter({0: 1000, 6: 1000, 9: 1000})
10 [0 7 9] [0 7 9] [1 2 3 4 5 6 8]
10 training: Counter({9: 167, 7: 152, 0: 147}) testing iid: Counter({0: 1000, 9: 1000, 7: 1000})
11 [1 6 9] [1 6 9] [0 2 3 4 5 7 8]
11 training: Counter({6: 200, 1: 167, 9: 167}) testing iid: Counter({6: 1000, 1: 1000, 9: 1000})
12 [0 1 2] [0 1 2] [3 4 5 6 7 8 9]
12 training: Counter({1: 167, 2: 167, 0: 147}) testing iid: Counter({0: 1000, 1: 1000, 2: 1000})
13 [1 3 8] [1 3 8] [0 2 4 5 6 7 9]
13 training: Counter({3: 179, 1: 167, 8: 162}) testing iid: Counter({3: 1000, 8: 1000, 1: 1000})
14 [3 4 8] [3 4 8] [0 1 2 5 6 7 9]
14 training: Counter({3: 179, 8: 162, 4: 157}) testing iid: Counter({3: 1000, 8: 1000, 4: 1000})
15 [5 8 9] [5 8 9] [0 1 2 3 4 6 7]
15 training: Counter({5: 186, 9: 167, 8: 162}) testing iid: Counter({8: 1000, 9: 1000, 5: 1000})
16 [3 6 7] [3 6 7] [0 1 2 4 5 8 9]
16 training: Counter({6: 200, 3: 179, 7: 152}) testing iid: Counter({3: 1000, 6: 1000, 7: 1000})
17 [5 6 7] [5 6 7] [0 1 2 3 4 8 9]
17 training: Counter({6: 200, 5: 186, 7: 152}) testing iid: Counter({6: 1000, 5: 1000, 7: 1000})
18 [1 8 9] [1 8 9] [0 2 3 4 5 6 7]
18 training: Counter({1: 167, 9: 167, 8: 162}) testing iid: Counter({8: 1000, 1: 1000, 9: 1000})
19 [3 4 9] [3 4 9] [0 1 2 5 6 7 8]
19 training: Counter({3: 179, 9: 167, 4: 157}) testing iid: Counter({3: 1000, 9: 1000, 4: 1000})
20 [0 1 8] [0 1 8] [2 3 4 5 6 7 9]
20 training: Counter({1: 167, 8: 162, 0: 147}) testing iid: Counter({8: 1000, 0: 1000, 1: 1000})
21 [0 1 4] [0 1 4] [2 3 5 6 7 8 9]
21 training: Counter({1: 167, 4: 157, 0: 147}) testing iid: Counter({0: 1000, 1: 1000, 4: 1000})
22 [2 3 9] [2 3 9] [0 1 4 5 6 7 8]
22 training: Counter({3: 179, 2: 167, 9: 167}) testing iid: Counter({3: 1000, 9: 1000, 2: 1000})
23 [0 2 3] [0 2 3] [1 4 5 6 7 8 9]
23 training: Counter({3: 179, 2: 167, 0: 147}) testing iid: Counter({3: 1000, 0: 1000, 2: 1000})
24 [2 4 9] [2 4 9] [0 1 3 5 6 7 8]
24 training: Counter({2: 167, 9: 167, 4: 157}) testing iid: Counter({9: 1000, 4: 1000, 2: 1000})
25 [5 7 9] [5 7 9] [0 1 2 3 4 6 8]
25 training: Counter({5: 185, 9: 167, 7: 152}) testing iid: Counter({9: 1000, 5: 1000, 7: 1000})
26 [6 8 9] [6 8 9] [0 1 2 3 4 5 7]
26 training: Counter({6: 200, 9: 167, 8: 162}) testing iid: Counter({8: 1000, 6: 1000, 9: 1000})
27 [3 4 7] [3 4 7] [0 1 2 5 6 8 9]
27 training: Counter({3: 179, 4: 156, 7: 152}) testing iid: Counter({3: 1000, 7: 1000, 4: 1000})
28 [5 8 9] [5 8 9] [0 1 2 3 4 6 7]
28 training: Counter({5: 185, 9: 167, 8: 162}) testing iid: Counter({8: 1000, 9: 1000, 5: 1000})
29 [3 6 9] [3 6 9] [0 1 2 4 5 7 8]
29 training: Counter({6: 200, 3: 179, 9: 167}) testing iid: Counter({3: 1000, 6: 1000, 9: 1000})
30 [0 2 8] [0 2 8] [1 3 4 5 6 7 9]
30 training: Counter({2: 167, 8: 161, 0: 147}) testing iid: Counter({8: 1000, 0: 1000, 2: 1000})
31 [1 7 9] [1 7 9] [0 2 3 4 5 6 8]
31 training: Counter({1: 167, 9: 167, 7: 152}) testing iid: Counter({1: 1000, 9: 1000, 7: 1000})
32 [2 3 7] [2 3 7] [0 1 4 5 6 8 9]
32 training: Counter({3: 179, 2: 167, 7: 152}) testing iid: Counter({3: 1000, 7: 1000, 2: 1000})
33 [0 3 8] [0 3 8] [1 2 4 5 6 7 9]
33 training: Counter({3: 179, 8: 161, 0: 147}) testing iid: Counter({3: 1000, 8: 1000, 0: 1000})
34 [1 4 7] [1 4 7] [0 2 3 5 6 8 9]
34 training: Counter({1: 167, 4: 156, 7: 152}) testing iid: Counter({1: 1000, 7: 1000, 4: 1000})
35 [1 3 5] [1 3 5] [0 2 4 6 7 8 9]
35 training: Counter({5: 185, 3: 179, 1: 167}) testing iid: Counter({3: 1000, 1: 1000, 5: 1000})
36 [0 6 8] [0 6 8] [1 2 3 4 5 7 9]
36 training: Counter({6: 200, 8: 161, 0: 147}) testing iid: Counter({8: 1000, 0: 1000, 6: 1000})
37 [4 6 7] [4 6 7] [0 1 2 3 5 8 9]
37 training: Counter({6: 200, 4: 156, 7: 152}) testing iid: Counter({6: 1000, 7: 1000, 4: 1000})
38 [5 6 8] [5 6 8] [0 1 2 3 4 7 9]
38 training: Counter({6: 200, 5: 185, 8: 161}) testing iid: Counter({8: 1000, 6: 1000, 5: 1000})
39 [2 5 9] [2 5 9] [0 1 3 4 6 7 8]
39 training: Counter({5: 185, 2: 167, 9: 167}) testing iid: Counter({9: 1000, 5: 1000, 2: 1000})
40 [0 7 8] [0 7 8] [1 2 3 4 5 6 9]
40 training: Counter({8: 161, 7: 152, 0: 147}) testing iid: Counter({8: 1000, 0: 1000, 7: 1000})
41 [1 4 7] [1 4 7] [0 2 3 5 6 8 9]
41 training: Counter({1: 167, 4: 156, 7: 152}) testing iid: Counter({1: 1000, 7: 1000, 4: 1000})
42 [2 4 7] [2 4 7] [0 1 3 5 6 8 9]
42 training: Counter({2: 167, 4: 156, 7: 152}) testing iid: Counter({7: 1000, 4: 1000, 2: 1000})
43 [0 3 9] [0 3 9] [1 2 4 5 6 7 8]
43 training: Counter({3: 179, 9: 167, 0: 147}) testing iid: Counter({3: 1000, 0: 1000, 9: 1000})
44 [0 2 4] [0 2 4] [1 3 5 6 7 8 9]
44 training: Counter({2: 167, 4: 156, 0: 147}) testing iid: Counter({0: 1000, 4: 1000, 2: 1000})
45 [1 5 7] [1 5 7] [0 2 3 4 6 8 9]
45 training: Counter({5: 185, 1: 167, 7: 152}) testing iid: Counter({1: 1000, 5: 1000, 7: 1000})
46 [6 7 9] [6 7 9] [0 1 2 3 4 5 8]
46 training: Counter({6: 200, 9: 167, 7: 152}) testing iid: Counter({6: 1000, 9: 1000, 7: 1000})
47 [4 7 8] [4 7 8] [0 1 2 3 5 6 9]
47 training: Counter({8: 161, 4: 156, 7: 151}) testing iid: Counter({8: 1000, 7: 1000, 4: 1000})
48 [0 1 8] [0 1 8] [2 3 4 5 6 7 9]
48 training: Counter({1: 167, 8: 161, 0: 147}) testing iid: Counter({8: 1000, 0: 1000, 1: 1000})
49 [2 8 9] [2 8 9] [0 1 3 4 5 6 7]
49 training: Counter({2: 167, 9: 167, 8: 161}) testing iid: Counter({8: 1000, 9: 1000, 2: 1000})
50 [0 1 3] [0 1 3] [2 4 5 6 7 8 9]
50 training: Counter({3: 179, 1: 167, 0: 147}) testing iid: Counter({3: 1000, 0: 1000, 1: 1000})
51 [1 2 7] [1 2 7] [0 3 4 5 6 8 9]
51 training: Counter({1: 167, 2: 167, 7: 151}) testing iid: Counter({1: 1000, 7: 1000, 2: 1000})
52 [0 2 6] [0 2 6] [1 3 4 5 7 8 9]
52 training: Counter({6: 200, 2: 167, 0: 147}) testing iid: Counter({0: 1000, 6: 1000, 2: 1000})
53 [2 3 9] [2 3 9] [0 1 4 5 6 7 8]
53 training: Counter({3: 179, 2: 167, 9: 166}) testing iid: Counter({3: 1000, 9: 1000, 2: 1000})
54 [2 4 6] [2 4 6] [0 1 3 5 7 8 9]
54 training: Counter({6: 200, 2: 167, 4: 156}) testing iid: Counter({6: 1000, 4: 1000, 2: 1000})
55 [0 5 7] [0 5 7] [1 2 3 4 6 8 9]
55 training: Counter({5: 185, 7: 151, 0: 147}) testing iid: Counter({0: 1000, 5: 1000, 7: 1000})
56 [1 5 6] [1 5 6] [0 2 3 4 7 8 9]
56 training: Counter({6: 200, 5: 185, 1: 167}) testing iid: Counter({6: 1000, 1: 1000, 5: 1000})
57 [4 6 7] [4 6 7] [0 1 2 3 5 8 9]
57 training: Counter({6: 200, 4: 156, 7: 151}) testing iid: Counter({6: 1000, 7: 1000, 4: 1000})
58 [0 6 8] [0 6 8] [1 2 3 4 5 7 9]
58 training: Counter({6: 200, 8: 161, 0: 147}) testing iid: Counter({8: 1000, 0: 1000, 6: 1000})
59 [1 5 9] [1 5 9] [0 2 3 4 6 7 8]
59 training: Counter({5: 185, 1: 167, 9: 166}) testing iid: Counter({1: 1000, 9: 1000, 5: 1000})
60 [0 1 2] [0 1 2] [3 4 5 6 7 8 9]
60 training: Counter({1: 167, 2: 167, 0: 147}) testing iid: Counter({0: 1000, 1: 1000, 2: 1000})
61 [1 4 5] [1 4 5] [0 2 3 6 7 8 9]
61 training: Counter({5: 185, 1: 166, 4: 156}) testing iid: Counter({1: 1000, 5: 1000, 4: 1000})
62 [0 2 7] [0 2 7] [1 3 4 5 6 8 9]
62 training: Counter({2: 167, 7: 151, 0: 147}) testing iid: Counter({0: 1000, 7: 1000, 2: 1000})
63 [3 8 9] [3 8 9] [0 1 2 4 5 6 7]
63 training: Counter({3: 179, 9: 166, 8: 161}) testing iid: Counter({3: 1000, 8: 1000, 9: 1000})
64 [4 5 7] [4 5 7] [0 1 2 3 6 8 9]
64 training: Counter({5: 185, 4: 156, 7: 151}) testing iid: Counter({5: 1000, 7: 1000, 4: 1000})
65 [0 5 9] [0 5 9] [1 2 3 4 6 7 8]
65 training: Counter({5: 185, 9: 166, 0: 147}) testing iid: Counter({0: 1000, 9: 1000, 5: 1000})
66 [3 6 9] [3 6 9] [0 1 2 4 5 7 8]
66 training: Counter({6: 200, 3: 178, 9: 166}) testing iid: Counter({3: 1000, 6: 1000, 9: 1000})
67 [1 4 7] [1 4 7] [0 2 3 5 6 8 9]
67 training: Counter({1: 166, 4: 156, 7: 151}) testing iid: Counter({1: 1000, 7: 1000, 4: 1000})
68 [4 6 8] [4 6 8] [0 1 2 3 5 7 9]
68 training: Counter({6: 200, 8: 161, 4: 156}) testing iid: Counter({8: 1000, 6: 1000, 4: 1000})
69 [2 8 9] [2 8 9] [0 1 3 4 5 6 7]
69 training: Counter({2: 166, 9: 166, 8: 161}) testing iid: Counter({8: 1000, 9: 1000, 2: 1000})
70 [0 5 7] [0 5 7] [1 2 3 4 6 8 9]
70 training: Counter({5: 185, 7: 151, 0: 147}) testing iid: Counter({0: 1000, 5: 1000, 7: 1000})
71 [1 4 5] [1 4 5] [0 2 3 6 7 8 9]
71 training: Counter({5: 185, 1: 166, 4: 156}) testing iid: Counter({1: 1000, 5: 1000, 4: 1000})
72 [2 5 8] [2 5 8] [0 1 3 4 6 7 9]
72 training: Counter({5: 185, 2: 166, 8: 161}) testing iid: Counter({8: 1000, 5: 1000, 2: 1000})
73 [3 5 8] [3 5 8] [0 1 2 4 6 7 9]
73 training: Counter({5: 185, 3: 178, 8: 161}) testing iid: Counter({3: 1000, 8: 1000, 5: 1000})
74 [1 4 8] [1 4 8] [0 2 3 5 6 7 9]
74 training: Counter({1: 166, 8: 161, 4: 156}) testing iid: Counter({8: 1000, 1: 1000, 4: 1000})
75 [0 5 7] [0 5 7] [1 2 3 4 6 8 9]
75 training: Counter({5: 185, 7: 151, 0: 147}) testing iid: Counter({0: 1000, 5: 1000, 7: 1000})
76 [3 4 6] [3 4 6] [0 1 2 5 7 8 9]
76 training: Counter({6: 200, 3: 178, 4: 156}) testing iid: Counter({3: 1000, 6: 1000, 4: 1000})
77 [0 2 7] [0 2 7] [1 3 4 5 6 8 9]
77 training: Counter({2: 166, 7: 151, 0: 147}) testing iid: Counter({0: 1000, 7: 1000, 2: 1000})
78 [3 5 8] [3 5 8] [0 1 2 4 6 7 9]
78 training: Counter({5: 185, 3: 178, 8: 161}) testing iid: Counter({3: 1000, 8: 1000, 5: 1000})
79 [1 2 9] [1 2 9] [0 3 4 5 6 7 8]
79 training: Counter({1: 166, 2: 166, 9: 166}) testing iid: Counter({1: 1000, 9: 1000, 2: 1000})
80 [0 3 4] [0 3 4] [1 2 5 6 7 8 9]
80 training: Counter({3: 178, 4: 156, 0: 147}) testing iid: Counter({3: 1000, 0: 1000, 4: 1000})
81 [0 1 6] [0 1 6] [2 3 4 5 7 8 9]
81 training: Counter({6: 200, 1: 166, 0: 147}) testing iid: Counter({0: 1000, 6: 1000, 1: 1000})
82 [0 2 7] [0 2 7] [1 3 4 5 6 8 9]
82 training: Counter({2: 166, 7: 151, 0: 147}) testing iid: Counter({0: 1000, 7: 1000, 2: 1000})
83 [2 3 8] [2 3 8] [0 1 4 5 6 7 9]
83 training: Counter({3: 178, 2: 166, 8: 161}) testing iid: Counter({3: 1000, 8: 1000, 2: 1000})
84 [0 3 4] [0 3 4] [1 2 5 6 7 8 9]
84 training: Counter({3: 178, 4: 156, 0: 147}) testing iid: Counter({3: 1000, 0: 1000, 4: 1000})
85 [4 5 8] [4 5 8] [0 1 2 3 6 7 9]
85 training: Counter({5: 185, 8: 161, 4: 156}) testing iid: Counter({8: 1000, 5: 1000, 4: 1000})
86 [2 6 9] [2 6 9] [0 1 3 4 5 7 8]
86 training: Counter({6: 200, 2: 166, 9: 166}) testing iid: Counter({6: 1000, 9: 1000, 2: 1000})
87 [0 3 7] [0 3 7] [1 2 4 5 6 8 9]
87 training: Counter({3: 178, 7: 151, 0: 147}) testing iid: Counter({3: 1000, 0: 1000, 7: 1000})
88 [1 4 8] [1 4 8] [0 2 3 5 6 7 9]
88 training: Counter({1: 166, 8: 161, 4: 156}) testing iid: Counter({8: 1000, 1: 1000, 4: 1000})
89 [3 6 9] [3 6 9] [0 1 2 4 5 7 8]
89 training: Counter({6: 200, 3: 178, 9: 166}) testing iid: Counter({3: 1000, 6: 1000, 9: 1000})
90 [0 3 7] [0 3 7] [1 2 4 5 6 8 9]
90 training: Counter({3: 178, 7: 151, 0: 147}) testing iid: Counter({3: 1000, 0: 1000, 7: 1000})
91 [1 3 5] [1 3 5] [0 2 4 6 7 8 9]
91 training: Counter({5: 185, 3: 178, 1: 166}) testing iid: Counter({3: 1000, 1: 1000, 5: 1000})
92 [0 2 4] [0 2 4] [1 3 5 6 7 8 9]
92 training: Counter({2: 166, 4: 156, 0: 147}) testing iid: Counter({0: 1000, 4: 1000, 2: 1000})
93 [3 5 8] [3 5 8] [0 1 2 4 6 7 9]
93 training: Counter({5: 185, 3: 178, 8: 161}) testing iid: Counter({3: 1000, 8: 1000, 5: 1000})
94 [4 6 7] [4 6 7] [0 1 2 3 5 8 9]
94 training: Counter({6: 200, 4: 156, 7: 151}) testing iid: Counter({6: 1000, 7: 1000, 4: 1000})
95 [1 5 7] [1 5 7] [0 2 3 4 6 8 9]
95 training: Counter({5: 185, 1: 166, 7: 151}) testing iid: Counter({1: 1000, 5: 1000, 7: 1000})
96 [0 2 6] [0 2 6] [1 3 4 5 7 8 9]
96 training: Counter({6: 200, 2: 166, 0: 147}) testing iid: Counter({0: 1000, 6: 1000, 2: 1000})
97 [2 7 8] [2 7 8] [0 1 3 4 5 6 9]
97 training: Counter({2: 166, 8: 161, 7: 151}) testing iid: Counter({8: 1000, 7: 1000, 2: 1000})
98 [1 4 8] [1 4 8] [0 2 3 5 6 7 9]
98 training: Counter({1: 166, 8: 161, 4: 156}) testing iid: Counter({8: 1000, 1: 1000, 4: 1000})
99 [0 4 9] [0 4 9] [1 2 3 5 6 7 8]
99 training: Counter({9: 166, 4: 156, 0: 147}) testing iid: Counter({0: 1000, 9: 1000, 4: 1000})
Num_samples of Training set per client: [496, 520, 482, 531, 491, 510, 524, 476, 481, 514, 466, 534, 481, 508, 498, 515, 531, 538, 496, 503, 476, 471, 513, 493, 491, 504, 529, 487, 514, 546, 475, 486, 498, 487, 475, 531, 508, 508, 546, 519, 460, 475, 475, 493, 470, 504, 519, 468, 475, 495, 493, 485, 514, 512, 523, 483, 552, 507, 508, 518, 481, 507, 465, 506, 492, 498, 544, 473, 517, 493, 483, 507, 512, 524, 483, 483, 534, 464, 524, 498, 481, 513, 464, 505, 481, 502, 532, 476, 483, 544, 476, 529, 469, 524, 507, 502, 513, 478, 483, 469]
Total_training_samples: 50000
Global test set: 10000
Finish Generating Samples, distribution saved
MobileNetV2(
  (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (layers): Sequential(
    (0): Block(
      (conv1): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): Block(
      (conv1): Conv2d(16, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=96, bias=False)
      (bn2): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(96, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(16, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (2): Block(
      (conv1): Conv2d(24, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=144, bias=False)
      (bn2): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(144, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (3): Block(
      (conv1): Conv2d(24, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(144, 144, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=144, bias=False)
      (bn2): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(144, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (4): Block(
      (conv1): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
      (bn2): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(192, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (5): Block(
      (conv1): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
      (bn2): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(192, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (6): Block(
      (conv1): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(192, 192, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=192, bias=False)
      (bn2): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(192, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (7): Block(
      (conv1): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
      (bn2): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (8): Block(
      (conv1): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
      (bn2): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (9): Block(
      (conv1): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
      (bn2): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (10): Block(
      (conv1): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
      (bn2): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(384, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(64, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (11): Block(
      (conv1): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)
      (bn2): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (12): Block(
      (conv1): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)
      (bn2): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (13): Block(
      (conv1): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(576, 576, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=576, bias=False)
      (bn2): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(576, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (14): Block(
      (conv1): Conv2d(160, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(960, 960, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=960, bias=False)
      (bn2): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(960, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (15): Block(
      (conv1): Conv2d(160, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(960, 960, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=960, bias=False)
      (bn2): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(960, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (16): Block(
      (conv1): Conv2d(160, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(960, 960, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=960, bias=False)
      (bn2): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(960, 320, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(160, 320, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (conv2): Conv2d(320, 1280, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn2): BatchNorm2d(1280, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (linear): Linear(in_features=1280, out_features=10, bias=True)
)
number of parameters: 2296922
clients initializting...
output size: 10
  0%|          | 0/100 [00:00<?, ?it/s]  1%|          | 1/100 [00:03<06:28,  3.92s/it]  2%|▏         | 2/100 [00:04<04:49,  2.96s/it]  3%|▎         | 3/100 [00:05<03:41,  2.28s/it]  4%|▍         | 4/100 [00:06<02:53,  1.81s/it]  5%|▌         | 5/100 [00:06<02:20,  1.48s/it]  6%|▌         | 6/100 [00:07<01:57,  1.25s/it]  7%|▋         | 7/100 [00:08<01:40,  1.08s/it]  8%|▊         | 8/100 [00:08<01:28,  1.04it/s]  9%|▉         | 9/100 [00:09<01:20,  1.14it/s] 10%|█         | 10/100 [00:10<01:13,  1.22it/s] 11%|█         | 11/100 [00:10<01:09,  1.29it/s] 12%|█▏        | 12/100 [00:11<01:05,  1.34it/s] 13%|█▎        | 13/100 [00:12<01:02,  1.38it/s] 14%|█▍        | 14/100 [00:12<01:01,  1.40it/s] 15%|█▌        | 15/100 [00:13<01:00,  1.41it/s] 16%|█▌        | 16/100 [00:14<00:59,  1.42it/s] 17%|█▋        | 17/100 [00:15<00:58,  1.43it/s] 18%|█▊        | 18/100 [00:15<00:56,  1.45it/s] 19%|█▉        | 19/100 [00:16<00:55,  1.46it/s] 20%|██        | 20/100 [00:17<00:54,  1.47it/s] 21%|██        | 21/100 [00:17<00:53,  1.46it/s] 22%|██▏       | 22/100 [00:18<00:52,  1.48it/s] 23%|██▎       | 23/100 [00:19<00:51,  1.49it/s] 24%|██▍       | 24/100 [00:19<00:51,  1.47it/s] 25%|██▌       | 25/100 [00:20<00:50,  1.49it/s] 26%|██▌       | 26/100 [00:21<00:49,  1.51it/s] 27%|██▋       | 27/100 [00:21<00:48,  1.51it/s] 28%|██▊       | 28/100 [00:22<00:48,  1.48it/s] 29%|██▉       | 29/100 [00:23<00:47,  1.50it/s] 30%|███       | 30/100 [00:23<00:46,  1.49it/s] 31%|███       | 31/100 [00:24<00:46,  1.49it/s] 32%|███▏      | 32/100 [00:25<00:46,  1.48it/s] 33%|███▎      | 33/100 [00:25<00:46,  1.46it/s] 34%|███▍      | 34/100 [00:26<00:45,  1.44it/s] 35%|███▌      | 35/100 [00:27<00:45,  1.43it/s] 36%|███▌      | 36/100 [00:31<01:49,  1.71s/it] 37%|███▋      | 37/100 [00:31<01:28,  1.41s/it] 38%|███▊      | 38/100 [00:32<01:14,  1.20s/it] 39%|███▉      | 39/100 [00:33<01:04,  1.05s/it] 40%|████      | 40/100 [00:34<00:56,  1.06it/s] 41%|████      | 41/100 [00:34<00:50,  1.16it/s] 42%|████▏     | 42/100 [00:35<00:46,  1.25it/s] 43%|████▎     | 43/100 [00:36<00:43,  1.32it/s] 44%|████▍     | 44/100 [00:36<00:41,  1.35it/s] 45%|████▌     | 45/100 [00:37<00:39,  1.39it/s] 46%|████▌     | 46/100 [00:38<00:38,  1.42it/s] 47%|████▋     | 47/100 [00:38<00:36,  1.44it/s] 48%|████▊     | 48/100 [00:39<00:35,  1.47it/s] 49%|████▉     | 49/100 [00:40<00:34,  1.47it/s] 50%|█████     | 50/100 [00:40<00:33,  1.49it/s] 51%|█████     | 51/100 [00:41<00:32,  1.50it/s] 52%|█████▏    | 52/100 [00:42<00:31,  1.50it/s] 53%|█████▎    | 53/100 [00:42<00:31,  1.50it/s] 54%|█████▍    | 54/100 [00:43<00:30,  1.49it/s] 55%|█████▌    | 55/100 [00:44<00:29,  1.50it/s] 56%|█████▌    | 56/100 [00:44<00:29,  1.51it/s] 57%|█████▋    | 57/100 [00:45<00:28,  1.51it/s] 58%|█████▊    | 58/100 [00:46<00:27,  1.51it/s] 59%|█████▉    | 59/100 [00:46<00:26,  1.53it/s] 60%|██████    | 60/100 [00:47<00:26,  1.53it/s] 61%|██████    | 61/100 [00:48<00:25,  1.53it/s] 62%|██████▏   | 62/100 [00:48<00:24,  1.53it/s] 63%|██████▎   | 63/100 [00:49<00:24,  1.53it/s] 64%|██████▍   | 64/100 [00:49<00:23,  1.52it/s] 65%|██████▌   | 65/100 [00:50<00:23,  1.52it/s] 66%|██████▌   | 66/100 [00:51<00:22,  1.52it/s] 67%|██████▋   | 67/100 [00:51<00:21,  1.50it/s] 68%|██████▊   | 68/100 [00:52<00:21,  1.48it/s] 69%|██████▉   | 69/100 [00:53<00:21,  1.46it/s] 70%|███████   | 70/100 [00:54<00:20,  1.46it/s] 71%|███████   | 71/100 [00:54<00:19,  1.45it/s] 72%|███████▏  | 72/100 [00:55<00:19,  1.45it/s] 73%|███████▎  | 73/100 [00:59<00:46,  1.71s/it] 74%|███████▍  | 74/100 [01:00<00:36,  1.41s/it] 75%|███████▌  | 75/100 [01:00<00:30,  1.20s/it] 76%|███████▌  | 76/100 [01:01<00:25,  1.05s/it] 77%|███████▋  | 77/100 [01:02<00:21,  1.06it/s] 78%|███████▊  | 78/100 [01:03<00:18,  1.16it/s] 79%|███████▉  | 79/100 [01:03<00:16,  1.24it/s] 80%|████████  | 80/100 [01:04<00:15,  1.30it/s] 81%|████████  | 81/100 [01:05<00:13,  1.36it/s] 82%|████████▏ | 82/100 [01:05<00:12,  1.40it/s] 83%|████████▎ | 83/100 [01:06<00:11,  1.44it/s] 84%|████████▍ | 84/100 [01:07<00:10,  1.46it/s] 85%|████████▌ | 85/100 [01:07<00:10,  1.47it/s] 86%|████████▌ | 86/100 [01:08<00:09,  1.45it/s] 87%|████████▋ | 87/100 [01:09<00:08,  1.45it/s] 88%|████████▊ | 88/100 [01:09<00:08,  1.46it/s] 89%|████████▉ | 89/100 [01:10<00:07,  1.47it/s] 90%|█████████ | 90/100 [01:11<00:06,  1.47it/s] 91%|█████████ | 91/100 [01:11<00:06,  1.49it/s] 92%|█████████▏| 92/100 [01:12<00:05,  1.49it/s] 93%|█████████▎| 93/100 [01:13<00:04,  1.49it/s] 94%|█████████▍| 94/100 [01:13<00:04,  1.48it/s] 95%|█████████▌| 95/100 [01:14<00:03,  1.48it/s] 96%|█████████▌| 96/100 [01:15<00:02,  1.49it/s] 97%|█████████▋| 97/100 [01:15<00:02,  1.48it/s] 98%|█████████▊| 98/100 [01:16<00:01,  1.50it/s] 99%|█████████▉| 99/100 [01:17<00:00,  1.50it/s]100%|██████████| 100/100 [01:17<00:00,  1.50it/s]100%|██████████| 100/100 [01:17<00:00,  1.28it/s]
Number of users per round / total users: 10  /  100
Finished creating FL server.
=== Training starts: algorithm FedFea ===
-------------Round number:  0  -------------
selected users: [26, 86, 2, 55, 75, 93, 16, 73, 54, 95]
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 508
Local adapation with distilling: 0.001
training loss: tensor(1.9067) feature loss: tensor(0.4261)
Local adapation with distilling: 0.001
training loss: tensor(1.9230) feature loss: tensor(0.4362)
Local adapation with distilling: 0.001
training loss: tensor(1.9463) feature loss: tensor(0.4285)
Local adapation with distilling: 0.001
training loss: tensor(1.9803) feature loss: tensor(0.4113)
Local adapation with distilling: 0.001
training loss: tensor(1.9357) feature loss: tensor(0.4130)
Local adapation with distilling: 0.001
training loss: tensor(1.9653) feature loss: tensor(0.4199)
Local adapation with distilling: 0.001
training loss: tensor(1.9909) feature loss: tensor(0.4263)
Local adapation with distilling: 0.001
training loss: tensor(1.9356) feature loss: tensor(0.4203)
Local adapation with distilling: 0.001
training loss: tensor(2.0674) feature loss: tensor(0.4171)
Local adapation with distilling: 0.001
training loss: tensor(1.9419) feature loss: tensor(0.4212)
Global Model Acc on global data: 0.1 length of data: 10000
save a model
-------------Round number:  1  -------------
selected users: [80, 84, 33, 81, 93, 17, 36, 82, 69, 65]
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
all data: 494
Local adapation with distilling: 0.000982
training loss: tensor(1.5347) feature loss: tensor(0.5068)
Local adapation with distilling: 0.000982
training loss: tensor(1.5234) feature loss: tensor(0.5130)
Local adapation with distilling: 0.000982
training loss: tensor(1.4913) feature loss: tensor(0.5052)
Local adapation with distilling: 0.000982
training loss: tensor(1.5055) feature loss: tensor(0.5101)
Local adapation with distilling: 0.000982
training loss: tensor(1.5461) feature loss: tensor(0.5539)
Local adapation with distilling: 0.000982
training loss: tensor(1.5177) feature loss: tensor(0.5501)
Local adapation with distilling: 0.000982
training loss: tensor(1.4817) feature loss: tensor(0.4938)
Local adapation with distilling: 0.000982
training loss: tensor(1.5858) feature loss: tensor(0.4993)
Local adapation with distilling: 0.000982
training loss: tensor(1.4606) feature loss: tensor(0.5182)
Local adapation with distilling: 0.000982
training loss: tensor(1.4418) feature loss: tensor(0.5536)
Global Model Acc on global data: 0.163 length of data: 10000
save a model
-------------Round number:  2  -------------
selected users: [83, 30, 56, 24, 16, 23, 2, 27, 28, 13]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([55, 16, 32, 32]) torch.Size([55])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.000964
training loss: tensor(1.2673) feature loss: tensor(0.5350)
Local adapation with distilling: 0.000964
training loss: tensor(1.2908) feature loss: tensor(0.5157)
Local adapation with distilling: 0.000964
training loss: tensor(1.2203) feature loss: tensor(0.5607)
Local adapation with distilling: 0.000964
training loss: tensor(1.2925) feature loss: tensor(0.5269)
Local adapation with distilling: 0.000964
training loss: tensor(1.3044) feature loss: tensor(0.5295)
Local adapation with distilling: 0.000964
training loss: tensor(1.2905) feature loss: tensor(0.5420)
Local adapation with distilling: 0.000964
training loss: tensor(1.2312) feature loss: tensor(0.5235)
Local adapation with distilling: 0.000964
training loss: tensor(1.3554) feature loss: tensor(0.5327)
Local adapation with distilling: 0.000964
training loss: tensor(1.3043) feature loss: tensor(0.5795)
Local adapation with distilling: 0.000964
training loss: tensor(1.2402) feature loss: tensor(0.5219)
Global Model Acc on global data: 0.2445 length of data: 10000
save a model
-------------Round number:  3  -------------
selected users: [93, 67, 6, 64, 96, 83, 98, 42, 25, 15]
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
all data: 497
Local adapation with distilling: 0.000946
training loss: tensor(1.1413) feature loss: tensor(0.5422)
Local adapation with distilling: 0.000946
training loss: tensor(1.1833) feature loss: tensor(0.5006)
Local adapation with distilling: 0.000946
training loss: tensor(1.2656) feature loss: tensor(0.5289)
Local adapation with distilling: 0.000946
training loss: tensor(1.2252) feature loss: tensor(0.5459)
Local adapation with distilling: 0.000946
training loss: tensor(1.2977) feature loss: tensor(0.5417)
Local adapation with distilling: 0.000946
training loss: tensor(1.1067) feature loss: tensor(0.5182)
Local adapation with distilling: 0.000946
training loss: tensor(1.1027) feature loss: tensor(0.5212)
Local adapation with distilling: 0.000946
training loss: tensor(1.2184) feature loss: tensor(0.5324)
Local adapation with distilling: 0.000946
training loss: tensor(1.1507) feature loss: tensor(0.5404)
Local adapation with distilling: 0.000946
training loss: tensor(1.1919) feature loss: tensor(0.5410)
Global Model Acc on global data: 0.2744 length of data: 10000
save a model
-------------Round number:  4  -------------
selected users: [20, 10, 96, 16, 63, 24, 53, 97, 41, 47]
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([57, 16, 32, 32]) torch.Size([57])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
all data: 493
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.0995) feature loss: tensor(0.5339)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.0667) feature loss: tensor(0.4958)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.2319) feature loss: tensor(0.5589)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.0608) feature loss: tensor(0.5319)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.0412) feature loss: tensor(0.5469)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.0546) feature loss: tensor(0.5710)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.0096) feature loss: tensor(0.5509)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.0637) feature loss: tensor(0.5399)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.0726) feature loss: tensor(0.5649)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.0600) feature loss: tensor(0.5558)
Global Model Acc on global data: 0.2667 length of data: 10000
-------------Round number:  5  -------------
selected users: [66, 32, 46, 28, 74, 23, 10, 20, 17, 35]
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
all data: 501
Local adapation with distilling: 0.00091
training loss: tensor(1.0380) feature loss: tensor(0.5293)
Local adapation with distilling: 0.00091
training loss: tensor(1.1089) feature loss: tensor(0.5357)
Local adapation with distilling: 0.00091
training loss: tensor(1.0434) feature loss: tensor(0.5139)
Local adapation with distilling: 0.00091
training loss: tensor(1.1383) feature loss: tensor(0.5261)
Local adapation with distilling: 0.00091
training loss: tensor(1.0513) feature loss: tensor(0.5746)
Local adapation with distilling: 0.00091
training loss: tensor(1.0983) feature loss: tensor(0.5503)
Local adapation with distilling: 0.00091
training loss: tensor(1.0163) feature loss: tensor(0.4947)
Local adapation with distilling: 0.00091
training loss: tensor(1.0685) feature loss: tensor(0.5197)
Local adapation with distilling: 0.00091
training loss: tensor(1.0472) feature loss: tensor(0.5241)
Local adapation with distilling: 0.00091
training loss: tensor(1.0649) feature loss: tensor(0.5375)
Global Model Acc on global data: 0.3291 length of data: 10000
save a model
-------------Round number:  6  -------------
selected users: [17, 34, 0, 45, 60, 86, 20, 47, 44, 81]
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
all data: 491
Local adapation with distilling: 0.000892
training loss: tensor(0.8429) feature loss: tensor(0.4566)
Local adapation with distilling: 0.000892
training loss: tensor(0.8996) feature loss: tensor(0.5099)
Local adapation with distilling: 0.000892
training loss: tensor(0.8792) feature loss: tensor(0.4782)
Local adapation with distilling: 0.000892
training loss: tensor(0.8551) feature loss: tensor(0.4580)
Local adapation with distilling: 0.000892
training loss: tensor(0.8611) feature loss: tensor(0.4714)
Local adapation with distilling: 0.000892
training loss: tensor(0.8546) feature loss: tensor(0.4715)
Local adapation with distilling: 0.000892
training loss: tensor(0.8710) feature loss: tensor(0.4629)
Local adapation with distilling: 0.000892
training loss: tensor(0.8929) feature loss: tensor(0.5114)
Local adapation with distilling: 0.000892
training loss: tensor(0.9780) feature loss: tensor(0.5295)
Local adapation with distilling: 0.000892
training loss: tensor(1.0032) feature loss: tensor(0.4589)
Global Model Acc on global data: 0.3604 length of data: 10000
save a model
-------------Round number:  7  -------------
selected users: [37, 26, 78, 91, 49, 15, 93, 71, 86, 22]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
all data: 512
Local adapation with distilling: 0.000874
training loss: tensor(0.9318) feature loss: tensor(0.4933)
Local adapation with distilling: 0.000874
training loss: tensor(0.8378) feature loss: tensor(0.4671)
Local adapation with distilling: 0.000874
training loss: tensor(0.8701) feature loss: tensor(0.4675)
Local adapation with distilling: 0.000874
training loss: tensor(0.8854) feature loss: tensor(0.4597)
Local adapation with distilling: 0.000874
training loss: tensor(0.8668) feature loss: tensor(0.4677)
Local adapation with distilling: 0.000874
training loss: tensor(0.9002) feature loss: tensor(0.4653)
Local adapation with distilling: 0.000874
training loss: tensor(0.8656) feature loss: tensor(0.4759)
Local adapation with distilling: 0.000874
training loss: tensor(0.8739) feature loss: tensor(0.5001)
Local adapation with distilling: 0.000874
training loss: tensor(0.8112) feature loss: tensor(0.4745)
Local adapation with distilling: 0.000874
training loss: tensor(1.0093) feature loss: tensor(0.4793)
Global Model Acc on global data: 0.3764 length of data: 10000
save a model
-------------Round number:  8  -------------
selected users: [17, 23, 1, 44, 55, 99, 86, 29, 62, 33]
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
all data: 496
Local adapation with distilling: 0.000856
training loss: tensor(0.8102) feature loss: tensor(0.4677)
Local adapation with distilling: 0.000856
training loss: tensor(0.8649) feature loss: tensor(0.4873)
Local adapation with distilling: 0.000856
training loss: tensor(0.8584) feature loss: tensor(0.4809)
Local adapation with distilling: 0.000856
training loss: tensor(0.9013) feature loss: tensor(0.5140)
Local adapation with distilling: 0.000856
training loss: tensor(0.8457) feature loss: tensor(0.4645)
Local adapation with distilling: 0.000856
training loss: tensor(0.8692) feature loss: tensor(0.4987)
Local adapation with distilling: 0.000856
training loss: tensor(0.7928) feature loss: tensor(0.4778)
Local adapation with distilling: 0.000856
training loss: tensor(0.8236) feature loss: tensor(0.4736)
Local adapation with distilling: 0.000856
training loss: tensor(0.8888) feature loss: tensor(0.4790)
Local adapation with distilling: 0.000856
training loss: tensor(0.8631) feature loss: tensor(0.4781)
Global Model Acc on global data: 0.4184 length of data: 10000
save a model
-------------Round number:  9  -------------
selected users: [75, 42, 46, 68, 3, 39, 23, 20, 70, 73]
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
all data: 497
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.7922) feature loss: tensor(0.3994)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.8612) feature loss: tensor(0.4181)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.7486) feature loss: tensor(0.3953)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.8037) feature loss: tensor(0.4329)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.8289) feature loss: tensor(0.4055)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.8088) feature loss: tensor(0.4149)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.7745) feature loss: tensor(0.4197)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.7984) feature loss: tensor(0.4057)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.7745) feature loss: tensor(0.3986)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.8102) feature loss: tensor(0.4203)
Global Model Acc on global data: 0.4296 length of data: 10000
save a model
-------------Round number:  10  -------------
selected users: [19, 14, 43, 37, 66, 3, 79, 41, 38, 68]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
all data: 506
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.7620) feature loss: tensor(0.4106)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.7492) feature loss: tensor(0.4155)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.7243) feature loss: tensor(0.3803)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.7843) feature loss: tensor(0.4024)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.7221) feature loss: tensor(0.3919)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.7371) feature loss: tensor(0.3871)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.7563) feature loss: tensor(0.3946)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.7430) feature loss: tensor(0.4037)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.7091) feature loss: tensor(0.3881)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.7294) feature loss: tensor(0.4088)
Global Model Acc on global data: 0.4378 length of data: 10000
save a model
-------------Round number:  11  -------------
selected users: [46, 49, 22, 58, 41, 98, 62, 29, 30, 51]
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
all data: 491
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.6870) feature loss: tensor(0.3755)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.6856) feature loss: tensor(0.3842)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.8225) feature loss: tensor(0.3776)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.6945) feature loss: tensor(0.3924)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.6807) feature loss: tensor(0.3953)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.7017) feature loss: tensor(0.4072)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.6975) feature loss: tensor(0.3797)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.6641) feature loss: tensor(0.3777)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.7452) feature loss: tensor(0.3950)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.6899) feature loss: tensor(0.3758)
Global Model Acc on global data: 0.4525 length of data: 10000
save a model
-------------Round number:  12  -------------
selected users: [17, 41, 92, 14, 68, 31, 89, 15, 21, 60]
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
all data: 494
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.6223) feature loss: tensor(0.3305)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.6088) feature loss: tensor(0.3410)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.7248) feature loss: tensor(0.3573)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.6483) feature loss: tensor(0.3575)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.6490) feature loss: tensor(0.3459)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.6817) feature loss: tensor(0.3323)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.6395) feature loss: tensor(0.3352)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.6623) feature loss: tensor(0.3315)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.6497) feature loss: tensor(0.3553)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.6590) feature loss: tensor(0.3434)
Global Model Acc on global data: 0.4598 length of data: 10000
save a model
-------------Round number:  13  -------------
selected users: [37, 62, 83, 14, 43, 9, 44, 31, 69, 57]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 489
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.6859) feature loss: tensor(0.3770)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.6541) feature loss: tensor(0.3630)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.6672) feature loss: tensor(0.3757)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.6270) feature loss: tensor(0.3816)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.6203) feature loss: tensor(0.3603)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.6892) feature loss: tensor(0.3593)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.7126) feature loss: tensor(0.3972)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.6581) feature loss: tensor(0.3579)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.6515) feature loss: tensor(0.3662)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.7069) feature loss: tensor(0.3807)
Global Model Acc on global data: 0.4725 length of data: 10000
save a model
-------------Round number:  14  -------------
selected users: [24, 39, 35, 44, 55, 70, 82, 40, 91, 65]
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
all data: 489
Local adapation with distilling: 0.000748
training loss: tensor(0.7427) feature loss: tensor(0.4329)
Local adapation with distilling: 0.000748
training loss: tensor(0.7899) feature loss: tensor(0.4338)
Local adapation with distilling: 0.000748
training loss: tensor(0.7613) feature loss: tensor(0.4280)
Local adapation with distilling: 0.000748
training loss: tensor(0.7588) feature loss: tensor(0.4491)
Local adapation with distilling: 0.000748
training loss: tensor(0.7373) feature loss: tensor(0.4183)
Local adapation with distilling: 0.000748
training loss: tensor(0.7201) feature loss: tensor(0.4146)
Local adapation with distilling: 0.000748
training loss: tensor(0.7663) feature loss: tensor(0.4284)
Local adapation with distilling: 0.000748
training loss: tensor(0.7701) feature loss: tensor(0.4202)
Local adapation with distilling: 0.000748
training loss: tensor(0.7472) feature loss: tensor(0.4259)
Local adapation with distilling: 0.000748
training loss: tensor(0.7224) feature loss: tensor(0.4170)
Global Model Acc on global data: 0.4799 length of data: 10000
save a model
-------------Round number:  15  -------------
selected users: [84, 36, 57, 51, 46, 78, 93, 14, 11, 59]
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
all data: 504
Local adapation with distilling: 0.00073
training loss: tensor(0.6687) feature loss: tensor(0.3418)
Local adapation with distilling: 0.00073
training loss: tensor(0.6361) feature loss: tensor(0.3415)
Local adapation with distilling: 0.00073
training loss: tensor(0.6457) feature loss: tensor(0.3353)
Local adapation with distilling: 0.00073
training loss: tensor(0.6164) feature loss: tensor(0.3335)
Local adapation with distilling: 0.00073
training loss: tensor(0.5970) feature loss: tensor(0.3355)
Local adapation with distilling: 0.00073
training loss: tensor(0.6536) feature loss: tensor(0.3464)
Local adapation with distilling: 0.00073
training loss: tensor(0.6795) feature loss: tensor(0.3432)
Local adapation with distilling: 0.00073
training loss: tensor(0.6025) feature loss: tensor(0.3383)
Local adapation with distilling: 0.00073
training loss: tensor(0.6340) feature loss: tensor(0.3387)
Local adapation with distilling: 0.00073
training loss: tensor(0.6696) feature loss: tensor(0.3270)
Global Model Acc on global data: 0.4935 length of data: 10000
save a model
-------------Round number:  16  -------------
selected users: [7, 25, 71, 42, 47, 29, 63, 88, 50, 9]
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
all data: 492
Local adapation with distilling: 0.000712
training loss: tensor(0.6724) feature loss: tensor(0.3353)
Local adapation with distilling: 0.000712
training loss: tensor(0.6372) feature loss: tensor(0.3292)
Local adapation with distilling: 0.000712
training loss: tensor(0.6310) feature loss: tensor(0.3370)
Local adapation with distilling: 0.000712
training loss: tensor(0.6842) feature loss: tensor(0.3392)
Local adapation with distilling: 0.000712
training loss: tensor(0.6228) feature loss: tensor(0.3403)
Local adapation with distilling: 0.000712
training loss: tensor(0.6118) feature loss: tensor(0.3309)
Local adapation with distilling: 0.000712
training loss: tensor(0.6221) feature loss: tensor(0.3321)
Local adapation with distilling: 0.000712
training loss: tensor(0.6441) feature loss: tensor(0.3427)
Local adapation with distilling: 0.000712
training loss: tensor(0.6362) feature loss: tensor(0.3340)
Local adapation with distilling: 0.000712
training loss: tensor(0.7462) feature loss: tensor(0.3288)
Global Model Acc on global data: 0.4839 length of data: 10000
-------------Round number:  17  -------------
selected users: [71, 28, 9, 4, 73, 34, 94, 92, 47, 37]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 492
Local adapation with distilling: 0.000694
training loss: tensor(0.5778) feature loss: tensor(0.3236)
Local adapation with distilling: 0.000694
training loss: tensor(0.7316) feature loss: tensor(0.3183)
Local adapation with distilling: 0.000694
training loss: tensor(0.6703) feature loss: tensor(0.3139)
Local adapation with distilling: 0.000694
training loss: tensor(0.6287) feature loss: tensor(0.3310)
Local adapation with distilling: 0.000694
training loss: tensor(0.6268) feature loss: tensor(0.3205)
Local adapation with distilling: 0.000694
training loss: tensor(0.6078) feature loss: tensor(0.3286)
Local adapation with distilling: 0.000694
training loss: tensor(0.6469) feature loss: tensor(0.3234)
Local adapation with distilling: 0.000694
training loss: tensor(0.6613) feature loss: tensor(0.3387)
Local adapation with distilling: 0.000694
training loss: tensor(0.5934) feature loss: tensor(0.3364)
Local adapation with distilling: 0.000694
training loss: tensor(0.6061) feature loss: tensor(0.3136)
Global Model Acc on global data: 0.4986 length of data: 10000
save a model
-------------Round number:  18  -------------
selected users: [53, 47, 43, 54, 33, 48, 0, 12, 44, 91]
random features: torch.Size([57, 16, 32, 32]) torch.Size([57])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
all data: 495
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.6437) feature loss: tensor(0.3533)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.6299) feature loss: tensor(0.3646)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.6421) feature loss: tensor(0.3506)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.7356) feature loss: tensor(0.3759)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.6635) feature loss: tensor(0.3636)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.6857) feature loss: tensor(0.3664)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.6917) feature loss: tensor(0.3556)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.6851) feature loss: tensor(0.3567)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.6825) feature loss: tensor(0.3684)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.6507) feature loss: tensor(0.3610)
Global Model Acc on global data: 0.5024 length of data: 10000
save a model
-------------Round number:  19  -------------
selected users: [85, 72, 16, 18, 2, 38, 90, 30, 83, 61]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([57, 16, 32, 32]) torch.Size([57])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 505
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.6297) feature loss: tensor(0.3484)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.5968) feature loss: tensor(0.3353)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.6385) feature loss: tensor(0.3316)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.6613) feature loss: tensor(0.3309)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.6311) feature loss: tensor(0.3294)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.5891) feature loss: tensor(0.3283)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.6427) feature loss: tensor(0.3323)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.6680) feature loss: tensor(0.3347)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.6258) feature loss: tensor(0.3334)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.6256) feature loss: tensor(0.3390)
Global Model Acc on global data: 0.5078 length of data: 10000
save a model
-------------Round number:  20  -------------
selected users: [70, 74, 2, 44, 56, 48, 12, 36, 0, 49]
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([55, 16, 32, 32]) torch.Size([55])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
all data: 489
Local adapation with distilling: 0.00064
training loss: tensor(0.5630) feature loss: tensor(0.3052)
Local adapation with distilling: 0.00064
training loss: tensor(0.5649) feature loss: tensor(0.3223)
Local adapation with distilling: 0.00064
training loss: tensor(0.5481) feature loss: tensor(0.3148)
Local adapation with distilling: 0.00064
training loss: tensor(0.5920) feature loss: tensor(0.3192)
Local adapation with distilling: 0.00064
training loss: tensor(0.5418) feature loss: tensor(0.3076)
Local adapation with distilling: 0.00064
training loss: tensor(0.5715) feature loss: tensor(0.3270)
Local adapation with distilling: 0.00064
training loss: tensor(0.5697) feature loss: tensor(0.3237)
Local adapation with distilling: 0.00064
training loss: tensor(0.5715) feature loss: tensor(0.3189)
Local adapation with distilling: 0.00064
training loss: tensor(0.5648) feature loss: tensor(0.3151)
Local adapation with distilling: 0.00064
training loss: tensor(0.5628) feature loss: tensor(0.3197)
Global Model Acc on global data: 0.5109 length of data: 10000
save a model
-------------Round number:  21  -------------
selected users: [23, 81, 85, 34, 62, 46, 42, 31, 93, 11]
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
all data: 494
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.6259) feature loss: tensor(0.3172)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.8501) feature loss: tensor(0.3142)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.5799) feature loss: tensor(0.3202)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.5912) feature loss: tensor(0.3287)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.6139) feature loss: tensor(0.3096)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.5571) feature loss: tensor(0.3162)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.6444) feature loss: tensor(0.3334)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.6059) feature loss: tensor(0.3189)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.6218) feature loss: tensor(0.3320)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.5744) feature loss: tensor(0.3157)
Global Model Acc on global data: 0.5446 length of data: 10000
save a model
-------------Round number:  22  -------------
selected users: [2, 49, 82, 31, 37, 12, 87, 42, 99, 85]
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 479
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.4877) feature loss: tensor(0.2807)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.5048) feature loss: tensor(0.2776)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.5277) feature loss: tensor(0.2775)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.4936) feature loss: tensor(0.2751)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.5308) feature loss: tensor(0.2878)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.5016) feature loss: tensor(0.2787)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.5258) feature loss: tensor(0.2777)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.5316) feature loss: tensor(0.2885)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.5051) feature loss: tensor(0.2825)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.4964) feature loss: tensor(0.2903)
Global Model Acc on global data: 0.5464 length of data: 10000
save a model
-------------Round number:  23  -------------
selected users: [26, 80, 82, 68, 77, 37, 3, 55, 20, 17]
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
all data: 494
Local adapation with distilling: 0.000586
training loss: tensor(0.5137) feature loss: tensor(0.2753)
Local adapation with distilling: 0.000586
training loss: tensor(0.5519) feature loss: tensor(0.2875)
Local adapation with distilling: 0.000586
training loss: tensor(0.5291) feature loss: tensor(0.2782)
Local adapation with distilling: 0.000586
training loss: tensor(0.5227) feature loss: tensor(0.2810)
Local adapation with distilling: 0.000586
training loss: tensor(0.5616) feature loss: tensor(0.2816)
Local adapation with distilling: 0.000586
training loss: tensor(0.5215) feature loss: tensor(0.2753)
Local adapation with distilling: 0.000586
training loss: tensor(0.5687) feature loss: tensor(0.2802)
Local adapation with distilling: 0.000586
training loss: tensor(0.5277) feature loss: tensor(0.2797)
Local adapation with distilling: 0.000586
training loss: tensor(0.5423) feature loss: tensor(0.2801)
Local adapation with distilling: 0.000586
training loss: tensor(0.5259) feature loss: tensor(0.2754)
Global Model Acc on global data: 0.5514 length of data: 10000
save a model
-------------Round number:  24  -------------
selected users: [26, 31, 37, 86, 76, 14, 88, 48, 71, 67]
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
all data: 497
Local adapation with distilling: 0.000568
training loss: tensor(0.4534) feature loss: tensor(0.2610)
Local adapation with distilling: 0.000568
training loss: tensor(0.4866) feature loss: tensor(0.2596)
Local adapation with distilling: 0.000568
training loss: tensor(0.4697) feature loss: tensor(0.2657)
Local adapation with distilling: 0.000568
training loss: tensor(0.4912) feature loss: tensor(0.2614)
Local adapation with distilling: 0.000568
training loss: tensor(0.5581) feature loss: tensor(0.2707)
Local adapation with distilling: 0.000568
training loss: tensor(0.5070) feature loss: tensor(0.2760)
Local adapation with distilling: 0.000568
training loss: tensor(0.4827) feature loss: tensor(0.2678)
Local adapation with distilling: 0.000568
training loss: tensor(0.4944) feature loss: tensor(0.2669)
Local adapation with distilling: 0.000568
training loss: tensor(0.4924) feature loss: tensor(0.2621)
Local adapation with distilling: 0.000568
training loss: tensor(0.5187) feature loss: tensor(0.2668)
Global Model Acc on global data: 0.5387 length of data: 10000
-------------Round number:  25  -------------
selected users: [41, 29, 33, 65, 74, 6, 57, 89, 87, 98]
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
all data: 497
Local adapation with distilling: 0.00055
training loss: tensor(0.5175) feature loss: tensor(0.2791)
Local adapation with distilling: 0.00055
training loss: tensor(0.5013) feature loss: tensor(0.2727)
Local adapation with distilling: 0.00055
training loss: tensor(0.5235) feature loss: tensor(0.2842)
Local adapation with distilling: 0.00055
training loss: tensor(0.5018) feature loss: tensor(0.2738)
Local adapation with distilling: 0.00055
training loss: tensor(0.5190) feature loss: tensor(0.2861)
Local adapation with distilling: 0.00055
training loss: tensor(0.5799) feature loss: tensor(0.2773)
Local adapation with distilling: 0.00055
training loss: tensor(0.5386) feature loss: tensor(0.2725)
Local adapation with distilling: 0.00055
training loss: tensor(0.5342) feature loss: tensor(0.2717)
Local adapation with distilling: 0.00055
training loss: tensor(0.5324) feature loss: tensor(0.2748)
Local adapation with distilling: 0.00055
training loss: tensor(0.5278) feature loss: tensor(0.2835)
Global Model Acc on global data: 0.5423 length of data: 10000
-------------Round number:  26  -------------
selected users: [8, 69, 84, 41, 25, 5, 63, 95, 33, 70]
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
all data: 489
Local adapation with distilling: 0.000532
training loss: tensor(0.5794) feature loss: tensor(0.3034)
Local adapation with distilling: 0.000532
training loss: tensor(0.5846) feature loss: tensor(0.3016)
Local adapation with distilling: 0.000532
training loss: tensor(0.5958) feature loss: tensor(0.3220)
Local adapation with distilling: 0.000532
training loss: tensor(0.5494) feature loss: tensor(0.2965)
Local adapation with distilling: 0.000532
training loss: tensor(0.5662) feature loss: tensor(0.2945)
Local adapation with distilling: 0.000532
training loss: tensor(0.6276) feature loss: tensor(0.3203)
Local adapation with distilling: 0.000532
training loss: tensor(0.5718) feature loss: tensor(0.3023)
Local adapation with distilling: 0.000532
training loss: tensor(0.5724) feature loss: tensor(0.2978)
Local adapation with distilling: 0.000532
training loss: tensor(0.5513) feature loss: tensor(0.3109)
Local adapation with distilling: 0.000532
training loss: tensor(0.5670) feature loss: tensor(0.3015)
Global Model Acc on global data: 0.5625 length of data: 10000
save a model
-------------Round number:  27  -------------
selected users: [89, 68, 43, 50, 40, 95, 27, 85, 22, 44]
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
all data: 495
Local adapation with distilling: 0.000514
training loss: tensor(0.4926) feature loss: tensor(0.2524)
Local adapation with distilling: 0.000514
training loss: tensor(0.5117) feature loss: tensor(0.2614)
Local adapation with distilling: 0.000514
training loss: tensor(0.4919) feature loss: tensor(0.2534)
Local adapation with distilling: 0.000514
training loss: tensor(0.5069) feature loss: tensor(0.2556)
Local adapation with distilling: 0.000514
training loss: tensor(0.5254) feature loss: tensor(0.2574)
Local adapation with distilling: 0.000514
training loss: tensor(0.4714) feature loss: tensor(0.2486)
Local adapation with distilling: 0.000514
training loss: tensor(0.5642) feature loss: tensor(0.2546)
Local adapation with distilling: 0.000514
training loss: tensor(0.4779) feature loss: tensor(0.2554)
Local adapation with distilling: 0.000514
training loss: tensor(0.8179) feature loss: tensor(0.2618)
Local adapation with distilling: 0.000514
training loss: tensor(0.5189) feature loss: tensor(0.2684)
Global Model Acc on global data: 0.5617 length of data: 10000
-------------Round number:  28  -------------
selected users: [67, 14, 0, 86, 13, 18, 30, 36, 52, 95]
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 495
Local adapation with distilling: 0.000496
training loss: tensor(0.4862) feature loss: tensor(0.2411)
Local adapation with distilling: 0.000496
training loss: tensor(0.4655) feature loss: tensor(0.2468)
Local adapation with distilling: 0.000496
training loss: tensor(0.4927) feature loss: tensor(0.2552)
Local adapation with distilling: 0.000496
training loss: tensor(0.4659) feature loss: tensor(0.2432)
Local adapation with distilling: 0.000496
training loss: tensor(0.4814) feature loss: tensor(0.2473)
Local adapation with distilling: 0.000496
training loss: tensor(0.5108) feature loss: tensor(0.2502)
Local adapation with distilling: 0.000496
training loss: tensor(0.5118) feature loss: tensor(0.2489)
Local adapation with distilling: 0.000496
training loss: tensor(0.4706) feature loss: tensor(0.2486)
Local adapation with distilling: 0.000496
training loss: tensor(0.6195) feature loss: tensor(0.2484)
Local adapation with distilling: 0.000496
training loss: tensor(0.4581) feature loss: tensor(0.2404)
Global Model Acc on global data: 0.5706 length of data: 10000
save a model
-------------Round number:  29  -------------
selected users: [73, 8, 10, 7, 19, 71, 92, 25, 38, 12]
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
all data: 491
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.5782) feature loss: tensor(0.2910)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.5220) feature loss: tensor(0.2718)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.5296) feature loss: tensor(0.2732)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.5441) feature loss: tensor(0.2763)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.5543) feature loss: tensor(0.2821)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.5168) feature loss: tensor(0.2734)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.5818) feature loss: tensor(0.2727)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.5151) feature loss: tensor(0.2684)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.5199) feature loss: tensor(0.2728)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.5240) feature loss: tensor(0.2724)
Global Model Acc on global data: 0.577 length of data: 10000
save a model
-------------Round number:  30  -------------
selected users: [20, 91, 34, 52, 8, 74, 21, 88, 80, 89]
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
all data: 490
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.4712) feature loss: tensor(0.2383)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.4986) feature loss: tensor(0.2420)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.4512) feature loss: tensor(0.2398)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.6244) feature loss: tensor(0.2415)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.4326) feature loss: tensor(0.2406)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.4354) feature loss: tensor(0.2440)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.4593) feature loss: tensor(0.2429)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.4387) feature loss: tensor(0.2344)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.4770) feature loss: tensor(0.2470)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.4376) feature loss: tensor(0.2389)
Global Model Acc on global data: 0.567 length of data: 10000
-------------Round number:  31  -------------
selected users: [17, 33, 76, 3, 56, 0, 37, 8, 60, 67]
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([55, 16, 32, 32]) torch.Size([55])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
all data: 504
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.4946) feature loss: tensor(0.2480)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.4736) feature loss: tensor(0.2566)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.5299) feature loss: tensor(0.2601)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.5195) feature loss: tensor(0.2533)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.4662) feature loss: tensor(0.2478)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.4772) feature loss: tensor(0.2565)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.4895) feature loss: tensor(0.2508)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.4488) feature loss: tensor(0.2530)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.4916) feature loss: tensor(0.2508)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.4857) feature loss: tensor(0.2557)
Global Model Acc on global data: 0.5556 length of data: 10000
-------------Round number:  32  -------------
selected users: [22, 39, 85, 97, 55, 33, 80, 13, 27, 96]
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
all data: 492
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.9211) feature loss: tensor(0.2726)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.5519) feature loss: tensor(0.2674)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.5059) feature loss: tensor(0.2708)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.5370) feature loss: tensor(0.2669)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.5337) feature loss: tensor(0.2682)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.4986) feature loss: tensor(0.2658)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.5158) feature loss: tensor(0.2641)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.5115) feature loss: tensor(0.2657)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.5726) feature loss: tensor(0.2670)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.7655) feature loss: tensor(0.2685)
Global Model Acc on global data: 0.5765 length of data: 10000
-------------Round number:  33  -------------
selected users: [56, 90, 95, 82, 60, 71, 6, 81, 2, 70]
random features: torch.Size([55, 16, 32, 32]) torch.Size([55])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
all data: 495
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.4336) feature loss: tensor(0.2517)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.4997) feature loss: tensor(0.2552)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.4459) feature loss: tensor(0.2528)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.4824) feature loss: tensor(0.2625)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.4702) feature loss: tensor(0.2589)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.4469) feature loss: tensor(0.2515)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.5135) feature loss: tensor(0.2538)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.7218) feature loss: tensor(0.2519)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.4764) feature loss: tensor(0.2533)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.4687) feature loss: tensor(0.2560)
Global Model Acc on global data: 0.5664 length of data: 10000
-------------Round number:  34  -------------
selected users: [14, 74, 15, 4, 32, 59, 91, 10, 50, 53]
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([57, 16, 32, 32]) torch.Size([57])
all data: 501
Local adapation with distilling: 0.000388
training loss: tensor(0.5139) feature loss: tensor(0.2666)
Local adapation with distilling: 0.000388
training loss: tensor(0.5083) feature loss: tensor(0.2614)
Local adapation with distilling: 0.000388
training loss: tensor(0.5657) feature loss: tensor(0.2631)
Local adapation with distilling: 0.000388
training loss: tensor(0.5447) feature loss: tensor(0.2700)
Local adapation with distilling: 0.000388
training loss: tensor(0.6041) feature loss: tensor(0.2693)
Local adapation with distilling: 0.000388
training loss: tensor(0.5708) feature loss: tensor(0.2661)
Local adapation with distilling: 0.000388
training loss: tensor(0.5363) feature loss: tensor(0.2754)
Local adapation with distilling: 0.000388
training loss: tensor(0.5385) feature loss: tensor(0.2607)
Local adapation with distilling: 0.000388
training loss: tensor(0.5398) feature loss: tensor(0.2616)
Local adapation with distilling: 0.000388
training loss: tensor(0.5210) feature loss: tensor(0.2634)
Global Model Acc on global data: 0.5758 length of data: 10000
-------------Round number:  35  -------------
selected users: [40, 71, 98, 27, 70, 31, 10, 24, 51, 35]
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
all data: 484
Local adapation with distilling: 0.00037
training loss: tensor(0.4932) feature loss: tensor(0.2314)
Local adapation with distilling: 0.00037
training loss: tensor(0.4513) feature loss: tensor(0.2348)
Local adapation with distilling: 0.00037
training loss: tensor(0.4700) feature loss: tensor(0.2359)
Local adapation with distilling: 0.00037
training loss: tensor(0.5091) feature loss: tensor(0.2353)
Local adapation with distilling: 0.00037
training loss: tensor(0.4615) feature loss: tensor(0.2352)
Local adapation with distilling: 0.00037
training loss: tensor(0.4712) feature loss: tensor(0.2386)
Local adapation with distilling: 0.00037
training loss: tensor(0.4557) feature loss: tensor(0.2339)
Local adapation with distilling: 0.00037
training loss: tensor(0.5114) feature loss: tensor(0.2365)
Local adapation with distilling: 0.00037
training loss: tensor(0.4627) feature loss: tensor(0.2394)
Local adapation with distilling: 0.00037
training loss: tensor(0.5175) feature loss: tensor(0.2488)
Global Model Acc on global data: 0.5634 length of data: 10000
-------------Round number:  36  -------------
selected users: [59, 42, 2, 27, 28, 75, 58, 68, 52, 74]
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
all data: 493
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.5194) feature loss: tensor(0.2484)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.5374) feature loss: tensor(0.2386)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.4822) feature loss: tensor(0.2464)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.4968) feature loss: tensor(0.2409)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.7001) feature loss: tensor(0.2455)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.5046) feature loss: tensor(0.2354)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.4941) feature loss: tensor(0.2436)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.4955) feature loss: tensor(0.2494)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.5337) feature loss: tensor(0.2541)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.4537) feature loss: tensor(0.2435)
Global Model Acc on global data: 0.5919 length of data: 10000
save a model
-------------Round number:  37  -------------
selected users: [61, 49, 86, 78, 5, 91, 81, 82, 89, 18]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
all data: 507
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.4730) feature loss: tensor(0.2167)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.4766) feature loss: tensor(0.2202)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.4616) feature loss: tensor(0.2163)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.4954) feature loss: tensor(0.2247)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.5310) feature loss: tensor(0.2194)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.4616) feature loss: tensor(0.2197)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.6533) feature loss: tensor(0.2143)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.4675) feature loss: tensor(0.2165)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.4518) feature loss: tensor(0.2166)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.4983) feature loss: tensor(0.2203)
Global Model Acc on global data: 0.5893 length of data: 10000
-------------Round number:  38  -------------
selected users: [40, 73, 49, 45, 64, 16, 69, 17, 72, 66]
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([57, 16, 32, 32]) torch.Size([57])
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
all data: 512
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.5109) feature loss: tensor(0.2388)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.5380) feature loss: tensor(0.2570)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.4955) feature loss: tensor(0.2439)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.5083) feature loss: tensor(0.2415)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.6003) feature loss: tensor(0.2384)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.5179) feature loss: tensor(0.2350)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.4970) feature loss: tensor(0.2429)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.4968) feature loss: tensor(0.2396)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.4791) feature loss: tensor(0.2468)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.5013) feature loss: tensor(0.2470)
Global Model Acc on global data: 0.5827 length of data: 10000
-------------Round number:  39  -------------
selected users: [22, 53, 84, 57, 87, 58, 29, 21, 85, 79]
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([57, 16, 32, 32]) torch.Size([57])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
all data: 503
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.5254) feature loss: tensor(0.2359)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.4649) feature loss: tensor(0.2325)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.5155) feature loss: tensor(0.2305)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.5123) feature loss: tensor(0.2286)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.5244) feature loss: tensor(0.2336)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.4785) feature loss: tensor(0.2298)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.4816) feature loss: tensor(0.2298)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.4676) feature loss: tensor(0.2279)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.4731) feature loss: tensor(0.2287)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.5188) feature loss: tensor(0.2366)
Global Model Acc on global data: 0.5925 length of data: 10000
save a model
-------------Round number:  40  -------------
selected users: [79, 75, 63, 15, 38, 11, 40, 45, 39, 62]
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
all data: 498
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.4591) feature loss: tensor(0.2213)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.4616) feature loss: tensor(0.2141)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.4447) feature loss: tensor(0.2209)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.5241) feature loss: tensor(0.2207)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.4305) feature loss: tensor(0.2198)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.4685) feature loss: tensor(0.2234)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.4431) feature loss: tensor(0.2227)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.4422) feature loss: tensor(0.2148)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.4669) feature loss: tensor(0.2220)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.4878) feature loss: tensor(0.2155)
Global Model Acc on global data: 0.5904 length of data: 10000
-------------Round number:  41  -------------
selected users: [42, 94, 37, 6, 79, 32, 24, 0, 33, 93]
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
all data: 495
Local adapation with distilling: 0.000262
training loss: tensor(0.5136) feature loss: tensor(0.2288)
Local adapation with distilling: 0.000262
training loss: tensor(0.5409) feature loss: tensor(0.2304)
Local adapation with distilling: 0.000262
training loss: tensor(0.4992) feature loss: tensor(0.2258)
Local adapation with distilling: 0.000262
training loss: tensor(0.5430) feature loss: tensor(0.2361)
Local adapation with distilling: 0.000262
training loss: tensor(0.4891) feature loss: tensor(0.2343)
Local adapation with distilling: 0.000262
training loss: tensor(0.5585) feature loss: tensor(0.2371)
Local adapation with distilling: 0.000262
training loss: tensor(0.4979) feature loss: tensor(0.2313)
Local adapation with distilling: 0.000262
training loss: tensor(0.4909) feature loss: tensor(0.2298)
Local adapation with distilling: 0.000262
training loss: tensor(0.4801) feature loss: tensor(0.2262)
Local adapation with distilling: 0.000262
training loss: tensor(0.5331) feature loss: tensor(0.2328)
Global Model Acc on global data: 0.5962 length of data: 10000
save a model
-------------Round number:  42  -------------
selected users: [83, 53, 70, 45, 44, 39, 22, 80, 10, 0]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([57, 16, 32, 32]) torch.Size([57])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
all data: 497
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.4320) feature loss: tensor(0.1989)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.3844) feature loss: tensor(0.1981)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.3927) feature loss: tensor(0.1937)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.3919) feature loss: tensor(0.1955)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.4448) feature loss: tensor(0.1962)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.4380) feature loss: tensor(0.1971)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.8136) feature loss: tensor(0.1929)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.4098) feature loss: tensor(0.1940)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.3904) feature loss: tensor(0.1901)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.3930) feature loss: tensor(0.1941)
Global Model Acc on global data: 0.5959 length of data: 10000
-------------Round number:  43  -------------
selected users: [20, 2, 15, 22, 57, 91, 69, 55, 11, 79]
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
all data: 498
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.4388) feature loss: tensor(0.2001)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.4043) feature loss: tensor(0.1999)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.4262) feature loss: tensor(0.2015)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.6481) feature loss: tensor(0.2039)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.4366) feature loss: tensor(0.1955)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.4167) feature loss: tensor(0.1977)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.4133) feature loss: tensor(0.2004)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.4260) feature loss: tensor(0.1978)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.4052) feature loss: tensor(0.2035)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.4127) feature loss: tensor(0.2003)
Global Model Acc on global data: 0.6003 length of data: 10000
save a model
-------------Round number:  44  -------------
selected users: [42, 54, 27, 93, 39, 65, 7, 26, 24, 60]
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
all data: 495
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.4761) feature loss: tensor(0.2076)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.5415) feature loss: tensor(0.2088)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.4806) feature loss: tensor(0.2088)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.4988) feature loss: tensor(0.2104)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.4409) feature loss: tensor(0.2069)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.4445) feature loss: tensor(0.2054)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.4946) feature loss: tensor(0.2044)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.4280) feature loss: tensor(0.2077)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.4553) feature loss: tensor(0.2092)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.4598) feature loss: tensor(0.2127)
Global Model Acc on global data: 0.6038 length of data: 10000
save a model
-------------Round number:  45  -------------
selected users: [0, 1, 62, 76, 37, 99, 78, 38, 2, 84]
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
all data: 498
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.4628) feature loss: tensor(0.2117)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.4980) feature loss: tensor(0.2163)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.5202) feature loss: tensor(0.2144)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.5210) feature loss: tensor(0.2171)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.4617) feature loss: tensor(0.2068)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.4739) feature loss: tensor(0.2165)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.4985) feature loss: tensor(0.2188)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.4421) feature loss: tensor(0.2158)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.4509) feature loss: tensor(0.2165)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.4867) feature loss: tensor(0.2142)
Global Model Acc on global data: 0.615 length of data: 10000
save a model
-------------Round number:  46  -------------
selected users: [71, 33, 37, 10, 44, 34, 24, 98, 73, 95]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 487
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.4206) feature loss: tensor(0.1869)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.4174) feature loss: tensor(0.1884)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.4179) feature loss: tensor(0.1902)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.4140) feature loss: tensor(0.1857)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.4676) feature loss: tensor(0.1863)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.4499) feature loss: tensor(0.1846)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.4309) feature loss: tensor(0.1914)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.4421) feature loss: tensor(0.1870)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.4607) feature loss: tensor(0.1972)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.4214) feature loss: tensor(0.1829)
Global Model Acc on global data: 0.6128 length of data: 10000
-------------Round number:  47  -------------
selected users: [17, 90, 94, 86, 63, 5, 38, 14, 40, 47]
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
all data: 499
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.3928) feature loss: tensor(0.1688)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.4210) feature loss: tensor(0.1663)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.4353) feature loss: tensor(0.1652)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.3698) feature loss: tensor(0.1694)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.3817) feature loss: tensor(0.1685)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.4424) feature loss: tensor(0.1711)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.3515) feature loss: tensor(0.1729)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.3840) feature loss: tensor(0.1689)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.3893) feature loss: tensor(0.1669)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.3919) feature loss: tensor(0.1659)
Global Model Acc on global data: 0.6109 length of data: 10000
-------------Round number:  48  -------------
selected users: [93, 5, 71, 9, 11, 79, 69, 8, 59, 63]
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 504
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.4312) feature loss: tensor(0.1622)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.4156) feature loss: tensor(0.1607)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.3551) feature loss: tensor(0.1584)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.5535) feature loss: tensor(0.1630)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.3794) feature loss: tensor(0.1636)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.3807) feature loss: tensor(0.1624)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.3665) feature loss: tensor(0.1567)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.3760) feature loss: tensor(0.1579)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.4899) feature loss: tensor(0.1571)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.3647) feature loss: tensor(0.1616)
Global Model Acc on global data: 0.6044 length of data: 10000
-------------Round number:  49  -------------
selected users: [76, 25, 28, 75, 81, 47, 41, 22, 29, 1]
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
all data: 503
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.4602) feature loss: tensor(0.1850)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.4380) feature loss: tensor(0.1774)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.6040) feature loss: tensor(0.1849)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.4306) feature loss: tensor(0.1777)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.6889) feature loss: tensor(0.1826)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.4308) feature loss: tensor(0.1758)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.4228) feature loss: tensor(0.1785)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.6789) feature loss: tensor(0.1808)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.4072) feature loss: tensor(0.1884)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.4324) feature loss: tensor(0.1843)
Global Model Acc on global data: 0.6106 length of data: 10000
-------------Round number:  50  -------------
selected users: [80, 79, 25, 15, 39, 40, 53, 17, 57, 50]
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([57, 16, 32, 32]) torch.Size([57])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
all data: 504
Local adapation with distilling: 0.0001
training loss: tensor(0.4067) feature loss: tensor(0.1562)
Local adapation with distilling: 0.0001
