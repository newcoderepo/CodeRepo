nohup: ignoring input
================================================================================
Summary of training process:
Dataset                : Cifar10
Batch size             : 64
Learing rate           : 0.001
Number of total clients: 100
Split method           : quantity
Split parameter        : 3.0
Clients per round      : 10
Number of global rounds: 100
Number of local rounds : 10
Feature from layer     : 0
Feature percentage     : 0.2
Local training loss    : CE_CE_KL
Loss of beta           : 1.0
Algorithm              : FedFea
Modelname              : MOBNET
Mode                   : training
Seed                   : 0
================================================================================
Files already downloaded and verified
Files already downloaded and verified
Class frequencies:
client,class0,class1,class2,class3,class4,class5,class6,class7,class8,class9,Amount
Client   0,0.298,0.00,0.00,0.00,0.00,0.375,0.00,0.00,0.327,0.00,496
Client   1,0.00,0.321,0.00,0.00,0.00,0.358,0.00,0.00,0.00,0.321,520
Client   2,0.307,0.346,0.346,0.00,0.00,0.00,0.00,0.00,0.00,0.00,482
Client   3,0.00,0.00,0.00,0.337,0.00,0.00,0.377,0.286,0.00,0.00,531
Client   4,0.00,0.00,0.340,0.00,0.320,0.00,0.00,0.00,0.00,0.340,491
Client   5,0.00,0.00,0.327,0.00,0.308,0.365,0.00,0.00,0.00,0.00,510
Client   6,0.00,0.00,0.319,0.00,0.300,0.00,0.382,0.00,0.00,0.00,524
Client   7,0.00,0.00,0.00,0.00,0.330,0.00,0.00,0.319,0.00,0.351,476
Client   8,0.00,0.347,0.00,0.00,0.00,0.00,0.00,0.316,0.337,0.00,481
Client   9,0.286,0.00,0.00,0.00,0.00,0.00,0.389,0.00,0.00,0.325,514
Client  10,0.315,0.00,0.00,0.00,0.00,0.00,0.00,0.326,0.00,0.358,466
Client  11,0.00,0.313,0.00,0.00,0.00,0.00,0.375,0.00,0.00,0.313,534
Client  12,0.306,0.347,0.347,0.00,0.00,0.00,0.00,0.00,0.00,0.00,481
Client  13,0.00,0.329,0.00,0.352,0.00,0.00,0.00,0.00,0.319,0.00,508
Client  14,0.00,0.00,0.00,0.359,0.315,0.00,0.00,0.00,0.325,0.00,498
Client  15,0.00,0.00,0.00,0.00,0.00,0.361,0.00,0.00,0.315,0.324,515
Client  16,0.00,0.00,0.00,0.337,0.00,0.00,0.377,0.286,0.00,0.00,531
Client  17,0.00,0.00,0.00,0.00,0.00,0.346,0.372,0.283,0.00,0.00,538
Client  18,0.00,0.337,0.00,0.00,0.00,0.00,0.00,0.00,0.327,0.337,496
Client  19,0.00,0.00,0.00,0.356,0.312,0.00,0.00,0.00,0.00,0.332,503
Client  20,0.309,0.351,0.00,0.00,0.00,0.00,0.00,0.00,0.340,0.00,476
Client  21,0.312,0.355,0.00,0.00,0.333,0.00,0.00,0.00,0.00,0.00,471
Client  22,0.00,0.00,0.326,0.349,0.00,0.00,0.00,0.00,0.00,0.326,513
Client  23,0.298,0.00,0.339,0.363,0.00,0.00,0.00,0.00,0.00,0.00,493
Client  24,0.00,0.00,0.340,0.00,0.320,0.00,0.00,0.00,0.00,0.340,491
Client  25,0.00,0.00,0.00,0.00,0.00,0.367,0.00,0.302,0.00,0.331,504
Client  26,0.00,0.00,0.00,0.00,0.00,0.00,0.378,0.00,0.306,0.316,529
Client  27,0.00,0.00,0.00,0.368,0.320,0.00,0.00,0.312,0.00,0.00,487
Client  28,0.00,0.00,0.00,0.00,0.00,0.360,0.00,0.00,0.315,0.325,514
Client  29,0.00,0.00,0.00,0.328,0.00,0.00,0.366,0.00,0.00,0.306,546
Client  30,0.309,0.00,0.352,0.00,0.00,0.00,0.00,0.00,0.339,0.00,475
Client  31,0.00,0.344,0.00,0.00,0.00,0.00,0.00,0.313,0.00,0.344,486
Client  32,0.00,0.00,0.335,0.359,0.00,0.00,0.00,0.305,0.00,0.00,498
Client  33,0.302,0.00,0.00,0.368,0.00,0.00,0.00,0.00,0.331,0.00,487
Client  34,0.00,0.352,0.00,0.00,0.328,0.00,0.00,0.320,0.00,0.00,475
Client  35,0.00,0.315,0.00,0.337,0.00,0.348,0.00,0.00,0.00,0.00,531
Client  36,0.289,0.00,0.00,0.00,0.00,0.00,0.394,0.00,0.317,0.00,508
Client  37,0.00,0.00,0.00,0.00,0.307,0.00,0.394,0.299,0.00,0.00,508
Client  38,0.00,0.00,0.00,0.00,0.00,0.339,0.366,0.00,0.295,0.00,546
Client  39,0.00,0.00,0.322,0.00,0.00,0.356,0.00,0.00,0.00,0.322,519
Client  40,0.320,0.00,0.00,0.00,0.00,0.00,0.00,0.330,0.350,0.00,460
Client  41,0.00,0.352,0.00,0.00,0.328,0.00,0.00,0.320,0.00,0.00,475
Client  42,0.00,0.00,0.352,0.00,0.328,0.00,0.00,0.320,0.00,0.00,475
Client  43,0.298,0.00,0.00,0.363,0.00,0.00,0.00,0.00,0.00,0.339,493
Client  44,0.313,0.00,0.355,0.00,0.332,0.00,0.00,0.00,0.00,0.00,470
Client  45,0.00,0.331,0.00,0.00,0.00,0.367,0.00,0.302,0.00,0.00,504
Client  46,0.00,0.00,0.00,0.00,0.00,0.00,0.385,0.293,0.00,0.322,519
Client  47,0.00,0.00,0.00,0.00,0.333,0.00,0.00,0.323,0.344,0.00,468
Client  48,0.309,0.352,0.00,0.00,0.00,0.00,0.00,0.00,0.339,0.00,475
Client  49,0.00,0.00,0.337,0.00,0.00,0.00,0.00,0.00,0.325,0.337,495
Client  50,0.298,0.339,0.00,0.363,0.00,0.00,0.00,0.00,0.00,0.00,493
Client  51,0.00,0.344,0.344,0.00,0.00,0.00,0.00,0.311,0.00,0.00,485
Client  52,0.286,0.00,0.325,0.00,0.00,0.00,0.389,0.00,0.00,0.00,514
Client  53,0.00,0.00,0.326,0.350,0.00,0.00,0.00,0.00,0.00,0.324,512
Client  54,0.00,0.00,0.319,0.00,0.298,0.00,0.382,0.00,0.00,0.00,523
Client  55,0.304,0.00,0.00,0.00,0.00,0.383,0.00,0.313,0.00,0.00,483
Client  56,0.00,0.303,0.00,0.00,0.00,0.335,0.362,0.00,0.00,0.00,552
Client  57,0.00,0.00,0.00,0.00,0.308,0.00,0.394,0.298,0.00,0.00,507
Client  58,0.289,0.00,0.00,0.00,0.00,0.00,0.394,0.00,0.317,0.00,508
Client  59,0.00,0.322,0.00,0.00,0.00,0.357,0.00,0.00,0.00,0.320,518
Client  60,0.306,0.347,0.347,0.00,0.00,0.00,0.00,0.00,0.00,0.00,481
Client  61,0.00,0.327,0.00,0.00,0.308,0.365,0.00,0.00,0.00,0.00,507
Client  62,0.316,0.00,0.359,0.00,0.00,0.00,0.00,0.325,0.00,0.00,465
Client  63,0.00,0.00,0.00,0.354,0.00,0.00,0.00,0.00,0.318,0.328,506
Client  64,0.00,0.00,0.00,0.00,0.317,0.376,0.00,0.307,0.00,0.00,492
Client  65,0.295,0.00,0.00,0.00,0.00,0.371,0.00,0.00,0.00,0.333,498
Client  66,0.00,0.00,0.00,0.327,0.00,0.00,0.368,0.00,0.00,0.305,544
Client  67,0.00,0.351,0.00,0.00,0.330,0.00,0.00,0.319,0.00,0.00,473
Client  68,0.00,0.00,0.00,0.00,0.302,0.00,0.387,0.00,0.311,0.00,517
Client  69,0.00,0.00,0.337,0.00,0.00,0.00,0.00,0.00,0.327,0.337,493
Client  70,0.304,0.00,0.00,0.00,0.00,0.383,0.00,0.313,0.00,0.00,483
Client  71,0.00,0.327,0.00,0.00,0.308,0.365,0.00,0.00,0.00,0.00,507
Client  72,0.00,0.00,0.324,0.00,0.00,0.361,0.00,0.00,0.314,0.00,512
Client  73,0.00,0.00,0.00,0.340,0.00,0.353,0.00,0.00,0.307,0.00,524
Client  74,0.00,0.344,0.00,0.00,0.323,0.00,0.00,0.00,0.333,0.00,483
Client  75,0.304,0.00,0.00,0.00,0.00,0.383,0.00,0.313,0.00,0.00,483
Client  76,0.00,0.00,0.00,0.333,0.292,0.00,0.375,0.00,0.00,0.00,534
Client  77,0.317,0.00,0.358,0.00,0.00,0.00,0.00,0.325,0.00,0.00,464
Client  78,0.00,0.00,0.00,0.340,0.00,0.353,0.00,0.00,0.307,0.00,524
Client  79,0.00,0.333,0.333,0.00,0.00,0.00,0.00,0.00,0.00,0.333,498
Client  80,0.306,0.00,0.00,0.370,0.324,0.00,0.00,0.00,0.00,0.00,481
Client  81,0.287,0.324,0.00,0.00,0.00,0.00,0.390,0.00,0.00,0.00,513
Client  82,0.317,0.00,0.358,0.00,0.00,0.00,0.00,0.325,0.00,0.00,464
Client  83,0.00,0.00,0.329,0.352,0.00,0.00,0.00,0.00,0.319,0.00,505
Client  84,0.306,0.00,0.00,0.370,0.324,0.00,0.00,0.00,0.00,0.00,481
Client  85,0.00,0.00,0.00,0.00,0.311,0.369,0.00,0.00,0.321,0.00,502
Client  86,0.00,0.00,0.312,0.00,0.00,0.00,0.376,0.00,0.00,0.312,532
Client  87,0.309,0.00,0.00,0.374,0.00,0.00,0.00,0.317,0.00,0.00,476
Client  88,0.00,0.344,0.00,0.00,0.323,0.00,0.00,0.00,0.333,0.00,483
Client  89,0.00,0.00,0.00,0.327,0.00,0.00,0.368,0.00,0.00,0.305,544
Client  90,0.309,0.00,0.00,0.374,0.00,0.00,0.00,0.317,0.00,0.00,476
Client  91,0.00,0.314,0.00,0.336,0.00,0.350,0.00,0.00,0.00,0.00,529
Client  92,0.313,0.00,0.354,0.00,0.333,0.00,0.00,0.00,0.00,0.00,469
Client  93,0.00,0.00,0.00,0.340,0.00,0.353,0.00,0.00,0.307,0.00,524
Client  94,0.00,0.00,0.00,0.00,0.308,0.00,0.394,0.298,0.00,0.00,507
Client  95,0.00,0.331,0.00,0.00,0.00,0.369,0.00,0.301,0.00,0.00,502
Client  96,0.287,0.00,0.324,0.00,0.00,0.00,0.390,0.00,0.00,0.00,513
Client  97,0.00,0.00,0.347,0.00,0.00,0.00,0.00,0.316,0.337,0.00,478
Client  98,0.00,0.344,0.00,0.00,0.323,0.00,0.00,0.00,0.333,0.00,483
Client  99,0.313,0.00,0.00,0.00,0.333,0.00,0.00,0.00,0.00,0.354,469
0 [0 5 8] [0 5 8] [1 2 3 4 6 7 9]
0 training: Counter({5: 186, 8: 162, 0: 148}) testing iid: Counter({8: 1000, 0: 1000, 5: 1000})
1 [1 5 9] [1 5 9] [0 2 3 4 6 7 8]
1 training: Counter({5: 186, 1: 167, 9: 167}) testing iid: Counter({1: 1000, 9: 1000, 5: 1000})
2 [0 1 2] [0 1 2] [3 4 5 6 7 8 9]
2 training: Counter({1: 167, 2: 167, 0: 148}) testing iid: Counter({0: 1000, 1: 1000, 2: 1000})
3 [3 6 7] [3 6 7] [0 1 2 4 5 8 9]
3 training: Counter({6: 200, 3: 179, 7: 152}) testing iid: Counter({3: 1000, 6: 1000, 7: 1000})
4 [2 4 9] [2 4 9] [0 1 3 5 6 7 8]
4 training: Counter({2: 167, 9: 167, 4: 157}) testing iid: Counter({9: 1000, 4: 1000, 2: 1000})
5 [2 4 5] [2 4 5] [0 1 3 6 7 8 9]
5 training: Counter({5: 186, 2: 167, 4: 157}) testing iid: Counter({5: 1000, 4: 1000, 2: 1000})
6 [2 4 6] [2 4 6] [0 1 3 5 7 8 9]
6 training: Counter({6: 200, 2: 167, 4: 157}) testing iid: Counter({6: 1000, 4: 1000, 2: 1000})
7 [4 7 9] [4 7 9] [0 1 2 3 5 6 8]
7 training: Counter({9: 167, 4: 157, 7: 152}) testing iid: Counter({9: 1000, 7: 1000, 4: 1000})
8 [1 7 8] [1 7 8] [0 2 3 4 5 6 9]
8 training: Counter({1: 167, 8: 162, 7: 152}) testing iid: Counter({8: 1000, 1: 1000, 7: 1000})
9 [0 6 9] [0 6 9] [1 2 3 4 5 7 8]
9 training: Counter({6: 200, 9: 167, 0: 147}) testing iid: Counter({0: 1000, 6: 1000, 9: 1000})
10 [0 7 9] [0 7 9] [1 2 3 4 5 6 8]
10 training: Counter({9: 167, 7: 152, 0: 147}) testing iid: Counter({0: 1000, 9: 1000, 7: 1000})
11 [1 6 9] [1 6 9] [0 2 3 4 5 7 8]
11 training: Counter({6: 200, 1: 167, 9: 167}) testing iid: Counter({6: 1000, 1: 1000, 9: 1000})
12 [0 1 2] [0 1 2] [3 4 5 6 7 8 9]
12 training: Counter({1: 167, 2: 167, 0: 147}) testing iid: Counter({0: 1000, 1: 1000, 2: 1000})
13 [1 3 8] [1 3 8] [0 2 4 5 6 7 9]
13 training: Counter({3: 179, 1: 167, 8: 162}) testing iid: Counter({3: 1000, 8: 1000, 1: 1000})
14 [3 4 8] [3 4 8] [0 1 2 5 6 7 9]
14 training: Counter({3: 179, 8: 162, 4: 157}) testing iid: Counter({3: 1000, 8: 1000, 4: 1000})
15 [5 8 9] [5 8 9] [0 1 2 3 4 6 7]
15 training: Counter({5: 186, 9: 167, 8: 162}) testing iid: Counter({8: 1000, 9: 1000, 5: 1000})
16 [3 6 7] [3 6 7] [0 1 2 4 5 8 9]
16 training: Counter({6: 200, 3: 179, 7: 152}) testing iid: Counter({3: 1000, 6: 1000, 7: 1000})
17 [5 6 7] [5 6 7] [0 1 2 3 4 8 9]
17 training: Counter({6: 200, 5: 186, 7: 152}) testing iid: Counter({6: 1000, 5: 1000, 7: 1000})
18 [1 8 9] [1 8 9] [0 2 3 4 5 6 7]
18 training: Counter({1: 167, 9: 167, 8: 162}) testing iid: Counter({8: 1000, 1: 1000, 9: 1000})
19 [3 4 9] [3 4 9] [0 1 2 5 6 7 8]
19 training: Counter({3: 179, 9: 167, 4: 157}) testing iid: Counter({3: 1000, 9: 1000, 4: 1000})
20 [0 1 8] [0 1 8] [2 3 4 5 6 7 9]
20 training: Counter({1: 167, 8: 162, 0: 147}) testing iid: Counter({8: 1000, 0: 1000, 1: 1000})
21 [0 1 4] [0 1 4] [2 3 5 6 7 8 9]
21 training: Counter({1: 167, 4: 157, 0: 147}) testing iid: Counter({0: 1000, 1: 1000, 4: 1000})
22 [2 3 9] [2 3 9] [0 1 4 5 6 7 8]
22 training: Counter({3: 179, 2: 167, 9: 167}) testing iid: Counter({3: 1000, 9: 1000, 2: 1000})
23 [0 2 3] [0 2 3] [1 4 5 6 7 8 9]
23 training: Counter({3: 179, 2: 167, 0: 147}) testing iid: Counter({3: 1000, 0: 1000, 2: 1000})
24 [2 4 9] [2 4 9] [0 1 3 5 6 7 8]
24 training: Counter({2: 167, 9: 167, 4: 157}) testing iid: Counter({9: 1000, 4: 1000, 2: 1000})
25 [5 7 9] [5 7 9] [0 1 2 3 4 6 8]
25 training: Counter({5: 185, 9: 167, 7: 152}) testing iid: Counter({9: 1000, 5: 1000, 7: 1000})
26 [6 8 9] [6 8 9] [0 1 2 3 4 5 7]
26 training: Counter({6: 200, 9: 167, 8: 162}) testing iid: Counter({8: 1000, 6: 1000, 9: 1000})
27 [3 4 7] [3 4 7] [0 1 2 5 6 8 9]
27 training: Counter({3: 179, 4: 156, 7: 152}) testing iid: Counter({3: 1000, 7: 1000, 4: 1000})
28 [5 8 9] [5 8 9] [0 1 2 3 4 6 7]
28 training: Counter({5: 185, 9: 167, 8: 162}) testing iid: Counter({8: 1000, 9: 1000, 5: 1000})
29 [3 6 9] [3 6 9] [0 1 2 4 5 7 8]
29 training: Counter({6: 200, 3: 179, 9: 167}) testing iid: Counter({3: 1000, 6: 1000, 9: 1000})
30 [0 2 8] [0 2 8] [1 3 4 5 6 7 9]
30 training: Counter({2: 167, 8: 161, 0: 147}) testing iid: Counter({8: 1000, 0: 1000, 2: 1000})
31 [1 7 9] [1 7 9] [0 2 3 4 5 6 8]
31 training: Counter({1: 167, 9: 167, 7: 152}) testing iid: Counter({1: 1000, 9: 1000, 7: 1000})
32 [2 3 7] [2 3 7] [0 1 4 5 6 8 9]
32 training: Counter({3: 179, 2: 167, 7: 152}) testing iid: Counter({3: 1000, 7: 1000, 2: 1000})
33 [0 3 8] [0 3 8] [1 2 4 5 6 7 9]
33 training: Counter({3: 179, 8: 161, 0: 147}) testing iid: Counter({3: 1000, 8: 1000, 0: 1000})
34 [1 4 7] [1 4 7] [0 2 3 5 6 8 9]
34 training: Counter({1: 167, 4: 156, 7: 152}) testing iid: Counter({1: 1000, 7: 1000, 4: 1000})
35 [1 3 5] [1 3 5] [0 2 4 6 7 8 9]
35 training: Counter({5: 185, 3: 179, 1: 167}) testing iid: Counter({3: 1000, 1: 1000, 5: 1000})
36 [0 6 8] [0 6 8] [1 2 3 4 5 7 9]
36 training: Counter({6: 200, 8: 161, 0: 147}) testing iid: Counter({8: 1000, 0: 1000, 6: 1000})
37 [4 6 7] [4 6 7] [0 1 2 3 5 8 9]
37 training: Counter({6: 200, 4: 156, 7: 152}) testing iid: Counter({6: 1000, 7: 1000, 4: 1000})
38 [5 6 8] [5 6 8] [0 1 2 3 4 7 9]
38 training: Counter({6: 200, 5: 185, 8: 161}) testing iid: Counter({8: 1000, 6: 1000, 5: 1000})
39 [2 5 9] [2 5 9] [0 1 3 4 6 7 8]
39 training: Counter({5: 185, 2: 167, 9: 167}) testing iid: Counter({9: 1000, 5: 1000, 2: 1000})
40 [0 7 8] [0 7 8] [1 2 3 4 5 6 9]
40 training: Counter({8: 161, 7: 152, 0: 147}) testing iid: Counter({8: 1000, 0: 1000, 7: 1000})
41 [1 4 7] [1 4 7] [0 2 3 5 6 8 9]
41 training: Counter({1: 167, 4: 156, 7: 152}) testing iid: Counter({1: 1000, 7: 1000, 4: 1000})
42 [2 4 7] [2 4 7] [0 1 3 5 6 8 9]
42 training: Counter({2: 167, 4: 156, 7: 152}) testing iid: Counter({7: 1000, 4: 1000, 2: 1000})
43 [0 3 9] [0 3 9] [1 2 4 5 6 7 8]
43 training: Counter({3: 179, 9: 167, 0: 147}) testing iid: Counter({3: 1000, 0: 1000, 9: 1000})
44 [0 2 4] [0 2 4] [1 3 5 6 7 8 9]
44 training: Counter({2: 167, 4: 156, 0: 147}) testing iid: Counter({0: 1000, 4: 1000, 2: 1000})
45 [1 5 7] [1 5 7] [0 2 3 4 6 8 9]
45 training: Counter({5: 185, 1: 167, 7: 152}) testing iid: Counter({1: 1000, 5: 1000, 7: 1000})
46 [6 7 9] [6 7 9] [0 1 2 3 4 5 8]
46 training: Counter({6: 200, 9: 167, 7: 152}) testing iid: Counter({6: 1000, 9: 1000, 7: 1000})
47 [4 7 8] [4 7 8] [0 1 2 3 5 6 9]
47 training: Counter({8: 161, 4: 156, 7: 151}) testing iid: Counter({8: 1000, 7: 1000, 4: 1000})
48 [0 1 8] [0 1 8] [2 3 4 5 6 7 9]
48 training: Counter({1: 167, 8: 161, 0: 147}) testing iid: Counter({8: 1000, 0: 1000, 1: 1000})
49 [2 8 9] [2 8 9] [0 1 3 4 5 6 7]
49 training: Counter({2: 167, 9: 167, 8: 161}) testing iid: Counter({8: 1000, 9: 1000, 2: 1000})
50 [0 1 3] [0 1 3] [2 4 5 6 7 8 9]
50 training: Counter({3: 179, 1: 167, 0: 147}) testing iid: Counter({3: 1000, 0: 1000, 1: 1000})
51 [1 2 7] [1 2 7] [0 3 4 5 6 8 9]
51 training: Counter({1: 167, 2: 167, 7: 151}) testing iid: Counter({1: 1000, 7: 1000, 2: 1000})
52 [0 2 6] [0 2 6] [1 3 4 5 7 8 9]
52 training: Counter({6: 200, 2: 167, 0: 147}) testing iid: Counter({0: 1000, 6: 1000, 2: 1000})
53 [2 3 9] [2 3 9] [0 1 4 5 6 7 8]
53 training: Counter({3: 179, 2: 167, 9: 166}) testing iid: Counter({3: 1000, 9: 1000, 2: 1000})
54 [2 4 6] [2 4 6] [0 1 3 5 7 8 9]
54 training: Counter({6: 200, 2: 167, 4: 156}) testing iid: Counter({6: 1000, 4: 1000, 2: 1000})
55 [0 5 7] [0 5 7] [1 2 3 4 6 8 9]
55 training: Counter({5: 185, 7: 151, 0: 147}) testing iid: Counter({0: 1000, 5: 1000, 7: 1000})
56 [1 5 6] [1 5 6] [0 2 3 4 7 8 9]
56 training: Counter({6: 200, 5: 185, 1: 167}) testing iid: Counter({6: 1000, 1: 1000, 5: 1000})
57 [4 6 7] [4 6 7] [0 1 2 3 5 8 9]
57 training: Counter({6: 200, 4: 156, 7: 151}) testing iid: Counter({6: 1000, 7: 1000, 4: 1000})
58 [0 6 8] [0 6 8] [1 2 3 4 5 7 9]
58 training: Counter({6: 200, 8: 161, 0: 147}) testing iid: Counter({8: 1000, 0: 1000, 6: 1000})
59 [1 5 9] [1 5 9] [0 2 3 4 6 7 8]
59 training: Counter({5: 185, 1: 167, 9: 166}) testing iid: Counter({1: 1000, 9: 1000, 5: 1000})
60 [0 1 2] [0 1 2] [3 4 5 6 7 8 9]
60 training: Counter({1: 167, 2: 167, 0: 147}) testing iid: Counter({0: 1000, 1: 1000, 2: 1000})
61 [1 4 5] [1 4 5] [0 2 3 6 7 8 9]
61 training: Counter({5: 185, 1: 166, 4: 156}) testing iid: Counter({1: 1000, 5: 1000, 4: 1000})
62 [0 2 7] [0 2 7] [1 3 4 5 6 8 9]
62 training: Counter({2: 167, 7: 151, 0: 147}) testing iid: Counter({0: 1000, 7: 1000, 2: 1000})
63 [3 8 9] [3 8 9] [0 1 2 4 5 6 7]
63 training: Counter({3: 179, 9: 166, 8: 161}) testing iid: Counter({3: 1000, 8: 1000, 9: 1000})
64 [4 5 7] [4 5 7] [0 1 2 3 6 8 9]
64 training: Counter({5: 185, 4: 156, 7: 151}) testing iid: Counter({5: 1000, 7: 1000, 4: 1000})
65 [0 5 9] [0 5 9] [1 2 3 4 6 7 8]
65 training: Counter({5: 185, 9: 166, 0: 147}) testing iid: Counter({0: 1000, 9: 1000, 5: 1000})
66 [3 6 9] [3 6 9] [0 1 2 4 5 7 8]
66 training: Counter({6: 200, 3: 178, 9: 166}) testing iid: Counter({3: 1000, 6: 1000, 9: 1000})
67 [1 4 7] [1 4 7] [0 2 3 5 6 8 9]
67 training: Counter({1: 166, 4: 156, 7: 151}) testing iid: Counter({1: 1000, 7: 1000, 4: 1000})
68 [4 6 8] [4 6 8] [0 1 2 3 5 7 9]
68 training: Counter({6: 200, 8: 161, 4: 156}) testing iid: Counter({8: 1000, 6: 1000, 4: 1000})
69 [2 8 9] [2 8 9] [0 1 3 4 5 6 7]
69 training: Counter({2: 166, 9: 166, 8: 161}) testing iid: Counter({8: 1000, 9: 1000, 2: 1000})
70 [0 5 7] [0 5 7] [1 2 3 4 6 8 9]
70 training: Counter({5: 185, 7: 151, 0: 147}) testing iid: Counter({0: 1000, 5: 1000, 7: 1000})
71 [1 4 5] [1 4 5] [0 2 3 6 7 8 9]
71 training: Counter({5: 185, 1: 166, 4: 156}) testing iid: Counter({1: 1000, 5: 1000, 4: 1000})
72 [2 5 8] [2 5 8] [0 1 3 4 6 7 9]
72 training: Counter({5: 185, 2: 166, 8: 161}) testing iid: Counter({8: 1000, 5: 1000, 2: 1000})
73 [3 5 8] [3 5 8] [0 1 2 4 6 7 9]
73 training: Counter({5: 185, 3: 178, 8: 161}) testing iid: Counter({3: 1000, 8: 1000, 5: 1000})
74 [1 4 8] [1 4 8] [0 2 3 5 6 7 9]
74 training: Counter({1: 166, 8: 161, 4: 156}) testing iid: Counter({8: 1000, 1: 1000, 4: 1000})
75 [0 5 7] [0 5 7] [1 2 3 4 6 8 9]
75 training: Counter({5: 185, 7: 151, 0: 147}) testing iid: Counter({0: 1000, 5: 1000, 7: 1000})
76 [3 4 6] [3 4 6] [0 1 2 5 7 8 9]
76 training: Counter({6: 200, 3: 178, 4: 156}) testing iid: Counter({3: 1000, 6: 1000, 4: 1000})
77 [0 2 7] [0 2 7] [1 3 4 5 6 8 9]
77 training: Counter({2: 166, 7: 151, 0: 147}) testing iid: Counter({0: 1000, 7: 1000, 2: 1000})
78 [3 5 8] [3 5 8] [0 1 2 4 6 7 9]
78 training: Counter({5: 185, 3: 178, 8: 161}) testing iid: Counter({3: 1000, 8: 1000, 5: 1000})
79 [1 2 9] [1 2 9] [0 3 4 5 6 7 8]
79 training: Counter({1: 166, 2: 166, 9: 166}) testing iid: Counter({1: 1000, 9: 1000, 2: 1000})
80 [0 3 4] [0 3 4] [1 2 5 6 7 8 9]
80 training: Counter({3: 178, 4: 156, 0: 147}) testing iid: Counter({3: 1000, 0: 1000, 4: 1000})
81 [0 1 6] [0 1 6] [2 3 4 5 7 8 9]
81 training: Counter({6: 200, 1: 166, 0: 147}) testing iid: Counter({0: 1000, 6: 1000, 1: 1000})
82 [0 2 7] [0 2 7] [1 3 4 5 6 8 9]
82 training: Counter({2: 166, 7: 151, 0: 147}) testing iid: Counter({0: 1000, 7: 1000, 2: 1000})
83 [2 3 8] [2 3 8] [0 1 4 5 6 7 9]
83 training: Counter({3: 178, 2: 166, 8: 161}) testing iid: Counter({3: 1000, 8: 1000, 2: 1000})
84 [0 3 4] [0 3 4] [1 2 5 6 7 8 9]
84 training: Counter({3: 178, 4: 156, 0: 147}) testing iid: Counter({3: 1000, 0: 1000, 4: 1000})
85 [4 5 8] [4 5 8] [0 1 2 3 6 7 9]
85 training: Counter({5: 185, 8: 161, 4: 156}) testing iid: Counter({8: 1000, 5: 1000, 4: 1000})
86 [2 6 9] [2 6 9] [0 1 3 4 5 7 8]
86 training: Counter({6: 200, 2: 166, 9: 166}) testing iid: Counter({6: 1000, 9: 1000, 2: 1000})
87 [0 3 7] [0 3 7] [1 2 4 5 6 8 9]
87 training: Counter({3: 178, 7: 151, 0: 147}) testing iid: Counter({3: 1000, 0: 1000, 7: 1000})
88 [1 4 8] [1 4 8] [0 2 3 5 6 7 9]
88 training: Counter({1: 166, 8: 161, 4: 156}) testing iid: Counter({8: 1000, 1: 1000, 4: 1000})
89 [3 6 9] [3 6 9] [0 1 2 4 5 7 8]
89 training: Counter({6: 200, 3: 178, 9: 166}) testing iid: Counter({3: 1000, 6: 1000, 9: 1000})
90 [0 3 7] [0 3 7] [1 2 4 5 6 8 9]
90 training: Counter({3: 178, 7: 151, 0: 147}) testing iid: Counter({3: 1000, 0: 1000, 7: 1000})
91 [1 3 5] [1 3 5] [0 2 4 6 7 8 9]
91 training: Counter({5: 185, 3: 178, 1: 166}) testing iid: Counter({3: 1000, 1: 1000, 5: 1000})
92 [0 2 4] [0 2 4] [1 3 5 6 7 8 9]
92 training: Counter({2: 166, 4: 156, 0: 147}) testing iid: Counter({0: 1000, 4: 1000, 2: 1000})
93 [3 5 8] [3 5 8] [0 1 2 4 6 7 9]
93 training: Counter({5: 185, 3: 178, 8: 161}) testing iid: Counter({3: 1000, 8: 1000, 5: 1000})
94 [4 6 7] [4 6 7] [0 1 2 3 5 8 9]
94 training: Counter({6: 200, 4: 156, 7: 151}) testing iid: Counter({6: 1000, 7: 1000, 4: 1000})
95 [1 5 7] [1 5 7] [0 2 3 4 6 8 9]
95 training: Counter({5: 185, 1: 166, 7: 151}) testing iid: Counter({1: 1000, 5: 1000, 7: 1000})
96 [0 2 6] [0 2 6] [1 3 4 5 7 8 9]
96 training: Counter({6: 200, 2: 166, 0: 147}) testing iid: Counter({0: 1000, 6: 1000, 2: 1000})
97 [2 7 8] [2 7 8] [0 1 3 4 5 6 9]
97 training: Counter({2: 166, 8: 161, 7: 151}) testing iid: Counter({8: 1000, 7: 1000, 2: 1000})
98 [1 4 8] [1 4 8] [0 2 3 5 6 7 9]
98 training: Counter({1: 166, 8: 161, 4: 156}) testing iid: Counter({8: 1000, 1: 1000, 4: 1000})
99 [0 4 9] [0 4 9] [1 2 3 5 6 7 8]
99 training: Counter({9: 166, 4: 156, 0: 147}) testing iid: Counter({0: 1000, 9: 1000, 4: 1000})
Num_samples of Training set per client: [496, 520, 482, 531, 491, 510, 524, 476, 481, 514, 466, 534, 481, 508, 498, 515, 531, 538, 496, 503, 476, 471, 513, 493, 491, 504, 529, 487, 514, 546, 475, 486, 498, 487, 475, 531, 508, 508, 546, 519, 460, 475, 475, 493, 470, 504, 519, 468, 475, 495, 493, 485, 514, 512, 523, 483, 552, 507, 508, 518, 481, 507, 465, 506, 492, 498, 544, 473, 517, 493, 483, 507, 512, 524, 483, 483, 534, 464, 524, 498, 481, 513, 464, 505, 481, 502, 532, 476, 483, 544, 476, 529, 469, 524, 507, 502, 513, 478, 483, 469]
Total_training_samples: 50000
Global test set: 10000
Finish Generating Samples, distribution saved
MobileNetV2(
  (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (layers): Sequential(
    (0): Block(
      (conv1): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): Block(
      (conv1): Conv2d(16, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=96, bias=False)
      (bn2): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(96, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(16, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (2): Block(
      (conv1): Conv2d(24, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=144, bias=False)
      (bn2): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(144, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (3): Block(
      (conv1): Conv2d(24, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(144, 144, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=144, bias=False)
      (bn2): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(144, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (4): Block(
      (conv1): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
      (bn2): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(192, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (5): Block(
      (conv1): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
      (bn2): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(192, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (6): Block(
      (conv1): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(192, 192, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=192, bias=False)
      (bn2): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(192, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (7): Block(
      (conv1): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
      (bn2): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (8): Block(
      (conv1): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
      (bn2): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (9): Block(
      (conv1): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
      (bn2): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (10): Block(
      (conv1): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
      (bn2): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(384, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(64, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (11): Block(
      (conv1): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)
      (bn2): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (12): Block(
      (conv1): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)
      (bn2): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (13): Block(
      (conv1): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(576, 576, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=576, bias=False)
      (bn2): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(576, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (14): Block(
      (conv1): Conv2d(160, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(960, 960, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=960, bias=False)
      (bn2): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(960, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (15): Block(
      (conv1): Conv2d(160, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(960, 960, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=960, bias=False)
      (bn2): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(960, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (16): Block(
      (conv1): Conv2d(160, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(960, 960, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=960, bias=False)
      (bn2): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(960, 320, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(160, 320, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (conv2): Conv2d(320, 1280, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn2): BatchNorm2d(1280, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (linear): Linear(in_features=1280, out_features=10, bias=True)
)
number of parameters: 2296922
clients initializting...
output size: 10
  0%|          | 0/100 [00:00<?, ?it/s]  1%|          | 1/100 [00:00<01:04,  1.53it/s]  2%|▏         | 2/100 [00:01<01:04,  1.51it/s]  3%|▎         | 3/100 [00:02<01:04,  1.50it/s]  4%|▍         | 4/100 [00:02<01:03,  1.50it/s]  5%|▌         | 5/100 [00:03<01:03,  1.51it/s]  6%|▌         | 6/100 [00:03<01:02,  1.51it/s]  7%|▋         | 7/100 [00:04<01:01,  1.50it/s]  8%|▊         | 8/100 [00:05<01:01,  1.50it/s]  9%|▉         | 9/100 [00:05<01:00,  1.51it/s] 10%|█         | 10/100 [00:06<00:59,  1.50it/s] 11%|█         | 11/100 [00:07<00:59,  1.50it/s] 12%|█▏        | 12/100 [00:07<00:58,  1.50it/s] 13%|█▎        | 13/100 [00:08<00:57,  1.50it/s] 14%|█▍        | 14/100 [00:09<00:57,  1.50it/s] 15%|█▌        | 15/100 [00:10<00:56,  1.49it/s] 16%|█▌        | 16/100 [00:10<00:55,  1.50it/s] 17%|█▋        | 17/100 [00:11<00:55,  1.50it/s] 18%|█▊        | 18/100 [00:12<00:55,  1.49it/s] 19%|█▉        | 19/100 [00:12<00:54,  1.50it/s] 20%|██        | 20/100 [00:13<00:53,  1.50it/s] 21%|██        | 21/100 [00:13<00:52,  1.50it/s] 22%|██▏       | 22/100 [00:14<00:51,  1.51it/s] 23%|██▎       | 23/100 [00:15<00:50,  1.51it/s] 24%|██▍       | 24/100 [00:15<00:50,  1.51it/s] 25%|██▌       | 25/100 [00:16<00:49,  1.51it/s] 26%|██▌       | 26/100 [00:17<00:48,  1.51it/s] 27%|██▋       | 27/100 [00:17<00:48,  1.51it/s] 28%|██▊       | 28/100 [00:18<00:47,  1.51it/s] 29%|██▉       | 29/100 [00:19<00:46,  1.52it/s] 30%|███       | 30/100 [00:19<00:46,  1.51it/s] 31%|███       | 31/100 [00:20<00:45,  1.51it/s] 32%|███▏      | 32/100 [00:21<00:45,  1.51it/s] 33%|███▎      | 33/100 [00:21<00:44,  1.51it/s] 34%|███▍      | 34/100 [00:22<00:43,  1.51it/s] 35%|███▌      | 35/100 [00:26<01:54,  1.76s/it] 36%|███▌      | 36/100 [00:27<01:32,  1.44s/it] 37%|███▋      | 37/100 [00:28<01:15,  1.20s/it] 38%|███▊      | 38/100 [00:28<01:04,  1.03s/it] 39%|███▉      | 39/100 [00:29<00:56,  1.08it/s] 40%|████      | 40/100 [00:30<00:50,  1.18it/s] 41%|████      | 41/100 [00:30<00:47,  1.26it/s] 42%|████▏     | 42/100 [00:31<00:43,  1.32it/s] 43%|████▎     | 43/100 [00:32<00:41,  1.38it/s] 44%|████▍     | 44/100 [00:32<00:39,  1.41it/s] 45%|████▌     | 45/100 [00:33<00:38,  1.43it/s] 46%|████▌     | 46/100 [00:34<00:37,  1.44it/s] 47%|████▋     | 47/100 [00:34<00:36,  1.47it/s] 48%|████▊     | 48/100 [00:35<00:34,  1.50it/s] 49%|████▉     | 49/100 [00:36<00:33,  1.51it/s] 50%|█████     | 50/100 [00:36<00:33,  1.50it/s] 51%|█████     | 51/100 [00:37<00:32,  1.49it/s] 52%|█████▏    | 52/100 [00:38<00:32,  1.49it/s] 53%|█████▎    | 53/100 [00:38<00:31,  1.49it/s] 54%|█████▍    | 54/100 [00:39<00:30,  1.49it/s] 55%|█████▌    | 55/100 [00:40<00:30,  1.49it/s] 56%|█████▌    | 56/100 [00:40<00:29,  1.49it/s] 57%|█████▋    | 57/100 [00:41<00:28,  1.49it/s] 58%|█████▊    | 58/100 [00:42<00:28,  1.48it/s] 59%|█████▉    | 59/100 [00:42<00:27,  1.48it/s] 60%|██████    | 60/100 [00:43<00:27,  1.46it/s] 61%|██████    | 61/100 [00:44<00:26,  1.47it/s] 62%|██████▏   | 62/100 [00:44<00:25,  1.48it/s] 63%|██████▎   | 63/100 [00:45<00:24,  1.48it/s] 64%|██████▍   | 64/100 [00:46<00:24,  1.49it/s] 65%|██████▌   | 65/100 [00:46<00:23,  1.50it/s] 66%|██████▌   | 66/100 [00:47<00:22,  1.50it/s] 67%|██████▋   | 67/100 [00:48<00:22,  1.50it/s] 68%|██████▊   | 68/100 [00:48<00:21,  1.50it/s] 69%|██████▉   | 69/100 [00:49<00:20,  1.49it/s] 70%|███████   | 70/100 [00:50<00:20,  1.50it/s] 71%|███████   | 71/100 [00:50<00:19,  1.50it/s] 72%|███████▏  | 72/100 [00:55<00:50,  1.79s/it] 73%|███████▎  | 73/100 [00:56<00:39,  1.46s/it] 74%|███████▍  | 74/100 [00:56<00:31,  1.22s/it] 75%|███████▌  | 75/100 [00:57<00:26,  1.06s/it] 76%|███████▌  | 76/100 [00:58<00:22,  1.06it/s] 77%|███████▋  | 77/100 [00:58<00:19,  1.16it/s] 78%|███████▊  | 78/100 [00:59<00:17,  1.25it/s] 79%|███████▉  | 79/100 [01:00<00:15,  1.32it/s] 80%|████████  | 80/100 [01:00<00:14,  1.37it/s] 81%|████████  | 81/100 [01:01<00:13,  1.40it/s] 82%|████████▏ | 82/100 [01:02<00:12,  1.42it/s] 83%|████████▎ | 83/100 [01:02<00:11,  1.45it/s] 84%|████████▍ | 84/100 [01:03<00:10,  1.46it/s] 85%|████████▌ | 85/100 [01:04<00:10,  1.45it/s] 86%|████████▌ | 86/100 [01:04<00:09,  1.47it/s] 87%|████████▋ | 87/100 [01:05<00:08,  1.47it/s] 88%|████████▊ | 88/100 [01:06<00:08,  1.48it/s] 89%|████████▉ | 89/100 [01:06<00:07,  1.48it/s] 90%|█████████ | 90/100 [01:07<00:06,  1.49it/s] 91%|█████████ | 91/100 [01:08<00:06,  1.49it/s] 92%|█████████▏| 92/100 [01:08<00:05,  1.49it/s] 93%|█████████▎| 93/100 [01:09<00:04,  1.48it/s] 94%|█████████▍| 94/100 [01:10<00:04,  1.49it/s] 95%|█████████▌| 95/100 [01:10<00:03,  1.49it/s] 96%|█████████▌| 96/100 [01:11<00:02,  1.49it/s] 97%|█████████▋| 97/100 [01:12<00:02,  1.49it/s] 98%|█████████▊| 98/100 [01:12<00:01,  1.49it/s] 99%|█████████▉| 99/100 [01:13<00:00,  1.49it/s]100%|██████████| 100/100 [01:14<00:00,  1.49it/s]100%|██████████| 100/100 [01:14<00:00,  1.35it/s]
Number of users per round / total users: 10  /  100
Finished creating FL server.
=== Training starts: algorithm FedFea ===
-------------Round number:  0  -------------
selected users: [26, 86, 2, 55, 75, 93, 16, 73, 54, 95]
random features: torch.Size([105, 16, 32, 32]) torch.Size([105])
random features: torch.Size([106, 16, 32, 32]) torch.Size([106])
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([104, 16, 32, 32]) torch.Size([104])
random features: torch.Size([106, 16, 32, 32]) torch.Size([106])
random features: torch.Size([104, 16, 32, 32]) torch.Size([104])
random features: torch.Size([104, 16, 32, 32]) torch.Size([104])
random features: torch.Size([100, 16, 32, 32]) torch.Size([100])
all data: 1017
Local adapation with distilling: 0.001
training loss: tensor(2.7672) feature loss: tensor(0.3596)
Local adapation with distilling: 0.001
training loss: tensor(2.8262) feature loss: tensor(0.3702)
Local adapation with distilling: 0.001
training loss: tensor(2.8815) feature loss: tensor(0.3633)
Local adapation with distilling: 0.001
training loss: tensor(2.8240) feature loss: tensor(0.3922)
Local adapation with distilling: 0.001
training loss: tensor(2.8045) feature loss: tensor(0.4056)
Local adapation with distilling: 0.001
training loss: tensor(2.7870) feature loss: tensor(0.3436)
Local adapation with distilling: 0.001
training loss: tensor(2.7813) feature loss: tensor(0.3319)
Local adapation with distilling: 0.001
training loss: tensor(2.7769) feature loss: tensor(0.3947)
Local adapation with distilling: 0.001
training loss: tensor(3.0599) feature loss: tensor(0.4055)
Local adapation with distilling: 0.001
training loss: tensor(2.7505) feature loss: tensor(0.3142)
Global Model Acc on global data: 0.1048 length of data: 10000
save a model
-------------Round number:  1  -------------
selected users: [80, 84, 33, 81, 93, 17, 36, 82, 69, 65]
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([97, 16, 32, 32]) torch.Size([97])
random features: torch.Size([102, 16, 32, 32]) torch.Size([102])
random features: torch.Size([104, 16, 32, 32]) torch.Size([104])
random features: torch.Size([107, 16, 32, 32]) torch.Size([107])
random features: torch.Size([101, 16, 32, 32]) torch.Size([101])
random features: torch.Size([92, 16, 32, 32]) torch.Size([92])
random features: torch.Size([98, 16, 32, 32]) torch.Size([98])
random features: torch.Size([99, 16, 32, 32]) torch.Size([99])
all data: 992
Local adapation with distilling: 0.000982
training loss: tensor(2.4081) feature loss: tensor(0.5612)
Local adapation with distilling: 0.000982
training loss: tensor(2.3546) feature loss: tensor(0.5688)
Local adapation with distilling: 0.000982
training loss: tensor(2.2624) feature loss: tensor(0.5839)
Local adapation with distilling: 0.000982
training loss: tensor(2.5129) feature loss: tensor(0.5455)
Local adapation with distilling: 0.000982
training loss: tensor(2.2492) feature loss: tensor(0.5278)
Local adapation with distilling: 0.000982
training loss: tensor(2.2880) feature loss: tensor(0.4812)
Local adapation with distilling: 0.000982
training loss: tensor(2.2660) feature loss: tensor(0.5548)
Local adapation with distilling: 0.000982
training loss: tensor(2.4731) feature loss: tensor(0.5573)
Local adapation with distilling: 0.000982
training loss: tensor(2.4035) feature loss: tensor(0.5578)
Local adapation with distilling: 0.000982
training loss: tensor(2.2970) feature loss: tensor(0.5399)
Global Model Acc on global data: 0.217 length of data: 10000
save a model
-------------Round number:  2  -------------
selected users: [83, 30, 56, 24, 16, 23, 2, 27, 28, 13]
random features: torch.Size([101, 16, 32, 32]) torch.Size([101])
random features: torch.Size([95, 16, 32, 32]) torch.Size([95])
random features: torch.Size([110, 16, 32, 32]) torch.Size([110])
random features: torch.Size([98, 16, 32, 32]) torch.Size([98])
random features: torch.Size([106, 16, 32, 32]) torch.Size([106])
random features: torch.Size([98, 16, 32, 32]) torch.Size([98])
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([97, 16, 32, 32]) torch.Size([97])
random features: torch.Size([102, 16, 32, 32]) torch.Size([102])
random features: torch.Size([101, 16, 32, 32]) torch.Size([101])
all data: 1004
Local adapation with distilling: 0.000964
training loss: tensor(1.8902) feature loss: tensor(0.5868)
Local adapation with distilling: 0.000964
training loss: tensor(1.9546) feature loss: tensor(0.6113)
Local adapation with distilling: 0.000964
training loss: tensor(1.9067) feature loss: tensor(0.4947)
Local adapation with distilling: 0.000964
training loss: tensor(1.9860) feature loss: tensor(0.5778)
Local adapation with distilling: 0.000964
training loss: tensor(1.8981) feature loss: tensor(0.4668)
Local adapation with distilling: 0.000964
training loss: tensor(1.9517) feature loss: tensor(0.6051)
Local adapation with distilling: 0.000964
training loss: tensor(1.9687) feature loss: tensor(0.6367)
Local adapation with distilling: 0.000964
training loss: tensor(2.0239) feature loss: tensor(0.5298)
Local adapation with distilling: 0.000964
training loss: tensor(2.0731) feature loss: tensor(0.5934)
Local adapation with distilling: 0.000964
training loss: tensor(1.9265) feature loss: tensor(0.6332)
Global Model Acc on global data: 0.2279 length of data: 10000
save a model
-------------Round number:  3  -------------
selected users: [93, 67, 6, 64, 96, 83, 98, 42, 25, 15]
random features: torch.Size([104, 16, 32, 32]) torch.Size([104])
random features: torch.Size([94, 16, 32, 32]) torch.Size([94])
random features: torch.Size([104, 16, 32, 32]) torch.Size([104])
random features: torch.Size([98, 16, 32, 32]) torch.Size([98])
random features: torch.Size([102, 16, 32, 32]) torch.Size([102])
random features: torch.Size([101, 16, 32, 32]) torch.Size([101])
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([95, 16, 32, 32]) torch.Size([95])
random features: torch.Size([100, 16, 32, 32]) torch.Size([100])
random features: torch.Size([103, 16, 32, 32]) torch.Size([103])
all data: 997
Local adapation with distilling: 0.000946
training loss: tensor(1.7044) feature loss: tensor(0.5490)
Local adapation with distilling: 0.000946
training loss: tensor(1.7727) feature loss: tensor(0.5689)
Local adapation with distilling: 0.000946
training loss: tensor(1.7456) feature loss: tensor(0.4918)
Local adapation with distilling: 0.000946
training loss: tensor(1.7056) feature loss: tensor(0.5473)
Local adapation with distilling: 0.000946
training loss: tensor(1.8982) feature loss: tensor(0.5486)
Local adapation with distilling: 0.000946
training loss: tensor(1.6359) feature loss: tensor(0.5234)
Local adapation with distilling: 0.000946
training loss: tensor(1.7304) feature loss: tensor(0.5882)
Local adapation with distilling: 0.000946
training loss: tensor(1.7725) feature loss: tensor(0.4996)
Local adapation with distilling: 0.000946
training loss: tensor(1.7412) feature loss: tensor(0.5565)
Local adapation with distilling: 0.000946
training loss: tensor(1.8392) feature loss: tensor(0.6123)
Global Model Acc on global data: 0.2246 length of data: 10000
-------------Round number:  4  -------------
selected users: [20, 10, 96, 16, 63, 24, 53, 97, 41, 47]
random features: torch.Size([95, 16, 32, 32]) torch.Size([95])
random features: torch.Size([93, 16, 32, 32]) torch.Size([93])
random features: torch.Size([102, 16, 32, 32]) torch.Size([102])
random features: torch.Size([106, 16, 32, 32]) torch.Size([106])
random features: torch.Size([101, 16, 32, 32]) torch.Size([101])
random features: torch.Size([98, 16, 32, 32]) torch.Size([98])
random features: torch.Size([115, 16, 32, 32]) torch.Size([115])
random features: torch.Size([95, 16, 32, 32]) torch.Size([95])
random features: torch.Size([95, 16, 32, 32]) torch.Size([95])
random features: torch.Size([93, 16, 32, 32]) torch.Size([93])
all data: 993
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.7325) feature loss: tensor(0.6292)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.6912) feature loss: tensor(0.7053)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.8833) feature loss: tensor(0.6442)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.5201) feature loss: tensor(0.5344)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.5647) feature loss: tensor(0.6837)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.5088) feature loss: tensor(0.5538)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.4328) feature loss: tensor(0.5889)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.5243) feature loss: tensor(0.6033)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.5700) feature loss: tensor(0.5908)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.5487) feature loss: tensor(0.5402)
Global Model Acc on global data: 0.2757 length of data: 10000
save a model
-------------Round number:  5  -------------
selected users: [66, 32, 46, 28, 74, 23, 10, 20, 17, 35]
random features: torch.Size([108, 16, 32, 32]) torch.Size([108])
random features: torch.Size([99, 16, 32, 32]) torch.Size([99])
random features: torch.Size([103, 16, 32, 32]) torch.Size([103])
random features: torch.Size([102, 16, 32, 32]) torch.Size([102])
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([98, 16, 32, 32]) torch.Size([98])
random features: torch.Size([93, 16, 32, 32]) torch.Size([93])
random features: torch.Size([95, 16, 32, 32]) torch.Size([95])
random features: torch.Size([107, 16, 32, 32]) torch.Size([107])
random features: torch.Size([106, 16, 32, 32]) torch.Size([106])
all data: 1007
Local adapation with distilling: 0.00091
training loss: tensor(1.4529) feature loss: tensor(0.5950)
Local adapation with distilling: 0.00091
training loss: tensor(1.4650) feature loss: tensor(0.5860)
Local adapation with distilling: 0.00091
training loss: tensor(1.5143) feature loss: tensor(0.5728)
Local adapation with distilling: 0.00091
training loss: tensor(1.6337) feature loss: tensor(0.6804)
Local adapation with distilling: 0.00091
training loss: tensor(1.5215) feature loss: tensor(0.5835)
Local adapation with distilling: 0.00091
training loss: tensor(1.5324) feature loss: tensor(0.6382)
Local adapation with distilling: 0.00091
training loss: tensor(1.5060) feature loss: tensor(0.6376)
Local adapation with distilling: 0.00091
training loss: tensor(1.5287) feature loss: tensor(0.6591)
Local adapation with distilling: 0.00091
training loss: tensor(1.4178) feature loss: tensor(0.5665)
Local adapation with distilling: 0.00091
training loss: tensor(1.4920) feature loss: tensor(0.6129)
Global Model Acc on global data: 0.3749 length of data: 10000
save a model
-------------Round number:  6  -------------
selected users: [17, 34, 0, 45, 60, 86, 20, 47, 44, 81]
random features: torch.Size([107, 16, 32, 32]) torch.Size([107])
random features: torch.Size([95, 16, 32, 32]) torch.Size([95])
random features: torch.Size([99, 16, 32, 32]) torch.Size([99])
random features: torch.Size([100, 16, 32, 32]) torch.Size([100])
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([106, 16, 32, 32]) torch.Size([106])
random features: torch.Size([95, 16, 32, 32]) torch.Size([95])
random features: torch.Size([93, 16, 32, 32]) torch.Size([93])
random features: torch.Size([94, 16, 32, 32]) torch.Size([94])
random features: torch.Size([102, 16, 32, 32]) torch.Size([102])
all data: 987
Local adapation with distilling: 0.000892
training loss: tensor(1.1371) feature loss: tensor(0.4859)
Local adapation with distilling: 0.000892
training loss: tensor(1.2861) feature loss: tensor(0.5234)
Local adapation with distilling: 0.000892
training loss: tensor(1.3223) feature loss: tensor(0.6044)
Local adapation with distilling: 0.000892
training loss: tensor(1.2889) feature loss: tensor(0.5940)
Local adapation with distilling: 0.000892
training loss: tensor(1.2840) feature loss: tensor(0.5605)
Local adapation with distilling: 0.000892
training loss: tensor(1.2843) feature loss: tensor(0.5125)
Local adapation with distilling: 0.000892
training loss: tensor(1.2832) feature loss: tensor(0.5412)
Local adapation with distilling: 0.000892
training loss: tensor(1.2327) feature loss: tensor(0.5347)
Local adapation with distilling: 0.000892
training loss: tensor(1.3540) feature loss: tensor(0.5675)
Local adapation with distilling: 0.000892
training loss: tensor(1.5894) feature loss: tensor(0.5572)
Global Model Acc on global data: 0.375 length of data: 10000
save a model
-------------Round number:  7  -------------
selected users: [37, 26, 78, 91, 49, 15, 93, 71, 86, 22]
random features: torch.Size([101, 16, 32, 32]) torch.Size([101])
random features: torch.Size([105, 16, 32, 32]) torch.Size([105])
random features: torch.Size([104, 16, 32, 32]) torch.Size([104])
random features: torch.Size([105, 16, 32, 32]) torch.Size([105])
random features: torch.Size([99, 16, 32, 32]) torch.Size([99])
random features: torch.Size([103, 16, 32, 32]) torch.Size([103])
random features: torch.Size([104, 16, 32, 32]) torch.Size([104])
random features: torch.Size([101, 16, 32, 32]) torch.Size([101])
random features: torch.Size([106, 16, 32, 32]) torch.Size([106])
random features: torch.Size([102, 16, 32, 32]) torch.Size([102])
all data: 1030
Local adapation with distilling: 0.000874
training loss: tensor(1.3370) feature loss: tensor(0.4670)
Local adapation with distilling: 0.000874
training loss: tensor(1.2499) feature loss: tensor(0.5830)
Local adapation with distilling: 0.000874
training loss: tensor(1.2576) feature loss: tensor(0.5563)
Local adapation with distilling: 0.000874
training loss: tensor(1.2720) feature loss: tensor(0.5182)
Local adapation with distilling: 0.000874
training loss: tensor(1.2668) feature loss: tensor(0.5755)
Local adapation with distilling: 0.000874
training loss: tensor(1.3517) feature loss: tensor(0.6013)
Local adapation with distilling: 0.000874
training loss: tensor(1.2530) feature loss: tensor(0.5691)
Local adapation with distilling: 0.000874
training loss: tensor(1.2390) feature loss: tensor(0.4744)
Local adapation with distilling: 0.000874
training loss: tensor(1.1854) feature loss: tensor(0.5260)
Local adapation with distilling: 0.000874
training loss: tensor(1.4088) feature loss: tensor(0.6328)
Global Model Acc on global data: 0.3862 length of data: 10000
save a model
-------------Round number:  8  -------------
selected users: [17, 23, 1, 44, 55, 99, 86, 29, 62, 33]
random features: torch.Size([107, 16, 32, 32]) torch.Size([107])
random features: torch.Size([98, 16, 32, 32]) torch.Size([98])
random features: torch.Size([104, 16, 32, 32]) torch.Size([104])
random features: torch.Size([94, 16, 32, 32]) torch.Size([94])
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([93, 16, 32, 32]) torch.Size([93])
random features: torch.Size([106, 16, 32, 32]) torch.Size([106])
random features: torch.Size([109, 16, 32, 32]) torch.Size([109])
random features: torch.Size([93, 16, 32, 32]) torch.Size([93])
random features: torch.Size([97, 16, 32, 32]) torch.Size([97])
all data: 997
Local adapation with distilling: 0.000856
training loss: tensor(1.0831) feature loss: tensor(0.5011)
Local adapation with distilling: 0.000856
training loss: tensor(1.1935) feature loss: tensor(0.5604)
Local adapation with distilling: 0.000856
training loss: tensor(1.1566) feature loss: tensor(0.4982)
Local adapation with distilling: 0.000856
training loss: tensor(1.2505) feature loss: tensor(0.5352)
Local adapation with distilling: 0.000856
training loss: tensor(1.1827) feature loss: tensor(0.5099)
Local adapation with distilling: 0.000856
training loss: tensor(1.1994) feature loss: tensor(0.5301)
Local adapation with distilling: 0.000856
training loss: tensor(1.0510) feature loss: tensor(0.5048)
Local adapation with distilling: 0.000856
training loss: tensor(1.1539) feature loss: tensor(0.5239)
Local adapation with distilling: 0.000856
training loss: tensor(1.3399) feature loss: tensor(0.6147)
Local adapation with distilling: 0.000856
training loss: tensor(1.2354) feature loss: tensor(0.5337)
Global Model Acc on global data: 0.4282 length of data: 10000
save a model
-------------Round number:  9  -------------
selected users: [75, 42, 46, 68, 3, 39, 23, 20, 70, 73]
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([95, 16, 32, 32]) torch.Size([95])
random features: torch.Size([103, 16, 32, 32]) torch.Size([103])
random features: torch.Size([103, 16, 32, 32]) torch.Size([103])
random features: torch.Size([106, 16, 32, 32]) torch.Size([106])
random features: torch.Size([103, 16, 32, 32]) torch.Size([103])
random features: torch.Size([98, 16, 32, 32]) torch.Size([98])
random features: torch.Size([95, 16, 32, 32]) torch.Size([95])
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([104, 16, 32, 32]) torch.Size([104])
all data: 999
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(1.0111) feature loss: tensor(0.4373)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(1.1409) feature loss: tensor(0.4335)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.9890) feature loss: tensor(0.4250)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(1.1634) feature loss: tensor(0.4762)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(1.0581) feature loss: tensor(0.4715)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(1.0366) feature loss: tensor(0.4161)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.9927) feature loss: tensor(0.4147)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(1.1243) feature loss: tensor(0.4376)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(1.0569) feature loss: tensor(0.5026)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(1.1149) feature loss: tensor(0.5170)
Global Model Acc on global data: 0.4509 length of data: 10000
save a model
-------------Round number:  10  -------------
selected users: [19, 14, 43, 37, 66, 3, 79, 41, 38, 68]
random features: torch.Size([100, 16, 32, 32]) torch.Size([100])
random features: torch.Size([99, 16, 32, 32]) torch.Size([99])
random features: torch.Size([98, 16, 32, 32]) torch.Size([98])
random features: torch.Size([101, 16, 32, 32]) torch.Size([101])
random features: torch.Size([108, 16, 32, 32]) torch.Size([108])
random features: torch.Size([106, 16, 32, 32]) torch.Size([106])
random features: torch.Size([99, 16, 32, 32]) torch.Size([99])
random features: torch.Size([95, 16, 32, 32]) torch.Size([95])
random features: torch.Size([109, 16, 32, 32]) torch.Size([109])
random features: torch.Size([103, 16, 32, 32]) torch.Size([103])
all data: 1018
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.9594) feature loss: tensor(0.4074)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(1.0380) feature loss: tensor(0.4772)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(1.0279) feature loss: tensor(0.4548)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.9680) feature loss: tensor(0.4222)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(1.0112) feature loss: tensor(0.5184)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.9147) feature loss: tensor(0.4244)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(1.0720) feature loss: tensor(0.4474)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(1.0118) feature loss: tensor(0.4416)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(1.0002) feature loss: tensor(0.4457)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(1.0131) feature loss: tensor(0.4707)
Global Model Acc on global data: 0.4314 length of data: 10000
-------------Round number:  11  -------------
selected users: [46, 49, 22, 58, 41, 98, 62, 29, 30, 51]
random features: torch.Size([103, 16, 32, 32]) torch.Size([103])
random features: torch.Size([99, 16, 32, 32]) torch.Size([99])
random features: torch.Size([102, 16, 32, 32]) torch.Size([102])
random features: torch.Size([101, 16, 32, 32]) torch.Size([101])
random features: torch.Size([95, 16, 32, 32]) torch.Size([95])
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([93, 16, 32, 32]) torch.Size([93])
random features: torch.Size([109, 16, 32, 32]) torch.Size([109])
random features: torch.Size([95, 16, 32, 32]) torch.Size([95])
random features: torch.Size([97, 16, 32, 32]) torch.Size([97])
all data: 990
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.9042) feature loss: tensor(0.4108)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.9782) feature loss: tensor(0.4804)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(1.1407) feature loss: tensor(0.4159)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.9649) feature loss: tensor(0.4830)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.9549) feature loss: tensor(0.4591)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.9880) feature loss: tensor(0.4209)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(1.0080) feature loss: tensor(0.4682)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.8995) feature loss: tensor(0.4157)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(1.0698) feature loss: tensor(0.4387)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.9941) feature loss: tensor(0.4607)
Global Model Acc on global data: 0.4545 length of data: 10000
save a model
-------------Round number:  12  -------------
selected users: [17, 41, 92, 14, 68, 31, 89, 15, 21, 60]
random features: torch.Size([107, 16, 32, 32]) torch.Size([107])
random features: torch.Size([95, 16, 32, 32]) torch.Size([95])
random features: torch.Size([93, 16, 32, 32]) torch.Size([93])
random features: torch.Size([99, 16, 32, 32]) torch.Size([99])
random features: torch.Size([103, 16, 32, 32]) torch.Size([103])
random features: torch.Size([97, 16, 32, 32]) torch.Size([97])
random features: torch.Size([108, 16, 32, 32]) torch.Size([108])
random features: torch.Size([103, 16, 32, 32]) torch.Size([103])
random features: torch.Size([94, 16, 32, 32]) torch.Size([94])
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
all data: 995
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.8995) feature loss: tensor(0.4053)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.9208) feature loss: tensor(0.4381)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(1.0693) feature loss: tensor(0.4739)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.9495) feature loss: tensor(0.4390)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.9379) feature loss: tensor(0.4274)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(1.0528) feature loss: tensor(0.4485)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.9682) feature loss: tensor(0.4302)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(1.0591) feature loss: tensor(0.4729)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(1.0205) feature loss: tensor(0.4878)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(1.0032) feature loss: tensor(0.4425)
Global Model Acc on global data: 0.4817 length of data: 10000
save a model
-------------Round number:  13  -------------
selected users: [37, 62, 83, 14, 43, 9, 44, 31, 69, 57]
random features: torch.Size([101, 16, 32, 32]) torch.Size([101])
random features: torch.Size([93, 16, 32, 32]) torch.Size([93])
random features: torch.Size([101, 16, 32, 32]) torch.Size([101])
random features: torch.Size([99, 16, 32, 32]) torch.Size([99])
random features: torch.Size([98, 16, 32, 32]) torch.Size([98])
random features: torch.Size([102, 16, 32, 32]) torch.Size([102])
random features: torch.Size([94, 16, 32, 32]) torch.Size([94])
random features: torch.Size([97, 16, 32, 32]) torch.Size([97])
random features: torch.Size([98, 16, 32, 32]) torch.Size([98])
random features: torch.Size([101, 16, 32, 32]) torch.Size([101])
all data: 984
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.7674) feature loss: tensor(0.3344)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.8197) feature loss: tensor(0.3542)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.8602) feature loss: tensor(0.4270)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.7664) feature loss: tensor(0.3921)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.8397) feature loss: tensor(0.4301)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(1.0642) feature loss: tensor(0.4125)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.8569) feature loss: tensor(0.3609)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.8304) feature loss: tensor(0.3768)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.8202) feature loss: tensor(0.3915)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.8032) feature loss: tensor(0.3395)
Global Model Acc on global data: 0.4629 length of data: 10000
-------------Round number:  14  -------------
selected users: [24, 39, 35, 44, 55, 70, 82, 40, 91, 65]
random features: torch.Size([98, 16, 32, 32]) torch.Size([98])
random features: torch.Size([103, 16, 32, 32]) torch.Size([103])
random features: torch.Size([106, 16, 32, 32]) torch.Size([106])
random features: torch.Size([94, 16, 32, 32]) torch.Size([94])
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([92, 16, 32, 32]) torch.Size([92])
random features: torch.Size([92, 16, 32, 32]) torch.Size([92])
random features: torch.Size([105, 16, 32, 32]) torch.Size([105])
random features: torch.Size([99, 16, 32, 32]) torch.Size([99])
all data: 981
Local adapation with distilling: 0.000748
training loss: tensor(1.0577) feature loss: tensor(0.5342)
Local adapation with distilling: 0.000748
training loss: tensor(0.9618) feature loss: tensor(0.4943)
Local adapation with distilling: 0.000748
training loss: tensor(1.0601) feature loss: tensor(0.5178)
Local adapation with distilling: 0.000748
training loss: tensor(0.9671) feature loss: tensor(0.4691)
Local adapation with distilling: 0.000748
training loss: tensor(0.9953) feature loss: tensor(0.5114)
Local adapation with distilling: 0.000748
training loss: tensor(1.0042) feature loss: tensor(0.5201)
Local adapation with distilling: 0.000748
training loss: tensor(1.0273) feature loss: tensor(0.4891)
Local adapation with distilling: 0.000748
training loss: tensor(1.1215) feature loss: tensor(0.5407)
Local adapation with distilling: 0.000748
training loss: tensor(1.0728) feature loss: tensor(0.5146)
Local adapation with distilling: 0.000748
training loss: tensor(1.0290) feature loss: tensor(0.5944)
Global Model Acc on global data: 0.4916 length of data: 10000
save a model
-------------Round number:  15  -------------
selected users: [84, 36, 57, 51, 46, 78, 93, 14, 11, 59]
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([101, 16, 32, 32]) torch.Size([101])
random features: torch.Size([101, 16, 32, 32]) torch.Size([101])
random features: torch.Size([97, 16, 32, 32]) torch.Size([97])
random features: torch.Size([103, 16, 32, 32]) torch.Size([103])
random features: torch.Size([104, 16, 32, 32]) torch.Size([104])
random features: torch.Size([104, 16, 32, 32]) torch.Size([104])
random features: torch.Size([99, 16, 32, 32]) torch.Size([99])
random features: torch.Size([106, 16, 32, 32]) torch.Size([106])
random features: torch.Size([103, 16, 32, 32]) torch.Size([103])
all data: 1014
Local adapation with distilling: 0.00073
training loss: tensor(0.9764) feature loss: tensor(0.4446)
Local adapation with distilling: 0.00073
training loss: tensor(0.9052) feature loss: tensor(0.4507)
Local adapation with distilling: 0.00073
training loss: tensor(0.8594) feature loss: tensor(0.3784)
Local adapation with distilling: 0.00073
training loss: tensor(0.9146) feature loss: tensor(0.4555)
Local adapation with distilling: 0.00073
training loss: tensor(0.7665) feature loss: tensor(0.3782)
Local adapation with distilling: 0.00073
training loss: tensor(0.8874) feature loss: tensor(0.4357)
Local adapation with distilling: 0.00073
training loss: tensor(0.9473) feature loss: tensor(0.4430)
Local adapation with distilling: 0.00073
training loss: tensor(0.8254) feature loss: tensor(0.4219)
Local adapation with distilling: 0.00073
training loss: tensor(0.9383) feature loss: tensor(0.4268)
Local adapation with distilling: 0.00073
training loss: tensor(0.9864) feature loss: tensor(0.3927)
Global Model Acc on global data: 0.5145 length of data: 10000
save a model
-------------Round number:  16  -------------
selected users: [7, 25, 71, 42, 47, 29, 63, 88, 50, 9]
random features: torch.Size([95, 16, 32, 32]) torch.Size([95])
random features: torch.Size([100, 16, 32, 32]) torch.Size([100])
random features: torch.Size([101, 16, 32, 32]) torch.Size([101])
random features: torch.Size([95, 16, 32, 32]) torch.Size([95])
random features: torch.Size([93, 16, 32, 32]) torch.Size([93])
random features: torch.Size([109, 16, 32, 32]) torch.Size([109])
random features: torch.Size([101, 16, 32, 32]) torch.Size([101])
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([98, 16, 32, 32]) torch.Size([98])
random features: torch.Size([102, 16, 32, 32]) torch.Size([102])
all data: 990
Local adapation with distilling: 0.000712
training loss: tensor(0.8545) feature loss: tensor(0.3667)
Local adapation with distilling: 0.000712
training loss: tensor(0.8238) feature loss: tensor(0.3662)
Local adapation with distilling: 0.000712
training loss: tensor(0.8074) feature loss: tensor(0.3480)
Local adapation with distilling: 0.000712
training loss: tensor(0.8632) feature loss: tensor(0.3550)
Local adapation with distilling: 0.000712
training loss: tensor(0.8128) feature loss: tensor(0.4178)
Local adapation with distilling: 0.000712
training loss: tensor(0.8123) feature loss: tensor(0.4103)
Local adapation with distilling: 0.000712
training loss: tensor(0.8254) feature loss: tensor(0.3849)
Local adapation with distilling: 0.000712
training loss: tensor(0.8486) feature loss: tensor(0.3987)
Local adapation with distilling: 0.000712
training loss: tensor(0.8966) feature loss: tensor(0.4269)
Local adapation with distilling: 0.000712
training loss: tensor(0.9004) feature loss: tensor(0.3971)
Global Model Acc on global data: 0.5037 length of data: 10000
-------------Round number:  17  -------------
selected users: [71, 28, 9, 4, 73, 34, 94, 92, 47, 37]
random features: torch.Size([101, 16, 32, 32]) torch.Size([101])
random features: torch.Size([102, 16, 32, 32]) torch.Size([102])
random features: torch.Size([102, 16, 32, 32]) torch.Size([102])
random features: torch.Size([98, 16, 32, 32]) torch.Size([98])
random features: torch.Size([104, 16, 32, 32]) torch.Size([104])
random features: torch.Size([95, 16, 32, 32]) torch.Size([95])
random features: torch.Size([101, 16, 32, 32]) torch.Size([101])
random features: torch.Size([93, 16, 32, 32]) torch.Size([93])
random features: torch.Size([93, 16, 32, 32]) torch.Size([93])
random features: torch.Size([101, 16, 32, 32]) torch.Size([101])
all data: 990
Local adapation with distilling: 0.000694
training loss: tensor(0.7057) feature loss: tensor(0.3349)
Local adapation with distilling: 0.000694
training loss: tensor(0.8427) feature loss: tensor(0.3802)
Local adapation with distilling: 0.000694
training loss: tensor(0.9493) feature loss: tensor(0.3601)
Local adapation with distilling: 0.000694
training loss: tensor(0.7704) feature loss: tensor(0.3316)
Local adapation with distilling: 0.000694
training loss: tensor(0.8495) feature loss: tensor(0.3780)
Local adapation with distilling: 0.000694
training loss: tensor(0.7673) feature loss: tensor(0.3240)
Local adapation with distilling: 0.000694
training loss: tensor(0.7549) feature loss: tensor(0.3175)
Local adapation with distilling: 0.000694
training loss: tensor(0.8431) feature loss: tensor(0.3426)
Local adapation with distilling: 0.000694
training loss: tensor(0.6968) feature loss: tensor(0.3560)
Local adapation with distilling: 0.000694
training loss: tensor(0.7106) feature loss: tensor(0.3330)
Global Model Acc on global data: 0.5145 length of data: 10000
-------------Round number:  18  -------------
selected users: [53, 47, 43, 54, 33, 48, 0, 12, 44, 91]
random features: torch.Size([115, 16, 32, 32]) torch.Size([115])
random features: torch.Size([93, 16, 32, 32]) torch.Size([93])
random features: torch.Size([98, 16, 32, 32]) torch.Size([98])
random features: torch.Size([104, 16, 32, 32]) torch.Size([104])
random features: torch.Size([97, 16, 32, 32]) torch.Size([97])
random features: torch.Size([95, 16, 32, 32]) torch.Size([95])
random features: torch.Size([99, 16, 32, 32]) torch.Size([99])
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([94, 16, 32, 32]) torch.Size([94])
random features: torch.Size([105, 16, 32, 32]) torch.Size([105])
all data: 996
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.7877) feature loss: tensor(0.4160)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.7747) feature loss: tensor(0.3893)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.8249) feature loss: tensor(0.4386)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.9019) feature loss: tensor(0.3880)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.8448) feature loss: tensor(0.4294)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.9494) feature loss: tensor(0.4467)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.8637) feature loss: tensor(0.4264)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.8844) feature loss: tensor(0.4253)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.8292) feature loss: tensor(0.3964)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.8237) feature loss: tensor(0.4075)
Global Model Acc on global data: 0.526 length of data: 10000
save a model
-------------Round number:  19  -------------
selected users: [85, 72, 16, 18, 2, 38, 90, 30, 83, 61]
random features: torch.Size([100, 16, 32, 32]) torch.Size([100])
random features: torch.Size([115, 16, 32, 32]) torch.Size([115])
random features: torch.Size([106, 16, 32, 32]) torch.Size([106])
random features: torch.Size([99, 16, 32, 32]) torch.Size([99])
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([109, 16, 32, 32]) torch.Size([109])
random features: torch.Size([95, 16, 32, 32]) torch.Size([95])
random features: torch.Size([95, 16, 32, 32]) torch.Size([95])
random features: torch.Size([101, 16, 32, 32]) torch.Size([101])
random features: torch.Size([101, 16, 32, 32]) torch.Size([101])
all data: 1017
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.7945) feature loss: tensor(0.3785)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.7564) feature loss: tensor(0.3685)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.8692) feature loss: tensor(0.3733)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.9280) feature loss: tensor(0.3822)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.8474) feature loss: tensor(0.3632)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.7953) feature loss: tensor(0.3961)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.8731) feature loss: tensor(0.3764)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.8361) feature loss: tensor(0.3561)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.7796) feature loss: tensor(0.3512)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.8224) feature loss: tensor(0.3563)
Global Model Acc on global data: 0.53 length of data: 10000
save a model
-------------Round number:  20  -------------
selected users: [70, 74, 2, 44, 56, 48, 12, 36, 0, 49]
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([94, 16, 32, 32]) torch.Size([94])
random features: torch.Size([110, 16, 32, 32]) torch.Size([110])
random features: torch.Size([95, 16, 32, 32]) torch.Size([95])
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([101, 16, 32, 32]) torch.Size([101])
random features: torch.Size([99, 16, 32, 32]) torch.Size([99])
random features: torch.Size([99, 16, 32, 32]) torch.Size([99])
all data: 982
Local adapation with distilling: 0.00064
training loss: tensor(0.6759) feature loss: tensor(0.3496)
Local adapation with distilling: 0.00064
training loss: tensor(0.6230) feature loss: tensor(0.3195)
Local adapation with distilling: 0.00064
training loss: tensor(0.6409) feature loss: tensor(0.3148)
Local adapation with distilling: 0.00064
training loss: tensor(0.6370) feature loss: tensor(0.3243)
Local adapation with distilling: 0.00064
training loss: tensor(0.6677) feature loss: tensor(0.3424)
Local adapation with distilling: 0.00064
training loss: tensor(0.6796) feature loss: tensor(0.3216)
Local adapation with distilling: 0.00064
training loss: tensor(0.6556) feature loss: tensor(0.3288)
Local adapation with distilling: 0.00064
training loss: tensor(0.6088) feature loss: tensor(0.3206)
Local adapation with distilling: 0.00064
training loss: tensor(0.6007) feature loss: tensor(0.3286)
Local adapation with distilling: 0.00064
training loss: tensor(0.6374) feature loss: tensor(0.3032)
Global Model Acc on global data: 0.5302 length of data: 10000
save a model
-------------Round number:  21  -------------
selected users: [23, 81, 85, 34, 62, 46, 42, 31, 93, 11]
random features: torch.Size([98, 16, 32, 32]) torch.Size([98])
random features: torch.Size([102, 16, 32, 32]) torch.Size([102])
random features: torch.Size([100, 16, 32, 32]) torch.Size([100])
random features: torch.Size([95, 16, 32, 32]) torch.Size([95])
random features: torch.Size([93, 16, 32, 32]) torch.Size([93])
random features: torch.Size([103, 16, 32, 32]) torch.Size([103])
random features: torch.Size([95, 16, 32, 32]) torch.Size([95])
random features: torch.Size([97, 16, 32, 32]) torch.Size([97])
random features: torch.Size([104, 16, 32, 32]) torch.Size([104])
random features: torch.Size([106, 16, 32, 32]) torch.Size([106])
all data: 993
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.8362) feature loss: tensor(0.3913)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(1.1440) feature loss: tensor(0.3882)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.7294) feature loss: tensor(0.3632)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.8108) feature loss: tensor(0.3771)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.8149) feature loss: tensor(0.3731)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.7937) feature loss: tensor(0.3816)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.8393) feature loss: tensor(0.4060)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.8568) feature loss: tensor(0.3803)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.8275) feature loss: tensor(0.3789)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.7551) feature loss: tensor(0.3632)
Global Model Acc on global data: 0.5863 length of data: 10000
save a model
-------------Round number:  22  -------------
selected users: [2, 49, 82, 31, 37, 12, 87, 42, 99, 85]
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([99, 16, 32, 32]) torch.Size([99])
random features: torch.Size([92, 16, 32, 32]) torch.Size([92])
random features: torch.Size([97, 16, 32, 32]) torch.Size([97])
random features: torch.Size([101, 16, 32, 32]) torch.Size([101])
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([95, 16, 32, 32]) torch.Size([95])
random features: torch.Size([95, 16, 32, 32]) torch.Size([95])
random features: torch.Size([93, 16, 32, 32]) torch.Size([93])
random features: torch.Size([100, 16, 32, 32]) torch.Size([100])
all data: 964
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.6545) feature loss: tensor(0.3933)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.6420) feature loss: tensor(0.3773)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.6845) feature loss: tensor(0.3384)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.6488) feature loss: tensor(0.3938)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.6739) feature loss: tensor(0.3680)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.6278) feature loss: tensor(0.3575)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.7284) feature loss: tensor(0.3593)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.6433) feature loss: tensor(0.3671)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.7442) feature loss: tensor(0.4311)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.6330) feature loss: tensor(0.3181)
Global Model Acc on global data: 0.5762 length of data: 10000
-------------Round number:  23  -------------
selected users: [26, 80, 82, 68, 77, 37, 3, 55, 20, 17]
random features: torch.Size([105, 16, 32, 32]) torch.Size([105])
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([92, 16, 32, 32]) torch.Size([92])
random features: torch.Size([103, 16, 32, 32]) torch.Size([103])
random features: torch.Size([92, 16, 32, 32]) torch.Size([92])
random features: torch.Size([101, 16, 32, 32]) torch.Size([101])
random features: torch.Size([106, 16, 32, 32]) torch.Size([106])
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([95, 16, 32, 32]) torch.Size([95])
random features: torch.Size([107, 16, 32, 32]) torch.Size([107])
all data: 993
Local adapation with distilling: 0.000586
training loss: tensor(0.6763) feature loss: tensor(0.3423)
Local adapation with distilling: 0.000586
training loss: tensor(0.7332) feature loss: tensor(0.3387)
Local adapation with distilling: 0.000586
training loss: tensor(0.6667) feature loss: tensor(0.3263)
Local adapation with distilling: 0.000586
training loss: tensor(0.7163) feature loss: tensor(0.3468)
Local adapation with distilling: 0.000586
training loss: tensor(0.7264) feature loss: tensor(0.3261)
Local adapation with distilling: 0.000586
training loss: tensor(0.6264) feature loss: tensor(0.3135)
Local adapation with distilling: 0.000586
training loss: tensor(0.7427) feature loss: tensor(0.3257)
Local adapation with distilling: 0.000586
training loss: tensor(0.7045) feature loss: tensor(0.3476)
Local adapation with distilling: 0.000586
training loss: tensor(0.7530) feature loss: tensor(0.3358)
Local adapation with distilling: 0.000586
training loss: tensor(0.6858) feature loss: tensor(0.3439)
Global Model Acc on global data: 0.5642 length of data: 10000
-------------Round number:  24  -------------
selected users: [26, 31, 37, 86, 76, 14, 88, 48, 71, 67]
random features: torch.Size([105, 16, 32, 32]) torch.Size([105])
random features: torch.Size([97, 16, 32, 32]) torch.Size([97])
random features: torch.Size([101, 16, 32, 32]) torch.Size([101])
random features: torch.Size([106, 16, 32, 32]) torch.Size([106])
random features: torch.Size([106, 16, 32, 32]) torch.Size([106])
random features: torch.Size([99, 16, 32, 32]) torch.Size([99])
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([95, 16, 32, 32]) torch.Size([95])
random features: torch.Size([101, 16, 32, 32]) torch.Size([101])
random features: torch.Size([94, 16, 32, 32]) torch.Size([94])
all data: 1000
Local adapation with distilling: 0.000568
training loss: tensor(0.5703) feature loss: tensor(0.2893)
Local adapation with distilling: 0.000568
training loss: tensor(0.6175) feature loss: tensor(0.2897)
Local adapation with distilling: 0.000568
training loss: tensor(0.5733) feature loss: tensor(0.3042)
Local adapation with distilling: 0.000568
training loss: tensor(0.6259) feature loss: tensor(0.2990)
Local adapation with distilling: 0.000568
training loss: tensor(0.6997) feature loss: tensor(0.2971)
Local adapation with distilling: 0.000568
training loss: tensor(0.6025) feature loss: tensor(0.3026)
Local adapation with distilling: 0.000568
training loss: tensor(0.6066) feature loss: tensor(0.3044)
Local adapation with distilling: 0.000568
training loss: tensor(0.6569) feature loss: tensor(0.3015)
Local adapation with distilling: 0.000568
training loss: tensor(0.6310) feature loss: tensor(0.3101)
Local adapation with distilling: 0.000568
training loss: tensor(0.6483) feature loss: tensor(0.2925)
Global Model Acc on global data: 0.5466 length of data: 10000
-------------Round number:  25  -------------
selected users: [41, 29, 33, 65, 74, 6, 57, 89, 87, 98]
random features: torch.Size([95, 16, 32, 32]) torch.Size([95])
random features: torch.Size([109, 16, 32, 32]) torch.Size([109])
random features: torch.Size([97, 16, 32, 32]) torch.Size([97])
random features: torch.Size([99, 16, 32, 32]) torch.Size([99])
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([104, 16, 32, 32]) torch.Size([104])
random features: torch.Size([101, 16, 32, 32]) torch.Size([101])
random features: torch.Size([108, 16, 32, 32]) torch.Size([108])
random features: torch.Size([95, 16, 32, 32]) torch.Size([95])
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
all data: 1000
Local adapation with distilling: 0.00055
training loss: tensor(0.6263) feature loss: tensor(0.2913)
Local adapation with distilling: 0.00055
training loss: tensor(0.6096) feature loss: tensor(0.2928)
Local adapation with distilling: 0.00055
training loss: tensor(0.6409) feature loss: tensor(0.2947)
Local adapation with distilling: 0.00055
training loss: tensor(0.6870) feature loss: tensor(0.3102)
Local adapation with distilling: 0.00055
training loss: tensor(0.6136) feature loss: tensor(0.2899)
Local adapation with distilling: 0.00055
training loss: tensor(0.6744) feature loss: tensor(0.2772)
Local adapation with distilling: 0.00055
training loss: tensor(0.6156) feature loss: tensor(0.2751)
Local adapation with distilling: 0.00055
training loss: tensor(0.6375) feature loss: tensor(0.2879)
Local adapation with distilling: 0.00055
training loss: tensor(0.6806) feature loss: tensor(0.3161)
Local adapation with distilling: 0.00055
training loss: tensor(0.6368) feature loss: tensor(0.2968)
Global Model Acc on global data: 0.5608 length of data: 10000
-------------Round number:  26  -------------
selected users: [8, 69, 84, 41, 25, 5, 63, 95, 33, 70]
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([98, 16, 32, 32]) torch.Size([98])
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([95, 16, 32, 32]) torch.Size([95])
random features: torch.Size([100, 16, 32, 32]) torch.Size([100])
random features: torch.Size([102, 16, 32, 32]) torch.Size([102])
random features: torch.Size([101, 16, 32, 32]) torch.Size([101])
random features: torch.Size([100, 16, 32, 32]) torch.Size([100])
random features: torch.Size([97, 16, 32, 32]) torch.Size([97])
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
all data: 981
Local adapation with distilling: 0.000532
training loss: tensor(0.7020) feature loss: tensor(0.3438)
Local adapation with distilling: 0.000532
training loss: tensor(0.7388) feature loss: tensor(0.3847)
Local adapation with distilling: 0.000532
training loss: tensor(0.7425) feature loss: tensor(0.3316)
Local adapation with distilling: 0.000532
training loss: tensor(0.6700) feature loss: tensor(0.3320)
Local adapation with distilling: 0.000532
training loss: tensor(0.7513) feature loss: tensor(0.3738)
Local adapation with distilling: 0.000532
training loss: tensor(0.8372) feature loss: tensor(0.3905)
Local adapation with distilling: 0.000532
training loss: tensor(0.6812) feature loss: tensor(0.3393)
Local adapation with distilling: 0.000532
training loss: tensor(0.7251) feature loss: tensor(0.3623)
Local adapation with distilling: 0.000532
training loss: tensor(0.6676) feature loss: tensor(0.3410)
Local adapation with distilling: 0.000532
training loss: tensor(0.7192) feature loss: tensor(0.3663)
Global Model Acc on global data: 0.5712 length of data: 10000
-------------Round number:  27  -------------
selected users: [89, 68, 43, 50, 40, 95, 27, 85, 22, 44]
random features: torch.Size([108, 16, 32, 32]) torch.Size([108])
random features: torch.Size([103, 16, 32, 32]) torch.Size([103])
random features: torch.Size([98, 16, 32, 32]) torch.Size([98])
random features: torch.Size([98, 16, 32, 32]) torch.Size([98])
random features: torch.Size([92, 16, 32, 32]) torch.Size([92])
random features: torch.Size([100, 16, 32, 32]) torch.Size([100])
random features: torch.Size([97, 16, 32, 32]) torch.Size([97])
random features: torch.Size([100, 16, 32, 32]) torch.Size([100])
random features: torch.Size([102, 16, 32, 32]) torch.Size([102])
random features: torch.Size([94, 16, 32, 32]) torch.Size([94])
all data: 992
Local adapation with distilling: 0.000514
training loss: tensor(0.6022) feature loss: tensor(0.2754)
Local adapation with distilling: 0.000514
training loss: tensor(0.6693) feature loss: tensor(0.2827)
Local adapation with distilling: 0.000514
training loss: tensor(0.6089) feature loss: tensor(0.2923)
Local adapation with distilling: 0.000514
training loss: tensor(0.6402) feature loss: tensor(0.2932)
Local adapation with distilling: 0.000514
training loss: tensor(0.6487) feature loss: tensor(0.2773)
Local adapation with distilling: 0.000514
training loss: tensor(0.6415) feature loss: tensor(0.2764)
Local adapation with distilling: 0.000514
training loss: tensor(0.7109) feature loss: tensor(0.2891)
Local adapation with distilling: 0.000514
training loss: tensor(0.6048) feature loss: tensor(0.2882)
Local adapation with distilling: 0.000514
training loss: tensor(0.8881) feature loss: tensor(0.2909)
Local adapation with distilling: 0.000514
training loss: tensor(0.6667) feature loss: tensor(0.2754)
Global Model Acc on global data: 0.5722 length of data: 10000
-------------Round number:  28  -------------
selected users: [67, 14, 0, 86, 13, 18, 30, 36, 52, 95]
random features: torch.Size([94, 16, 32, 32]) torch.Size([94])
random features: torch.Size([99, 16, 32, 32]) torch.Size([99])
random features: torch.Size([99, 16, 32, 32]) torch.Size([99])
random features: torch.Size([106, 16, 32, 32]) torch.Size([106])
random features: torch.Size([101, 16, 32, 32]) torch.Size([101])
random features: torch.Size([99, 16, 32, 32]) torch.Size([99])
random features: torch.Size([95, 16, 32, 32]) torch.Size([95])
random features: torch.Size([101, 16, 32, 32]) torch.Size([101])
random features: torch.Size([102, 16, 32, 32]) torch.Size([102])
random features: torch.Size([100, 16, 32, 32]) torch.Size([100])
all data: 996
Local adapation with distilling: 0.000496
training loss: tensor(0.5987) feature loss: tensor(0.2801)
Local adapation with distilling: 0.000496
training loss: tensor(0.5544) feature loss: tensor(0.2672)
Local adapation with distilling: 0.000496
training loss: tensor(0.6005) feature loss: tensor(0.2766)
Local adapation with distilling: 0.000496
training loss: tensor(0.5959) feature loss: tensor(0.2868)
Local adapation with distilling: 0.000496
training loss: tensor(0.6291) feature loss: tensor(0.2721)
Local adapation with distilling: 0.000496
training loss: tensor(0.6593) feature loss: tensor(0.2895)
Local adapation with distilling: 0.000496
training loss: tensor(0.6494) feature loss: tensor(0.2894)
Local adapation with distilling: 0.000496
training loss: tensor(0.5787) feature loss: tensor(0.2976)
Local adapation with distilling: 0.000496
training loss: tensor(0.9263) feature loss: tensor(0.2976)
Local adapation with distilling: 0.000496
training loss: tensor(0.5778) feature loss: tensor(0.2836)
Global Model Acc on global data: 0.6026 length of data: 10000
save a model
-------------Round number:  29  -------------
selected users: [73, 8, 10, 7, 19, 71, 92, 25, 38, 12]
random features: torch.Size([104, 16, 32, 32]) torch.Size([104])
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([93, 16, 32, 32]) torch.Size([93])
random features: torch.Size([95, 16, 32, 32]) torch.Size([95])
random features: torch.Size([100, 16, 32, 32]) torch.Size([100])
random features: torch.Size([101, 16, 32, 32]) torch.Size([101])
random features: torch.Size([93, 16, 32, 32]) torch.Size([93])
random features: torch.Size([100, 16, 32, 32]) torch.Size([100])
random features: torch.Size([109, 16, 32, 32]) torch.Size([109])
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
all data: 987
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.6247) feature loss: tensor(0.2667)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.5918) feature loss: tensor(0.2744)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.6753) feature loss: tensor(0.2728)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.6226) feature loss: tensor(0.2666)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.6356) feature loss: tensor(0.2626)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.5624) feature loss: tensor(0.2633)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.7006) feature loss: tensor(0.2571)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.6149) feature loss: tensor(0.2669)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.5924) feature loss: tensor(0.2765)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.6126) feature loss: tensor(0.2693)
Global Model Acc on global data: 0.6181 length of data: 10000
save a model
-------------Round number:  30  -------------
selected users: [20, 91, 34, 52, 8, 74, 21, 88, 80, 89]
random features: torch.Size([95, 16, 32, 32]) torch.Size([95])
random features: torch.Size([105, 16, 32, 32]) torch.Size([105])
random features: torch.Size([95, 16, 32, 32]) torch.Size([95])
random features: torch.Size([102, 16, 32, 32]) torch.Size([102])
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([94, 16, 32, 32]) torch.Size([94])
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([108, 16, 32, 32]) torch.Size([108])
all data: 983
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.5167) feature loss: tensor(0.2335)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.5251) feature loss: tensor(0.2355)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.4859) feature loss: tensor(0.2416)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.7024) feature loss: tensor(0.2447)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.4696) feature loss: tensor(0.2470)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.4628) feature loss: tensor(0.2330)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.4904) feature loss: tensor(0.2490)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.4699) feature loss: tensor(0.2265)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.5296) feature loss: tensor(0.2387)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.4947) feature loss: tensor(0.2504)
Global Model Acc on global data: 0.6006 length of data: 10000
-------------Round number:  31  -------------
selected users: [17, 33, 76, 3, 56, 0, 37, 8, 60, 67]
random features: torch.Size([107, 16, 32, 32]) torch.Size([107])
random features: torch.Size([97, 16, 32, 32]) torch.Size([97])
random features: torch.Size([106, 16, 32, 32]) torch.Size([106])
random features: torch.Size([106, 16, 32, 32]) torch.Size([106])
random features: torch.Size([110, 16, 32, 32]) torch.Size([110])
random features: torch.Size([99, 16, 32, 32]) torch.Size([99])
random features: torch.Size([101, 16, 32, 32]) torch.Size([101])
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([94, 16, 32, 32]) torch.Size([94])
all data: 1012
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.5302) feature loss: tensor(0.2346)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.4721) feature loss: tensor(0.2219)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.5514) feature loss: tensor(0.2208)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.5390) feature loss: tensor(0.2413)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.5064) feature loss: tensor(0.2504)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.4863) feature loss: tensor(0.2336)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.4787) feature loss: tensor(0.2270)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.4712) feature loss: tensor(0.2366)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.5744) feature loss: tensor(0.2359)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.4858) feature loss: tensor(0.2362)
Global Model Acc on global data: 0.5966 length of data: 10000
-------------Round number:  32  -------------
selected users: [22, 39, 85, 97, 55, 33, 80, 13, 27, 96]
random features: torch.Size([102, 16, 32, 32]) torch.Size([102])
random features: torch.Size([103, 16, 32, 32]) torch.Size([103])
random features: torch.Size([100, 16, 32, 32]) torch.Size([100])
random features: torch.Size([95, 16, 32, 32]) torch.Size([95])
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([97, 16, 32, 32]) torch.Size([97])
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([101, 16, 32, 32]) torch.Size([101])
random features: torch.Size([97, 16, 32, 32]) torch.Size([97])
random features: torch.Size([102, 16, 32, 32]) torch.Size([102])
all data: 989
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(1.1936) feature loss: tensor(0.3214)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.8114) feature loss: tensor(0.3292)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.6392) feature loss: tensor(0.2989)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.6951) feature loss: tensor(0.3375)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.7055) feature loss: tensor(0.3057)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.5908) feature loss: tensor(0.2940)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.6521) feature loss: tensor(0.3076)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.6816) feature loss: tensor(0.3044)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.7075) feature loss: tensor(0.2845)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(1.0391) feature loss: tensor(0.3086)
Global Model Acc on global data: 0.613 length of data: 10000
-------------Round number:  33  -------------
selected users: [56, 90, 95, 82, 60, 71, 6, 81, 2, 70]
random features: torch.Size([110, 16, 32, 32]) torch.Size([110])
random features: torch.Size([95, 16, 32, 32]) torch.Size([95])
random features: torch.Size([100, 16, 32, 32]) torch.Size([100])
random features: torch.Size([92, 16, 32, 32]) torch.Size([92])
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([101, 16, 32, 32]) torch.Size([101])
random features: torch.Size([104, 16, 32, 32]) torch.Size([104])
random features: torch.Size([102, 16, 32, 32]) torch.Size([102])
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
all data: 992
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.5001) feature loss: tensor(0.2705)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.6015) feature loss: tensor(0.2944)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.5215) feature loss: tensor(0.3015)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.5390) feature loss: tensor(0.2811)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.5583) feature loss: tensor(0.2863)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.5075) feature loss: tensor(0.2678)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.5984) feature loss: tensor(0.2632)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(1.0587) feature loss: tensor(0.2765)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.5518) feature loss: tensor(0.2994)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.5408) feature loss: tensor(0.2860)
Global Model Acc on global data: 0.6145 length of data: 10000
-------------Round number:  34  -------------
selected users: [14, 74, 15, 4, 32, 59, 91, 10, 50, 53]
random features: torch.Size([99, 16, 32, 32]) torch.Size([99])
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([103, 16, 32, 32]) torch.Size([103])
random features: torch.Size([98, 16, 32, 32]) torch.Size([98])
random features: torch.Size([99, 16, 32, 32]) torch.Size([99])
random features: torch.Size([103, 16, 32, 32]) torch.Size([103])
random features: torch.Size([105, 16, 32, 32]) torch.Size([105])
random features: torch.Size([93, 16, 32, 32]) torch.Size([93])
random features: torch.Size([98, 16, 32, 32]) torch.Size([98])
random features: torch.Size([115, 16, 32, 32]) torch.Size([115])
all data: 1009
Local adapation with distilling: 0.000388
training loss: tensor(0.6101) feature loss: tensor(0.2985)
Local adapation with distilling: 0.000388
training loss: tensor(0.6200) feature loss: tensor(0.3012)
Local adapation with distilling: 0.000388
training loss: tensor(0.8038) feature loss: tensor(0.3089)
Local adapation with distilling: 0.000388
training loss: tensor(0.7272) feature loss: tensor(0.2921)
Local adapation with distilling: 0.000388
training loss: tensor(0.7861) feature loss: tensor(0.3041)
Local adapation with distilling: 0.000388
training loss: tensor(0.7330) feature loss: tensor(0.3186)
Local adapation with distilling: 0.000388
training loss: tensor(0.6451) feature loss: tensor(0.2909)
Local adapation with distilling: 0.000388
training loss: tensor(0.7488) feature loss: tensor(0.2967)
Local adapation with distilling: 0.000388
training loss: tensor(0.6187) feature loss: tensor(0.2826)
Local adapation with distilling: 0.000388
training loss: tensor(0.6549) feature loss: tensor(0.2980)
Global Model Acc on global data: 0.6238 length of data: 10000
save a model
-------------Round number:  35  -------------
selected users: [40, 71, 98, 27, 70, 31, 10, 24, 51, 35]
random features: torch.Size([92, 16, 32, 32]) torch.Size([92])
random features: torch.Size([101, 16, 32, 32]) torch.Size([101])
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([97, 16, 32, 32]) torch.Size([97])
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([97, 16, 32, 32]) torch.Size([97])
random features: torch.Size([93, 16, 32, 32]) torch.Size([93])
random features: torch.Size([98, 16, 32, 32]) torch.Size([98])
random features: torch.Size([97, 16, 32, 32]) torch.Size([97])
random features: torch.Size([106, 16, 32, 32]) torch.Size([106])
all data: 973
Local adapation with distilling: 0.00037
training loss: tensor(0.5556) feature loss: tensor(0.2566)
Local adapation with distilling: 0.00037
training loss: tensor(0.5036) feature loss: tensor(0.2770)
Local adapation with distilling: 0.00037
training loss: tensor(0.5138) feature loss: tensor(0.2524)
Local adapation with distilling: 0.00037
training loss: tensor(0.5711) feature loss: tensor(0.2440)
Local adapation with distilling: 0.00037
training loss: tensor(0.5216) feature loss: tensor(0.2654)
Local adapation with distilling: 0.00037
training loss: tensor(0.5536) feature loss: tensor(0.2776)
Local adapation with distilling: 0.00037
training loss: tensor(0.5270) feature loss: tensor(0.2726)
Local adapation with distilling: 0.00037
training loss: tensor(0.6201) feature loss: tensor(0.2789)
Local adapation with distilling: 0.00037
training loss: tensor(0.5597) feature loss: tensor(0.2587)
Local adapation with distilling: 0.00037
training loss: tensor(0.6070) feature loss: tensor(0.2643)
Global Model Acc on global data: 0.6087 length of data: 10000
-------------Round number:  36  -------------
selected users: [59, 42, 2, 27, 28, 75, 58, 68, 52, 74]
random features: torch.Size([103, 16, 32, 32]) torch.Size([103])
random features: torch.Size([95, 16, 32, 32]) torch.Size([95])
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([97, 16, 32, 32]) torch.Size([97])
random features: torch.Size([102, 16, 32, 32]) torch.Size([102])
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([101, 16, 32, 32]) torch.Size([101])
random features: torch.Size([103, 16, 32, 32]) torch.Size([103])
random features: torch.Size([102, 16, 32, 32]) torch.Size([102])
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
all data: 991
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.5395) feature loss: tensor(0.2596)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.5773) feature loss: tensor(0.2308)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.5179) feature loss: tensor(0.2433)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.5172) feature loss: tensor(0.2292)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.7173) feature loss: tensor(0.2699)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.6006) feature loss: tensor(0.2534)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.5524) feature loss: tensor(0.2600)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.5669) feature loss: tensor(0.2530)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.6731) feature loss: tensor(0.2754)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.4566) feature loss: tensor(0.2329)
Global Model Acc on global data: 0.6321 length of data: 10000
save a model
-------------Round number:  37  -------------
selected users: [61, 49, 86, 78, 5, 91, 81, 82, 89, 18]
random features: torch.Size([101, 16, 32, 32]) torch.Size([101])
random features: torch.Size([99, 16, 32, 32]) torch.Size([99])
random features: torch.Size([106, 16, 32, 32]) torch.Size([106])
random features: torch.Size([104, 16, 32, 32]) torch.Size([104])
random features: torch.Size([102, 16, 32, 32]) torch.Size([102])
random features: torch.Size([105, 16, 32, 32]) torch.Size([105])
random features: torch.Size([102, 16, 32, 32]) torch.Size([102])
random features: torch.Size([92, 16, 32, 32]) torch.Size([92])
random features: torch.Size([108, 16, 32, 32]) torch.Size([108])
random features: torch.Size([99, 16, 32, 32]) torch.Size([99])
all data: 1018
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.5463) feature loss: tensor(0.2265)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.5771) feature loss: tensor(0.2337)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.5325) feature loss: tensor(0.2301)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.6447) feature loss: tensor(0.2394)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.5995) feature loss: tensor(0.2201)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.5417) feature loss: tensor(0.2246)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.9723) feature loss: tensor(0.2278)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.5211) feature loss: tensor(0.2135)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.5445) feature loss: tensor(0.2289)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.6118) feature loss: tensor(0.2316)
Global Model Acc on global data: 0.636 length of data: 10000
save a model
-------------Round number:  38  -------------
selected users: [40, 73, 49, 45, 64, 16, 69, 17, 72, 66]
random features: torch.Size([92, 16, 32, 32]) torch.Size([92])
random features: torch.Size([104, 16, 32, 32]) torch.Size([104])
random features: torch.Size([99, 16, 32, 32]) torch.Size([99])
random features: torch.Size([100, 16, 32, 32]) torch.Size([100])
random features: torch.Size([98, 16, 32, 32]) torch.Size([98])
random features: torch.Size([106, 16, 32, 32]) torch.Size([106])
random features: torch.Size([98, 16, 32, 32]) torch.Size([98])
random features: torch.Size([107, 16, 32, 32]) torch.Size([107])
random features: torch.Size([115, 16, 32, 32]) torch.Size([115])
random features: torch.Size([108, 16, 32, 32]) torch.Size([108])
all data: 1027
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.7240) feature loss: tensor(0.4097)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.7348) feature loss: tensor(0.3286)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.6810) feature loss: tensor(0.2976)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.6559) feature loss: tensor(0.2737)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.8053) feature loss: tensor(0.2925)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.7807) feature loss: tensor(0.4129)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.6912) feature loss: tensor(0.4061)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.5742) feature loss: tensor(0.2905)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.6052) feature loss: tensor(0.2670)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.6547) feature loss: tensor(0.3140)
Global Model Acc on global data: 0.629 length of data: 10000
-------------Round number:  39  -------------
selected users: [22, 53, 84, 57, 87, 58, 29, 21, 85, 79]
random features: torch.Size([102, 16, 32, 32]) torch.Size([102])
random features: torch.Size([115, 16, 32, 32]) torch.Size([115])
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([101, 16, 32, 32]) torch.Size([101])
random features: torch.Size([95, 16, 32, 32]) torch.Size([95])
random features: torch.Size([101, 16, 32, 32]) torch.Size([101])
random features: torch.Size([109, 16, 32, 32]) torch.Size([109])
random features: torch.Size([94, 16, 32, 32]) torch.Size([94])
random features: torch.Size([100, 16, 32, 32]) torch.Size([100])
random features: torch.Size([99, 16, 32, 32]) torch.Size([99])
all data: 1012
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.8576) feature loss: tensor(0.2328)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.5204) feature loss: tensor(0.2484)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.6338) feature loss: tensor(0.2684)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.6116) feature loss: tensor(0.2350)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.6319) feature loss: tensor(0.2611)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.5550) feature loss: tensor(0.2320)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.5490) feature loss: tensor(0.2569)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.6136) feature loss: tensor(0.2627)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.5660) feature loss: tensor(0.2333)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.6169) feature loss: tensor(0.2450)
Global Model Acc on global data: 0.6349 length of data: 10000
-------------Round number:  40  -------------
selected users: [79, 75, 63, 15, 38, 11, 40, 45, 39, 62]
random features: torch.Size([99, 16, 32, 32]) torch.Size([99])
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([101, 16, 32, 32]) torch.Size([101])
random features: torch.Size([103, 16, 32, 32]) torch.Size([103])
random features: torch.Size([109, 16, 32, 32]) torch.Size([109])
random features: torch.Size([106, 16, 32, 32]) torch.Size([106])
random features: torch.Size([92, 16, 32, 32]) torch.Size([92])
random features: torch.Size([100, 16, 32, 32]) torch.Size([100])
random features: torch.Size([103, 16, 32, 32]) torch.Size([103])
random features: torch.Size([93, 16, 32, 32]) torch.Size([93])
all data: 1002
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.4848) feature loss: tensor(0.2195)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.5292) feature loss: tensor(0.2306)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.4978) feature loss: tensor(0.2094)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.6010) feature loss: tensor(0.2287)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.4732) feature loss: tensor(0.2167)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.5061) feature loss: tensor(0.2220)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.5366) feature loss: tensor(0.2184)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.4789) feature loss: tensor(0.2239)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.5145) feature loss: tensor(0.2157)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.5786) feature loss: tensor(0.2411)
Global Model Acc on global data: 0.6426 length of data: 10000
save a model
-------------Round number:  41  -------------
selected users: [42, 94, 37, 6, 79, 32, 24, 0, 33, 93]
random features: torch.Size([95, 16, 32, 32]) torch.Size([95])
random features: torch.Size([101, 16, 32, 32]) torch.Size([101])
random features: torch.Size([101, 16, 32, 32]) torch.Size([101])
random features: torch.Size([104, 16, 32, 32]) torch.Size([104])
random features: torch.Size([99, 16, 32, 32]) torch.Size([99])
random features: torch.Size([99, 16, 32, 32]) torch.Size([99])
random features: torch.Size([98, 16, 32, 32]) torch.Size([98])
random features: torch.Size([99, 16, 32, 32]) torch.Size([99])
random features: torch.Size([97, 16, 32, 32]) torch.Size([97])
random features: torch.Size([104, 16, 32, 32]) torch.Size([104])
all data: 997
Local adapation with distilling: 0.000262
training loss: tensor(0.5824) feature loss: tensor(0.2296)
Local adapation with distilling: 0.000262
training loss: tensor(0.6404) feature loss: tensor(0.2173)
Local adapation with distilling: 0.000262
training loss: tensor(0.5595) feature loss: tensor(0.2385)
Local adapation with distilling: 0.000262
training loss: tensor(0.6150) feature loss: tensor(0.2193)
Local adapation with distilling: 0.000262
training loss: tensor(0.5448) feature loss: tensor(0.2166)
Local adapation with distilling: 0.000262
training loss: tensor(0.6522) feature loss: tensor(0.2163)
Local adapation with distilling: 0.000262
training loss: tensor(0.5935) feature loss: tensor(0.2221)
Local adapation with distilling: 0.000262
training loss: tensor(0.5400) feature loss: tensor(0.2134)
Local adapation with distilling: 0.000262
training loss: tensor(0.5698) feature loss: tensor(0.2373)
Local adapation with distilling: 0.000262
training loss: tensor(0.6957) feature loss: tensor(0.2373)
Global Model Acc on global data: 0.6406 length of data: 10000
-------------Round number:  42  -------------
selected users: [83, 53, 70, 45, 44, 39, 22, 80, 10, 0]
random features: torch.Size([101, 16, 32, 32]) torch.Size([101])
random features: torch.Size([115, 16, 32, 32]) torch.Size([115])
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([100, 16, 32, 32]) torch.Size([100])
random features: torch.Size([94, 16, 32, 32]) torch.Size([94])
random features: torch.Size([103, 16, 32, 32]) torch.Size([103])
random features: torch.Size([102, 16, 32, 32]) torch.Size([102])
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([93, 16, 32, 32]) torch.Size([93])
random features: torch.Size([99, 16, 32, 32]) torch.Size([99])
all data: 999
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.5166) feature loss: tensor(0.2096)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.4398) feature loss: tensor(0.2360)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.4673) feature loss: tensor(0.2071)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.4732) feature loss: tensor(0.1989)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.4973) feature loss: tensor(0.2208)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.4819) feature loss: tensor(0.1958)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.6607) feature loss: tensor(0.2081)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.5077) feature loss: tensor(0.2267)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.5111) feature loss: tensor(0.2344)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.4757) feature loss: tensor(0.2047)
Global Model Acc on global data: 0.6249 length of data: 10000
-------------Round number:  43  -------------
selected users: [20, 2, 15, 22, 57, 91, 69, 55, 11, 79]
random features: torch.Size([95, 16, 32, 32]) torch.Size([95])
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([103, 16, 32, 32]) torch.Size([103])
random features: torch.Size([102, 16, 32, 32]) torch.Size([102])
random features: torch.Size([101, 16, 32, 32]) torch.Size([101])
random features: torch.Size([105, 16, 32, 32]) torch.Size([105])
random features: torch.Size([98, 16, 32, 32]) torch.Size([98])
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([106, 16, 32, 32]) torch.Size([106])
random features: torch.Size([99, 16, 32, 32]) torch.Size([99])
all data: 1001
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.5046) feature loss: tensor(0.1958)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.4837) feature loss: tensor(0.2101)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.5353) feature loss: tensor(0.2010)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.6023) feature loss: tensor(0.1954)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.5019) feature loss: tensor(0.2055)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.4355) feature loss: tensor(0.1991)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.4460) feature loss: tensor(0.1922)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.4832) feature loss: tensor(0.1962)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.4734) feature loss: tensor(0.2083)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.4239) feature loss: tensor(0.1879)
Global Model Acc on global data: 0.635 length of data: 10000
-------------Round number:  44  -------------
selected users: [42, 54, 27, 93, 39, 65, 7, 26, 24, 60]
random features: torch.Size([95, 16, 32, 32]) torch.Size([95])
random features: torch.Size([104, 16, 32, 32]) torch.Size([104])
random features: torch.Size([97, 16, 32, 32]) torch.Size([97])
random features: torch.Size([104, 16, 32, 32]) torch.Size([104])
random features: torch.Size([103, 16, 32, 32]) torch.Size([103])
random features: torch.Size([99, 16, 32, 32]) torch.Size([99])
random features: torch.Size([95, 16, 32, 32]) torch.Size([95])
random features: torch.Size([105, 16, 32, 32]) torch.Size([105])
random features: torch.Size([98, 16, 32, 32]) torch.Size([98])
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
all data: 996
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.5059) feature loss: tensor(0.1950)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.7104) feature loss: tensor(0.2022)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.5516) feature loss: tensor(0.2076)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.5668) feature loss: tensor(0.2139)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.4811) feature loss: tensor(0.2033)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.5262) feature loss: tensor(0.1986)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.5639) feature loss: tensor(0.2009)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.5266) feature loss: tensor(0.2202)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.4881) feature loss: tensor(0.1908)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.5724) feature loss: tensor(0.2304)
Global Model Acc on global data: 0.6356 length of data: 10000
-------------Round number:  45  -------------
selected users: [0, 1, 62, 76, 37, 99, 78, 38, 2, 84]
random features: torch.Size([99, 16, 32, 32]) torch.Size([99])
random features: torch.Size([104, 16, 32, 32]) torch.Size([104])
random features: torch.Size([93, 16, 32, 32]) torch.Size([93])
random features: torch.Size([106, 16, 32, 32]) torch.Size([106])
random features: torch.Size([101, 16, 32, 32]) torch.Size([101])
random features: torch.Size([93, 16, 32, 32]) torch.Size([93])
random features: torch.Size([104, 16, 32, 32]) torch.Size([104])
random features: torch.Size([109, 16, 32, 32]) torch.Size([109])
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
all data: 1001
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.5524) feature loss: tensor(0.2540)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.6385) feature loss: tensor(0.2408)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.6178) feature loss: tensor(0.2224)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.6678) feature loss: tensor(0.2298)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.5483) feature loss: tensor(0.2188)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.6084) feature loss: tensor(0.2202)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.6509) feature loss: tensor(0.2263)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.5271) feature loss: tensor(0.2214)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.5598) feature loss: tensor(0.2223)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.6116) feature loss: tensor(0.2349)
Global Model Acc on global data: 0.6449 length of data: 10000
save a model
-------------Round number:  46  -------------
selected users: [71, 33, 37, 10, 44, 34, 24, 98, 73, 95]
random features: torch.Size([101, 16, 32, 32]) torch.Size([101])
random features: torch.Size([97, 16, 32, 32]) torch.Size([97])
random features: torch.Size([101, 16, 32, 32]) torch.Size([101])
random features: torch.Size([93, 16, 32, 32]) torch.Size([93])
random features: torch.Size([94, 16, 32, 32]) torch.Size([94])
random features: torch.Size([95, 16, 32, 32]) torch.Size([95])
random features: torch.Size([98, 16, 32, 32]) torch.Size([98])
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([104, 16, 32, 32]) torch.Size([104])
random features: torch.Size([100, 16, 32, 32]) torch.Size([100])
all data: 979
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.3798) feature loss: tensor(0.1865)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.3901) feature loss: tensor(0.1885)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.3818) feature loss: tensor(0.1966)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.4623) feature loss: tensor(0.2432)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.4367) feature loss: tensor(0.1980)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.4268) feature loss: tensor(0.1827)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.4072) feature loss: tensor(0.1825)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.4141) feature loss: tensor(0.1934)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.4622) feature loss: tensor(0.1887)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.4132) feature loss: tensor(0.1830)
Global Model Acc on global data: 0.6453 length of data: 10000
save a model
-------------Round number:  47  -------------
selected users: [17, 90, 94, 86, 63, 5, 38, 14, 40, 47]
random features: torch.Size([107, 16, 32, 32]) torch.Size([107])
random features: torch.Size([95, 16, 32, 32]) torch.Size([95])
random features: torch.Size([101, 16, 32, 32]) torch.Size([101])
random features: torch.Size([106, 16, 32, 32]) torch.Size([106])
random features: torch.Size([101, 16, 32, 32]) torch.Size([101])
random features: torch.Size([102, 16, 32, 32]) torch.Size([102])
random features: torch.Size([109, 16, 32, 32]) torch.Size([109])
random features: torch.Size([99, 16, 32, 32]) torch.Size([99])
random features: torch.Size([92, 16, 32, 32]) torch.Size([92])
random features: torch.Size([93, 16, 32, 32]) torch.Size([93])
all data: 1005
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.4776) feature loss: tensor(0.1820)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.6094) feature loss: tensor(0.1840)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.5067) feature loss: tensor(0.1808)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.4911) feature loss: tensor(0.1945)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.4902) feature loss: tensor(0.1959)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.5604) feature loss: tensor(0.1740)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.4511) feature loss: tensor(0.1964)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.4599) feature loss: tensor(0.1756)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.5079) feature loss: tensor(0.1803)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.5018) feature loss: tensor(0.1821)
Global Model Acc on global data: 0.639 length of data: 10000
-------------Round number:  48  -------------
selected users: [93, 5, 71, 9, 11, 79, 69, 8, 59, 63]
random features: torch.Size([104, 16, 32, 32]) torch.Size([104])
random features: torch.Size([102, 16, 32, 32]) torch.Size([102])
random features: torch.Size([101, 16, 32, 32]) torch.Size([101])
random features: torch.Size([102, 16, 32, 32]) torch.Size([102])
random features: torch.Size([106, 16, 32, 32]) torch.Size([106])
random features: torch.Size([99, 16, 32, 32]) torch.Size([99])
random features: torch.Size([98, 16, 32, 32]) torch.Size([98])
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([103, 16, 32, 32]) torch.Size([103])
random features: torch.Size([101, 16, 32, 32]) torch.Size([101])
all data: 1012
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.4343) feature loss: tensor(0.1718)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.4694) feature loss: tensor(0.1838)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.3755) feature loss: tensor(0.1861)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.8524) feature loss: tensor(0.1765)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.4526) feature loss: tensor(0.1822)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.4180) feature loss: tensor(0.1819)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.4415) feature loss: tensor(0.1855)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.4495) feature loss: tensor(0.1836)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.5036) feature loss: tensor(0.1824)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.4120) feature loss: tensor(0.1688)
Global Model Acc on global data: 0.6355 length of data: 10000
-------------Round number:  49  -------------
selected users: [76, 25, 28, 75, 81, 47, 41, 22, 29, 1]
random features: torch.Size([106, 16, 32, 32]) torch.Size([106])
random features: torch.Size([100, 16, 32, 32]) torch.Size([100])
random features: torch.Size([102, 16, 32, 32]) torch.Size([102])
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([102, 16, 32, 32]) torch.Size([102])
random features: torch.Size([93, 16, 32, 32]) torch.Size([93])
random features: torch.Size([95, 16, 32, 32]) torch.Size([95])
random features: torch.Size([102, 16, 32, 32]) torch.Size([102])
random features: torch.Size([109, 16, 32, 32]) torch.Size([109])
random features: torch.Size([104, 16, 32, 32]) torch.Size([104])
all data: 1009
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.5893) feature loss: tensor(0.1753)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.5292) feature loss: tensor(0.1759)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.7639) feature loss: tensor(0.1675)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.5372) feature loss: tensor(0.1836)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(1.2544) feature loss: tensor(0.1978)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.5055) feature loss: tensor(0.1755)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.5102) feature loss: tensor(0.1872)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.7658) feature loss: tensor(0.1768)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.5031) feature loss: tensor(0.1886)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.4814) feature loss: tensor(0.1763)
Global Model Acc on global data: 0.6369 length of data: 10000
-------------Round number:  50  -------------
selected users: [80, 79, 25, 15, 39, 40, 53, 17, 57, 50]
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([99, 16, 32, 32]) torch.Size([99])
random features: torch.Size([100, 16, 32, 32]) torch.Size([100])
random features: torch.Size([103, 16, 32, 32]) torch.Size([103])
random features: torch.Size([103, 16, 32, 32]) torch.Size([103])
random features: torch.Size([92, 16, 32, 32]) torch.Size([92])
random features: torch.Size([115, 16, 32, 32]) torch.Size([115])
random features: torch.Size([107, 16, 32, 32]) torch.Size([107])
random features: torch.Size([101, 16, 32, 32]) torch.Size([101])
random features: torch.Size([98, 16, 32, 32]) torch.Size([98])
all data: 1014
Local adapation with distilling: 0.0001
training loss: tensor(0.4884) feature loss: tensor(0.1751)
Local adapation with distilling: 0.0001
training loss: tensor(0.3953) feature loss: tensor(0.1652)
Local adapation with distilling: 0.0001
training loss: tensor(0.4437) feature loss: tensor(0.1587)
Local adapation with distilling: 0.0001
training loss: tensor(0.6421) feature loss: tensor(0.1515)
Local adapation with distilling: 0.0001
training loss: tensor(0.4217) feature loss: tensor(0.1529)
Local adapation with distilling: 0.0001
training loss: tensor(0.4862) feature loss: tensor(0.1632)
Local adapation with distilling: 0.0001
training loss: tensor(0.4125) feature loss: tensor(0.1667)
Local adapation with distilling: 0.0001
training loss: tensor(0.4012) feature loss: tensor(0.1436)
Local adapation with distilling: 0.0001
training loss: tensor(0.4725) feature loss: tensor(0.1466)
Local adapation with distilling: 0.0001
training loss: tensor(0.5607) feature loss: tensor(0.1914)
Global Model Acc on global data: 0.6379 length of data: 10000
-------------Round number:  51  -------------
selected users: [71, 43, 11, 83, 78, 19, 80, 4, 79, 75]
random features: torch.Size([101, 16, 32, 32]) torch.Size([101])
random features: torch.Size([98, 16, 32, 32]) torch.Size([98])
random features: torch.Size([106, 16, 32, 32]) torch.Size([106])
random features: torch.Size([101, 16, 32, 32]) torch.Size([101])
random features: torch.Size([104, 16, 32, 32]) torch.Size([104])
random features: torch.Size([100, 16, 32, 32]) torch.Size([100])
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([98, 16, 32, 32]) torch.Size([98])
random features: torch.Size([99, 16, 32, 32]) torch.Size([99])
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
all data: 999
Local adapation with distilling: 0.0001
training loss: tensor(0.4452) feature loss: tensor(0.1684)
Local adapation with distilling: 0.0001
training loss: tensor(0.5669) feature loss: tensor(0.1926)
Local adapation with distilling: 0.0001
training loss: tensor(0.5037) feature loss: tensor(0.1877)
Local adapation with distilling: 0.0001
training loss: tensor(0.6037) feature loss: tensor(0.2062)
Local adapation with distilling: 0.0001
training loss: tensor(0.5643) feature loss: tensor(0.1898)
Local adapation with distilling: 0.0001
training loss: tensor(0.5905) feature loss: tensor(0.1928)
Local adapation with distilling: 0.0001
training loss: tensor(0.5028) feature loss: tensor(0.1909)
Local adapation with distilling: 0.0001
training loss: tensor(0.5888) feature loss: tensor(0.1820)
Local adapation with distilling: 0.0001
training loss: tensor(0.4602) feature loss: tensor(0.1757)
Local adapation with distilling: 0.0001
training loss: tensor(0.5538) feature loss: tensor(0.1822)
Global Model Acc on global data: 0.6332 length of data: 10000
-------------Round number:  52  -------------
selected users: [82, 8, 44, 19, 2, 73, 37, 89, 67, 18]
random features: torch.Size([92, 16, 32, 32]) torch.Size([92])
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([94, 16, 32, 32]) torch.Size([94])
random features: torch.Size([100, 16, 32, 32]) torch.Size([100])
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([104, 16, 32, 32]) torch.Size([104])
random features: torch.Size([101, 16, 32, 32]) torch.Size([101])
random features: torch.Size([108, 16, 32, 32]) torch.Size([108])
random features: torch.Size([94, 16, 32, 32]) torch.Size([94])
random features: torch.Size([99, 16, 32, 32]) torch.Size([99])
all data: 984
Local adapation with distilling: 0.0001
training loss: tensor(0.5384) feature loss: tensor(0.1822)
Local adapation with distilling: 0.0001
training loss: tensor(0.4684) feature loss: tensor(0.1921)
Local adapation with distilling: 0.0001
training loss: tensor(0.5138) feature loss: tensor(0.1698)
Local adapation with distilling: 0.0001
training loss: tensor(0.4868) feature loss: tensor(0.1652)
Local adapation with distilling: 0.0001
training loss: tensor(0.4727) feature loss: tensor(0.1779)
Local adapation with distilling: 0.0001
training loss: tensor(0.5301) feature loss: tensor(0.1752)
Local adapation with distilling: 0.0001
training loss: tensor(0.4255) feature loss: tensor(0.1559)
Local adapation with distilling: 0.0001
training loss: tensor(0.4698) feature loss: tensor(0.1725)
Local adapation with distilling: 0.0001
training loss: tensor(0.5228) feature loss: tensor(0.1714)
Local adapation with distilling: 0.0001
training loss: tensor(0.6233) feature loss: tensor(0.1820)
Global Model Acc on global data: 0.635 length of data: 10000
-------------Round number:  53  -------------
selected users: [19, 78, 64, 3, 71, 32, 68, 42, 55, 97]
random features: torch.Size([100, 16, 32, 32]) torch.Size([100])
random features: torch.Size([104, 16, 32, 32]) torch.Size([104])
random features: torch.Size([98, 16, 32, 32]) torch.Size([98])
random features: torch.Size([106, 16, 32, 32]) torch.Size([106])
random features: torch.Size([101, 16, 32, 32]) torch.Size([101])
random features: torch.Size([99, 16, 32, 32]) torch.Size([99])
random features: torch.Size([103, 16, 32, 32]) torch.Size([103])
random features: torch.Size([95, 16, 32, 32]) torch.Size([95])
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([95, 16, 32, 32]) torch.Size([95])
all data: 997
Local adapation with distilling: 0.0001
training loss: tensor(0.5348) feature loss: tensor(0.1914)
Local adapation with distilling: 0.0001
training loss: tensor(0.6080) feature loss: tensor(0.2172)
Local adapation with distilling: 0.0001
training loss: tensor(0.7561) feature loss: tensor(0.2067)
Local adapation with distilling: 0.0001
training loss: tensor(0.6228) feature loss: tensor(0.1941)
Local adapation with distilling: 0.0001
training loss: tensor(0.4647) feature loss: tensor(0.1788)
Local adapation with distilling: 0.0001
training loss: tensor(0.6689) feature loss: tensor(0.2211)
Local adapation with distilling: 0.0001
training loss: tensor(0.6846) feature loss: tensor(0.2044)
Local adapation with distilling: 0.0001
training loss: tensor(0.5545) feature loss: tensor(0.1842)
Local adapation with distilling: 0.0001
training loss: tensor(0.6068) feature loss: tensor(0.2060)
Local adapation with distilling: 0.0001
training loss: tensor(0.6598) feature loss: tensor(0.2265)
Global Model Acc on global data: 0.6301 length of data: 10000
-------------Round number:  54  -------------
selected users: [36, 70, 48, 94, 81, 46, 38, 29, 34, 22]
random features: torch.Size([101, 16, 32, 32]) torch.Size([101])
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([95, 16, 32, 32]) torch.Size([95])
random features: torch.Size([101, 16, 32, 32]) torch.Size([101])
random features: torch.Size([102, 16, 32, 32]) torch.Size([102])
random features: torch.Size([103, 16, 32, 32]) torch.Size([103])
random features: torch.Size([109, 16, 32, 32]) torch.Size([109])
random features: torch.Size([109, 16, 32, 32]) torch.Size([109])
random features: torch.Size([95, 16, 32, 32]) torch.Size([95])
random features: torch.Size([102, 16, 32, 32]) torch.Size([102])
all data: 1013
Local adapation with distilling: 0.0001
training loss: tensor(0.4889) feature loss: tensor(0.2017)
Local adapation with distilling: 0.0001
training loss: tensor(0.4586) feature loss: tensor(0.1901)
Local adapation with distilling: 0.0001
training loss: tensor(0.6201) feature loss: tensor(0.1848)
Local adapation with distilling: 0.0001
training loss: tensor(0.4427) feature loss: tensor(0.1671)
Local adapation with distilling: 0.0001
training loss: tensor(1.1671) feature loss: tensor(0.1915)
Local adapation with distilling: 0.0001
training loss: tensor(0.4596) feature loss: tensor(0.1734)
Local adapation with distilling: 0.0001
training loss: tensor(0.4217) feature loss: tensor(0.1861)
Local adapation with distilling: 0.0001
training loss: tensor(0.4189) feature loss: tensor(0.1802)
Local adapation with distilling: 0.0001
training loss: tensor(0.4484) feature loss: tensor(0.1763)
Local adapation with distilling: 0.0001
training loss: tensor(0.7069) feature loss: tensor(0.1652)
Global Model Acc on global data: 0.6375 length of data: 10000
-------------Round number:  55  -------------
selected users: [28, 92, 98, 95, 84, 34, 38, 76, 17, 78]
random features: torch.Size([102, 16, 32, 32]) torch.Size([102])
random features: torch.Size([93, 16, 32, 32]) torch.Size([93])
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([100, 16, 32, 32]) torch.Size([100])
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([95, 16, 32, 32]) torch.Size([95])
random features: torch.Size([109, 16, 32, 32]) torch.Size([109])
random features: torch.Size([106, 16, 32, 32]) torch.Size([106])
random features: torch.Size([107, 16, 32, 32]) torch.Size([107])
random features: torch.Size([104, 16, 32, 32]) torch.Size([104])
all data: 1008
Local adapation with distilling: 0.0001
training loss: tensor(0.6413) feature loss: tensor(0.1989)
Local adapation with distilling: 0.0001
training loss: tensor(0.6749) feature loss: tensor(0.1972)
Local adapation with distilling: 0.0001
training loss: tensor(0.4923) feature loss: tensor(0.1953)
Local adapation with distilling: 0.0001
training loss: tensor(0.4596) feature loss: tensor(0.1732)
Local adapation with distilling: 0.0001
training loss: tensor(0.5463) feature loss: tensor(0.1999)
Local adapation with distilling: 0.0001
training loss: tensor(0.4321) feature loss: tensor(0.1757)
Local adapation with distilling: 0.0001
training loss: tensor(0.4139) feature loss: tensor(0.1867)
Local adapation with distilling: 0.0001
training loss: tensor(0.4927) feature loss: tensor(0.1633)
Local adapation with distilling: 0.0001
training loss: tensor(0.4114) feature loss: tensor(0.1669)
Local adapation with distilling: 0.0001
training loss: tensor(0.4836) feature loss: tensor(0.1955)
Global Model Acc on global data: 0.633 length of data: 10000
-------------Round number:  56  -------------
selected users: [92, 79, 23, 68, 52, 38, 73, 9, 59, 27]
random features: torch.Size([93, 16, 32, 32]) torch.Size([93])
random features: torch.Size([99, 16, 32, 32]) torch.Size([99])
random features: torch.Size([98, 16, 32, 32]) torch.Size([98])
random features: torch.Size([103, 16, 32, 32]) torch.Size([103])
random features: torch.Size([102, 16, 32, 32]) torch.Size([102])
random features: torch.Size([109, 16, 32, 32]) torch.Size([109])
random features: torch.Size([104, 16, 32, 32]) torch.Size([104])
random features: torch.Size([102, 16, 32, 32]) torch.Size([102])
random features: torch.Size([103, 16, 32, 32]) torch.Size([103])
random features: torch.Size([97, 16, 32, 32]) torch.Size([97])
all data: 1010
Local adapation with distilling: 0.0001
training loss: tensor(0.5737) feature loss: tensor(0.1735)
Local adapation with distilling: 0.0001
training loss: tensor(0.4231) feature loss: tensor(0.1725)
Local adapation with distilling: 0.0001
training loss: tensor(0.6642) feature loss: tensor(0.2024)
Local adapation with distilling: 0.0001
training loss: tensor(0.5275) feature loss: tensor(0.1694)
Local adapation with distilling: 0.0001
training loss: tensor(0.8331) feature loss: tensor(0.1849)
Local adapation with distilling: 0.0001
training loss: tensor(0.3859) feature loss: tensor(0.1660)
Local adapation with distilling: 0.0001
training loss: tensor(0.4822) feature loss: tensor(0.1857)
Local adapation with distilling: 0.0001
training loss: tensor(0.7579) feature loss: tensor(0.1819)
Local adapation with distilling: 0.0001
training loss: tensor(0.6487) feature loss: tensor(0.1729)
Local adapation with distilling: 0.0001
training loss: tensor(0.4797) feature loss: tensor(0.1617)
Global Model Acc on global data: 0.6349 length of data: 10000
-------------Round number:  57  -------------
selected users: [52, 17, 41, 3, 8, 98, 59, 20, 67, 7]
random features: torch.Size([102, 16, 32, 32]) torch.Size([102])
random features: torch.Size([107, 16, 32, 32]) torch.Size([107])
random features: torch.Size([95, 16, 32, 32]) torch.Size([95])
random features: torch.Size([106, 16, 32, 32]) torch.Size([106])
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([103, 16, 32, 32]) torch.Size([103])
random features: torch.Size([95, 16, 32, 32]) torch.Size([95])
random features: torch.Size([94, 16, 32, 32]) torch.Size([94])
random features: torch.Size([95, 16, 32, 32]) torch.Size([95])
all data: 989
Local adapation with distilling: 0.0001
training loss: tensor(0.5739) feature loss: tensor(0.1733)
Local adapation with distilling: 0.0001
training loss: tensor(0.3593) feature loss: tensor(0.1550)
Local adapation with distilling: 0.0001
training loss: tensor(0.3722) feature loss: tensor(0.1706)
Local adapation with distilling: 0.0001
training loss: tensor(0.4473) feature loss: tensor(0.1658)
Local adapation with distilling: 0.0001
training loss: tensor(0.3669) feature loss: tensor(0.1672)
Local adapation with distilling: 0.0001
training loss: tensor(0.4009) feature loss: tensor(0.1676)
Local adapation with distilling: 0.0001
training loss: tensor(0.4379) feature loss: tensor(0.1658)
Local adapation with distilling: 0.0001
training loss: tensor(0.4987) feature loss: tensor(0.1791)
Local adapation with distilling: 0.0001
training loss: tensor(0.3846) feature loss: tensor(0.1716)
Local adapation with distilling: 0.0001
training loss: tensor(0.4757) feature loss: tensor(0.1751)
Global Model Acc on global data: 0.6324 length of data: 10000
-------------Round number:  58  -------------
selected users: [43, 58, 8, 31, 70, 45, 69, 95, 50, 4]
random features: torch.Size([98, 16, 32, 32]) torch.Size([98])
random features: torch.Size([101, 16, 32, 32]) torch.Size([101])
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([97, 16, 32, 32]) torch.Size([97])
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([100, 16, 32, 32]) torch.Size([100])
random features: torch.Size([98, 16, 32, 32]) torch.Size([98])
random features: torch.Size([100, 16, 32, 32]) torch.Size([100])
random features: torch.Size([98, 16, 32, 32]) torch.Size([98])
random features: torch.Size([98, 16, 32, 32]) torch.Size([98])
all data: 982
Local adapation with distilling: 0.0001
training loss: tensor(0.4957) feature loss: tensor(0.2018)
Local adapation with distilling: 0.0001
training loss: tensor(0.4736) feature loss: tensor(0.1840)
Local adapation with distilling: 0.0001
training loss: tensor(0.3824) feature loss: tensor(0.1691)
Local adapation with distilling: 0.0001
training loss: tensor(0.4571) feature loss: tensor(0.1809)
Local adapation with distilling: 0.0001
training loss: tensor(0.4538) feature loss: tensor(0.1914)
Local adapation with distilling: 0.0001
training loss: tensor(0.4458) feature loss: tensor(0.1916)
Local adapation with distilling: 0.0001
training loss: tensor(0.4495) feature loss: tensor(0.1904)
Local adapation with distilling: 0.0001
training loss: tensor(0.4004) feature loss: tensor(0.1689)
Local adapation with distilling: 0.0001
training loss: tensor(0.4760) feature loss: tensor(0.2240)
Local adapation with distilling: 0.0001
training loss: tensor(0.5364) feature loss: tensor(0.1986)
Global Model Acc on global data: 0.6431 length of data: 10000
-------------Round number:  59  -------------
selected users: [38, 46, 24, 87, 30, 85, 16, 96, 18, 99]
random features: torch.Size([109, 16, 32, 32]) torch.Size([109])
random features: torch.Size([103, 16, 32, 32]) torch.Size([103])
random features: torch.Size([98, 16, 32, 32]) torch.Size([98])
random features: torch.Size([95, 16, 32, 32]) torch.Size([95])
random features: torch.Size([95, 16, 32, 32]) torch.Size([95])
random features: torch.Size([100, 16, 32, 32]) torch.Size([100])
random features: torch.Size([106, 16, 32, 32]) torch.Size([106])
random features: torch.Size([102, 16, 32, 32]) torch.Size([102])
random features: torch.Size([99, 16, 32, 32]) torch.Size([99])
random features: torch.Size([93, 16, 32, 32]) torch.Size([93])
all data: 1000
Local adapation with distilling: 0.0001
training loss: tensor(0.4139) feature loss: tensor(0.1864)
Local adapation with distilling: 0.0001
training loss: tensor(0.4846) feature loss: tensor(0.1644)
Local adapation with distilling: 0.0001
training loss: tensor(0.4846) feature loss: tensor(0.1825)
Local adapation with distilling: 0.0001
training loss: tensor(0.5627) feature loss: tensor(0.1992)
Local adapation with distilling: 0.0001
training loss: tensor(0.6163) feature loss: tensor(0.1999)
Local adapation with distilling: 0.0001
training loss: tensor(0.4990) feature loss: tensor(0.1758)
Local adapation with distilling: 0.0001
training loss: tensor(0.5585) feature loss: tensor(0.1688)
Local adapation with distilling: 0.0001
training loss: tensor(0.7614) feature loss: tensor(0.1911)
Local adapation with distilling: 0.0001
training loss: tensor(0.5448) feature loss: tensor(0.1887)
Local adapation with distilling: 0.0001
training loss: tensor(0.5229) feature loss: tensor(0.1948)
Global Model Acc on global data: 0.6426 length of data: 10000
-------------Round number:  60  -------------
selected users: [88, 4, 79, 14, 55, 3, 19, 28, 94, 25]
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([98, 16, 32, 32]) torch.Size([98])
random features: torch.Size([99, 16, 32, 32]) torch.Size([99])
random features: torch.Size([99, 16, 32, 32]) torch.Size([99])
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([106, 16, 32, 32]) torch.Size([106])
random features: torch.Size([100, 16, 32, 32]) torch.Size([100])
random features: torch.Size([102, 16, 32, 32]) torch.Size([102])
random features: torch.Size([101, 16, 32, 32]) torch.Size([101])
random features: torch.Size([100, 16, 32, 32]) torch.Size([100])
all data: 997
Local adapation with distilling: 0.0001
training loss: tensor(0.4676) feature loss: tensor(0.1837)
Local adapation with distilling: 0.0001
training loss: tensor(0.4540) feature loss: tensor(0.1719)
Local adapation with distilling: 0.0001
training loss: tensor(0.3850) feature loss: tensor(0.1691)
Local adapation with distilling: 0.0001
training loss: tensor(0.4523) feature loss: tensor(0.1808)
Local adapation with distilling: 0.0001
training loss: tensor(0.4751) feature loss: tensor(0.1716)
Local adapation with distilling: 0.0001
training loss: tensor(0.4443) feature loss: tensor(0.1605)
Local adapation with distilling: 0.0001
training loss: tensor(0.4392) feature loss: tensor(0.1878)
Local adapation with distilling: 0.0001
training loss: tensor(0.6582) feature loss: tensor(0.1745)
Local adapation with distilling: 0.0001
training loss: tensor(0.4331) feature loss: tensor(0.1545)
Local adapation with distilling: 0.0001
training loss: tensor(0.4471) feature loss: tensor(0.1674)
Global Model Acc on global data: 0.6363 length of data: 10000
-------------Round number:  61  -------------
selected users: [83, 1, 55, 9, 31, 28, 96, 29, 86, 63]
random features: torch.Size([101, 16, 32, 32]) torch.Size([101])
random features: torch.Size([104, 16, 32, 32]) torch.Size([104])
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([102, 16, 32, 32]) torch.Size([102])
random features: torch.Size([97, 16, 32, 32]) torch.Size([97])
random features: torch.Size([102, 16, 32, 32]) torch.Size([102])
random features: torch.Size([102, 16, 32, 32]) torch.Size([102])
random features: torch.Size([109, 16, 32, 32]) torch.Size([109])
random features: torch.Size([106, 16, 32, 32]) torch.Size([106])
random features: torch.Size([101, 16, 32, 32]) torch.Size([101])
all data: 1020
Local adapation with distilling: 0.0001
training loss: tensor(0.4860) feature loss: tensor(0.1853)
Local adapation with distilling: 0.0001
training loss: tensor(0.4829) feature loss: tensor(0.1651)
Local adapation with distilling: 0.0001
training loss: tensor(0.4151) feature loss: tensor(0.1690)
Local adapation with distilling: 0.0001
training loss: tensor(0.8859) feature loss: tensor(0.1700)
Local adapation with distilling: 0.0001
training loss: tensor(0.3888) feature loss: tensor(0.1550)
Local adapation with distilling: 0.0001
training loss: tensor(0.6247) feature loss: tensor(0.1647)
Local adapation with distilling: 0.0001
training loss: tensor(0.6647) feature loss: tensor(0.1838)
Local adapation with distilling: 0.0001
training loss: tensor(0.3735) feature loss: tensor(0.1636)
Local adapation with distilling: 0.0001
training loss: tensor(0.3822) feature loss: tensor(0.1714)
Local adapation with distilling: 0.0001
training loss: tensor(0.3872) feature loss: tensor(0.1744)
Global Model Acc on global data: 0.6277 length of data: 10000
-------------Round number:  62  -------------
selected users: [76, 48, 62, 80, 29, 99, 60, 89, 39, 69]
random features: torch.Size([106, 16, 32, 32]) torch.Size([106])
random features: torch.Size([95, 16, 32, 32]) torch.Size([95])
random features: torch.Size([93, 16, 32, 32]) torch.Size([93])
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([109, 16, 32, 32]) torch.Size([109])
random features: torch.Size([93, 16, 32, 32]) torch.Size([93])
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([108, 16, 32, 32]) torch.Size([108])
random features: torch.Size([103, 16, 32, 32]) torch.Size([103])
random features: torch.Size([98, 16, 32, 32]) torch.Size([98])
all data: 997
Local adapation with distilling: 0.0001
training loss: tensor(0.4577) feature loss: tensor(0.1782)
Local adapation with distilling: 0.0001
training loss: tensor(0.4907) feature loss: tensor(0.1836)
Local adapation with distilling: 0.0001
training loss: tensor(0.4768) feature loss: tensor(0.1810)
Local adapation with distilling: 0.0001
training loss: tensor(0.4742) feature loss: tensor(0.2149)
Local adapation with distilling: 0.0001
training loss: tensor(0.3745) feature loss: tensor(0.1652)
Local adapation with distilling: 0.0001
training loss: tensor(0.4411) feature loss: tensor(0.1876)
Local adapation with distilling: 0.0001
training loss: tensor(0.4986) feature loss: tensor(0.1922)
Local adapation with distilling: 0.0001
training loss: tensor(0.3963) feature loss: tensor(0.1812)
Local adapation with distilling: 0.0001
training loss: tensor(0.4256) feature loss: tensor(0.1788)
Local adapation with distilling: 0.0001
training loss: tensor(0.4008) feature loss: tensor(0.1790)
Global Model Acc on global data: 0.6309 length of data: 10000
-------------Round number:  63  -------------
selected users: [64, 59, 63, 2, 80, 20, 18, 48, 72, 51]
random features: torch.Size([98, 16, 32, 32]) torch.Size([98])
random features: torch.Size([103, 16, 32, 32]) torch.Size([103])
random features: torch.Size([101, 16, 32, 32]) torch.Size([101])
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([95, 16, 32, 32]) torch.Size([95])
random features: torch.Size([99, 16, 32, 32]) torch.Size([99])
random features: torch.Size([95, 16, 32, 32]) torch.Size([95])
random features: torch.Size([115, 16, 32, 32]) torch.Size([115])
random features: torch.Size([97, 16, 32, 32]) torch.Size([97])
all data: 995
Local adapation with distilling: 0.0001
training loss: tensor(0.6080) feature loss: tensor(0.1748)
Local adapation with distilling: 0.0001
training loss: tensor(0.4718) feature loss: tensor(0.1749)
Local adapation with distilling: 0.0001
training loss: tensor(0.3942) feature loss: tensor(0.1681)
Local adapation with distilling: 0.0001
training loss: tensor(0.4032) feature loss: tensor(0.1754)
Local adapation with distilling: 0.0001
training loss: tensor(0.4175) feature loss: tensor(0.1842)
Local adapation with distilling: 0.0001
training loss: tensor(0.4562) feature loss: tensor(0.1728)
Local adapation with distilling: 0.0001
training loss: tensor(0.4485) feature loss: tensor(0.1675)
Local adapation with distilling: 0.0001
training loss: tensor(0.4214) feature loss: tensor(0.1666)
Local adapation with distilling: 0.0001
training loss: tensor(0.4696) feature loss: tensor(0.1943)
Local adapation with distilling: 0.0001
training loss: tensor(0.4751) feature loss: tensor(0.1765)
Global Model Acc on global data: 0.6309 length of data: 10000
-------------Round number:  64  -------------
selected users: [17, 22, 60, 92, 23, 19, 71, 94, 40, 49]
random features: torch.Size([107, 16, 32, 32]) torch.Size([107])
random features: torch.Size([102, 16, 32, 32]) torch.Size([102])
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([93, 16, 32, 32]) torch.Size([93])
random features: torch.Size([98, 16, 32, 32]) torch.Size([98])
random features: torch.Size([100, 16, 32, 32]) torch.Size([100])
random features: torch.Size([101, 16, 32, 32]) torch.Size([101])
random features: torch.Size([101, 16, 32, 32]) torch.Size([101])
random features: torch.Size([92, 16, 32, 32]) torch.Size([92])
random features: torch.Size([99, 16, 32, 32]) torch.Size([99])
all data: 989
Local adapation with distilling: 0.0001
training loss: tensor(0.4018) feature loss: tensor(0.1765)
Local adapation with distilling: 0.0001
training loss: tensor(0.5615) feature loss: tensor(0.1890)
Local adapation with distilling: 0.0001
training loss: tensor(0.4331) feature loss: tensor(0.1988)
Local adapation with distilling: 0.0001
training loss: tensor(0.5112) feature loss: tensor(0.1960)
Local adapation with distilling: 0.0001
training loss: tensor(0.5464) feature loss: tensor(0.1899)
Local adapation with distilling: 0.0001
training loss: tensor(0.4364) feature loss: tensor(0.1928)
Local adapation with distilling: 0.0001
training loss: tensor(0.3873) feature loss: tensor(0.1760)
Local adapation with distilling: 0.0001
training loss: tensor(0.4463) feature loss: tensor(0.1806)
Local adapation with distilling: 0.0001
training loss: tensor(0.4475) feature loss: tensor(0.1968)
Local adapation with distilling: 0.0001
training loss: tensor(0.4682) feature loss: tensor(0.1931)
Global Model Acc on global data: 0.6344 length of data: 10000
-------------Round number:  65  -------------
selected users: [37, 81, 39, 61, 76, 90, 27, 86, 28, 69]
random features: torch.Size([101, 16, 32, 32]) torch.Size([101])
random features: torch.Size([102, 16, 32, 32]) torch.Size([102])
random features: torch.Size([103, 16, 32, 32]) torch.Size([103])
random features: torch.Size([101, 16, 32, 32]) torch.Size([101])
random features: torch.Size([106, 16, 32, 32]) torch.Size([106])
random features: torch.Size([95, 16, 32, 32]) torch.Size([95])
random features: torch.Size([97, 16, 32, 32]) torch.Size([97])
random features: torch.Size([106, 16, 32, 32]) torch.Size([106])
random features: torch.Size([102, 16, 32, 32]) torch.Size([102])
random features: torch.Size([98, 16, 32, 32]) torch.Size([98])
all data: 1011
Local adapation with distilling: 0.0001
training loss: tensor(0.3666) feature loss: tensor(0.1537)
Local adapation with distilling: 0.0001
training loss: tensor(1.0435) feature loss: tensor(0.1850)
Local adapation with distilling: 0.0001
training loss: tensor(0.4168) feature loss: tensor(0.1709)
Local adapation with distilling: 0.0001
training loss: tensor(0.4412) feature loss: tensor(0.1692)
Local adapation with distilling: 0.0001
training loss: tensor(0.3903) feature loss: tensor(0.1696)
Local adapation with distilling: 0.0001
training loss: tensor(0.4877) feature loss: tensor(0.1812)
Local adapation with distilling: 0.0001
training loss: tensor(0.4177) feature loss: tensor(0.1667)
Local adapation with distilling: 0.0001
training loss: tensor(0.3758) feature loss: tensor(0.1681)
Local adapation with distilling: 0.0001
training loss: tensor(0.6224) feature loss: tensor(0.1760)
Local adapation with distilling: 0.0001
training loss: tensor(0.3649) feature loss: tensor(0.1628)
Global Model Acc on global data: 0.6411 length of data: 10000
-------------Round number:  66  -------------
selected users: [8, 93, 4, 5, 52, 41, 0, 73, 88, 68]
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([104, 16, 32, 32]) torch.Size([104])
random features: torch.Size([98, 16, 32, 32]) torch.Size([98])
random features: torch.Size([102, 16, 32, 32]) torch.Size([102])
random features: torch.Size([102, 16, 32, 32]) torch.Size([102])
random features: torch.Size([95, 16, 32, 32]) torch.Size([95])
random features: torch.Size([99, 16, 32, 32]) torch.Size([99])
random features: torch.Size([104, 16, 32, 32]) torch.Size([104])
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([103, 16, 32, 32]) torch.Size([103])
all data: 999
Local adapation with distilling: 0.0001
training loss: tensor(0.3907) feature loss: tensor(0.1720)
Local adapation with distilling: 0.0001
training loss: tensor(0.4699) feature loss: tensor(0.1911)
Local adapation with distilling: 0.0001
training loss: tensor(0.4219) feature loss: tensor(0.1705)
Local adapation with distilling: 0.0001
training loss: tensor(0.4750) feature loss: tensor(0.1636)
Local adapation with distilling: 0.0001
training loss: tensor(0.7210) feature loss: tensor(0.1866)
Local adapation with distilling: 0.0001
training loss: tensor(0.4092) feature loss: tensor(0.1720)
Local adapation with distilling: 0.0001
training loss: tensor(0.3988) feature loss: tensor(0.1816)
Local adapation with distilling: 0.0001
training loss: tensor(0.4422) feature loss: tensor(0.1937)
Local adapation with distilling: 0.0001
training loss: tensor(0.4175) feature loss: tensor(0.1723)
Local adapation with distilling: 0.0001
training loss: tensor(0.4639) feature loss: tensor(0.1887)
Global Model Acc on global data: 0.6414 length of data: 10000
-------------Round number:  67  -------------
selected users: [17, 24, 64, 93, 97, 29, 3, 70, 82, 11]
random features: torch.Size([107, 16, 32, 32]) torch.Size([107])
random features: torch.Size([98, 16, 32, 32]) torch.Size([98])
random features: torch.Size([98, 16, 32, 32]) torch.Size([98])
random features: torch.Size([104, 16, 32, 32]) torch.Size([104])
random features: torch.Size([95, 16, 32, 32]) torch.Size([95])
random features: torch.Size([109, 16, 32, 32]) torch.Size([109])
random features: torch.Size([106, 16, 32, 32]) torch.Size([106])
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([92, 16, 32, 32]) torch.Size([92])
random features: torch.Size([106, 16, 32, 32]) torch.Size([106])
all data: 1011
Local adapation with distilling: 0.0001
training loss: tensor(0.3496) feature loss: tensor(0.1773)
Local adapation with distilling: 0.0001
training loss: tensor(0.3934) feature loss: tensor(0.1716)
Local adapation with distilling: 0.0001
training loss: tensor(0.5081) feature loss: tensor(0.1615)
Local adapation with distilling: 0.0001
training loss: tensor(0.4090) feature loss: tensor(0.1802)
Local adapation with distilling: 0.0001
training loss: tensor(0.4652) feature loss: tensor(0.1908)
Local adapation with distilling: 0.0001
training loss: tensor(0.3739) feature loss: tensor(0.1894)
Local adapation with distilling: 0.0001
training loss: tensor(0.4201) feature loss: tensor(0.1836)
Local adapation with distilling: 0.0001
training loss: tensor(0.4158) feature loss: tensor(0.1838)
Local adapation with distilling: 0.0001
training loss: tensor(0.4514) feature loss: tensor(0.1924)
Local adapation with distilling: 0.0001
training loss: tensor(0.4243) feature loss: tensor(0.1735)
Global Model Acc on global data: 0.6416 length of data: 10000
-------------Round number:  68  -------------
selected users: [29, 30, 16, 5, 38, 71, 76, 94, 99, 95]
random features: torch.Size([109, 16, 32, 32]) torch.Size([109])
random features: torch.Size([95, 16, 32, 32]) torch.Size([95])
random features: torch.Size([106, 16, 32, 32]) torch.Size([106])
random features: torch.Size([102, 16, 32, 32]) torch.Size([102])
random features: torch.Size([109, 16, 32, 32]) torch.Size([109])
random features: torch.Size([101, 16, 32, 32]) torch.Size([101])
random features: torch.Size([106, 16, 32, 32]) torch.Size([106])
random features: torch.Size([101, 16, 32, 32]) torch.Size([101])
random features: torch.Size([93, 16, 32, 32]) torch.Size([93])
random features: torch.Size([100, 16, 32, 32]) torch.Size([100])
all data: 1022
Local adapation with distilling: 0.0001
training loss: tensor(0.3088) feature loss: tensor(0.1657)
Local adapation with distilling: 0.0001
training loss: tensor(0.4566) feature loss: tensor(0.1727)
Local adapation with distilling: 0.0001
training loss: tensor(0.3932) feature loss: tensor(0.1600)
Local adapation with distilling: 0.0001
training loss: tensor(0.3734) feature loss: tensor(0.1575)
Local adapation with distilling: 0.0001
training loss: tensor(0.3095) feature loss: tensor(0.1669)
Local adapation with distilling: 0.0001
training loss: tensor(0.3013) feature loss: tensor(0.1632)
Local adapation with distilling: 0.0001
training loss: tensor(0.3333) feature loss: tensor(0.1599)
Local adapation with distilling: 0.0001
training loss: tensor(0.3383) feature loss: tensor(0.1543)
Local adapation with distilling: 0.0001
training loss: tensor(0.3802) feature loss: tensor(0.1712)
Local adapation with distilling: 0.0001
training loss: tensor(0.3384) feature loss: tensor(0.1623)
Global Model Acc on global data: 0.6446 length of data: 10000
-------------Round number:  69  -------------
selected users: [72, 31, 13, 83, 33, 8, 26, 89, 64, 97]
random features: torch.Size([115, 16, 32, 32]) torch.Size([115])
random features: torch.Size([97, 16, 32, 32]) torch.Size([97])
random features: torch.Size([101, 16, 32, 32]) torch.Size([101])
random features: torch.Size([101, 16, 32, 32]) torch.Size([101])
random features: torch.Size([97, 16, 32, 32]) torch.Size([97])
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([105, 16, 32, 32]) torch.Size([105])
random features: torch.Size([108, 16, 32, 32]) torch.Size([108])
random features: torch.Size([98, 16, 32, 32]) torch.Size([98])
random features: torch.Size([95, 16, 32, 32]) torch.Size([95])
all data: 1013
Local adapation with distilling: 0.0001
training loss: tensor(0.4541) feature loss: tensor(0.2030)
Local adapation with distilling: 0.0001
training loss: tensor(0.4572) feature loss: tensor(0.1772)
Local adapation with distilling: 0.0001
training loss: tensor(0.4976) feature loss: tensor(0.1991)
Local adapation with distilling: 0.0001
training loss: tensor(0.4668) feature loss: tensor(0.2028)
Local adapation with distilling: 0.0001
training loss: tensor(0.4400) feature loss: tensor(0.1958)
Local adapation with distilling: 0.0001
training loss: tensor(0.3980) feature loss: tensor(0.1809)
Local adapation with distilling: 0.0001
training loss: tensor(0.4540) feature loss: tensor(0.1884)
Local adapation with distilling: 0.0001
training loss: tensor(0.3942) feature loss: tensor(0.1826)
Local adapation with distilling: 0.0001
training loss: tensor(0.4981) feature loss: tensor(0.1715)
Local adapation with distilling: 0.0001
training loss: tensor(0.4728) feature loss: tensor(0.2032)
Global Model Acc on global data: 0.637 length of data: 10000
-------------Round number:  70  -------------
selected users: [81, 43, 88, 32, 50, 71, 73, 55, 42, 2]
random features: torch.Size([102, 16, 32, 32]) torch.Size([102])
random features: torch.Size([98, 16, 32, 32]) torch.Size([98])
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([99, 16, 32, 32]) torch.Size([99])
random features: torch.Size([98, 16, 32, 32]) torch.Size([98])
random features: torch.Size([101, 16, 32, 32]) torch.Size([101])
random features: torch.Size([104, 16, 32, 32]) torch.Size([104])
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([95, 16, 32, 32]) torch.Size([95])
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
all data: 985
Local adapation with distilling: 0.0001
training loss: tensor(0.8528) feature loss: tensor(0.1928)
Local adapation with distilling: 0.0001
training loss: tensor(0.4642) feature loss: tensor(0.2017)
Local adapation with distilling: 0.0001
training loss: tensor(0.4165) feature loss: tensor(0.1884)
Local adapation with distilling: 0.0001
training loss: tensor(0.5135) feature loss: tensor(0.1923)
Local adapation with distilling: 0.0001
training loss: tensor(0.4201) feature loss: tensor(0.2002)
Local adapation with distilling: 0.0001
training loss: tensor(0.3593) feature loss: tensor(0.1697)
Local adapation with distilling: 0.0001
training loss: tensor(0.4053) feature loss: tensor(0.2073)
Local adapation with distilling: 0.0001
training loss: tensor(0.4309) feature loss: tensor(0.2011)
Local adapation with distilling: 0.0001
training loss: tensor(0.4416) feature loss: tensor(0.1695)
Local adapation with distilling: 0.0001
training loss: tensor(0.4027) feature loss: tensor(0.1992)
Global Model Acc on global data: 0.6398 length of data: 10000
-------------Round number:  71  -------------
selected users: [41, 84, 98, 42, 75, 25, 60, 19, 52, 29]
random features: torch.Size([95, 16, 32, 32]) torch.Size([95])
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([95, 16, 32, 32]) torch.Size([95])
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([100, 16, 32, 32]) torch.Size([100])
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([100, 16, 32, 32]) torch.Size([100])
random features: torch.Size([102, 16, 32, 32]) torch.Size([102])
random features: torch.Size([109, 16, 32, 32]) torch.Size([109])
all data: 985
Local adapation with distilling: 0.0001
training loss: tensor(0.3478) feature loss: tensor(0.1605)
Local adapation with distilling: 0.0001
training loss: tensor(0.4336) feature loss: tensor(0.1858)
Local adapation with distilling: 0.0001
training loss: tensor(0.3773) feature loss: tensor(0.1651)
Local adapation with distilling: 0.0001
training loss: tensor(0.3675) feature loss: tensor(0.1492)
Local adapation with distilling: 0.0001
training loss: tensor(0.4128) feature loss: tensor(0.1757)
Local adapation with distilling: 0.0001
training loss: tensor(0.4150) feature loss: tensor(0.1706)
Local adapation with distilling: 0.0001
training loss: tensor(0.3786) feature loss: tensor(0.1833)
Local adapation with distilling: 0.0001
training loss: tensor(0.3925) feature loss: tensor(0.1730)
Local adapation with distilling: 0.0001
training loss: tensor(0.7424) feature loss: tensor(0.1941)
Local adapation with distilling: 0.0001
training loss: tensor(0.3332) feature loss: tensor(0.1707)
Global Model Acc on global data: 0.6459 length of data: 10000
save a model
-------------Round number:  72  -------------
selected users: [76, 82, 43, 16, 84, 95, 78, 91, 30, 22]
random features: torch.Size([106, 16, 32, 32]) torch.Size([106])
random features: torch.Size([92, 16, 32, 32]) torch.Size([92])
random features: torch.Size([98, 16, 32, 32]) torch.Size([98])
random features: torch.Size([106, 16, 32, 32]) torch.Size([106])
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([100, 16, 32, 32]) torch.Size([100])
random features: torch.Size([104, 16, 32, 32]) torch.Size([104])
random features: torch.Size([105, 16, 32, 32]) torch.Size([105])
random features: torch.Size([95, 16, 32, 32]) torch.Size([95])
random features: torch.Size([102, 16, 32, 32]) torch.Size([102])
all data: 1004
Local adapation with distilling: 0.0001
training loss: tensor(0.3781) feature loss: tensor(0.1675)
Local adapation with distilling: 0.0001
training loss: tensor(0.4225) feature loss: tensor(0.1933)
Local adapation with distilling: 0.0001
training loss: tensor(0.3975) feature loss: tensor(0.1933)
Local adapation with distilling: 0.0001
training loss: tensor(0.4024) feature loss: tensor(0.1667)
Local adapation with distilling: 0.0001
training loss: tensor(0.4066) feature loss: tensor(0.1906)
Local adapation with distilling: 0.0001
training loss: tensor(0.3895) feature loss: tensor(0.1691)
Local adapation with distilling: 0.0001
training loss: tensor(0.4394) feature loss: tensor(0.1965)
Local adapation with distilling: 0.0001
training loss: tensor(0.4228) feature loss: tensor(0.1668)
Local adapation with distilling: 0.0001
training loss: tensor(0.4717) feature loss: tensor(0.1959)
Local adapation with distilling: 0.0001
training loss: tensor(0.7136) feature loss: tensor(0.1918)
Global Model Acc on global data: 0.6449 length of data: 10000
-------------Round number:  73  -------------
selected users: [49, 14, 34, 70, 90, 35, 68, 76, 80, 9]
random features: torch.Size([99, 16, 32, 32]) torch.Size([99])
random features: torch.Size([99, 16, 32, 32]) torch.Size([99])
random features: torch.Size([95, 16, 32, 32]) torch.Size([95])
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([95, 16, 32, 32]) torch.Size([95])
random features: torch.Size([106, 16, 32, 32]) torch.Size([106])
random features: torch.Size([103, 16, 32, 32]) torch.Size([103])
random features: torch.Size([106, 16, 32, 32]) torch.Size([106])
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([102, 16, 32, 32]) torch.Size([102])
all data: 997
Local adapation with distilling: 0.0001
training loss: tensor(0.4153) feature loss: tensor(0.1685)
Local adapation with distilling: 0.0001
training loss: tensor(0.3771) feature loss: tensor(0.1757)
Local adapation with distilling: 0.0001
training loss: tensor(0.3712) feature loss: tensor(0.1525)
Local adapation with distilling: 0.0001
training loss: tensor(0.3780) feature loss: tensor(0.1692)
Local adapation with distilling: 0.0001
training loss: tensor(0.4141) feature loss: tensor(0.1724)
Local adapation with distilling: 0.0001
training loss: tensor(0.4698) feature loss: tensor(0.1637)
Local adapation with distilling: 0.0001
training loss: tensor(0.4951) feature loss: tensor(0.1773)
Local adapation with distilling: 0.0001
training loss: tensor(0.3293) feature loss: tensor(0.1566)
Local adapation with distilling: 0.0001
training loss: tensor(0.3662) feature loss: tensor(0.1717)
Local adapation with distilling: 0.0001
training loss: tensor(0.4892) feature loss: tensor(0.1783)
Global Model Acc on global data: 0.6407 length of data: 10000
-------------Round number:  74  -------------
selected users: [85, 64, 63, 80, 6, 12, 43, 17, 7, 8]
random features: torch.Size([100, 16, 32, 32]) torch.Size([100])
random features: torch.Size([98, 16, 32, 32]) torch.Size([98])
random features: torch.Size([101, 16, 32, 32]) torch.Size([101])
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([104, 16, 32, 32]) torch.Size([104])
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([98, 16, 32, 32]) torch.Size([98])
random features: torch.Size([107, 16, 32, 32]) torch.Size([107])
random features: torch.Size([95, 16, 32, 32]) torch.Size([95])
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
all data: 991
Local adapation with distilling: 0.0001
training loss: tensor(0.3874) feature loss: tensor(0.1632)
Local adapation with distilling: 0.0001
training loss: tensor(0.4068) feature loss: tensor(0.1494)
Local adapation with distilling: 0.0001
training loss: tensor(0.3569) feature loss: tensor(0.1598)
Local adapation with distilling: 0.0001
training loss: tensor(0.3350) feature loss: tensor(0.1526)
Local adapation with distilling: 0.0001
training loss: tensor(0.5093) feature loss: tensor(0.1589)
Local adapation with distilling: 0.0001
training loss: tensor(0.4615) feature loss: tensor(0.1658)
Local adapation with distilling: 0.0001
training loss: tensor(0.3475) feature loss: tensor(0.1550)
Local adapation with distilling: 0.0001
training loss: tensor(0.3225) feature loss: tensor(0.1482)
Local adapation with distilling: 0.0001
training loss: tensor(0.4231) feature loss: tensor(0.1592)
Local adapation with distilling: 0.0001
training loss: tensor(0.3298) feature loss: tensor(0.1524)
Global Model Acc on global data: 0.648 length of data: 10000
save a model
-------------Round number:  75  -------------
selected users: [36, 7, 6, 45, 56, 54, 22, 37, 53, 68]
random features: torch.Size([101, 16, 32, 32]) torch.Size([101])
random features: torch.Size([95, 16, 32, 32]) torch.Size([95])
random features: torch.Size([104, 16, 32, 32]) torch.Size([104])
random features: torch.Size([100, 16, 32, 32]) torch.Size([100])
random features: torch.Size([110, 16, 32, 32]) torch.Size([110])
random features: torch.Size([104, 16, 32, 32]) torch.Size([104])
random features: torch.Size([102, 16, 32, 32]) torch.Size([102])
random features: torch.Size([101, 16, 32, 32]) torch.Size([101])
random features: torch.Size([115, 16, 32, 32]) torch.Size([115])
random features: torch.Size([103, 16, 32, 32]) torch.Size([103])
all data: 1035
Local adapation with distilling: 0.0001
training loss: tensor(0.4376) feature loss: tensor(0.1886)
Local adapation with distilling: 0.0001
training loss: tensor(0.4306) feature loss: tensor(0.1686)
Local adapation with distilling: 0.0001
training loss: tensor(0.4663) feature loss: tensor(0.1935)
Local adapation with distilling: 0.0001
training loss: tensor(0.4241) feature loss: tensor(0.1818)
Local adapation with distilling: 0.0001
training loss: tensor(0.4543) feature loss: tensor(0.2031)
Local adapation with distilling: 0.0001
training loss: tensor(0.5286) feature loss: tensor(0.1822)
Local adapation with distilling: 0.0001
training loss: tensor(0.6835) feature loss: tensor(0.1772)
Local adapation with distilling: 0.0001
training loss: tensor(0.3569) feature loss: tensor(0.1609)
Local adapation with distilling: 0.0001
training loss: tensor(0.4109) feature loss: tensor(0.1897)
Local adapation with distilling: 0.0001
training loss: tensor(0.4387) feature loss: tensor(0.1851)
Global Model Acc on global data: 0.6434 length of data: 10000
-------------Round number:  76  -------------
selected users: [38, 37, 32, 50, 10, 94, 19, 44, 86, 23]
random features: torch.Size([109, 16, 32, 32]) torch.Size([109])
random features: torch.Size([101, 16, 32, 32]) torch.Size([101])
random features: torch.Size([99, 16, 32, 32]) torch.Size([99])
random features: torch.Size([98, 16, 32, 32]) torch.Size([98])
random features: torch.Size([93, 16, 32, 32]) torch.Size([93])
random features: torch.Size([101, 16, 32, 32]) torch.Size([101])
random features: torch.Size([100, 16, 32, 32]) torch.Size([100])
random features: torch.Size([94, 16, 32, 32]) torch.Size([94])
random features: torch.Size([106, 16, 32, 32]) torch.Size([106])
random features: torch.Size([98, 16, 32, 32]) torch.Size([98])
all data: 999
Local adapation with distilling: 0.0001
training loss: tensor(0.3493) feature loss: tensor(0.1746)
Local adapation with distilling: 0.0001
training loss: tensor(0.3163) feature loss: tensor(0.1573)
Local adapation with distilling: 0.0001
training loss: tensor(0.4340) feature loss: tensor(0.1732)
Local adapation with distilling: 0.0001
training loss: tensor(0.3860) feature loss: tensor(0.1760)
Local adapation with distilling: 0.0001
training loss: tensor(0.4260) feature loss: tensor(0.1695)
Local adapation with distilling: 0.0001
training loss: tensor(0.3430) feature loss: tensor(0.1588)
Local adapation with distilling: 0.0001
training loss: tensor(0.3562) feature loss: tensor(0.1683)
Local adapation with distilling: 0.0001
training loss: tensor(0.4254) feature loss: tensor(0.1787)
Local adapation with distilling: 0.0001
training loss: tensor(0.3415) feature loss: tensor(0.1730)
Local adapation with distilling: 0.0001
training loss: tensor(0.4638) feature loss: tensor(0.1861)
Global Model Acc on global data: 0.6425 length of data: 10000
-------------Round number:  77  -------------
selected users: [5, 93, 41, 96, 16, 42, 81, 91, 50, 58]
random features: torch.Size([102, 16, 32, 32]) torch.Size([102])
random features: torch.Size([104, 16, 32, 32]) torch.Size([104])
random features: torch.Size([95, 16, 32, 32]) torch.Size([95])
random features: torch.Size([102, 16, 32, 32]) torch.Size([102])
random features: torch.Size([106, 16, 32, 32]) torch.Size([106])
random features: torch.Size([95, 16, 32, 32]) torch.Size([95])
random features: torch.Size([102, 16, 32, 32]) torch.Size([102])
random features: torch.Size([105, 16, 32, 32]) torch.Size([105])
random features: torch.Size([98, 16, 32, 32]) torch.Size([98])
random features: torch.Size([101, 16, 32, 32]) torch.Size([101])
all data: 1010
Local adapation with distilling: 0.0001
training loss: tensor(0.4016) feature loss: tensor(0.1662)
Local adapation with distilling: 0.0001
training loss: tensor(0.4394) feature loss: tensor(0.1948)
Local adapation with distilling: 0.0001
training loss: tensor(0.3407) feature loss: tensor(0.1652)
Local adapation with distilling: 0.0001
training loss: tensor(0.7244) feature loss: tensor(0.1771)
Local adapation with distilling: 0.0001
training loss: tensor(0.3655) feature loss: tensor(0.1621)
Local adapation with distilling: 0.0001
training loss: tensor(0.3587) feature loss: tensor(0.1548)
Local adapation with distilling: 0.0001
training loss: tensor(0.9078) feature loss: tensor(0.1818)
Local adapation with distilling: 0.0001
training loss: tensor(0.3718) feature loss: tensor(0.1697)
Local adapation with distilling: 0.0001
training loss: tensor(0.3484) feature loss: tensor(0.1785)
Local adapation with distilling: 0.0001
training loss: tensor(0.3907) feature loss: tensor(0.1706)
Global Model Acc on global data: 0.6454 length of data: 10000
-------------Round number:  78  -------------
selected users: [9, 46, 7, 63, 15, 2, 74, 31, 5, 36]
random features: torch.Size([102, 16, 32, 32]) torch.Size([102])
random features: torch.Size([103, 16, 32, 32]) torch.Size([103])
random features: torch.Size([95, 16, 32, 32]) torch.Size([95])
random features: torch.Size([101, 16, 32, 32]) torch.Size([101])
random features: torch.Size([103, 16, 32, 32]) torch.Size([103])
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([97, 16, 32, 32]) torch.Size([97])
random features: torch.Size([102, 16, 32, 32]) torch.Size([102])
random features: torch.Size([101, 16, 32, 32]) torch.Size([101])
all data: 996
Local adapation with distilling: 0.0001
training loss: tensor(0.4772) feature loss: tensor(0.1708)
Local adapation with distilling: 0.0001
training loss: tensor(0.3957) feature loss: tensor(0.1607)
Local adapation with distilling: 0.0001
training loss: tensor(0.3452) feature loss: tensor(0.1571)
Local adapation with distilling: 0.0001
training loss: tensor(0.3542) feature loss: tensor(0.1715)
Local adapation with distilling: 0.0001
training loss: tensor(0.6185) feature loss: tensor(0.1743)
Local adapation with distilling: 0.0001
training loss: tensor(0.3489) feature loss: tensor(0.1656)
Local adapation with distilling: 0.0001
training loss: tensor(0.3702) feature loss: tensor(0.1629)
Local adapation with distilling: 0.0001
training loss: tensor(0.3599) feature loss: tensor(0.1575)
Local adapation with distilling: 0.0001
training loss: tensor(0.3541) feature loss: tensor(0.1562)
Local adapation with distilling: 0.0001
training loss: tensor(0.3650) feature loss: tensor(0.1676)
Global Model Acc on global data: 0.6477 length of data: 10000
-------------Round number:  79  -------------
selected users: [68, 18, 86, 60, 56, 32, 30, 24, 45, 92]
random features: torch.Size([103, 16, 32, 32]) torch.Size([103])
random features: torch.Size([99, 16, 32, 32]) torch.Size([99])
random features: torch.Size([106, 16, 32, 32]) torch.Size([106])
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([110, 16, 32, 32]) torch.Size([110])
random features: torch.Size([99, 16, 32, 32]) torch.Size([99])
random features: torch.Size([95, 16, 32, 32]) torch.Size([95])
random features: torch.Size([98, 16, 32, 32]) torch.Size([98])
random features: torch.Size([100, 16, 32, 32]) torch.Size([100])
random features: torch.Size([93, 16, 32, 32]) torch.Size([93])
all data: 999
Local adapation with distilling: 0.0001
training loss: tensor(0.4122) feature loss: tensor(0.1714)
Local adapation with distilling: 0.0001
training loss: tensor(0.4127) feature loss: tensor(0.1657)
Local adapation with distilling: 0.0001
training loss: tensor(0.3310) feature loss: tensor(0.1633)
Local adapation with distilling: 0.0001
training loss: tensor(0.3710) feature loss: tensor(0.1791)
Local adapation with distilling: 0.0001
training loss: tensor(0.3635) feature loss: tensor(0.1555)
Local adapation with distilling: 0.0001
training loss: tensor(0.3942) feature loss: tensor(0.1557)
Local adapation with distilling: 0.0001
training loss: tensor(0.4200) feature loss: tensor(0.1766)
Local adapation with distilling: 0.0001
training loss: tensor(0.3688) feature loss: tensor(0.1636)
Local adapation with distilling: 0.0001
training loss: tensor(0.3603) feature loss: tensor(0.1584)
Local adapation with distilling: 0.0001
training loss: tensor(0.4465) feature loss: tensor(0.1790)
Global Model Acc on global data: 0.6439 length of data: 10000
-------------Round number:  80  -------------
selected users: [37, 65, 95, 53, 66, 30, 73, 85, 45, 36]
random features: torch.Size([101, 16, 32, 32]) torch.Size([101])
random features: torch.Size([99, 16, 32, 32]) torch.Size([99])
random features: torch.Size([100, 16, 32, 32]) torch.Size([100])
random features: torch.Size([115, 16, 32, 32]) torch.Size([115])
random features: torch.Size([108, 16, 32, 32]) torch.Size([108])
random features: torch.Size([95, 16, 32, 32]) torch.Size([95])
random features: torch.Size([104, 16, 32, 32]) torch.Size([104])
random features: torch.Size([100, 16, 32, 32]) torch.Size([100])
random features: torch.Size([100, 16, 32, 32]) torch.Size([100])
random features: torch.Size([101, 16, 32, 32]) torch.Size([101])
all data: 1023
Local adapation with distilling: 0.0001
training loss: tensor(0.3277) feature loss: tensor(0.1468)
Local adapation with distilling: 0.0001
training loss: tensor(0.4384) feature loss: tensor(0.1845)
Local adapation with distilling: 0.0001
training loss: tensor(0.3557) feature loss: tensor(0.1539)
Local adapation with distilling: 0.0001
training loss: tensor(0.3504) feature loss: tensor(0.1711)
Local adapation with distilling: 0.0001
training loss: tensor(0.4322) feature loss: tensor(0.1708)
Local adapation with distilling: 0.0001
training loss: tensor(0.4021) feature loss: tensor(0.1734)
Local adapation with distilling: 0.0001
training loss: tensor(0.3935) feature loss: tensor(0.1878)
Local adapation with distilling: 0.0001
training loss: tensor(0.3891) feature loss: tensor(0.1690)
Local adapation with distilling: 0.0001
training loss: tensor(0.3412) feature loss: tensor(0.1548)
Local adapation with distilling: 0.0001
training loss: tensor(0.3637) feature loss: tensor(0.1598)
Global Model Acc on global data: 0.6502 length of data: 10000
save a model
-------------Round number:  81  -------------
selected users: [73, 89, 41, 78, 51, 21, 30, 69, 8, 5]
random features: torch.Size([104, 16, 32, 32]) torch.Size([104])
random features: torch.Size([108, 16, 32, 32]) torch.Size([108])
random features: torch.Size([95, 16, 32, 32]) torch.Size([95])
random features: torch.Size([104, 16, 32, 32]) torch.Size([104])
random features: torch.Size([97, 16, 32, 32]) torch.Size([97])
random features: torch.Size([94, 16, 32, 32]) torch.Size([94])
random features: torch.Size([95, 16, 32, 32]) torch.Size([95])
random features: torch.Size([98, 16, 32, 32]) torch.Size([98])
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([102, 16, 32, 32]) torch.Size([102])
all data: 993
Local adapation with distilling: 0.0001
training loss: tensor(0.3349) feature loss: tensor(0.1746)
Local adapation with distilling: 0.0001
training loss: tensor(0.3355) feature loss: tensor(0.1534)
Local adapation with distilling: 0.0001
training loss: tensor(0.3173) feature loss: tensor(0.1562)
Local adapation with distilling: 0.0001
training loss: tensor(0.3942) feature loss: tensor(0.1783)
Local adapation with distilling: 0.0001
training loss: tensor(0.3935) feature loss: tensor(0.1736)
Local adapation with distilling: 0.0001
training loss: tensor(0.3931) feature loss: tensor(0.1727)
Local adapation with distilling: 0.0001
training loss: tensor(0.3472) feature loss: tensor(0.1653)
Local adapation with distilling: 0.0001
training loss: tensor(0.3401) feature loss: tensor(0.1643)
Local adapation with distilling: 0.0001
training loss: tensor(0.3176) feature loss: tensor(0.1624)
Local adapation with distilling: 0.0001
training loss: tensor(0.3380) feature loss: tensor(0.1544)
Global Model Acc on global data: 0.652 length of data: 10000
save a model
-------------Round number:  82  -------------
selected users: [72, 33, 58, 2, 55, 84, 54, 75, 28, 40]
random features: torch.Size([115, 16, 32, 32]) torch.Size([115])
random features: torch.Size([97, 16, 32, 32]) torch.Size([97])
random features: torch.Size([101, 16, 32, 32]) torch.Size([101])
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([104, 16, 32, 32]) torch.Size([104])
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([102, 16, 32, 32]) torch.Size([102])
random features: torch.Size([92, 16, 32, 32]) torch.Size([92])
all data: 995
Local adapation with distilling: 0.0001
training loss: tensor(0.3824) feature loss: tensor(0.1810)
Local adapation with distilling: 0.0001
training loss: tensor(0.3744) feature loss: tensor(0.1845)
Local adapation with distilling: 0.0001
training loss: tensor(0.3657) feature loss: tensor(0.1800)
Local adapation with distilling: 0.0001
training loss: tensor(0.3533) feature loss: tensor(0.1649)
Local adapation with distilling: 0.0001
training loss: tensor(0.3853) feature loss: tensor(0.1731)
Local adapation with distilling: 0.0001
training loss: tensor(0.4235) feature loss: tensor(0.1875)
Local adapation with distilling: 0.0001
training loss: tensor(0.4807) feature loss: tensor(0.1606)
Local adapation with distilling: 0.0001
training loss: tensor(0.3938) feature loss: tensor(0.1850)
Local adapation with distilling: 0.0001
training loss: tensor(0.4764) feature loss: tensor(0.1796)
Local adapation with distilling: 0.0001
training loss: tensor(0.3798) feature loss: tensor(0.1794)
Global Model Acc on global data: 0.6478 length of data: 10000
-------------Round number:  83  -------------
selected users: [6, 65, 95, 84, 61, 12, 30, 69, 35, 1]
random features: torch.Size([104, 16, 32, 32]) torch.Size([104])
random features: torch.Size([99, 16, 32, 32]) torch.Size([99])
random features: torch.Size([100, 16, 32, 32]) torch.Size([100])
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([101, 16, 32, 32]) torch.Size([101])
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([95, 16, 32, 32]) torch.Size([95])
random features: torch.Size([98, 16, 32, 32]) torch.Size([98])
random features: torch.Size([106, 16, 32, 32]) torch.Size([106])
random features: torch.Size([104, 16, 32, 32]) torch.Size([104])
all data: 999
Local adapation with distilling: 0.0001
training loss: tensor(0.4434) feature loss: tensor(0.1614)
Local adapation with distilling: 0.0001
training loss: tensor(0.3929) feature loss: tensor(0.1815)
Local adapation with distilling: 0.0001
training loss: tensor(0.3317) feature loss: tensor(0.1634)
Local adapation with distilling: 0.0001
training loss: tensor(0.3925) feature loss: tensor(0.1879)
Local adapation with distilling: 0.0001
training loss: tensor(0.4018) feature loss: tensor(0.1778)
Local adapation with distilling: 0.0001
training loss: tensor(0.4143) feature loss: tensor(0.1862)
Local adapation with distilling: 0.0001
training loss: tensor(0.3765) feature loss: tensor(0.1698)
Local adapation with distilling: 0.0001
training loss: tensor(0.3604) feature loss: tensor(0.1706)
Local adapation with distilling: 0.0001
training loss: tensor(0.4720) feature loss: tensor(0.1718)
Local adapation with distilling: 0.0001
training loss: tensor(0.3993) feature loss: tensor(0.1744)
Global Model Acc on global data: 0.6504 length of data: 10000
-------------Round number:  84  -------------
selected users: [94, 55, 80, 1, 90, 11, 32, 8, 6, 82]
random features: torch.Size([101, 16, 32, 32]) torch.Size([101])
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([104, 16, 32, 32]) torch.Size([104])
random features: torch.Size([95, 16, 32, 32]) torch.Size([95])
random features: torch.Size([106, 16, 32, 32]) torch.Size([106])
random features: torch.Size([99, 16, 32, 32]) torch.Size([99])
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([104, 16, 32, 32]) torch.Size([104])
random features: torch.Size([92, 16, 32, 32]) torch.Size([92])
all data: 989
Local adapation with distilling: 0.0001
training loss: tensor(0.3606) feature loss: tensor(0.1699)
Local adapation with distilling: 0.0001
training loss: tensor(0.3455) feature loss: tensor(0.1658)
Local adapation with distilling: 0.0001
training loss: tensor(0.3552) feature loss: tensor(0.1854)
Local adapation with distilling: 0.0001
training loss: tensor(0.3704) feature loss: tensor(0.1618)
Local adapation with distilling: 0.0001
training loss: tensor(0.4018) feature loss: tensor(0.1889)
Local adapation with distilling: 0.0001
training loss: tensor(0.3572) feature loss: tensor(0.1673)
Local adapation with distilling: 0.0001
training loss: tensor(0.3722) feature loss: tensor(0.1720)
Local adapation with distilling: 0.0001
training loss: tensor(0.3292) feature loss: tensor(0.1705)
Local adapation with distilling: 0.0001
training loss: tensor(0.3891) feature loss: tensor(0.1732)
Local adapation with distilling: 0.0001
training loss: tensor(0.3755) feature loss: tensor(0.1787)
Global Model Acc on global data: 0.6551 length of data: 10000
save a model
-------------Round number:  85  -------------
selected users: [81, 25, 40, 87, 41, 23, 10, 89, 50, 54]
random features: torch.Size([102, 16, 32, 32]) torch.Size([102])
random features: torch.Size([100, 16, 32, 32]) torch.Size([100])
random features: torch.Size([92, 16, 32, 32]) torch.Size([92])
random features: torch.Size([95, 16, 32, 32]) torch.Size([95])
random features: torch.Size([95, 16, 32, 32]) torch.Size([95])
random features: torch.Size([98, 16, 32, 32]) torch.Size([98])
random features: torch.Size([93, 16, 32, 32]) torch.Size([93])
random features: torch.Size([108, 16, 32, 32]) torch.Size([108])
random features: torch.Size([98, 16, 32, 32]) torch.Size([98])
random features: torch.Size([104, 16, 32, 32]) torch.Size([104])
all data: 985
Local adapation with distilling: 0.0001
training loss: tensor(0.9878) feature loss: tensor(0.1681)
Local adapation with distilling: 0.0001
training loss: tensor(0.3585) feature loss: tensor(0.1615)
Local adapation with distilling: 0.0001
training loss: tensor(0.3578) feature loss: tensor(0.1639)
Local adapation with distilling: 0.0001
training loss: tensor(0.3935) feature loss: tensor(0.1827)
Local adapation with distilling: 0.0001
training loss: tensor(0.3189) feature loss: tensor(0.1620)
Local adapation with distilling: 0.0001
training loss: tensor(0.4118) feature loss: tensor(0.1840)
Local adapation with distilling: 0.0001
training loss: tensor(0.3491) feature loss: tensor(0.1685)
Local adapation with distilling: 0.0001
training loss: tensor(0.3209) feature loss: tensor(0.1685)
Local adapation with distilling: 0.0001
training loss: tensor(0.3248) feature loss: tensor(0.1699)
Local adapation with distilling: 0.0001
training loss: tensor(0.4176) feature loss: tensor(0.1615)
Global Model Acc on global data: 0.6516 length of data: 10000
-------------Round number:  86  -------------
selected users: [69, 74, 34, 68, 42, 0, 32, 88, 8, 3]
random features: torch.Size([98, 16, 32, 32]) torch.Size([98])
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([95, 16, 32, 32]) torch.Size([95])
random features: torch.Size([103, 16, 32, 32]) torch.Size([103])
random features: torch.Size([95, 16, 32, 32]) torch.Size([95])
random features: torch.Size([99, 16, 32, 32]) torch.Size([99])
random features: torch.Size([99, 16, 32, 32]) torch.Size([99])
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([106, 16, 32, 32]) torch.Size([106])
all data: 983
Local adapation with distilling: 0.0001
training loss: tensor(0.2965) feature loss: tensor(0.1630)
Local adapation with distilling: 0.0001
training loss: tensor(0.3042) feature loss: tensor(0.1758)
Local adapation with distilling: 0.0001
training loss: tensor(0.2966) feature loss: tensor(0.1525)
Local adapation with distilling: 0.0001
training loss: tensor(0.3839) feature loss: tensor(0.1647)
Local adapation with distilling: 0.0001
training loss: tensor(0.3065) feature loss: tensor(0.1543)
Local adapation with distilling: 0.0001
training loss: tensor(0.3289) feature loss: tensor(0.1706)
Local adapation with distilling: 0.0001
training loss: tensor(0.3006) feature loss: tensor(0.1457)
Local adapation with distilling: 0.0001
training loss: tensor(0.3160) feature loss: tensor(0.1651)
Local adapation with distilling: 0.0001
training loss: tensor(0.2655) feature loss: tensor(0.1535)
Local adapation with distilling: 0.0001
training loss: tensor(0.3269) feature loss: tensor(0.1506)
Global Model Acc on global data: 0.6492 length of data: 10000
-------------Round number:  87  -------------
selected users: [16, 81, 85, 32, 39, 25, 26, 29, 65, 7]
random features: torch.Size([106, 16, 32, 32]) torch.Size([106])
random features: torch.Size([102, 16, 32, 32]) torch.Size([102])
random features: torch.Size([100, 16, 32, 32]) torch.Size([100])
random features: torch.Size([99, 16, 32, 32]) torch.Size([99])
random features: torch.Size([103, 16, 32, 32]) torch.Size([103])
random features: torch.Size([100, 16, 32, 32]) torch.Size([100])
random features: torch.Size([105, 16, 32, 32]) torch.Size([105])
random features: torch.Size([109, 16, 32, 32]) torch.Size([109])
random features: torch.Size([99, 16, 32, 32]) torch.Size([99])
random features: torch.Size([95, 16, 32, 32]) torch.Size([95])
all data: 1018
Local adapation with distilling: 0.0001
training loss: tensor(0.3486) feature loss: tensor(0.1584)
Local adapation with distilling: 0.0001
training loss: tensor(0.7189) feature loss: tensor(0.1758)
Local adapation with distilling: 0.0001
training loss: tensor(0.3360) feature loss: tensor(0.1888)
Local adapation with distilling: 0.0001
training loss: tensor(0.3130) feature loss: tensor(0.1657)
Local adapation with distilling: 0.0001
training loss: tensor(0.3596) feature loss: tensor(0.1794)
Local adapation with distilling: 0.0001
training loss: tensor(0.3315) feature loss: tensor(0.1638)
Local adapation with distilling: 0.0001
training loss: tensor(0.3388) feature loss: tensor(0.1777)
Local adapation with distilling: 0.0001
training loss: tensor(0.3066) feature loss: tensor(0.1771)
Local adapation with distilling: 0.0001
training loss: tensor(0.3457) feature loss: tensor(0.1934)
Local adapation with distilling: 0.0001
training loss: tensor(0.3600) feature loss: tensor(0.1721)
Global Model Acc on global data: 0.651 length of data: 10000
-------------Round number:  88  -------------
selected users: [95, 53, 43, 84, 2, 74, 55, 31, 54, 97]
random features: torch.Size([100, 16, 32, 32]) torch.Size([100])
random features: torch.Size([115, 16, 32, 32]) torch.Size([115])
random features: torch.Size([98, 16, 32, 32]) torch.Size([98])
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([97, 16, 32, 32]) torch.Size([97])
random features: torch.Size([104, 16, 32, 32]) torch.Size([104])
random features: torch.Size([95, 16, 32, 32]) torch.Size([95])
all data: 993
Local adapation with distilling: 0.0001
training loss: tensor(0.2763) feature loss: tensor(0.1495)
Local adapation with distilling: 0.0001
training loss: tensor(0.2825) feature loss: tensor(0.1513)
Local adapation with distilling: 0.0001
training loss: tensor(0.3200) feature loss: tensor(0.1616)
Local adapation with distilling: 0.0001
training loss: tensor(0.3228) feature loss: tensor(0.1711)
Local adapation with distilling: 0.0001
training loss: tensor(0.3003) feature loss: tensor(0.1658)
Local adapation with distilling: 0.0001
training loss: tensor(0.2944) feature loss: tensor(0.1605)
Local adapation with distilling: 0.0001
training loss: tensor(0.2986) feature loss: tensor(0.1531)
Local adapation with distilling: 0.0001
training loss: tensor(0.3134) feature loss: tensor(0.1533)
Local adapation with distilling: 0.0001
training loss: tensor(0.3507) feature loss: tensor(0.1555)
Local adapation with distilling: 0.0001
training loss: tensor(0.3684) feature loss: tensor(0.1646)
Global Model Acc on global data: 0.6507 length of data: 10000
-------------Round number:  89  -------------
selected users: [65, 21, 87, 6, 46, 74, 44, 60, 72, 5]
random features: torch.Size([99, 16, 32, 32]) torch.Size([99])
random features: torch.Size([94, 16, 32, 32]) torch.Size([94])
random features: torch.Size([95, 16, 32, 32]) torch.Size([95])
random features: torch.Size([104, 16, 32, 32]) torch.Size([104])
random features: torch.Size([103, 16, 32, 32]) torch.Size([103])
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([94, 16, 32, 32]) torch.Size([94])
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([115, 16, 32, 32]) torch.Size([115])
random features: torch.Size([102, 16, 32, 32]) torch.Size([102])
all data: 998
Local adapation with distilling: 0.0001
training loss: tensor(0.3330) feature loss: tensor(0.1531)
Local adapation with distilling: 0.0001
training loss: tensor(0.3447) feature loss: tensor(0.1529)
Local adapation with distilling: 0.0001
training loss: tensor(0.3734) feature loss: tensor(0.1545)
Local adapation with distilling: 0.0001
training loss: tensor(0.3377) feature loss: tensor(0.1397)
Local adapation with distilling: 0.0001
training loss: tensor(0.3444) feature loss: tensor(0.1403)
Local adapation with distilling: 0.0001
training loss: tensor(0.3099) feature loss: tensor(0.1514)
Local adapation with distilling: 0.0001
training loss: tensor(0.3863) feature loss: tensor(0.1635)
Local adapation with distilling: 0.0001
training loss: tensor(0.3374) feature loss: tensor(0.1588)
Local adapation with distilling: 0.0001
training loss: tensor(0.3494) feature loss: tensor(0.1707)
Local adapation with distilling: 0.0001
training loss: tensor(0.3379) feature loss: tensor(0.1426)
Global Model Acc on global data: 0.6538 length of data: 10000
-------------Round number:  90  -------------
selected users: [25, 85, 96, 89, 65, 94, 5, 35, 36, 92]
random features: torch.Size([100, 16, 32, 32]) torch.Size([100])
random features: torch.Size([100, 16, 32, 32]) torch.Size([100])
random features: torch.Size([102, 16, 32, 32]) torch.Size([102])
random features: torch.Size([108, 16, 32, 32]) torch.Size([108])
random features: torch.Size([99, 16, 32, 32]) torch.Size([99])
random features: torch.Size([101, 16, 32, 32]) torch.Size([101])
random features: torch.Size([102, 16, 32, 32]) torch.Size([102])
random features: torch.Size([106, 16, 32, 32]) torch.Size([106])
random features: torch.Size([101, 16, 32, 32]) torch.Size([101])
random features: torch.Size([93, 16, 32, 32]) torch.Size([93])
all data: 1012
Local adapation with distilling: 0.0001
training loss: tensor(0.3396) feature loss: tensor(0.1442)
Local adapation with distilling: 0.0001
training loss: tensor(0.3228) feature loss: tensor(0.1624)
Local adapation with distilling: 0.0001
training loss: tensor(0.6477) feature loss: tensor(0.1813)
Local adapation with distilling: 0.0001
training loss: tensor(0.3143) feature loss: tensor(0.1574)
Local adapation with distilling: 0.0001
training loss: tensor(0.3227) feature loss: tensor(0.1619)
Local adapation with distilling: 0.0001
training loss: tensor(0.3284) feature loss: tensor(0.1505)
Local adapation with distilling: 0.0001
training loss: tensor(0.3195) feature loss: tensor(0.1457)
Local adapation with distilling: 0.0001
training loss: tensor(0.4078) feature loss: tensor(0.1586)
Local adapation with distilling: 0.0001
training loss: tensor(0.3377) feature loss: tensor(0.1585)
Local adapation with distilling: 0.0001
training loss: tensor(0.4108) feature loss: tensor(0.1662)
Global Model Acc on global data: 0.6531 length of data: 10000
-------------Round number:  91  -------------
selected users: [75, 25, 3, 52, 78, 54, 59, 26, 62, 97]
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([100, 16, 32, 32]) torch.Size([100])
random features: torch.Size([106, 16, 32, 32]) torch.Size([106])
random features: torch.Size([102, 16, 32, 32]) torch.Size([102])
random features: torch.Size([104, 16, 32, 32]) torch.Size([104])
random features: torch.Size([104, 16, 32, 32]) torch.Size([104])
random features: torch.Size([103, 16, 32, 32]) torch.Size([103])
random features: torch.Size([105, 16, 32, 32]) torch.Size([105])
random features: torch.Size([93, 16, 32, 32]) torch.Size([93])
random features: torch.Size([95, 16, 32, 32]) torch.Size([95])
all data: 1008
Local adapation with distilling: 0.0001
training loss: tensor(0.3537) feature loss: tensor(0.1568)
Local adapation with distilling: 0.0001
training loss: tensor(0.3047) feature loss: tensor(0.1366)
Local adapation with distilling: 0.0001
training loss: tensor(0.3372) feature loss: tensor(0.1523)
Local adapation with distilling: 0.0001
training loss: tensor(0.5173) feature loss: tensor(0.1670)
Local adapation with distilling: 0.0001
training loss: tensor(0.3932) feature loss: tensor(0.1760)
Local adapation with distilling: 0.0001
training loss: tensor(0.3698) feature loss: tensor(0.1460)
Local adapation with distilling: 0.0001
training loss: tensor(0.4323) feature loss: tensor(0.1471)
Local adapation with distilling: 0.0001
training loss: tensor(0.3437) feature loss: tensor(0.1568)
Local adapation with distilling: 0.0001
training loss: tensor(0.3913) feature loss: tensor(0.1666)
Local adapation with distilling: 0.0001
training loss: tensor(0.3724) feature loss: tensor(0.1755)
Global Model Acc on global data: 0.6514 length of data: 10000
-------------Round number:  92  -------------
selected users: [25, 99, 73, 61, 66, 36, 23, 83, 77, 6]
random features: torch.Size([100, 16, 32, 32]) torch.Size([100])
random features: torch.Size([93, 16, 32, 32]) torch.Size([93])
random features: torch.Size([104, 16, 32, 32]) torch.Size([104])
random features: torch.Size([101, 16, 32, 32]) torch.Size([101])
random features: torch.Size([108, 16, 32, 32]) torch.Size([108])
random features: torch.Size([101, 16, 32, 32]) torch.Size([101])
random features: torch.Size([98, 16, 32, 32]) torch.Size([98])
random features: torch.Size([101, 16, 32, 32]) torch.Size([101])
random features: torch.Size([92, 16, 32, 32]) torch.Size([92])
random features: torch.Size([104, 16, 32, 32]) torch.Size([104])
all data: 1002
Local adapation with distilling: 0.0001
training loss: tensor(0.3674) feature loss: tensor(0.1609)
Local adapation with distilling: 0.0001
training loss: tensor(0.4579) feature loss: tensor(0.1794)
Local adapation with distilling: 0.0001
training loss: tensor(0.4131) feature loss: tensor(0.1945)
Local adapation with distilling: 0.0001
training loss: tensor(0.4279) feature loss: tensor(0.1700)
Local adapation with distilling: 0.0001
training loss: tensor(0.4411) feature loss: tensor(0.1778)
Local adapation with distilling: 0.0001
training loss: tensor(0.3936) feature loss: tensor(0.1718)
Local adapation with distilling: 0.0001
training loss: tensor(0.4736) feature loss: tensor(0.1996)
Local adapation with distilling: 0.0001
training loss: tensor(0.4699) feature loss: tensor(0.2129)
Local adapation with distilling: 0.0001
training loss: tensor(0.5329) feature loss: tensor(0.1939)
Local adapation with distilling: 0.0001
training loss: tensor(0.4057) feature loss: tensor(0.1756)
Global Model Acc on global data: 0.6506 length of data: 10000
-------------Round number:  93  -------------
selected users: [75, 82, 56, 27, 42, 35, 1, 97, 66, 61]
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([92, 16, 32, 32]) torch.Size([92])
random features: torch.Size([110, 16, 32, 32]) torch.Size([110])
random features: torch.Size([97, 16, 32, 32]) torch.Size([97])
random features: torch.Size([95, 16, 32, 32]) torch.Size([95])
random features: torch.Size([106, 16, 32, 32]) torch.Size([106])
random features: torch.Size([104, 16, 32, 32]) torch.Size([104])
random features: torch.Size([95, 16, 32, 32]) torch.Size([95])
random features: torch.Size([108, 16, 32, 32]) torch.Size([108])
random features: torch.Size([101, 16, 32, 32]) torch.Size([101])
all data: 1004
Local adapation with distilling: 0.0001
training loss: tensor(0.3655) feature loss: tensor(0.1811)
Local adapation with distilling: 0.0001
training loss: tensor(0.3699) feature loss: tensor(0.1848)
Local adapation with distilling: 0.0001
training loss: tensor(0.3757) feature loss: tensor(0.1707)
Local adapation with distilling: 0.0001
training loss: tensor(0.4289) feature loss: tensor(0.1844)
Local adapation with distilling: 0.0001
training loss: tensor(0.3710) feature loss: tensor(0.1737)
Local adapation with distilling: 0.0001
training loss: tensor(0.3908) feature loss: tensor(0.1888)
Local adapation with distilling: 0.0001
training loss: tensor(0.3701) feature loss: tensor(0.1706)
Local adapation with distilling: 0.0001
training loss: tensor(0.3946) feature loss: tensor(0.1876)
Local adapation with distilling: 0.0001
training loss: tensor(0.3749) feature loss: tensor(0.1828)
Local adapation with distilling: 0.0001
training loss: tensor(0.3589) feature loss: tensor(0.1935)
Global Model Acc on global data: 0.6566 length of data: 10000
save a model
-------------Round number:  94  -------------
selected users: [13, 73, 5, 18, 99, 48, 23, 4, 35, 17]
random features: torch.Size([101, 16, 32, 32]) torch.Size([101])
random features: torch.Size([104, 16, 32, 32]) torch.Size([104])
random features: torch.Size([102, 16, 32, 32]) torch.Size([102])
random features: torch.Size([99, 16, 32, 32]) torch.Size([99])
random features: torch.Size([93, 16, 32, 32]) torch.Size([93])
random features: torch.Size([95, 16, 32, 32]) torch.Size([95])
random features: torch.Size([98, 16, 32, 32]) torch.Size([98])
random features: torch.Size([98, 16, 32, 32]) torch.Size([98])
random features: torch.Size([106, 16, 32, 32]) torch.Size([106])
random features: torch.Size([107, 16, 32, 32]) torch.Size([107])
all data: 1003
Local adapation with distilling: 0.0001
training loss: tensor(0.3881) feature loss: tensor(0.1700)
Local adapation with distilling: 0.0001
training loss: tensor(0.3203) feature loss: tensor(0.1611)
Local adapation with distilling: 0.0001
training loss: tensor(0.3036) feature loss: tensor(0.1415)
Local adapation with distilling: 0.0001
training loss: tensor(0.3829) feature loss: tensor(0.1601)
Local adapation with distilling: 0.0001
training loss: tensor(0.3395) feature loss: tensor(0.1557)
Local adapation with distilling: 0.0001
training loss: tensor(0.4006) feature loss: tensor(0.1472)
Local adapation with distilling: 0.0001
training loss: tensor(0.3637) feature loss: tensor(0.1807)
Local adapation with distilling: 0.0001
training loss: tensor(0.3622) feature loss: tensor(0.1556)
Local adapation with distilling: 0.0001
training loss: tensor(0.3058) feature loss: tensor(0.1443)
Local adapation with distilling: 0.0001
training loss: tensor(0.2992) feature loss: tensor(0.1389)
Global Model Acc on global data: 0.6572 length of data: 10000
save a model
-------------Round number:  95  -------------
selected users: [88, 9, 1, 60, 95, 26, 45, 71, 44, 21]
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([102, 16, 32, 32]) torch.Size([102])
random features: torch.Size([104, 16, 32, 32]) torch.Size([104])
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([100, 16, 32, 32]) torch.Size([100])
random features: torch.Size([105, 16, 32, 32]) torch.Size([105])
random features: torch.Size([100, 16, 32, 32]) torch.Size([100])
random features: torch.Size([101, 16, 32, 32]) torch.Size([101])
random features: torch.Size([94, 16, 32, 32]) torch.Size([94])
random features: torch.Size([94, 16, 32, 32]) torch.Size([94])
all data: 992
Local adapation with distilling: 0.0001
training loss: tensor(0.2665) feature loss: tensor(0.1355)
Local adapation with distilling: 0.0001
training loss: tensor(0.5546) feature loss: tensor(0.1427)
Local adapation with distilling: 0.0001
training loss: tensor(0.2722) feature loss: tensor(0.1373)
Local adapation with distilling: 0.0001
training loss: tensor(0.2578) feature loss: tensor(0.1350)
Local adapation with distilling: 0.0001
training loss: tensor(0.2327) feature loss: tensor(0.1317)
Local adapation with distilling: 0.0001
training loss: tensor(0.2539) feature loss: tensor(0.1392)
Local adapation with distilling: 0.0001
training loss: tensor(0.2392) feature loss: tensor(0.1306)
Local adapation with distilling: 0.0001
training loss: tensor(0.2321) feature loss: tensor(0.1309)
Local adapation with distilling: 0.0001
training loss: tensor(0.2886) feature loss: tensor(0.1441)
Local adapation with distilling: 0.0001
training loss: tensor(0.2582) feature loss: tensor(0.1464)
Global Model Acc on global data: 0.6509 length of data: 10000
-------------Round number:  96  -------------
selected users: [41, 28, 52, 15, 87, 17, 75, 42, 45, 49]
random features: torch.Size([95, 16, 32, 32]) torch.Size([95])
random features: torch.Size([102, 16, 32, 32]) torch.Size([102])
random features: torch.Size([102, 16, 32, 32]) torch.Size([102])
random features: torch.Size([103, 16, 32, 32]) torch.Size([103])
random features: torch.Size([95, 16, 32, 32]) torch.Size([95])
random features: torch.Size([107, 16, 32, 32]) torch.Size([107])
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([95, 16, 32, 32]) torch.Size([95])
random features: torch.Size([100, 16, 32, 32]) torch.Size([100])
random features: torch.Size([99, 16, 32, 32]) torch.Size([99])
all data: 994
Local adapation with distilling: 0.0001
training loss: tensor(0.2937) feature loss: tensor(0.1570)
Local adapation with distilling: 0.0001
training loss: tensor(0.3991) feature loss: tensor(0.1645)
Local adapation with distilling: 0.0001
training loss: tensor(0.5835) feature loss: tensor(0.1652)
Local adapation with distilling: 0.0001
training loss: tensor(0.3784) feature loss: tensor(0.1603)
Local adapation with distilling: 0.0001
training loss: tensor(0.3701) feature loss: tensor(0.1801)
Local adapation with distilling: 0.0001
training loss: tensor(0.2692) feature loss: tensor(0.1378)
Local adapation with distilling: 0.0001
training loss: tensor(0.2952) feature loss: tensor(0.1542)
Local adapation with distilling: 0.0001
training loss: tensor(0.2944) feature loss: tensor(0.1392)
Local adapation with distilling: 0.0001
training loss: tensor(0.2642) feature loss: tensor(0.1394)
Local adapation with distilling: 0.0001
training loss: tensor(0.3253) feature loss: tensor(0.1593)
Global Model Acc on global data: 0.6508 length of data: 10000
-------------Round number:  97  -------------
selected users: [31, 43, 64, 56, 85, 2, 70, 21, 34, 50]
random features: torch.Size([97, 16, 32, 32]) torch.Size([97])
random features: torch.Size([98, 16, 32, 32]) torch.Size([98])
random features: torch.Size([98, 16, 32, 32]) torch.Size([98])
random features: torch.Size([110, 16, 32, 32]) torch.Size([110])
random features: torch.Size([100, 16, 32, 32]) torch.Size([100])
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([96, 16, 32, 32]) torch.Size([96])
random features: torch.Size([94, 16, 32, 32]) torch.Size([94])
random features: torch.Size([95, 16, 32, 32]) torch.Size([95])
random features: torch.Size([98, 16, 32, 32]) torch.Size([98])
all data: 982
Local adapation with distilling: 0.0001
training loss: tensor(0.3398) feature loss: tensor(0.1519)
Local adapation with distilling: 0.0001
training loss: tensor(0.3270) feature loss: tensor(0.1887)
Local adapation with distilling: 0.0001
training loss: tensor(0.3822) feature loss: tensor(0.1469)
Local adapation with distilling: 0.0001
training loss: tensor(0.2976) feature loss: tensor(0.1517)
Local adapation with distilling: 0.0001
training loss: tensor(0.2965) feature loss: tensor(0.1707)
Local adapation with distilling: 0.0001
training loss: tensor(0.3134) feature loss: tensor(0.1580)
Local adapation with distilling: 0.0001
training loss: tensor(0.3205) feature loss: tensor(0.1595)
Local adapation with distilling: 0.0001
training loss: tensor(0.3088) feature loss: tensor(0.1642)
Local adapation with distilling: 0.0001
training loss: tensor(0.3102) feature loss: tensor(0.1585)
Local adapation with distilling: 0.0001
training loss: tensor(0.3486) feature loss: tensor(0.1908)
Global Model Acc on global data: 0.6523 length of data: 10000
-------------Round number:  98  -------------
selected users: [11, 48, 97, 14, 22, 36, 99, 47, 33, 81]
random features: torch.Size([106, 16, 32, 32]) torch.Size([106])
random features: torch.Size([95, 16, 32, 32]) torch.Size([95])
random features: torch.Size([95, 16, 32, 32]) torch.Size([95])
random features: torch.Size([99, 16, 32, 32]) torch.Size([99])
random features: torch.Size([102, 16, 32, 32]) torch.Size([102])
random features: torch.Size([101, 16, 32, 32]) torch.Size([101])
random features: torch.Size([93, 16, 32, 32]) torch.Size([93])
random features: torch.Size([93, 16, 32, 32]) torch.Size([93])
random features: torch.Size([97, 16, 32, 32]) torch.Size([97])
random features: torch.Size([102, 16, 32, 32]) torch.Size([102])
all data: 983
Local adapation with distilling: 0.0001
training loss: tensor(0.3283) feature loss: tensor(0.1537)
Local adapation with distilling: 0.0001
training loss: tensor(0.3524) feature loss: tensor(0.1646)
Local adapation with distilling: 0.0001
training loss: tensor(0.3583) feature loss: tensor(0.1752)
Local adapation with distilling: 0.0001
training loss: tensor(0.3783) feature loss: tensor(0.1935)
Local adapation with distilling: 0.0001
training loss: tensor(0.5750) feature loss: tensor(0.1705)
Local adapation with distilling: 0.0001
training loss: tensor(0.3213) feature loss: tensor(0.1657)
Local adapation with distilling: 0.0001
training loss: tensor(0.3429) feature loss: tensor(0.1686)
Local adapation with distilling: 0.0001
training loss: tensor(0.3930) feature loss: tensor(0.1763)
Local adapation with distilling: 0.0001
training loss: tensor(0.3494) feature loss: tensor(0.1810)
Local adapation with distilling: 0.0001
training loss: tensor(0.8949) feature loss: tensor(0.1643)
Global Model Acc on global data: 0.655 length of data: 10000
-------------Round number:  99  -------------
selected users: [14, 34, 30, 78, 16, 15, 91, 38, 10, 85]
random features: torch.Size([99, 16, 32, 32]) torch.Size([99])
random features: torch.Size([95, 16, 32, 32]) torch.Size([95])
random features: torch.Size([95, 16, 32, 32]) torch.Size([95])
random features: torch.Size([104, 16, 32, 32]) torch.Size([104])
random features: torch.Size([106, 16, 32, 32]) torch.Size([106])
random features: torch.Size([103, 16, 32, 32]) torch.Size([103])
random features: torch.Size([105, 16, 32, 32]) torch.Size([105])
random features: torch.Size([109, 16, 32, 32]) torch.Size([109])
random features: torch.Size([93, 16, 32, 32]) torch.Size([93])
random features: torch.Size([100, 16, 32, 32]) torch.Size([100])
all data: 1009
Local adapation with distilling: 0.0001
training loss: tensor(0.3138) feature loss: tensor(0.1592)
Local adapation with distilling: 0.0001
training loss: tensor(0.2791) feature loss: tensor(0.1351)
Local adapation with distilling: 0.0001
training loss: tensor(0.3443) feature loss: tensor(0.1598)
Local adapation with distilling: 0.0001
training loss: tensor(0.3115) feature loss: tensor(0.1764)
Local adapation with distilling: 0.0001
training loss: tensor(0.3160) feature loss: tensor(0.1327)
Local adapation with distilling: 0.0001
training loss: tensor(0.4193) feature loss: tensor(0.1618)
Local adapation with distilling: 0.0001
training loss: tensor(0.3123) feature loss: tensor(0.1335)
Local adapation with distilling: 0.0001
training loss: tensor(0.2818) feature loss: tensor(0.1575)
Local adapation with distilling: 0.0001
training loss: tensor(0.3154) feature loss: tensor(0.1512)
Local adapation with distilling: 0.0001
training loss: tensor(0.2727) feature loss: tensor(0.1577)
Global Model Acc on global data: 0.6544 length of data: 10000
