nohup: ignoring input
================================================================================
Summary of training process:
Dataset                : Cifar10
Batch size             : 64
Learing rate           : 0.001
Number of total clients: 100
Split method           : quantity
Split parameter        : 3.0
Clients per round      : 10
Number of global rounds: 100
Number of local rounds : 10
Feature from layer     : 12
Feature percentage     : 0.2
Local training loss    : CE_CE_KL
Loss of beta           : 1.0
Algorithm              : FedFea
Modelname              : MOBNET
Mode                   : training
Seed                   : 0
================================================================================
Files already downloaded and verified
Files already downloaded and verified
Class frequencies:
client,class0,class1,class2,class3,class4,class5,class6,class7,class8,class9,Amount
Client   0,0.298,0.00,0.00,0.00,0.00,0.375,0.00,0.00,0.327,0.00,496
Client   1,0.00,0.321,0.00,0.00,0.00,0.358,0.00,0.00,0.00,0.321,520
Client   2,0.307,0.346,0.346,0.00,0.00,0.00,0.00,0.00,0.00,0.00,482
Client   3,0.00,0.00,0.00,0.337,0.00,0.00,0.377,0.286,0.00,0.00,531
Client   4,0.00,0.00,0.340,0.00,0.320,0.00,0.00,0.00,0.00,0.340,491
Client   5,0.00,0.00,0.327,0.00,0.308,0.365,0.00,0.00,0.00,0.00,510
Client   6,0.00,0.00,0.319,0.00,0.300,0.00,0.382,0.00,0.00,0.00,524
Client   7,0.00,0.00,0.00,0.00,0.330,0.00,0.00,0.319,0.00,0.351,476
Client   8,0.00,0.347,0.00,0.00,0.00,0.00,0.00,0.316,0.337,0.00,481
Client   9,0.286,0.00,0.00,0.00,0.00,0.00,0.389,0.00,0.00,0.325,514
Client  10,0.315,0.00,0.00,0.00,0.00,0.00,0.00,0.326,0.00,0.358,466
Client  11,0.00,0.313,0.00,0.00,0.00,0.00,0.375,0.00,0.00,0.313,534
Client  12,0.306,0.347,0.347,0.00,0.00,0.00,0.00,0.00,0.00,0.00,481
Client  13,0.00,0.329,0.00,0.352,0.00,0.00,0.00,0.00,0.319,0.00,508
Client  14,0.00,0.00,0.00,0.359,0.315,0.00,0.00,0.00,0.325,0.00,498
Client  15,0.00,0.00,0.00,0.00,0.00,0.361,0.00,0.00,0.315,0.324,515
Client  16,0.00,0.00,0.00,0.337,0.00,0.00,0.377,0.286,0.00,0.00,531
Client  17,0.00,0.00,0.00,0.00,0.00,0.346,0.372,0.283,0.00,0.00,538
Client  18,0.00,0.337,0.00,0.00,0.00,0.00,0.00,0.00,0.327,0.337,496
Client  19,0.00,0.00,0.00,0.356,0.312,0.00,0.00,0.00,0.00,0.332,503
Client  20,0.309,0.351,0.00,0.00,0.00,0.00,0.00,0.00,0.340,0.00,476
Client  21,0.312,0.355,0.00,0.00,0.333,0.00,0.00,0.00,0.00,0.00,471
Client  22,0.00,0.00,0.326,0.349,0.00,0.00,0.00,0.00,0.00,0.326,513
Client  23,0.298,0.00,0.339,0.363,0.00,0.00,0.00,0.00,0.00,0.00,493
Client  24,0.00,0.00,0.340,0.00,0.320,0.00,0.00,0.00,0.00,0.340,491
Client  25,0.00,0.00,0.00,0.00,0.00,0.367,0.00,0.302,0.00,0.331,504
Client  26,0.00,0.00,0.00,0.00,0.00,0.00,0.378,0.00,0.306,0.316,529
Client  27,0.00,0.00,0.00,0.368,0.320,0.00,0.00,0.312,0.00,0.00,487
Client  28,0.00,0.00,0.00,0.00,0.00,0.360,0.00,0.00,0.315,0.325,514
Client  29,0.00,0.00,0.00,0.328,0.00,0.00,0.366,0.00,0.00,0.306,546
Client  30,0.309,0.00,0.352,0.00,0.00,0.00,0.00,0.00,0.339,0.00,475
Client  31,0.00,0.344,0.00,0.00,0.00,0.00,0.00,0.313,0.00,0.344,486
Client  32,0.00,0.00,0.335,0.359,0.00,0.00,0.00,0.305,0.00,0.00,498
Client  33,0.302,0.00,0.00,0.368,0.00,0.00,0.00,0.00,0.331,0.00,487
Client  34,0.00,0.352,0.00,0.00,0.328,0.00,0.00,0.320,0.00,0.00,475
Client  35,0.00,0.315,0.00,0.337,0.00,0.348,0.00,0.00,0.00,0.00,531
Client  36,0.289,0.00,0.00,0.00,0.00,0.00,0.394,0.00,0.317,0.00,508
Client  37,0.00,0.00,0.00,0.00,0.307,0.00,0.394,0.299,0.00,0.00,508
Client  38,0.00,0.00,0.00,0.00,0.00,0.339,0.366,0.00,0.295,0.00,546
Client  39,0.00,0.00,0.322,0.00,0.00,0.356,0.00,0.00,0.00,0.322,519
Client  40,0.320,0.00,0.00,0.00,0.00,0.00,0.00,0.330,0.350,0.00,460
Client  41,0.00,0.352,0.00,0.00,0.328,0.00,0.00,0.320,0.00,0.00,475
Client  42,0.00,0.00,0.352,0.00,0.328,0.00,0.00,0.320,0.00,0.00,475
Client  43,0.298,0.00,0.00,0.363,0.00,0.00,0.00,0.00,0.00,0.339,493
Client  44,0.313,0.00,0.355,0.00,0.332,0.00,0.00,0.00,0.00,0.00,470
Client  45,0.00,0.331,0.00,0.00,0.00,0.367,0.00,0.302,0.00,0.00,504
Client  46,0.00,0.00,0.00,0.00,0.00,0.00,0.385,0.293,0.00,0.322,519
Client  47,0.00,0.00,0.00,0.00,0.333,0.00,0.00,0.323,0.344,0.00,468
Client  48,0.309,0.352,0.00,0.00,0.00,0.00,0.00,0.00,0.339,0.00,475
Client  49,0.00,0.00,0.337,0.00,0.00,0.00,0.00,0.00,0.325,0.337,495
Client  50,0.298,0.339,0.00,0.363,0.00,0.00,0.00,0.00,0.00,0.00,493
Client  51,0.00,0.344,0.344,0.00,0.00,0.00,0.00,0.311,0.00,0.00,485
Client  52,0.286,0.00,0.325,0.00,0.00,0.00,0.389,0.00,0.00,0.00,514
Client  53,0.00,0.00,0.326,0.350,0.00,0.00,0.00,0.00,0.00,0.324,512
Client  54,0.00,0.00,0.319,0.00,0.298,0.00,0.382,0.00,0.00,0.00,523
Client  55,0.304,0.00,0.00,0.00,0.00,0.383,0.00,0.313,0.00,0.00,483
Client  56,0.00,0.303,0.00,0.00,0.00,0.335,0.362,0.00,0.00,0.00,552
Client  57,0.00,0.00,0.00,0.00,0.308,0.00,0.394,0.298,0.00,0.00,507
Client  58,0.289,0.00,0.00,0.00,0.00,0.00,0.394,0.00,0.317,0.00,508
Client  59,0.00,0.322,0.00,0.00,0.00,0.357,0.00,0.00,0.00,0.320,518
Client  60,0.306,0.347,0.347,0.00,0.00,0.00,0.00,0.00,0.00,0.00,481
Client  61,0.00,0.327,0.00,0.00,0.308,0.365,0.00,0.00,0.00,0.00,507
Client  62,0.316,0.00,0.359,0.00,0.00,0.00,0.00,0.325,0.00,0.00,465
Client  63,0.00,0.00,0.00,0.354,0.00,0.00,0.00,0.00,0.318,0.328,506
Client  64,0.00,0.00,0.00,0.00,0.317,0.376,0.00,0.307,0.00,0.00,492
Client  65,0.295,0.00,0.00,0.00,0.00,0.371,0.00,0.00,0.00,0.333,498
Client  66,0.00,0.00,0.00,0.327,0.00,0.00,0.368,0.00,0.00,0.305,544
Client  67,0.00,0.351,0.00,0.00,0.330,0.00,0.00,0.319,0.00,0.00,473
Client  68,0.00,0.00,0.00,0.00,0.302,0.00,0.387,0.00,0.311,0.00,517
Client  69,0.00,0.00,0.337,0.00,0.00,0.00,0.00,0.00,0.327,0.337,493
Client  70,0.304,0.00,0.00,0.00,0.00,0.383,0.00,0.313,0.00,0.00,483
Client  71,0.00,0.327,0.00,0.00,0.308,0.365,0.00,0.00,0.00,0.00,507
Client  72,0.00,0.00,0.324,0.00,0.00,0.361,0.00,0.00,0.314,0.00,512
Client  73,0.00,0.00,0.00,0.340,0.00,0.353,0.00,0.00,0.307,0.00,524
Client  74,0.00,0.344,0.00,0.00,0.323,0.00,0.00,0.00,0.333,0.00,483
Client  75,0.304,0.00,0.00,0.00,0.00,0.383,0.00,0.313,0.00,0.00,483
Client  76,0.00,0.00,0.00,0.333,0.292,0.00,0.375,0.00,0.00,0.00,534
Client  77,0.317,0.00,0.358,0.00,0.00,0.00,0.00,0.325,0.00,0.00,464
Client  78,0.00,0.00,0.00,0.340,0.00,0.353,0.00,0.00,0.307,0.00,524
Client  79,0.00,0.333,0.333,0.00,0.00,0.00,0.00,0.00,0.00,0.333,498
Client  80,0.306,0.00,0.00,0.370,0.324,0.00,0.00,0.00,0.00,0.00,481
Client  81,0.287,0.324,0.00,0.00,0.00,0.00,0.390,0.00,0.00,0.00,513
Client  82,0.317,0.00,0.358,0.00,0.00,0.00,0.00,0.325,0.00,0.00,464
Client  83,0.00,0.00,0.329,0.352,0.00,0.00,0.00,0.00,0.319,0.00,505
Client  84,0.306,0.00,0.00,0.370,0.324,0.00,0.00,0.00,0.00,0.00,481
Client  85,0.00,0.00,0.00,0.00,0.311,0.369,0.00,0.00,0.321,0.00,502
Client  86,0.00,0.00,0.312,0.00,0.00,0.00,0.376,0.00,0.00,0.312,532
Client  87,0.309,0.00,0.00,0.374,0.00,0.00,0.00,0.317,0.00,0.00,476
Client  88,0.00,0.344,0.00,0.00,0.323,0.00,0.00,0.00,0.333,0.00,483
Client  89,0.00,0.00,0.00,0.327,0.00,0.00,0.368,0.00,0.00,0.305,544
Client  90,0.309,0.00,0.00,0.374,0.00,0.00,0.00,0.317,0.00,0.00,476
Client  91,0.00,0.314,0.00,0.336,0.00,0.350,0.00,0.00,0.00,0.00,529
Client  92,0.313,0.00,0.354,0.00,0.333,0.00,0.00,0.00,0.00,0.00,469
Client  93,0.00,0.00,0.00,0.340,0.00,0.353,0.00,0.00,0.307,0.00,524
Client  94,0.00,0.00,0.00,0.00,0.308,0.00,0.394,0.298,0.00,0.00,507
Client  95,0.00,0.331,0.00,0.00,0.00,0.369,0.00,0.301,0.00,0.00,502
Client  96,0.287,0.00,0.324,0.00,0.00,0.00,0.390,0.00,0.00,0.00,513
Client  97,0.00,0.00,0.347,0.00,0.00,0.00,0.00,0.316,0.337,0.00,478
Client  98,0.00,0.344,0.00,0.00,0.323,0.00,0.00,0.00,0.333,0.00,483
Client  99,0.313,0.00,0.00,0.00,0.333,0.00,0.00,0.00,0.00,0.354,469
0 [0 5 8] [0 5 8] [1 2 3 4 6 7 9]
0 training: Counter({5: 186, 8: 162, 0: 148}) testing iid: Counter({8: 1000, 0: 1000, 5: 1000})
1 [1 5 9] [1 5 9] [0 2 3 4 6 7 8]
1 training: Counter({5: 186, 1: 167, 9: 167}) testing iid: Counter({1: 1000, 9: 1000, 5: 1000})
2 [0 1 2] [0 1 2] [3 4 5 6 7 8 9]
2 training: Counter({1: 167, 2: 167, 0: 148}) testing iid: Counter({0: 1000, 1: 1000, 2: 1000})
3 [3 6 7] [3 6 7] [0 1 2 4 5 8 9]
3 training: Counter({6: 200, 3: 179, 7: 152}) testing iid: Counter({3: 1000, 6: 1000, 7: 1000})
4 [2 4 9] [2 4 9] [0 1 3 5 6 7 8]
4 training: Counter({2: 167, 9: 167, 4: 157}) testing iid: Counter({9: 1000, 4: 1000, 2: 1000})
5 [2 4 5] [2 4 5] [0 1 3 6 7 8 9]
5 training: Counter({5: 186, 2: 167, 4: 157}) testing iid: Counter({5: 1000, 4: 1000, 2: 1000})
6 [2 4 6] [2 4 6] [0 1 3 5 7 8 9]
6 training: Counter({6: 200, 2: 167, 4: 157}) testing iid: Counter({6: 1000, 4: 1000, 2: 1000})
7 [4 7 9] [4 7 9] [0 1 2 3 5 6 8]
7 training: Counter({9: 167, 4: 157, 7: 152}) testing iid: Counter({9: 1000, 7: 1000, 4: 1000})
8 [1 7 8] [1 7 8] [0 2 3 4 5 6 9]
8 training: Counter({1: 167, 8: 162, 7: 152}) testing iid: Counter({8: 1000, 1: 1000, 7: 1000})
9 [0 6 9] [0 6 9] [1 2 3 4 5 7 8]
9 training: Counter({6: 200, 9: 167, 0: 147}) testing iid: Counter({0: 1000, 6: 1000, 9: 1000})
10 [0 7 9] [0 7 9] [1 2 3 4 5 6 8]
10 training: Counter({9: 167, 7: 152, 0: 147}) testing iid: Counter({0: 1000, 9: 1000, 7: 1000})
11 [1 6 9] [1 6 9] [0 2 3 4 5 7 8]
11 training: Counter({6: 200, 1: 167, 9: 167}) testing iid: Counter({6: 1000, 1: 1000, 9: 1000})
12 [0 1 2] [0 1 2] [3 4 5 6 7 8 9]
12 training: Counter({1: 167, 2: 167, 0: 147}) testing iid: Counter({0: 1000, 1: 1000, 2: 1000})
13 [1 3 8] [1 3 8] [0 2 4 5 6 7 9]
13 training: Counter({3: 179, 1: 167, 8: 162}) testing iid: Counter({3: 1000, 8: 1000, 1: 1000})
14 [3 4 8] [3 4 8] [0 1 2 5 6 7 9]
14 training: Counter({3: 179, 8: 162, 4: 157}) testing iid: Counter({3: 1000, 8: 1000, 4: 1000})
15 [5 8 9] [5 8 9] [0 1 2 3 4 6 7]
15 training: Counter({5: 186, 9: 167, 8: 162}) testing iid: Counter({8: 1000, 9: 1000, 5: 1000})
16 [3 6 7] [3 6 7] [0 1 2 4 5 8 9]
16 training: Counter({6: 200, 3: 179, 7: 152}) testing iid: Counter({3: 1000, 6: 1000, 7: 1000})
17 [5 6 7] [5 6 7] [0 1 2 3 4 8 9]
17 training: Counter({6: 200, 5: 186, 7: 152}) testing iid: Counter({6: 1000, 5: 1000, 7: 1000})
18 [1 8 9] [1 8 9] [0 2 3 4 5 6 7]
18 training: Counter({1: 167, 9: 167, 8: 162}) testing iid: Counter({8: 1000, 1: 1000, 9: 1000})
19 [3 4 9] [3 4 9] [0 1 2 5 6 7 8]
19 training: Counter({3: 179, 9: 167, 4: 157}) testing iid: Counter({3: 1000, 9: 1000, 4: 1000})
20 [0 1 8] [0 1 8] [2 3 4 5 6 7 9]
20 training: Counter({1: 167, 8: 162, 0: 147}) testing iid: Counter({8: 1000, 0: 1000, 1: 1000})
21 [0 1 4] [0 1 4] [2 3 5 6 7 8 9]
21 training: Counter({1: 167, 4: 157, 0: 147}) testing iid: Counter({0: 1000, 1: 1000, 4: 1000})
22 [2 3 9] [2 3 9] [0 1 4 5 6 7 8]
22 training: Counter({3: 179, 2: 167, 9: 167}) testing iid: Counter({3: 1000, 9: 1000, 2: 1000})
23 [0 2 3] [0 2 3] [1 4 5 6 7 8 9]
23 training: Counter({3: 179, 2: 167, 0: 147}) testing iid: Counter({3: 1000, 0: 1000, 2: 1000})
24 [2 4 9] [2 4 9] [0 1 3 5 6 7 8]
24 training: Counter({2: 167, 9: 167, 4: 157}) testing iid: Counter({9: 1000, 4: 1000, 2: 1000})
25 [5 7 9] [5 7 9] [0 1 2 3 4 6 8]
25 training: Counter({5: 185, 9: 167, 7: 152}) testing iid: Counter({9: 1000, 5: 1000, 7: 1000})
26 [6 8 9] [6 8 9] [0 1 2 3 4 5 7]
26 training: Counter({6: 200, 9: 167, 8: 162}) testing iid: Counter({8: 1000, 6: 1000, 9: 1000})
27 [3 4 7] [3 4 7] [0 1 2 5 6 8 9]
27 training: Counter({3: 179, 4: 156, 7: 152}) testing iid: Counter({3: 1000, 7: 1000, 4: 1000})
28 [5 8 9] [5 8 9] [0 1 2 3 4 6 7]
28 training: Counter({5: 185, 9: 167, 8: 162}) testing iid: Counter({8: 1000, 9: 1000, 5: 1000})
29 [3 6 9] [3 6 9] [0 1 2 4 5 7 8]
29 training: Counter({6: 200, 3: 179, 9: 167}) testing iid: Counter({3: 1000, 6: 1000, 9: 1000})
30 [0 2 8] [0 2 8] [1 3 4 5 6 7 9]
30 training: Counter({2: 167, 8: 161, 0: 147}) testing iid: Counter({8: 1000, 0: 1000, 2: 1000})
31 [1 7 9] [1 7 9] [0 2 3 4 5 6 8]
31 training: Counter({1: 167, 9: 167, 7: 152}) testing iid: Counter({1: 1000, 9: 1000, 7: 1000})
32 [2 3 7] [2 3 7] [0 1 4 5 6 8 9]
32 training: Counter({3: 179, 2: 167, 7: 152}) testing iid: Counter({3: 1000, 7: 1000, 2: 1000})
33 [0 3 8] [0 3 8] [1 2 4 5 6 7 9]
33 training: Counter({3: 179, 8: 161, 0: 147}) testing iid: Counter({3: 1000, 8: 1000, 0: 1000})
34 [1 4 7] [1 4 7] [0 2 3 5 6 8 9]
34 training: Counter({1: 167, 4: 156, 7: 152}) testing iid: Counter({1: 1000, 7: 1000, 4: 1000})
35 [1 3 5] [1 3 5] [0 2 4 6 7 8 9]
35 training: Counter({5: 185, 3: 179, 1: 167}) testing iid: Counter({3: 1000, 1: 1000, 5: 1000})
36 [0 6 8] [0 6 8] [1 2 3 4 5 7 9]
36 training: Counter({6: 200, 8: 161, 0: 147}) testing iid: Counter({8: 1000, 0: 1000, 6: 1000})
37 [4 6 7] [4 6 7] [0 1 2 3 5 8 9]
37 training: Counter({6: 200, 4: 156, 7: 152}) testing iid: Counter({6: 1000, 7: 1000, 4: 1000})
38 [5 6 8] [5 6 8] [0 1 2 3 4 7 9]
38 training: Counter({6: 200, 5: 185, 8: 161}) testing iid: Counter({8: 1000, 6: 1000, 5: 1000})
39 [2 5 9] [2 5 9] [0 1 3 4 6 7 8]
39 training: Counter({5: 185, 2: 167, 9: 167}) testing iid: Counter({9: 1000, 5: 1000, 2: 1000})
40 [0 7 8] [0 7 8] [1 2 3 4 5 6 9]
40 training: Counter({8: 161, 7: 152, 0: 147}) testing iid: Counter({8: 1000, 0: 1000, 7: 1000})
41 [1 4 7] [1 4 7] [0 2 3 5 6 8 9]
41 training: Counter({1: 167, 4: 156, 7: 152}) testing iid: Counter({1: 1000, 7: 1000, 4: 1000})
42 [2 4 7] [2 4 7] [0 1 3 5 6 8 9]
42 training: Counter({2: 167, 4: 156, 7: 152}) testing iid: Counter({7: 1000, 4: 1000, 2: 1000})
43 [0 3 9] [0 3 9] [1 2 4 5 6 7 8]
43 training: Counter({3: 179, 9: 167, 0: 147}) testing iid: Counter({3: 1000, 0: 1000, 9: 1000})
44 [0 2 4] [0 2 4] [1 3 5 6 7 8 9]
44 training: Counter({2: 167, 4: 156, 0: 147}) testing iid: Counter({0: 1000, 4: 1000, 2: 1000})
45 [1 5 7] [1 5 7] [0 2 3 4 6 8 9]
45 training: Counter({5: 185, 1: 167, 7: 152}) testing iid: Counter({1: 1000, 5: 1000, 7: 1000})
46 [6 7 9] [6 7 9] [0 1 2 3 4 5 8]
46 training: Counter({6: 200, 9: 167, 7: 152}) testing iid: Counter({6: 1000, 9: 1000, 7: 1000})
47 [4 7 8] [4 7 8] [0 1 2 3 5 6 9]
47 training: Counter({8: 161, 4: 156, 7: 151}) testing iid: Counter({8: 1000, 7: 1000, 4: 1000})
48 [0 1 8] [0 1 8] [2 3 4 5 6 7 9]
48 training: Counter({1: 167, 8: 161, 0: 147}) testing iid: Counter({8: 1000, 0: 1000, 1: 1000})
49 [2 8 9] [2 8 9] [0 1 3 4 5 6 7]
49 training: Counter({2: 167, 9: 167, 8: 161}) testing iid: Counter({8: 1000, 9: 1000, 2: 1000})
50 [0 1 3] [0 1 3] [2 4 5 6 7 8 9]
50 training: Counter({3: 179, 1: 167, 0: 147}) testing iid: Counter({3: 1000, 0: 1000, 1: 1000})
51 [1 2 7] [1 2 7] [0 3 4 5 6 8 9]
51 training: Counter({1: 167, 2: 167, 7: 151}) testing iid: Counter({1: 1000, 7: 1000, 2: 1000})
52 [0 2 6] [0 2 6] [1 3 4 5 7 8 9]
52 training: Counter({6: 200, 2: 167, 0: 147}) testing iid: Counter({0: 1000, 6: 1000, 2: 1000})
53 [2 3 9] [2 3 9] [0 1 4 5 6 7 8]
53 training: Counter({3: 179, 2: 167, 9: 166}) testing iid: Counter({3: 1000, 9: 1000, 2: 1000})
54 [2 4 6] [2 4 6] [0 1 3 5 7 8 9]
54 training: Counter({6: 200, 2: 167, 4: 156}) testing iid: Counter({6: 1000, 4: 1000, 2: 1000})
55 [0 5 7] [0 5 7] [1 2 3 4 6 8 9]
55 training: Counter({5: 185, 7: 151, 0: 147}) testing iid: Counter({0: 1000, 5: 1000, 7: 1000})
56 [1 5 6] [1 5 6] [0 2 3 4 7 8 9]
56 training: Counter({6: 200, 5: 185, 1: 167}) testing iid: Counter({6: 1000, 1: 1000, 5: 1000})
57 [4 6 7] [4 6 7] [0 1 2 3 5 8 9]
57 training: Counter({6: 200, 4: 156, 7: 151}) testing iid: Counter({6: 1000, 7: 1000, 4: 1000})
58 [0 6 8] [0 6 8] [1 2 3 4 5 7 9]
58 training: Counter({6: 200, 8: 161, 0: 147}) testing iid: Counter({8: 1000, 0: 1000, 6: 1000})
59 [1 5 9] [1 5 9] [0 2 3 4 6 7 8]
59 training: Counter({5: 185, 1: 167, 9: 166}) testing iid: Counter({1: 1000, 9: 1000, 5: 1000})
60 [0 1 2] [0 1 2] [3 4 5 6 7 8 9]
60 training: Counter({1: 167, 2: 167, 0: 147}) testing iid: Counter({0: 1000, 1: 1000, 2: 1000})
61 [1 4 5] [1 4 5] [0 2 3 6 7 8 9]
61 training: Counter({5: 185, 1: 166, 4: 156}) testing iid: Counter({1: 1000, 5: 1000, 4: 1000})
62 [0 2 7] [0 2 7] [1 3 4 5 6 8 9]
62 training: Counter({2: 167, 7: 151, 0: 147}) testing iid: Counter({0: 1000, 7: 1000, 2: 1000})
63 [3 8 9] [3 8 9] [0 1 2 4 5 6 7]
63 training: Counter({3: 179, 9: 166, 8: 161}) testing iid: Counter({3: 1000, 8: 1000, 9: 1000})
64 [4 5 7] [4 5 7] [0 1 2 3 6 8 9]
64 training: Counter({5: 185, 4: 156, 7: 151}) testing iid: Counter({5: 1000, 7: 1000, 4: 1000})
65 [0 5 9] [0 5 9] [1 2 3 4 6 7 8]
65 training: Counter({5: 185, 9: 166, 0: 147}) testing iid: Counter({0: 1000, 9: 1000, 5: 1000})
66 [3 6 9] [3 6 9] [0 1 2 4 5 7 8]
66 training: Counter({6: 200, 3: 178, 9: 166}) testing iid: Counter({3: 1000, 6: 1000, 9: 1000})
67 [1 4 7] [1 4 7] [0 2 3 5 6 8 9]
67 training: Counter({1: 166, 4: 156, 7: 151}) testing iid: Counter({1: 1000, 7: 1000, 4: 1000})
68 [4 6 8] [4 6 8] [0 1 2 3 5 7 9]
68 training: Counter({6: 200, 8: 161, 4: 156}) testing iid: Counter({8: 1000, 6: 1000, 4: 1000})
69 [2 8 9] [2 8 9] [0 1 3 4 5 6 7]
69 training: Counter({2: 166, 9: 166, 8: 161}) testing iid: Counter({8: 1000, 9: 1000, 2: 1000})
70 [0 5 7] [0 5 7] [1 2 3 4 6 8 9]
70 training: Counter({5: 185, 7: 151, 0: 147}) testing iid: Counter({0: 1000, 5: 1000, 7: 1000})
71 [1 4 5] [1 4 5] [0 2 3 6 7 8 9]
71 training: Counter({5: 185, 1: 166, 4: 156}) testing iid: Counter({1: 1000, 5: 1000, 4: 1000})
72 [2 5 8] [2 5 8] [0 1 3 4 6 7 9]
72 training: Counter({5: 185, 2: 166, 8: 161}) testing iid: Counter({8: 1000, 5: 1000, 2: 1000})
73 [3 5 8] [3 5 8] [0 1 2 4 6 7 9]
73 training: Counter({5: 185, 3: 178, 8: 161}) testing iid: Counter({3: 1000, 8: 1000, 5: 1000})
74 [1 4 8] [1 4 8] [0 2 3 5 6 7 9]
74 training: Counter({1: 166, 8: 161, 4: 156}) testing iid: Counter({8: 1000, 1: 1000, 4: 1000})
75 [0 5 7] [0 5 7] [1 2 3 4 6 8 9]
75 training: Counter({5: 185, 7: 151, 0: 147}) testing iid: Counter({0: 1000, 5: 1000, 7: 1000})
76 [3 4 6] [3 4 6] [0 1 2 5 7 8 9]
76 training: Counter({6: 200, 3: 178, 4: 156}) testing iid: Counter({3: 1000, 6: 1000, 4: 1000})
77 [0 2 7] [0 2 7] [1 3 4 5 6 8 9]
77 training: Counter({2: 166, 7: 151, 0: 147}) testing iid: Counter({0: 1000, 7: 1000, 2: 1000})
78 [3 5 8] [3 5 8] [0 1 2 4 6 7 9]
78 training: Counter({5: 185, 3: 178, 8: 161}) testing iid: Counter({3: 1000, 8: 1000, 5: 1000})
79 [1 2 9] [1 2 9] [0 3 4 5 6 7 8]
79 training: Counter({1: 166, 2: 166, 9: 166}) testing iid: Counter({1: 1000, 9: 1000, 2: 1000})
80 [0 3 4] [0 3 4] [1 2 5 6 7 8 9]
80 training: Counter({3: 178, 4: 156, 0: 147}) testing iid: Counter({3: 1000, 0: 1000, 4: 1000})
81 [0 1 6] [0 1 6] [2 3 4 5 7 8 9]
81 training: Counter({6: 200, 1: 166, 0: 147}) testing iid: Counter({0: 1000, 6: 1000, 1: 1000})
82 [0 2 7] [0 2 7] [1 3 4 5 6 8 9]
82 training: Counter({2: 166, 7: 151, 0: 147}) testing iid: Counter({0: 1000, 7: 1000, 2: 1000})
83 [2 3 8] [2 3 8] [0 1 4 5 6 7 9]
83 training: Counter({3: 178, 2: 166, 8: 161}) testing iid: Counter({3: 1000, 8: 1000, 2: 1000})
84 [0 3 4] [0 3 4] [1 2 5 6 7 8 9]
84 training: Counter({3: 178, 4: 156, 0: 147}) testing iid: Counter({3: 1000, 0: 1000, 4: 1000})
85 [4 5 8] [4 5 8] [0 1 2 3 6 7 9]
85 training: Counter({5: 185, 8: 161, 4: 156}) testing iid: Counter({8: 1000, 5: 1000, 4: 1000})
86 [2 6 9] [2 6 9] [0 1 3 4 5 7 8]
86 training: Counter({6: 200, 2: 166, 9: 166}) testing iid: Counter({6: 1000, 9: 1000, 2: 1000})
87 [0 3 7] [0 3 7] [1 2 4 5 6 8 9]
87 training: Counter({3: 178, 7: 151, 0: 147}) testing iid: Counter({3: 1000, 0: 1000, 7: 1000})
88 [1 4 8] [1 4 8] [0 2 3 5 6 7 9]
88 training: Counter({1: 166, 8: 161, 4: 156}) testing iid: Counter({8: 1000, 1: 1000, 4: 1000})
89 [3 6 9] [3 6 9] [0 1 2 4 5 7 8]
89 training: Counter({6: 200, 3: 178, 9: 166}) testing iid: Counter({3: 1000, 6: 1000, 9: 1000})
90 [0 3 7] [0 3 7] [1 2 4 5 6 8 9]
90 training: Counter({3: 178, 7: 151, 0: 147}) testing iid: Counter({3: 1000, 0: 1000, 7: 1000})
91 [1 3 5] [1 3 5] [0 2 4 6 7 8 9]
91 training: Counter({5: 185, 3: 178, 1: 166}) testing iid: Counter({3: 1000, 1: 1000, 5: 1000})
92 [0 2 4] [0 2 4] [1 3 5 6 7 8 9]
92 training: Counter({2: 166, 4: 156, 0: 147}) testing iid: Counter({0: 1000, 4: 1000, 2: 1000})
93 [3 5 8] [3 5 8] [0 1 2 4 6 7 9]
93 training: Counter({5: 185, 3: 178, 8: 161}) testing iid: Counter({3: 1000, 8: 1000, 5: 1000})
94 [4 6 7] [4 6 7] [0 1 2 3 5 8 9]
94 training: Counter({6: 200, 4: 156, 7: 151}) testing iid: Counter({6: 1000, 7: 1000, 4: 1000})
95 [1 5 7] [1 5 7] [0 2 3 4 6 8 9]
95 training: Counter({5: 185, 1: 166, 7: 151}) testing iid: Counter({1: 1000, 5: 1000, 7: 1000})
96 [0 2 6] [0 2 6] [1 3 4 5 7 8 9]
96 training: Counter({6: 200, 2: 166, 0: 147}) testing iid: Counter({0: 1000, 6: 1000, 2: 1000})
97 [2 7 8] [2 7 8] [0 1 3 4 5 6 9]
97 training: Counter({2: 166, 8: 161, 7: 151}) testing iid: Counter({8: 1000, 7: 1000, 2: 1000})
98 [1 4 8] [1 4 8] [0 2 3 5 6 7 9]
98 training: Counter({1: 166, 8: 161, 4: 156}) testing iid: Counter({8: 1000, 1: 1000, 4: 1000})
99 [0 4 9] [0 4 9] [1 2 3 5 6 7 8]
99 training: Counter({9: 166, 4: 156, 0: 147}) testing iid: Counter({0: 1000, 9: 1000, 4: 1000})
Num_samples of Training set per client: [496, 520, 482, 531, 491, 510, 524, 476, 481, 514, 466, 534, 481, 508, 498, 515, 531, 538, 496, 503, 476, 471, 513, 493, 491, 504, 529, 487, 514, 546, 475, 486, 498, 487, 475, 531, 508, 508, 546, 519, 460, 475, 475, 493, 470, 504, 519, 468, 475, 495, 493, 485, 514, 512, 523, 483, 552, 507, 508, 518, 481, 507, 465, 506, 492, 498, 544, 473, 517, 493, 483, 507, 512, 524, 483, 483, 534, 464, 524, 498, 481, 513, 464, 505, 481, 502, 532, 476, 483, 544, 476, 529, 469, 524, 507, 502, 513, 478, 483, 469]
Total_training_samples: 50000
Global test set: 10000
Finish Generating Samples, distribution saved
MobileNetV2(
  (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (layers): Sequential(
    (0): Block(
      (conv1): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): Block(
      (conv1): Conv2d(16, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=96, bias=False)
      (bn2): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(96, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(16, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (2): Block(
      (conv1): Conv2d(24, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=144, bias=False)
      (bn2): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(144, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (3): Block(
      (conv1): Conv2d(24, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(144, 144, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=144, bias=False)
      (bn2): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(144, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (4): Block(
      (conv1): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
      (bn2): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(192, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (5): Block(
      (conv1): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
      (bn2): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(192, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (6): Block(
      (conv1): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(192, 192, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=192, bias=False)
      (bn2): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(192, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (7): Block(
      (conv1): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
      (bn2): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (8): Block(
      (conv1): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
      (bn2): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (9): Block(
      (conv1): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
      (bn2): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (10): Block(
      (conv1): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
      (bn2): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(384, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(64, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (11): Block(
      (conv1): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)
      (bn2): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (12): Block(
      (conv1): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)
      (bn2): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (13): Block(
      (conv1): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(576, 576, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=576, bias=False)
      (bn2): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(576, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (14): Block(
      (conv1): Conv2d(160, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(960, 960, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=960, bias=False)
      (bn2): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(960, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (15): Block(
      (conv1): Conv2d(160, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(960, 960, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=960, bias=False)
      (bn2): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(960, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (16): Block(
      (conv1): Conv2d(160, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(960, 960, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=960, bias=False)
      (bn2): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(960, 320, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(160, 320, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (conv2): Conv2d(320, 1280, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn2): BatchNorm2d(1280, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (linear): Linear(in_features=1280, out_features=10, bias=True)
)
number of parameters: 2296922
clients initializting...
output size: 10
  0%|          | 0/100 [00:00<?, ?it/s]  1%|          | 1/100 [00:00<01:05,  1.51it/s]  2%|▏         | 2/100 [00:01<01:04,  1.51it/s]  3%|▎         | 3/100 [00:01<01:04,  1.51it/s]  4%|▍         | 4/100 [00:02<01:03,  1.51it/s]  5%|▌         | 5/100 [00:03<01:03,  1.50it/s]  6%|▌         | 6/100 [00:03<01:02,  1.51it/s]  7%|▋         | 7/100 [00:04<01:01,  1.51it/s]  8%|▊         | 8/100 [00:05<01:00,  1.52it/s]  9%|▉         | 9/100 [00:05<00:59,  1.52it/s] 10%|█         | 10/100 [00:06<00:59,  1.52it/s] 11%|█         | 11/100 [00:07<00:58,  1.52it/s] 12%|█▏        | 12/100 [00:07<00:57,  1.52it/s] 13%|█▎        | 13/100 [00:08<00:57,  1.52it/s] 14%|█▍        | 14/100 [00:09<00:57,  1.51it/s] 15%|█▌        | 15/100 [00:09<00:56,  1.51it/s] 16%|█▌        | 16/100 [00:10<00:56,  1.50it/s] 17%|█▋        | 17/100 [00:11<00:56,  1.47it/s] 18%|█▊        | 18/100 [00:11<00:55,  1.48it/s] 19%|█▉        | 19/100 [00:12<00:54,  1.48it/s] 20%|██        | 20/100 [00:13<00:53,  1.49it/s] 21%|██        | 21/100 [00:13<00:52,  1.50it/s] 22%|██▏       | 22/100 [00:14<00:51,  1.51it/s] 23%|██▎       | 23/100 [00:15<00:50,  1.51it/s] 24%|██▍       | 24/100 [00:15<00:50,  1.52it/s] 25%|██▌       | 25/100 [00:16<00:49,  1.52it/s] 26%|██▌       | 26/100 [00:17<00:48,  1.52it/s] 27%|██▋       | 27/100 [00:17<00:48,  1.52it/s] 28%|██▊       | 28/100 [00:18<00:47,  1.52it/s] 29%|██▉       | 29/100 [00:19<00:46,  1.52it/s] 30%|███       | 30/100 [00:19<00:46,  1.52it/s] 31%|███       | 31/100 [00:20<00:45,  1.53it/s] 32%|███▏      | 32/100 [00:21<00:44,  1.53it/s] 33%|███▎      | 33/100 [00:21<00:43,  1.53it/s] 34%|███▍      | 34/100 [00:22<00:43,  1.53it/s] 35%|███▌      | 35/100 [00:26<01:52,  1.73s/it] 36%|███▌      | 36/100 [00:27<01:30,  1.41s/it] 37%|███▋      | 37/100 [00:28<01:14,  1.19s/it] 38%|███▊      | 38/100 [00:28<01:03,  1.03s/it] 39%|███▉      | 39/100 [00:29<00:56,  1.09it/s] 40%|████      | 40/100 [00:30<00:53,  1.12it/s] 41%|████      | 41/100 [00:30<00:49,  1.18it/s] 42%|████▏     | 42/100 [00:31<00:45,  1.26it/s] 43%|████▎     | 43/100 [00:32<00:42,  1.34it/s] 44%|████▍     | 44/100 [00:32<00:40,  1.39it/s] 45%|████▌     | 45/100 [00:33<00:38,  1.42it/s] 46%|████▌     | 46/100 [00:34<00:37,  1.45it/s] 47%|████▋     | 47/100 [00:34<00:36,  1.46it/s] 48%|████▊     | 48/100 [00:35<00:35,  1.48it/s] 49%|████▉     | 49/100 [00:36<00:34,  1.49it/s] 50%|█████     | 50/100 [00:36<00:33,  1.50it/s] 51%|█████     | 51/100 [00:37<00:32,  1.51it/s] 52%|█████▏    | 52/100 [00:38<00:32,  1.50it/s] 53%|█████▎    | 53/100 [00:38<00:31,  1.50it/s] 54%|█████▍    | 54/100 [00:39<00:30,  1.50it/s] 55%|█████▌    | 55/100 [00:40<00:30,  1.48it/s] 56%|█████▌    | 56/100 [00:40<00:29,  1.50it/s] 57%|█████▋    | 57/100 [00:41<00:28,  1.50it/s] 58%|█████▊    | 58/100 [00:42<00:27,  1.51it/s] 59%|█████▉    | 59/100 [00:42<00:27,  1.51it/s] 60%|██████    | 60/100 [00:43<00:26,  1.49it/s] 61%|██████    | 61/100 [00:44<00:25,  1.50it/s] 62%|██████▏   | 62/100 [00:44<00:26,  1.43it/s] 63%|██████▎   | 63/100 [00:45<00:25,  1.44it/s] 64%|██████▍   | 64/100 [00:46<00:24,  1.47it/s] 65%|██████▌   | 65/100 [00:46<00:23,  1.48it/s] 66%|██████▌   | 66/100 [00:47<00:22,  1.49it/s] 67%|██████▋   | 67/100 [00:48<00:22,  1.49it/s] 68%|██████▊   | 68/100 [00:48<00:21,  1.50it/s] 69%|██████▉   | 69/100 [00:49<00:20,  1.50it/s] 70%|███████   | 70/100 [00:50<00:19,  1.51it/s] 71%|███████   | 71/100 [00:50<00:19,  1.51it/s] 72%|███████▏  | 72/100 [00:55<00:49,  1.75s/it] 73%|███████▎  | 73/100 [00:55<00:38,  1.43s/it] 74%|███████▍  | 74/100 [00:56<00:31,  1.20s/it] 75%|███████▌  | 75/100 [00:57<00:25,  1.04s/it] 76%|███████▌  | 76/100 [00:57<00:22,  1.08it/s] 77%|███████▋  | 77/100 [00:58<00:19,  1.18it/s] 78%|███████▊  | 78/100 [00:59<00:17,  1.27it/s] 79%|███████▉  | 79/100 [00:59<00:15,  1.33it/s] 80%|████████  | 80/100 [01:00<00:14,  1.38it/s] 81%|████████  | 81/100 [01:01<00:13,  1.40it/s] 82%|████████▏ | 82/100 [01:01<00:12,  1.43it/s] 83%|████████▎ | 83/100 [01:02<00:11,  1.46it/s] 84%|████████▍ | 84/100 [01:03<00:10,  1.48it/s] 85%|████████▌ | 85/100 [01:03<00:10,  1.50it/s] 86%|████████▌ | 86/100 [01:04<00:09,  1.49it/s] 87%|████████▋ | 87/100 [01:05<00:08,  1.50it/s] 88%|████████▊ | 88/100 [01:05<00:07,  1.51it/s] 89%|████████▉ | 89/100 [01:06<00:07,  1.51it/s] 90%|█████████ | 90/100 [01:07<00:06,  1.51it/s] 91%|█████████ | 91/100 [01:07<00:05,  1.51it/s] 92%|█████████▏| 92/100 [01:08<00:05,  1.51it/s] 93%|█████████▎| 93/100 [01:09<00:04,  1.52it/s] 94%|█████████▍| 94/100 [01:09<00:03,  1.52it/s] 95%|█████████▌| 95/100 [01:10<00:03,  1.52it/s] 96%|█████████▌| 96/100 [01:11<00:02,  1.52it/s] 97%|█████████▋| 97/100 [01:11<00:01,  1.52it/s] 98%|█████████▊| 98/100 [01:12<00:01,  1.52it/s] 99%|█████████▉| 99/100 [01:13<00:00,  1.53it/s]100%|██████████| 100/100 [01:13<00:00,  1.53it/s]100%|██████████| 100/100 [01:13<00:00,  1.36it/s]
Number of users per round / total users: 10  /  100
Finished creating FL server.
=== Training starts: algorithm FedFea ===
-------------Round number:  0  -------------
selected users: [26, 86, 2, 55, 75, 93, 16, 73, 54, 95]
random features: torch.Size([105, 96, 8, 8]) torch.Size([105])
random features: torch.Size([106, 96, 8, 8]) torch.Size([106])
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([104, 96, 8, 8]) torch.Size([104])
random features: torch.Size([106, 96, 8, 8]) torch.Size([106])
random features: torch.Size([104, 96, 8, 8]) torch.Size([104])
random features: torch.Size([104, 96, 8, 8]) torch.Size([104])
random features: torch.Size([100, 96, 8, 8]) torch.Size([100])
all data: 1017
Local adapation with distilling: 0.001
training loss: tensor(2.0499) feature loss: tensor(0.3910)
Local adapation with distilling: 0.001
training loss: tensor(2.0951) feature loss: tensor(0.3939)
Local adapation with distilling: 0.001
training loss: tensor(2.1042) feature loss: tensor(0.3802)
Local adapation with distilling: 0.001
training loss: tensor(2.2276) feature loss: tensor(0.4017)
Local adapation with distilling: 0.001
training loss: tensor(2.1781) feature loss: tensor(0.3890)
Local adapation with distilling: 0.001
training loss: tensor(2.1743) feature loss: tensor(0.4091)
Local adapation with distilling: 0.001
training loss: tensor(2.2338) feature loss: tensor(0.4102)
Local adapation with distilling: 0.001
training loss: tensor(2.1304) feature loss: tensor(0.4062)
Local adapation with distilling: 0.001
training loss: tensor(2.3208) feature loss: tensor(0.3967)
Local adapation with distilling: 0.001
training loss: tensor(2.0870) feature loss: tensor(0.3905)
Global Model Acc on global data: 0.1062 length of data: 10000
save a model
-------------Round number:  1  -------------
selected users: [80, 84, 33, 81, 93, 17, 36, 82, 69, 65]
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([97, 96, 8, 8]) torch.Size([97])
random features: torch.Size([102, 96, 8, 8]) torch.Size([102])
random features: torch.Size([104, 96, 8, 8]) torch.Size([104])
random features: torch.Size([107, 96, 8, 8]) torch.Size([107])
random features: torch.Size([101, 96, 8, 8]) torch.Size([101])
random features: torch.Size([92, 96, 8, 8]) torch.Size([92])
random features: torch.Size([98, 96, 8, 8]) torch.Size([98])
random features: torch.Size([99, 96, 8, 8]) torch.Size([99])
all data: 992
Local adapation with distilling: 0.000982
training loss: tensor(1.7212) feature loss: tensor(0.4784)
Local adapation with distilling: 0.000982
training loss: tensor(1.7518) feature loss: tensor(0.4797)
Local adapation with distilling: 0.000982
training loss: tensor(1.6675) feature loss: tensor(0.4782)
Local adapation with distilling: 0.000982
training loss: tensor(1.8038) feature loss: tensor(0.4641)
Local adapation with distilling: 0.000982
training loss: tensor(1.6898) feature loss: tensor(0.4564)
Local adapation with distilling: 0.000982
training loss: tensor(1.7022) feature loss: tensor(0.4639)
Local adapation with distilling: 0.000982
training loss: tensor(1.6641) feature loss: tensor(0.4581)
Local adapation with distilling: 0.000982
training loss: tensor(1.8045) feature loss: tensor(0.4666)
Local adapation with distilling: 0.000982
training loss: tensor(1.7013) feature loss: tensor(0.4663)
Local adapation with distilling: 0.000982
training loss: tensor(1.6381) feature loss: tensor(0.4670)
Global Model Acc on global data: 0.2031 length of data: 10000
save a model
-------------Round number:  2  -------------
selected users: [83, 30, 56, 24, 16, 23, 2, 27, 28, 13]
random features: torch.Size([101, 96, 8, 8]) torch.Size([101])
random features: torch.Size([95, 96, 8, 8]) torch.Size([95])
random features: torch.Size([110, 96, 8, 8]) torch.Size([110])
random features: torch.Size([98, 96, 8, 8]) torch.Size([98])
random features: torch.Size([106, 96, 8, 8]) torch.Size([106])
random features: torch.Size([98, 96, 8, 8]) torch.Size([98])
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([97, 96, 8, 8]) torch.Size([97])
random features: torch.Size([102, 96, 8, 8]) torch.Size([102])
random features: torch.Size([101, 96, 8, 8]) torch.Size([101])
all data: 1004
Local adapation with distilling: 0.000964
training loss: tensor(1.5202) feature loss: tensor(0.4292)
Local adapation with distilling: 0.000964
training loss: tensor(1.4984) feature loss: tensor(0.4296)
Local adapation with distilling: 0.000964
training loss: tensor(1.4503) feature loss: tensor(0.4116)
Local adapation with distilling: 0.000964
training loss: tensor(1.5940) feature loss: tensor(0.4373)
Local adapation with distilling: 0.000964
training loss: tensor(1.5500) feature loss: tensor(0.4301)
Local adapation with distilling: 0.000964
training loss: tensor(1.5514) feature loss: tensor(0.4330)
Local adapation with distilling: 0.000964
training loss: tensor(1.4770) feature loss: tensor(0.4368)
Local adapation with distilling: 0.000964
training loss: tensor(1.6933) feature loss: tensor(0.4414)
Local adapation with distilling: 0.000964
training loss: tensor(1.6474) feature loss: tensor(0.4348)
Local adapation with distilling: 0.000964
training loss: tensor(1.5034) feature loss: tensor(0.4389)
Global Model Acc on global data: 0.1836 length of data: 10000
-------------Round number:  3  -------------
selected users: [93, 67, 6, 64, 96, 83, 98, 42, 25, 15]
random features: torch.Size([104, 96, 8, 8]) torch.Size([104])
random features: torch.Size([94, 96, 8, 8]) torch.Size([94])
random features: torch.Size([104, 96, 8, 8]) torch.Size([104])
random features: torch.Size([98, 96, 8, 8]) torch.Size([98])
random features: torch.Size([102, 96, 8, 8]) torch.Size([102])
random features: torch.Size([101, 96, 8, 8]) torch.Size([101])
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([95, 96, 8, 8]) torch.Size([95])
random features: torch.Size([100, 96, 8, 8]) torch.Size([100])
random features: torch.Size([103, 96, 8, 8]) torch.Size([103])
all data: 997
Local adapation with distilling: 0.000946
training loss: tensor(1.4469) feature loss: tensor(0.4466)
Local adapation with distilling: 0.000946
training loss: tensor(1.4796) feature loss: tensor(0.4643)
Local adapation with distilling: 0.000946
training loss: tensor(1.5184) feature loss: tensor(0.4472)
Local adapation with distilling: 0.000946
training loss: tensor(1.5360) feature loss: tensor(0.4774)
Local adapation with distilling: 0.000946
training loss: tensor(1.5157) feature loss: tensor(0.4474)
Local adapation with distilling: 0.000946
training loss: tensor(1.3738) feature loss: tensor(0.4225)
Local adapation with distilling: 0.000946
training loss: tensor(1.3929) feature loss: tensor(0.4638)
Local adapation with distilling: 0.000946
training loss: tensor(1.5242) feature loss: tensor(0.4606)
Local adapation with distilling: 0.000946
training loss: tensor(1.4391) feature loss: tensor(0.4623)
Local adapation with distilling: 0.000946
training loss: tensor(1.5267) feature loss: tensor(0.4557)
Global Model Acc on global data: 0.2142 length of data: 10000
save a model
-------------Round number:  4  -------------
selected users: [20, 10, 96, 16, 63, 24, 53, 97, 41, 47]
random features: torch.Size([95, 96, 8, 8]) torch.Size([95])
random features: torch.Size([93, 96, 8, 8]) torch.Size([93])
random features: torch.Size([102, 96, 8, 8]) torch.Size([102])
random features: torch.Size([106, 96, 8, 8]) torch.Size([106])
random features: torch.Size([101, 96, 8, 8]) torch.Size([101])
random features: torch.Size([98, 96, 8, 8]) torch.Size([98])
random features: torch.Size([115, 96, 8, 8]) torch.Size([115])
random features: torch.Size([95, 96, 8, 8]) torch.Size([95])
random features: torch.Size([95, 96, 8, 8]) torch.Size([95])
random features: torch.Size([93, 96, 8, 8]) torch.Size([93])
all data: 993
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.5385) feature loss: tensor(0.5104)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.4628) feature loss: tensor(0.4908)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.5786) feature loss: tensor(0.4733)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.4152) feature loss: tensor(0.4799)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.3417) feature loss: tensor(0.4650)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.3469) feature loss: tensor(0.4525)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.3162) feature loss: tensor(0.4734)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.3578) feature loss: tensor(0.4691)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.3736) feature loss: tensor(0.4588)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.3661) feature loss: tensor(0.4511)
Global Model Acc on global data: 0.2281 length of data: 10000
save a model
-------------Round number:  5  -------------
selected users: [66, 32, 46, 28, 74, 23, 10, 20, 17, 35]
random features: torch.Size([108, 96, 8, 8]) torch.Size([108])
random features: torch.Size([99, 96, 8, 8]) torch.Size([99])
random features: torch.Size([103, 96, 8, 8]) torch.Size([103])
random features: torch.Size([102, 96, 8, 8]) torch.Size([102])
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([98, 96, 8, 8]) torch.Size([98])
random features: torch.Size([93, 96, 8, 8]) torch.Size([93])
random features: torch.Size([95, 96, 8, 8]) torch.Size([95])
random features: torch.Size([107, 96, 8, 8]) torch.Size([107])
random features: torch.Size([106, 96, 8, 8]) torch.Size([106])
all data: 1007
Local adapation with distilling: 0.00091
training loss: tensor(1.2906) feature loss: tensor(0.4885)
Local adapation with distilling: 0.00091
training loss: tensor(1.3789) feature loss: tensor(0.4709)
Local adapation with distilling: 0.00091
training loss: tensor(1.3057) feature loss: tensor(0.4850)
Local adapation with distilling: 0.00091
training loss: tensor(1.5000) feature loss: tensor(0.4714)
Local adapation with distilling: 0.00091
training loss: tensor(1.3049) feature loss: tensor(0.4492)
Local adapation with distilling: 0.00091
training loss: tensor(1.3534) feature loss: tensor(0.4693)
Local adapation with distilling: 0.00091
training loss: tensor(1.3087) feature loss: tensor(0.4752)
Local adapation with distilling: 0.00091
training loss: tensor(1.3742) feature loss: tensor(0.4949)
Local adapation with distilling: 0.00091
training loss: tensor(1.3293) feature loss: tensor(0.4985)
Local adapation with distilling: 0.00091
training loss: tensor(1.3495) feature loss: tensor(0.4950)
Global Model Acc on global data: 0.3033 length of data: 10000
save a model
-------------Round number:  6  -------------
selected users: [17, 34, 0, 45, 60, 86, 20, 47, 44, 81]
random features: torch.Size([107, 96, 8, 8]) torch.Size([107])
random features: torch.Size([95, 96, 8, 8]) torch.Size([95])
random features: torch.Size([99, 96, 8, 8]) torch.Size([99])
random features: torch.Size([100, 96, 8, 8]) torch.Size([100])
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([106, 96, 8, 8]) torch.Size([106])
random features: torch.Size([95, 96, 8, 8]) torch.Size([95])
random features: torch.Size([93, 96, 8, 8]) torch.Size([93])
random features: torch.Size([94, 96, 8, 8]) torch.Size([94])
random features: torch.Size([102, 96, 8, 8]) torch.Size([102])
all data: 987
Local adapation with distilling: 0.000892
training loss: tensor(1.2032) feature loss: tensor(0.4561)
Local adapation with distilling: 0.000892
training loss: tensor(1.2664) feature loss: tensor(0.4581)
Local adapation with distilling: 0.000892
training loss: tensor(1.2235) feature loss: tensor(0.4594)
Local adapation with distilling: 0.000892
training loss: tensor(1.2030) feature loss: tensor(0.4590)
Local adapation with distilling: 0.000892
training loss: tensor(1.2361) feature loss: tensor(0.4778)
Local adapation with distilling: 0.000892
training loss: tensor(1.1801) feature loss: tensor(0.4565)
Local adapation with distilling: 0.000892
training loss: tensor(1.2531) feature loss: tensor(0.4692)
Local adapation with distilling: 0.000892
training loss: tensor(1.1545) feature loss: tensor(0.4433)
Local adapation with distilling: 0.000892
training loss: tensor(1.2938) feature loss: tensor(0.4586)
Local adapation with distilling: 0.000892
training loss: tensor(1.4168) feature loss: tensor(0.4748)
Global Model Acc on global data: 0.3239 length of data: 10000
save a model
-------------Round number:  7  -------------
selected users: [37, 26, 78, 91, 49, 15, 93, 71, 86, 22]
random features: torch.Size([101, 96, 8, 8]) torch.Size([101])
random features: torch.Size([105, 96, 8, 8]) torch.Size([105])
random features: torch.Size([104, 96, 8, 8]) torch.Size([104])
random features: torch.Size([105, 96, 8, 8]) torch.Size([105])
random features: torch.Size([99, 96, 8, 8]) torch.Size([99])
random features: torch.Size([103, 96, 8, 8]) torch.Size([103])
random features: torch.Size([104, 96, 8, 8]) torch.Size([104])
random features: torch.Size([101, 96, 8, 8]) torch.Size([101])
random features: torch.Size([106, 96, 8, 8]) torch.Size([106])
random features: torch.Size([102, 96, 8, 8]) torch.Size([102])
all data: 1030
Local adapation with distilling: 0.000874
training loss: tensor(1.2552) feature loss: tensor(0.3738)
Local adapation with distilling: 0.000874
training loss: tensor(1.0730) feature loss: tensor(0.3973)
Local adapation with distilling: 0.000874
training loss: tensor(1.1639) feature loss: tensor(0.4054)
Local adapation with distilling: 0.000874
training loss: tensor(1.1552) feature loss: tensor(0.3816)
Local adapation with distilling: 0.000874
training loss: tensor(1.1176) feature loss: tensor(0.4179)
Local adapation with distilling: 0.000874
training loss: tensor(1.2814) feature loss: tensor(0.4103)
Local adapation with distilling: 0.000874
training loss: tensor(1.1281) feature loss: tensor(0.4166)
Local adapation with distilling: 0.000874
training loss: tensor(1.0922) feature loss: tensor(0.3820)
Local adapation with distilling: 0.000874
training loss: tensor(1.0968) feature loss: tensor(0.3938)
Local adapation with distilling: 0.000874
training loss: tensor(1.2557) feature loss: tensor(0.4182)
Global Model Acc on global data: 0.3125 length of data: 10000
-------------Round number:  8  -------------
selected users: [17, 23, 1, 44, 55, 99, 86, 29, 62, 33]
random features: torch.Size([107, 96, 8, 8]) torch.Size([107])
random features: torch.Size([98, 96, 8, 8]) torch.Size([98])
random features: torch.Size([104, 96, 8, 8]) torch.Size([104])
random features: torch.Size([94, 96, 8, 8]) torch.Size([94])
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([93, 96, 8, 8]) torch.Size([93])
random features: torch.Size([106, 96, 8, 8]) torch.Size([106])
random features: torch.Size([109, 96, 8, 8]) torch.Size([109])
random features: torch.Size([93, 96, 8, 8]) torch.Size([93])
random features: torch.Size([97, 96, 8, 8]) torch.Size([97])
all data: 997
Local adapation with distilling: 0.000856
training loss: tensor(1.1267) feature loss: tensor(0.4266)
Local adapation with distilling: 0.000856
training loss: tensor(1.1333) feature loss: tensor(0.4457)
Local adapation with distilling: 0.000856
training loss: tensor(1.1321) feature loss: tensor(0.4237)
Local adapation with distilling: 0.000856
training loss: tensor(1.1738) feature loss: tensor(0.4219)
Local adapation with distilling: 0.000856
training loss: tensor(1.1877) feature loss: tensor(0.4434)
Local adapation with distilling: 0.000856
training loss: tensor(1.1334) feature loss: tensor(0.4212)
Local adapation with distilling: 0.000856
training loss: tensor(1.0346) feature loss: tensor(0.4243)
Local adapation with distilling: 0.000856
training loss: tensor(1.0737) feature loss: tensor(0.4231)
Local adapation with distilling: 0.000856
training loss: tensor(1.2624) feature loss: tensor(0.4555)
Local adapation with distilling: 0.000856
training loss: tensor(1.1487) feature loss: tensor(0.4225)
Global Model Acc on global data: 0.3253 length of data: 10000
save a model
-------------Round number:  9  -------------
selected users: [75, 42, 46, 68, 3, 39, 23, 20, 70, 73]
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([95, 96, 8, 8]) torch.Size([95])
random features: torch.Size([103, 96, 8, 8]) torch.Size([103])
random features: torch.Size([103, 96, 8, 8]) torch.Size([103])
random features: torch.Size([106, 96, 8, 8]) torch.Size([106])
random features: torch.Size([103, 96, 8, 8]) torch.Size([103])
random features: torch.Size([98, 96, 8, 8]) torch.Size([98])
random features: torch.Size([95, 96, 8, 8]) torch.Size([95])
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([104, 96, 8, 8]) torch.Size([104])
all data: 999
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(1.0812) feature loss: tensor(0.4051)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(1.1862) feature loss: tensor(0.3883)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(1.0328) feature loss: tensor(0.3880)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(1.1296) feature loss: tensor(0.3910)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(1.1771) feature loss: tensor(0.3981)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(1.1027) feature loss: tensor(0.3921)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(1.0289) feature loss: tensor(0.3887)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(1.1139) feature loss: tensor(0.4197)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(1.0691) feature loss: tensor(0.4069)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(1.0554) feature loss: tensor(0.4091)
Global Model Acc on global data: 0.3737 length of data: 10000
save a model
-------------Round number:  10  -------------
selected users: [19, 14, 43, 37, 66, 3, 79, 41, 38, 68]
random features: torch.Size([100, 96, 8, 8]) torch.Size([100])
random features: torch.Size([99, 96, 8, 8]) torch.Size([99])
random features: torch.Size([98, 96, 8, 8]) torch.Size([98])
random features: torch.Size([101, 96, 8, 8]) torch.Size([101])
random features: torch.Size([108, 96, 8, 8]) torch.Size([108])
random features: torch.Size([106, 96, 8, 8]) torch.Size([106])
random features: torch.Size([99, 96, 8, 8]) torch.Size([99])
random features: torch.Size([95, 96, 8, 8]) torch.Size([95])
random features: torch.Size([109, 96, 8, 8]) torch.Size([109])
random features: torch.Size([103, 96, 8, 8]) torch.Size([103])
all data: 1018
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.9251) feature loss: tensor(0.3364)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.9038) feature loss: tensor(0.3369)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.9144) feature loss: tensor(0.3443)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.9917) feature loss: tensor(0.3214)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.8994) feature loss: tensor(0.3403)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.9530) feature loss: tensor(0.3298)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(1.0386) feature loss: tensor(0.3507)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.9671) feature loss: tensor(0.3324)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.8891) feature loss: tensor(0.3492)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.9517) feature loss: tensor(0.3352)
Global Model Acc on global data: 0.3218 length of data: 10000
-------------Round number:  11  -------------
selected users: [46, 49, 22, 58, 41, 98, 62, 29, 30, 51]
random features: torch.Size([103, 96, 8, 8]) torch.Size([103])
random features: torch.Size([99, 96, 8, 8]) torch.Size([99])
random features: torch.Size([102, 96, 8, 8]) torch.Size([102])
random features: torch.Size([101, 96, 8, 8]) torch.Size([101])
random features: torch.Size([95, 96, 8, 8]) torch.Size([95])
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([93, 96, 8, 8]) torch.Size([93])
random features: torch.Size([109, 96, 8, 8]) torch.Size([109])
random features: torch.Size([95, 96, 8, 8]) torch.Size([95])
random features: torch.Size([97, 96, 8, 8]) torch.Size([97])
all data: 990
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.9766) feature loss: tensor(0.4303)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(1.0036) feature loss: tensor(0.4552)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(1.2022) feature loss: tensor(0.4422)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.9956) feature loss: tensor(0.4362)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.9973) feature loss: tensor(0.4251)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(1.0488) feature loss: tensor(0.4339)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(1.1360) feature loss: tensor(0.4615)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.9357) feature loss: tensor(0.4267)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(1.1023) feature loss: tensor(0.4639)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(1.0706) feature loss: tensor(0.4521)
Global Model Acc on global data: 0.3628 length of data: 10000
-------------Round number:  12  -------------
selected users: [17, 41, 92, 14, 68, 31, 89, 15, 21, 60]
random features: torch.Size([107, 96, 8, 8]) torch.Size([107])
random features: torch.Size([95, 96, 8, 8]) torch.Size([95])
random features: torch.Size([93, 96, 8, 8]) torch.Size([93])
random features: torch.Size([99, 96, 8, 8]) torch.Size([99])
random features: torch.Size([103, 96, 8, 8]) torch.Size([103])
random features: torch.Size([97, 96, 8, 8]) torch.Size([97])
random features: torch.Size([108, 96, 8, 8]) torch.Size([108])
random features: torch.Size([103, 96, 8, 8]) torch.Size([103])
random features: torch.Size([94, 96, 8, 8]) torch.Size([94])
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
all data: 995
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.9506) feature loss: tensor(0.3576)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.8797) feature loss: tensor(0.3460)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(1.0217) feature loss: tensor(0.3592)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.8972) feature loss: tensor(0.3548)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.8754) feature loss: tensor(0.3538)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(1.0516) feature loss: tensor(0.3622)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.8937) feature loss: tensor(0.3496)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(1.0488) feature loss: tensor(0.3639)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.9474) feature loss: tensor(0.3606)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.9970) feature loss: tensor(0.3729)
Global Model Acc on global data: 0.3463 length of data: 10000
-------------Round number:  13  -------------
selected users: [37, 62, 83, 14, 43, 9, 44, 31, 69, 57]
random features: torch.Size([101, 96, 8, 8]) torch.Size([101])
random features: torch.Size([93, 96, 8, 8]) torch.Size([93])
random features: torch.Size([101, 96, 8, 8]) torch.Size([101])
random features: torch.Size([99, 96, 8, 8]) torch.Size([99])
random features: torch.Size([98, 96, 8, 8]) torch.Size([98])
random features: torch.Size([102, 96, 8, 8]) torch.Size([102])
random features: torch.Size([94, 96, 8, 8]) torch.Size([94])
random features: torch.Size([97, 96, 8, 8]) torch.Size([97])
random features: torch.Size([98, 96, 8, 8]) torch.Size([98])
random features: torch.Size([101, 96, 8, 8]) torch.Size([101])
all data: 984
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.8957) feature loss: tensor(0.3412)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.9540) feature loss: tensor(0.3685)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.9147) feature loss: tensor(0.3744)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.8248) feature loss: tensor(0.3390)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.8550) feature loss: tensor(0.3623)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(1.0929) feature loss: tensor(0.3704)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.9526) feature loss: tensor(0.3522)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.9223) feature loss: tensor(0.3442)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.8939) feature loss: tensor(0.3607)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.9468) feature loss: tensor(0.3431)
Global Model Acc on global data: 0.3816 length of data: 10000
save a model
-------------Round number:  14  -------------
selected users: [24, 39, 35, 44, 55, 70, 82, 40, 91, 65]
random features: torch.Size([98, 96, 8, 8]) torch.Size([98])
random features: torch.Size([103, 96, 8, 8]) torch.Size([103])
random features: torch.Size([106, 96, 8, 8]) torch.Size([106])
random features: torch.Size([94, 96, 8, 8]) torch.Size([94])
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([92, 96, 8, 8]) torch.Size([92])
random features: torch.Size([92, 96, 8, 8]) torch.Size([92])
random features: torch.Size([105, 96, 8, 8]) torch.Size([105])
random features: torch.Size([99, 96, 8, 8]) torch.Size([99])
all data: 981
Local adapation with distilling: 0.000748
training loss: tensor(0.9942) feature loss: tensor(0.4280)
Local adapation with distilling: 0.000748
training loss: tensor(1.0829) feature loss: tensor(0.4539)
Local adapation with distilling: 0.000748
training loss: tensor(1.0880) feature loss: tensor(0.4521)
Local adapation with distilling: 0.000748
training loss: tensor(0.9796) feature loss: tensor(0.4327)
Local adapation with distilling: 0.000748
training loss: tensor(1.0740) feature loss: tensor(0.4592)
Local adapation with distilling: 0.000748
training loss: tensor(1.0563) feature loss: tensor(0.4616)
Local adapation with distilling: 0.000748
training loss: tensor(1.0503) feature loss: tensor(0.4609)
Local adapation with distilling: 0.000748
training loss: tensor(1.1136) feature loss: tensor(0.4590)
Local adapation with distilling: 0.000748
training loss: tensor(1.0851) feature loss: tensor(0.4533)
Local adapation with distilling: 0.000748
training loss: tensor(1.0051) feature loss: tensor(0.4670)
Global Model Acc on global data: 0.3527 length of data: 10000
-------------Round number:  15  -------------
selected users: [84, 36, 57, 51, 46, 78, 93, 14, 11, 59]
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([101, 96, 8, 8]) torch.Size([101])
random features: torch.Size([101, 96, 8, 8]) torch.Size([101])
random features: torch.Size([97, 96, 8, 8]) torch.Size([97])
random features: torch.Size([103, 96, 8, 8]) torch.Size([103])
random features: torch.Size([104, 96, 8, 8]) torch.Size([104])
random features: torch.Size([104, 96, 8, 8]) torch.Size([104])
random features: torch.Size([99, 96, 8, 8]) torch.Size([99])
random features: torch.Size([106, 96, 8, 8]) torch.Size([106])
random features: torch.Size([103, 96, 8, 8]) torch.Size([103])
all data: 1014
Local adapation with distilling: 0.00073
training loss: tensor(0.9948) feature loss: tensor(0.3847)
Local adapation with distilling: 0.00073
training loss: tensor(0.9569) feature loss: tensor(0.3912)
Local adapation with distilling: 0.00073
training loss: tensor(0.9762) feature loss: tensor(0.3820)
Local adapation with distilling: 0.00073
training loss: tensor(0.9807) feature loss: tensor(0.3885)
Local adapation with distilling: 0.00073
training loss: tensor(0.9726) feature loss: tensor(0.3919)
Local adapation with distilling: 0.00073
training loss: tensor(0.9843) feature loss: tensor(0.3998)
Local adapation with distilling: 0.00073
training loss: tensor(1.0234) feature loss: tensor(0.3911)
Local adapation with distilling: 0.00073
training loss: tensor(0.8984) feature loss: tensor(0.3874)
Local adapation with distilling: 0.00073
training loss: tensor(0.9970) feature loss: tensor(0.3966)
Local adapation with distilling: 0.00073
training loss: tensor(1.0703) feature loss: tensor(0.3855)
Global Model Acc on global data: 0.4105 length of data: 10000
save a model
-------------Round number:  16  -------------
selected users: [7, 25, 71, 42, 47, 29, 63, 88, 50, 9]
random features: torch.Size([95, 96, 8, 8]) torch.Size([95])
random features: torch.Size([100, 96, 8, 8]) torch.Size([100])
random features: torch.Size([101, 96, 8, 8]) torch.Size([101])
random features: torch.Size([95, 96, 8, 8]) torch.Size([95])
random features: torch.Size([93, 96, 8, 8]) torch.Size([93])
random features: torch.Size([109, 96, 8, 8]) torch.Size([109])
random features: torch.Size([101, 96, 8, 8]) torch.Size([101])
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([98, 96, 8, 8]) torch.Size([98])
random features: torch.Size([102, 96, 8, 8]) torch.Size([102])
all data: 990
Local adapation with distilling: 0.000712
training loss: tensor(0.8880) feature loss: tensor(0.2994)
Local adapation with distilling: 0.000712
training loss: tensor(0.8641) feature loss: tensor(0.3074)
Local adapation with distilling: 0.000712
training loss: tensor(0.8539) feature loss: tensor(0.3038)
Local adapation with distilling: 0.000712
training loss: tensor(0.9295) feature loss: tensor(0.3150)
Local adapation with distilling: 0.000712
training loss: tensor(0.7966) feature loss: tensor(0.3087)
Local adapation with distilling: 0.000712
training loss: tensor(0.7935) feature loss: tensor(0.3092)
Local adapation with distilling: 0.000712
training loss: tensor(0.8265) feature loss: tensor(0.3114)
Local adapation with distilling: 0.000712
training loss: tensor(0.8240) feature loss: tensor(0.3057)
Local adapation with distilling: 0.000712
training loss: tensor(0.9013) feature loss: tensor(0.3175)
Local adapation with distilling: 0.000712
training loss: tensor(0.9075) feature loss: tensor(0.3131)
Global Model Acc on global data: 0.3582 length of data: 10000
-------------Round number:  17  -------------
selected users: [71, 28, 9, 4, 73, 34, 94, 92, 47, 37]
random features: torch.Size([101, 96, 8, 8]) torch.Size([101])
random features: torch.Size([102, 96, 8, 8]) torch.Size([102])
random features: torch.Size([102, 96, 8, 8]) torch.Size([102])
random features: torch.Size([98, 96, 8, 8]) torch.Size([98])
random features: torch.Size([104, 96, 8, 8]) torch.Size([104])
random features: torch.Size([95, 96, 8, 8]) torch.Size([95])
random features: torch.Size([101, 96, 8, 8]) torch.Size([101])
random features: torch.Size([93, 96, 8, 8]) torch.Size([93])
random features: torch.Size([93, 96, 8, 8]) torch.Size([93])
random features: torch.Size([101, 96, 8, 8]) torch.Size([101])
all data: 990
Local adapation with distilling: 0.000694
training loss: tensor(0.7739) feature loss: tensor(0.3212)
Local adapation with distilling: 0.000694
training loss: tensor(1.0672) feature loss: tensor(0.3315)
Local adapation with distilling: 0.000694
training loss: tensor(1.0739) feature loss: tensor(0.3243)
Local adapation with distilling: 0.000694
training loss: tensor(0.8631) feature loss: tensor(0.3168)
Local adapation with distilling: 0.000694
training loss: tensor(0.8919) feature loss: tensor(0.3283)
Local adapation with distilling: 0.000694
training loss: tensor(0.7924) feature loss: tensor(0.3194)
Local adapation with distilling: 0.000694
training loss: tensor(0.8631) feature loss: tensor(0.3098)
Local adapation with distilling: 0.000694
training loss: tensor(0.9170) feature loss: tensor(0.3301)
Local adapation with distilling: 0.000694
training loss: tensor(0.7515) feature loss: tensor(0.3177)
Local adapation with distilling: 0.000694
training loss: tensor(0.8302) feature loss: tensor(0.3104)
Global Model Acc on global data: 0.3459 length of data: 10000
-------------Round number:  18  -------------
selected users: [53, 47, 43, 54, 33, 48, 0, 12, 44, 91]
random features: torch.Size([115, 96, 8, 8]) torch.Size([115])
random features: torch.Size([93, 96, 8, 8]) torch.Size([93])
random features: torch.Size([98, 96, 8, 8]) torch.Size([98])
random features: torch.Size([104, 96, 8, 8]) torch.Size([104])
random features: torch.Size([97, 96, 8, 8]) torch.Size([97])
random features: torch.Size([95, 96, 8, 8]) torch.Size([95])
random features: torch.Size([99, 96, 8, 8]) torch.Size([99])
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([94, 96, 8, 8]) torch.Size([94])
random features: torch.Size([105, 96, 8, 8]) torch.Size([105])
all data: 996
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.9488) feature loss: tensor(0.4212)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.8813) feature loss: tensor(0.3913)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.9403) feature loss: tensor(0.4198)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(1.0785) feature loss: tensor(0.4064)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(1.0071) feature loss: tensor(0.4257)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(1.0852) feature loss: tensor(0.4327)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.9907) feature loss: tensor(0.4228)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(1.0714) feature loss: tensor(0.4350)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(1.0039) feature loss: tensor(0.4078)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.9439) feature loss: tensor(0.4187)
Global Model Acc on global data: 0.3569 length of data: 10000
-------------Round number:  19  -------------
selected users: [85, 72, 16, 18, 2, 38, 90, 30, 83, 61]
random features: torch.Size([100, 96, 8, 8]) torch.Size([100])
random features: torch.Size([115, 96, 8, 8]) torch.Size([115])
random features: torch.Size([106, 96, 8, 8]) torch.Size([106])
random features: torch.Size([99, 96, 8, 8]) torch.Size([99])
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([109, 96, 8, 8]) torch.Size([109])
random features: torch.Size([95, 96, 8, 8]) torch.Size([95])
random features: torch.Size([95, 96, 8, 8]) torch.Size([95])
random features: torch.Size([101, 96, 8, 8]) torch.Size([101])
random features: torch.Size([101, 96, 8, 8]) torch.Size([101])
all data: 1017
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.9496) feature loss: tensor(0.3737)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.9634) feature loss: tensor(0.3929)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(1.0811) feature loss: tensor(0.3853)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(1.0400) feature loss: tensor(0.3915)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(1.0079) feature loss: tensor(0.3837)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.9376) feature loss: tensor(0.3831)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(1.0660) feature loss: tensor(0.3772)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(1.0025) feature loss: tensor(0.3923)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.9781) feature loss: tensor(0.3821)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.9856) feature loss: tensor(0.3709)
Global Model Acc on global data: 0.3507 length of data: 10000
-------------Round number:  20  -------------
selected users: [70, 74, 2, 44, 56, 48, 12, 36, 0, 49]
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([94, 96, 8, 8]) torch.Size([94])
random features: torch.Size([110, 96, 8, 8]) torch.Size([110])
random features: torch.Size([95, 96, 8, 8]) torch.Size([95])
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([101, 96, 8, 8]) torch.Size([101])
random features: torch.Size([99, 96, 8, 8]) torch.Size([99])
random features: torch.Size([99, 96, 8, 8]) torch.Size([99])
all data: 982
Local adapation with distilling: 0.00064
training loss: tensor(0.9046) feature loss: tensor(0.3761)
Local adapation with distilling: 0.00064
training loss: tensor(0.8207) feature loss: tensor(0.3648)
Local adapation with distilling: 0.00064
training loss: tensor(0.8155) feature loss: tensor(0.3744)
Local adapation with distilling: 0.00064
training loss: tensor(0.8501) feature loss: tensor(0.3687)
Local adapation with distilling: 0.00064
training loss: tensor(0.8561) feature loss: tensor(0.3786)
Local adapation with distilling: 0.00064
training loss: tensor(0.8745) feature loss: tensor(0.3801)
Local adapation with distilling: 0.00064
training loss: tensor(0.8361) feature loss: tensor(0.3768)
Local adapation with distilling: 0.00064
training loss: tensor(0.8429) feature loss: tensor(0.3741)
Local adapation with distilling: 0.00064
training loss: tensor(0.8172) feature loss: tensor(0.3774)
Local adapation with distilling: 0.00064
training loss: tensor(0.8493) feature loss: tensor(0.3722)
Global Model Acc on global data: 0.4311 length of data: 10000
save a model
-------------Round number:  21  -------------
selected users: [23, 81, 85, 34, 62, 46, 42, 31, 93, 11]
random features: torch.Size([98, 96, 8, 8]) torch.Size([98])
random features: torch.Size([102, 96, 8, 8]) torch.Size([102])
random features: torch.Size([100, 96, 8, 8]) torch.Size([100])
random features: torch.Size([95, 96, 8, 8]) torch.Size([95])
random features: torch.Size([93, 96, 8, 8]) torch.Size([93])
random features: torch.Size([103, 96, 8, 8]) torch.Size([103])
random features: torch.Size([95, 96, 8, 8]) torch.Size([95])
random features: torch.Size([97, 96, 8, 8]) torch.Size([97])
random features: torch.Size([104, 96, 8, 8]) torch.Size([104])
random features: torch.Size([106, 96, 8, 8]) torch.Size([106])
all data: 993
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.9235) feature loss: tensor(0.3357)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(1.0968) feature loss: tensor(0.3245)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.8162) feature loss: tensor(0.3196)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.8935) feature loss: tensor(0.3242)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.9476) feature loss: tensor(0.3341)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.9424) feature loss: tensor(0.3317)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.9775) feature loss: tensor(0.3183)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(1.0147) feature loss: tensor(0.3322)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.9019) feature loss: tensor(0.3420)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.8740) feature loss: tensor(0.3294)
Global Model Acc on global data: 0.4425 length of data: 10000
save a model
-------------Round number:  22  -------------
selected users: [2, 49, 82, 31, 37, 12, 87, 42, 99, 85]
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([99, 96, 8, 8]) torch.Size([99])
random features: torch.Size([92, 96, 8, 8]) torch.Size([92])
random features: torch.Size([97, 96, 8, 8]) torch.Size([97])
random features: torch.Size([101, 96, 8, 8]) torch.Size([101])
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([95, 96, 8, 8]) torch.Size([95])
random features: torch.Size([95, 96, 8, 8]) torch.Size([95])
random features: torch.Size([93, 96, 8, 8]) torch.Size([93])
random features: torch.Size([100, 96, 8, 8]) torch.Size([100])
all data: 964
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.7290) feature loss: tensor(0.3237)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.7492) feature loss: tensor(0.3319)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.7834) feature loss: tensor(0.3129)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.7747) feature loss: tensor(0.2981)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.7730) feature loss: tensor(0.2933)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.7178) feature loss: tensor(0.3066)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.8566) feature loss: tensor(0.3315)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.7564) feature loss: tensor(0.3307)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.7833) feature loss: tensor(0.3435)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.6908) feature loss: tensor(0.2934)
Global Model Acc on global data: 0.3798 length of data: 10000
-------------Round number:  23  -------------
selected users: [26, 80, 82, 68, 77, 37, 3, 55, 20, 17]
random features: torch.Size([105, 96, 8, 8]) torch.Size([105])
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([92, 96, 8, 8]) torch.Size([92])
random features: torch.Size([103, 96, 8, 8]) torch.Size([103])
random features: torch.Size([92, 96, 8, 8]) torch.Size([92])
random features: torch.Size([101, 96, 8, 8]) torch.Size([101])
random features: torch.Size([106, 96, 8, 8]) torch.Size([106])
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([95, 96, 8, 8]) torch.Size([95])
random features: torch.Size([107, 96, 8, 8]) torch.Size([107])
all data: 993
Local adapation with distilling: 0.000586
training loss: tensor(0.8318) feature loss: tensor(0.3622)
Local adapation with distilling: 0.000586
training loss: tensor(0.9092) feature loss: tensor(0.3532)
Local adapation with distilling: 0.000586
training loss: tensor(0.8300) feature loss: tensor(0.3510)
Local adapation with distilling: 0.000586
training loss: tensor(0.8683) feature loss: tensor(0.3505)
Local adapation with distilling: 0.000586
training loss: tensor(0.9060) feature loss: tensor(0.3635)
Local adapation with distilling: 0.000586
training loss: tensor(0.8057) feature loss: tensor(0.3450)
Local adapation with distilling: 0.000586
training loss: tensor(0.9463) feature loss: tensor(0.3736)
Local adapation with distilling: 0.000586
training loss: tensor(0.8782) feature loss: tensor(0.3651)
Local adapation with distilling: 0.000586
training loss: tensor(0.8978) feature loss: tensor(0.3765)
Local adapation with distilling: 0.000586
training loss: tensor(0.9095) feature loss: tensor(0.3657)
Global Model Acc on global data: 0.4109 length of data: 10000
-------------Round number:  24  -------------
selected users: [26, 31, 37, 86, 76, 14, 88, 48, 71, 67]
random features: torch.Size([105, 96, 8, 8]) torch.Size([105])
random features: torch.Size([97, 96, 8, 8]) torch.Size([97])
random features: torch.Size([101, 96, 8, 8]) torch.Size([101])
random features: torch.Size([106, 96, 8, 8]) torch.Size([106])
random features: torch.Size([106, 96, 8, 8]) torch.Size([106])
random features: torch.Size([99, 96, 8, 8]) torch.Size([99])
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([95, 96, 8, 8]) torch.Size([95])
random features: torch.Size([101, 96, 8, 8]) torch.Size([101])
random features: torch.Size([94, 96, 8, 8]) torch.Size([94])
all data: 1000
Local adapation with distilling: 0.000568
training loss: tensor(0.6874) feature loss: tensor(0.2853)
Local adapation with distilling: 0.000568
training loss: tensor(0.7609) feature loss: tensor(0.2876)
Local adapation with distilling: 0.000568
training loss: tensor(0.6685) feature loss: tensor(0.2751)
Local adapation with distilling: 0.000568
training loss: tensor(0.7576) feature loss: tensor(0.2899)
Local adapation with distilling: 0.000568
training loss: tensor(0.8346) feature loss: tensor(0.2849)
Local adapation with distilling: 0.000568
training loss: tensor(0.7195) feature loss: tensor(0.2868)
Local adapation with distilling: 0.000568
training loss: tensor(0.7242) feature loss: tensor(0.2879)
Local adapation with distilling: 0.000568
training loss: tensor(0.7925) feature loss: tensor(0.2964)
Local adapation with distilling: 0.000568
training loss: tensor(0.7747) feature loss: tensor(0.2963)
Local adapation with distilling: 0.000568
training loss: tensor(0.7698) feature loss: tensor(0.2841)
Global Model Acc on global data: 0.4054 length of data: 10000
-------------Round number:  25  -------------
selected users: [41, 29, 33, 65, 74, 6, 57, 89, 87, 98]
random features: torch.Size([95, 96, 8, 8]) torch.Size([95])
random features: torch.Size([109, 96, 8, 8]) torch.Size([109])
random features: torch.Size([97, 96, 8, 8]) torch.Size([97])
random features: torch.Size([99, 96, 8, 8]) torch.Size([99])
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([104, 96, 8, 8]) torch.Size([104])
random features: torch.Size([101, 96, 8, 8]) torch.Size([101])
random features: torch.Size([108, 96, 8, 8]) torch.Size([108])
random features: torch.Size([95, 96, 8, 8]) torch.Size([95])
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
all data: 1000
Local adapation with distilling: 0.00055
training loss: tensor(0.7552) feature loss: tensor(0.2798)
Local adapation with distilling: 0.00055
training loss: tensor(0.7517) feature loss: tensor(0.2902)
Local adapation with distilling: 0.00055
training loss: tensor(0.8114) feature loss: tensor(0.2973)
Local adapation with distilling: 0.00055
training loss: tensor(0.8227) feature loss: tensor(0.3001)
Local adapation with distilling: 0.00055
training loss: tensor(0.7405) feature loss: tensor(0.2807)
Local adapation with distilling: 0.00055
training loss: tensor(0.8568) feature loss: tensor(0.2886)
Local adapation with distilling: 0.00055
training loss: tensor(0.7568) feature loss: tensor(0.2785)
Local adapation with distilling: 0.00055
training loss: tensor(0.7797) feature loss: tensor(0.2890)
Local adapation with distilling: 0.00055
training loss: tensor(0.8086) feature loss: tensor(0.2981)
Local adapation with distilling: 0.00055
training loss: tensor(0.7417) feature loss: tensor(0.2789)
Global Model Acc on global data: 0.4116 length of data: 10000
-------------Round number:  26  -------------
selected users: [8, 69, 84, 41, 25, 5, 63, 95, 33, 70]
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([98, 96, 8, 8]) torch.Size([98])
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([95, 96, 8, 8]) torch.Size([95])
random features: torch.Size([100, 96, 8, 8]) torch.Size([100])
random features: torch.Size([102, 96, 8, 8]) torch.Size([102])
random features: torch.Size([101, 96, 8, 8]) torch.Size([101])
random features: torch.Size([100, 96, 8, 8]) torch.Size([100])
random features: torch.Size([97, 96, 8, 8]) torch.Size([97])
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
all data: 981
Local adapation with distilling: 0.000532
training loss: tensor(0.9132) feature loss: tensor(0.3755)
Local adapation with distilling: 0.000532
training loss: tensor(0.9230) feature loss: tensor(0.3700)
Local adapation with distilling: 0.000532
training loss: tensor(0.9223) feature loss: tensor(0.3572)
Local adapation with distilling: 0.000532
training loss: tensor(0.8316) feature loss: tensor(0.3587)
Local adapation with distilling: 0.000532
training loss: tensor(0.9342) feature loss: tensor(0.3686)
Local adapation with distilling: 0.000532
training loss: tensor(1.0928) feature loss: tensor(0.3619)
Local adapation with distilling: 0.000532
training loss: tensor(0.8892) feature loss: tensor(0.3578)
Local adapation with distilling: 0.000532
training loss: tensor(0.9219) feature loss: tensor(0.3658)
Local adapation with distilling: 0.000532
training loss: tensor(0.8764) feature loss: tensor(0.3605)
Local adapation with distilling: 0.000532
training loss: tensor(0.8945) feature loss: tensor(0.3769)
Global Model Acc on global data: 0.4265 length of data: 10000
-------------Round number:  27  -------------
selected users: [89, 68, 43, 50, 40, 95, 27, 85, 22, 44]
random features: torch.Size([108, 96, 8, 8]) torch.Size([108])
random features: torch.Size([103, 96, 8, 8]) torch.Size([103])
random features: torch.Size([98, 96, 8, 8]) torch.Size([98])
random features: torch.Size([98, 96, 8, 8]) torch.Size([98])
random features: torch.Size([92, 96, 8, 8]) torch.Size([92])
random features: torch.Size([100, 96, 8, 8]) torch.Size([100])
random features: torch.Size([97, 96, 8, 8]) torch.Size([97])
random features: torch.Size([100, 96, 8, 8]) torch.Size([100])
random features: torch.Size([102, 96, 8, 8]) torch.Size([102])
random features: torch.Size([94, 96, 8, 8]) torch.Size([94])
all data: 992
Local adapation with distilling: 0.000514
training loss: tensor(0.7208) feature loss: tensor(0.2788)
Local adapation with distilling: 0.000514
training loss: tensor(0.8454) feature loss: tensor(0.2803)
Local adapation with distilling: 0.000514
training loss: tensor(0.7489) feature loss: tensor(0.2757)
Local adapation with distilling: 0.000514
training loss: tensor(0.7961) feature loss: tensor(0.2832)
Local adapation with distilling: 0.000514
training loss: tensor(0.8301) feature loss: tensor(0.2770)
Local adapation with distilling: 0.000514
training loss: tensor(0.7739) feature loss: tensor(0.2654)
Local adapation with distilling: 0.000514
training loss: tensor(0.8848) feature loss: tensor(0.2670)
Local adapation with distilling: 0.000514
training loss: tensor(0.7556) feature loss: tensor(0.2682)
Local adapation with distilling: 0.000514
training loss: tensor(1.0777) feature loss: tensor(0.2761)
Local adapation with distilling: 0.000514
training loss: tensor(0.8682) feature loss: tensor(0.2773)
Global Model Acc on global data: 0.4126 length of data: 10000
-------------Round number:  28  -------------
selected users: [67, 14, 0, 86, 13, 18, 30, 36, 52, 95]
random features: torch.Size([94, 96, 8, 8]) torch.Size([94])
random features: torch.Size([99, 96, 8, 8]) torch.Size([99])
random features: torch.Size([99, 96, 8, 8]) torch.Size([99])
random features: torch.Size([106, 96, 8, 8]) torch.Size([106])
random features: torch.Size([101, 96, 8, 8]) torch.Size([101])
random features: torch.Size([99, 96, 8, 8]) torch.Size([99])
random features: torch.Size([95, 96, 8, 8]) torch.Size([95])
random features: torch.Size([101, 96, 8, 8]) torch.Size([101])
random features: torch.Size([102, 96, 8, 8]) torch.Size([102])
random features: torch.Size([100, 96, 8, 8]) torch.Size([100])
all data: 996
Local adapation with distilling: 0.000496
training loss: tensor(0.7632) feature loss: tensor(0.2995)
Local adapation with distilling: 0.000496
training loss: tensor(0.7323) feature loss: tensor(0.2897)
Local adapation with distilling: 0.000496
training loss: tensor(0.7870) feature loss: tensor(0.3041)
Local adapation with distilling: 0.000496
training loss: tensor(0.7676) feature loss: tensor(0.3048)
Local adapation with distilling: 0.000496
training loss: tensor(0.7645) feature loss: tensor(0.2962)
Local adapation with distilling: 0.000496
training loss: tensor(0.8355) feature loss: tensor(0.3038)
Local adapation with distilling: 0.000496
training loss: tensor(0.8401) feature loss: tensor(0.3020)
Local adapation with distilling: 0.000496
training loss: tensor(0.7542) feature loss: tensor(0.3038)
Local adapation with distilling: 0.000496
training loss: tensor(1.0294) feature loss: tensor(0.3100)
Local adapation with distilling: 0.000496
training loss: tensor(0.7320) feature loss: tensor(0.3003)
Global Model Acc on global data: 0.4438 length of data: 10000
save a model
-------------Round number:  29  -------------
selected users: [73, 8, 10, 7, 19, 71, 92, 25, 38, 12]
random features: torch.Size([104, 96, 8, 8]) torch.Size([104])
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([93, 96, 8, 8]) torch.Size([93])
random features: torch.Size([95, 96, 8, 8]) torch.Size([95])
random features: torch.Size([100, 96, 8, 8]) torch.Size([100])
random features: torch.Size([101, 96, 8, 8]) torch.Size([101])
random features: torch.Size([93, 96, 8, 8]) torch.Size([93])
random features: torch.Size([100, 96, 8, 8]) torch.Size([100])
random features: torch.Size([109, 96, 8, 8]) torch.Size([109])
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
all data: 987
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.8349) feature loss: tensor(0.3081)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.8103) feature loss: tensor(0.3134)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.8844) feature loss: tensor(0.3154)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.8720) feature loss: tensor(0.3133)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.8522) feature loss: tensor(0.3069)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.8127) feature loss: tensor(0.3063)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.9196) feature loss: tensor(0.3038)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.8459) feature loss: tensor(0.3143)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.7773) feature loss: tensor(0.3081)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.8318) feature loss: tensor(0.3077)
Global Model Acc on global data: 0.4117 length of data: 10000
-------------Round number:  30  -------------
selected users: [20, 91, 34, 52, 8, 74, 21, 88, 80, 89]
random features: torch.Size([95, 96, 8, 8]) torch.Size([95])
random features: torch.Size([105, 96, 8, 8]) torch.Size([105])
random features: torch.Size([95, 96, 8, 8]) torch.Size([95])
random features: torch.Size([102, 96, 8, 8]) torch.Size([102])
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([94, 96, 8, 8]) torch.Size([94])
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([108, 96, 8, 8]) torch.Size([108])
all data: 983
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.7307) feature loss: tensor(0.2905)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.7290) feature loss: tensor(0.2875)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.6783) feature loss: tensor(0.2854)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.8706) feature loss: tensor(0.2906)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.6448) feature loss: tensor(0.2868)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.6694) feature loss: tensor(0.2853)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.6954) feature loss: tensor(0.2864)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.6721) feature loss: tensor(0.2894)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.7143) feature loss: tensor(0.2908)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.6502) feature loss: tensor(0.2854)
Global Model Acc on global data: 0.3769 length of data: 10000
-------------Round number:  31  -------------
selected users: [17, 33, 76, 3, 56, 0, 37, 8, 60, 67]
random features: torch.Size([107, 96, 8, 8]) torch.Size([107])
random features: torch.Size([97, 96, 8, 8]) torch.Size([97])
random features: torch.Size([106, 96, 8, 8]) torch.Size([106])
random features: torch.Size([106, 96, 8, 8]) torch.Size([106])
random features: torch.Size([110, 96, 8, 8]) torch.Size([110])
random features: torch.Size([99, 96, 8, 8]) torch.Size([99])
random features: torch.Size([101, 96, 8, 8]) torch.Size([101])
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([94, 96, 8, 8]) torch.Size([94])
all data: 1012
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.7616) feature loss: tensor(0.3022)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.7085) feature loss: tensor(0.2900)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.8047) feature loss: tensor(0.2830)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.8064) feature loss: tensor(0.2924)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.6922) feature loss: tensor(0.2882)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.7102) feature loss: tensor(0.2860)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.7369) feature loss: tensor(0.2783)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.6625) feature loss: tensor(0.2879)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.7756) feature loss: tensor(0.2933)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.7020) feature loss: tensor(0.2760)
Global Model Acc on global data: 0.4487 length of data: 10000
save a model
-------------Round number:  32  -------------
selected users: [22, 39, 85, 97, 55, 33, 80, 13, 27, 96]
random features: torch.Size([102, 96, 8, 8]) torch.Size([102])
random features: torch.Size([103, 96, 8, 8]) torch.Size([103])
random features: torch.Size([100, 96, 8, 8]) torch.Size([100])
random features: torch.Size([95, 96, 8, 8]) torch.Size([95])
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([97, 96, 8, 8]) torch.Size([97])
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([101, 96, 8, 8]) torch.Size([101])
random features: torch.Size([97, 96, 8, 8]) torch.Size([97])
random features: torch.Size([102, 96, 8, 8]) torch.Size([102])
all data: 989
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(1.2525) feature loss: tensor(0.3179)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(1.0502) feature loss: tensor(0.3206)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.8714) feature loss: tensor(0.3098)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(1.0000) feature loss: tensor(0.3150)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.9491) feature loss: tensor(0.3020)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.8408) feature loss: tensor(0.3071)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.8752) feature loss: tensor(0.3075)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.9013) feature loss: tensor(0.3180)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.9875) feature loss: tensor(0.3095)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(1.2791) feature loss: tensor(0.3155)
Global Model Acc on global data: 0.4122 length of data: 10000
-------------Round number:  33  -------------
selected users: [56, 90, 95, 82, 60, 71, 6, 81, 2, 70]
random features: torch.Size([110, 96, 8, 8]) torch.Size([110])
random features: torch.Size([95, 96, 8, 8]) torch.Size([95])
random features: torch.Size([100, 96, 8, 8]) torch.Size([100])
random features: torch.Size([92, 96, 8, 8]) torch.Size([92])
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([101, 96, 8, 8]) torch.Size([101])
random features: torch.Size([104, 96, 8, 8]) torch.Size([104])
random features: torch.Size([102, 96, 8, 8]) torch.Size([102])
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
all data: 992
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.7022) feature loss: tensor(0.3230)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.7958) feature loss: tensor(0.3125)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.7276) feature loss: tensor(0.3250)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.7857) feature loss: tensor(0.3232)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.7721) feature loss: tensor(0.3214)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.7459) feature loss: tensor(0.3162)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.8596) feature loss: tensor(0.3196)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.9262) feature loss: tensor(0.3262)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.7678) feature loss: tensor(0.3229)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.7528) feature loss: tensor(0.3242)
Global Model Acc on global data: 0.413 length of data: 10000
-------------Round number:  34  -------------
selected users: [14, 74, 15, 4, 32, 59, 91, 10, 50, 53]
random features: torch.Size([99, 96, 8, 8]) torch.Size([99])
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([103, 96, 8, 8]) torch.Size([103])
random features: torch.Size([98, 96, 8, 8]) torch.Size([98])
random features: torch.Size([99, 96, 8, 8]) torch.Size([99])
random features: torch.Size([103, 96, 8, 8]) torch.Size([103])
random features: torch.Size([105, 96, 8, 8]) torch.Size([105])
random features: torch.Size([93, 96, 8, 8]) torch.Size([93])
random features: torch.Size([98, 96, 8, 8]) torch.Size([98])
random features: torch.Size([115, 96, 8, 8]) torch.Size([115])
all data: 1009
Local adapation with distilling: 0.000388
training loss: tensor(0.9320) feature loss: tensor(0.3569)
Local adapation with distilling: 0.000388
training loss: tensor(0.8929) feature loss: tensor(0.3456)
Local adapation with distilling: 0.000388
training loss: tensor(1.0818) feature loss: tensor(0.3558)
Local adapation with distilling: 0.000388
training loss: tensor(1.0366) feature loss: tensor(0.3513)
Local adapation with distilling: 0.000388
training loss: tensor(1.1072) feature loss: tensor(0.3680)
Local adapation with distilling: 0.000388
training loss: tensor(1.0040) feature loss: tensor(0.3405)
Local adapation with distilling: 0.000388
training loss: tensor(0.8623) feature loss: tensor(0.3407)
Local adapation with distilling: 0.000388
training loss: tensor(0.9855) feature loss: tensor(0.3466)
Local adapation with distilling: 0.000388
training loss: tensor(0.9217) feature loss: tensor(0.3410)
Local adapation with distilling: 0.000388
training loss: tensor(0.9306) feature loss: tensor(0.3619)
Global Model Acc on global data: 0.3989 length of data: 10000
-------------Round number:  35  -------------
selected users: [40, 71, 98, 27, 70, 31, 10, 24, 51, 35]
random features: torch.Size([92, 96, 8, 8]) torch.Size([92])
random features: torch.Size([101, 96, 8, 8]) torch.Size([101])
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([97, 96, 8, 8]) torch.Size([97])
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([97, 96, 8, 8]) torch.Size([97])
random features: torch.Size([93, 96, 8, 8]) torch.Size([93])
random features: torch.Size([98, 96, 8, 8]) torch.Size([98])
random features: torch.Size([97, 96, 8, 8]) torch.Size([97])
random features: torch.Size([106, 96, 8, 8]) torch.Size([106])
all data: 973
Local adapation with distilling: 0.00037
training loss: tensor(0.8405) feature loss: tensor(0.2802)
Local adapation with distilling: 0.00037
training loss: tensor(0.6901) feature loss: tensor(0.2723)
Local adapation with distilling: 0.00037
training loss: tensor(0.7665) feature loss: tensor(0.2759)
Local adapation with distilling: 0.00037
training loss: tensor(0.8107) feature loss: tensor(0.2743)
Local adapation with distilling: 0.00037
training loss: tensor(0.7443) feature loss: tensor(0.2778)
Local adapation with distilling: 0.00037
training loss: tensor(0.7761) feature loss: tensor(0.2630)
Local adapation with distilling: 0.00037
training loss: tensor(0.7450) feature loss: tensor(0.2744)
Local adapation with distilling: 0.00037
training loss: tensor(0.8309) feature loss: tensor(0.2708)
Local adapation with distilling: 0.00037
training loss: tensor(0.7940) feature loss: tensor(0.2784)
Local adapation with distilling: 0.00037
training loss: tensor(0.7818) feature loss: tensor(0.2677)
Global Model Acc on global data: 0.4019 length of data: 10000
-------------Round number:  36  -------------
selected users: [59, 42, 2, 27, 28, 75, 58, 68, 52, 74]
random features: torch.Size([103, 96, 8, 8]) torch.Size([103])
random features: torch.Size([95, 96, 8, 8]) torch.Size([95])
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([97, 96, 8, 8]) torch.Size([97])
random features: torch.Size([102, 96, 8, 8]) torch.Size([102])
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([101, 96, 8, 8]) torch.Size([101])
random features: torch.Size([103, 96, 8, 8]) torch.Size([103])
random features: torch.Size([102, 96, 8, 8]) torch.Size([102])
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
all data: 991
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.7584) feature loss: tensor(0.2933)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.8845) feature loss: tensor(0.2919)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.7853) feature loss: tensor(0.2943)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.7980) feature loss: tensor(0.2943)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.9480) feature loss: tensor(0.2944)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.8366) feature loss: tensor(0.2935)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.8584) feature loss: tensor(0.2950)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.8509) feature loss: tensor(0.2904)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(1.0359) feature loss: tensor(0.3045)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.7236) feature loss: tensor(0.2886)
Global Model Acc on global data: 0.4531 length of data: 10000
save a model
-------------Round number:  37  -------------
selected users: [61, 49, 86, 78, 5, 91, 81, 82, 89, 18]
random features: torch.Size([101, 96, 8, 8]) torch.Size([101])
random features: torch.Size([99, 96, 8, 8]) torch.Size([99])
random features: torch.Size([106, 96, 8, 8]) torch.Size([106])
random features: torch.Size([104, 96, 8, 8]) torch.Size([104])
random features: torch.Size([102, 96, 8, 8]) torch.Size([102])
random features: torch.Size([105, 96, 8, 8]) torch.Size([105])
random features: torch.Size([102, 96, 8, 8]) torch.Size([102])
random features: torch.Size([92, 96, 8, 8]) torch.Size([92])
random features: torch.Size([108, 96, 8, 8]) torch.Size([108])
random features: torch.Size([99, 96, 8, 8]) torch.Size([99])
all data: 1018
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.7697) feature loss: tensor(0.2615)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.7692) feature loss: tensor(0.2635)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.7675) feature loss: tensor(0.2676)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.8289) feature loss: tensor(0.2672)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.8908) feature loss: tensor(0.2674)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.7184) feature loss: tensor(0.2715)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.9724) feature loss: tensor(0.2648)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.7839) feature loss: tensor(0.2700)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.7372) feature loss: tensor(0.2690)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.8179) feature loss: tensor(0.2644)
Global Model Acc on global data: 0.4409 length of data: 10000
-------------Round number:  38  -------------
selected users: [40, 73, 49, 45, 64, 16, 69, 17, 72, 66]
random features: torch.Size([92, 96, 8, 8]) torch.Size([92])
random features: torch.Size([104, 96, 8, 8]) torch.Size([104])
random features: torch.Size([99, 96, 8, 8]) torch.Size([99])
random features: torch.Size([100, 96, 8, 8]) torch.Size([100])
random features: torch.Size([98, 96, 8, 8]) torch.Size([98])
random features: torch.Size([106, 96, 8, 8]) torch.Size([106])
random features: torch.Size([98, 96, 8, 8]) torch.Size([98])
random features: torch.Size([107, 96, 8, 8]) torch.Size([107])
random features: torch.Size([115, 96, 8, 8]) torch.Size([115])
random features: torch.Size([108, 96, 8, 8]) torch.Size([108])
all data: 1027
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.8860) feature loss: tensor(0.3135)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.8499) feature loss: tensor(0.3143)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.7943) feature loss: tensor(0.3078)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.8322) feature loss: tensor(0.3119)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.9938) feature loss: tensor(0.3069)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.9300) feature loss: tensor(0.3166)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.8188) feature loss: tensor(0.2945)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.8153) feature loss: tensor(0.2953)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.8557) feature loss: tensor(0.3076)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.8343) feature loss: tensor(0.2890)
Global Model Acc on global data: 0.4275 length of data: 10000
-------------Round number:  39  -------------
selected users: [22, 53, 84, 57, 87, 58, 29, 21, 85, 79]
random features: torch.Size([102, 96, 8, 8]) torch.Size([102])
random features: torch.Size([115, 96, 8, 8]) torch.Size([115])
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([101, 96, 8, 8]) torch.Size([101])
random features: torch.Size([95, 96, 8, 8]) torch.Size([95])
random features: torch.Size([101, 96, 8, 8]) torch.Size([101])
random features: torch.Size([109, 96, 8, 8]) torch.Size([109])
random features: torch.Size([94, 96, 8, 8]) torch.Size([94])
random features: torch.Size([100, 96, 8, 8]) torch.Size([100])
random features: torch.Size([99, 96, 8, 8]) torch.Size([99])
all data: 1012
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(1.0374) feature loss: tensor(0.3128)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.7757) feature loss: tensor(0.3138)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.8920) feature loss: tensor(0.3092)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.8694) feature loss: tensor(0.2994)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.8818) feature loss: tensor(0.3143)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.8137) feature loss: tensor(0.2974)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.7768) feature loss: tensor(0.3076)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.8679) feature loss: tensor(0.3079)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.7932) feature loss: tensor(0.2996)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.8963) feature loss: tensor(0.3026)
Global Model Acc on global data: 0.4082 length of data: 10000
-------------Round number:  40  -------------
selected users: [79, 75, 63, 15, 38, 11, 40, 45, 39, 62]
random features: torch.Size([99, 96, 8, 8]) torch.Size([99])
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([101, 96, 8, 8]) torch.Size([101])
random features: torch.Size([103, 96, 8, 8]) torch.Size([103])
random features: torch.Size([109, 96, 8, 8]) torch.Size([109])
random features: torch.Size([106, 96, 8, 8]) torch.Size([106])
random features: torch.Size([92, 96, 8, 8]) torch.Size([92])
random features: torch.Size([100, 96, 8, 8]) torch.Size([100])
random features: torch.Size([103, 96, 8, 8]) torch.Size([103])
random features: torch.Size([93, 96, 8, 8]) torch.Size([93])
all data: 1002
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.7923) feature loss: tensor(0.3213)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.8084) feature loss: tensor(0.3306)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.7655) feature loss: tensor(0.3209)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.9856) feature loss: tensor(0.3296)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.7410) feature loss: tensor(0.3241)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.7798) feature loss: tensor(0.3214)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.7958) feature loss: tensor(0.3254)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.7751) feature loss: tensor(0.3306)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.8274) feature loss: tensor(0.3299)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.8894) feature loss: tensor(0.3369)
Global Model Acc on global data: 0.4605 length of data: 10000
save a model
-------------Round number:  41  -------------
selected users: [42, 94, 37, 6, 79, 32, 24, 0, 33, 93]
random features: torch.Size([95, 96, 8, 8]) torch.Size([95])
random features: torch.Size([101, 96, 8, 8]) torch.Size([101])
random features: torch.Size([101, 96, 8, 8]) torch.Size([101])
random features: torch.Size([104, 96, 8, 8]) torch.Size([104])
random features: torch.Size([99, 96, 8, 8]) torch.Size([99])
random features: torch.Size([99, 96, 8, 8]) torch.Size([99])
random features: torch.Size([98, 96, 8, 8]) torch.Size([98])
random features: torch.Size([99, 96, 8, 8]) torch.Size([99])
random features: torch.Size([97, 96, 8, 8]) torch.Size([97])
random features: torch.Size([104, 96, 8, 8]) torch.Size([104])
all data: 997
Local adapation with distilling: 0.000262
training loss: tensor(0.8631) feature loss: tensor(0.2445)
Local adapation with distilling: 0.000262
training loss: tensor(0.8653) feature loss: tensor(0.2465)
Local adapation with distilling: 0.000262
training loss: tensor(0.7878) feature loss: tensor(0.2447)
Local adapation with distilling: 0.000262
training loss: tensor(0.8333) feature loss: tensor(0.2592)
Local adapation with distilling: 0.000262
training loss: tensor(0.7432) feature loss: tensor(0.2434)
Local adapation with distilling: 0.000262
training loss: tensor(0.9304) feature loss: tensor(0.2545)
Local adapation with distilling: 0.000262
training loss: tensor(0.8042) feature loss: tensor(0.2444)
Local adapation with distilling: 0.000262
training loss: tensor(0.7651) feature loss: tensor(0.2368)
Local adapation with distilling: 0.000262
training loss: tensor(0.7733) feature loss: tensor(0.2506)
Local adapation with distilling: 0.000262
training loss: tensor(0.8333) feature loss: tensor(0.2453)
Global Model Acc on global data: 0.4112 length of data: 10000
-------------Round number:  42  -------------
selected users: [83, 53, 70, 45, 44, 39, 22, 80, 10, 0]
random features: torch.Size([101, 96, 8, 8]) torch.Size([101])
random features: torch.Size([115, 96, 8, 8]) torch.Size([115])
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([100, 96, 8, 8]) torch.Size([100])
random features: torch.Size([94, 96, 8, 8]) torch.Size([94])
random features: torch.Size([103, 96, 8, 8]) torch.Size([103])
random features: torch.Size([102, 96, 8, 8]) torch.Size([102])
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([93, 96, 8, 8]) torch.Size([93])
random features: torch.Size([99, 96, 8, 8]) torch.Size([99])
all data: 999
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.7826) feature loss: tensor(0.2790)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.6792) feature loss: tensor(0.2869)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.7259) feature loss: tensor(0.2857)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.7129) feature loss: tensor(0.2832)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.8211) feature loss: tensor(0.2746)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.7316) feature loss: tensor(0.2889)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.9411) feature loss: tensor(0.2817)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.7562) feature loss: tensor(0.2759)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.7408) feature loss: tensor(0.2851)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.6971) feature loss: tensor(0.2799)
Global Model Acc on global data: 0.4126 length of data: 10000
-------------Round number:  43  -------------
selected users: [20, 2, 15, 22, 57, 91, 69, 55, 11, 79]
random features: torch.Size([95, 96, 8, 8]) torch.Size([95])
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([103, 96, 8, 8]) torch.Size([103])
random features: torch.Size([102, 96, 8, 8]) torch.Size([102])
random features: torch.Size([101, 96, 8, 8]) torch.Size([101])
random features: torch.Size([105, 96, 8, 8]) torch.Size([105])
random features: torch.Size([98, 96, 8, 8]) torch.Size([98])
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([106, 96, 8, 8]) torch.Size([106])
random features: torch.Size([99, 96, 8, 8]) torch.Size([99])
all data: 1001
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.8151) feature loss: tensor(0.2546)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.7260) feature loss: tensor(0.2555)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.6972) feature loss: tensor(0.2470)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.8484) feature loss: tensor(0.2482)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.7220) feature loss: tensor(0.2565)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.6831) feature loss: tensor(0.2494)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.6893) feature loss: tensor(0.2471)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.7307) feature loss: tensor(0.2463)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.6924) feature loss: tensor(0.2587)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.6609) feature loss: tensor(0.2471)
Global Model Acc on global data: 0.449 length of data: 10000
-------------Round number:  44  -------------
selected users: [42, 54, 27, 93, 39, 65, 7, 26, 24, 60]
random features: torch.Size([95, 96, 8, 8]) torch.Size([95])
random features: torch.Size([104, 96, 8, 8]) torch.Size([104])
random features: torch.Size([97, 96, 8, 8]) torch.Size([97])
random features: torch.Size([104, 96, 8, 8]) torch.Size([104])
random features: torch.Size([103, 96, 8, 8]) torch.Size([103])
random features: torch.Size([99, 96, 8, 8]) torch.Size([99])
random features: torch.Size([95, 96, 8, 8]) torch.Size([95])
random features: torch.Size([105, 96, 8, 8]) torch.Size([105])
random features: torch.Size([98, 96, 8, 8]) torch.Size([98])
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
all data: 996
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.7610) feature loss: tensor(0.2061)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.8919) feature loss: tensor(0.2148)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.7942) feature loss: tensor(0.2164)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.7308) feature loss: tensor(0.2114)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.7088) feature loss: tensor(0.2083)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.7155) feature loss: tensor(0.2055)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.7744) feature loss: tensor(0.2120)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.6839) feature loss: tensor(0.2112)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.6901) feature loss: tensor(0.2056)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.7658) feature loss: tensor(0.2097)
Global Model Acc on global data: 0.4158 length of data: 10000
-------------Round number:  45  -------------
selected users: [0, 1, 62, 76, 37, 99, 78, 38, 2, 84]
random features: torch.Size([99, 96, 8, 8]) torch.Size([99])
random features: torch.Size([104, 96, 8, 8]) torch.Size([104])
random features: torch.Size([93, 96, 8, 8]) torch.Size([93])
random features: torch.Size([106, 96, 8, 8]) torch.Size([106])
random features: torch.Size([101, 96, 8, 8]) torch.Size([101])
random features: torch.Size([93, 96, 8, 8]) torch.Size([93])
random features: torch.Size([104, 96, 8, 8]) torch.Size([104])
random features: torch.Size([109, 96, 8, 8]) torch.Size([109])
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
all data: 1001
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.7696) feature loss: tensor(0.2584)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.8937) feature loss: tensor(0.2562)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.8955) feature loss: tensor(0.2560)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.9021) feature loss: tensor(0.2635)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.8181) feature loss: tensor(0.2545)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.8668) feature loss: tensor(0.2477)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.8652) feature loss: tensor(0.2635)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.7558) feature loss: tensor(0.2627)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.8044) feature loss: tensor(0.2620)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.8622) feature loss: tensor(0.2597)
Global Model Acc on global data: 0.4175 length of data: 10000
-------------Round number:  46  -------------
selected users: [71, 33, 37, 10, 44, 34, 24, 98, 73, 95]
random features: torch.Size([101, 96, 8, 8]) torch.Size([101])
random features: torch.Size([97, 96, 8, 8]) torch.Size([97])
random features: torch.Size([101, 96, 8, 8]) torch.Size([101])
random features: torch.Size([93, 96, 8, 8]) torch.Size([93])
random features: torch.Size([94, 96, 8, 8]) torch.Size([94])
random features: torch.Size([95, 96, 8, 8]) torch.Size([95])
random features: torch.Size([98, 96, 8, 8]) torch.Size([98])
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([104, 96, 8, 8]) torch.Size([104])
random features: torch.Size([100, 96, 8, 8]) torch.Size([100])
all data: 979
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.6767) feature loss: tensor(0.2192)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.6766) feature loss: tensor(0.2198)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.6608) feature loss: tensor(0.2264)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.7254) feature loss: tensor(0.2228)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.7537) feature loss: tensor(0.2242)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.7443) feature loss: tensor(0.2227)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.6718) feature loss: tensor(0.2172)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.7383) feature loss: tensor(0.2248)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.7691) feature loss: tensor(0.2298)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.7202) feature loss: tensor(0.2249)
Global Model Acc on global data: 0.4169 length of data: 10000
-------------Round number:  47  -------------
selected users: [17, 90, 94, 86, 63, 5, 38, 14, 40, 47]
random features: torch.Size([107, 96, 8, 8]) torch.Size([107])
random features: torch.Size([95, 96, 8, 8]) torch.Size([95])
random features: torch.Size([101, 96, 8, 8]) torch.Size([101])
random features: torch.Size([106, 96, 8, 8]) torch.Size([106])
random features: torch.Size([101, 96, 8, 8]) torch.Size([101])
random features: torch.Size([102, 96, 8, 8]) torch.Size([102])
random features: torch.Size([109, 96, 8, 8]) torch.Size([109])
random features: torch.Size([99, 96, 8, 8]) torch.Size([99])
random features: torch.Size([92, 96, 8, 8]) torch.Size([92])
random features: torch.Size([93, 96, 8, 8]) torch.Size([93])
all data: 1005
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.8741) feature loss: tensor(0.2735)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.9879) feature loss: tensor(0.2699)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.9305) feature loss: tensor(0.2523)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.8961) feature loss: tensor(0.2710)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.8704) feature loss: tensor(0.2622)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(1.0247) feature loss: tensor(0.2524)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.7963) feature loss: tensor(0.2697)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.8586) feature loss: tensor(0.2546)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.8945) feature loss: tensor(0.2648)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.8716) feature loss: tensor(0.2556)
Global Model Acc on global data: 0.4167 length of data: 10000
-------------Round number:  48  -------------
selected users: [93, 5, 71, 9, 11, 79, 69, 8, 59, 63]
random features: torch.Size([104, 96, 8, 8]) torch.Size([104])
random features: torch.Size([102, 96, 8, 8]) torch.Size([102])
random features: torch.Size([101, 96, 8, 8]) torch.Size([101])
random features: torch.Size([102, 96, 8, 8]) torch.Size([102])
random features: torch.Size([106, 96, 8, 8]) torch.Size([106])
random features: torch.Size([99, 96, 8, 8]) torch.Size([99])
random features: torch.Size([98, 96, 8, 8]) torch.Size([98])
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([103, 96, 8, 8]) torch.Size([103])
random features: torch.Size([101, 96, 8, 8]) torch.Size([101])
all data: 1012
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.7558) feature loss: tensor(0.2694)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.8353) feature loss: tensor(0.2696)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.7341) feature loss: tensor(0.2644)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(1.1564) feature loss: tensor(0.2656)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.7717) feature loss: tensor(0.2695)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.7955) feature loss: tensor(0.2701)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.7940) feature loss: tensor(0.2632)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.8302) feature loss: tensor(0.2599)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.8513) feature loss: tensor(0.2726)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.7243) feature loss: tensor(0.2596)
Global Model Acc on global data: 0.4516 length of data: 10000
-------------Round number:  49  -------------
selected users: [76, 25, 28, 75, 81, 47, 41, 22, 29, 1]
random features: torch.Size([106, 96, 8, 8]) torch.Size([106])
random features: torch.Size([100, 96, 8, 8]) torch.Size([100])
random features: torch.Size([102, 96, 8, 8]) torch.Size([102])
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([102, 96, 8, 8]) torch.Size([102])
random features: torch.Size([93, 96, 8, 8]) torch.Size([93])
random features: torch.Size([95, 96, 8, 8]) torch.Size([95])
random features: torch.Size([102, 96, 8, 8]) torch.Size([102])
random features: torch.Size([109, 96, 8, 8]) torch.Size([109])
random features: torch.Size([104, 96, 8, 8]) torch.Size([104])
all data: 1009
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.8133) feature loss: tensor(0.1956)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.7809) feature loss: tensor(0.1831)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(1.0522) feature loss: tensor(0.1828)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.7947) feature loss: tensor(0.1869)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(1.0423) feature loss: tensor(0.1920)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.7423) feature loss: tensor(0.1905)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.7615) feature loss: tensor(0.1954)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.9771) feature loss: tensor(0.1895)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.7027) feature loss: tensor(0.1868)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.6900) feature loss: tensor(0.1891)
Global Model Acc on global data: 0.466 length of data: 10000
save a model
-------------Round number:  50  -------------
selected users: [80, 79, 25, 15, 39, 40, 53, 17, 57, 50]
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([99, 96, 8, 8]) torch.Size([99])
random features: torch.Size([100, 96, 8, 8]) torch.Size([100])
random features: torch.Size([103, 96, 8, 8]) torch.Size([103])
random features: torch.Size([103, 96, 8, 8]) torch.Size([103])
random features: torch.Size([92, 96, 8, 8]) torch.Size([92])
random features: torch.Size([115, 96, 8, 8]) torch.Size([115])
random features: torch.Size([107, 96, 8, 8]) torch.Size([107])
random features: torch.Size([101, 96, 8, 8]) torch.Size([101])
random features: torch.Size([98, 96, 8, 8]) torch.Size([98])
all data: 1014
Local adapation with distilling: 0.0001
training loss: tensor(0.7582) feature loss: tensor(0.1692)
Local adapation with distilling: 0.0001
training loss: tensor(0.6700) feature loss: tensor(0.1682)
Local adapation with distilling: 0.0001
training loss: tensor(0.6737) feature loss: tensor(0.1648)
Local adapation with distilling: 0.0001
training loss: tensor(0.9246) feature loss: tensor(0.1673)
Local adapation with distilling: 0.0001
training loss: tensor(0.6774) feature loss: tensor(0.1709)
Local adapation with distilling: 0.0001
training loss: tensor(0.7427) feature loss: tensor(0.1705)
Local adapation with distilling: 0.0001
training loss: tensor(0.6500) feature loss: tensor(0.1817)
Local adapation with distilling: 0.0001
training loss: tensor(0.6670) feature loss: tensor(0.1738)
Local adapation with distilling: 0.0001
training loss: tensor(0.7223) feature loss: tensor(0.1685)
Local adapation with distilling: 0.0001
training loss: tensor(0.7840) feature loss: tensor(0.1668)
Global Model Acc on global data: 0.449 length of data: 10000
-------------Round number:  51  -------------
selected users: [71, 43, 11, 83, 78, 19, 80, 4, 79, 75]
random features: torch.Size([101, 96, 8, 8]) torch.Size([101])
random features: torch.Size([98, 96, 8, 8]) torch.Size([98])
random features: torch.Size([106, 96, 8, 8]) torch.Size([106])
random features: torch.Size([101, 96, 8, 8]) torch.Size([101])
random features: torch.Size([104, 96, 8, 8]) torch.Size([104])
random features: torch.Size([100, 96, 8, 8]) torch.Size([100])
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([98, 96, 8, 8]) torch.Size([98])
random features: torch.Size([99, 96, 8, 8]) torch.Size([99])
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
all data: 999
Local adapation with distilling: 0.0001
training loss: tensor(0.6681) feature loss: tensor(0.1712)
Local adapation with distilling: 0.0001
training loss: tensor(0.7590) feature loss: tensor(0.1711)
Local adapation with distilling: 0.0001
training loss: tensor(0.6760) feature loss: tensor(0.1780)
Local adapation with distilling: 0.0001
training loss: tensor(0.8323) feature loss: tensor(0.1829)
Local adapation with distilling: 0.0001
training loss: tensor(0.7301) feature loss: tensor(0.1796)
Local adapation with distilling: 0.0001
training loss: tensor(0.7947) feature loss: tensor(0.1763)
Local adapation with distilling: 0.0001
training loss: tensor(0.7024) feature loss: tensor(0.1745)
Local adapation with distilling: 0.0001
training loss: tensor(0.8141) feature loss: tensor(0.1706)
Local adapation with distilling: 0.0001
training loss: tensor(0.6631) feature loss: tensor(0.1711)
Local adapation with distilling: 0.0001
training loss: tensor(0.7086) feature loss: tensor(0.1680)
Global Model Acc on global data: 0.4326 length of data: 10000
-------------Round number:  52  -------------
selected users: [82, 8, 44, 19, 2, 73, 37, 89, 67, 18]
random features: torch.Size([92, 96, 8, 8]) torch.Size([92])
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([94, 96, 8, 8]) torch.Size([94])
random features: torch.Size([100, 96, 8, 8]) torch.Size([100])
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([104, 96, 8, 8]) torch.Size([104])
random features: torch.Size([101, 96, 8, 8]) torch.Size([101])
random features: torch.Size([108, 96, 8, 8]) torch.Size([108])
random features: torch.Size([94, 96, 8, 8]) torch.Size([94])
random features: torch.Size([99, 96, 8, 8]) torch.Size([99])
all data: 984
Local adapation with distilling: 0.0001
training loss: tensor(0.8295) feature loss: tensor(0.1926)
Local adapation with distilling: 0.0001
training loss: tensor(0.7650) feature loss: tensor(0.1934)
Local adapation with distilling: 0.0001
training loss: tensor(0.8131) feature loss: tensor(0.1891)
Local adapation with distilling: 0.0001
training loss: tensor(0.7332) feature loss: tensor(0.1847)
Local adapation with distilling: 0.0001
training loss: tensor(0.7191) feature loss: tensor(0.1912)
Local adapation with distilling: 0.0001
training loss: tensor(0.7694) feature loss: tensor(0.1913)
Local adapation with distilling: 0.0001
training loss: tensor(0.7116) feature loss: tensor(0.1905)
Local adapation with distilling: 0.0001
training loss: tensor(0.7125) feature loss: tensor(0.1963)
Local adapation with distilling: 0.0001
training loss: tensor(0.7832) feature loss: tensor(0.1879)
Local adapation with distilling: 0.0001
training loss: tensor(0.9317) feature loss: tensor(0.1900)
Global Model Acc on global data: 0.4483 length of data: 10000
-------------Round number:  53  -------------
selected users: [19, 78, 64, 3, 71, 32, 68, 42, 55, 97]
random features: torch.Size([100, 96, 8, 8]) torch.Size([100])
random features: torch.Size([104, 96, 8, 8]) torch.Size([104])
random features: torch.Size([98, 96, 8, 8]) torch.Size([98])
random features: torch.Size([106, 96, 8, 8]) torch.Size([106])
random features: torch.Size([101, 96, 8, 8]) torch.Size([101])
random features: torch.Size([99, 96, 8, 8]) torch.Size([99])
random features: torch.Size([103, 96, 8, 8]) torch.Size([103])
random features: torch.Size([95, 96, 8, 8]) torch.Size([95])
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([95, 96, 8, 8]) torch.Size([95])
all data: 997
Local adapation with distilling: 0.0001
training loss: tensor(0.7634) feature loss: tensor(0.2005)
Local adapation with distilling: 0.0001
training loss: tensor(0.7698) feature loss: tensor(0.2117)
Local adapation with distilling: 0.0001
training loss: tensor(0.9931) feature loss: tensor(0.2043)
Local adapation with distilling: 0.0001
training loss: tensor(0.9285) feature loss: tensor(0.2176)
Local adapation with distilling: 0.0001
training loss: tensor(0.7288) feature loss: tensor(0.1993)
Local adapation with distilling: 0.0001
training loss: tensor(0.9253) feature loss: tensor(0.2111)
Local adapation with distilling: 0.0001
training loss: tensor(0.9110) feature loss: tensor(0.2040)
Local adapation with distilling: 0.0001
training loss: tensor(0.8297) feature loss: tensor(0.1974)
Local adapation with distilling: 0.0001
training loss: tensor(0.8512) feature loss: tensor(0.2085)
Local adapation with distilling: 0.0001
training loss: tensor(0.8805) feature loss: tensor(0.2023)
Global Model Acc on global data: 0.4207 length of data: 10000
-------------Round number:  54  -------------
selected users: [36, 70, 48, 94, 81, 46, 38, 29, 34, 22]
random features: torch.Size([101, 96, 8, 8]) torch.Size([101])
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([95, 96, 8, 8]) torch.Size([95])
random features: torch.Size([101, 96, 8, 8]) torch.Size([101])
random features: torch.Size([102, 96, 8, 8]) torch.Size([102])
random features: torch.Size([103, 96, 8, 8]) torch.Size([103])
random features: torch.Size([109, 96, 8, 8]) torch.Size([109])
random features: torch.Size([109, 96, 8, 8]) torch.Size([109])
random features: torch.Size([95, 96, 8, 8]) torch.Size([95])
random features: torch.Size([102, 96, 8, 8]) torch.Size([102])
all data: 1013
Local adapation with distilling: 0.0001
training loss: tensor(0.8387) feature loss: tensor(0.2187)
Local adapation with distilling: 0.0001
training loss: tensor(0.7596) feature loss: tensor(0.2221)
Local adapation with distilling: 0.0001
training loss: tensor(1.0062) feature loss: tensor(0.2143)
Local adapation with distilling: 0.0001
training loss: tensor(0.7884) feature loss: tensor(0.2146)
Local adapation with distilling: 0.0001
training loss: tensor(1.0675) feature loss: tensor(0.2314)
Local adapation with distilling: 0.0001
training loss: tensor(0.7875) feature loss: tensor(0.2281)
Local adapation with distilling: 0.0001
training loss: tensor(0.6888) feature loss: tensor(0.2257)
Local adapation with distilling: 0.0001
training loss: tensor(0.7241) feature loss: tensor(0.2316)
Local adapation with distilling: 0.0001
training loss: tensor(0.7551) feature loss: tensor(0.2113)
Local adapation with distilling: 0.0001
training loss: tensor(0.9831) feature loss: tensor(0.2210)
Global Model Acc on global data: 0.4553 length of data: 10000
-------------Round number:  55  -------------
selected users: [28, 92, 98, 95, 84, 34, 38, 76, 17, 78]
random features: torch.Size([102, 96, 8, 8]) torch.Size([102])
random features: torch.Size([93, 96, 8, 8]) torch.Size([93])
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([100, 96, 8, 8]) torch.Size([100])
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([95, 96, 8, 8]) torch.Size([95])
random features: torch.Size([109, 96, 8, 8]) torch.Size([109])
random features: torch.Size([106, 96, 8, 8]) torch.Size([106])
random features: torch.Size([107, 96, 8, 8]) torch.Size([107])
random features: torch.Size([104, 96, 8, 8]) torch.Size([104])
all data: 1008
Local adapation with distilling: 0.0001
training loss: tensor(0.9857) feature loss: tensor(0.2182)
Local adapation with distilling: 0.0001
training loss: tensor(0.9975) feature loss: tensor(0.2168)
Local adapation with distilling: 0.0001
training loss: tensor(0.7484) feature loss: tensor(0.2189)
Local adapation with distilling: 0.0001
training loss: tensor(0.7477) feature loss: tensor(0.2195)
Local adapation with distilling: 0.0001
training loss: tensor(0.7908) feature loss: tensor(0.2123)
Local adapation with distilling: 0.0001
training loss: tensor(0.7153) feature loss: tensor(0.2119)
Local adapation with distilling: 0.0001
training loss: tensor(0.6397) feature loss: tensor(0.2198)
Local adapation with distilling: 0.0001
training loss: tensor(0.7887) feature loss: tensor(0.2080)
Local adapation with distilling: 0.0001
training loss: tensor(0.7070) feature loss: tensor(0.2160)
Local adapation with distilling: 0.0001
training loss: tensor(0.7018) feature loss: tensor(0.2232)
Global Model Acc on global data: 0.45 length of data: 10000
-------------Round number:  56  -------------
selected users: [92, 79, 23, 68, 52, 38, 73, 9, 59, 27]
random features: torch.Size([93, 96, 8, 8]) torch.Size([93])
random features: torch.Size([99, 96, 8, 8]) torch.Size([99])
random features: torch.Size([98, 96, 8, 8]) torch.Size([98])
random features: torch.Size([103, 96, 8, 8]) torch.Size([103])
random features: torch.Size([102, 96, 8, 8]) torch.Size([102])
random features: torch.Size([109, 96, 8, 8]) torch.Size([109])
random features: torch.Size([104, 96, 8, 8]) torch.Size([104])
random features: torch.Size([102, 96, 8, 8]) torch.Size([102])
random features: torch.Size([103, 96, 8, 8]) torch.Size([103])
random features: torch.Size([97, 96, 8, 8]) torch.Size([97])
all data: 1010
Local adapation with distilling: 0.0001
training loss: tensor(0.8702) feature loss: tensor(0.2120)
Local adapation with distilling: 0.0001
training loss: tensor(0.7312) feature loss: tensor(0.2134)
Local adapation with distilling: 0.0001
training loss: tensor(0.9733) feature loss: tensor(0.2220)
Local adapation with distilling: 0.0001
training loss: tensor(0.7641) feature loss: tensor(0.2056)
Local adapation with distilling: 0.0001
training loss: tensor(1.0991) feature loss: tensor(0.2220)
Local adapation with distilling: 0.0001
training loss: tensor(0.6251) feature loss: tensor(0.2102)
Local adapation with distilling: 0.0001
training loss: tensor(0.7250) feature loss: tensor(0.2117)
Local adapation with distilling: 0.0001
training loss: tensor(0.9617) feature loss: tensor(0.2132)
Local adapation with distilling: 0.0001
training loss: tensor(0.9031) feature loss: tensor(0.2114)
Local adapation with distilling: 0.0001
training loss: tensor(0.8338) feature loss: tensor(0.2127)
Global Model Acc on global data: 0.4485 length of data: 10000
-------------Round number:  57  -------------
selected users: [52, 17, 41, 3, 8, 98, 59, 20, 67, 7]
random features: torch.Size([102, 96, 8, 8]) torch.Size([102])
random features: torch.Size([107, 96, 8, 8]) torch.Size([107])
random features: torch.Size([95, 96, 8, 8]) torch.Size([95])
random features: torch.Size([106, 96, 8, 8]) torch.Size([106])
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([103, 96, 8, 8]) torch.Size([103])
random features: torch.Size([95, 96, 8, 8]) torch.Size([95])
random features: torch.Size([94, 96, 8, 8]) torch.Size([94])
random features: torch.Size([95, 96, 8, 8]) torch.Size([95])
all data: 989
Local adapation with distilling: 0.0001
training loss: tensor(0.8595) feature loss: tensor(0.2136)
Local adapation with distilling: 0.0001
training loss: tensor(0.6790) feature loss: tensor(0.2277)
Local adapation with distilling: 0.0001
training loss: tensor(0.7340) feature loss: tensor(0.2223)
Local adapation with distilling: 0.0001
training loss: tensor(0.8076) feature loss: tensor(0.2266)
Local adapation with distilling: 0.0001
training loss: tensor(0.7219) feature loss: tensor(0.2242)
Local adapation with distilling: 0.0001
training loss: tensor(0.7188) feature loss: tensor(0.2168)
Local adapation with distilling: 0.0001
training loss: tensor(0.7580) feature loss: tensor(0.2235)
Local adapation with distilling: 0.0001
training loss: tensor(0.8692) feature loss: tensor(0.2154)
Local adapation with distilling: 0.0001
training loss: tensor(0.7409) feature loss: tensor(0.2267)
Local adapation with distilling: 0.0001
training loss: tensor(0.8056) feature loss: tensor(0.2279)
Global Model Acc on global data: 0.4421 length of data: 10000
-------------Round number:  58  -------------
selected users: [43, 58, 8, 31, 70, 45, 69, 95, 50, 4]
random features: torch.Size([98, 96, 8, 8]) torch.Size([98])
random features: torch.Size([101, 96, 8, 8]) torch.Size([101])
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([97, 96, 8, 8]) torch.Size([97])
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([100, 96, 8, 8]) torch.Size([100])
random features: torch.Size([98, 96, 8, 8]) torch.Size([98])
random features: torch.Size([100, 96, 8, 8]) torch.Size([100])
random features: torch.Size([98, 96, 8, 8]) torch.Size([98])
random features: torch.Size([98, 96, 8, 8]) torch.Size([98])
all data: 982
Local adapation with distilling: 0.0001
training loss: tensor(0.7698) feature loss: tensor(0.2035)
Local adapation with distilling: 0.0001
training loss: tensor(0.7609) feature loss: tensor(0.2019)
Local adapation with distilling: 0.0001
training loss: tensor(0.6568) feature loss: tensor(0.2018)
Local adapation with distilling: 0.0001
training loss: tensor(0.8230) feature loss: tensor(0.1934)
Local adapation with distilling: 0.0001
training loss: tensor(0.7272) feature loss: tensor(0.2041)
Local adapation with distilling: 0.0001
training loss: tensor(0.7301) feature loss: tensor(0.2039)
Local adapation with distilling: 0.0001
training loss: tensor(0.7587) feature loss: tensor(0.2069)
Local adapation with distilling: 0.0001
training loss: tensor(0.6841) feature loss: tensor(0.2017)
Local adapation with distilling: 0.0001
training loss: tensor(0.7655) feature loss: tensor(0.2042)
Local adapation with distilling: 0.0001
training loss: tensor(0.8338) feature loss: tensor(0.2072)
Global Model Acc on global data: 0.457 length of data: 10000
-------------Round number:  59  -------------
selected users: [38, 46, 24, 87, 30, 85, 16, 96, 18, 99]
random features: torch.Size([109, 96, 8, 8]) torch.Size([109])
random features: torch.Size([103, 96, 8, 8]) torch.Size([103])
random features: torch.Size([98, 96, 8, 8]) torch.Size([98])
random features: torch.Size([95, 96, 8, 8]) torch.Size([95])
random features: torch.Size([95, 96, 8, 8]) torch.Size([95])
random features: torch.Size([100, 96, 8, 8]) torch.Size([100])
random features: torch.Size([106, 96, 8, 8]) torch.Size([106])
random features: torch.Size([102, 96, 8, 8]) torch.Size([102])
random features: torch.Size([99, 96, 8, 8]) torch.Size([99])
random features: torch.Size([93, 96, 8, 8]) torch.Size([93])
all data: 1000
Local adapation with distilling: 0.0001
training loss: tensor(0.7279) feature loss: tensor(0.2131)
Local adapation with distilling: 0.0001
training loss: tensor(0.8206) feature loss: tensor(0.2141)
Local adapation with distilling: 0.0001
training loss: tensor(0.8675) feature loss: tensor(0.2084)
Local adapation with distilling: 0.0001
training loss: tensor(0.8897) feature loss: tensor(0.1979)
Local adapation with distilling: 0.0001
training loss: tensor(0.9967) feature loss: tensor(0.2062)
Local adapation with distilling: 0.0001
training loss: tensor(0.8490) feature loss: tensor(0.2030)
Local adapation with distilling: 0.0001
training loss: tensor(0.9308) feature loss: tensor(0.2103)
Local adapation with distilling: 0.0001
training loss: tensor(1.1172) feature loss: tensor(0.2160)
Local adapation with distilling: 0.0001
training loss: tensor(0.9434) feature loss: tensor(0.1989)
Local adapation with distilling: 0.0001
training loss: tensor(0.8734) feature loss: tensor(0.2079)
Global Model Acc on global data: 0.4638 length of data: 10000
-------------Round number:  60  -------------
selected users: [88, 4, 79, 14, 55, 3, 19, 28, 94, 25]
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([98, 96, 8, 8]) torch.Size([98])
random features: torch.Size([99, 96, 8, 8]) torch.Size([99])
random features: torch.Size([99, 96, 8, 8]) torch.Size([99])
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([106, 96, 8, 8]) torch.Size([106])
random features: torch.Size([100, 96, 8, 8]) torch.Size([100])
random features: torch.Size([102, 96, 8, 8]) torch.Size([102])
random features: torch.Size([101, 96, 8, 8]) torch.Size([101])
random features: torch.Size([100, 96, 8, 8]) torch.Size([100])
all data: 997
Local adapation with distilling: 0.0001
training loss: tensor(0.7489) feature loss: tensor(0.1977)
Local adapation with distilling: 0.0001
training loss: tensor(0.7517) feature loss: tensor(0.1944)
Local adapation with distilling: 0.0001
training loss: tensor(0.6828) feature loss: tensor(0.1989)
Local adapation with distilling: 0.0001
training loss: tensor(0.7472) feature loss: tensor(0.1986)
Local adapation with distilling: 0.0001
training loss: tensor(0.7872) feature loss: tensor(0.1913)
Local adapation with distilling: 0.0001
training loss: tensor(0.7520) feature loss: tensor(0.2003)
Local adapation with distilling: 0.0001
training loss: tensor(0.7399) feature loss: tensor(0.2013)
Local adapation with distilling: 0.0001
training loss: tensor(0.8306) feature loss: tensor(0.2037)
Local adapation with distilling: 0.0001
training loss: tensor(0.7714) feature loss: tensor(0.1956)
Local adapation with distilling: 0.0001
training loss: tensor(0.7439) feature loss: tensor(0.2009)
Global Model Acc on global data: 0.4502 length of data: 10000
-------------Round number:  61  -------------
selected users: [83, 1, 55, 9, 31, 28, 96, 29, 86, 63]
random features: torch.Size([101, 96, 8, 8]) torch.Size([101])
random features: torch.Size([104, 96, 8, 8]) torch.Size([104])
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([102, 96, 8, 8]) torch.Size([102])
random features: torch.Size([97, 96, 8, 8]) torch.Size([97])
random features: torch.Size([102, 96, 8, 8]) torch.Size([102])
random features: torch.Size([102, 96, 8, 8]) torch.Size([102])
random features: torch.Size([109, 96, 8, 8]) torch.Size([109])
random features: torch.Size([106, 96, 8, 8]) torch.Size([106])
random features: torch.Size([101, 96, 8, 8]) torch.Size([101])
all data: 1020
Local adapation with distilling: 0.0001
training loss: tensor(0.7575) feature loss: tensor(0.1971)
Local adapation with distilling: 0.0001
training loss: tensor(0.6946) feature loss: tensor(0.1938)
Local adapation with distilling: 0.0001
training loss: tensor(0.6560) feature loss: tensor(0.1913)
Local adapation with distilling: 0.0001
training loss: tensor(1.0566) feature loss: tensor(0.1899)
Local adapation with distilling: 0.0001
training loss: tensor(0.7253) feature loss: tensor(0.1907)
Local adapation with distilling: 0.0001
training loss: tensor(0.8599) feature loss: tensor(0.1921)
Local adapation with distilling: 0.0001
training loss: tensor(0.8888) feature loss: tensor(0.1981)
Local adapation with distilling: 0.0001
training loss: tensor(0.6128) feature loss: tensor(0.1959)
Local adapation with distilling: 0.0001
training loss: tensor(0.6456) feature loss: tensor(0.1992)
Local adapation with distilling: 0.0001
training loss: tensor(0.6308) feature loss: tensor(0.1897)
Global Model Acc on global data: 0.4396 length of data: 10000
-------------Round number:  62  -------------
selected users: [76, 48, 62, 80, 29, 99, 60, 89, 39, 69]
random features: torch.Size([106, 96, 8, 8]) torch.Size([106])
random features: torch.Size([95, 96, 8, 8]) torch.Size([95])
random features: torch.Size([93, 96, 8, 8]) torch.Size([93])
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([109, 96, 8, 8]) torch.Size([109])
random features: torch.Size([93, 96, 8, 8]) torch.Size([93])
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([108, 96, 8, 8]) torch.Size([108])
random features: torch.Size([103, 96, 8, 8]) torch.Size([103])
random features: torch.Size([98, 96, 8, 8]) torch.Size([98])
all data: 997
Local adapation with distilling: 0.0001
training loss: tensor(0.7697) feature loss: tensor(0.2147)
Local adapation with distilling: 0.0001
training loss: tensor(0.8557) feature loss: tensor(0.2116)
Local adapation with distilling: 0.0001
training loss: tensor(0.8401) feature loss: tensor(0.2072)
Local adapation with distilling: 0.0001
training loss: tensor(0.7650) feature loss: tensor(0.2141)
Local adapation with distilling: 0.0001
training loss: tensor(0.6391) feature loss: tensor(0.2125)
Local adapation with distilling: 0.0001
training loss: tensor(0.7398) feature loss: tensor(0.2050)
Local adapation with distilling: 0.0001
training loss: tensor(0.8097) feature loss: tensor(0.2149)
Local adapation with distilling: 0.0001
training loss: tensor(0.6876) feature loss: tensor(0.2071)
Local adapation with distilling: 0.0001
training loss: tensor(0.8018) feature loss: tensor(0.2020)
Local adapation with distilling: 0.0001
training loss: tensor(0.6874) feature loss: tensor(0.2029)
Global Model Acc on global data: 0.4078 length of data: 10000
-------------Round number:  63  -------------
selected users: [64, 59, 63, 2, 80, 20, 18, 48, 72, 51]
random features: torch.Size([98, 96, 8, 8]) torch.Size([98])
random features: torch.Size([103, 96, 8, 8]) torch.Size([103])
random features: torch.Size([101, 96, 8, 8]) torch.Size([101])
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([95, 96, 8, 8]) torch.Size([95])
random features: torch.Size([99, 96, 8, 8]) torch.Size([99])
random features: torch.Size([95, 96, 8, 8]) torch.Size([95])
random features: torch.Size([115, 96, 8, 8]) torch.Size([115])
random features: torch.Size([97, 96, 8, 8]) torch.Size([97])
all data: 995
Local adapation with distilling: 0.0001
training loss: tensor(1.0484) feature loss: tensor(0.2931)
Local adapation with distilling: 0.0001
training loss: tensor(0.8318) feature loss: tensor(0.2747)
Local adapation with distilling: 0.0001
training loss: tensor(0.7407) feature loss: tensor(0.2633)
Local adapation with distilling: 0.0001
training loss: tensor(0.7792) feature loss: tensor(0.2677)
Local adapation with distilling: 0.0001
training loss: tensor(0.7694) feature loss: tensor(0.2661)
Local adapation with distilling: 0.0001
training loss: tensor(0.8475) feature loss: tensor(0.2730)
Local adapation with distilling: 0.0001
training loss: tensor(0.8569) feature loss: tensor(0.2711)
Local adapation with distilling: 0.0001
training loss: tensor(0.8196) feature loss: tensor(0.2755)
Local adapation with distilling: 0.0001
training loss: tensor(0.8475) feature loss: tensor(0.2783)
Local adapation with distilling: 0.0001
training loss: tensor(0.8614) feature loss: tensor(0.2792)
Global Model Acc on global data: 0.4347 length of data: 10000
-------------Round number:  64  -------------
selected users: [17, 22, 60, 92, 23, 19, 71, 94, 40, 49]
random features: torch.Size([107, 96, 8, 8]) torch.Size([107])
random features: torch.Size([102, 96, 8, 8]) torch.Size([102])
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([93, 96, 8, 8]) torch.Size([93])
random features: torch.Size([98, 96, 8, 8]) torch.Size([98])
random features: torch.Size([100, 96, 8, 8]) torch.Size([100])
random features: torch.Size([101, 96, 8, 8]) torch.Size([101])
random features: torch.Size([101, 96, 8, 8]) torch.Size([101])
random features: torch.Size([92, 96, 8, 8]) torch.Size([92])
random features: torch.Size([99, 96, 8, 8]) torch.Size([99])
all data: 989
Local adapation with distilling: 0.0001
training loss: tensor(0.7594) feature loss: tensor(0.2288)
Local adapation with distilling: 0.0001
training loss: tensor(0.9132) feature loss: tensor(0.2180)
Local adapation with distilling: 0.0001
training loss: tensor(0.7407) feature loss: tensor(0.2086)
Local adapation with distilling: 0.0001
training loss: tensor(0.8759) feature loss: tensor(0.2117)
Local adapation with distilling: 0.0001
training loss: tensor(0.8778) feature loss: tensor(0.2076)
Local adapation with distilling: 0.0001
training loss: tensor(0.7559) feature loss: tensor(0.2176)
Local adapation with distilling: 0.0001
training loss: tensor(0.7423) feature loss: tensor(0.2117)
Local adapation with distilling: 0.0001
training loss: tensor(0.8442) feature loss: tensor(0.2225)
Local adapation with distilling: 0.0001
training loss: tensor(0.8100) feature loss: tensor(0.2088)
Local adapation with distilling: 0.0001
training loss: tensor(0.7690) feature loss: tensor(0.2158)
Global Model Acc on global data: 0.4549 length of data: 10000
-------------Round number:  65  -------------
selected users: [37, 81, 39, 61, 76, 90, 27, 86, 28, 69]
random features: torch.Size([101, 96, 8, 8]) torch.Size([101])
random features: torch.Size([102, 96, 8, 8]) torch.Size([102])
random features: torch.Size([103, 96, 8, 8]) torch.Size([103])
random features: torch.Size([101, 96, 8, 8]) torch.Size([101])
random features: torch.Size([106, 96, 8, 8]) torch.Size([106])
random features: torch.Size([95, 96, 8, 8]) torch.Size([95])
random features: torch.Size([97, 96, 8, 8]) torch.Size([97])
random features: torch.Size([106, 96, 8, 8]) torch.Size([106])
random features: torch.Size([102, 96, 8, 8]) torch.Size([102])
random features: torch.Size([98, 96, 8, 8]) torch.Size([98])
all data: 1011
Local adapation with distilling: 0.0001
training loss: tensor(0.7142) feature loss: tensor(0.2065)
Local adapation with distilling: 0.0001
training loss: tensor(1.0222) feature loss: tensor(0.2055)
Local adapation with distilling: 0.0001
training loss: tensor(0.7190) feature loss: tensor(0.2053)
Local adapation with distilling: 0.0001
training loss: tensor(0.7392) feature loss: tensor(0.2020)
Local adapation with distilling: 0.0001
training loss: tensor(0.7149) feature loss: tensor(0.2100)
Local adapation with distilling: 0.0001
training loss: tensor(0.7894) feature loss: tensor(0.1976)
Local adapation with distilling: 0.0001
training loss: tensor(0.7816) feature loss: tensor(0.2045)
Local adapation with distilling: 0.0001
training loss: tensor(0.6789) feature loss: tensor(0.2066)
Local adapation with distilling: 0.0001
training loss: tensor(0.9748) feature loss: tensor(0.2050)
Local adapation with distilling: 0.0001
training loss: tensor(0.6594) feature loss: tensor(0.1975)
Global Model Acc on global data: 0.469 length of data: 10000
save a model
-------------Round number:  66  -------------
selected users: [8, 93, 4, 5, 52, 41, 0, 73, 88, 68]
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([104, 96, 8, 8]) torch.Size([104])
random features: torch.Size([98, 96, 8, 8]) torch.Size([98])
random features: torch.Size([102, 96, 8, 8]) torch.Size([102])
random features: torch.Size([102, 96, 8, 8]) torch.Size([102])
random features: torch.Size([95, 96, 8, 8]) torch.Size([95])
random features: torch.Size([99, 96, 8, 8]) torch.Size([99])
random features: torch.Size([104, 96, 8, 8]) torch.Size([104])
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([103, 96, 8, 8]) torch.Size([103])
all data: 999
Local adapation with distilling: 0.0001
training loss: tensor(0.6961) feature loss: tensor(0.2033)
Local adapation with distilling: 0.0001
training loss: tensor(0.7507) feature loss: tensor(0.2105)
Local adapation with distilling: 0.0001
training loss: tensor(0.7295) feature loss: tensor(0.1994)
Local adapation with distilling: 0.0001
training loss: tensor(0.8355) feature loss: tensor(0.2128)
Local adapation with distilling: 0.0001
training loss: tensor(0.9364) feature loss: tensor(0.2025)
Local adapation with distilling: 0.0001
training loss: tensor(0.7185) feature loss: tensor(0.2013)
Local adapation with distilling: 0.0001
training loss: tensor(0.7122) feature loss: tensor(0.2005)
Local adapation with distilling: 0.0001
training loss: tensor(0.7408) feature loss: tensor(0.2098)
Local adapation with distilling: 0.0001
training loss: tensor(0.7044) feature loss: tensor(0.2020)
Local adapation with distilling: 0.0001
training loss: tensor(0.7664) feature loss: tensor(0.2072)
Global Model Acc on global data: 0.412 length of data: 10000
-------------Round number:  67  -------------
selected users: [17, 24, 64, 93, 97, 29, 3, 70, 82, 11]
random features: torch.Size([107, 96, 8, 8]) torch.Size([107])
random features: torch.Size([98, 96, 8, 8]) torch.Size([98])
random features: torch.Size([98, 96, 8, 8]) torch.Size([98])
random features: torch.Size([104, 96, 8, 8]) torch.Size([104])
random features: torch.Size([95, 96, 8, 8]) torch.Size([95])
random features: torch.Size([109, 96, 8, 8]) torch.Size([109])
random features: torch.Size([106, 96, 8, 8]) torch.Size([106])
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([92, 96, 8, 8]) torch.Size([92])
random features: torch.Size([106, 96, 8, 8]) torch.Size([106])
all data: 1011
Local adapation with distilling: 0.0001
training loss: tensor(0.7433) feature loss: tensor(0.2719)
Local adapation with distilling: 0.0001
training loss: tensor(0.8162) feature loss: tensor(0.2574)
Local adapation with distilling: 0.0001
training loss: tensor(0.9395) feature loss: tensor(0.2551)
Local adapation with distilling: 0.0001
training loss: tensor(0.7849) feature loss: tensor(0.2618)
Local adapation with distilling: 0.0001
training loss: tensor(0.8572) feature loss: tensor(0.2668)
Local adapation with distilling: 0.0001
training loss: tensor(0.7388) feature loss: tensor(0.2722)
Local adapation with distilling: 0.0001
training loss: tensor(0.8373) feature loss: tensor(0.2806)
Local adapation with distilling: 0.0001
training loss: tensor(0.8086) feature loss: tensor(0.2627)
Local adapation with distilling: 0.0001
training loss: tensor(0.8682) feature loss: tensor(0.2712)
Local adapation with distilling: 0.0001
training loss: tensor(0.8209) feature loss: tensor(0.2667)
Global Model Acc on global data: 0.4639 length of data: 10000
-------------Round number:  68  -------------
selected users: [29, 30, 16, 5, 38, 71, 76, 94, 99, 95]
random features: torch.Size([109, 96, 8, 8]) torch.Size([109])
random features: torch.Size([95, 96, 8, 8]) torch.Size([95])
random features: torch.Size([106, 96, 8, 8]) torch.Size([106])
random features: torch.Size([102, 96, 8, 8]) torch.Size([102])
random features: torch.Size([109, 96, 8, 8]) torch.Size([109])
random features: torch.Size([101, 96, 8, 8]) torch.Size([101])
random features: torch.Size([106, 96, 8, 8]) torch.Size([106])
random features: torch.Size([101, 96, 8, 8]) torch.Size([101])
random features: torch.Size([93, 96, 8, 8]) torch.Size([93])
random features: torch.Size([100, 96, 8, 8]) torch.Size([100])
all data: 1022
Local adapation with distilling: 0.0001
training loss: tensor(0.5120) feature loss: tensor(0.1634)
Local adapation with distilling: 0.0001
training loss: tensor(0.7419) feature loss: tensor(0.1583)
Local adapation with distilling: 0.0001
training loss: tensor(0.6491) feature loss: tensor(0.1634)
Local adapation with distilling: 0.0001
training loss: tensor(0.6410) feature loss: tensor(0.1655)
Local adapation with distilling: 0.0001
training loss: tensor(0.5047) feature loss: tensor(0.1678)
Local adapation with distilling: 0.0001
training loss: tensor(0.5466) feature loss: tensor(0.1646)
Local adapation with distilling: 0.0001
training loss: tensor(0.5577) feature loss: tensor(0.1669)
Local adapation with distilling: 0.0001
training loss: tensor(0.5588) feature loss: tensor(0.1635)
Local adapation with distilling: 0.0001
training loss: tensor(0.6123) feature loss: tensor(0.1627)
Local adapation with distilling: 0.0001
training loss: tensor(0.5935) feature loss: tensor(0.1634)
Global Model Acc on global data: 0.4622 length of data: 10000
-------------Round number:  69  -------------
selected users: [72, 31, 13, 83, 33, 8, 26, 89, 64, 97]
random features: torch.Size([115, 96, 8, 8]) torch.Size([115])
random features: torch.Size([97, 96, 8, 8]) torch.Size([97])
random features: torch.Size([101, 96, 8, 8]) torch.Size([101])
random features: torch.Size([101, 96, 8, 8]) torch.Size([101])
random features: torch.Size([97, 96, 8, 8]) torch.Size([97])
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([105, 96, 8, 8]) torch.Size([105])
random features: torch.Size([108, 96, 8, 8]) torch.Size([108])
random features: torch.Size([98, 96, 8, 8]) torch.Size([98])
random features: torch.Size([95, 96, 8, 8]) torch.Size([95])
all data: 1013
Local adapation with distilling: 0.0001
training loss: tensor(0.7887) feature loss: tensor(0.2289)
Local adapation with distilling: 0.0001
training loss: tensor(0.8793) feature loss: tensor(0.2205)
Local adapation with distilling: 0.0001
training loss: tensor(0.8534) feature loss: tensor(0.2219)
Local adapation with distilling: 0.0001
training loss: tensor(0.8285) feature loss: tensor(0.2240)
Local adapation with distilling: 0.0001
training loss: tensor(0.8072) feature loss: tensor(0.2170)
Local adapation with distilling: 0.0001
training loss: tensor(0.7710) feature loss: tensor(0.2203)
Local adapation with distilling: 0.0001
training loss: tensor(0.7532) feature loss: tensor(0.2230)
Local adapation with distilling: 0.0001
training loss: tensor(0.7173) feature loss: tensor(0.2218)
Local adapation with distilling: 0.0001
training loss: tensor(0.8593) feature loss: tensor(0.2141)
Local adapation with distilling: 0.0001
training loss: tensor(0.7905) feature loss: tensor(0.2267)
Global Model Acc on global data: 0.4271 length of data: 10000
-------------Round number:  70  -------------
selected users: [81, 43, 88, 32, 50, 71, 73, 55, 42, 2]
random features: torch.Size([102, 96, 8, 8]) torch.Size([102])
random features: torch.Size([98, 96, 8, 8]) torch.Size([98])
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([99, 96, 8, 8]) torch.Size([99])
random features: torch.Size([98, 96, 8, 8]) torch.Size([98])
random features: torch.Size([101, 96, 8, 8]) torch.Size([101])
random features: torch.Size([104, 96, 8, 8]) torch.Size([104])
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([95, 96, 8, 8]) torch.Size([95])
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
all data: 985
Local adapation with distilling: 0.0001
training loss: tensor(1.0247) feature loss: tensor(0.2590)
Local adapation with distilling: 0.0001
training loss: tensor(0.8082) feature loss: tensor(0.2443)
Local adapation with distilling: 0.0001
training loss: tensor(0.7680) feature loss: tensor(0.2436)
Local adapation with distilling: 0.0001
training loss: tensor(0.9400) feature loss: tensor(0.2513)
Local adapation with distilling: 0.0001
training loss: tensor(0.7926) feature loss: tensor(0.2493)
Local adapation with distilling: 0.0001
training loss: tensor(0.7470) feature loss: tensor(0.2545)
Local adapation with distilling: 0.0001
training loss: tensor(0.7725) feature loss: tensor(0.2536)
Local adapation with distilling: 0.0001
training loss: tensor(0.8494) feature loss: tensor(0.2576)
Local adapation with distilling: 0.0001
training loss: tensor(0.9127) feature loss: tensor(0.2557)
Local adapation with distilling: 0.0001
training loss: tensor(0.8061) feature loss: tensor(0.2564)
Global Model Acc on global data: 0.4121 length of data: 10000
-------------Round number:  71  -------------
selected users: [41, 84, 98, 42, 75, 25, 60, 19, 52, 29]
random features: torch.Size([95, 96, 8, 8]) torch.Size([95])
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([95, 96, 8, 8]) torch.Size([95])
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([100, 96, 8, 8]) torch.Size([100])
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([100, 96, 8, 8]) torch.Size([100])
random features: torch.Size([102, 96, 8, 8]) torch.Size([102])
random features: torch.Size([109, 96, 8, 8]) torch.Size([109])
all data: 985
Local adapation with distilling: 0.0001
training loss: tensor(0.6836) feature loss: tensor(0.1996)
Local adapation with distilling: 0.0001
training loss: tensor(0.7379) feature loss: tensor(0.1937)
Local adapation with distilling: 0.0001
training loss: tensor(0.7021) feature loss: tensor(0.1989)
Local adapation with distilling: 0.0001
training loss: tensor(0.7426) feature loss: tensor(0.1982)
Local adapation with distilling: 0.0001
training loss: tensor(0.7353) feature loss: tensor(0.2047)
Local adapation with distilling: 0.0001
training loss: tensor(0.7651) feature loss: tensor(0.2066)
Local adapation with distilling: 0.0001
training loss: tensor(0.7137) feature loss: tensor(0.1980)
Local adapation with distilling: 0.0001
training loss: tensor(0.7069) feature loss: tensor(0.2007)
Local adapation with distilling: 0.0001
training loss: tensor(0.8763) feature loss: tensor(0.2111)
Local adapation with distilling: 0.0001
training loss: tensor(0.6425) feature loss: tensor(0.2126)
Global Model Acc on global data: 0.4344 length of data: 10000
-------------Round number:  72  -------------
selected users: [76, 82, 43, 16, 84, 95, 78, 91, 30, 22]
random features: torch.Size([106, 96, 8, 8]) torch.Size([106])
random features: torch.Size([92, 96, 8, 8]) torch.Size([92])
random features: torch.Size([98, 96, 8, 8]) torch.Size([98])
random features: torch.Size([106, 96, 8, 8]) torch.Size([106])
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([100, 96, 8, 8]) torch.Size([100])
random features: torch.Size([104, 96, 8, 8]) torch.Size([104])
random features: torch.Size([105, 96, 8, 8]) torch.Size([105])
random features: torch.Size([95, 96, 8, 8]) torch.Size([95])
random features: torch.Size([102, 96, 8, 8]) torch.Size([102])
all data: 1004
Local adapation with distilling: 0.0001
training loss: tensor(0.6833) feature loss: tensor(0.2139)
Local adapation with distilling: 0.0001
training loss: tensor(0.7301) feature loss: tensor(0.2036)
Local adapation with distilling: 0.0001
training loss: tensor(0.6726) feature loss: tensor(0.2025)
Local adapation with distilling: 0.0001
training loss: tensor(0.7295) feature loss: tensor(0.2213)
Local adapation with distilling: 0.0001
training loss: tensor(0.6902) feature loss: tensor(0.2019)
Local adapation with distilling: 0.0001
training loss: tensor(0.6955) feature loss: tensor(0.2087)
Local adapation with distilling: 0.0001
training loss: tensor(0.7749) feature loss: tensor(0.2163)
Local adapation with distilling: 0.0001
training loss: tensor(0.7396) feature loss: tensor(0.2182)
Local adapation with distilling: 0.0001
training loss: tensor(0.8125) feature loss: tensor(0.2046)
Local adapation with distilling: 0.0001
training loss: tensor(0.9265) feature loss: tensor(0.2120)
Global Model Acc on global data: 0.4096 length of data: 10000
-------------Round number:  73  -------------
selected users: [49, 14, 34, 70, 90, 35, 68, 76, 80, 9]
random features: torch.Size([99, 96, 8, 8]) torch.Size([99])
random features: torch.Size([99, 96, 8, 8]) torch.Size([99])
random features: torch.Size([95, 96, 8, 8]) torch.Size([95])
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([95, 96, 8, 8]) torch.Size([95])
random features: torch.Size([106, 96, 8, 8]) torch.Size([106])
random features: torch.Size([103, 96, 8, 8]) torch.Size([103])
random features: torch.Size([106, 96, 8, 8]) torch.Size([106])
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([102, 96, 8, 8]) torch.Size([102])
all data: 997
Local adapation with distilling: 0.0001
training loss: tensor(0.7556) feature loss: tensor(0.2114)
Local adapation with distilling: 0.0001
training loss: tensor(0.7000) feature loss: tensor(0.2076)
Local adapation with distilling: 0.0001
training loss: tensor(0.7448) feature loss: tensor(0.2187)
Local adapation with distilling: 0.0001
training loss: tensor(0.7112) feature loss: tensor(0.2117)
Local adapation with distilling: 0.0001
training loss: tensor(0.7665) feature loss: tensor(0.2056)
Local adapation with distilling: 0.0001
training loss: tensor(0.8217) feature loss: tensor(0.2122)
Local adapation with distilling: 0.0001
training loss: tensor(0.8210) feature loss: tensor(0.2189)
Local adapation with distilling: 0.0001
training loss: tensor(0.6633) feature loss: tensor(0.2189)
Local adapation with distilling: 0.0001
training loss: tensor(0.6960) feature loss: tensor(0.2079)
Local adapation with distilling: 0.0001
training loss: tensor(0.7856) feature loss: tensor(0.2206)
Global Model Acc on global data: 0.4486 length of data: 10000
-------------Round number:  74  -------------
selected users: [85, 64, 63, 80, 6, 12, 43, 17, 7, 8]
random features: torch.Size([100, 96, 8, 8]) torch.Size([100])
random features: torch.Size([98, 96, 8, 8]) torch.Size([98])
random features: torch.Size([101, 96, 8, 8]) torch.Size([101])
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([104, 96, 8, 8]) torch.Size([104])
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([98, 96, 8, 8]) torch.Size([98])
random features: torch.Size([107, 96, 8, 8]) torch.Size([107])
random features: torch.Size([95, 96, 8, 8]) torch.Size([95])
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
all data: 991
Local adapation with distilling: 0.0001
training loss: tensor(0.6839) feature loss: tensor(0.1843)
Local adapation with distilling: 0.0001
training loss: tensor(0.7488) feature loss: tensor(0.1861)
Local adapation with distilling: 0.0001
training loss: tensor(0.6423) feature loss: tensor(0.1829)
Local adapation with distilling: 0.0001
training loss: tensor(0.6207) feature loss: tensor(0.1775)
Local adapation with distilling: 0.0001
training loss: tensor(0.7877) feature loss: tensor(0.1905)
Local adapation with distilling: 0.0001
training loss: tensor(0.8059) feature loss: tensor(0.1844)
Local adapation with distilling: 0.0001
training loss: tensor(0.6230) feature loss: tensor(0.1813)
Local adapation with distilling: 0.0001
training loss: tensor(0.6445) feature loss: tensor(0.1920)
Local adapation with distilling: 0.0001
training loss: tensor(0.7385) feature loss: tensor(0.1805)
Local adapation with distilling: 0.0001
training loss: tensor(0.6538) feature loss: tensor(0.1848)
Global Model Acc on global data: 0.4665 length of data: 10000
-------------Round number:  75  -------------
selected users: [36, 7, 6, 45, 56, 54, 22, 37, 53, 68]
random features: torch.Size([101, 96, 8, 8]) torch.Size([101])
random features: torch.Size([95, 96, 8, 8]) torch.Size([95])
random features: torch.Size([104, 96, 8, 8]) torch.Size([104])
random features: torch.Size([100, 96, 8, 8]) torch.Size([100])
random features: torch.Size([110, 96, 8, 8]) torch.Size([110])
random features: torch.Size([104, 96, 8, 8]) torch.Size([104])
random features: torch.Size([102, 96, 8, 8]) torch.Size([102])
random features: torch.Size([101, 96, 8, 8]) torch.Size([101])
random features: torch.Size([115, 96, 8, 8]) torch.Size([115])
random features: torch.Size([103, 96, 8, 8]) torch.Size([103])
all data: 1035
Local adapation with distilling: 0.0001
training loss: tensor(0.8109) feature loss: tensor(0.1911)
Local adapation with distilling: 0.0001
training loss: tensor(0.7629) feature loss: tensor(0.1909)
Local adapation with distilling: 0.0001
training loss: tensor(0.7677) feature loss: tensor(0.2097)
Local adapation with distilling: 0.0001
training loss: tensor(0.7580) feature loss: tensor(0.1972)
Local adapation with distilling: 0.0001
training loss: tensor(0.7611) feature loss: tensor(0.2128)
Local adapation with distilling: 0.0001
training loss: tensor(0.8954) feature loss: tensor(0.2112)
Local adapation with distilling: 0.0001
training loss: tensor(0.9850) feature loss: tensor(0.1975)
Local adapation with distilling: 0.0001
training loss: tensor(0.7237) feature loss: tensor(0.1937)
Local adapation with distilling: 0.0001
training loss: tensor(0.7280) feature loss: tensor(0.2034)
Local adapation with distilling: 0.0001
training loss: tensor(0.7756) feature loss: tensor(0.1996)
Global Model Acc on global data: 0.4422 length of data: 10000
-------------Round number:  76  -------------
selected users: [38, 37, 32, 50, 10, 94, 19, 44, 86, 23]
random features: torch.Size([109, 96, 8, 8]) torch.Size([109])
random features: torch.Size([101, 96, 8, 8]) torch.Size([101])
random features: torch.Size([99, 96, 8, 8]) torch.Size([99])
random features: torch.Size([98, 96, 8, 8]) torch.Size([98])
random features: torch.Size([93, 96, 8, 8]) torch.Size([93])
random features: torch.Size([101, 96, 8, 8]) torch.Size([101])
random features: torch.Size([100, 96, 8, 8]) torch.Size([100])
random features: torch.Size([94, 96, 8, 8]) torch.Size([94])
random features: torch.Size([106, 96, 8, 8]) torch.Size([106])
random features: torch.Size([98, 96, 8, 8]) torch.Size([98])
all data: 999
Local adapation with distilling: 0.0001
training loss: tensor(0.6052) feature loss: tensor(0.2013)
Local adapation with distilling: 0.0001
training loss: tensor(0.6274) feature loss: tensor(0.1898)
Local adapation with distilling: 0.0001
training loss: tensor(0.7556) feature loss: tensor(0.2101)
Local adapation with distilling: 0.0001
training loss: tensor(0.6990) feature loss: tensor(0.2061)
Local adapation with distilling: 0.0001
training loss: tensor(0.7443) feature loss: tensor(0.2006)
Local adapation with distilling: 0.0001
training loss: tensor(0.6586) feature loss: tensor(0.1941)
Local adapation with distilling: 0.0001
training loss: tensor(0.6532) feature loss: tensor(0.1977)
Local adapation with distilling: 0.0001
training loss: tensor(0.8002) feature loss: tensor(0.1988)
Local adapation with distilling: 0.0001
training loss: tensor(0.6375) feature loss: tensor(0.1972)
Local adapation with distilling: 0.0001
training loss: tensor(0.7791) feature loss: tensor(0.2098)
Global Model Acc on global data: 0.4364 length of data: 10000
-------------Round number:  77  -------------
selected users: [5, 93, 41, 96, 16, 42, 81, 91, 50, 58]
random features: torch.Size([102, 96, 8, 8]) torch.Size([102])
random features: torch.Size([104, 96, 8, 8]) torch.Size([104])
random features: torch.Size([95, 96, 8, 8]) torch.Size([95])
random features: torch.Size([102, 96, 8, 8]) torch.Size([102])
random features: torch.Size([106, 96, 8, 8]) torch.Size([106])
random features: torch.Size([95, 96, 8, 8]) torch.Size([95])
random features: torch.Size([102, 96, 8, 8]) torch.Size([102])
random features: torch.Size([105, 96, 8, 8]) torch.Size([105])
random features: torch.Size([98, 96, 8, 8]) torch.Size([98])
random features: torch.Size([101, 96, 8, 8]) torch.Size([101])
all data: 1010
Local adapation with distilling: 0.0001
training loss: tensor(0.8161) feature loss: tensor(0.2436)
Local adapation with distilling: 0.0001
training loss: tensor(0.8372) feature loss: tensor(0.2481)
Local adapation with distilling: 0.0001
training loss: tensor(0.7059) feature loss: tensor(0.2347)
Local adapation with distilling: 0.0001
training loss: tensor(0.9249) feature loss: tensor(0.2400)
Local adapation with distilling: 0.0001
training loss: tensor(0.7127) feature loss: tensor(0.2447)
Local adapation with distilling: 0.0001
training loss: tensor(0.7420) feature loss: tensor(0.2323)
Local adapation with distilling: 0.0001
training loss: tensor(1.0076) feature loss: tensor(0.2439)
Local adapation with distilling: 0.0001
training loss: tensor(0.7351) feature loss: tensor(0.2489)
Local adapation with distilling: 0.0001
training loss: tensor(0.7013) feature loss: tensor(0.2427)
Local adapation with distilling: 0.0001
training loss: tensor(0.7636) feature loss: tensor(0.2330)
Global Model Acc on global data: 0.4453 length of data: 10000
-------------Round number:  78  -------------
selected users: [9, 46, 7, 63, 15, 2, 74, 31, 5, 36]
random features: torch.Size([102, 96, 8, 8]) torch.Size([102])
random features: torch.Size([103, 96, 8, 8]) torch.Size([103])
random features: torch.Size([95, 96, 8, 8]) torch.Size([95])
random features: torch.Size([101, 96, 8, 8]) torch.Size([101])
random features: torch.Size([103, 96, 8, 8]) torch.Size([103])
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([97, 96, 8, 8]) torch.Size([97])
random features: torch.Size([102, 96, 8, 8]) torch.Size([102])
random features: torch.Size([101, 96, 8, 8]) torch.Size([101])
all data: 996
Local adapation with distilling: 0.0001
training loss: tensor(0.8340) feature loss: tensor(0.2274)
Local adapation with distilling: 0.0001
training loss: tensor(0.7585) feature loss: tensor(0.2375)
Local adapation with distilling: 0.0001
training loss: tensor(0.7523) feature loss: tensor(0.2296)
Local adapation with distilling: 0.0001
training loss: tensor(0.7185) feature loss: tensor(0.2221)
Local adapation with distilling: 0.0001
training loss: tensor(1.0151) feature loss: tensor(0.2322)
Local adapation with distilling: 0.0001
training loss: tensor(0.7287) feature loss: tensor(0.2165)
Local adapation with distilling: 0.0001
training loss: tensor(0.7663) feature loss: tensor(0.2177)
Local adapation with distilling: 0.0001
training loss: tensor(0.8169) feature loss: tensor(0.2265)
Local adapation with distilling: 0.0001
training loss: tensor(0.7782) feature loss: tensor(0.2301)
Local adapation with distilling: 0.0001
training loss: tensor(0.7304) feature loss: tensor(0.2208)
Global Model Acc on global data: 0.4533 length of data: 10000
-------------Round number:  79  -------------
selected users: [68, 18, 86, 60, 56, 32, 30, 24, 45, 92]
random features: torch.Size([103, 96, 8, 8]) torch.Size([103])
random features: torch.Size([99, 96, 8, 8]) torch.Size([99])
random features: torch.Size([106, 96, 8, 8]) torch.Size([106])
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([110, 96, 8, 8]) torch.Size([110])
random features: torch.Size([99, 96, 8, 8]) torch.Size([99])
random features: torch.Size([95, 96, 8, 8]) torch.Size([95])
random features: torch.Size([98, 96, 8, 8]) torch.Size([98])
random features: torch.Size([100, 96, 8, 8]) torch.Size([100])
random features: torch.Size([93, 96, 8, 8]) torch.Size([93])
all data: 999
Local adapation with distilling: 0.0001
training loss: tensor(0.6573) feature loss: tensor(0.2034)
Local adapation with distilling: 0.0001
training loss: tensor(0.7684) feature loss: tensor(0.2051)
Local adapation with distilling: 0.0001
training loss: tensor(0.6122) feature loss: tensor(0.2062)
Local adapation with distilling: 0.0001
training loss: tensor(0.6539) feature loss: tensor(0.2116)
Local adapation with distilling: 0.0001
training loss: tensor(0.6433) feature loss: tensor(0.2059)
Local adapation with distilling: 0.0001
training loss: tensor(0.7504) feature loss: tensor(0.2132)
Local adapation with distilling: 0.0001
training loss: tensor(0.7184) feature loss: tensor(0.2046)
Local adapation with distilling: 0.0001
training loss: tensor(0.6827) feature loss: tensor(0.2036)
Local adapation with distilling: 0.0001
training loss: tensor(0.6515) feature loss: tensor(0.2129)
Local adapation with distilling: 0.0001
training loss: tensor(0.7556) feature loss: tensor(0.2072)
Global Model Acc on global data: 0.4638 length of data: 10000
-------------Round number:  80  -------------
selected users: [37, 65, 95, 53, 66, 30, 73, 85, 45, 36]
random features: torch.Size([101, 96, 8, 8]) torch.Size([101])
random features: torch.Size([99, 96, 8, 8]) torch.Size([99])
random features: torch.Size([100, 96, 8, 8]) torch.Size([100])
random features: torch.Size([115, 96, 8, 8]) torch.Size([115])
random features: torch.Size([108, 96, 8, 8]) torch.Size([108])
random features: torch.Size([95, 96, 8, 8]) torch.Size([95])
random features: torch.Size([104, 96, 8, 8]) torch.Size([104])
random features: torch.Size([100, 96, 8, 8]) torch.Size([100])
random features: torch.Size([100, 96, 8, 8]) torch.Size([100])
random features: torch.Size([101, 96, 8, 8]) torch.Size([101])
all data: 1023
Local adapation with distilling: 0.0001
training loss: tensor(0.6636) feature loss: tensor(0.2277)
Local adapation with distilling: 0.0001
training loss: tensor(0.7275) feature loss: tensor(0.2317)
Local adapation with distilling: 0.0001
training loss: tensor(0.6820) feature loss: tensor(0.2318)
Local adapation with distilling: 0.0001
training loss: tensor(0.6596) feature loss: tensor(0.2362)
Local adapation with distilling: 0.0001
training loss: tensor(0.7476) feature loss: tensor(0.2341)
Local adapation with distilling: 0.0001
training loss: tensor(0.6892) feature loss: tensor(0.2124)
Local adapation with distilling: 0.0001
training loss: tensor(0.7164) feature loss: tensor(0.2342)
Local adapation with distilling: 0.0001
training loss: tensor(0.6932) feature loss: tensor(0.2292)
Local adapation with distilling: 0.0001
training loss: tensor(0.6400) feature loss: tensor(0.2284)
Local adapation with distilling: 0.0001
training loss: tensor(0.6473) feature loss: tensor(0.2224)
Global Model Acc on global data: 0.4812 length of data: 10000
save a model
-------------Round number:  81  -------------
selected users: [73, 89, 41, 78, 51, 21, 30, 69, 8, 5]
random features: torch.Size([104, 96, 8, 8]) torch.Size([104])
random features: torch.Size([108, 96, 8, 8]) torch.Size([108])
random features: torch.Size([95, 96, 8, 8]) torch.Size([95])
random features: torch.Size([104, 96, 8, 8]) torch.Size([104])
random features: torch.Size([97, 96, 8, 8]) torch.Size([97])
random features: torch.Size([94, 96, 8, 8]) torch.Size([94])
random features: torch.Size([95, 96, 8, 8]) torch.Size([95])
random features: torch.Size([98, 96, 8, 8]) torch.Size([98])
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([102, 96, 8, 8]) torch.Size([102])
all data: 993
Local adapation with distilling: 0.0001
training loss: tensor(0.6192) feature loss: tensor(0.1956)
Local adapation with distilling: 0.0001
training loss: tensor(0.6470) feature loss: tensor(0.1971)
Local adapation with distilling: 0.0001
training loss: tensor(0.6411) feature loss: tensor(0.1955)
Local adapation with distilling: 0.0001
training loss: tensor(0.6730) feature loss: tensor(0.1991)
Local adapation with distilling: 0.0001
training loss: tensor(0.7229) feature loss: tensor(0.1986)
Local adapation with distilling: 0.0001
training loss: tensor(0.7034) feature loss: tensor(0.1917)
Local adapation with distilling: 0.0001
training loss: tensor(0.6427) feature loss: tensor(0.1925)
Local adapation with distilling: 0.0001
training loss: tensor(0.6493) feature loss: tensor(0.1886)
Local adapation with distilling: 0.0001
training loss: tensor(0.6549) feature loss: tensor(0.1985)
Local adapation with distilling: 0.0001
training loss: tensor(0.6988) feature loss: tensor(0.1906)
Global Model Acc on global data: 0.4482 length of data: 10000
-------------Round number:  82  -------------
selected users: [72, 33, 58, 2, 55, 84, 54, 75, 28, 40]
random features: torch.Size([115, 96, 8, 8]) torch.Size([115])
random features: torch.Size([97, 96, 8, 8]) torch.Size([97])
random features: torch.Size([101, 96, 8, 8]) torch.Size([101])
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([104, 96, 8, 8]) torch.Size([104])
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([102, 96, 8, 8]) torch.Size([102])
random features: torch.Size([92, 96, 8, 8]) torch.Size([92])
all data: 995
Local adapation with distilling: 0.0001
training loss: tensor(0.7213) feature loss: tensor(0.2317)
Local adapation with distilling: 0.0001
training loss: tensor(0.7291) feature loss: tensor(0.2224)
Local adapation with distilling: 0.0001
training loss: tensor(0.7335) feature loss: tensor(0.2276)
Local adapation with distilling: 0.0001
training loss: tensor(0.7107) feature loss: tensor(0.2240)
Local adapation with distilling: 0.0001
training loss: tensor(0.7916) feature loss: tensor(0.2325)
Local adapation with distilling: 0.0001
training loss: tensor(0.7828) feature loss: tensor(0.2218)
Local adapation with distilling: 0.0001
training loss: tensor(0.8931) feature loss: tensor(0.2314)
Local adapation with distilling: 0.0001
training loss: tensor(0.7644) feature loss: tensor(0.2304)
Local adapation with distilling: 0.0001
training loss: tensor(0.8339) feature loss: tensor(0.2312)
Local adapation with distilling: 0.0001
training loss: tensor(0.7603) feature loss: tensor(0.2179)
Global Model Acc on global data: 0.3922 length of data: 10000
-------------Round number:  83  -------------
selected users: [6, 65, 95, 84, 61, 12, 30, 69, 35, 1]
random features: torch.Size([104, 96, 8, 8]) torch.Size([104])
random features: torch.Size([99, 96, 8, 8]) torch.Size([99])
random features: torch.Size([100, 96, 8, 8]) torch.Size([100])
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([101, 96, 8, 8]) torch.Size([101])
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([95, 96, 8, 8]) torch.Size([95])
random features: torch.Size([98, 96, 8, 8]) torch.Size([98])
random features: torch.Size([106, 96, 8, 8]) torch.Size([106])
random features: torch.Size([104, 96, 8, 8]) torch.Size([104])
all data: 999
Local adapation with distilling: 0.0001
training loss: tensor(0.8419) feature loss: tensor(0.2674)
Local adapation with distilling: 0.0001
training loss: tensor(0.7674) feature loss: tensor(0.2501)
Local adapation with distilling: 0.0001
training loss: tensor(0.7472) feature loss: tensor(0.2572)
Local adapation with distilling: 0.0001
training loss: tensor(0.7710) feature loss: tensor(0.2605)
Local adapation with distilling: 0.0001
training loss: tensor(0.8210) feature loss: tensor(0.2529)
Local adapation with distilling: 0.0001
training loss: tensor(0.8180) feature loss: tensor(0.2556)
Local adapation with distilling: 0.0001
training loss: tensor(0.7340) feature loss: tensor(0.2516)
Local adapation with distilling: 0.0001
training loss: tensor(0.7418) feature loss: tensor(0.2565)
Local adapation with distilling: 0.0001
training loss: tensor(0.8869) feature loss: tensor(0.2610)
Local adapation with distilling: 0.0001
training loss: tensor(0.8288) feature loss: tensor(0.2693)
Global Model Acc on global data: 0.4379 length of data: 10000
-------------Round number:  84  -------------
selected users: [94, 55, 80, 1, 90, 11, 32, 8, 6, 82]
random features: torch.Size([101, 96, 8, 8]) torch.Size([101])
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([104, 96, 8, 8]) torch.Size([104])
random features: torch.Size([95, 96, 8, 8]) torch.Size([95])
random features: torch.Size([106, 96, 8, 8]) torch.Size([106])
random features: torch.Size([99, 96, 8, 8]) torch.Size([99])
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([104, 96, 8, 8]) torch.Size([104])
random features: torch.Size([92, 96, 8, 8]) torch.Size([92])
all data: 989
Local adapation with distilling: 0.0001
training loss: tensor(0.7924) feature loss: tensor(0.2493)
Local adapation with distilling: 0.0001
training loss: tensor(0.7199) feature loss: tensor(0.2334)
Local adapation with distilling: 0.0001
training loss: tensor(0.7180) feature loss: tensor(0.2428)
Local adapation with distilling: 0.0001
training loss: tensor(0.7701) feature loss: tensor(0.2414)
Local adapation with distilling: 0.0001
training loss: tensor(0.7748) feature loss: tensor(0.2542)
Local adapation with distilling: 0.0001
training loss: tensor(0.7607) feature loss: tensor(0.2417)
Local adapation with distilling: 0.0001
training loss: tensor(0.7882) feature loss: tensor(0.2480)
Local adapation with distilling: 0.0001
training loss: tensor(0.7098) feature loss: tensor(0.2410)
Local adapation with distilling: 0.0001
training loss: tensor(0.7543) feature loss: tensor(0.2487)
Local adapation with distilling: 0.0001
training loss: tensor(0.7689) feature loss: tensor(0.2433)
Global Model Acc on global data: 0.4378 length of data: 10000
-------------Round number:  85  -------------
selected users: [81, 25, 40, 87, 41, 23, 10, 89, 50, 54]
random features: torch.Size([102, 96, 8, 8]) torch.Size([102])
random features: torch.Size([100, 96, 8, 8]) torch.Size([100])
random features: torch.Size([92, 96, 8, 8]) torch.Size([92])
random features: torch.Size([95, 96, 8, 8]) torch.Size([95])
random features: torch.Size([95, 96, 8, 8]) torch.Size([95])
random features: torch.Size([98, 96, 8, 8]) torch.Size([98])
random features: torch.Size([93, 96, 8, 8]) torch.Size([93])
random features: torch.Size([108, 96, 8, 8]) torch.Size([108])
random features: torch.Size([98, 96, 8, 8]) torch.Size([98])
random features: torch.Size([104, 96, 8, 8]) torch.Size([104])
all data: 985
Local adapation with distilling: 0.0001
training loss: tensor(0.8931) feature loss: tensor(0.1736)
Local adapation with distilling: 0.0001
training loss: tensor(0.6428) feature loss: tensor(0.1809)
Local adapation with distilling: 0.0001
training loss: tensor(0.6657) feature loss: tensor(0.1720)
Local adapation with distilling: 0.0001
training loss: tensor(0.6556) feature loss: tensor(0.1807)
Local adapation with distilling: 0.0001
training loss: tensor(0.5765) feature loss: tensor(0.1729)
Local adapation with distilling: 0.0001
training loss: tensor(0.6902) feature loss: tensor(0.1840)
Local adapation with distilling: 0.0001
training loss: tensor(0.6430) feature loss: tensor(0.1766)
Local adapation with distilling: 0.0001
training loss: tensor(0.6107) feature loss: tensor(0.1886)
Local adapation with distilling: 0.0001
training loss: tensor(0.5933) feature loss: tensor(0.1816)
Local adapation with distilling: 0.0001
training loss: tensor(0.7092) feature loss: tensor(0.1908)
Global Model Acc on global data: 0.4426 length of data: 10000
-------------Round number:  86  -------------
selected users: [69, 74, 34, 68, 42, 0, 32, 88, 8, 3]
random features: torch.Size([98, 96, 8, 8]) torch.Size([98])
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([95, 96, 8, 8]) torch.Size([95])
random features: torch.Size([103, 96, 8, 8]) torch.Size([103])
random features: torch.Size([95, 96, 8, 8]) torch.Size([95])
random features: torch.Size([99, 96, 8, 8]) torch.Size([99])
random features: torch.Size([99, 96, 8, 8]) torch.Size([99])
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([106, 96, 8, 8]) torch.Size([106])
all data: 983
Local adapation with distilling: 0.0001
training loss: tensor(0.7016) feature loss: tensor(0.2499)
Local adapation with distilling: 0.0001
training loss: tensor(0.7270) feature loss: tensor(0.2563)
Local adapation with distilling: 0.0001
training loss: tensor(0.7005) feature loss: tensor(0.2477)
Local adapation with distilling: 0.0001
training loss: tensor(0.8212) feature loss: tensor(0.2521)
Local adapation with distilling: 0.0001
training loss: tensor(0.7779) feature loss: tensor(0.2548)
Local adapation with distilling: 0.0001
training loss: tensor(0.7547) feature loss: tensor(0.2454)
Local adapation with distilling: 0.0001
training loss: tensor(0.7249) feature loss: tensor(0.2532)
Local adapation with distilling: 0.0001
training loss: tensor(0.7188) feature loss: tensor(0.2533)
Local adapation with distilling: 0.0001
training loss: tensor(0.6541) feature loss: tensor(0.2539)
Local adapation with distilling: 0.0001
training loss: tensor(0.7995) feature loss: tensor(0.2550)
Global Model Acc on global data: 0.4271 length of data: 10000
-------------Round number:  87  -------------
selected users: [16, 81, 85, 32, 39, 25, 26, 29, 65, 7]
random features: torch.Size([106, 96, 8, 8]) torch.Size([106])
random features: torch.Size([102, 96, 8, 8]) torch.Size([102])
random features: torch.Size([100, 96, 8, 8]) torch.Size([100])
random features: torch.Size([99, 96, 8, 8]) torch.Size([99])
random features: torch.Size([103, 96, 8, 8]) torch.Size([103])
random features: torch.Size([100, 96, 8, 8]) torch.Size([100])
random features: torch.Size([105, 96, 8, 8]) torch.Size([105])
random features: torch.Size([109, 96, 8, 8]) torch.Size([109])
random features: torch.Size([99, 96, 8, 8]) torch.Size([99])
random features: torch.Size([95, 96, 8, 8]) torch.Size([95])
all data: 1018
Local adapation with distilling: 0.0001
training loss: tensor(0.7518) feature loss: tensor(0.2720)
Local adapation with distilling: 0.0001
training loss: tensor(0.9517) feature loss: tensor(0.2633)
Local adapation with distilling: 0.0001
training loss: tensor(0.7355) feature loss: tensor(0.2613)
Local adapation with distilling: 0.0001
training loss: tensor(0.7152) feature loss: tensor(0.2682)
Local adapation with distilling: 0.0001
training loss: tensor(0.8126) feature loss: tensor(0.2729)
Local adapation with distilling: 0.0001
training loss: tensor(0.7545) feature loss: tensor(0.2676)
Local adapation with distilling: 0.0001
training loss: tensor(0.7038) feature loss: tensor(0.2660)
Local adapation with distilling: 0.0001
training loss: tensor(0.6944) feature loss: tensor(0.2722)
Local adapation with distilling: 0.0001
training loss: tensor(0.7466) feature loss: tensor(0.2709)
Local adapation with distilling: 0.0001
training loss: tensor(0.7619) feature loss: tensor(0.2567)
Global Model Acc on global data: 0.4232 length of data: 10000
-------------Round number:  88  -------------
selected users: [95, 53, 43, 84, 2, 74, 55, 31, 54, 97]
random features: torch.Size([100, 96, 8, 8]) torch.Size([100])
random features: torch.Size([115, 96, 8, 8]) torch.Size([115])
random features: torch.Size([98, 96, 8, 8]) torch.Size([98])
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([97, 96, 8, 8]) torch.Size([97])
random features: torch.Size([104, 96, 8, 8]) torch.Size([104])
random features: torch.Size([95, 96, 8, 8]) torch.Size([95])
all data: 993
Local adapation with distilling: 0.0001
training loss: tensor(0.6807) feature loss: tensor(0.2686)
Local adapation with distilling: 0.0001
training loss: tensor(0.6612) feature loss: tensor(0.2623)
Local adapation with distilling: 0.0001
training loss: tensor(0.6982) feature loss: tensor(0.2588)
Local adapation with distilling: 0.0001
training loss: tensor(0.7129) feature loss: tensor(0.2659)
Local adapation with distilling: 0.0001
training loss: tensor(0.6962) feature loss: tensor(0.2677)
Local adapation with distilling: 0.0001
training loss: tensor(0.6977) feature loss: tensor(0.2625)
Local adapation with distilling: 0.0001
training loss: tensor(0.6991) feature loss: tensor(0.2618)
Local adapation with distilling: 0.0001
training loss: tensor(0.7743) feature loss: tensor(0.2569)
Local adapation with distilling: 0.0001
training loss: tensor(0.7705) feature loss: tensor(0.2685)
Local adapation with distilling: 0.0001
training loss: tensor(0.7625) feature loss: tensor(0.2658)
Global Model Acc on global data: 0.4737 length of data: 10000
-------------Round number:  89  -------------
selected users: [65, 21, 87, 6, 46, 74, 44, 60, 72, 5]
random features: torch.Size([99, 96, 8, 8]) torch.Size([99])
random features: torch.Size([94, 96, 8, 8]) torch.Size([94])
random features: torch.Size([95, 96, 8, 8]) torch.Size([95])
random features: torch.Size([104, 96, 8, 8]) torch.Size([104])
random features: torch.Size([103, 96, 8, 8]) torch.Size([103])
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([94, 96, 8, 8]) torch.Size([94])
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([115, 96, 8, 8]) torch.Size([115])
random features: torch.Size([102, 96, 8, 8]) torch.Size([102])
all data: 998
Local adapation with distilling: 0.0001
training loss: tensor(0.5660) feature loss: tensor(0.1745)
Local adapation with distilling: 0.0001
training loss: tensor(0.6018) feature loss: tensor(0.1723)
Local adapation with distilling: 0.0001
training loss: tensor(0.6207) feature loss: tensor(0.1717)
Local adapation with distilling: 0.0001
training loss: tensor(0.6102) feature loss: tensor(0.1768)
Local adapation with distilling: 0.0001
training loss: tensor(0.5987) feature loss: tensor(0.1808)
Local adapation with distilling: 0.0001
training loss: tensor(0.5504) feature loss: tensor(0.1711)
Local adapation with distilling: 0.0001
training loss: tensor(0.6708) feature loss: tensor(0.1674)
Local adapation with distilling: 0.0001
training loss: tensor(0.5931) feature loss: tensor(0.1667)
Local adapation with distilling: 0.0001
training loss: tensor(0.5968) feature loss: tensor(0.1806)
Local adapation with distilling: 0.0001
training loss: tensor(0.6658) feature loss: tensor(0.1733)
Global Model Acc on global data: 0.4514 length of data: 10000
-------------Round number:  90  -------------
selected users: [25, 85, 96, 89, 65, 94, 5, 35, 36, 92]
random features: torch.Size([100, 96, 8, 8]) torch.Size([100])
random features: torch.Size([100, 96, 8, 8]) torch.Size([100])
random features: torch.Size([102, 96, 8, 8]) torch.Size([102])
random features: torch.Size([108, 96, 8, 8]) torch.Size([108])
random features: torch.Size([99, 96, 8, 8]) torch.Size([99])
random features: torch.Size([101, 96, 8, 8]) torch.Size([101])
random features: torch.Size([102, 96, 8, 8]) torch.Size([102])
random features: torch.Size([106, 96, 8, 8]) torch.Size([106])
random features: torch.Size([101, 96, 8, 8]) torch.Size([101])
random features: torch.Size([93, 96, 8, 8]) torch.Size([93])
all data: 1012
Local adapation with distilling: 0.0001
training loss: tensor(0.5931) feature loss: tensor(0.1770)
Local adapation with distilling: 0.0001
training loss: tensor(0.5700) feature loss: tensor(0.1778)
Local adapation with distilling: 0.0001
training loss: tensor(0.8097) feature loss: tensor(0.1750)
Local adapation with distilling: 0.0001
training loss: tensor(0.5789) feature loss: tensor(0.1828)
Local adapation with distilling: 0.0001
training loss: tensor(0.5490) feature loss: tensor(0.1758)
Local adapation with distilling: 0.0001
training loss: tensor(0.6259) feature loss: tensor(0.1758)
Local adapation with distilling: 0.0001
training loss: tensor(0.5942) feature loss: tensor(0.1763)
Local adapation with distilling: 0.0001
training loss: tensor(0.6791) feature loss: tensor(0.1858)
Local adapation with distilling: 0.0001
training loss: tensor(0.5980) feature loss: tensor(0.1770)
Local adapation with distilling: 0.0001
training loss: tensor(0.6692) feature loss: tensor(0.1680)
Global Model Acc on global data: 0.4612 length of data: 10000
-------------Round number:  91  -------------
selected users: [75, 25, 3, 52, 78, 54, 59, 26, 62, 97]
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([100, 96, 8, 8]) torch.Size([100])
random features: torch.Size([106, 96, 8, 8]) torch.Size([106])
random features: torch.Size([102, 96, 8, 8]) torch.Size([102])
random features: torch.Size([104, 96, 8, 8]) torch.Size([104])
random features: torch.Size([104, 96, 8, 8]) torch.Size([104])
random features: torch.Size([103, 96, 8, 8]) torch.Size([103])
random features: torch.Size([105, 96, 8, 8]) torch.Size([105])
random features: torch.Size([93, 96, 8, 8]) torch.Size([93])
random features: torch.Size([95, 96, 8, 8]) torch.Size([95])
all data: 1008
Local adapation with distilling: 0.0001
training loss: tensor(0.6701) feature loss: tensor(0.1886)
Local adapation with distilling: 0.0001
training loss: tensor(0.5974) feature loss: tensor(0.1882)
Local adapation with distilling: 0.0001
training loss: tensor(0.6789) feature loss: tensor(0.1993)
Local adapation with distilling: 0.0001
training loss: tensor(0.7198) feature loss: tensor(0.1974)
Local adapation with distilling: 0.0001
training loss: tensor(0.6712) feature loss: tensor(0.1929)
Local adapation with distilling: 0.0001
training loss: tensor(0.6655) feature loss: tensor(0.1983)
Local adapation with distilling: 0.0001
training loss: tensor(0.7798) feature loss: tensor(0.1933)
Local adapation with distilling: 0.0001
training loss: tensor(0.6240) feature loss: tensor(0.1886)
Local adapation with distilling: 0.0001
training loss: tensor(0.7419) feature loss: tensor(0.2005)
Local adapation with distilling: 0.0001
training loss: tensor(0.6684) feature loss: tensor(0.1958)
Global Model Acc on global data: 0.4606 length of data: 10000
-------------Round number:  92  -------------
selected users: [25, 99, 73, 61, 66, 36, 23, 83, 77, 6]
random features: torch.Size([100, 96, 8, 8]) torch.Size([100])
random features: torch.Size([93, 96, 8, 8]) torch.Size([93])
random features: torch.Size([104, 96, 8, 8]) torch.Size([104])
random features: torch.Size([101, 96, 8, 8]) torch.Size([101])
random features: torch.Size([108, 96, 8, 8]) torch.Size([108])
random features: torch.Size([101, 96, 8, 8]) torch.Size([101])
random features: torch.Size([98, 96, 8, 8]) torch.Size([98])
random features: torch.Size([101, 96, 8, 8]) torch.Size([101])
random features: torch.Size([92, 96, 8, 8]) torch.Size([92])
random features: torch.Size([104, 96, 8, 8]) torch.Size([104])
all data: 1002
Local adapation with distilling: 0.0001
training loss: tensor(0.6521) feature loss: tensor(0.1880)
Local adapation with distilling: 0.0001
training loss: tensor(0.7683) feature loss: tensor(0.1932)
Local adapation with distilling: 0.0001
training loss: tensor(0.6926) feature loss: tensor(0.1977)
Local adapation with distilling: 0.0001
training loss: tensor(0.7295) feature loss: tensor(0.1929)
Local adapation with distilling: 0.0001
training loss: tensor(0.7323) feature loss: tensor(0.2005)
Local adapation with distilling: 0.0001
training loss: tensor(0.6728) feature loss: tensor(0.1952)
Local adapation with distilling: 0.0001
training loss: tensor(0.7593) feature loss: tensor(0.1894)
Local adapation with distilling: 0.0001
training loss: tensor(0.7707) feature loss: tensor(0.1954)
Local adapation with distilling: 0.0001
training loss: tensor(0.8490) feature loss: tensor(0.1842)
Local adapation with distilling: 0.0001
training loss: tensor(0.6822) feature loss: tensor(0.1974)
Global Model Acc on global data: 0.462 length of data: 10000
-------------Round number:  93  -------------
selected users: [75, 82, 56, 27, 42, 35, 1, 97, 66, 61]
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([92, 96, 8, 8]) torch.Size([92])
random features: torch.Size([110, 96, 8, 8]) torch.Size([110])
random features: torch.Size([97, 96, 8, 8]) torch.Size([97])
random features: torch.Size([95, 96, 8, 8]) torch.Size([95])
random features: torch.Size([106, 96, 8, 8]) torch.Size([106])
random features: torch.Size([104, 96, 8, 8]) torch.Size([104])
random features: torch.Size([95, 96, 8, 8]) torch.Size([95])
random features: torch.Size([108, 96, 8, 8]) torch.Size([108])
random features: torch.Size([101, 96, 8, 8]) torch.Size([101])
all data: 1004
Local adapation with distilling: 0.0001
training loss: tensor(0.6683) feature loss: tensor(0.2208)
Local adapation with distilling: 0.0001
training loss: tensor(0.7049) feature loss: tensor(0.2222)
Local adapation with distilling: 0.0001
training loss: tensor(0.6614) feature loss: tensor(0.2264)
Local adapation with distilling: 0.0001
training loss: tensor(0.8157) feature loss: tensor(0.2197)
Local adapation with distilling: 0.0001
training loss: tensor(0.7288) feature loss: tensor(0.2219)
Local adapation with distilling: 0.0001
training loss: tensor(0.6772) feature loss: tensor(0.2297)
Local adapation with distilling: 0.0001
training loss: tensor(0.7014) feature loss: tensor(0.2249)
Local adapation with distilling: 0.0001
training loss: tensor(0.6706) feature loss: tensor(0.2207)
Local adapation with distilling: 0.0001
training loss: tensor(0.6519) feature loss: tensor(0.2211)
Local adapation with distilling: 0.0001
training loss: tensor(0.6575) feature loss: tensor(0.2229)
Global Model Acc on global data: 0.4766 length of data: 10000
-------------Round number:  94  -------------
selected users: [13, 73, 5, 18, 99, 48, 23, 4, 35, 17]
random features: torch.Size([101, 96, 8, 8]) torch.Size([101])
random features: torch.Size([104, 96, 8, 8]) torch.Size([104])
random features: torch.Size([102, 96, 8, 8]) torch.Size([102])
random features: torch.Size([99, 96, 8, 8]) torch.Size([99])
random features: torch.Size([93, 96, 8, 8]) torch.Size([93])
random features: torch.Size([95, 96, 8, 8]) torch.Size([95])
random features: torch.Size([98, 96, 8, 8]) torch.Size([98])
random features: torch.Size([98, 96, 8, 8]) torch.Size([98])
random features: torch.Size([106, 96, 8, 8]) torch.Size([106])
random features: torch.Size([107, 96, 8, 8]) torch.Size([107])
all data: 1003
Local adapation with distilling: 0.0001
training loss: tensor(0.6727) feature loss: tensor(0.1822)
Local adapation with distilling: 0.0001
training loss: tensor(0.6166) feature loss: tensor(0.1913)
Local adapation with distilling: 0.0001
training loss: tensor(0.6387) feature loss: tensor(0.1872)
Local adapation with distilling: 0.0001
training loss: tensor(0.7707) feature loss: tensor(0.1816)
Local adapation with distilling: 0.0001
training loss: tensor(0.6549) feature loss: tensor(0.1826)
Local adapation with distilling: 0.0001
training loss: tensor(0.7636) feature loss: tensor(0.1774)
Local adapation with distilling: 0.0001
training loss: tensor(0.6497) feature loss: tensor(0.1850)
Local adapation with distilling: 0.0001
training loss: tensor(0.6975) feature loss: tensor(0.1865)
Local adapation with distilling: 0.0001
training loss: tensor(0.5837) feature loss: tensor(0.1901)
Local adapation with distilling: 0.0001
training loss: tensor(0.6217) feature loss: tensor(0.1918)
Global Model Acc on global data: 0.4683 length of data: 10000
-------------Round number:  95  -------------
selected users: [88, 9, 1, 60, 95, 26, 45, 71, 44, 21]
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([102, 96, 8, 8]) torch.Size([102])
random features: torch.Size([104, 96, 8, 8]) torch.Size([104])
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([100, 96, 8, 8]) torch.Size([100])
random features: torch.Size([105, 96, 8, 8]) torch.Size([105])
random features: torch.Size([100, 96, 8, 8]) torch.Size([100])
random features: torch.Size([101, 96, 8, 8]) torch.Size([101])
random features: torch.Size([94, 96, 8, 8]) torch.Size([94])
random features: torch.Size([94, 96, 8, 8]) torch.Size([94])
all data: 992
Local adapation with distilling: 0.0001
training loss: tensor(0.5402) feature loss: tensor(0.1858)
Local adapation with distilling: 0.0001
training loss: tensor(0.7100) feature loss: tensor(0.1918)
Local adapation with distilling: 0.0001
training loss: tensor(0.5437) feature loss: tensor(0.1977)
Local adapation with distilling: 0.0001
training loss: tensor(0.5499) feature loss: tensor(0.1941)
Local adapation with distilling: 0.0001
training loss: tensor(0.5295) feature loss: tensor(0.1924)
Local adapation with distilling: 0.0001
training loss: tensor(0.5354) feature loss: tensor(0.1888)
Local adapation with distilling: 0.0001
training loss: tensor(0.5473) feature loss: tensor(0.1951)
Local adapation with distilling: 0.0001
training loss: tensor(0.5406) feature loss: tensor(0.1916)
Local adapation with distilling: 0.0001
training loss: tensor(0.6276) feature loss: tensor(0.1935)
Local adapation with distilling: 0.0001
training loss: tensor(0.5380) feature loss: tensor(0.1904)
Global Model Acc on global data: 0.4522 length of data: 10000
-------------Round number:  96  -------------
selected users: [41, 28, 52, 15, 87, 17, 75, 42, 45, 49]
random features: torch.Size([95, 96, 8, 8]) torch.Size([95])
random features: torch.Size([102, 96, 8, 8]) torch.Size([102])
random features: torch.Size([102, 96, 8, 8]) torch.Size([102])
random features: torch.Size([103, 96, 8, 8]) torch.Size([103])
random features: torch.Size([95, 96, 8, 8]) torch.Size([95])
random features: torch.Size([107, 96, 8, 8]) torch.Size([107])
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([95, 96, 8, 8]) torch.Size([95])
random features: torch.Size([100, 96, 8, 8]) torch.Size([100])
random features: torch.Size([99, 96, 8, 8]) torch.Size([99])
all data: 994
Local adapation with distilling: 0.0001
training loss: tensor(0.6635) feature loss: tensor(0.2214)
Local adapation with distilling: 0.0001
training loss: tensor(0.7467) feature loss: tensor(0.2334)
Local adapation with distilling: 0.0001
training loss: tensor(0.9517) feature loss: tensor(0.2288)
Local adapation with distilling: 0.0001
training loss: tensor(0.7176) feature loss: tensor(0.2289)
Local adapation with distilling: 0.0001
training loss: tensor(0.7393) feature loss: tensor(0.2346)
Local adapation with distilling: 0.0001
training loss: tensor(0.6575) feature loss: tensor(0.2337)
Local adapation with distilling: 0.0001
training loss: tensor(0.6580) feature loss: tensor(0.2258)
Local adapation with distilling: 0.0001
training loss: tensor(0.7273) feature loss: tensor(0.2269)
Local adapation with distilling: 0.0001
training loss: tensor(0.6131) feature loss: tensor(0.2231)
Local adapation with distilling: 0.0001
training loss: tensor(0.7126) feature loss: tensor(0.2285)
Global Model Acc on global data: 0.4769 length of data: 10000
-------------Round number:  97  -------------
selected users: [31, 43, 64, 56, 85, 2, 70, 21, 34, 50]
random features: torch.Size([97, 96, 8, 8]) torch.Size([97])
random features: torch.Size([98, 96, 8, 8]) torch.Size([98])
random features: torch.Size([98, 96, 8, 8]) torch.Size([98])
random features: torch.Size([110, 96, 8, 8]) torch.Size([110])
random features: torch.Size([100, 96, 8, 8]) torch.Size([100])
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([96, 96, 8, 8]) torch.Size([96])
random features: torch.Size([94, 96, 8, 8]) torch.Size([94])
random features: torch.Size([95, 96, 8, 8]) torch.Size([95])
random features: torch.Size([98, 96, 8, 8]) torch.Size([98])
all data: 982
Local adapation with distilling: 0.0001
training loss: tensor(0.6753) feature loss: tensor(0.1766)
Local adapation with distilling: 0.0001
training loss: tensor(0.5889) feature loss: tensor(0.1772)
Local adapation with distilling: 0.0001
training loss: tensor(0.7385) feature loss: tensor(0.1756)
Local adapation with distilling: 0.0001
training loss: tensor(0.5737) feature loss: tensor(0.1846)
Local adapation with distilling: 0.0001
training loss: tensor(0.5812) feature loss: tensor(0.1767)
Local adapation with distilling: 0.0001
training loss: tensor(0.5923) feature loss: tensor(0.1798)
Local adapation with distilling: 0.0001
training loss: tensor(0.5893) feature loss: tensor(0.1787)
Local adapation with distilling: 0.0001
training loss: tensor(0.5911) feature loss: tensor(0.1846)
Local adapation with distilling: 0.0001
training loss: tensor(0.5953) feature loss: tensor(0.1741)
Local adapation with distilling: 0.0001
training loss: tensor(0.6283) feature loss: tensor(0.1852)
Global Model Acc on global data: 0.4345 length of data: 10000
-------------Round number:  98  -------------
selected users: [11, 48, 97, 14, 22, 36, 99, 47, 33, 81]
random features: torch.Size([106, 96, 8, 8]) torch.Size([106])
random features: torch.Size([95, 96, 8, 8]) torch.Size([95])
random features: torch.Size([95, 96, 8, 8]) torch.Size([95])
random features: torch.Size([99, 96, 8, 8]) torch.Size([99])
random features: torch.Size([102, 96, 8, 8]) torch.Size([102])
random features: torch.Size([101, 96, 8, 8]) torch.Size([101])
random features: torch.Size([93, 96, 8, 8]) torch.Size([93])
random features: torch.Size([93, 96, 8, 8]) torch.Size([93])
random features: torch.Size([97, 96, 8, 8]) torch.Size([97])
random features: torch.Size([102, 96, 8, 8]) torch.Size([102])
all data: 983
Local adapation with distilling: 0.0001
training loss: tensor(0.6872) feature loss: tensor(0.2523)
Local adapation with distilling: 0.0001
training loss: tensor(0.7417) feature loss: tensor(0.2422)
Local adapation with distilling: 0.0001
training loss: tensor(0.7082) feature loss: tensor(0.2543)
Local adapation with distilling: 0.0001
training loss: tensor(0.7494) feature loss: tensor(0.2507)
Local adapation with distilling: 0.0001
training loss: tensor(0.9162) feature loss: tensor(0.2645)
Local adapation with distilling: 0.0001
training loss: tensor(0.6773) feature loss: tensor(0.2459)
Local adapation with distilling: 0.0001
training loss: tensor(0.6899) feature loss: tensor(0.2444)
Local adapation with distilling: 0.0001
Terminated
