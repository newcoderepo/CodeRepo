nohup: ignoring input
================================================================================
Summary of training process:
Dataset                : Cifar10
Batch size             : 64
Learing rate           : 0.001
Number of total clients: 100
Split method           : quantity
Split parameter        : 3.0
Clients per round      : 10
Number of global rounds: 100
Number of local rounds : 10
Feature from layer     : 8
Feature percentage     : 0.2
Local training loss    : CE_CE_KL
Loss of beta           : 1.0
Algorithm              : FedFea
Modelname              : MOBNET
Mode                   : training
Seed                   : 0
================================================================================
Files already downloaded and verified
Files already downloaded and verified
Class frequencies:
client,class0,class1,class2,class3,class4,class5,class6,class7,class8,class9,Amount
Client   0,0.298,0.00,0.00,0.00,0.00,0.375,0.00,0.00,0.327,0.00,496
Client   1,0.00,0.321,0.00,0.00,0.00,0.358,0.00,0.00,0.00,0.321,520
Client   2,0.307,0.346,0.346,0.00,0.00,0.00,0.00,0.00,0.00,0.00,482
Client   3,0.00,0.00,0.00,0.337,0.00,0.00,0.377,0.286,0.00,0.00,531
Client   4,0.00,0.00,0.340,0.00,0.320,0.00,0.00,0.00,0.00,0.340,491
Client   5,0.00,0.00,0.327,0.00,0.308,0.365,0.00,0.00,0.00,0.00,510
Client   6,0.00,0.00,0.319,0.00,0.300,0.00,0.382,0.00,0.00,0.00,524
Client   7,0.00,0.00,0.00,0.00,0.330,0.00,0.00,0.319,0.00,0.351,476
Client   8,0.00,0.347,0.00,0.00,0.00,0.00,0.00,0.316,0.337,0.00,481
Client   9,0.286,0.00,0.00,0.00,0.00,0.00,0.389,0.00,0.00,0.325,514
Client  10,0.315,0.00,0.00,0.00,0.00,0.00,0.00,0.326,0.00,0.358,466
Client  11,0.00,0.313,0.00,0.00,0.00,0.00,0.375,0.00,0.00,0.313,534
Client  12,0.306,0.347,0.347,0.00,0.00,0.00,0.00,0.00,0.00,0.00,481
Client  13,0.00,0.329,0.00,0.352,0.00,0.00,0.00,0.00,0.319,0.00,508
Client  14,0.00,0.00,0.00,0.359,0.315,0.00,0.00,0.00,0.325,0.00,498
Client  15,0.00,0.00,0.00,0.00,0.00,0.361,0.00,0.00,0.315,0.324,515
Client  16,0.00,0.00,0.00,0.337,0.00,0.00,0.377,0.286,0.00,0.00,531
Client  17,0.00,0.00,0.00,0.00,0.00,0.346,0.372,0.283,0.00,0.00,538
Client  18,0.00,0.337,0.00,0.00,0.00,0.00,0.00,0.00,0.327,0.337,496
Client  19,0.00,0.00,0.00,0.356,0.312,0.00,0.00,0.00,0.00,0.332,503
Client  20,0.309,0.351,0.00,0.00,0.00,0.00,0.00,0.00,0.340,0.00,476
Client  21,0.312,0.355,0.00,0.00,0.333,0.00,0.00,0.00,0.00,0.00,471
Client  22,0.00,0.00,0.326,0.349,0.00,0.00,0.00,0.00,0.00,0.326,513
Client  23,0.298,0.00,0.339,0.363,0.00,0.00,0.00,0.00,0.00,0.00,493
Client  24,0.00,0.00,0.340,0.00,0.320,0.00,0.00,0.00,0.00,0.340,491
Client  25,0.00,0.00,0.00,0.00,0.00,0.367,0.00,0.302,0.00,0.331,504
Client  26,0.00,0.00,0.00,0.00,0.00,0.00,0.378,0.00,0.306,0.316,529
Client  27,0.00,0.00,0.00,0.368,0.320,0.00,0.00,0.312,0.00,0.00,487
Client  28,0.00,0.00,0.00,0.00,0.00,0.360,0.00,0.00,0.315,0.325,514
Client  29,0.00,0.00,0.00,0.328,0.00,0.00,0.366,0.00,0.00,0.306,546
Client  30,0.309,0.00,0.352,0.00,0.00,0.00,0.00,0.00,0.339,0.00,475
Client  31,0.00,0.344,0.00,0.00,0.00,0.00,0.00,0.313,0.00,0.344,486
Client  32,0.00,0.00,0.335,0.359,0.00,0.00,0.00,0.305,0.00,0.00,498
Client  33,0.302,0.00,0.00,0.368,0.00,0.00,0.00,0.00,0.331,0.00,487
Client  34,0.00,0.352,0.00,0.00,0.328,0.00,0.00,0.320,0.00,0.00,475
Client  35,0.00,0.315,0.00,0.337,0.00,0.348,0.00,0.00,0.00,0.00,531
Client  36,0.289,0.00,0.00,0.00,0.00,0.00,0.394,0.00,0.317,0.00,508
Client  37,0.00,0.00,0.00,0.00,0.307,0.00,0.394,0.299,0.00,0.00,508
Client  38,0.00,0.00,0.00,0.00,0.00,0.339,0.366,0.00,0.295,0.00,546
Client  39,0.00,0.00,0.322,0.00,0.00,0.356,0.00,0.00,0.00,0.322,519
Client  40,0.320,0.00,0.00,0.00,0.00,0.00,0.00,0.330,0.350,0.00,460
Client  41,0.00,0.352,0.00,0.00,0.328,0.00,0.00,0.320,0.00,0.00,475
Client  42,0.00,0.00,0.352,0.00,0.328,0.00,0.00,0.320,0.00,0.00,475
Client  43,0.298,0.00,0.00,0.363,0.00,0.00,0.00,0.00,0.00,0.339,493
Client  44,0.313,0.00,0.355,0.00,0.332,0.00,0.00,0.00,0.00,0.00,470
Client  45,0.00,0.331,0.00,0.00,0.00,0.367,0.00,0.302,0.00,0.00,504
Client  46,0.00,0.00,0.00,0.00,0.00,0.00,0.385,0.293,0.00,0.322,519
Client  47,0.00,0.00,0.00,0.00,0.333,0.00,0.00,0.323,0.344,0.00,468
Client  48,0.309,0.352,0.00,0.00,0.00,0.00,0.00,0.00,0.339,0.00,475
Client  49,0.00,0.00,0.337,0.00,0.00,0.00,0.00,0.00,0.325,0.337,495
Client  50,0.298,0.339,0.00,0.363,0.00,0.00,0.00,0.00,0.00,0.00,493
Client  51,0.00,0.344,0.344,0.00,0.00,0.00,0.00,0.311,0.00,0.00,485
Client  52,0.286,0.00,0.325,0.00,0.00,0.00,0.389,0.00,0.00,0.00,514
Client  53,0.00,0.00,0.326,0.350,0.00,0.00,0.00,0.00,0.00,0.324,512
Client  54,0.00,0.00,0.319,0.00,0.298,0.00,0.382,0.00,0.00,0.00,523
Client  55,0.304,0.00,0.00,0.00,0.00,0.383,0.00,0.313,0.00,0.00,483
Client  56,0.00,0.303,0.00,0.00,0.00,0.335,0.362,0.00,0.00,0.00,552
Client  57,0.00,0.00,0.00,0.00,0.308,0.00,0.394,0.298,0.00,0.00,507
Client  58,0.289,0.00,0.00,0.00,0.00,0.00,0.394,0.00,0.317,0.00,508
Client  59,0.00,0.322,0.00,0.00,0.00,0.357,0.00,0.00,0.00,0.320,518
Client  60,0.306,0.347,0.347,0.00,0.00,0.00,0.00,0.00,0.00,0.00,481
Client  61,0.00,0.327,0.00,0.00,0.308,0.365,0.00,0.00,0.00,0.00,507
Client  62,0.316,0.00,0.359,0.00,0.00,0.00,0.00,0.325,0.00,0.00,465
Client  63,0.00,0.00,0.00,0.354,0.00,0.00,0.00,0.00,0.318,0.328,506
Client  64,0.00,0.00,0.00,0.00,0.317,0.376,0.00,0.307,0.00,0.00,492
Client  65,0.295,0.00,0.00,0.00,0.00,0.371,0.00,0.00,0.00,0.333,498
Client  66,0.00,0.00,0.00,0.327,0.00,0.00,0.368,0.00,0.00,0.305,544
Client  67,0.00,0.351,0.00,0.00,0.330,0.00,0.00,0.319,0.00,0.00,473
Client  68,0.00,0.00,0.00,0.00,0.302,0.00,0.387,0.00,0.311,0.00,517
Client  69,0.00,0.00,0.337,0.00,0.00,0.00,0.00,0.00,0.327,0.337,493
Client  70,0.304,0.00,0.00,0.00,0.00,0.383,0.00,0.313,0.00,0.00,483
Client  71,0.00,0.327,0.00,0.00,0.308,0.365,0.00,0.00,0.00,0.00,507
Client  72,0.00,0.00,0.324,0.00,0.00,0.361,0.00,0.00,0.314,0.00,512
Client  73,0.00,0.00,0.00,0.340,0.00,0.353,0.00,0.00,0.307,0.00,524
Client  74,0.00,0.344,0.00,0.00,0.323,0.00,0.00,0.00,0.333,0.00,483
Client  75,0.304,0.00,0.00,0.00,0.00,0.383,0.00,0.313,0.00,0.00,483
Client  76,0.00,0.00,0.00,0.333,0.292,0.00,0.375,0.00,0.00,0.00,534
Client  77,0.317,0.00,0.358,0.00,0.00,0.00,0.00,0.325,0.00,0.00,464
Client  78,0.00,0.00,0.00,0.340,0.00,0.353,0.00,0.00,0.307,0.00,524
Client  79,0.00,0.333,0.333,0.00,0.00,0.00,0.00,0.00,0.00,0.333,498
Client  80,0.306,0.00,0.00,0.370,0.324,0.00,0.00,0.00,0.00,0.00,481
Client  81,0.287,0.324,0.00,0.00,0.00,0.00,0.390,0.00,0.00,0.00,513
Client  82,0.317,0.00,0.358,0.00,0.00,0.00,0.00,0.325,0.00,0.00,464
Client  83,0.00,0.00,0.329,0.352,0.00,0.00,0.00,0.00,0.319,0.00,505
Client  84,0.306,0.00,0.00,0.370,0.324,0.00,0.00,0.00,0.00,0.00,481
Client  85,0.00,0.00,0.00,0.00,0.311,0.369,0.00,0.00,0.321,0.00,502
Client  86,0.00,0.00,0.312,0.00,0.00,0.00,0.376,0.00,0.00,0.312,532
Client  87,0.309,0.00,0.00,0.374,0.00,0.00,0.00,0.317,0.00,0.00,476
Client  88,0.00,0.344,0.00,0.00,0.323,0.00,0.00,0.00,0.333,0.00,483
Client  89,0.00,0.00,0.00,0.327,0.00,0.00,0.368,0.00,0.00,0.305,544
Client  90,0.309,0.00,0.00,0.374,0.00,0.00,0.00,0.317,0.00,0.00,476
Client  91,0.00,0.314,0.00,0.336,0.00,0.350,0.00,0.00,0.00,0.00,529
Client  92,0.313,0.00,0.354,0.00,0.333,0.00,0.00,0.00,0.00,0.00,469
Client  93,0.00,0.00,0.00,0.340,0.00,0.353,0.00,0.00,0.307,0.00,524
Client  94,0.00,0.00,0.00,0.00,0.308,0.00,0.394,0.298,0.00,0.00,507
Client  95,0.00,0.331,0.00,0.00,0.00,0.369,0.00,0.301,0.00,0.00,502
Client  96,0.287,0.00,0.324,0.00,0.00,0.00,0.390,0.00,0.00,0.00,513
Client  97,0.00,0.00,0.347,0.00,0.00,0.00,0.00,0.316,0.337,0.00,478
Client  98,0.00,0.344,0.00,0.00,0.323,0.00,0.00,0.00,0.333,0.00,483
Client  99,0.313,0.00,0.00,0.00,0.333,0.00,0.00,0.00,0.00,0.354,469
0 [0 5 8] [0 5 8] [1 2 3 4 6 7 9]
0 training: Counter({5: 186, 8: 162, 0: 148}) testing iid: Counter({8: 1000, 0: 1000, 5: 1000})
1 [1 5 9] [1 5 9] [0 2 3 4 6 7 8]
1 training: Counter({5: 186, 1: 167, 9: 167}) testing iid: Counter({1: 1000, 9: 1000, 5: 1000})
2 [0 1 2] [0 1 2] [3 4 5 6 7 8 9]
2 training: Counter({1: 167, 2: 167, 0: 148}) testing iid: Counter({0: 1000, 1: 1000, 2: 1000})
3 [3 6 7] [3 6 7] [0 1 2 4 5 8 9]
3 training: Counter({6: 200, 3: 179, 7: 152}) testing iid: Counter({3: 1000, 6: 1000, 7: 1000})
4 [2 4 9] [2 4 9] [0 1 3 5 6 7 8]
4 training: Counter({2: 167, 9: 167, 4: 157}) testing iid: Counter({9: 1000, 4: 1000, 2: 1000})
5 [2 4 5] [2 4 5] [0 1 3 6 7 8 9]
5 training: Counter({5: 186, 2: 167, 4: 157}) testing iid: Counter({5: 1000, 4: 1000, 2: 1000})
6 [2 4 6] [2 4 6] [0 1 3 5 7 8 9]
6 training: Counter({6: 200, 2: 167, 4: 157}) testing iid: Counter({6: 1000, 4: 1000, 2: 1000})
7 [4 7 9] [4 7 9] [0 1 2 3 5 6 8]
7 training: Counter({9: 167, 4: 157, 7: 152}) testing iid: Counter({9: 1000, 7: 1000, 4: 1000})
8 [1 7 8] [1 7 8] [0 2 3 4 5 6 9]
8 training: Counter({1: 167, 8: 162, 7: 152}) testing iid: Counter({8: 1000, 1: 1000, 7: 1000})
9 [0 6 9] [0 6 9] [1 2 3 4 5 7 8]
9 training: Counter({6: 200, 9: 167, 0: 147}) testing iid: Counter({0: 1000, 6: 1000, 9: 1000})
10 [0 7 9] [0 7 9] [1 2 3 4 5 6 8]
10 training: Counter({9: 167, 7: 152, 0: 147}) testing iid: Counter({0: 1000, 9: 1000, 7: 1000})
11 [1 6 9] [1 6 9] [0 2 3 4 5 7 8]
11 training: Counter({6: 200, 1: 167, 9: 167}) testing iid: Counter({6: 1000, 1: 1000, 9: 1000})
12 [0 1 2] [0 1 2] [3 4 5 6 7 8 9]
12 training: Counter({1: 167, 2: 167, 0: 147}) testing iid: Counter({0: 1000, 1: 1000, 2: 1000})
13 [1 3 8] [1 3 8] [0 2 4 5 6 7 9]
13 training: Counter({3: 179, 1: 167, 8: 162}) testing iid: Counter({3: 1000, 8: 1000, 1: 1000})
14 [3 4 8] [3 4 8] [0 1 2 5 6 7 9]
14 training: Counter({3: 179, 8: 162, 4: 157}) testing iid: Counter({3: 1000, 8: 1000, 4: 1000})
15 [5 8 9] [5 8 9] [0 1 2 3 4 6 7]
15 training: Counter({5: 186, 9: 167, 8: 162}) testing iid: Counter({8: 1000, 9: 1000, 5: 1000})
16 [3 6 7] [3 6 7] [0 1 2 4 5 8 9]
16 training: Counter({6: 200, 3: 179, 7: 152}) testing iid: Counter({3: 1000, 6: 1000, 7: 1000})
17 [5 6 7] [5 6 7] [0 1 2 3 4 8 9]
17 training: Counter({6: 200, 5: 186, 7: 152}) testing iid: Counter({6: 1000, 5: 1000, 7: 1000})
18 [1 8 9] [1 8 9] [0 2 3 4 5 6 7]
18 training: Counter({1: 167, 9: 167, 8: 162}) testing iid: Counter({8: 1000, 1: 1000, 9: 1000})
19 [3 4 9] [3 4 9] [0 1 2 5 6 7 8]
19 training: Counter({3: 179, 9: 167, 4: 157}) testing iid: Counter({3: 1000, 9: 1000, 4: 1000})
20 [0 1 8] [0 1 8] [2 3 4 5 6 7 9]
20 training: Counter({1: 167, 8: 162, 0: 147}) testing iid: Counter({8: 1000, 0: 1000, 1: 1000})
21 [0 1 4] [0 1 4] [2 3 5 6 7 8 9]
21 training: Counter({1: 167, 4: 157, 0: 147}) testing iid: Counter({0: 1000, 1: 1000, 4: 1000})
22 [2 3 9] [2 3 9] [0 1 4 5 6 7 8]
22 training: Counter({3: 179, 2: 167, 9: 167}) testing iid: Counter({3: 1000, 9: 1000, 2: 1000})
23 [0 2 3] [0 2 3] [1 4 5 6 7 8 9]
23 training: Counter({3: 179, 2: 167, 0: 147}) testing iid: Counter({3: 1000, 0: 1000, 2: 1000})
24 [2 4 9] [2 4 9] [0 1 3 5 6 7 8]
24 training: Counter({2: 167, 9: 167, 4: 157}) testing iid: Counter({9: 1000, 4: 1000, 2: 1000})
25 [5 7 9] [5 7 9] [0 1 2 3 4 6 8]
25 training: Counter({5: 185, 9: 167, 7: 152}) testing iid: Counter({9: 1000, 5: 1000, 7: 1000})
26 [6 8 9] [6 8 9] [0 1 2 3 4 5 7]
26 training: Counter({6: 200, 9: 167, 8: 162}) testing iid: Counter({8: 1000, 6: 1000, 9: 1000})
27 [3 4 7] [3 4 7] [0 1 2 5 6 8 9]
27 training: Counter({3: 179, 4: 156, 7: 152}) testing iid: Counter({3: 1000, 7: 1000, 4: 1000})
28 [5 8 9] [5 8 9] [0 1 2 3 4 6 7]
28 training: Counter({5: 185, 9: 167, 8: 162}) testing iid: Counter({8: 1000, 9: 1000, 5: 1000})
29 [3 6 9] [3 6 9] [0 1 2 4 5 7 8]
29 training: Counter({6: 200, 3: 179, 9: 167}) testing iid: Counter({3: 1000, 6: 1000, 9: 1000})
30 [0 2 8] [0 2 8] [1 3 4 5 6 7 9]
30 training: Counter({2: 167, 8: 161, 0: 147}) testing iid: Counter({8: 1000, 0: 1000, 2: 1000})
31 [1 7 9] [1 7 9] [0 2 3 4 5 6 8]
31 training: Counter({1: 167, 9: 167, 7: 152}) testing iid: Counter({1: 1000, 9: 1000, 7: 1000})
32 [2 3 7] [2 3 7] [0 1 4 5 6 8 9]
32 training: Counter({3: 179, 2: 167, 7: 152}) testing iid: Counter({3: 1000, 7: 1000, 2: 1000})
33 [0 3 8] [0 3 8] [1 2 4 5 6 7 9]
33 training: Counter({3: 179, 8: 161, 0: 147}) testing iid: Counter({3: 1000, 8: 1000, 0: 1000})
34 [1 4 7] [1 4 7] [0 2 3 5 6 8 9]
34 training: Counter({1: 167, 4: 156, 7: 152}) testing iid: Counter({1: 1000, 7: 1000, 4: 1000})
35 [1 3 5] [1 3 5] [0 2 4 6 7 8 9]
35 training: Counter({5: 185, 3: 179, 1: 167}) testing iid: Counter({3: 1000, 1: 1000, 5: 1000})
36 [0 6 8] [0 6 8] [1 2 3 4 5 7 9]
36 training: Counter({6: 200, 8: 161, 0: 147}) testing iid: Counter({8: 1000, 0: 1000, 6: 1000})
37 [4 6 7] [4 6 7] [0 1 2 3 5 8 9]
37 training: Counter({6: 200, 4: 156, 7: 152}) testing iid: Counter({6: 1000, 7: 1000, 4: 1000})
38 [5 6 8] [5 6 8] [0 1 2 3 4 7 9]
38 training: Counter({6: 200, 5: 185, 8: 161}) testing iid: Counter({8: 1000, 6: 1000, 5: 1000})
39 [2 5 9] [2 5 9] [0 1 3 4 6 7 8]
39 training: Counter({5: 185, 2: 167, 9: 167}) testing iid: Counter({9: 1000, 5: 1000, 2: 1000})
40 [0 7 8] [0 7 8] [1 2 3 4 5 6 9]
40 training: Counter({8: 161, 7: 152, 0: 147}) testing iid: Counter({8: 1000, 0: 1000, 7: 1000})
41 [1 4 7] [1 4 7] [0 2 3 5 6 8 9]
41 training: Counter({1: 167, 4: 156, 7: 152}) testing iid: Counter({1: 1000, 7: 1000, 4: 1000})
42 [2 4 7] [2 4 7] [0 1 3 5 6 8 9]
42 training: Counter({2: 167, 4: 156, 7: 152}) testing iid: Counter({7: 1000, 4: 1000, 2: 1000})
43 [0 3 9] [0 3 9] [1 2 4 5 6 7 8]
43 training: Counter({3: 179, 9: 167, 0: 147}) testing iid: Counter({3: 1000, 0: 1000, 9: 1000})
44 [0 2 4] [0 2 4] [1 3 5 6 7 8 9]
44 training: Counter({2: 167, 4: 156, 0: 147}) testing iid: Counter({0: 1000, 4: 1000, 2: 1000})
45 [1 5 7] [1 5 7] [0 2 3 4 6 8 9]
45 training: Counter({5: 185, 1: 167, 7: 152}) testing iid: Counter({1: 1000, 5: 1000, 7: 1000})
46 [6 7 9] [6 7 9] [0 1 2 3 4 5 8]
46 training: Counter({6: 200, 9: 167, 7: 152}) testing iid: Counter({6: 1000, 9: 1000, 7: 1000})
47 [4 7 8] [4 7 8] [0 1 2 3 5 6 9]
47 training: Counter({8: 161, 4: 156, 7: 151}) testing iid: Counter({8: 1000, 7: 1000, 4: 1000})
48 [0 1 8] [0 1 8] [2 3 4 5 6 7 9]
48 training: Counter({1: 167, 8: 161, 0: 147}) testing iid: Counter({8: 1000, 0: 1000, 1: 1000})
49 [2 8 9] [2 8 9] [0 1 3 4 5 6 7]
49 training: Counter({2: 167, 9: 167, 8: 161}) testing iid: Counter({8: 1000, 9: 1000, 2: 1000})
50 [0 1 3] [0 1 3] [2 4 5 6 7 8 9]
50 training: Counter({3: 179, 1: 167, 0: 147}) testing iid: Counter({3: 1000, 0: 1000, 1: 1000})
51 [1 2 7] [1 2 7] [0 3 4 5 6 8 9]
51 training: Counter({1: 167, 2: 167, 7: 151}) testing iid: Counter({1: 1000, 7: 1000, 2: 1000})
52 [0 2 6] [0 2 6] [1 3 4 5 7 8 9]
52 training: Counter({6: 200, 2: 167, 0: 147}) testing iid: Counter({0: 1000, 6: 1000, 2: 1000})
53 [2 3 9] [2 3 9] [0 1 4 5 6 7 8]
53 training: Counter({3: 179, 2: 167, 9: 166}) testing iid: Counter({3: 1000, 9: 1000, 2: 1000})
54 [2 4 6] [2 4 6] [0 1 3 5 7 8 9]
54 training: Counter({6: 200, 2: 167, 4: 156}) testing iid: Counter({6: 1000, 4: 1000, 2: 1000})
55 [0 5 7] [0 5 7] [1 2 3 4 6 8 9]
55 training: Counter({5: 185, 7: 151, 0: 147}) testing iid: Counter({0: 1000, 5: 1000, 7: 1000})
56 [1 5 6] [1 5 6] [0 2 3 4 7 8 9]
56 training: Counter({6: 200, 5: 185, 1: 167}) testing iid: Counter({6: 1000, 1: 1000, 5: 1000})
57 [4 6 7] [4 6 7] [0 1 2 3 5 8 9]
57 training: Counter({6: 200, 4: 156, 7: 151}) testing iid: Counter({6: 1000, 7: 1000, 4: 1000})
58 [0 6 8] [0 6 8] [1 2 3 4 5 7 9]
58 training: Counter({6: 200, 8: 161, 0: 147}) testing iid: Counter({8: 1000, 0: 1000, 6: 1000})
59 [1 5 9] [1 5 9] [0 2 3 4 6 7 8]
59 training: Counter({5: 185, 1: 167, 9: 166}) testing iid: Counter({1: 1000, 9: 1000, 5: 1000})
60 [0 1 2] [0 1 2] [3 4 5 6 7 8 9]
60 training: Counter({1: 167, 2: 167, 0: 147}) testing iid: Counter({0: 1000, 1: 1000, 2: 1000})
61 [1 4 5] [1 4 5] [0 2 3 6 7 8 9]
61 training: Counter({5: 185, 1: 166, 4: 156}) testing iid: Counter({1: 1000, 5: 1000, 4: 1000})
62 [0 2 7] [0 2 7] [1 3 4 5 6 8 9]
62 training: Counter({2: 167, 7: 151, 0: 147}) testing iid: Counter({0: 1000, 7: 1000, 2: 1000})
63 [3 8 9] [3 8 9] [0 1 2 4 5 6 7]
63 training: Counter({3: 179, 9: 166, 8: 161}) testing iid: Counter({3: 1000, 8: 1000, 9: 1000})
64 [4 5 7] [4 5 7] [0 1 2 3 6 8 9]
64 training: Counter({5: 185, 4: 156, 7: 151}) testing iid: Counter({5: 1000, 7: 1000, 4: 1000})
65 [0 5 9] [0 5 9] [1 2 3 4 6 7 8]
65 training: Counter({5: 185, 9: 166, 0: 147}) testing iid: Counter({0: 1000, 9: 1000, 5: 1000})
66 [3 6 9] [3 6 9] [0 1 2 4 5 7 8]
66 training: Counter({6: 200, 3: 178, 9: 166}) testing iid: Counter({3: 1000, 6: 1000, 9: 1000})
67 [1 4 7] [1 4 7] [0 2 3 5 6 8 9]
67 training: Counter({1: 166, 4: 156, 7: 151}) testing iid: Counter({1: 1000, 7: 1000, 4: 1000})
68 [4 6 8] [4 6 8] [0 1 2 3 5 7 9]
68 training: Counter({6: 200, 8: 161, 4: 156}) testing iid: Counter({8: 1000, 6: 1000, 4: 1000})
69 [2 8 9] [2 8 9] [0 1 3 4 5 6 7]
69 training: Counter({2: 166, 9: 166, 8: 161}) testing iid: Counter({8: 1000, 9: 1000, 2: 1000})
70 [0 5 7] [0 5 7] [1 2 3 4 6 8 9]
70 training: Counter({5: 185, 7: 151, 0: 147}) testing iid: Counter({0: 1000, 5: 1000, 7: 1000})
71 [1 4 5] [1 4 5] [0 2 3 6 7 8 9]
71 training: Counter({5: 185, 1: 166, 4: 156}) testing iid: Counter({1: 1000, 5: 1000, 4: 1000})
72 [2 5 8] [2 5 8] [0 1 3 4 6 7 9]
72 training: Counter({5: 185, 2: 166, 8: 161}) testing iid: Counter({8: 1000, 5: 1000, 2: 1000})
73 [3 5 8] [3 5 8] [0 1 2 4 6 7 9]
73 training: Counter({5: 185, 3: 178, 8: 161}) testing iid: Counter({3: 1000, 8: 1000, 5: 1000})
74 [1 4 8] [1 4 8] [0 2 3 5 6 7 9]
74 training: Counter({1: 166, 8: 161, 4: 156}) testing iid: Counter({8: 1000, 1: 1000, 4: 1000})
75 [0 5 7] [0 5 7] [1 2 3 4 6 8 9]
75 training: Counter({5: 185, 7: 151, 0: 147}) testing iid: Counter({0: 1000, 5: 1000, 7: 1000})
76 [3 4 6] [3 4 6] [0 1 2 5 7 8 9]
76 training: Counter({6: 200, 3: 178, 4: 156}) testing iid: Counter({3: 1000, 6: 1000, 4: 1000})
77 [0 2 7] [0 2 7] [1 3 4 5 6 8 9]
77 training: Counter({2: 166, 7: 151, 0: 147}) testing iid: Counter({0: 1000, 7: 1000, 2: 1000})
78 [3 5 8] [3 5 8] [0 1 2 4 6 7 9]
78 training: Counter({5: 185, 3: 178, 8: 161}) testing iid: Counter({3: 1000, 8: 1000, 5: 1000})
79 [1 2 9] [1 2 9] [0 3 4 5 6 7 8]
79 training: Counter({1: 166, 2: 166, 9: 166}) testing iid: Counter({1: 1000, 9: 1000, 2: 1000})
80 [0 3 4] [0 3 4] [1 2 5 6 7 8 9]
80 training: Counter({3: 178, 4: 156, 0: 147}) testing iid: Counter({3: 1000, 0: 1000, 4: 1000})
81 [0 1 6] [0 1 6] [2 3 4 5 7 8 9]
81 training: Counter({6: 200, 1: 166, 0: 147}) testing iid: Counter({0: 1000, 6: 1000, 1: 1000})
82 [0 2 7] [0 2 7] [1 3 4 5 6 8 9]
82 training: Counter({2: 166, 7: 151, 0: 147}) testing iid: Counter({0: 1000, 7: 1000, 2: 1000})
83 [2 3 8] [2 3 8] [0 1 4 5 6 7 9]
83 training: Counter({3: 178, 2: 166, 8: 161}) testing iid: Counter({3: 1000, 8: 1000, 2: 1000})
84 [0 3 4] [0 3 4] [1 2 5 6 7 8 9]
84 training: Counter({3: 178, 4: 156, 0: 147}) testing iid: Counter({3: 1000, 0: 1000, 4: 1000})
85 [4 5 8] [4 5 8] [0 1 2 3 6 7 9]
85 training: Counter({5: 185, 8: 161, 4: 156}) testing iid: Counter({8: 1000, 5: 1000, 4: 1000})
86 [2 6 9] [2 6 9] [0 1 3 4 5 7 8]
86 training: Counter({6: 200, 2: 166, 9: 166}) testing iid: Counter({6: 1000, 9: 1000, 2: 1000})
87 [0 3 7] [0 3 7] [1 2 4 5 6 8 9]
87 training: Counter({3: 178, 7: 151, 0: 147}) testing iid: Counter({3: 1000, 0: 1000, 7: 1000})
88 [1 4 8] [1 4 8] [0 2 3 5 6 7 9]
88 training: Counter({1: 166, 8: 161, 4: 156}) testing iid: Counter({8: 1000, 1: 1000, 4: 1000})
89 [3 6 9] [3 6 9] [0 1 2 4 5 7 8]
89 training: Counter({6: 200, 3: 178, 9: 166}) testing iid: Counter({3: 1000, 6: 1000, 9: 1000})
90 [0 3 7] [0 3 7] [1 2 4 5 6 8 9]
90 training: Counter({3: 178, 7: 151, 0: 147}) testing iid: Counter({3: 1000, 0: 1000, 7: 1000})
91 [1 3 5] [1 3 5] [0 2 4 6 7 8 9]
91 training: Counter({5: 185, 3: 178, 1: 166}) testing iid: Counter({3: 1000, 1: 1000, 5: 1000})
92 [0 2 4] [0 2 4] [1 3 5 6 7 8 9]
92 training: Counter({2: 166, 4: 156, 0: 147}) testing iid: Counter({0: 1000, 4: 1000, 2: 1000})
93 [3 5 8] [3 5 8] [0 1 2 4 6 7 9]
93 training: Counter({5: 185, 3: 178, 8: 161}) testing iid: Counter({3: 1000, 8: 1000, 5: 1000})
94 [4 6 7] [4 6 7] [0 1 2 3 5 8 9]
94 training: Counter({6: 200, 4: 156, 7: 151}) testing iid: Counter({6: 1000, 7: 1000, 4: 1000})
95 [1 5 7] [1 5 7] [0 2 3 4 6 8 9]
95 training: Counter({5: 185, 1: 166, 7: 151}) testing iid: Counter({1: 1000, 5: 1000, 7: 1000})
96 [0 2 6] [0 2 6] [1 3 4 5 7 8 9]
96 training: Counter({6: 200, 2: 166, 0: 147}) testing iid: Counter({0: 1000, 6: 1000, 2: 1000})
97 [2 7 8] [2 7 8] [0 1 3 4 5 6 9]
97 training: Counter({2: 166, 8: 161, 7: 151}) testing iid: Counter({8: 1000, 7: 1000, 2: 1000})
98 [1 4 8] [1 4 8] [0 2 3 5 6 7 9]
98 training: Counter({1: 166, 8: 161, 4: 156}) testing iid: Counter({8: 1000, 1: 1000, 4: 1000})
99 [0 4 9] [0 4 9] [1 2 3 5 6 7 8]
99 training: Counter({9: 166, 4: 156, 0: 147}) testing iid: Counter({0: 1000, 9: 1000, 4: 1000})
Num_samples of Training set per client: [496, 520, 482, 531, 491, 510, 524, 476, 481, 514, 466, 534, 481, 508, 498, 515, 531, 538, 496, 503, 476, 471, 513, 493, 491, 504, 529, 487, 514, 546, 475, 486, 498, 487, 475, 531, 508, 508, 546, 519, 460, 475, 475, 493, 470, 504, 519, 468, 475, 495, 493, 485, 514, 512, 523, 483, 552, 507, 508, 518, 481, 507, 465, 506, 492, 498, 544, 473, 517, 493, 483, 507, 512, 524, 483, 483, 534, 464, 524, 498, 481, 513, 464, 505, 481, 502, 532, 476, 483, 544, 476, 529, 469, 524, 507, 502, 513, 478, 483, 469]
Total_training_samples: 50000
Global test set: 10000
Finish Generating Samples, distribution saved
MobileNetV2(
  (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (layers): Sequential(
    (0): Block(
      (conv1): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): Block(
      (conv1): Conv2d(16, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=96, bias=False)
      (bn2): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(96, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(16, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (2): Block(
      (conv1): Conv2d(24, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=144, bias=False)
      (bn2): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(144, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (3): Block(
      (conv1): Conv2d(24, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(144, 144, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=144, bias=False)
      (bn2): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(144, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (4): Block(
      (conv1): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
      (bn2): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(192, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (5): Block(
      (conv1): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
      (bn2): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(192, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (6): Block(
      (conv1): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(192, 192, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=192, bias=False)
      (bn2): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(192, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (7): Block(
      (conv1): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
      (bn2): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (8): Block(
      (conv1): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
      (bn2): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (9): Block(
      (conv1): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
      (bn2): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (10): Block(
      (conv1): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
      (bn2): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(384, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(64, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (11): Block(
      (conv1): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)
      (bn2): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (12): Block(
      (conv1): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)
      (bn2): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (13): Block(
      (conv1): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(576, 576, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=576, bias=False)
      (bn2): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(576, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (14): Block(
      (conv1): Conv2d(160, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(960, 960, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=960, bias=False)
      (bn2): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(960, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (15): Block(
      (conv1): Conv2d(160, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(960, 960, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=960, bias=False)
      (bn2): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(960, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (16): Block(
      (conv1): Conv2d(160, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(960, 960, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=960, bias=False)
      (bn2): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(960, 320, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(160, 320, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (conv2): Conv2d(320, 1280, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn2): BatchNorm2d(1280, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (linear): Linear(in_features=1280, out_features=10, bias=True)
)
number of parameters: 2296922
clients initializting...
output size: 10
  0%|          | 0/100 [00:00<?, ?it/s]  1%|          | 1/100 [00:00<01:06,  1.49it/s]  2%|▏         | 2/100 [00:01<01:05,  1.49it/s]  3%|▎         | 3/100 [00:02<01:05,  1.49it/s]  4%|▍         | 4/100 [00:02<01:04,  1.49it/s]  5%|▌         | 5/100 [00:03<01:03,  1.49it/s]  6%|▌         | 6/100 [00:04<01:02,  1.50it/s]  7%|▋         | 7/100 [00:04<01:01,  1.50it/s]  8%|▊         | 8/100 [00:05<01:01,  1.50it/s]  9%|▉         | 9/100 [00:05<01:00,  1.51it/s] 10%|█         | 10/100 [00:06<00:59,  1.51it/s] 11%|█         | 11/100 [00:07<00:59,  1.50it/s] 12%|█▏        | 12/100 [00:08<00:58,  1.50it/s] 13%|█▎        | 13/100 [00:08<00:58,  1.50it/s] 14%|█▍        | 14/100 [00:09<00:57,  1.49it/s] 15%|█▌        | 15/100 [00:10<00:56,  1.49it/s] 16%|█▌        | 16/100 [00:10<00:56,  1.49it/s] 17%|█▋        | 17/100 [00:11<00:56,  1.48it/s] 18%|█▊        | 18/100 [00:12<00:55,  1.49it/s] 19%|█▉        | 19/100 [00:12<00:54,  1.50it/s] 20%|██        | 20/100 [00:13<00:53,  1.49it/s] 21%|██        | 21/100 [00:14<00:52,  1.49it/s] 22%|██▏       | 22/100 [00:14<00:52,  1.50it/s] 23%|██▎       | 23/100 [00:15<00:51,  1.49it/s] 24%|██▍       | 24/100 [00:16<00:50,  1.50it/s] 25%|██▌       | 25/100 [00:16<00:50,  1.50it/s] 26%|██▌       | 26/100 [00:17<00:49,  1.49it/s] 27%|██▋       | 27/100 [00:18<00:48,  1.49it/s] 28%|██▊       | 28/100 [00:18<00:48,  1.49it/s] 29%|██▉       | 29/100 [00:19<00:47,  1.50it/s] 30%|███       | 30/100 [00:20<00:46,  1.50it/s] 31%|███       | 31/100 [00:20<00:45,  1.51it/s] 32%|███▏      | 32/100 [00:21<00:45,  1.51it/s] 33%|███▎      | 33/100 [00:22<00:44,  1.51it/s] 34%|███▍      | 34/100 [00:22<00:43,  1.50it/s] 35%|███▌      | 35/100 [00:26<01:52,  1.74s/it] 36%|███▌      | 36/100 [00:27<01:30,  1.41s/it] 37%|███▋      | 37/100 [00:28<01:14,  1.18s/it] 38%|███▊      | 38/100 [00:28<01:03,  1.03s/it] 39%|███▉      | 39/100 [00:29<00:55,  1.09it/s] 40%|████      | 40/100 [00:30<00:50,  1.19it/s] 41%|████      | 41/100 [00:30<00:46,  1.28it/s] 42%|████▏     | 42/100 [00:31<00:43,  1.34it/s] 43%|████▎     | 43/100 [00:32<00:41,  1.39it/s] 44%|████▍     | 44/100 [00:32<00:39,  1.42it/s] 45%|████▌     | 45/100 [00:33<00:38,  1.44it/s] 46%|████▌     | 46/100 [00:34<00:36,  1.46it/s] 47%|████▋     | 47/100 [00:34<00:35,  1.48it/s] 48%|████▊     | 48/100 [00:35<00:34,  1.49it/s] 49%|████▉     | 49/100 [00:36<00:34,  1.50it/s] 50%|█████     | 50/100 [00:36<00:33,  1.50it/s] 51%|█████     | 51/100 [00:37<00:32,  1.51it/s] 52%|█████▏    | 52/100 [00:38<00:33,  1.45it/s] 53%|█████▎    | 53/100 [00:38<00:31,  1.47it/s] 54%|█████▍    | 54/100 [00:39<00:31,  1.48it/s] 55%|█████▌    | 55/100 [00:40<00:30,  1.49it/s] 56%|█████▌    | 56/100 [00:40<00:29,  1.50it/s] 57%|█████▋    | 57/100 [00:41<00:28,  1.50it/s] 58%|█████▊    | 58/100 [00:42<00:27,  1.51it/s] 59%|█████▉    | 59/100 [00:42<00:27,  1.51it/s] 60%|██████    | 60/100 [00:43<00:26,  1.50it/s] 61%|██████    | 61/100 [00:44<00:26,  1.49it/s] 62%|██████▏   | 62/100 [00:44<00:25,  1.50it/s] 63%|██████▎   | 63/100 [00:45<00:24,  1.50it/s] 64%|██████▍   | 64/100 [00:46<00:23,  1.50it/s] 65%|██████▌   | 65/100 [00:46<00:23,  1.50it/s] 66%|██████▌   | 66/100 [00:47<00:22,  1.51it/s] 67%|██████▋   | 67/100 [00:48<00:21,  1.50it/s] 68%|██████▊   | 68/100 [00:48<00:21,  1.49it/s] 69%|██████▉   | 69/100 [00:49<00:20,  1.50it/s] 70%|███████   | 70/100 [00:50<00:19,  1.51it/s] 71%|███████   | 71/100 [00:50<00:19,  1.50it/s] 72%|███████▏  | 72/100 [00:55<00:47,  1.71s/it] 73%|███████▎  | 73/100 [00:55<00:37,  1.40s/it] 74%|███████▍  | 74/100 [00:56<00:30,  1.18s/it] 75%|███████▌  | 75/100 [00:56<00:25,  1.02s/it] 76%|███████▌  | 76/100 [00:57<00:21,  1.10it/s] 77%|███████▋  | 77/100 [00:58<00:19,  1.19it/s] 78%|███████▊  | 78/100 [00:58<00:17,  1.27it/s] 79%|███████▉  | 79/100 [00:59<00:15,  1.33it/s] 80%|████████  | 80/100 [01:00<00:14,  1.39it/s] 81%|████████  | 81/100 [01:00<00:13,  1.43it/s] 82%|████████▏ | 82/100 [01:01<00:12,  1.46it/s] 83%|████████▎ | 83/100 [01:02<00:11,  1.48it/s] 84%|████████▍ | 84/100 [01:02<00:10,  1.48it/s] 85%|████████▌ | 85/100 [01:03<00:10,  1.47it/s] 86%|████████▌ | 86/100 [01:04<00:09,  1.48it/s] 87%|████████▋ | 87/100 [01:04<00:08,  1.49it/s] 88%|████████▊ | 88/100 [01:05<00:07,  1.50it/s] 89%|████████▉ | 89/100 [01:06<00:07,  1.50it/s] 90%|█████████ | 90/100 [01:06<00:06,  1.50it/s] 91%|█████████ | 91/100 [01:07<00:05,  1.51it/s] 92%|█████████▏| 92/100 [01:08<00:05,  1.51it/s] 93%|█████████▎| 93/100 [01:08<00:04,  1.50it/s] 94%|█████████▍| 94/100 [01:09<00:04,  1.50it/s] 95%|█████████▌| 95/100 [01:10<00:03,  1.50it/s] 96%|█████████▌| 96/100 [01:10<00:02,  1.50it/s] 97%|█████████▋| 97/100 [01:11<00:01,  1.51it/s] 98%|█████████▊| 98/100 [01:12<00:01,  1.50it/s] 99%|█████████▉| 99/100 [01:12<00:00,  1.50it/s]100%|██████████| 100/100 [01:13<00:00,  1.51it/s]100%|██████████| 100/100 [01:13<00:00,  1.36it/s]
Number of users per round / total users: 10  /  100
Finished creating FL server.
=== Training starts: algorithm FedFea ===
-------------Round number:  0  -------------
selected users: [26, 86, 2, 55, 75, 93, 16, 73, 54, 95]
random features: torch.Size([105, 64, 8, 8]) torch.Size([105])
random features: torch.Size([106, 64, 8, 8]) torch.Size([106])
random features: torch.Size([96, 64, 8, 8]) torch.Size([96])
random features: torch.Size([96, 64, 8, 8]) torch.Size([96])
random features: torch.Size([96, 64, 8, 8]) torch.Size([96])
random features: torch.Size([104, 64, 8, 8]) torch.Size([104])
random features: torch.Size([106, 64, 8, 8]) torch.Size([106])
random features: torch.Size([104, 64, 8, 8]) torch.Size([104])
random features: torch.Size([104, 64, 8, 8]) torch.Size([104])
random features: torch.Size([100, 64, 8, 8]) torch.Size([100])
all data: 1017
Local adapation with distilling: 0.001
training loss: tensor(2.1414) feature loss: tensor(0.3795)
Local adapation with distilling: 0.001
training loss: tensor(2.2683) feature loss: tensor(0.4055)
Local adapation with distilling: 0.001
training loss: tensor(2.2311) feature loss: tensor(0.3850)
Local adapation with distilling: 0.001
training loss: tensor(2.2929) feature loss: tensor(0.4085)
Local adapation with distilling: 0.001
training loss: tensor(2.2845) feature loss: tensor(0.3978)
Local adapation with distilling: 0.001
training loss: tensor(2.3202) feature loss: tensor(0.3996)
Local adapation with distilling: 0.001
training loss: tensor(2.2980) feature loss: tensor(0.4094)
Local adapation with distilling: 0.001
training loss: tensor(2.2525) feature loss: tensor(0.4094)
Local adapation with distilling: 0.001
training loss: tensor(2.5024) feature loss: tensor(0.4202)
Local adapation with distilling: 0.001
training loss: tensor(2.2477) feature loss: tensor(0.3975)
Global Model Acc on global data: 0.1034 length of data: 10000
save a model
-------------Round number:  1  -------------
selected users: [80, 84, 33, 81, 93, 17, 36, 82, 69, 65]
random features: torch.Size([96, 64, 8, 8]) torch.Size([96])
random features: torch.Size([96, 64, 8, 8]) torch.Size([96])
random features: torch.Size([97, 64, 8, 8]) torch.Size([97])
random features: torch.Size([102, 64, 8, 8]) torch.Size([102])
random features: torch.Size([104, 64, 8, 8]) torch.Size([104])
random features: torch.Size([107, 64, 8, 8]) torch.Size([107])
random features: torch.Size([101, 64, 8, 8]) torch.Size([101])
random features: torch.Size([92, 64, 8, 8]) torch.Size([92])
random features: torch.Size([98, 64, 8, 8]) torch.Size([98])
random features: torch.Size([99, 64, 8, 8]) torch.Size([99])
all data: 992
Local adapation with distilling: 0.000982
training loss: tensor(1.8295) feature loss: tensor(0.5075)
Local adapation with distilling: 0.000982
training loss: tensor(1.8524) feature loss: tensor(0.5229)
Local adapation with distilling: 0.000982
training loss: tensor(1.7678) feature loss: tensor(0.5061)
Local adapation with distilling: 0.000982
training loss: tensor(1.9329) feature loss: tensor(0.4994)
Local adapation with distilling: 0.000982
training loss: tensor(1.7639) feature loss: tensor(0.4924)
Local adapation with distilling: 0.000982
training loss: tensor(1.8130) feature loss: tensor(0.4909)
Local adapation with distilling: 0.000982
training loss: tensor(1.7302) feature loss: tensor(0.4907)
Local adapation with distilling: 0.000982
training loss: tensor(1.9204) feature loss: tensor(0.5230)
Local adapation with distilling: 0.000982
training loss: tensor(1.8817) feature loss: tensor(0.4937)
Local adapation with distilling: 0.000982
training loss: tensor(1.7261) feature loss: tensor(0.5023)
Global Model Acc on global data: 0.2174 length of data: 10000
save a model
-------------Round number:  2  -------------
selected users: [83, 30, 56, 24, 16, 23, 2, 27, 28, 13]
random features: torch.Size([101, 64, 8, 8]) torch.Size([101])
random features: torch.Size([95, 64, 8, 8]) torch.Size([95])
random features: torch.Size([110, 64, 8, 8]) torch.Size([110])
random features: torch.Size([98, 64, 8, 8]) torch.Size([98])
random features: torch.Size([106, 64, 8, 8]) torch.Size([106])
random features: torch.Size([98, 64, 8, 8]) torch.Size([98])
random features: torch.Size([96, 64, 8, 8]) torch.Size([96])
random features: torch.Size([97, 64, 8, 8]) torch.Size([97])
random features: torch.Size([102, 64, 8, 8]) torch.Size([102])
random features: torch.Size([101, 64, 8, 8]) torch.Size([101])
all data: 1004
Local adapation with distilling: 0.000964
training loss: tensor(1.4950) feature loss: tensor(0.4173)
Local adapation with distilling: 0.000964
training loss: tensor(1.5215) feature loss: tensor(0.4295)
Local adapation with distilling: 0.000964
training loss: tensor(1.4609) feature loss: tensor(0.4205)
Local adapation with distilling: 0.000964
training loss: tensor(1.6303) feature loss: tensor(0.4375)
Local adapation with distilling: 0.000964
training loss: tensor(1.5915) feature loss: tensor(0.4338)
Local adapation with distilling: 0.000964
training loss: tensor(1.5609) feature loss: tensor(0.4325)
Local adapation with distilling: 0.000964
training loss: tensor(1.4949) feature loss: tensor(0.4431)
Local adapation with distilling: 0.000964
training loss: tensor(1.6792) feature loss: tensor(0.4342)
Local adapation with distilling: 0.000964
training loss: tensor(1.7032) feature loss: tensor(0.4340)
Local adapation with distilling: 0.000964
training loss: tensor(1.4860) feature loss: tensor(0.4366)
Global Model Acc on global data: 0.2028 length of data: 10000
-------------Round number:  3  -------------
selected users: [93, 67, 6, 64, 96, 83, 98, 42, 25, 15]
random features: torch.Size([104, 64, 8, 8]) torch.Size([104])
random features: torch.Size([94, 64, 8, 8]) torch.Size([94])
random features: torch.Size([104, 64, 8, 8]) torch.Size([104])
random features: torch.Size([98, 64, 8, 8]) torch.Size([98])
random features: torch.Size([102, 64, 8, 8]) torch.Size([102])
random features: torch.Size([101, 64, 8, 8]) torch.Size([101])
random features: torch.Size([96, 64, 8, 8]) torch.Size([96])
random features: torch.Size([95, 64, 8, 8]) torch.Size([95])
random features: torch.Size([100, 64, 8, 8]) torch.Size([100])
random features: torch.Size([103, 64, 8, 8]) torch.Size([103])
all data: 997
Local adapation with distilling: 0.000946
training loss: tensor(1.3945) feature loss: tensor(0.4191)
Local adapation with distilling: 0.000946
training loss: tensor(1.4724) feature loss: tensor(0.4503)
Local adapation with distilling: 0.000946
training loss: tensor(1.5041) feature loss: tensor(0.4528)
Local adapation with distilling: 0.000946
training loss: tensor(1.4904) feature loss: tensor(0.4625)
Local adapation with distilling: 0.000946
training loss: tensor(1.5657) feature loss: tensor(0.4545)
Local adapation with distilling: 0.000946
training loss: tensor(1.3070) feature loss: tensor(0.3960)
Local adapation with distilling: 0.000946
training loss: tensor(1.4164) feature loss: tensor(0.4479)
Local adapation with distilling: 0.000946
training loss: tensor(1.5316) feature loss: tensor(0.4507)
Local adapation with distilling: 0.000946
training loss: tensor(1.4192) feature loss: tensor(0.4575)
Local adapation with distilling: 0.000946
training loss: tensor(1.4880) feature loss: tensor(0.4474)
Global Model Acc on global data: 0.2044 length of data: 10000
-------------Round number:  4  -------------
selected users: [20, 10, 96, 16, 63, 24, 53, 97, 41, 47]
random features: torch.Size([95, 64, 8, 8]) torch.Size([95])
random features: torch.Size([93, 64, 8, 8]) torch.Size([93])
random features: torch.Size([102, 64, 8, 8]) torch.Size([102])
random features: torch.Size([106, 64, 8, 8]) torch.Size([106])
random features: torch.Size([101, 64, 8, 8]) torch.Size([101])
random features: torch.Size([98, 64, 8, 8]) torch.Size([98])
random features: torch.Size([115, 64, 8, 8]) torch.Size([115])
random features: torch.Size([95, 64, 8, 8]) torch.Size([95])
random features: torch.Size([95, 64, 8, 8]) torch.Size([95])
random features: torch.Size([93, 64, 8, 8]) torch.Size([93])
all data: 993
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.5494) feature loss: tensor(0.5122)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.5549) feature loss: tensor(0.5502)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.6694) feature loss: tensor(0.5464)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.4318) feature loss: tensor(0.5141)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.3580) feature loss: tensor(0.5156)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.3498) feature loss: tensor(0.4729)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.2809) feature loss: tensor(0.4997)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.3324) feature loss: tensor(0.4759)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.4006) feature loss: tensor(0.4853)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.3638) feature loss: tensor(0.4810)
Global Model Acc on global data: 0.2006 length of data: 10000
-------------Round number:  5  -------------
selected users: [66, 32, 46, 28, 74, 23, 10, 20, 17, 35]
random features: torch.Size([108, 64, 8, 8]) torch.Size([108])
random features: torch.Size([99, 64, 8, 8]) torch.Size([99])
random features: torch.Size([103, 64, 8, 8]) torch.Size([103])
random features: torch.Size([102, 64, 8, 8]) torch.Size([102])
random features: torch.Size([96, 64, 8, 8]) torch.Size([96])
random features: torch.Size([98, 64, 8, 8]) torch.Size([98])
random features: torch.Size([93, 64, 8, 8]) torch.Size([93])
random features: torch.Size([95, 64, 8, 8]) torch.Size([95])
random features: torch.Size([107, 64, 8, 8]) torch.Size([107])
random features: torch.Size([106, 64, 8, 8]) torch.Size([106])
all data: 1007
Local adapation with distilling: 0.00091
training loss: tensor(1.3682) feature loss: tensor(0.5473)
Local adapation with distilling: 0.00091
training loss: tensor(1.4181) feature loss: tensor(0.5444)
Local adapation with distilling: 0.00091
training loss: tensor(1.4159) feature loss: tensor(0.5637)
Local adapation with distilling: 0.00091
training loss: tensor(1.5953) feature loss: tensor(0.5529)
Local adapation with distilling: 0.00091
training loss: tensor(1.3108) feature loss: tensor(0.5591)
Local adapation with distilling: 0.00091
training loss: tensor(1.3917) feature loss: tensor(0.5339)
Local adapation with distilling: 0.00091
training loss: tensor(1.3423) feature loss: tensor(0.5516)
Local adapation with distilling: 0.00091
training loss: tensor(1.4484) feature loss: tensor(0.5635)
Local adapation with distilling: 0.00091
training loss: tensor(1.3868) feature loss: tensor(0.5768)
Local adapation with distilling: 0.00091
training loss: tensor(1.3868) feature loss: tensor(0.5586)
Global Model Acc on global data: 0.3019 length of data: 10000
save a model
-------------Round number:  6  -------------
selected users: [17, 34, 0, 45, 60, 86, 20, 47, 44, 81]
random features: torch.Size([107, 64, 8, 8]) torch.Size([107])
random features: torch.Size([95, 64, 8, 8]) torch.Size([95])
random features: torch.Size([99, 64, 8, 8]) torch.Size([99])
random features: torch.Size([100, 64, 8, 8]) torch.Size([100])
random features: torch.Size([96, 64, 8, 8]) torch.Size([96])
random features: torch.Size([106, 64, 8, 8]) torch.Size([106])
random features: torch.Size([95, 64, 8, 8]) torch.Size([95])
random features: torch.Size([93, 64, 8, 8]) torch.Size([93])
random features: torch.Size([94, 64, 8, 8]) torch.Size([94])
random features: torch.Size([102, 64, 8, 8]) torch.Size([102])
all data: 987
Local adapation with distilling: 0.000892
training loss: tensor(1.2074) feature loss: tensor(0.4740)
Local adapation with distilling: 0.000892
training loss: tensor(1.2277) feature loss: tensor(0.4655)
Local adapation with distilling: 0.000892
training loss: tensor(1.2372) feature loss: tensor(0.5295)
Local adapation with distilling: 0.000892
training loss: tensor(1.2437) feature loss: tensor(0.4839)
Local adapation with distilling: 0.000892
training loss: tensor(1.2458) feature loss: tensor(0.5213)
Local adapation with distilling: 0.000892
training loss: tensor(1.1895) feature loss: tensor(0.4647)
Local adapation with distilling: 0.000892
training loss: tensor(1.2569) feature loss: tensor(0.4892)
Local adapation with distilling: 0.000892
training loss: tensor(1.1571) feature loss: tensor(0.4823)
Local adapation with distilling: 0.000892
training loss: tensor(1.2955) feature loss: tensor(0.4786)
Local adapation with distilling: 0.000892
training loss: tensor(1.3637) feature loss: tensor(0.5500)
Global Model Acc on global data: 0.3257 length of data: 10000
save a model
-------------Round number:  7  -------------
selected users: [37, 26, 78, 91, 49, 15, 93, 71, 86, 22]
random features: torch.Size([101, 64, 8, 8]) torch.Size([101])
random features: torch.Size([105, 64, 8, 8]) torch.Size([105])
random features: torch.Size([104, 64, 8, 8]) torch.Size([104])
random features: torch.Size([105, 64, 8, 8]) torch.Size([105])
random features: torch.Size([99, 64, 8, 8]) torch.Size([99])
random features: torch.Size([103, 64, 8, 8]) torch.Size([103])
random features: torch.Size([104, 64, 8, 8]) torch.Size([104])
random features: torch.Size([101, 64, 8, 8]) torch.Size([101])
random features: torch.Size([106, 64, 8, 8]) torch.Size([106])
random features: torch.Size([102, 64, 8, 8]) torch.Size([102])
all data: 1030
Local adapation with distilling: 0.000874
training loss: tensor(1.2781) feature loss: tensor(0.4298)
Local adapation with distilling: 0.000874
training loss: tensor(1.1290) feature loss: tensor(0.4864)
Local adapation with distilling: 0.000874
training loss: tensor(1.1716) feature loss: tensor(0.4986)
Local adapation with distilling: 0.000874
training loss: tensor(1.1609) feature loss: tensor(0.4622)
Local adapation with distilling: 0.000874
training loss: tensor(1.1847) feature loss: tensor(0.4901)
Local adapation with distilling: 0.000874
training loss: tensor(1.2412) feature loss: tensor(0.4839)
Local adapation with distilling: 0.000874
training loss: tensor(1.1593) feature loss: tensor(0.4926)
Local adapation with distilling: 0.000874
training loss: tensor(1.1323) feature loss: tensor(0.4558)
Local adapation with distilling: 0.000874
training loss: tensor(1.1292) feature loss: tensor(0.4818)
Local adapation with distilling: 0.000874
training loss: tensor(1.3547) feature loss: tensor(0.4630)
Global Model Acc on global data: 0.324 length of data: 10000
-------------Round number:  8  -------------
selected users: [17, 23, 1, 44, 55, 99, 86, 29, 62, 33]
random features: torch.Size([107, 64, 8, 8]) torch.Size([107])
random features: torch.Size([98, 64, 8, 8]) torch.Size([98])
random features: torch.Size([104, 64, 8, 8]) torch.Size([104])
random features: torch.Size([94, 64, 8, 8]) torch.Size([94])
random features: torch.Size([96, 64, 8, 8]) torch.Size([96])
random features: torch.Size([93, 64, 8, 8]) torch.Size([93])
random features: torch.Size([106, 64, 8, 8]) torch.Size([106])
random features: torch.Size([109, 64, 8, 8]) torch.Size([109])
random features: torch.Size([93, 64, 8, 8]) torch.Size([93])
random features: torch.Size([97, 64, 8, 8]) torch.Size([97])
all data: 997
Local adapation with distilling: 0.000856
training loss: tensor(1.1147) feature loss: tensor(0.4722)
Local adapation with distilling: 0.000856
training loss: tensor(1.1892) feature loss: tensor(0.5303)
Local adapation with distilling: 0.000856
training loss: tensor(1.1680) feature loss: tensor(0.4926)
Local adapation with distilling: 0.000856
training loss: tensor(1.1984) feature loss: tensor(0.5079)
Local adapation with distilling: 0.000856
training loss: tensor(1.2235) feature loss: tensor(0.5671)
Local adapation with distilling: 0.000856
training loss: tensor(1.1819) feature loss: tensor(0.5079)
Local adapation with distilling: 0.000856
training loss: tensor(1.0269) feature loss: tensor(0.4720)
Local adapation with distilling: 0.000856
training loss: tensor(1.1348) feature loss: tensor(0.4906)
Local adapation with distilling: 0.000856
training loss: tensor(1.2531) feature loss: tensor(0.5536)
Local adapation with distilling: 0.000856
training loss: tensor(1.1707) feature loss: tensor(0.5269)
Global Model Acc on global data: 0.3601 length of data: 10000
save a model
-------------Round number:  9  -------------
selected users: [75, 42, 46, 68, 3, 39, 23, 20, 70, 73]
random features: torch.Size([96, 64, 8, 8]) torch.Size([96])
random features: torch.Size([95, 64, 8, 8]) torch.Size([95])
random features: torch.Size([103, 64, 8, 8]) torch.Size([103])
random features: torch.Size([103, 64, 8, 8]) torch.Size([103])
random features: torch.Size([106, 64, 8, 8]) torch.Size([106])
random features: torch.Size([103, 64, 8, 8]) torch.Size([103])
random features: torch.Size([98, 64, 8, 8]) torch.Size([98])
random features: torch.Size([95, 64, 8, 8]) torch.Size([95])
random features: torch.Size([96, 64, 8, 8]) torch.Size([96])
random features: torch.Size([104, 64, 8, 8]) torch.Size([104])
all data: 999
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(1.0496) feature loss: tensor(0.4148)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(1.1468) feature loss: tensor(0.3792)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(1.0044) feature loss: tensor(0.3857)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(1.0727) feature loss: tensor(0.3947)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(1.1269) feature loss: tensor(0.3992)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(1.0583) feature loss: tensor(0.3901)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(1.0036) feature loss: tensor(0.3837)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(1.0750) feature loss: tensor(0.4458)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(1.0491) feature loss: tensor(0.4032)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(1.0579) feature loss: tensor(0.4040)
Global Model Acc on global data: 0.3957 length of data: 10000
save a model
-------------Round number:  10  -------------
selected users: [19, 14, 43, 37, 66, 3, 79, 41, 38, 68]
random features: torch.Size([100, 64, 8, 8]) torch.Size([100])
random features: torch.Size([99, 64, 8, 8]) torch.Size([99])
random features: torch.Size([98, 64, 8, 8]) torch.Size([98])
random features: torch.Size([101, 64, 8, 8]) torch.Size([101])
random features: torch.Size([108, 64, 8, 8]) torch.Size([108])
random features: torch.Size([106, 64, 8, 8]) torch.Size([106])
random features: torch.Size([99, 64, 8, 8]) torch.Size([99])
random features: torch.Size([95, 64, 8, 8]) torch.Size([95])
random features: torch.Size([109, 64, 8, 8]) torch.Size([109])
random features: torch.Size([103, 64, 8, 8]) torch.Size([103])
all data: 1018
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.9705) feature loss: tensor(0.3800)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.9259) feature loss: tensor(0.4026)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.9674) feature loss: tensor(0.4227)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.9937) feature loss: tensor(0.3579)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.9372) feature loss: tensor(0.3853)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.9522) feature loss: tensor(0.3791)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(1.0801) feature loss: tensor(0.3736)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(1.0038) feature loss: tensor(0.3897)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.8886) feature loss: tensor(0.3896)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.9074) feature loss: tensor(0.3935)
Global Model Acc on global data: 0.3371 length of data: 10000
-------------Round number:  11  -------------
selected users: [46, 49, 22, 58, 41, 98, 62, 29, 30, 51]
random features: torch.Size([103, 64, 8, 8]) torch.Size([103])
random features: torch.Size([99, 64, 8, 8]) torch.Size([99])
random features: torch.Size([102, 64, 8, 8]) torch.Size([102])
random features: torch.Size([101, 64, 8, 8]) torch.Size([101])
random features: torch.Size([95, 64, 8, 8]) torch.Size([95])
random features: torch.Size([96, 64, 8, 8]) torch.Size([96])
random features: torch.Size([93, 64, 8, 8]) torch.Size([93])
random features: torch.Size([109, 64, 8, 8]) torch.Size([109])
random features: torch.Size([95, 64, 8, 8]) torch.Size([95])
random features: torch.Size([97, 64, 8, 8]) torch.Size([97])
all data: 990
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(1.0119) feature loss: tensor(0.4412)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(1.0036) feature loss: tensor(0.4620)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(1.2655) feature loss: tensor(0.4634)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.9683) feature loss: tensor(0.4594)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.9912) feature loss: tensor(0.4236)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(1.0291) feature loss: tensor(0.4355)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(1.0686) feature loss: tensor(0.5140)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.9645) feature loss: tensor(0.4234)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(1.0755) feature loss: tensor(0.4973)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(1.0671) feature loss: tensor(0.4619)
Global Model Acc on global data: 0.3634 length of data: 10000
-------------Round number:  12  -------------
selected users: [17, 41, 92, 14, 68, 31, 89, 15, 21, 60]
random features: torch.Size([107, 64, 8, 8]) torch.Size([107])
random features: torch.Size([95, 64, 8, 8]) torch.Size([95])
random features: torch.Size([93, 64, 8, 8]) torch.Size([93])
random features: torch.Size([99, 64, 8, 8]) torch.Size([99])
random features: torch.Size([103, 64, 8, 8]) torch.Size([103])
random features: torch.Size([97, 64, 8, 8]) torch.Size([97])
random features: torch.Size([108, 64, 8, 8]) torch.Size([108])
random features: torch.Size([103, 64, 8, 8]) torch.Size([103])
random features: torch.Size([94, 64, 8, 8]) torch.Size([94])
random features: torch.Size([96, 64, 8, 8]) torch.Size([96])
all data: 995
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.9025) feature loss: tensor(0.3896)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.8519) feature loss: tensor(0.3637)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.9658) feature loss: tensor(0.3989)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.8349) feature loss: tensor(0.3685)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.8096) feature loss: tensor(0.3671)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(1.0539) feature loss: tensor(0.3963)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.8757) feature loss: tensor(0.3894)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.9462) feature loss: tensor(0.3819)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.9133) feature loss: tensor(0.3884)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.9299) feature loss: tensor(0.4115)
Global Model Acc on global data: 0.3638 length of data: 10000
-------------Round number:  13  -------------
selected users: [37, 62, 83, 14, 43, 9, 44, 31, 69, 57]
random features: torch.Size([101, 64, 8, 8]) torch.Size([101])
random features: torch.Size([93, 64, 8, 8]) torch.Size([93])
random features: torch.Size([101, 64, 8, 8]) torch.Size([101])
random features: torch.Size([99, 64, 8, 8]) torch.Size([99])
random features: torch.Size([98, 64, 8, 8]) torch.Size([98])
random features: torch.Size([102, 64, 8, 8]) torch.Size([102])
random features: torch.Size([94, 64, 8, 8]) torch.Size([94])
random features: torch.Size([97, 64, 8, 8]) torch.Size([97])
random features: torch.Size([98, 64, 8, 8]) torch.Size([98])
random features: torch.Size([101, 64, 8, 8]) torch.Size([101])
all data: 984
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.8747) feature loss: tensor(0.3600)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.9203) feature loss: tensor(0.3847)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.8788) feature loss: tensor(0.4046)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.7924) feature loss: tensor(0.3635)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.8416) feature loss: tensor(0.4117)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(1.0151) feature loss: tensor(0.4057)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.8812) feature loss: tensor(0.3915)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.9388) feature loss: tensor(0.3747)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.8509) feature loss: tensor(0.3975)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.9036) feature loss: tensor(0.3612)
Global Model Acc on global data: 0.3638 length of data: 10000
-------------Round number:  14  -------------
selected users: [24, 39, 35, 44, 55, 70, 82, 40, 91, 65]
random features: torch.Size([98, 64, 8, 8]) torch.Size([98])
random features: torch.Size([103, 64, 8, 8]) torch.Size([103])
random features: torch.Size([106, 64, 8, 8]) torch.Size([106])
random features: torch.Size([94, 64, 8, 8]) torch.Size([94])
random features: torch.Size([96, 64, 8, 8]) torch.Size([96])
random features: torch.Size([96, 64, 8, 8]) torch.Size([96])
random features: torch.Size([92, 64, 8, 8]) torch.Size([92])
random features: torch.Size([92, 64, 8, 8]) torch.Size([92])
random features: torch.Size([105, 64, 8, 8]) torch.Size([105])
random features: torch.Size([99, 64, 8, 8]) torch.Size([99])
all data: 981
Local adapation with distilling: 0.000748
training loss: tensor(1.0224) feature loss: tensor(0.5026)
Local adapation with distilling: 0.000748
training loss: tensor(1.1435) feature loss: tensor(0.5124)
Local adapation with distilling: 0.000748
training loss: tensor(1.1868) feature loss: tensor(0.5265)
Local adapation with distilling: 0.000748
training loss: tensor(0.9962) feature loss: tensor(0.5006)
Local adapation with distilling: 0.000748
training loss: tensor(1.1387) feature loss: tensor(0.5741)
Local adapation with distilling: 0.000748
training loss: tensor(1.0892) feature loss: tensor(0.5705)
Local adapation with distilling: 0.000748
training loss: tensor(1.0760) feature loss: tensor(0.5467)
Local adapation with distilling: 0.000748
training loss: tensor(1.1367) feature loss: tensor(0.5287)
Local adapation with distilling: 0.000748
training loss: tensor(1.1795) feature loss: tensor(0.5368)
Local adapation with distilling: 0.000748
training loss: tensor(1.0704) feature loss: tensor(0.5538)
Global Model Acc on global data: 0.3626 length of data: 10000
-------------Round number:  15  -------------
selected users: [84, 36, 57, 51, 46, 78, 93, 14, 11, 59]
random features: torch.Size([96, 64, 8, 8]) torch.Size([96])
random features: torch.Size([101, 64, 8, 8]) torch.Size([101])
random features: torch.Size([101, 64, 8, 8]) torch.Size([101])
random features: torch.Size([97, 64, 8, 8]) torch.Size([97])
random features: torch.Size([103, 64, 8, 8]) torch.Size([103])
random features: torch.Size([104, 64, 8, 8]) torch.Size([104])
random features: torch.Size([104, 64, 8, 8]) torch.Size([104])
random features: torch.Size([99, 64, 8, 8]) torch.Size([99])
random features: torch.Size([106, 64, 8, 8]) torch.Size([106])
random features: torch.Size([103, 64, 8, 8]) torch.Size([103])
all data: 1014
Local adapation with distilling: 0.00073
training loss: tensor(0.9791) feature loss: tensor(0.4322)
Local adapation with distilling: 0.00073
training loss: tensor(0.9193) feature loss: tensor(0.4426)
Local adapation with distilling: 0.00073
training loss: tensor(0.9396) feature loss: tensor(0.4112)
Local adapation with distilling: 0.00073
training loss: tensor(0.9801) feature loss: tensor(0.4293)
Local adapation with distilling: 0.00073
training loss: tensor(0.9347) feature loss: tensor(0.4332)
Local adapation with distilling: 0.00073
training loss: tensor(1.0190) feature loss: tensor(0.4336)
Local adapation with distilling: 0.00073
training loss: tensor(1.0107) feature loss: tensor(0.4238)
Local adapation with distilling: 0.00073
training loss: tensor(0.8777) feature loss: tensor(0.4369)
Local adapation with distilling: 0.00073
training loss: tensor(1.0078) feature loss: tensor(0.4417)
Local adapation with distilling: 0.00073
training loss: tensor(1.1359) feature loss: tensor(0.4361)
Global Model Acc on global data: 0.4445 length of data: 10000
save a model
-------------Round number:  16  -------------
selected users: [7, 25, 71, 42, 47, 29, 63, 88, 50, 9]
random features: torch.Size([95, 64, 8, 8]) torch.Size([95])
random features: torch.Size([100, 64, 8, 8]) torch.Size([100])
random features: torch.Size([101, 64, 8, 8]) torch.Size([101])
random features: torch.Size([95, 64, 8, 8]) torch.Size([95])
random features: torch.Size([93, 64, 8, 8]) torch.Size([93])
random features: torch.Size([109, 64, 8, 8]) torch.Size([109])
random features: torch.Size([101, 64, 8, 8]) torch.Size([101])
random features: torch.Size([96, 64, 8, 8]) torch.Size([96])
random features: torch.Size([98, 64, 8, 8]) torch.Size([98])
random features: torch.Size([102, 64, 8, 8]) torch.Size([102])
all data: 990
Local adapation with distilling: 0.000712
training loss: tensor(0.8975) feature loss: tensor(0.3352)
Local adapation with distilling: 0.000712
training loss: tensor(0.9132) feature loss: tensor(0.3573)
Local adapation with distilling: 0.000712
training loss: tensor(0.8504) feature loss: tensor(0.3307)
Local adapation with distilling: 0.000712
training loss: tensor(0.9340) feature loss: tensor(0.3468)
Local adapation with distilling: 0.000712
training loss: tensor(0.8199) feature loss: tensor(0.3396)
Local adapation with distilling: 0.000712
training loss: tensor(0.8278) feature loss: tensor(0.3446)
Local adapation with distilling: 0.000712
training loss: tensor(0.8457) feature loss: tensor(0.3547)
Local adapation with distilling: 0.000712
training loss: tensor(0.8194) feature loss: tensor(0.3405)
Local adapation with distilling: 0.000712
training loss: tensor(0.8888) feature loss: tensor(0.3666)
Local adapation with distilling: 0.000712
training loss: tensor(0.9770) feature loss: tensor(0.3511)
Global Model Acc on global data: 0.4108 length of data: 10000
-------------Round number:  17  -------------
selected users: [71, 28, 9, 4, 73, 34, 94, 92, 47, 37]
random features: torch.Size([101, 64, 8, 8]) torch.Size([101])
random features: torch.Size([102, 64, 8, 8]) torch.Size([102])
random features: torch.Size([102, 64, 8, 8]) torch.Size([102])
random features: torch.Size([98, 64, 8, 8]) torch.Size([98])
random features: torch.Size([104, 64, 8, 8]) torch.Size([104])
random features: torch.Size([95, 64, 8, 8]) torch.Size([95])
random features: torch.Size([101, 64, 8, 8]) torch.Size([101])
random features: torch.Size([93, 64, 8, 8]) torch.Size([93])
random features: torch.Size([93, 64, 8, 8]) torch.Size([93])
random features: torch.Size([101, 64, 8, 8]) torch.Size([101])
all data: 990
Local adapation with distilling: 0.000694
training loss: tensor(0.7014) feature loss: tensor(0.3127)
Local adapation with distilling: 0.000694
training loss: tensor(0.9827) feature loss: tensor(0.3306)
Local adapation with distilling: 0.000694
training loss: tensor(1.0975) feature loss: tensor(0.3295)
Local adapation with distilling: 0.000694
training loss: tensor(0.7999) feature loss: tensor(0.3220)
Local adapation with distilling: 0.000694
training loss: tensor(0.8288) feature loss: tensor(0.3385)
Local adapation with distilling: 0.000694
training loss: tensor(0.7624) feature loss: tensor(0.3159)
Local adapation with distilling: 0.000694
training loss: tensor(0.8072) feature loss: tensor(0.3110)
Local adapation with distilling: 0.000694
training loss: tensor(0.8131) feature loss: tensor(0.3389)
Local adapation with distilling: 0.000694
training loss: tensor(0.6917) feature loss: tensor(0.3201)
Local adapation with distilling: 0.000694
training loss: tensor(0.7741) feature loss: tensor(0.3038)
Global Model Acc on global data: 0.397 length of data: 10000
-------------Round number:  18  -------------
selected users: [53, 47, 43, 54, 33, 48, 0, 12, 44, 91]
random features: torch.Size([115, 64, 8, 8]) torch.Size([115])
random features: torch.Size([93, 64, 8, 8]) torch.Size([93])
random features: torch.Size([98, 64, 8, 8]) torch.Size([98])
random features: torch.Size([104, 64, 8, 8]) torch.Size([104])
random features: torch.Size([97, 64, 8, 8]) torch.Size([97])
random features: torch.Size([95, 64, 8, 8]) torch.Size([95])
random features: torch.Size([99, 64, 8, 8]) torch.Size([99])
random features: torch.Size([96, 64, 8, 8]) torch.Size([96])
random features: torch.Size([94, 64, 8, 8]) torch.Size([94])
random features: torch.Size([105, 64, 8, 8]) torch.Size([105])
all data: 996
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.8869) feature loss: tensor(0.4464)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.8405) feature loss: tensor(0.3889)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.8766) feature loss: tensor(0.4322)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.9999) feature loss: tensor(0.4063)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.9303) feature loss: tensor(0.4336)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(1.0042) feature loss: tensor(0.4302)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.9111) feature loss: tensor(0.4264)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.9839) feature loss: tensor(0.4578)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.8882) feature loss: tensor(0.4188)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.9303) feature loss: tensor(0.4260)
Global Model Acc on global data: 0.3942 length of data: 10000
-------------Round number:  19  -------------
selected users: [85, 72, 16, 18, 2, 38, 90, 30, 83, 61]
random features: torch.Size([100, 64, 8, 8]) torch.Size([100])
random features: torch.Size([115, 64, 8, 8]) torch.Size([115])
random features: torch.Size([106, 64, 8, 8]) torch.Size([106])
random features: torch.Size([99, 64, 8, 8]) torch.Size([99])
random features: torch.Size([96, 64, 8, 8]) torch.Size([96])
random features: torch.Size([109, 64, 8, 8]) torch.Size([109])
random features: torch.Size([95, 64, 8, 8]) torch.Size([95])
random features: torch.Size([95, 64, 8, 8]) torch.Size([95])
random features: torch.Size([101, 64, 8, 8]) torch.Size([101])
random features: torch.Size([101, 64, 8, 8]) torch.Size([101])
all data: 1017
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.8851) feature loss: tensor(0.3825)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.8927) feature loss: tensor(0.4028)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(1.0514) feature loss: tensor(0.3941)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(1.0395) feature loss: tensor(0.3893)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.9307) feature loss: tensor(0.3926)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.8761) feature loss: tensor(0.3863)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.9992) feature loss: tensor(0.3989)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.9229) feature loss: tensor(0.3864)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.9058) feature loss: tensor(0.3844)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.9465) feature loss: tensor(0.3651)
Global Model Acc on global data: 0.4022 length of data: 10000
-------------Round number:  20  -------------
selected users: [70, 74, 2, 44, 56, 48, 12, 36, 0, 49]
random features: torch.Size([96, 64, 8, 8]) torch.Size([96])
random features: torch.Size([96, 64, 8, 8]) torch.Size([96])
random features: torch.Size([96, 64, 8, 8]) torch.Size([96])
random features: torch.Size([94, 64, 8, 8]) torch.Size([94])
random features: torch.Size([110, 64, 8, 8]) torch.Size([110])
random features: torch.Size([95, 64, 8, 8]) torch.Size([95])
random features: torch.Size([96, 64, 8, 8]) torch.Size([96])
random features: torch.Size([101, 64, 8, 8]) torch.Size([101])
random features: torch.Size([99, 64, 8, 8]) torch.Size([99])
random features: torch.Size([99, 64, 8, 8]) torch.Size([99])
all data: 982
Local adapation with distilling: 0.00064
training loss: tensor(0.7868) feature loss: tensor(0.3561)
Local adapation with distilling: 0.00064
training loss: tensor(0.7325) feature loss: tensor(0.3338)
Local adapation with distilling: 0.00064
training loss: tensor(0.7124) feature loss: tensor(0.3437)
Local adapation with distilling: 0.00064
training loss: tensor(0.7290) feature loss: tensor(0.3430)
Local adapation with distilling: 0.00064
training loss: tensor(0.7513) feature loss: tensor(0.3488)
Local adapation with distilling: 0.00064
training loss: tensor(0.7535) feature loss: tensor(0.3454)
Local adapation with distilling: 0.00064
training loss: tensor(0.7186) feature loss: tensor(0.3481)
Local adapation with distilling: 0.00064
training loss: tensor(0.7364) feature loss: tensor(0.3425)
Local adapation with distilling: 0.00064
training loss: tensor(0.6995) feature loss: tensor(0.3497)
Local adapation with distilling: 0.00064
training loss: tensor(0.7383) feature loss: tensor(0.3433)
Global Model Acc on global data: 0.4499 length of data: 10000
save a model
-------------Round number:  21  -------------
selected users: [23, 81, 85, 34, 62, 46, 42, 31, 93, 11]
random features: torch.Size([98, 64, 8, 8]) torch.Size([98])
random features: torch.Size([102, 64, 8, 8]) torch.Size([102])
random features: torch.Size([100, 64, 8, 8]) torch.Size([100])
random features: torch.Size([95, 64, 8, 8]) torch.Size([95])
random features: torch.Size([93, 64, 8, 8]) torch.Size([93])
random features: torch.Size([103, 64, 8, 8]) torch.Size([103])
random features: torch.Size([95, 64, 8, 8]) torch.Size([95])
random features: torch.Size([97, 64, 8, 8]) torch.Size([97])
random features: torch.Size([104, 64, 8, 8]) torch.Size([104])
random features: torch.Size([106, 64, 8, 8]) torch.Size([106])
all data: 993
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.9320) feature loss: tensor(0.3854)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(1.0207) feature loss: tensor(0.3824)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.8322) feature loss: tensor(0.3569)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.8870) feature loss: tensor(0.3643)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.9148) feature loss: tensor(0.3911)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.9510) feature loss: tensor(0.3808)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.9281) feature loss: tensor(0.3693)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(1.0469) feature loss: tensor(0.3850)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.9260) feature loss: tensor(0.3723)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.8926) feature loss: tensor(0.3665)
Global Model Acc on global data: 0.4886 length of data: 10000
save a model
-------------Round number:  22  -------------
selected users: [2, 49, 82, 31, 37, 12, 87, 42, 99, 85]
random features: torch.Size([96, 64, 8, 8]) torch.Size([96])
random features: torch.Size([99, 64, 8, 8]) torch.Size([99])
random features: torch.Size([92, 64, 8, 8]) torch.Size([92])
random features: torch.Size([97, 64, 8, 8]) torch.Size([97])
random features: torch.Size([101, 64, 8, 8]) torch.Size([101])
random features: torch.Size([96, 64, 8, 8]) torch.Size([96])
random features: torch.Size([95, 64, 8, 8]) torch.Size([95])
random features: torch.Size([95, 64, 8, 8]) torch.Size([95])
random features: torch.Size([93, 64, 8, 8]) torch.Size([93])
random features: torch.Size([100, 64, 8, 8]) torch.Size([100])
all data: 964
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.6534) feature loss: tensor(0.3337)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.6723) feature loss: tensor(0.3449)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.7394) feature loss: tensor(0.3422)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.7525) feature loss: tensor(0.3033)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.7310) feature loss: tensor(0.2901)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.6320) feature loss: tensor(0.3093)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.7834) feature loss: tensor(0.3363)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.7038) feature loss: tensor(0.3277)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.7016) feature loss: tensor(0.3550)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.6312) feature loss: tensor(0.2962)
Global Model Acc on global data: 0.444 length of data: 10000
-------------Round number:  23  -------------
selected users: [26, 80, 82, 68, 77, 37, 3, 55, 20, 17]
random features: torch.Size([105, 64, 8, 8]) torch.Size([105])
random features: torch.Size([96, 64, 8, 8]) torch.Size([96])
random features: torch.Size([92, 64, 8, 8]) torch.Size([92])
random features: torch.Size([103, 64, 8, 8]) torch.Size([103])
random features: torch.Size([92, 64, 8, 8]) torch.Size([92])
random features: torch.Size([101, 64, 8, 8]) torch.Size([101])
random features: torch.Size([106, 64, 8, 8]) torch.Size([106])
random features: torch.Size([96, 64, 8, 8]) torch.Size([96])
random features: torch.Size([95, 64, 8, 8]) torch.Size([95])
random features: torch.Size([107, 64, 8, 8]) torch.Size([107])
all data: 993
Local adapation with distilling: 0.000586
training loss: tensor(0.7549) feature loss: tensor(0.3437)
Local adapation with distilling: 0.000586
training loss: tensor(0.8288) feature loss: tensor(0.3383)
Local adapation with distilling: 0.000586
training loss: tensor(0.7507) feature loss: tensor(0.3369)
Local adapation with distilling: 0.000586
training loss: tensor(0.7540) feature loss: tensor(0.3441)
Local adapation with distilling: 0.000586
training loss: tensor(0.8108) feature loss: tensor(0.3429)
Local adapation with distilling: 0.000586
training loss: tensor(0.7519) feature loss: tensor(0.3224)
Local adapation with distilling: 0.000586
training loss: tensor(0.8938) feature loss: tensor(0.3529)
Local adapation with distilling: 0.000586
training loss: tensor(0.7950) feature loss: tensor(0.3563)
Local adapation with distilling: 0.000586
training loss: tensor(0.7884) feature loss: tensor(0.3467)
Local adapation with distilling: 0.000586
training loss: tensor(0.8027) feature loss: tensor(0.3475)
Global Model Acc on global data: 0.4315 length of data: 10000
-------------Round number:  24  -------------
selected users: [26, 31, 37, 86, 76, 14, 88, 48, 71, 67]
random features: torch.Size([105, 64, 8, 8]) torch.Size([105])
random features: torch.Size([97, 64, 8, 8]) torch.Size([97])
random features: torch.Size([101, 64, 8, 8]) torch.Size([101])
random features: torch.Size([106, 64, 8, 8]) torch.Size([106])
random features: torch.Size([106, 64, 8, 8]) torch.Size([106])
random features: torch.Size([99, 64, 8, 8]) torch.Size([99])
random features: torch.Size([96, 64, 8, 8]) torch.Size([96])
random features: torch.Size([95, 64, 8, 8]) torch.Size([95])
random features: torch.Size([101, 64, 8, 8]) torch.Size([101])
random features: torch.Size([94, 64, 8, 8]) torch.Size([94])
all data: 1000
Local adapation with distilling: 0.000568
training loss: tensor(0.6417) feature loss: tensor(0.3092)
Local adapation with distilling: 0.000568
training loss: tensor(0.7259) feature loss: tensor(0.3244)
Local adapation with distilling: 0.000568
training loss: tensor(0.6122) feature loss: tensor(0.3007)
Local adapation with distilling: 0.000568
training loss: tensor(0.6812) feature loss: tensor(0.3045)
Local adapation with distilling: 0.000568
training loss: tensor(0.7912) feature loss: tensor(0.3091)
Local adapation with distilling: 0.000568
training loss: tensor(0.6898) feature loss: tensor(0.3192)
Local adapation with distilling: 0.000568
training loss: tensor(0.6809) feature loss: tensor(0.3172)
Local adapation with distilling: 0.000568
training loss: tensor(0.6989) feature loss: tensor(0.3169)
Local adapation with distilling: 0.000568
training loss: tensor(0.7184) feature loss: tensor(0.3220)
Local adapation with distilling: 0.000568
training loss: tensor(0.7373) feature loss: tensor(0.3091)
Global Model Acc on global data: 0.4412 length of data: 10000
-------------Round number:  25  -------------
selected users: [41, 29, 33, 65, 74, 6, 57, 89, 87, 98]
random features: torch.Size([95, 64, 8, 8]) torch.Size([95])
random features: torch.Size([109, 64, 8, 8]) torch.Size([109])
random features: torch.Size([97, 64, 8, 8]) torch.Size([97])
random features: torch.Size([99, 64, 8, 8]) torch.Size([99])
random features: torch.Size([96, 64, 8, 8]) torch.Size([96])
random features: torch.Size([104, 64, 8, 8]) torch.Size([104])
random features: torch.Size([101, 64, 8, 8]) torch.Size([101])
random features: torch.Size([108, 64, 8, 8]) torch.Size([108])
random features: torch.Size([95, 64, 8, 8]) torch.Size([95])
random features: torch.Size([96, 64, 8, 8]) torch.Size([96])
all data: 1000
Local adapation with distilling: 0.00055
training loss: tensor(0.7379) feature loss: tensor(0.2924)
Local adapation with distilling: 0.00055
training loss: tensor(0.7373) feature loss: tensor(0.3033)
Local adapation with distilling: 0.00055
training loss: tensor(0.7417) feature loss: tensor(0.3131)
Local adapation with distilling: 0.00055
training loss: tensor(0.7562) feature loss: tensor(0.3203)
Local adapation with distilling: 0.00055
training loss: tensor(0.6938) feature loss: tensor(0.2978)
Local adapation with distilling: 0.00055
training loss: tensor(0.7855) feature loss: tensor(0.3015)
Local adapation with distilling: 0.00055
training loss: tensor(0.7122) feature loss: tensor(0.2935)
Local adapation with distilling: 0.00055
training loss: tensor(0.7383) feature loss: tensor(0.3074)
Local adapation with distilling: 0.00055
training loss: tensor(0.7533) feature loss: tensor(0.3248)
Local adapation with distilling: 0.00055
training loss: tensor(0.7002) feature loss: tensor(0.2957)
Global Model Acc on global data: 0.4546 length of data: 10000
-------------Round number:  26  -------------
selected users: [8, 69, 84, 41, 25, 5, 63, 95, 33, 70]
random features: torch.Size([96, 64, 8, 8]) torch.Size([96])
random features: torch.Size([98, 64, 8, 8]) torch.Size([98])
random features: torch.Size([96, 64, 8, 8]) torch.Size([96])
random features: torch.Size([95, 64, 8, 8]) torch.Size([95])
random features: torch.Size([100, 64, 8, 8]) torch.Size([100])
random features: torch.Size([102, 64, 8, 8]) torch.Size([102])
random features: torch.Size([101, 64, 8, 8]) torch.Size([101])
random features: torch.Size([100, 64, 8, 8]) torch.Size([100])
random features: torch.Size([97, 64, 8, 8]) torch.Size([97])
random features: torch.Size([96, 64, 8, 8]) torch.Size([96])
all data: 981
Local adapation with distilling: 0.000532
training loss: tensor(0.8472) feature loss: tensor(0.4008)
Local adapation with distilling: 0.000532
training loss: tensor(0.8489) feature loss: tensor(0.3905)
Local adapation with distilling: 0.000532
training loss: tensor(0.8702) feature loss: tensor(0.3692)
Local adapation with distilling: 0.000532
training loss: tensor(0.7884) feature loss: tensor(0.3627)
Local adapation with distilling: 0.000532
training loss: tensor(0.9357) feature loss: tensor(0.4225)
Local adapation with distilling: 0.000532
training loss: tensor(1.0358) feature loss: tensor(0.3906)
Local adapation with distilling: 0.000532
training loss: tensor(0.8359) feature loss: tensor(0.3897)
Local adapation with distilling: 0.000532
training loss: tensor(0.8673) feature loss: tensor(0.3803)
Local adapation with distilling: 0.000532
training loss: tensor(0.7908) feature loss: tensor(0.3766)
Local adapation with distilling: 0.000532
training loss: tensor(0.8473) feature loss: tensor(0.3991)
Global Model Acc on global data: 0.4522 length of data: 10000
-------------Round number:  27  -------------
selected users: [89, 68, 43, 50, 40, 95, 27, 85, 22, 44]
random features: torch.Size([108, 64, 8, 8]) torch.Size([108])
random features: torch.Size([103, 64, 8, 8]) torch.Size([103])
random features: torch.Size([98, 64, 8, 8]) torch.Size([98])
random features: torch.Size([98, 64, 8, 8]) torch.Size([98])
random features: torch.Size([92, 64, 8, 8]) torch.Size([92])
random features: torch.Size([100, 64, 8, 8]) torch.Size([100])
random features: torch.Size([97, 64, 8, 8]) torch.Size([97])
random features: torch.Size([100, 64, 8, 8]) torch.Size([100])
random features: torch.Size([102, 64, 8, 8]) torch.Size([102])
random features: torch.Size([94, 64, 8, 8]) torch.Size([94])
all data: 992
Local adapation with distilling: 0.000514
training loss: tensor(0.7254) feature loss: tensor(0.2932)
Local adapation with distilling: 0.000514
training loss: tensor(0.7484) feature loss: tensor(0.2998)
Local adapation with distilling: 0.000514
training loss: tensor(0.7116) feature loss: tensor(0.3105)
Local adapation with distilling: 0.000514
training loss: tensor(0.7470) feature loss: tensor(0.3103)
Local adapation with distilling: 0.000514
training loss: tensor(0.7765) feature loss: tensor(0.3105)
Local adapation with distilling: 0.000514
training loss: tensor(0.7398) feature loss: tensor(0.2931)
Local adapation with distilling: 0.000514
training loss: tensor(0.8727) feature loss: tensor(0.2827)
Local adapation with distilling: 0.000514
training loss: tensor(0.6995) feature loss: tensor(0.2936)
Local adapation with distilling: 0.000514
training loss: tensor(1.1338) feature loss: tensor(0.3104)
Local adapation with distilling: 0.000514
training loss: tensor(0.7623) feature loss: tensor(0.2990)
Global Model Acc on global data: 0.4635 length of data: 10000
-------------Round number:  28  -------------
selected users: [67, 14, 0, 86, 13, 18, 30, 36, 52, 95]
random features: torch.Size([94, 64, 8, 8]) torch.Size([94])
random features: torch.Size([99, 64, 8, 8]) torch.Size([99])
random features: torch.Size([99, 64, 8, 8]) torch.Size([99])
random features: torch.Size([106, 64, 8, 8]) torch.Size([106])
random features: torch.Size([101, 64, 8, 8]) torch.Size([101])
random features: torch.Size([99, 64, 8, 8]) torch.Size([99])
random features: torch.Size([95, 64, 8, 8]) torch.Size([95])
random features: torch.Size([101, 64, 8, 8]) torch.Size([101])
random features: torch.Size([102, 64, 8, 8]) torch.Size([102])
random features: torch.Size([100, 64, 8, 8]) torch.Size([100])
all data: 996
Local adapation with distilling: 0.000496
training loss: tensor(0.7377) feature loss: tensor(0.3033)
Local adapation with distilling: 0.000496
training loss: tensor(0.6768) feature loss: tensor(0.2933)
Local adapation with distilling: 0.000496
training loss: tensor(0.7228) feature loss: tensor(0.3122)
Local adapation with distilling: 0.000496
training loss: tensor(0.7053) feature loss: tensor(0.3094)
Local adapation with distilling: 0.000496
training loss: tensor(0.7185) feature loss: tensor(0.3013)
Local adapation with distilling: 0.000496
training loss: tensor(0.8086) feature loss: tensor(0.3159)
Local adapation with distilling: 0.000496
training loss: tensor(0.7536) feature loss: tensor(0.3115)
Local adapation with distilling: 0.000496
training loss: tensor(0.6801) feature loss: tensor(0.3050)
Local adapation with distilling: 0.000496
training loss: tensor(1.0281) feature loss: tensor(0.3223)
Local adapation with distilling: 0.000496
training loss: tensor(0.6734) feature loss: tensor(0.3079)
Global Model Acc on global data: 0.474 length of data: 10000
-------------Round number:  29  -------------
selected users: [73, 8, 10, 7, 19, 71, 92, 25, 38, 12]
random features: torch.Size([104, 64, 8, 8]) torch.Size([104])
random features: torch.Size([96, 64, 8, 8]) torch.Size([96])
random features: torch.Size([93, 64, 8, 8]) torch.Size([93])
random features: torch.Size([95, 64, 8, 8]) torch.Size([95])
random features: torch.Size([100, 64, 8, 8]) torch.Size([100])
random features: torch.Size([101, 64, 8, 8]) torch.Size([101])
random features: torch.Size([93, 64, 8, 8]) torch.Size([93])
random features: torch.Size([100, 64, 8, 8]) torch.Size([100])
random features: torch.Size([109, 64, 8, 8]) torch.Size([109])
random features: torch.Size([96, 64, 8, 8]) torch.Size([96])
all data: 987
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.7689) feature loss: tensor(0.3244)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.7480) feature loss: tensor(0.3209)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.8073) feature loss: tensor(0.3303)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.8353) feature loss: tensor(0.3229)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.7850) feature loss: tensor(0.3154)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.7291) feature loss: tensor(0.3150)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.7958) feature loss: tensor(0.3134)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.8120) feature loss: tensor(0.3232)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.7140) feature loss: tensor(0.3173)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.7319) feature loss: tensor(0.3232)
Global Model Acc on global data: 0.488 length of data: 10000
-------------Round number:  30  -------------
selected users: [20, 91, 34, 52, 8, 74, 21, 88, 80, 89]
random features: torch.Size([95, 64, 8, 8]) torch.Size([95])
random features: torch.Size([105, 64, 8, 8]) torch.Size([105])
random features: torch.Size([95, 64, 8, 8]) torch.Size([95])
random features: torch.Size([102, 64, 8, 8]) torch.Size([102])
random features: torch.Size([96, 64, 8, 8]) torch.Size([96])
random features: torch.Size([96, 64, 8, 8]) torch.Size([96])
random features: torch.Size([94, 64, 8, 8]) torch.Size([94])
random features: torch.Size([96, 64, 8, 8]) torch.Size([96])
random features: torch.Size([96, 64, 8, 8]) torch.Size([96])
random features: torch.Size([108, 64, 8, 8]) torch.Size([108])
all data: 983
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.5906) feature loss: tensor(0.2490)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.6546) feature loss: tensor(0.2648)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.5799) feature loss: tensor(0.2494)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.7952) feature loss: tensor(0.2578)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.5290) feature loss: tensor(0.2506)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.5343) feature loss: tensor(0.2468)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.5651) feature loss: tensor(0.2522)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.5504) feature loss: tensor(0.2504)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.5816) feature loss: tensor(0.2558)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.5516) feature loss: tensor(0.2534)
Global Model Acc on global data: 0.4338 length of data: 10000
-------------Round number:  31  -------------
selected users: [17, 33, 76, 3, 56, 0, 37, 8, 60, 67]
random features: torch.Size([107, 64, 8, 8]) torch.Size([107])
random features: torch.Size([97, 64, 8, 8]) torch.Size([97])
random features: torch.Size([106, 64, 8, 8]) torch.Size([106])
random features: torch.Size([106, 64, 8, 8]) torch.Size([106])
random features: torch.Size([110, 64, 8, 8]) torch.Size([110])
random features: torch.Size([99, 64, 8, 8]) torch.Size([99])
random features: torch.Size([101, 64, 8, 8]) torch.Size([101])
random features: torch.Size([96, 64, 8, 8]) torch.Size([96])
random features: torch.Size([96, 64, 8, 8]) torch.Size([96])
random features: torch.Size([94, 64, 8, 8]) torch.Size([94])
all data: 1012
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.7591) feature loss: tensor(0.3083)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.6331) feature loss: tensor(0.3065)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.7412) feature loss: tensor(0.3050)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.7676) feature loss: tensor(0.3100)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.6676) feature loss: tensor(0.3073)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.6411) feature loss: tensor(0.3031)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.6673) feature loss: tensor(0.2897)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.6102) feature loss: tensor(0.3044)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.6857) feature loss: tensor(0.3133)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.6640) feature loss: tensor(0.2847)
Global Model Acc on global data: 0.4652 length of data: 10000
-------------Round number:  32  -------------
selected users: [22, 39, 85, 97, 55, 33, 80, 13, 27, 96]
random features: torch.Size([102, 64, 8, 8]) torch.Size([102])
random features: torch.Size([103, 64, 8, 8]) torch.Size([103])
random features: torch.Size([100, 64, 8, 8]) torch.Size([100])
random features: torch.Size([95, 64, 8, 8]) torch.Size([95])
random features: torch.Size([96, 64, 8, 8]) torch.Size([96])
random features: torch.Size([97, 64, 8, 8]) torch.Size([97])
random features: torch.Size([96, 64, 8, 8]) torch.Size([96])
random features: torch.Size([101, 64, 8, 8]) torch.Size([101])
random features: torch.Size([97, 64, 8, 8]) torch.Size([97])
random features: torch.Size([102, 64, 8, 8]) torch.Size([102])
all data: 989
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(1.4805) feature loss: tensor(0.3345)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(1.0577) feature loss: tensor(0.3493)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.7694) feature loss: tensor(0.3209)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.8682) feature loss: tensor(0.3462)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.8722) feature loss: tensor(0.3294)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.7407) feature loss: tensor(0.3245)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.7749) feature loss: tensor(0.3200)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.7850) feature loss: tensor(0.3230)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.9352) feature loss: tensor(0.3117)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(1.0269) feature loss: tensor(0.3339)
Global Model Acc on global data: 0.4689 length of data: 10000
-------------Round number:  33  -------------
selected users: [56, 90, 95, 82, 60, 71, 6, 81, 2, 70]
random features: torch.Size([110, 64, 8, 8]) torch.Size([110])
random features: torch.Size([95, 64, 8, 8]) torch.Size([95])
random features: torch.Size([100, 64, 8, 8]) torch.Size([100])
random features: torch.Size([92, 64, 8, 8]) torch.Size([92])
random features: torch.Size([96, 64, 8, 8]) torch.Size([96])
random features: torch.Size([101, 64, 8, 8]) torch.Size([101])
random features: torch.Size([104, 64, 8, 8]) torch.Size([104])
random features: torch.Size([102, 64, 8, 8]) torch.Size([102])
random features: torch.Size([96, 64, 8, 8]) torch.Size([96])
random features: torch.Size([96, 64, 8, 8]) torch.Size([96])
all data: 992
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.6708) feature loss: tensor(0.3064)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.7340) feature loss: tensor(0.3109)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.6550) feature loss: tensor(0.3049)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.7057) feature loss: tensor(0.3213)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.6662) feature loss: tensor(0.3066)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.6674) feature loss: tensor(0.3017)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.7641) feature loss: tensor(0.3028)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.9741) feature loss: tensor(0.3118)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.6638) feature loss: tensor(0.3115)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.6908) feature loss: tensor(0.3186)
Global Model Acc on global data: 0.4692 length of data: 10000
-------------Round number:  34  -------------
selected users: [14, 74, 15, 4, 32, 59, 91, 10, 50, 53]
random features: torch.Size([99, 64, 8, 8]) torch.Size([99])
random features: torch.Size([96, 64, 8, 8]) torch.Size([96])
random features: torch.Size([103, 64, 8, 8]) torch.Size([103])
random features: torch.Size([98, 64, 8, 8]) torch.Size([98])
random features: torch.Size([99, 64, 8, 8]) torch.Size([99])
random features: torch.Size([103, 64, 8, 8]) torch.Size([103])
random features: torch.Size([105, 64, 8, 8]) torch.Size([105])
random features: torch.Size([93, 64, 8, 8]) torch.Size([93])
random features: torch.Size([98, 64, 8, 8]) torch.Size([98])
random features: torch.Size([115, 64, 8, 8]) torch.Size([115])
all data: 1009
Local adapation with distilling: 0.000388
training loss: tensor(0.7981) feature loss: tensor(0.3477)
Local adapation with distilling: 0.000388
training loss: tensor(0.7508) feature loss: tensor(0.3323)
Local adapation with distilling: 0.000388
training loss: tensor(0.9323) feature loss: tensor(0.3475)
Local adapation with distilling: 0.000388
training loss: tensor(0.9048) feature loss: tensor(0.3423)
Local adapation with distilling: 0.000388
training loss: tensor(0.9883) feature loss: tensor(0.3501)
Local adapation with distilling: 0.000388
training loss: tensor(0.9373) feature loss: tensor(0.3492)
Local adapation with distilling: 0.000388
training loss: tensor(0.8014) feature loss: tensor(0.3348)
Local adapation with distilling: 0.000388
training loss: tensor(0.8854) feature loss: tensor(0.3494)
Local adapation with distilling: 0.000388
training loss: tensor(0.7767) feature loss: tensor(0.3346)
Local adapation with distilling: 0.000388
training loss: tensor(0.8335) feature loss: tensor(0.3576)
Global Model Acc on global data: 0.4903 length of data: 10000
save a model
-------------Round number:  35  -------------
selected users: [40, 71, 98, 27, 70, 31, 10, 24, 51, 35]
random features: torch.Size([92, 64, 8, 8]) torch.Size([92])
random features: torch.Size([101, 64, 8, 8]) torch.Size([101])
random features: torch.Size([96, 64, 8, 8]) torch.Size([96])
random features: torch.Size([97, 64, 8, 8]) torch.Size([97])
random features: torch.Size([96, 64, 8, 8]) torch.Size([96])
random features: torch.Size([97, 64, 8, 8]) torch.Size([97])
random features: torch.Size([93, 64, 8, 8]) torch.Size([93])
random features: torch.Size([98, 64, 8, 8]) torch.Size([98])
random features: torch.Size([97, 64, 8, 8]) torch.Size([97])
random features: torch.Size([106, 64, 8, 8]) torch.Size([106])
all data: 973
Local adapation with distilling: 0.00037
training loss: tensor(0.7161) feature loss: tensor(0.2823)
Local adapation with distilling: 0.00037
training loss: tensor(0.6033) feature loss: tensor(0.2468)
Local adapation with distilling: 0.00037
training loss: tensor(0.6244) feature loss: tensor(0.2523)
Local adapation with distilling: 0.00037
training loss: tensor(0.7303) feature loss: tensor(0.2446)
Local adapation with distilling: 0.00037
training loss: tensor(0.6227) feature loss: tensor(0.2776)
Local adapation with distilling: 0.00037
training loss: tensor(0.6849) feature loss: tensor(0.2674)
Local adapation with distilling: 0.00037
training loss: tensor(0.6344) feature loss: tensor(0.2657)
Local adapation with distilling: 0.00037
training loss: tensor(0.7123) feature loss: tensor(0.2538)
Local adapation with distilling: 0.00037
training loss: tensor(0.6951) feature loss: tensor(0.2713)
Local adapation with distilling: 0.00037
training loss: tensor(0.7206) feature loss: tensor(0.2610)
Global Model Acc on global data: 0.4588 length of data: 10000
-------------Round number:  36  -------------
selected users: [59, 42, 2, 27, 28, 75, 58, 68, 52, 74]
random features: torch.Size([103, 64, 8, 8]) torch.Size([103])
random features: torch.Size([95, 64, 8, 8]) torch.Size([95])
random features: torch.Size([96, 64, 8, 8]) torch.Size([96])
random features: torch.Size([97, 64, 8, 8]) torch.Size([97])
random features: torch.Size([102, 64, 8, 8]) torch.Size([102])
random features: torch.Size([96, 64, 8, 8]) torch.Size([96])
random features: torch.Size([101, 64, 8, 8]) torch.Size([101])
random features: torch.Size([103, 64, 8, 8]) torch.Size([103])
random features: torch.Size([102, 64, 8, 8]) torch.Size([102])
random features: torch.Size([96, 64, 8, 8]) torch.Size([96])
all data: 991
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.7147) feature loss: tensor(0.2811)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.7371) feature loss: tensor(0.2632)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.6464) feature loss: tensor(0.2800)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.7085) feature loss: tensor(0.2700)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(1.0113) feature loss: tensor(0.2909)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.7105) feature loss: tensor(0.2864)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.7066) feature loss: tensor(0.2908)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.7237) feature loss: tensor(0.2772)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.8575) feature loss: tensor(0.2945)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.6053) feature loss: tensor(0.2767)
Global Model Acc on global data: 0.4945 length of data: 10000
save a model
-------------Round number:  37  -------------
selected users: [61, 49, 86, 78, 5, 91, 81, 82, 89, 18]
random features: torch.Size([101, 64, 8, 8]) torch.Size([101])
random features: torch.Size([99, 64, 8, 8]) torch.Size([99])
random features: torch.Size([106, 64, 8, 8]) torch.Size([106])
random features: torch.Size([104, 64, 8, 8]) torch.Size([104])
random features: torch.Size([102, 64, 8, 8]) torch.Size([102])
random features: torch.Size([105, 64, 8, 8]) torch.Size([105])
random features: torch.Size([102, 64, 8, 8]) torch.Size([102])
random features: torch.Size([92, 64, 8, 8]) torch.Size([92])
random features: torch.Size([108, 64, 8, 8]) torch.Size([108])
random features: torch.Size([99, 64, 8, 8]) torch.Size([99])
all data: 1018
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.7271) feature loss: tensor(0.2663)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.7094) feature loss: tensor(0.2764)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.7194) feature loss: tensor(0.2770)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.8119) feature loss: tensor(0.2816)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.8350) feature loss: tensor(0.2702)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.7100) feature loss: tensor(0.2744)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.8297) feature loss: tensor(0.2729)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.7157) feature loss: tensor(0.2796)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.7197) feature loss: tensor(0.2743)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.7605) feature loss: tensor(0.2757)
Global Model Acc on global data: 0.5049 length of data: 10000
save a model
-------------Round number:  38  -------------
selected users: [40, 73, 49, 45, 64, 16, 69, 17, 72, 66]
random features: torch.Size([92, 64, 8, 8]) torch.Size([92])
random features: torch.Size([104, 64, 8, 8]) torch.Size([104])
random features: torch.Size([99, 64, 8, 8]) torch.Size([99])
random features: torch.Size([100, 64, 8, 8]) torch.Size([100])
random features: torch.Size([98, 64, 8, 8]) torch.Size([98])
random features: torch.Size([106, 64, 8, 8]) torch.Size([106])
random features: torch.Size([98, 64, 8, 8]) torch.Size([98])
random features: torch.Size([107, 64, 8, 8]) torch.Size([107])
random features: torch.Size([115, 64, 8, 8]) torch.Size([115])
random features: torch.Size([108, 64, 8, 8]) torch.Size([108])
all data: 1027
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.7570) feature loss: tensor(0.3726)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.8263) feature loss: tensor(0.3356)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.7455) feature loss: tensor(0.2929)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.8121) feature loss: tensor(0.3239)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(1.0052) feature loss: tensor(0.2929)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.9421) feature loss: tensor(0.3775)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.7588) feature loss: tensor(0.3333)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.7850) feature loss: tensor(0.2963)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.7845) feature loss: tensor(0.3245)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.8375) feature loss: tensor(0.2966)
Global Model Acc on global data: 0.4888 length of data: 10000
-------------Round number:  39  -------------
selected users: [22, 53, 84, 57, 87, 58, 29, 21, 85, 79]
random features: torch.Size([102, 64, 8, 8]) torch.Size([102])
random features: torch.Size([115, 64, 8, 8]) torch.Size([115])
random features: torch.Size([96, 64, 8, 8]) torch.Size([96])
random features: torch.Size([101, 64, 8, 8]) torch.Size([101])
random features: torch.Size([95, 64, 8, 8]) torch.Size([95])
random features: torch.Size([101, 64, 8, 8]) torch.Size([101])
random features: torch.Size([109, 64, 8, 8]) torch.Size([109])
random features: torch.Size([94, 64, 8, 8]) torch.Size([94])
random features: torch.Size([100, 64, 8, 8]) torch.Size([100])
random features: torch.Size([99, 64, 8, 8]) torch.Size([99])
all data: 1012
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(1.1043) feature loss: tensor(0.2903)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.7033) feature loss: tensor(0.2919)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.8133) feature loss: tensor(0.2993)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.7751) feature loss: tensor(0.2768)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.7994) feature loss: tensor(0.2986)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.7206) feature loss: tensor(0.2771)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.7405) feature loss: tensor(0.2884)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.7627) feature loss: tensor(0.2958)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.7051) feature loss: tensor(0.2816)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.7917) feature loss: tensor(0.2906)
Global Model Acc on global data: 0.4968 length of data: 10000
-------------Round number:  40  -------------
selected users: [79, 75, 63, 15, 38, 11, 40, 45, 39, 62]
random features: torch.Size([99, 64, 8, 8]) torch.Size([99])
random features: torch.Size([96, 64, 8, 8]) torch.Size([96])
random features: torch.Size([101, 64, 8, 8]) torch.Size([101])
random features: torch.Size([103, 64, 8, 8]) torch.Size([103])
random features: torch.Size([109, 64, 8, 8]) torch.Size([109])
random features: torch.Size([106, 64, 8, 8]) torch.Size([106])
random features: torch.Size([92, 64, 8, 8]) torch.Size([92])
random features: torch.Size([100, 64, 8, 8]) torch.Size([100])
random features: torch.Size([103, 64, 8, 8]) torch.Size([103])
random features: torch.Size([93, 64, 8, 8]) torch.Size([93])
all data: 1002
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.6640) feature loss: tensor(0.2623)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.7003) feature loss: tensor(0.2671)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.7016) feature loss: tensor(0.2587)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.9407) feature loss: tensor(0.2695)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.6511) feature loss: tensor(0.2631)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.6857) feature loss: tensor(0.2628)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.6783) feature loss: tensor(0.2636)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.7050) feature loss: tensor(0.2716)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.7509) feature loss: tensor(0.2692)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.7326) feature loss: tensor(0.2729)
Global Model Acc on global data: 0.5071 length of data: 10000
save a model
-------------Round number:  41  -------------
selected users: [42, 94, 37, 6, 79, 32, 24, 0, 33, 93]
random features: torch.Size([95, 64, 8, 8]) torch.Size([95])
random features: torch.Size([101, 64, 8, 8]) torch.Size([101])
random features: torch.Size([101, 64, 8, 8]) torch.Size([101])
random features: torch.Size([104, 64, 8, 8]) torch.Size([104])
random features: torch.Size([99, 64, 8, 8]) torch.Size([99])
random features: torch.Size([99, 64, 8, 8]) torch.Size([99])
random features: torch.Size([98, 64, 8, 8]) torch.Size([98])
random features: torch.Size([99, 64, 8, 8]) torch.Size([99])
random features: torch.Size([97, 64, 8, 8]) torch.Size([97])
random features: torch.Size([104, 64, 8, 8]) torch.Size([104])
all data: 997
Local adapation with distilling: 0.000262
training loss: tensor(0.7513) feature loss: tensor(0.2413)
Local adapation with distilling: 0.000262
training loss: tensor(0.8302) feature loss: tensor(0.2327)
Local adapation with distilling: 0.000262
training loss: tensor(0.7129) feature loss: tensor(0.2404)
Local adapation with distilling: 0.000262
training loss: tensor(0.7719) feature loss: tensor(0.2379)
Local adapation with distilling: 0.000262
training loss: tensor(0.6529) feature loss: tensor(0.2422)
Local adapation with distilling: 0.000262
training loss: tensor(0.8375) feature loss: tensor(0.2408)
Local adapation with distilling: 0.000262
training loss: tensor(0.7446) feature loss: tensor(0.2436)
Local adapation with distilling: 0.000262
training loss: tensor(0.6849) feature loss: tensor(0.2349)
Local adapation with distilling: 0.000262
training loss: tensor(0.6888) feature loss: tensor(0.2444)
Local adapation with distilling: 0.000262
training loss: tensor(0.8116) feature loss: tensor(0.2406)
Global Model Acc on global data: 0.4778 length of data: 10000
-------------Round number:  42  -------------
selected users: [83, 53, 70, 45, 44, 39, 22, 80, 10, 0]
random features: torch.Size([101, 64, 8, 8]) torch.Size([101])
random features: torch.Size([115, 64, 8, 8]) torch.Size([115])
random features: torch.Size([96, 64, 8, 8]) torch.Size([96])
random features: torch.Size([100, 64, 8, 8]) torch.Size([100])
random features: torch.Size([94, 64, 8, 8]) torch.Size([94])
random features: torch.Size([103, 64, 8, 8]) torch.Size([103])
random features: torch.Size([102, 64, 8, 8]) torch.Size([102])
random features: torch.Size([96, 64, 8, 8]) torch.Size([96])
random features: torch.Size([93, 64, 8, 8]) torch.Size([93])
random features: torch.Size([99, 64, 8, 8]) torch.Size([99])
all data: 999
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.6680) feature loss: tensor(0.2529)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.5735) feature loss: tensor(0.2525)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.5980) feature loss: tensor(0.2546)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.6191) feature loss: tensor(0.2521)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.6718) feature loss: tensor(0.2446)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.6341) feature loss: tensor(0.2505)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.9388) feature loss: tensor(0.2553)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.6445) feature loss: tensor(0.2505)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.6351) feature loss: tensor(0.2525)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.5904) feature loss: tensor(0.2453)
Global Model Acc on global data: 0.4481 length of data: 10000
-------------Round number:  43  -------------
selected users: [20, 2, 15, 22, 57, 91, 69, 55, 11, 79]
random features: torch.Size([95, 64, 8, 8]) torch.Size([95])
random features: torch.Size([96, 64, 8, 8]) torch.Size([96])
random features: torch.Size([103, 64, 8, 8]) torch.Size([103])
random features: torch.Size([102, 64, 8, 8]) torch.Size([102])
random features: torch.Size([101, 64, 8, 8]) torch.Size([101])
random features: torch.Size([105, 64, 8, 8]) torch.Size([105])
random features: torch.Size([98, 64, 8, 8]) torch.Size([98])
random features: torch.Size([96, 64, 8, 8]) torch.Size([96])
random features: torch.Size([106, 64, 8, 8]) torch.Size([106])
random features: torch.Size([99, 64, 8, 8]) torch.Size([99])
all data: 1001
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.7006) feature loss: tensor(0.2405)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.5999) feature loss: tensor(0.2356)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.6817) feature loss: tensor(0.2362)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.8857) feature loss: tensor(0.2260)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.6789) feature loss: tensor(0.2326)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.6084) feature loss: tensor(0.2358)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.6073) feature loss: tensor(0.2340)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.6546) feature loss: tensor(0.2338)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.6264) feature loss: tensor(0.2397)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.5633) feature loss: tensor(0.2298)
Global Model Acc on global data: 0.4808 length of data: 10000
-------------Round number:  44  -------------
selected users: [42, 54, 27, 93, 39, 65, 7, 26, 24, 60]
random features: torch.Size([95, 64, 8, 8]) torch.Size([95])
random features: torch.Size([104, 64, 8, 8]) torch.Size([104])
random features: torch.Size([97, 64, 8, 8]) torch.Size([97])
random features: torch.Size([104, 64, 8, 8]) torch.Size([104])
random features: torch.Size([103, 64, 8, 8]) torch.Size([103])
random features: torch.Size([99, 64, 8, 8]) torch.Size([99])
random features: torch.Size([95, 64, 8, 8]) torch.Size([95])
random features: torch.Size([105, 64, 8, 8]) torch.Size([105])
random features: torch.Size([98, 64, 8, 8]) torch.Size([98])
random features: torch.Size([96, 64, 8, 8]) torch.Size([96])
all data: 996
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.6920) feature loss: tensor(0.2110)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.8334) feature loss: tensor(0.2115)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.7322) feature loss: tensor(0.2207)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.7120) feature loss: tensor(0.2190)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.6940) feature loss: tensor(0.2125)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.6585) feature loss: tensor(0.2195)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.7472) feature loss: tensor(0.2211)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.6384) feature loss: tensor(0.2179)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.6453) feature loss: tensor(0.2114)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.6786) feature loss: tensor(0.2128)
Global Model Acc on global data: 0.4825 length of data: 10000
-------------Round number:  45  -------------
selected users: [0, 1, 62, 76, 37, 99, 78, 38, 2, 84]
random features: torch.Size([99, 64, 8, 8]) torch.Size([99])
random features: torch.Size([104, 64, 8, 8]) torch.Size([104])
random features: torch.Size([93, 64, 8, 8]) torch.Size([93])
random features: torch.Size([106, 64, 8, 8]) torch.Size([106])
random features: torch.Size([101, 64, 8, 8]) torch.Size([101])
random features: torch.Size([93, 64, 8, 8]) torch.Size([93])
random features: torch.Size([104, 64, 8, 8]) torch.Size([104])
random features: torch.Size([109, 64, 8, 8]) torch.Size([109])
random features: torch.Size([96, 64, 8, 8]) torch.Size([96])
random features: torch.Size([96, 64, 8, 8]) torch.Size([96])
all data: 1001
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.6229) feature loss: tensor(0.2269)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.7629) feature loss: tensor(0.2252)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.7345) feature loss: tensor(0.2232)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.8071) feature loss: tensor(0.2275)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.6726) feature loss: tensor(0.2198)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.7465) feature loss: tensor(0.2238)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.7689) feature loss: tensor(0.2378)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.6481) feature loss: tensor(0.2342)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.6465) feature loss: tensor(0.2199)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.7605) feature loss: tensor(0.2304)
Global Model Acc on global data: 0.4827 length of data: 10000
-------------Round number:  46  -------------
selected users: [71, 33, 37, 10, 44, 34, 24, 98, 73, 95]
random features: torch.Size([101, 64, 8, 8]) torch.Size([101])
random features: torch.Size([97, 64, 8, 8]) torch.Size([97])
random features: torch.Size([101, 64, 8, 8]) torch.Size([101])
random features: torch.Size([93, 64, 8, 8]) torch.Size([93])
random features: torch.Size([94, 64, 8, 8]) torch.Size([94])
random features: torch.Size([95, 64, 8, 8]) torch.Size([95])
random features: torch.Size([98, 64, 8, 8]) torch.Size([98])
random features: torch.Size([96, 64, 8, 8]) torch.Size([96])
random features: torch.Size([104, 64, 8, 8]) torch.Size([104])
random features: torch.Size([100, 64, 8, 8]) torch.Size([100])
all data: 979
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.5478) feature loss: tensor(0.2142)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.5538) feature loss: tensor(0.2080)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.5326) feature loss: tensor(0.2044)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.5864) feature loss: tensor(0.2142)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.6026) feature loss: tensor(0.2094)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.6277) feature loss: tensor(0.2102)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.5487) feature loss: tensor(0.2031)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.5819) feature loss: tensor(0.2133)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.6804) feature loss: tensor(0.2120)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.5798) feature loss: tensor(0.2162)
Global Model Acc on global data: 0.4792 length of data: 10000
-------------Round number:  47  -------------
selected users: [17, 90, 94, 86, 63, 5, 38, 14, 40, 47]
random features: torch.Size([107, 64, 8, 8]) torch.Size([107])
random features: torch.Size([95, 64, 8, 8]) torch.Size([95])
random features: torch.Size([101, 64, 8, 8]) torch.Size([101])
random features: torch.Size([106, 64, 8, 8]) torch.Size([106])
random features: torch.Size([101, 64, 8, 8]) torch.Size([101])
random features: torch.Size([102, 64, 8, 8]) torch.Size([102])
random features: torch.Size([109, 64, 8, 8]) torch.Size([109])
random features: torch.Size([99, 64, 8, 8]) torch.Size([99])
random features: torch.Size([92, 64, 8, 8]) torch.Size([92])
random features: torch.Size([93, 64, 8, 8]) torch.Size([93])
all data: 1005
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.7944) feature loss: tensor(0.2405)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.8345) feature loss: tensor(0.2342)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.8293) feature loss: tensor(0.2246)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.7472) feature loss: tensor(0.2372)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.7466) feature loss: tensor(0.2383)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.8752) feature loss: tensor(0.2170)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.6767) feature loss: tensor(0.2385)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.7251) feature loss: tensor(0.2261)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.7263) feature loss: tensor(0.2303)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.7443) feature loss: tensor(0.2216)
Global Model Acc on global data: 0.4795 length of data: 10000
-------------Round number:  48  -------------
selected users: [93, 5, 71, 9, 11, 79, 69, 8, 59, 63]
random features: torch.Size([104, 64, 8, 8]) torch.Size([104])
random features: torch.Size([102, 64, 8, 8]) torch.Size([102])
random features: torch.Size([101, 64, 8, 8]) torch.Size([101])
random features: torch.Size([102, 64, 8, 8]) torch.Size([102])
random features: torch.Size([106, 64, 8, 8]) torch.Size([106])
random features: torch.Size([99, 64, 8, 8]) torch.Size([99])
random features: torch.Size([98, 64, 8, 8]) torch.Size([98])
random features: torch.Size([96, 64, 8, 8]) torch.Size([96])
random features: torch.Size([103, 64, 8, 8]) torch.Size([103])
random features: torch.Size([101, 64, 8, 8]) torch.Size([101])
all data: 1012
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.6235) feature loss: tensor(0.2014)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.6638) feature loss: tensor(0.2010)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.5656) feature loss: tensor(0.1972)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(1.0005) feature loss: tensor(0.2046)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.6172) feature loss: tensor(0.2074)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.6079) feature loss: tensor(0.2059)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.5981) feature loss: tensor(0.2010)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.6432) feature loss: tensor(0.1990)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.7410) feature loss: tensor(0.2090)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.5834) feature loss: tensor(0.1990)
Global Model Acc on global data: 0.5025 length of data: 10000
-------------Round number:  49  -------------
selected users: [76, 25, 28, 75, 81, 47, 41, 22, 29, 1]
random features: torch.Size([106, 64, 8, 8]) torch.Size([106])
random features: torch.Size([100, 64, 8, 8]) torch.Size([100])
random features: torch.Size([102, 64, 8, 8]) torch.Size([102])
random features: torch.Size([96, 64, 8, 8]) torch.Size([96])
random features: torch.Size([102, 64, 8, 8]) torch.Size([102])
random features: torch.Size([93, 64, 8, 8]) torch.Size([93])
random features: torch.Size([95, 64, 8, 8]) torch.Size([95])
random features: torch.Size([102, 64, 8, 8]) torch.Size([102])
random features: torch.Size([109, 64, 8, 8]) torch.Size([109])
random features: torch.Size([104, 64, 8, 8]) torch.Size([104])
all data: 1009
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.7642) feature loss: tensor(0.1779)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.7393) feature loss: tensor(0.1812)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(1.0614) feature loss: tensor(0.1827)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.7311) feature loss: tensor(0.1893)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.9561) feature loss: tensor(0.1828)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.6956) feature loss: tensor(0.1760)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.7408) feature loss: tensor(0.1747)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.9992) feature loss: tensor(0.1769)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.6860) feature loss: tensor(0.1829)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.6502) feature loss: tensor(0.1816)
Global Model Acc on global data: 0.503 length of data: 10000
-------------Round number:  50  -------------
selected users: [80, 79, 25, 15, 39, 40, 53, 17, 57, 50]
random features: torch.Size([96, 64, 8, 8]) torch.Size([96])
random features: torch.Size([99, 64, 8, 8]) torch.Size([99])
random features: torch.Size([100, 64, 8, 8]) torch.Size([100])
random features: torch.Size([103, 64, 8, 8]) torch.Size([103])
random features: torch.Size([103, 64, 8, 8]) torch.Size([103])
random features: torch.Size([92, 64, 8, 8]) torch.Size([92])
random features: torch.Size([115, 64, 8, 8]) torch.Size([115])
random features: torch.Size([107, 64, 8, 8]) torch.Size([107])
random features: torch.Size([101, 64, 8, 8]) torch.Size([101])
random features: torch.Size([98, 64, 8, 8]) torch.Size([98])
all data: 1014
Local adapation with distilling: 0.0001
training loss: tensor(0.6063) feature loss: tensor(0.1543)
Local adapation with distilling: 0.0001
training loss: tensor(0.4959) feature loss: tensor(0.1512)
Local adapation with distilling: 0.0001
training loss: tensor(0.5600) feature loss: tensor(0.1447)
Local adapation with distilling: 0.0001
training loss: tensor(0.8432) feature loss: tensor(0.1525)
Local adapation with distilling: 0.0001
training loss: tensor(0.5550) feature loss: tensor(0.1517)
Local adapation with distilling: 0.0001
training loss: tensor(0.5670) feature loss: tensor(0.1476)
Local adapation with distilling: 0.0001
training loss: tensor(0.5187) feature loss: tensor(0.1582)
Local adapation with distilling: 0.0001
training loss: tensor(0.5570) feature loss: tensor(0.1461)
Local adapation with distilling: 0.0001
training loss: tensor(0.6081) feature loss: tensor(0.1418)
Local adapation with distilling: 0.0001
training loss: tensor(0.6354) feature loss: tensor(0.1582)
Global Model Acc on global data: 0.486 length of data: 10000
-------------Round number:  51  -------------
selected users: [71, 43, 11, 83, 78, 19, 80, 4, 79, 75]
random features: torch.Size([101, 64, 8, 8]) torch.Size([101])
random features: torch.Size([98, 64, 8, 8]) torch.Size([98])
random features: torch.Size([106, 64, 8, 8]) torch.Size([106])
random features: torch.Size([101, 64, 8, 8]) torch.Size([101])
random features: torch.Size([104, 64, 8, 8]) torch.Size([104])
random features: torch.Size([100, 64, 8, 8]) torch.Size([100])
random features: torch.Size([96, 64, 8, 8]) torch.Size([96])
random features: torch.Size([98, 64, 8, 8]) torch.Size([98])
random features: torch.Size([99, 64, 8, 8]) torch.Size([99])
random features: torch.Size([96, 64, 8, 8]) torch.Size([96])
all data: 999
Local adapation with distilling: 0.0001
training loss: tensor(0.5644) feature loss: tensor(0.1728)
Local adapation with distilling: 0.0001
training loss: tensor(0.6642) feature loss: tensor(0.1763)
Local adapation with distilling: 0.0001
training loss: tensor(0.5974) feature loss: tensor(0.1754)
Local adapation with distilling: 0.0001
training loss: tensor(0.7425) feature loss: tensor(0.1861)
Local adapation with distilling: 0.0001
training loss: tensor(0.6805) feature loss: tensor(0.1828)
Local adapation with distilling: 0.0001
training loss: tensor(0.7300) feature loss: tensor(0.1800)
Local adapation with distilling: 0.0001
training loss: tensor(0.6098) feature loss: tensor(0.1797)
Local adapation with distilling: 0.0001
training loss: tensor(0.7203) feature loss: tensor(0.1737)
Local adapation with distilling: 0.0001
training loss: tensor(0.5544) feature loss: tensor(0.1741)
Local adapation with distilling: 0.0001
training loss: tensor(0.6242) feature loss: tensor(0.1743)
Global Model Acc on global data: 0.4864 length of data: 10000
-------------Round number:  52  -------------
selected users: [82, 8, 44, 19, 2, 73, 37, 89, 67, 18]
random features: torch.Size([92, 64, 8, 8]) torch.Size([92])
random features: torch.Size([96, 64, 8, 8]) torch.Size([96])
random features: torch.Size([94, 64, 8, 8]) torch.Size([94])
random features: torch.Size([100, 64, 8, 8]) torch.Size([100])
random features: torch.Size([96, 64, 8, 8]) torch.Size([96])
random features: torch.Size([104, 64, 8, 8]) torch.Size([104])
random features: torch.Size([101, 64, 8, 8]) torch.Size([101])
random features: torch.Size([108, 64, 8, 8]) torch.Size([108])
random features: torch.Size([94, 64, 8, 8]) torch.Size([94])
random features: torch.Size([99, 64, 8, 8]) torch.Size([99])
all data: 984
Local adapation with distilling: 0.0001
training loss: tensor(0.7009) feature loss: tensor(0.1643)
Local adapation with distilling: 0.0001
training loss: tensor(0.6112) feature loss: tensor(0.1629)
Local adapation with distilling: 0.0001
training loss: tensor(0.6514) feature loss: tensor(0.1688)
Local adapation with distilling: 0.0001
training loss: tensor(0.6278) feature loss: tensor(0.1593)
Local adapation with distilling: 0.0001
training loss: tensor(0.5728) feature loss: tensor(0.1657)
Local adapation with distilling: 0.0001
training loss: tensor(0.6638) feature loss: tensor(0.1659)
Local adapation with distilling: 0.0001
training loss: tensor(0.5723) feature loss: tensor(0.1598)
Local adapation with distilling: 0.0001
training loss: tensor(0.5983) feature loss: tensor(0.1653)
Local adapation with distilling: 0.0001
training loss: tensor(0.6815) feature loss: tensor(0.1567)
Local adapation with distilling: 0.0001
training loss: tensor(0.7547) feature loss: tensor(0.1651)
Global Model Acc on global data: 0.4881 length of data: 10000
-------------Round number:  53  -------------
selected users: [19, 78, 64, 3, 71, 32, 68, 42, 55, 97]
random features: torch.Size([100, 64, 8, 8]) torch.Size([100])
random features: torch.Size([104, 64, 8, 8]) torch.Size([104])
random features: torch.Size([98, 64, 8, 8]) torch.Size([98])
random features: torch.Size([106, 64, 8, 8]) torch.Size([106])
random features: torch.Size([101, 64, 8, 8]) torch.Size([101])
random features: torch.Size([99, 64, 8, 8]) torch.Size([99])
random features: torch.Size([103, 64, 8, 8]) torch.Size([103])
random features: torch.Size([95, 64, 8, 8]) torch.Size([95])
random features: torch.Size([96, 64, 8, 8]) torch.Size([96])
random features: torch.Size([95, 64, 8, 8]) torch.Size([95])
all data: 997
Local adapation with distilling: 0.0001
training loss: tensor(0.7042) feature loss: tensor(0.1941)
Local adapation with distilling: 0.0001
training loss: tensor(0.7243) feature loss: tensor(0.2068)
Local adapation with distilling: 0.0001
training loss: tensor(0.9840) feature loss: tensor(0.1960)
Local adapation with distilling: 0.0001
training loss: tensor(0.8609) feature loss: tensor(0.2077)
Local adapation with distilling: 0.0001
training loss: tensor(0.6288) feature loss: tensor(0.1937)
Local adapation with distilling: 0.0001
training loss: tensor(0.8971) feature loss: tensor(0.2065)
Local adapation with distilling: 0.0001
training loss: tensor(0.8417) feature loss: tensor(0.1985)
Local adapation with distilling: 0.0001
training loss: tensor(0.7666) feature loss: tensor(0.1968)
Local adapation with distilling: 0.0001
training loss: tensor(0.7718) feature loss: tensor(0.2112)
Local adapation with distilling: 0.0001
training loss: tensor(0.8184) feature loss: tensor(0.2107)
Global Model Acc on global data: 0.4784 length of data: 10000
-------------Round number:  54  -------------
selected users: [36, 70, 48, 94, 81, 46, 38, 29, 34, 22]
random features: torch.Size([101, 64, 8, 8]) torch.Size([101])
random features: torch.Size([96, 64, 8, 8]) torch.Size([96])
random features: torch.Size([95, 64, 8, 8]) torch.Size([95])
random features: torch.Size([101, 64, 8, 8]) torch.Size([101])
random features: torch.Size([102, 64, 8, 8]) torch.Size([102])
random features: torch.Size([103, 64, 8, 8]) torch.Size([103])
random features: torch.Size([109, 64, 8, 8]) torch.Size([109])
random features: torch.Size([109, 64, 8, 8]) torch.Size([109])
random features: torch.Size([95, 64, 8, 8]) torch.Size([95])
random features: torch.Size([102, 64, 8, 8]) torch.Size([102])
all data: 1013
Local adapation with distilling: 0.0001
training loss: tensor(0.7016) feature loss: tensor(0.2035)
Local adapation with distilling: 0.0001
training loss: tensor(0.6431) feature loss: tensor(0.2088)
Local adapation with distilling: 0.0001
training loss: tensor(0.8334) feature loss: tensor(0.1967)
Local adapation with distilling: 0.0001
training loss: tensor(0.7089) feature loss: tensor(0.1971)
Local adapation with distilling: 0.0001
training loss: tensor(0.8926) feature loss: tensor(0.2023)
Local adapation with distilling: 0.0001
training loss: tensor(0.7710) feature loss: tensor(0.2122)
Local adapation with distilling: 0.0001
training loss: tensor(0.5961) feature loss: tensor(0.2034)
Local adapation with distilling: 0.0001
training loss: tensor(0.6731) feature loss: tensor(0.2055)
Local adapation with distilling: 0.0001
training loss: tensor(0.6823) feature loss: tensor(0.1923)
Local adapation with distilling: 0.0001
training loss: tensor(0.9918) feature loss: tensor(0.1970)
Global Model Acc on global data: 0.4936 length of data: 10000
-------------Round number:  55  -------------
selected users: [28, 92, 98, 95, 84, 34, 38, 76, 17, 78]
random features: torch.Size([102, 64, 8, 8]) torch.Size([102])
random features: torch.Size([93, 64, 8, 8]) torch.Size([93])
random features: torch.Size([96, 64, 8, 8]) torch.Size([96])
random features: torch.Size([100, 64, 8, 8]) torch.Size([100])
random features: torch.Size([96, 64, 8, 8]) torch.Size([96])
random features: torch.Size([95, 64, 8, 8]) torch.Size([95])
random features: torch.Size([109, 64, 8, 8]) torch.Size([109])
random features: torch.Size([106, 64, 8, 8]) torch.Size([106])
random features: torch.Size([107, 64, 8, 8]) torch.Size([107])
random features: torch.Size([104, 64, 8, 8]) torch.Size([104])
all data: 1008
Local adapation with distilling: 0.0001
training loss: tensor(0.8875) feature loss: tensor(0.2005)
Local adapation with distilling: 0.0001
training loss: tensor(0.8270) feature loss: tensor(0.2041)
Local adapation with distilling: 0.0001
training loss: tensor(0.5861) feature loss: tensor(0.1927)
Local adapation with distilling: 0.0001
training loss: tensor(0.5869) feature loss: tensor(0.1920)
Local adapation with distilling: 0.0001
training loss: tensor(0.6769) feature loss: tensor(0.1959)
Local adapation with distilling: 0.0001
training loss: tensor(0.5961) feature loss: tensor(0.1885)
Local adapation with distilling: 0.0001
training loss: tensor(0.5132) feature loss: tensor(0.1954)
Local adapation with distilling: 0.0001
training loss: tensor(0.6316) feature loss: tensor(0.1850)
Local adapation with distilling: 0.0001
training loss: tensor(0.5747) feature loss: tensor(0.1895)
Local adapation with distilling: 0.0001
training loss: tensor(0.6073) feature loss: tensor(0.1973)
Global Model Acc on global data: 0.4886 length of data: 10000
-------------Round number:  56  -------------
selected users: [92, 79, 23, 68, 52, 38, 73, 9, 59, 27]
random features: torch.Size([93, 64, 8, 8]) torch.Size([93])
random features: torch.Size([99, 64, 8, 8]) torch.Size([99])
random features: torch.Size([98, 64, 8, 8]) torch.Size([98])
random features: torch.Size([103, 64, 8, 8]) torch.Size([103])
random features: torch.Size([102, 64, 8, 8]) torch.Size([102])
random features: torch.Size([109, 64, 8, 8]) torch.Size([109])
random features: torch.Size([104, 64, 8, 8]) torch.Size([104])
random features: torch.Size([102, 64, 8, 8]) torch.Size([102])
random features: torch.Size([103, 64, 8, 8]) torch.Size([103])
random features: torch.Size([97, 64, 8, 8]) torch.Size([97])
all data: 1010
Local adapation with distilling: 0.0001
training loss: tensor(0.7352) feature loss: tensor(0.1821)
Local adapation with distilling: 0.0001
training loss: tensor(0.5877) feature loss: tensor(0.1834)
Local adapation with distilling: 0.0001
training loss: tensor(0.8919) feature loss: tensor(0.1969)
Local adapation with distilling: 0.0001
training loss: tensor(0.6690) feature loss: tensor(0.1697)
Local adapation with distilling: 0.0001
training loss: tensor(0.9475) feature loss: tensor(0.1847)
Local adapation with distilling: 0.0001
training loss: tensor(0.5033) feature loss: tensor(0.1807)
Local adapation with distilling: 0.0001
training loss: tensor(0.6017) feature loss: tensor(0.1803)
Local adapation with distilling: 0.0001
training loss: tensor(0.8244) feature loss: tensor(0.1849)
Local adapation with distilling: 0.0001
training loss: tensor(0.9070) feature loss: tensor(0.1796)
Local adapation with distilling: 0.0001
training loss: tensor(0.7078) feature loss: tensor(0.1725)
Global Model Acc on global data: 0.4896 length of data: 10000
-------------Round number:  57  -------------
selected users: [52, 17, 41, 3, 8, 98, 59, 20, 67, 7]
random features: torch.Size([102, 64, 8, 8]) torch.Size([102])
random features: torch.Size([107, 64, 8, 8]) torch.Size([107])
random features: torch.Size([95, 64, 8, 8]) torch.Size([95])
random features: torch.Size([106, 64, 8, 8]) torch.Size([106])
random features: torch.Size([96, 64, 8, 8]) torch.Size([96])
random features: torch.Size([96, 64, 8, 8]) torch.Size([96])
random features: torch.Size([103, 64, 8, 8]) torch.Size([103])
random features: torch.Size([95, 64, 8, 8]) torch.Size([95])
random features: torch.Size([94, 64, 8, 8]) torch.Size([94])
random features: torch.Size([95, 64, 8, 8]) torch.Size([95])
all data: 989
Local adapation with distilling: 0.0001
training loss: tensor(0.7142) feature loss: tensor(0.1838)
Local adapation with distilling: 0.0001
training loss: tensor(0.5449) feature loss: tensor(0.1911)
Local adapation with distilling: 0.0001
training loss: tensor(0.6153) feature loss: tensor(0.1874)
Local adapation with distilling: 0.0001
training loss: tensor(0.6799) feature loss: tensor(0.1894)
Local adapation with distilling: 0.0001
training loss: tensor(0.5507) feature loss: tensor(0.1972)
Local adapation with distilling: 0.0001
training loss: tensor(0.5525) feature loss: tensor(0.1889)
Local adapation with distilling: 0.0001
training loss: tensor(0.6612) feature loss: tensor(0.1957)
Local adapation with distilling: 0.0001
training loss: tensor(0.6715) feature loss: tensor(0.1926)
Local adapation with distilling: 0.0001
training loss: tensor(0.5967) feature loss: tensor(0.1930)
Local adapation with distilling: 0.0001
training loss: tensor(0.7128) feature loss: tensor(0.1968)
Global Model Acc on global data: 0.4954 length of data: 10000
-------------Round number:  58  -------------
selected users: [43, 58, 8, 31, 70, 45, 69, 95, 50, 4]
random features: torch.Size([98, 64, 8, 8]) torch.Size([98])
random features: torch.Size([101, 64, 8, 8]) torch.Size([101])
random features: torch.Size([96, 64, 8, 8]) torch.Size([96])
random features: torch.Size([97, 64, 8, 8]) torch.Size([97])
random features: torch.Size([96, 64, 8, 8]) torch.Size([96])
random features: torch.Size([100, 64, 8, 8]) torch.Size([100])
random features: torch.Size([98, 64, 8, 8]) torch.Size([98])
random features: torch.Size([100, 64, 8, 8]) torch.Size([100])
random features: torch.Size([98, 64, 8, 8]) torch.Size([98])
random features: torch.Size([98, 64, 8, 8]) torch.Size([98])
all data: 982
Local adapation with distilling: 0.0001
training loss: tensor(0.6411) feature loss: tensor(0.1894)
Local adapation with distilling: 0.0001
training loss: tensor(0.5987) feature loss: tensor(0.1835)
Local adapation with distilling: 0.0001
training loss: tensor(0.5084) feature loss: tensor(0.1798)
Local adapation with distilling: 0.0001
training loss: tensor(0.6506) feature loss: tensor(0.1780)
Local adapation with distilling: 0.0001
training loss: tensor(0.5874) feature loss: tensor(0.1848)
Local adapation with distilling: 0.0001
training loss: tensor(0.5968) feature loss: tensor(0.1773)
Local adapation with distilling: 0.0001
training loss: tensor(0.6134) feature loss: tensor(0.1825)
Local adapation with distilling: 0.0001
training loss: tensor(0.5361) feature loss: tensor(0.1731)
Local adapation with distilling: 0.0001
training loss: tensor(0.6049) feature loss: tensor(0.1871)
Local adapation with distilling: 0.0001
training loss: tensor(0.7094) feature loss: tensor(0.1765)
Global Model Acc on global data: 0.5079 length of data: 10000
save a model
-------------Round number:  59  -------------
selected users: [38, 46, 24, 87, 30, 85, 16, 96, 18, 99]
random features: torch.Size([109, 64, 8, 8]) torch.Size([109])
random features: torch.Size([103, 64, 8, 8]) torch.Size([103])
random features: torch.Size([98, 64, 8, 8]) torch.Size([98])
random features: torch.Size([95, 64, 8, 8]) torch.Size([95])
random features: torch.Size([95, 64, 8, 8]) torch.Size([95])
random features: torch.Size([100, 64, 8, 8]) torch.Size([100])
random features: torch.Size([106, 64, 8, 8]) torch.Size([106])
random features: torch.Size([102, 64, 8, 8]) torch.Size([102])
random features: torch.Size([99, 64, 8, 8]) torch.Size([99])
random features: torch.Size([93, 64, 8, 8]) torch.Size([93])
all data: 1000
Local adapation with distilling: 0.0001
training loss: tensor(0.5963) feature loss: tensor(0.1913)
Local adapation with distilling: 0.0001
training loss: tensor(0.7533) feature loss: tensor(0.1858)
Local adapation with distilling: 0.0001
training loss: tensor(0.6952) feature loss: tensor(0.1753)
Local adapation with distilling: 0.0001
training loss: tensor(0.8104) feature loss: tensor(0.1848)
Local adapation with distilling: 0.0001
training loss: tensor(0.8589) feature loss: tensor(0.1860)
Local adapation with distilling: 0.0001
training loss: tensor(0.7215) feature loss: tensor(0.1781)
Local adapation with distilling: 0.0001
training loss: tensor(0.8583) feature loss: tensor(0.1856)
Local adapation with distilling: 0.0001
training loss: tensor(0.9565) feature loss: tensor(0.1929)
Local adapation with distilling: 0.0001
training loss: tensor(0.7705) feature loss: tensor(0.1865)
Local adapation with distilling: 0.0001
training loss: tensor(0.7659) feature loss: tensor(0.1871)
Global Model Acc on global data: 0.5055 length of data: 10000
-------------Round number:  60  -------------
selected users: [88, 4, 79, 14, 55, 3, 19, 28, 94, 25]
random features: torch.Size([96, 64, 8, 8]) torch.Size([96])
random features: torch.Size([98, 64, 8, 8]) torch.Size([98])
random features: torch.Size([99, 64, 8, 8]) torch.Size([99])
random features: torch.Size([99, 64, 8, 8]) torch.Size([99])
random features: torch.Size([96, 64, 8, 8]) torch.Size([96])
random features: torch.Size([106, 64, 8, 8]) torch.Size([106])
random features: torch.Size([100, 64, 8, 8]) torch.Size([100])
random features: torch.Size([102, 64, 8, 8]) torch.Size([102])
random features: torch.Size([101, 64, 8, 8]) torch.Size([101])
random features: torch.Size([100, 64, 8, 8]) torch.Size([100])
all data: 997
Local adapation with distilling: 0.0001
training loss: tensor(0.6568) feature loss: tensor(0.1966)
Local adapation with distilling: 0.0001
training loss: tensor(0.6433) feature loss: tensor(0.1913)
Local adapation with distilling: 0.0001
training loss: tensor(0.5491) feature loss: tensor(0.1969)
Local adapation with distilling: 0.0001
training loss: tensor(0.6437) feature loss: tensor(0.2040)
Local adapation with distilling: 0.0001
training loss: tensor(0.6773) feature loss: tensor(0.1986)
Local adapation with distilling: 0.0001
training loss: tensor(0.6489) feature loss: tensor(0.1929)
Local adapation with distilling: 0.0001
training loss: tensor(0.6347) feature loss: tensor(0.2006)
Local adapation with distilling: 0.0001
training loss: tensor(0.8782) feature loss: tensor(0.1993)
Local adapation with distilling: 0.0001
training loss: tensor(0.6602) feature loss: tensor(0.1840)
Local adapation with distilling: 0.0001
training loss: tensor(0.6531) feature loss: tensor(0.1941)
Global Model Acc on global data: 0.5001 length of data: 10000
-------------Round number:  61  -------------
selected users: [83, 1, 55, 9, 31, 28, 96, 29, 86, 63]
random features: torch.Size([101, 64, 8, 8]) torch.Size([101])
random features: torch.Size([104, 64, 8, 8]) torch.Size([104])
random features: torch.Size([96, 64, 8, 8]) torch.Size([96])
random features: torch.Size([102, 64, 8, 8]) torch.Size([102])
random features: torch.Size([97, 64, 8, 8]) torch.Size([97])
random features: torch.Size([102, 64, 8, 8]) torch.Size([102])
random features: torch.Size([102, 64, 8, 8]) torch.Size([102])
random features: torch.Size([109, 64, 8, 8]) torch.Size([109])
random features: torch.Size([106, 64, 8, 8]) torch.Size([106])
random features: torch.Size([101, 64, 8, 8]) torch.Size([101])
all data: 1020
Local adapation with distilling: 0.0001
training loss: tensor(0.6274) feature loss: tensor(0.1780)
Local adapation with distilling: 0.0001
training loss: tensor(0.6146) feature loss: tensor(0.1742)
Local adapation with distilling: 0.0001
training loss: tensor(0.5451) feature loss: tensor(0.1759)
Local adapation with distilling: 0.0001
training loss: tensor(0.7812) feature loss: tensor(0.1745)
Local adapation with distilling: 0.0001
training loss: tensor(0.5941) feature loss: tensor(0.1762)
Local adapation with distilling: 0.0001
training loss: tensor(0.9025) feature loss: tensor(0.1726)
Local adapation with distilling: 0.0001
training loss: tensor(0.7414) feature loss: tensor(0.1800)
Local adapation with distilling: 0.0001
training loss: tensor(0.5311) feature loss: tensor(0.1734)
Local adapation with distilling: 0.0001
training loss: tensor(0.5354) feature loss: tensor(0.1740)
Local adapation with distilling: 0.0001
training loss: tensor(0.5293) feature loss: tensor(0.1730)
Global Model Acc on global data: 0.494 length of data: 10000
-------------Round number:  62  -------------
selected users: [76, 48, 62, 80, 29, 99, 60, 89, 39, 69]
random features: torch.Size([106, 64, 8, 8]) torch.Size([106])
random features: torch.Size([95, 64, 8, 8]) torch.Size([95])
random features: torch.Size([93, 64, 8, 8]) torch.Size([93])
random features: torch.Size([96, 64, 8, 8]) torch.Size([96])
random features: torch.Size([109, 64, 8, 8]) torch.Size([109])
random features: torch.Size([93, 64, 8, 8]) torch.Size([93])
random features: torch.Size([96, 64, 8, 8]) torch.Size([96])
random features: torch.Size([108, 64, 8, 8]) torch.Size([108])
random features: torch.Size([103, 64, 8, 8]) torch.Size([103])
random features: torch.Size([98, 64, 8, 8]) torch.Size([98])
all data: 997
Local adapation with distilling: 0.0001
training loss: tensor(0.5992) feature loss: tensor(0.1658)
Local adapation with distilling: 0.0001
training loss: tensor(0.6540) feature loss: tensor(0.1776)
Local adapation with distilling: 0.0001
training loss: tensor(0.6695) feature loss: tensor(0.1742)
Local adapation with distilling: 0.0001
training loss: tensor(0.5725) feature loss: tensor(0.1798)
Local adapation with distilling: 0.0001
training loss: tensor(0.4834) feature loss: tensor(0.1686)
Local adapation with distilling: 0.0001
training loss: tensor(0.5881) feature loss: tensor(0.1793)
Local adapation with distilling: 0.0001
training loss: tensor(0.5946) feature loss: tensor(0.1750)
Local adapation with distilling: 0.0001
training loss: tensor(0.5125) feature loss: tensor(0.1651)
Local adapation with distilling: 0.0001
training loss: tensor(0.6143) feature loss: tensor(0.1650)
Local adapation with distilling: 0.0001
training loss: tensor(0.4892) feature loss: tensor(0.1662)
Global Model Acc on global data: 0.4715 length of data: 10000
-------------Round number:  63  -------------
selected users: [64, 59, 63, 2, 80, 20, 18, 48, 72, 51]
random features: torch.Size([98, 64, 8, 8]) torch.Size([98])
random features: torch.Size([103, 64, 8, 8]) torch.Size([103])
random features: torch.Size([101, 64, 8, 8]) torch.Size([101])
random features: torch.Size([96, 64, 8, 8]) torch.Size([96])
random features: torch.Size([96, 64, 8, 8]) torch.Size([96])
random features: torch.Size([95, 64, 8, 8]) torch.Size([95])
random features: torch.Size([99, 64, 8, 8]) torch.Size([99])
random features: torch.Size([95, 64, 8, 8]) torch.Size([95])
random features: torch.Size([115, 64, 8, 8]) torch.Size([115])
random features: torch.Size([97, 64, 8, 8]) torch.Size([97])
all data: 995
Local adapation with distilling: 0.0001
training loss: tensor(0.8879) feature loss: tensor(0.2047)
Local adapation with distilling: 0.0001
training loss: tensor(0.7068) feature loss: tensor(0.1985)
Local adapation with distilling: 0.0001
training loss: tensor(0.5952) feature loss: tensor(0.1915)
Local adapation with distilling: 0.0001
training loss: tensor(0.5871) feature loss: tensor(0.1915)
Local adapation with distilling: 0.0001
training loss: tensor(0.6166) feature loss: tensor(0.1904)
Local adapation with distilling: 0.0001
training loss: tensor(0.6499) feature loss: tensor(0.1931)
Local adapation with distilling: 0.0001
training loss: tensor(0.6552) feature loss: tensor(0.1975)
Local adapation with distilling: 0.0001
training loss: tensor(0.6403) feature loss: tensor(0.1942)
Local adapation with distilling: 0.0001
training loss: tensor(0.6954) feature loss: tensor(0.2127)
Local adapation with distilling: 0.0001
training loss: tensor(0.7612) feature loss: tensor(0.1976)
Global Model Acc on global data: 0.4884 length of data: 10000
-------------Round number:  64  -------------
selected users: [17, 22, 60, 92, 23, 19, 71, 94, 40, 49]
random features: torch.Size([107, 64, 8, 8]) torch.Size([107])
random features: torch.Size([102, 64, 8, 8]) torch.Size([102])
random features: torch.Size([96, 64, 8, 8]) torch.Size([96])
random features: torch.Size([93, 64, 8, 8]) torch.Size([93])
random features: torch.Size([98, 64, 8, 8]) torch.Size([98])
random features: torch.Size([100, 64, 8, 8]) torch.Size([100])
random features: torch.Size([101, 64, 8, 8]) torch.Size([101])
random features: torch.Size([101, 64, 8, 8]) torch.Size([101])
random features: torch.Size([92, 64, 8, 8]) torch.Size([92])
random features: torch.Size([99, 64, 8, 8]) torch.Size([99])
all data: 989
Local adapation with distilling: 0.0001
training loss: tensor(0.5909) feature loss: tensor(0.1931)
Local adapation with distilling: 0.0001
training loss: tensor(0.7780) feature loss: tensor(0.1936)
Local adapation with distilling: 0.0001
training loss: tensor(0.5705) feature loss: tensor(0.1851)
Local adapation with distilling: 0.0001
training loss: tensor(0.6991) feature loss: tensor(0.1867)
Local adapation with distilling: 0.0001
training loss: tensor(0.7618) feature loss: tensor(0.1892)
Local adapation with distilling: 0.0001
training loss: tensor(0.6065) feature loss: tensor(0.1899)
Local adapation with distilling: 0.0001
training loss: tensor(0.5704) feature loss: tensor(0.1862)
Local adapation with distilling: 0.0001
training loss: tensor(0.6781) feature loss: tensor(0.1876)
Local adapation with distilling: 0.0001
training loss: tensor(0.6174) feature loss: tensor(0.1917)
Local adapation with distilling: 0.0001
training loss: tensor(0.5943) feature loss: tensor(0.1912)
Global Model Acc on global data: 0.4796 length of data: 10000
-------------Round number:  65  -------------
selected users: [37, 81, 39, 61, 76, 90, 27, 86, 28, 69]
random features: torch.Size([101, 64, 8, 8]) torch.Size([101])
random features: torch.Size([102, 64, 8, 8]) torch.Size([102])
random features: torch.Size([103, 64, 8, 8]) torch.Size([103])
random features: torch.Size([101, 64, 8, 8]) torch.Size([101])
random features: torch.Size([106, 64, 8, 8]) torch.Size([106])
random features: torch.Size([95, 64, 8, 8]) torch.Size([95])
random features: torch.Size([97, 64, 8, 8]) torch.Size([97])
random features: torch.Size([106, 64, 8, 8]) torch.Size([106])
random features: torch.Size([102, 64, 8, 8]) torch.Size([102])
random features: torch.Size([98, 64, 8, 8]) torch.Size([98])
all data: 1011
Local adapation with distilling: 0.0001
training loss: tensor(0.5484) feature loss: tensor(0.1764)
Local adapation with distilling: 0.0001
training loss: tensor(0.8185) feature loss: tensor(0.1856)
Local adapation with distilling: 0.0001
training loss: tensor(0.6145) feature loss: tensor(0.1805)
Local adapation with distilling: 0.0001
training loss: tensor(0.6476) feature loss: tensor(0.1872)
Local adapation with distilling: 0.0001
training loss: tensor(0.5877) feature loss: tensor(0.1821)
Local adapation with distilling: 0.0001
training loss: tensor(0.6572) feature loss: tensor(0.1787)
Local adapation with distilling: 0.0001
training loss: tensor(0.6407) feature loss: tensor(0.1798)
Local adapation with distilling: 0.0001
training loss: tensor(0.5556) feature loss: tensor(0.1781)
Local adapation with distilling: 0.0001
training loss: tensor(0.7898) feature loss: tensor(0.1849)
Local adapation with distilling: 0.0001
training loss: tensor(0.5088) feature loss: tensor(0.1802)
Global Model Acc on global data: 0.5003 length of data: 10000
-------------Round number:  66  -------------
selected users: [8, 93, 4, 5, 52, 41, 0, 73, 88, 68]
random features: torch.Size([96, 64, 8, 8]) torch.Size([96])
random features: torch.Size([104, 64, 8, 8]) torch.Size([104])
random features: torch.Size([98, 64, 8, 8]) torch.Size([98])
random features: torch.Size([102, 64, 8, 8]) torch.Size([102])
random features: torch.Size([102, 64, 8, 8]) torch.Size([102])
random features: torch.Size([95, 64, 8, 8]) torch.Size([95])
random features: torch.Size([99, 64, 8, 8]) torch.Size([99])
random features: torch.Size([104, 64, 8, 8]) torch.Size([104])
random features: torch.Size([96, 64, 8, 8]) torch.Size([96])
random features: torch.Size([103, 64, 8, 8]) torch.Size([103])
all data: 999
Local adapation with distilling: 0.0001
training loss: tensor(0.5296) feature loss: tensor(0.1877)
Local adapation with distilling: 0.0001
training loss: tensor(0.6217) feature loss: tensor(0.1930)
Local adapation with distilling: 0.0001
training loss: tensor(0.5774) feature loss: tensor(0.1789)
Local adapation with distilling: 0.0001
training loss: tensor(0.6816) feature loss: tensor(0.1867)
Local adapation with distilling: 0.0001
training loss: tensor(0.7515) feature loss: tensor(0.1797)
Local adapation with distilling: 0.0001
training loss: tensor(0.5848) feature loss: tensor(0.1811)
Local adapation with distilling: 0.0001
training loss: tensor(0.5305) feature loss: tensor(0.1863)
Local adapation with distilling: 0.0001
training loss: tensor(0.5962) feature loss: tensor(0.1906)
Local adapation with distilling: 0.0001
training loss: tensor(0.5672) feature loss: tensor(0.1935)
Local adapation with distilling: 0.0001
training loss: tensor(0.6023) feature loss: tensor(0.1870)
Global Model Acc on global data: 0.4885 length of data: 10000
-------------Round number:  67  -------------
selected users: [17, 24, 64, 93, 97, 29, 3, 70, 82, 11]
random features: torch.Size([107, 64, 8, 8]) torch.Size([107])
random features: torch.Size([98, 64, 8, 8]) torch.Size([98])
random features: torch.Size([98, 64, 8, 8]) torch.Size([98])
random features: torch.Size([104, 64, 8, 8]) torch.Size([104])
random features: torch.Size([95, 64, 8, 8]) torch.Size([95])
random features: torch.Size([109, 64, 8, 8]) torch.Size([109])
random features: torch.Size([106, 64, 8, 8]) torch.Size([106])
random features: torch.Size([96, 64, 8, 8]) torch.Size([96])
random features: torch.Size([92, 64, 8, 8]) torch.Size([92])
random features: torch.Size([106, 64, 8, 8]) torch.Size([106])
all data: 1011
Local adapation with distilling: 0.0001
training loss: tensor(0.5303) feature loss: tensor(0.2070)
Local adapation with distilling: 0.0001
training loss: tensor(0.5874) feature loss: tensor(0.1967)
Local adapation with distilling: 0.0001
training loss: tensor(0.7353) feature loss: tensor(0.2008)
Local adapation with distilling: 0.0001
training loss: tensor(0.5736) feature loss: tensor(0.2066)
Local adapation with distilling: 0.0001
training loss: tensor(0.6673) feature loss: tensor(0.2118)
Local adapation with distilling: 0.0001
training loss: tensor(0.5485) feature loss: tensor(0.2046)
Local adapation with distilling: 0.0001
training loss: tensor(0.6133) feature loss: tensor(0.2089)
Local adapation with distilling: 0.0001
training loss: tensor(0.5742) feature loss: tensor(0.2117)
Local adapation with distilling: 0.0001
training loss: tensor(0.6426) feature loss: tensor(0.2151)
Local adapation with distilling: 0.0001
training loss: tensor(0.6052) feature loss: tensor(0.2075)
Global Model Acc on global data: 0.502 length of data: 10000
-------------Round number:  68  -------------
selected users: [29, 30, 16, 5, 38, 71, 76, 94, 99, 95]
random features: torch.Size([109, 64, 8, 8]) torch.Size([109])
random features: torch.Size([95, 64, 8, 8]) torch.Size([95])
random features: torch.Size([106, 64, 8, 8]) torch.Size([106])
random features: torch.Size([102, 64, 8, 8]) torch.Size([102])
random features: torch.Size([109, 64, 8, 8]) torch.Size([109])
random features: torch.Size([101, 64, 8, 8]) torch.Size([101])
random features: torch.Size([106, 64, 8, 8]) torch.Size([106])
random features: torch.Size([101, 64, 8, 8]) torch.Size([101])
random features: torch.Size([93, 64, 8, 8]) torch.Size([93])
random features: torch.Size([100, 64, 8, 8]) torch.Size([100])
all data: 1022
Local adapation with distilling: 0.0001
training loss: tensor(0.3908) feature loss: tensor(0.1441)
Local adapation with distilling: 0.0001
training loss: tensor(0.5757) feature loss: tensor(0.1511)
Local adapation with distilling: 0.0001
training loss: tensor(0.5413) feature loss: tensor(0.1486)
Local adapation with distilling: 0.0001
training loss: tensor(0.5074) feature loss: tensor(0.1496)
Local adapation with distilling: 0.0001
training loss: tensor(0.3725) feature loss: tensor(0.1523)
Local adapation with distilling: 0.0001
training loss: tensor(0.4069) feature loss: tensor(0.1491)
Local adapation with distilling: 0.0001
training loss: tensor(0.4185) feature loss: tensor(0.1470)
Local adapation with distilling: 0.0001
training loss: tensor(0.4369) feature loss: tensor(0.1443)
Local adapation with distilling: 0.0001
training loss: tensor(0.4755) feature loss: tensor(0.1535)
Local adapation with distilling: 0.0001
training loss: tensor(0.4456) feature loss: tensor(0.1485)
Global Model Acc on global data: 0.5052 length of data: 10000
-------------Round number:  69  -------------
selected users: [72, 31, 13, 83, 33, 8, 26, 89, 64, 97]
random features: torch.Size([115, 64, 8, 8]) torch.Size([115])
random features: torch.Size([97, 64, 8, 8]) torch.Size([97])
random features: torch.Size([101, 64, 8, 8]) torch.Size([101])
random features: torch.Size([101, 64, 8, 8]) torch.Size([101])
random features: torch.Size([97, 64, 8, 8]) torch.Size([97])
random features: torch.Size([96, 64, 8, 8]) torch.Size([96])
random features: torch.Size([105, 64, 8, 8]) torch.Size([105])
random features: torch.Size([108, 64, 8, 8]) torch.Size([108])
random features: torch.Size([98, 64, 8, 8]) torch.Size([98])
random features: torch.Size([95, 64, 8, 8]) torch.Size([95])
all data: 1013
Local adapation with distilling: 0.0001
training loss: tensor(0.6434) feature loss: tensor(0.2053)
Local adapation with distilling: 0.0001
training loss: tensor(0.6895) feature loss: tensor(0.1971)
Local adapation with distilling: 0.0001
training loss: tensor(0.6854) feature loss: tensor(0.1965)
Local adapation with distilling: 0.0001
training loss: tensor(0.6545) feature loss: tensor(0.1986)
Local adapation with distilling: 0.0001
training loss: tensor(0.6214) feature loss: tensor(0.1914)
Local adapation with distilling: 0.0001
training loss: tensor(0.5593) feature loss: tensor(0.1915)
Local adapation with distilling: 0.0001
training loss: tensor(0.5800) feature loss: tensor(0.1940)
Local adapation with distilling: 0.0001
training loss: tensor(0.5610) feature loss: tensor(0.1924)
Local adapation with distilling: 0.0001
training loss: tensor(0.6964) feature loss: tensor(0.1885)
Local adapation with distilling: 0.0001
training loss: tensor(0.6335) feature loss: tensor(0.1984)
Global Model Acc on global data: 0.476 length of data: 10000
-------------Round number:  70  -------------
selected users: [81, 43, 88, 32, 50, 71, 73, 55, 42, 2]
random features: torch.Size([102, 64, 8, 8]) torch.Size([102])
random features: torch.Size([98, 64, 8, 8]) torch.Size([98])
random features: torch.Size([96, 64, 8, 8]) torch.Size([96])
random features: torch.Size([99, 64, 8, 8]) torch.Size([99])
random features: torch.Size([98, 64, 8, 8]) torch.Size([98])
random features: torch.Size([101, 64, 8, 8]) torch.Size([101])
random features: torch.Size([104, 64, 8, 8]) torch.Size([104])
random features: torch.Size([96, 64, 8, 8]) torch.Size([96])
random features: torch.Size([95, 64, 8, 8]) torch.Size([95])
random features: torch.Size([96, 64, 8, 8]) torch.Size([96])
all data: 985
Local adapation with distilling: 0.0001
training loss: tensor(0.7414) feature loss: tensor(0.2064)
Local adapation with distilling: 0.0001
training loss: tensor(0.6190) feature loss: tensor(0.2155)
Local adapation with distilling: 0.0001
training loss: tensor(0.5829) feature loss: tensor(0.1992)
Local adapation with distilling: 0.0001
training loss: tensor(0.7400) feature loss: tensor(0.2051)
Local adapation with distilling: 0.0001
training loss: tensor(0.6125) feature loss: tensor(0.2106)
Local adapation with distilling: 0.0001
training loss: tensor(0.5112) feature loss: tensor(0.2003)
Local adapation with distilling: 0.0001
training loss: tensor(0.5646) feature loss: tensor(0.2059)
Local adapation with distilling: 0.0001
training loss: tensor(0.5927) feature loss: tensor(0.2130)
Local adapation with distilling: 0.0001
training loss: tensor(0.6642) feature loss: tensor(0.1992)
Local adapation with distilling: 0.0001
training loss: tensor(0.5407) feature loss: tensor(0.2080)
Global Model Acc on global data: 0.4848 length of data: 10000
-------------Round number:  71  -------------
selected users: [41, 84, 98, 42, 75, 25, 60, 19, 52, 29]
random features: torch.Size([95, 64, 8, 8]) torch.Size([95])
random features: torch.Size([96, 64, 8, 8]) torch.Size([96])
random features: torch.Size([96, 64, 8, 8]) torch.Size([96])
random features: torch.Size([95, 64, 8, 8]) torch.Size([95])
random features: torch.Size([96, 64, 8, 8]) torch.Size([96])
random features: torch.Size([100, 64, 8, 8]) torch.Size([100])
random features: torch.Size([96, 64, 8, 8]) torch.Size([96])
random features: torch.Size([100, 64, 8, 8]) torch.Size([100])
random features: torch.Size([102, 64, 8, 8]) torch.Size([102])
random features: torch.Size([109, 64, 8, 8]) torch.Size([109])
all data: 985
Local adapation with distilling: 0.0001
training loss: tensor(0.5205) feature loss: tensor(0.1716)
Local adapation with distilling: 0.0001
training loss: tensor(0.5884) feature loss: tensor(0.1761)
Local adapation with distilling: 0.0001
training loss: tensor(0.5135) feature loss: tensor(0.1716)
Local adapation with distilling: 0.0001
training loss: tensor(0.5548) feature loss: tensor(0.1693)
Local adapation with distilling: 0.0001
training loss: tensor(0.5537) feature loss: tensor(0.1838)
Local adapation with distilling: 0.0001
training loss: tensor(0.5913) feature loss: tensor(0.1796)
Local adapation with distilling: 0.0001
training loss: tensor(0.5014) feature loss: tensor(0.1718)
Local adapation with distilling: 0.0001
training loss: tensor(0.5271) feature loss: tensor(0.1785)
Local adapation with distilling: 0.0001
training loss: tensor(0.6464) feature loss: tensor(0.1742)
Local adapation with distilling: 0.0001
training loss: tensor(0.4777) feature loss: tensor(0.1794)
Global Model Acc on global data: 0.4853 length of data: 10000
-------------Round number:  72  -------------
selected users: [76, 82, 43, 16, 84, 95, 78, 91, 30, 22]
random features: torch.Size([106, 64, 8, 8]) torch.Size([106])
random features: torch.Size([92, 64, 8, 8]) torch.Size([92])
random features: torch.Size([98, 64, 8, 8]) torch.Size([98])
random features: torch.Size([106, 64, 8, 8]) torch.Size([106])
random features: torch.Size([96, 64, 8, 8]) torch.Size([96])
random features: torch.Size([100, 64, 8, 8]) torch.Size([100])
random features: torch.Size([104, 64, 8, 8]) torch.Size([104])
random features: torch.Size([105, 64, 8, 8]) torch.Size([105])
random features: torch.Size([95, 64, 8, 8]) torch.Size([95])
random features: torch.Size([102, 64, 8, 8]) torch.Size([102])
all data: 1004
Local adapation with distilling: 0.0001
training loss: tensor(0.4958) feature loss: tensor(0.1741)
Local adapation with distilling: 0.0001
training loss: tensor(0.5437) feature loss: tensor(0.1729)
Local adapation with distilling: 0.0001
training loss: tensor(0.5091) feature loss: tensor(0.1776)
Local adapation with distilling: 0.0001
training loss: tensor(0.5843) feature loss: tensor(0.1741)
Local adapation with distilling: 0.0001
training loss: tensor(0.5141) feature loss: tensor(0.1763)
Local adapation with distilling: 0.0001
training loss: tensor(0.4871) feature loss: tensor(0.1730)
Local adapation with distilling: 0.0001
training loss: tensor(0.5755) feature loss: tensor(0.1816)
Local adapation with distilling: 0.0001
training loss: tensor(0.5700) feature loss: tensor(0.1822)
Local adapation with distilling: 0.0001
training loss: tensor(0.5886) feature loss: tensor(0.1701)
Local adapation with distilling: 0.0001
training loss: tensor(0.9333) feature loss: tensor(0.1736)
Global Model Acc on global data: 0.4751 length of data: 10000
-------------Round number:  73  -------------
selected users: [49, 14, 34, 70, 90, 35, 68, 76, 80, 9]
random features: torch.Size([99, 64, 8, 8]) torch.Size([99])
random features: torch.Size([99, 64, 8, 8]) torch.Size([99])
random features: torch.Size([95, 64, 8, 8]) torch.Size([95])
random features: torch.Size([96, 64, 8, 8]) torch.Size([96])
random features: torch.Size([95, 64, 8, 8]) torch.Size([95])
random features: torch.Size([106, 64, 8, 8]) torch.Size([106])
random features: torch.Size([103, 64, 8, 8]) torch.Size([103])
random features: torch.Size([106, 64, 8, 8]) torch.Size([106])
random features: torch.Size([96, 64, 8, 8]) torch.Size([96])
random features: torch.Size([102, 64, 8, 8]) torch.Size([102])
all data: 997
Local adapation with distilling: 0.0001
training loss: tensor(0.5280) feature loss: tensor(0.1735)
Local adapation with distilling: 0.0001
training loss: tensor(0.5105) feature loss: tensor(0.1699)
Local adapation with distilling: 0.0001
training loss: tensor(0.5335) feature loss: tensor(0.1703)
Local adapation with distilling: 0.0001
training loss: tensor(0.4963) feature loss: tensor(0.1757)
Local adapation with distilling: 0.0001
training loss: tensor(0.5597) feature loss: tensor(0.1744)
Local adapation with distilling: 0.0001
training loss: tensor(0.6601) feature loss: tensor(0.1744)
Local adapation with distilling: 0.0001
training loss: tensor(0.5501) feature loss: tensor(0.1712)
Local adapation with distilling: 0.0001
training loss: tensor(0.4627) feature loss: tensor(0.1687)
Local adapation with distilling: 0.0001
training loss: tensor(0.4787) feature loss: tensor(0.1734)
Local adapation with distilling: 0.0001
training loss: tensor(0.5363) feature loss: tensor(0.1771)
Global Model Acc on global data: 0.4944 length of data: 10000
-------------Round number:  74  -------------
selected users: [85, 64, 63, 80, 6, 12, 43, 17, 7, 8]
random features: torch.Size([100, 64, 8, 8]) torch.Size([100])
random features: torch.Size([98, 64, 8, 8]) torch.Size([98])
random features: torch.Size([101, 64, 8, 8]) torch.Size([101])
random features: torch.Size([96, 64, 8, 8]) torch.Size([96])
random features: torch.Size([104, 64, 8, 8]) torch.Size([104])
random features: torch.Size([96, 64, 8, 8]) torch.Size([96])
random features: torch.Size([98, 64, 8, 8]) torch.Size([98])
random features: torch.Size([107, 64, 8, 8]) torch.Size([107])
random features: torch.Size([95, 64, 8, 8]) torch.Size([95])
random features: torch.Size([96, 64, 8, 8]) torch.Size([96])
all data: 991
Local adapation with distilling: 0.0001
training loss: tensor(0.5269) feature loss: tensor(0.1673)
Local adapation with distilling: 0.0001
training loss: tensor(0.5746) feature loss: tensor(0.1652)
Local adapation with distilling: 0.0001
training loss: tensor(0.4918) feature loss: tensor(0.1714)
Local adapation with distilling: 0.0001
training loss: tensor(0.4516) feature loss: tensor(0.1663)
Local adapation with distilling: 0.0001
training loss: tensor(0.6454) feature loss: tensor(0.1704)
Local adapation with distilling: 0.0001
training loss: tensor(0.6356) feature loss: tensor(0.1622)
Local adapation with distilling: 0.0001
training loss: tensor(0.4921) feature loss: tensor(0.1704)
Local adapation with distilling: 0.0001
training loss: tensor(0.4781) feature loss: tensor(0.1682)
Local adapation with distilling: 0.0001
training loss: tensor(0.5979) feature loss: tensor(0.1709)
Local adapation with distilling: 0.0001
training loss: tensor(0.4741) feature loss: tensor(0.1680)
Global Model Acc on global data: 0.4968 length of data: 10000
-------------Round number:  75  -------------
selected users: [36, 7, 6, 45, 56, 54, 22, 37, 53, 68]
random features: torch.Size([101, 64, 8, 8]) torch.Size([101])
random features: torch.Size([95, 64, 8, 8]) torch.Size([95])
random features: torch.Size([104, 64, 8, 8]) torch.Size([104])
random features: torch.Size([100, 64, 8, 8]) torch.Size([100])
random features: torch.Size([110, 64, 8, 8]) torch.Size([110])
random features: torch.Size([104, 64, 8, 8]) torch.Size([104])
random features: torch.Size([102, 64, 8, 8]) torch.Size([102])
random features: torch.Size([101, 64, 8, 8]) torch.Size([101])
random features: torch.Size([115, 64, 8, 8]) torch.Size([115])
random features: torch.Size([103, 64, 8, 8]) torch.Size([103])
all data: 1035
Local adapation with distilling: 0.0001
training loss: tensor(0.6103) feature loss: tensor(0.1821)
Local adapation with distilling: 0.0001
training loss: tensor(0.6048) feature loss: tensor(0.1819)
Local adapation with distilling: 0.0001
training loss: tensor(0.6155) feature loss: tensor(0.1828)
Local adapation with distilling: 0.0001
training loss: tensor(0.6106) feature loss: tensor(0.1801)
Local adapation with distilling: 0.0001
training loss: tensor(0.6256) feature loss: tensor(0.1848)
Local adapation with distilling: 0.0001
training loss: tensor(0.7324) feature loss: tensor(0.1799)
Local adapation with distilling: 0.0001
training loss: tensor(0.9652) feature loss: tensor(0.1737)
Local adapation with distilling: 0.0001
training loss: tensor(0.5284) feature loss: tensor(0.1750)
Local adapation with distilling: 0.0001
training loss: tensor(0.5521) feature loss: tensor(0.1862)
Local adapation with distilling: 0.0001
training loss: tensor(0.5771) feature loss: tensor(0.1788)
Global Model Acc on global data: 0.4977 length of data: 10000
-------------Round number:  76  -------------
selected users: [38, 37, 32, 50, 10, 94, 19, 44, 86, 23]
random features: torch.Size([109, 64, 8, 8]) torch.Size([109])
random features: torch.Size([101, 64, 8, 8]) torch.Size([101])
random features: torch.Size([99, 64, 8, 8]) torch.Size([99])
random features: torch.Size([98, 64, 8, 8]) torch.Size([98])
random features: torch.Size([93, 64, 8, 8]) torch.Size([93])
random features: torch.Size([101, 64, 8, 8]) torch.Size([101])
random features: torch.Size([100, 64, 8, 8]) torch.Size([100])
random features: torch.Size([94, 64, 8, 8]) torch.Size([94])
random features: torch.Size([106, 64, 8, 8]) torch.Size([106])
random features: torch.Size([98, 64, 8, 8]) torch.Size([98])
all data: 999
Local adapation with distilling: 0.0001
training loss: tensor(0.4644) feature loss: tensor(0.1683)
Local adapation with distilling: 0.0001
training loss: tensor(0.4584) feature loss: tensor(0.1653)
Local adapation with distilling: 0.0001
training loss: tensor(0.6325) feature loss: tensor(0.1804)
Local adapation with distilling: 0.0001
training loss: tensor(0.5497) feature loss: tensor(0.1756)
Local adapation with distilling: 0.0001
training loss: tensor(0.5703) feature loss: tensor(0.1763)
Local adapation with distilling: 0.0001
training loss: tensor(0.5076) feature loss: tensor(0.1672)
Local adapation with distilling: 0.0001
training loss: tensor(0.5049) feature loss: tensor(0.1694)
Local adapation with distilling: 0.0001
training loss: tensor(0.5811) feature loss: tensor(0.1719)
Local adapation with distilling: 0.0001
training loss: tensor(0.4879) feature loss: tensor(0.1695)
Local adapation with distilling: 0.0001
training loss: tensor(0.6377) feature loss: tensor(0.1768)
Global Model Acc on global data: 0.481 length of data: 10000
-------------Round number:  77  -------------
selected users: [5, 93, 41, 96, 16, 42, 81, 91, 50, 58]
random features: torch.Size([102, 64, 8, 8]) torch.Size([102])
random features: torch.Size([104, 64, 8, 8]) torch.Size([104])
random features: torch.Size([95, 64, 8, 8]) torch.Size([95])
random features: torch.Size([102, 64, 8, 8]) torch.Size([102])
random features: torch.Size([106, 64, 8, 8]) torch.Size([106])
random features: torch.Size([95, 64, 8, 8]) torch.Size([95])
random features: torch.Size([102, 64, 8, 8]) torch.Size([102])
random features: torch.Size([105, 64, 8, 8]) torch.Size([105])
random features: torch.Size([98, 64, 8, 8]) torch.Size([98])
random features: torch.Size([101, 64, 8, 8]) torch.Size([101])
all data: 1010
Local adapation with distilling: 0.0001
training loss: tensor(0.6009) feature loss: tensor(0.1915)
Local adapation with distilling: 0.0001
training loss: tensor(0.6497) feature loss: tensor(0.2037)
Local adapation with distilling: 0.0001
training loss: tensor(0.5231) feature loss: tensor(0.1890)
Local adapation with distilling: 0.0001
training loss: tensor(0.6835) feature loss: tensor(0.1869)
Local adapation with distilling: 0.0001
training loss: tensor(0.5252) feature loss: tensor(0.1851)
Local adapation with distilling: 0.0001
training loss: tensor(0.5440) feature loss: tensor(0.1830)
Local adapation with distilling: 0.0001
training loss: tensor(0.7420) feature loss: tensor(0.1910)
Local adapation with distilling: 0.0001
training loss: tensor(0.5416) feature loss: tensor(0.2007)
Local adapation with distilling: 0.0001
training loss: tensor(0.4963) feature loss: tensor(0.1949)
Local adapation with distilling: 0.0001
training loss: tensor(0.5245) feature loss: tensor(0.1846)
Global Model Acc on global data: 0.4897 length of data: 10000
-------------Round number:  78  -------------
selected users: [9, 46, 7, 63, 15, 2, 74, 31, 5, 36]
random features: torch.Size([102, 64, 8, 8]) torch.Size([102])
random features: torch.Size([103, 64, 8, 8]) torch.Size([103])
random features: torch.Size([95, 64, 8, 8]) torch.Size([95])
random features: torch.Size([101, 64, 8, 8]) torch.Size([101])
random features: torch.Size([103, 64, 8, 8]) torch.Size([103])
random features: torch.Size([96, 64, 8, 8]) torch.Size([96])
random features: torch.Size([96, 64, 8, 8]) torch.Size([96])
random features: torch.Size([97, 64, 8, 8]) torch.Size([97])
random features: torch.Size([102, 64, 8, 8]) torch.Size([102])
random features: torch.Size([101, 64, 8, 8]) torch.Size([101])
all data: 996
Local adapation with distilling: 0.0001
training loss: tensor(0.6366) feature loss: tensor(0.1941)
Local adapation with distilling: 0.0001
training loss: tensor(0.6005) feature loss: tensor(0.1930)
Local adapation with distilling: 0.0001
training loss: tensor(0.5644) feature loss: tensor(0.1925)
Local adapation with distilling: 0.0001
training loss: tensor(0.5224) feature loss: tensor(0.1950)
Local adapation with distilling: 0.0001
training loss: tensor(0.9272) feature loss: tensor(0.2030)
Local adapation with distilling: 0.0001
training loss: tensor(0.4994) feature loss: tensor(0.1866)
Local adapation with distilling: 0.0001
training loss: tensor(0.5564) feature loss: tensor(0.1883)
Local adapation with distilling: 0.0001
training loss: tensor(0.5997) feature loss: tensor(0.1943)
Local adapation with distilling: 0.0001
training loss: tensor(0.5648) feature loss: tensor(0.1882)
Local adapation with distilling: 0.0001
training loss: tensor(0.5283) feature loss: tensor(0.1877)
Global Model Acc on global data: 0.51 length of data: 10000
save a model
-------------Round number:  79  -------------
selected users: [68, 18, 86, 60, 56, 32, 30, 24, 45, 92]
random features: torch.Size([103, 64, 8, 8]) torch.Size([103])
random features: torch.Size([99, 64, 8, 8]) torch.Size([99])
random features: torch.Size([106, 64, 8, 8]) torch.Size([106])
random features: torch.Size([96, 64, 8, 8]) torch.Size([96])
random features: torch.Size([110, 64, 8, 8]) torch.Size([110])
random features: torch.Size([99, 64, 8, 8]) torch.Size([99])
random features: torch.Size([95, 64, 8, 8]) torch.Size([95])
random features: torch.Size([98, 64, 8, 8]) torch.Size([98])
random features: torch.Size([100, 64, 8, 8]) torch.Size([100])
random features: torch.Size([93, 64, 8, 8]) torch.Size([93])
all data: 999
Local adapation with distilling: 0.0001
training loss: tensor(0.5078) feature loss: tensor(0.1579)
Local adapation with distilling: 0.0001
training loss: tensor(0.5274) feature loss: tensor(0.1690)
Local adapation with distilling: 0.0001
training loss: tensor(0.4282) feature loss: tensor(0.1583)
Local adapation with distilling: 0.0001
training loss: tensor(0.4359) feature loss: tensor(0.1639)
Local adapation with distilling: 0.0001
training loss: tensor(0.4822) feature loss: tensor(0.1579)
Local adapation with distilling: 0.0001
training loss: tensor(0.5530) feature loss: tensor(0.1638)
Local adapation with distilling: 0.0001
training loss: tensor(0.5260) feature loss: tensor(0.1572)
Local adapation with distilling: 0.0001
training loss: tensor(0.4668) feature loss: tensor(0.1573)
Local adapation with distilling: 0.0001
Terminated
