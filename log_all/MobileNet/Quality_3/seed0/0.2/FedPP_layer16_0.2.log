nohup: ignoring input
================================================================================
Summary of training process:
Dataset                : Cifar10
Batch size             : 64
Learing rate           : 0.001
Number of total clients: 100
Split method           : quantity
Split parameter        : 3.0
Clients per round      : 10
Number of global rounds: 100
Number of local rounds : 10
Feature from layer     : 16
Feature percentage     : 0.2
Local training loss    : CE_CE_KL
Loss of beta           : 1.0
Algorithm              : FedFea
Modelname              : MOBNET
Mode                   : training
Seed                   : 0
================================================================================
Files already downloaded and verified
Files already downloaded and verified
Class frequencies:
client,class0,class1,class2,class3,class4,class5,class6,class7,class8,class9,Amount
Client   0,0.298,0.00,0.00,0.00,0.00,0.375,0.00,0.00,0.327,0.00,496
Client   1,0.00,0.321,0.00,0.00,0.00,0.358,0.00,0.00,0.00,0.321,520
Client   2,0.307,0.346,0.346,0.00,0.00,0.00,0.00,0.00,0.00,0.00,482
Client   3,0.00,0.00,0.00,0.337,0.00,0.00,0.377,0.286,0.00,0.00,531
Client   4,0.00,0.00,0.340,0.00,0.320,0.00,0.00,0.00,0.00,0.340,491
Client   5,0.00,0.00,0.327,0.00,0.308,0.365,0.00,0.00,0.00,0.00,510
Client   6,0.00,0.00,0.319,0.00,0.300,0.00,0.382,0.00,0.00,0.00,524
Client   7,0.00,0.00,0.00,0.00,0.330,0.00,0.00,0.319,0.00,0.351,476
Client   8,0.00,0.347,0.00,0.00,0.00,0.00,0.00,0.316,0.337,0.00,481
Client   9,0.286,0.00,0.00,0.00,0.00,0.00,0.389,0.00,0.00,0.325,514
Client  10,0.315,0.00,0.00,0.00,0.00,0.00,0.00,0.326,0.00,0.358,466
Client  11,0.00,0.313,0.00,0.00,0.00,0.00,0.375,0.00,0.00,0.313,534
Client  12,0.306,0.347,0.347,0.00,0.00,0.00,0.00,0.00,0.00,0.00,481
Client  13,0.00,0.329,0.00,0.352,0.00,0.00,0.00,0.00,0.319,0.00,508
Client  14,0.00,0.00,0.00,0.359,0.315,0.00,0.00,0.00,0.325,0.00,498
Client  15,0.00,0.00,0.00,0.00,0.00,0.361,0.00,0.00,0.315,0.324,515
Client  16,0.00,0.00,0.00,0.337,0.00,0.00,0.377,0.286,0.00,0.00,531
Client  17,0.00,0.00,0.00,0.00,0.00,0.346,0.372,0.283,0.00,0.00,538
Client  18,0.00,0.337,0.00,0.00,0.00,0.00,0.00,0.00,0.327,0.337,496
Client  19,0.00,0.00,0.00,0.356,0.312,0.00,0.00,0.00,0.00,0.332,503
Client  20,0.309,0.351,0.00,0.00,0.00,0.00,0.00,0.00,0.340,0.00,476
Client  21,0.312,0.355,0.00,0.00,0.333,0.00,0.00,0.00,0.00,0.00,471
Client  22,0.00,0.00,0.326,0.349,0.00,0.00,0.00,0.00,0.00,0.326,513
Client  23,0.298,0.00,0.339,0.363,0.00,0.00,0.00,0.00,0.00,0.00,493
Client  24,0.00,0.00,0.340,0.00,0.320,0.00,0.00,0.00,0.00,0.340,491
Client  25,0.00,0.00,0.00,0.00,0.00,0.367,0.00,0.302,0.00,0.331,504
Client  26,0.00,0.00,0.00,0.00,0.00,0.00,0.378,0.00,0.306,0.316,529
Client  27,0.00,0.00,0.00,0.368,0.320,0.00,0.00,0.312,0.00,0.00,487
Client  28,0.00,0.00,0.00,0.00,0.00,0.360,0.00,0.00,0.315,0.325,514
Client  29,0.00,0.00,0.00,0.328,0.00,0.00,0.366,0.00,0.00,0.306,546
Client  30,0.309,0.00,0.352,0.00,0.00,0.00,0.00,0.00,0.339,0.00,475
Client  31,0.00,0.344,0.00,0.00,0.00,0.00,0.00,0.313,0.00,0.344,486
Client  32,0.00,0.00,0.335,0.359,0.00,0.00,0.00,0.305,0.00,0.00,498
Client  33,0.302,0.00,0.00,0.368,0.00,0.00,0.00,0.00,0.331,0.00,487
Client  34,0.00,0.352,0.00,0.00,0.328,0.00,0.00,0.320,0.00,0.00,475
Client  35,0.00,0.315,0.00,0.337,0.00,0.348,0.00,0.00,0.00,0.00,531
Client  36,0.289,0.00,0.00,0.00,0.00,0.00,0.394,0.00,0.317,0.00,508
Client  37,0.00,0.00,0.00,0.00,0.307,0.00,0.394,0.299,0.00,0.00,508
Client  38,0.00,0.00,0.00,0.00,0.00,0.339,0.366,0.00,0.295,0.00,546
Client  39,0.00,0.00,0.322,0.00,0.00,0.356,0.00,0.00,0.00,0.322,519
Client  40,0.320,0.00,0.00,0.00,0.00,0.00,0.00,0.330,0.350,0.00,460
Client  41,0.00,0.352,0.00,0.00,0.328,0.00,0.00,0.320,0.00,0.00,475
Client  42,0.00,0.00,0.352,0.00,0.328,0.00,0.00,0.320,0.00,0.00,475
Client  43,0.298,0.00,0.00,0.363,0.00,0.00,0.00,0.00,0.00,0.339,493
Client  44,0.313,0.00,0.355,0.00,0.332,0.00,0.00,0.00,0.00,0.00,470
Client  45,0.00,0.331,0.00,0.00,0.00,0.367,0.00,0.302,0.00,0.00,504
Client  46,0.00,0.00,0.00,0.00,0.00,0.00,0.385,0.293,0.00,0.322,519
Client  47,0.00,0.00,0.00,0.00,0.333,0.00,0.00,0.323,0.344,0.00,468
Client  48,0.309,0.352,0.00,0.00,0.00,0.00,0.00,0.00,0.339,0.00,475
Client  49,0.00,0.00,0.337,0.00,0.00,0.00,0.00,0.00,0.325,0.337,495
Client  50,0.298,0.339,0.00,0.363,0.00,0.00,0.00,0.00,0.00,0.00,493
Client  51,0.00,0.344,0.344,0.00,0.00,0.00,0.00,0.311,0.00,0.00,485
Client  52,0.286,0.00,0.325,0.00,0.00,0.00,0.389,0.00,0.00,0.00,514
Client  53,0.00,0.00,0.326,0.350,0.00,0.00,0.00,0.00,0.00,0.324,512
Client  54,0.00,0.00,0.319,0.00,0.298,0.00,0.382,0.00,0.00,0.00,523
Client  55,0.304,0.00,0.00,0.00,0.00,0.383,0.00,0.313,0.00,0.00,483
Client  56,0.00,0.303,0.00,0.00,0.00,0.335,0.362,0.00,0.00,0.00,552
Client  57,0.00,0.00,0.00,0.00,0.308,0.00,0.394,0.298,0.00,0.00,507
Client  58,0.289,0.00,0.00,0.00,0.00,0.00,0.394,0.00,0.317,0.00,508
Client  59,0.00,0.322,0.00,0.00,0.00,0.357,0.00,0.00,0.00,0.320,518
Client  60,0.306,0.347,0.347,0.00,0.00,0.00,0.00,0.00,0.00,0.00,481
Client  61,0.00,0.327,0.00,0.00,0.308,0.365,0.00,0.00,0.00,0.00,507
Client  62,0.316,0.00,0.359,0.00,0.00,0.00,0.00,0.325,0.00,0.00,465
Client  63,0.00,0.00,0.00,0.354,0.00,0.00,0.00,0.00,0.318,0.328,506
Client  64,0.00,0.00,0.00,0.00,0.317,0.376,0.00,0.307,0.00,0.00,492
Client  65,0.295,0.00,0.00,0.00,0.00,0.371,0.00,0.00,0.00,0.333,498
Client  66,0.00,0.00,0.00,0.327,0.00,0.00,0.368,0.00,0.00,0.305,544
Client  67,0.00,0.351,0.00,0.00,0.330,0.00,0.00,0.319,0.00,0.00,473
Client  68,0.00,0.00,0.00,0.00,0.302,0.00,0.387,0.00,0.311,0.00,517
Client  69,0.00,0.00,0.337,0.00,0.00,0.00,0.00,0.00,0.327,0.337,493
Client  70,0.304,0.00,0.00,0.00,0.00,0.383,0.00,0.313,0.00,0.00,483
Client  71,0.00,0.327,0.00,0.00,0.308,0.365,0.00,0.00,0.00,0.00,507
Client  72,0.00,0.00,0.324,0.00,0.00,0.361,0.00,0.00,0.314,0.00,512
Client  73,0.00,0.00,0.00,0.340,0.00,0.353,0.00,0.00,0.307,0.00,524
Client  74,0.00,0.344,0.00,0.00,0.323,0.00,0.00,0.00,0.333,0.00,483
Client  75,0.304,0.00,0.00,0.00,0.00,0.383,0.00,0.313,0.00,0.00,483
Client  76,0.00,0.00,0.00,0.333,0.292,0.00,0.375,0.00,0.00,0.00,534
Client  77,0.317,0.00,0.358,0.00,0.00,0.00,0.00,0.325,0.00,0.00,464
Client  78,0.00,0.00,0.00,0.340,0.00,0.353,0.00,0.00,0.307,0.00,524
Client  79,0.00,0.333,0.333,0.00,0.00,0.00,0.00,0.00,0.00,0.333,498
Client  80,0.306,0.00,0.00,0.370,0.324,0.00,0.00,0.00,0.00,0.00,481
Client  81,0.287,0.324,0.00,0.00,0.00,0.00,0.390,0.00,0.00,0.00,513
Client  82,0.317,0.00,0.358,0.00,0.00,0.00,0.00,0.325,0.00,0.00,464
Client  83,0.00,0.00,0.329,0.352,0.00,0.00,0.00,0.00,0.319,0.00,505
Client  84,0.306,0.00,0.00,0.370,0.324,0.00,0.00,0.00,0.00,0.00,481
Client  85,0.00,0.00,0.00,0.00,0.311,0.369,0.00,0.00,0.321,0.00,502
Client  86,0.00,0.00,0.312,0.00,0.00,0.00,0.376,0.00,0.00,0.312,532
Client  87,0.309,0.00,0.00,0.374,0.00,0.00,0.00,0.317,0.00,0.00,476
Client  88,0.00,0.344,0.00,0.00,0.323,0.00,0.00,0.00,0.333,0.00,483
Client  89,0.00,0.00,0.00,0.327,0.00,0.00,0.368,0.00,0.00,0.305,544
Client  90,0.309,0.00,0.00,0.374,0.00,0.00,0.00,0.317,0.00,0.00,476
Client  91,0.00,0.314,0.00,0.336,0.00,0.350,0.00,0.00,0.00,0.00,529
Client  92,0.313,0.00,0.354,0.00,0.333,0.00,0.00,0.00,0.00,0.00,469
Client  93,0.00,0.00,0.00,0.340,0.00,0.353,0.00,0.00,0.307,0.00,524
Client  94,0.00,0.00,0.00,0.00,0.308,0.00,0.394,0.298,0.00,0.00,507
Client  95,0.00,0.331,0.00,0.00,0.00,0.369,0.00,0.301,0.00,0.00,502
Client  96,0.287,0.00,0.324,0.00,0.00,0.00,0.390,0.00,0.00,0.00,513
Client  97,0.00,0.00,0.347,0.00,0.00,0.00,0.00,0.316,0.337,0.00,478
Client  98,0.00,0.344,0.00,0.00,0.323,0.00,0.00,0.00,0.333,0.00,483
Client  99,0.313,0.00,0.00,0.00,0.333,0.00,0.00,0.00,0.00,0.354,469
0 [0 5 8] [0 5 8] [1 2 3 4 6 7 9]
0 training: Counter({5: 186, 8: 162, 0: 148}) testing iid: Counter({8: 1000, 0: 1000, 5: 1000})
1 [1 5 9] [1 5 9] [0 2 3 4 6 7 8]
1 training: Counter({5: 186, 1: 167, 9: 167}) testing iid: Counter({1: 1000, 9: 1000, 5: 1000})
2 [0 1 2] [0 1 2] [3 4 5 6 7 8 9]
2 training: Counter({1: 167, 2: 167, 0: 148}) testing iid: Counter({0: 1000, 1: 1000, 2: 1000})
3 [3 6 7] [3 6 7] [0 1 2 4 5 8 9]
3 training: Counter({6: 200, 3: 179, 7: 152}) testing iid: Counter({3: 1000, 6: 1000, 7: 1000})
4 [2 4 9] [2 4 9] [0 1 3 5 6 7 8]
4 training: Counter({2: 167, 9: 167, 4: 157}) testing iid: Counter({9: 1000, 4: 1000, 2: 1000})
5 [2 4 5] [2 4 5] [0 1 3 6 7 8 9]
5 training: Counter({5: 186, 2: 167, 4: 157}) testing iid: Counter({5: 1000, 4: 1000, 2: 1000})
6 [2 4 6] [2 4 6] [0 1 3 5 7 8 9]
6 training: Counter({6: 200, 2: 167, 4: 157}) testing iid: Counter({6: 1000, 4: 1000, 2: 1000})
7 [4 7 9] [4 7 9] [0 1 2 3 5 6 8]
7 training: Counter({9: 167, 4: 157, 7: 152}) testing iid: Counter({9: 1000, 7: 1000, 4: 1000})
8 [1 7 8] [1 7 8] [0 2 3 4 5 6 9]
8 training: Counter({1: 167, 8: 162, 7: 152}) testing iid: Counter({8: 1000, 1: 1000, 7: 1000})
9 [0 6 9] [0 6 9] [1 2 3 4 5 7 8]
9 training: Counter({6: 200, 9: 167, 0: 147}) testing iid: Counter({0: 1000, 6: 1000, 9: 1000})
10 [0 7 9] [0 7 9] [1 2 3 4 5 6 8]
10 training: Counter({9: 167, 7: 152, 0: 147}) testing iid: Counter({0: 1000, 9: 1000, 7: 1000})
11 [1 6 9] [1 6 9] [0 2 3 4 5 7 8]
11 training: Counter({6: 200, 1: 167, 9: 167}) testing iid: Counter({6: 1000, 1: 1000, 9: 1000})
12 [0 1 2] [0 1 2] [3 4 5 6 7 8 9]
12 training: Counter({1: 167, 2: 167, 0: 147}) testing iid: Counter({0: 1000, 1: 1000, 2: 1000})
13 [1 3 8] [1 3 8] [0 2 4 5 6 7 9]
13 training: Counter({3: 179, 1: 167, 8: 162}) testing iid: Counter({3: 1000, 8: 1000, 1: 1000})
14 [3 4 8] [3 4 8] [0 1 2 5 6 7 9]
14 training: Counter({3: 179, 8: 162, 4: 157}) testing iid: Counter({3: 1000, 8: 1000, 4: 1000})
15 [5 8 9] [5 8 9] [0 1 2 3 4 6 7]
15 training: Counter({5: 186, 9: 167, 8: 162}) testing iid: Counter({8: 1000, 9: 1000, 5: 1000})
16 [3 6 7] [3 6 7] [0 1 2 4 5 8 9]
16 training: Counter({6: 200, 3: 179, 7: 152}) testing iid: Counter({3: 1000, 6: 1000, 7: 1000})
17 [5 6 7] [5 6 7] [0 1 2 3 4 8 9]
17 training: Counter({6: 200, 5: 186, 7: 152}) testing iid: Counter({6: 1000, 5: 1000, 7: 1000})
18 [1 8 9] [1 8 9] [0 2 3 4 5 6 7]
18 training: Counter({1: 167, 9: 167, 8: 162}) testing iid: Counter({8: 1000, 1: 1000, 9: 1000})
19 [3 4 9] [3 4 9] [0 1 2 5 6 7 8]
19 training: Counter({3: 179, 9: 167, 4: 157}) testing iid: Counter({3: 1000, 9: 1000, 4: 1000})
20 [0 1 8] [0 1 8] [2 3 4 5 6 7 9]
20 training: Counter({1: 167, 8: 162, 0: 147}) testing iid: Counter({8: 1000, 0: 1000, 1: 1000})
21 [0 1 4] [0 1 4] [2 3 5 6 7 8 9]
21 training: Counter({1: 167, 4: 157, 0: 147}) testing iid: Counter({0: 1000, 1: 1000, 4: 1000})
22 [2 3 9] [2 3 9] [0 1 4 5 6 7 8]
22 training: Counter({3: 179, 2: 167, 9: 167}) testing iid: Counter({3: 1000, 9: 1000, 2: 1000})
23 [0 2 3] [0 2 3] [1 4 5 6 7 8 9]
23 training: Counter({3: 179, 2: 167, 0: 147}) testing iid: Counter({3: 1000, 0: 1000, 2: 1000})
24 [2 4 9] [2 4 9] [0 1 3 5 6 7 8]
24 training: Counter({2: 167, 9: 167, 4: 157}) testing iid: Counter({9: 1000, 4: 1000, 2: 1000})
25 [5 7 9] [5 7 9] [0 1 2 3 4 6 8]
25 training: Counter({5: 185, 9: 167, 7: 152}) testing iid: Counter({9: 1000, 5: 1000, 7: 1000})
26 [6 8 9] [6 8 9] [0 1 2 3 4 5 7]
26 training: Counter({6: 200, 9: 167, 8: 162}) testing iid: Counter({8: 1000, 6: 1000, 9: 1000})
27 [3 4 7] [3 4 7] [0 1 2 5 6 8 9]
27 training: Counter({3: 179, 4: 156, 7: 152}) testing iid: Counter({3: 1000, 7: 1000, 4: 1000})
28 [5 8 9] [5 8 9] [0 1 2 3 4 6 7]
28 training: Counter({5: 185, 9: 167, 8: 162}) testing iid: Counter({8: 1000, 9: 1000, 5: 1000})
29 [3 6 9] [3 6 9] [0 1 2 4 5 7 8]
29 training: Counter({6: 200, 3: 179, 9: 167}) testing iid: Counter({3: 1000, 6: 1000, 9: 1000})
30 [0 2 8] [0 2 8] [1 3 4 5 6 7 9]
30 training: Counter({2: 167, 8: 161, 0: 147}) testing iid: Counter({8: 1000, 0: 1000, 2: 1000})
31 [1 7 9] [1 7 9] [0 2 3 4 5 6 8]
31 training: Counter({1: 167, 9: 167, 7: 152}) testing iid: Counter({1: 1000, 9: 1000, 7: 1000})
32 [2 3 7] [2 3 7] [0 1 4 5 6 8 9]
32 training: Counter({3: 179, 2: 167, 7: 152}) testing iid: Counter({3: 1000, 7: 1000, 2: 1000})
33 [0 3 8] [0 3 8] [1 2 4 5 6 7 9]
33 training: Counter({3: 179, 8: 161, 0: 147}) testing iid: Counter({3: 1000, 8: 1000, 0: 1000})
34 [1 4 7] [1 4 7] [0 2 3 5 6 8 9]
34 training: Counter({1: 167, 4: 156, 7: 152}) testing iid: Counter({1: 1000, 7: 1000, 4: 1000})
35 [1 3 5] [1 3 5] [0 2 4 6 7 8 9]
35 training: Counter({5: 185, 3: 179, 1: 167}) testing iid: Counter({3: 1000, 1: 1000, 5: 1000})
36 [0 6 8] [0 6 8] [1 2 3 4 5 7 9]
36 training: Counter({6: 200, 8: 161, 0: 147}) testing iid: Counter({8: 1000, 0: 1000, 6: 1000})
37 [4 6 7] [4 6 7] [0 1 2 3 5 8 9]
37 training: Counter({6: 200, 4: 156, 7: 152}) testing iid: Counter({6: 1000, 7: 1000, 4: 1000})
38 [5 6 8] [5 6 8] [0 1 2 3 4 7 9]
38 training: Counter({6: 200, 5: 185, 8: 161}) testing iid: Counter({8: 1000, 6: 1000, 5: 1000})
39 [2 5 9] [2 5 9] [0 1 3 4 6 7 8]
39 training: Counter({5: 185, 2: 167, 9: 167}) testing iid: Counter({9: 1000, 5: 1000, 2: 1000})
40 [0 7 8] [0 7 8] [1 2 3 4 5 6 9]
40 training: Counter({8: 161, 7: 152, 0: 147}) testing iid: Counter({8: 1000, 0: 1000, 7: 1000})
41 [1 4 7] [1 4 7] [0 2 3 5 6 8 9]
41 training: Counter({1: 167, 4: 156, 7: 152}) testing iid: Counter({1: 1000, 7: 1000, 4: 1000})
42 [2 4 7] [2 4 7] [0 1 3 5 6 8 9]
42 training: Counter({2: 167, 4: 156, 7: 152}) testing iid: Counter({7: 1000, 4: 1000, 2: 1000})
43 [0 3 9] [0 3 9] [1 2 4 5 6 7 8]
43 training: Counter({3: 179, 9: 167, 0: 147}) testing iid: Counter({3: 1000, 0: 1000, 9: 1000})
44 [0 2 4] [0 2 4] [1 3 5 6 7 8 9]
44 training: Counter({2: 167, 4: 156, 0: 147}) testing iid: Counter({0: 1000, 4: 1000, 2: 1000})
45 [1 5 7] [1 5 7] [0 2 3 4 6 8 9]
45 training: Counter({5: 185, 1: 167, 7: 152}) testing iid: Counter({1: 1000, 5: 1000, 7: 1000})
46 [6 7 9] [6 7 9] [0 1 2 3 4 5 8]
46 training: Counter({6: 200, 9: 167, 7: 152}) testing iid: Counter({6: 1000, 9: 1000, 7: 1000})
47 [4 7 8] [4 7 8] [0 1 2 3 5 6 9]
47 training: Counter({8: 161, 4: 156, 7: 151}) testing iid: Counter({8: 1000, 7: 1000, 4: 1000})
48 [0 1 8] [0 1 8] [2 3 4 5 6 7 9]
48 training: Counter({1: 167, 8: 161, 0: 147}) testing iid: Counter({8: 1000, 0: 1000, 1: 1000})
49 [2 8 9] [2 8 9] [0 1 3 4 5 6 7]
49 training: Counter({2: 167, 9: 167, 8: 161}) testing iid: Counter({8: 1000, 9: 1000, 2: 1000})
50 [0 1 3] [0 1 3] [2 4 5 6 7 8 9]
50 training: Counter({3: 179, 1: 167, 0: 147}) testing iid: Counter({3: 1000, 0: 1000, 1: 1000})
51 [1 2 7] [1 2 7] [0 3 4 5 6 8 9]
51 training: Counter({1: 167, 2: 167, 7: 151}) testing iid: Counter({1: 1000, 7: 1000, 2: 1000})
52 [0 2 6] [0 2 6] [1 3 4 5 7 8 9]
52 training: Counter({6: 200, 2: 167, 0: 147}) testing iid: Counter({0: 1000, 6: 1000, 2: 1000})
53 [2 3 9] [2 3 9] [0 1 4 5 6 7 8]
53 training: Counter({3: 179, 2: 167, 9: 166}) testing iid: Counter({3: 1000, 9: 1000, 2: 1000})
54 [2 4 6] [2 4 6] [0 1 3 5 7 8 9]
54 training: Counter({6: 200, 2: 167, 4: 156}) testing iid: Counter({6: 1000, 4: 1000, 2: 1000})
55 [0 5 7] [0 5 7] [1 2 3 4 6 8 9]
55 training: Counter({5: 185, 7: 151, 0: 147}) testing iid: Counter({0: 1000, 5: 1000, 7: 1000})
56 [1 5 6] [1 5 6] [0 2 3 4 7 8 9]
56 training: Counter({6: 200, 5: 185, 1: 167}) testing iid: Counter({6: 1000, 1: 1000, 5: 1000})
57 [4 6 7] [4 6 7] [0 1 2 3 5 8 9]
57 training: Counter({6: 200, 4: 156, 7: 151}) testing iid: Counter({6: 1000, 7: 1000, 4: 1000})
58 [0 6 8] [0 6 8] [1 2 3 4 5 7 9]
58 training: Counter({6: 200, 8: 161, 0: 147}) testing iid: Counter({8: 1000, 0: 1000, 6: 1000})
59 [1 5 9] [1 5 9] [0 2 3 4 6 7 8]
59 training: Counter({5: 185, 1: 167, 9: 166}) testing iid: Counter({1: 1000, 9: 1000, 5: 1000})
60 [0 1 2] [0 1 2] [3 4 5 6 7 8 9]
60 training: Counter({1: 167, 2: 167, 0: 147}) testing iid: Counter({0: 1000, 1: 1000, 2: 1000})
61 [1 4 5] [1 4 5] [0 2 3 6 7 8 9]
61 training: Counter({5: 185, 1: 166, 4: 156}) testing iid: Counter({1: 1000, 5: 1000, 4: 1000})
62 [0 2 7] [0 2 7] [1 3 4 5 6 8 9]
62 training: Counter({2: 167, 7: 151, 0: 147}) testing iid: Counter({0: 1000, 7: 1000, 2: 1000})
63 [3 8 9] [3 8 9] [0 1 2 4 5 6 7]
63 training: Counter({3: 179, 9: 166, 8: 161}) testing iid: Counter({3: 1000, 8: 1000, 9: 1000})
64 [4 5 7] [4 5 7] [0 1 2 3 6 8 9]
64 training: Counter({5: 185, 4: 156, 7: 151}) testing iid: Counter({5: 1000, 7: 1000, 4: 1000})
65 [0 5 9] [0 5 9] [1 2 3 4 6 7 8]
65 training: Counter({5: 185, 9: 166, 0: 147}) testing iid: Counter({0: 1000, 9: 1000, 5: 1000})
66 [3 6 9] [3 6 9] [0 1 2 4 5 7 8]
66 training: Counter({6: 200, 3: 178, 9: 166}) testing iid: Counter({3: 1000, 6: 1000, 9: 1000})
67 [1 4 7] [1 4 7] [0 2 3 5 6 8 9]
67 training: Counter({1: 166, 4: 156, 7: 151}) testing iid: Counter({1: 1000, 7: 1000, 4: 1000})
68 [4 6 8] [4 6 8] [0 1 2 3 5 7 9]
68 training: Counter({6: 200, 8: 161, 4: 156}) testing iid: Counter({8: 1000, 6: 1000, 4: 1000})
69 [2 8 9] [2 8 9] [0 1 3 4 5 6 7]
69 training: Counter({2: 166, 9: 166, 8: 161}) testing iid: Counter({8: 1000, 9: 1000, 2: 1000})
70 [0 5 7] [0 5 7] [1 2 3 4 6 8 9]
70 training: Counter({5: 185, 7: 151, 0: 147}) testing iid: Counter({0: 1000, 5: 1000, 7: 1000})
71 [1 4 5] [1 4 5] [0 2 3 6 7 8 9]
71 training: Counter({5: 185, 1: 166, 4: 156}) testing iid: Counter({1: 1000, 5: 1000, 4: 1000})
72 [2 5 8] [2 5 8] [0 1 3 4 6 7 9]
72 training: Counter({5: 185, 2: 166, 8: 161}) testing iid: Counter({8: 1000, 5: 1000, 2: 1000})
73 [3 5 8] [3 5 8] [0 1 2 4 6 7 9]
73 training: Counter({5: 185, 3: 178, 8: 161}) testing iid: Counter({3: 1000, 8: 1000, 5: 1000})
74 [1 4 8] [1 4 8] [0 2 3 5 6 7 9]
74 training: Counter({1: 166, 8: 161, 4: 156}) testing iid: Counter({8: 1000, 1: 1000, 4: 1000})
75 [0 5 7] [0 5 7] [1 2 3 4 6 8 9]
75 training: Counter({5: 185, 7: 151, 0: 147}) testing iid: Counter({0: 1000, 5: 1000, 7: 1000})
76 [3 4 6] [3 4 6] [0 1 2 5 7 8 9]
76 training: Counter({6: 200, 3: 178, 4: 156}) testing iid: Counter({3: 1000, 6: 1000, 4: 1000})
77 [0 2 7] [0 2 7] [1 3 4 5 6 8 9]
77 training: Counter({2: 166, 7: 151, 0: 147}) testing iid: Counter({0: 1000, 7: 1000, 2: 1000})
78 [3 5 8] [3 5 8] [0 1 2 4 6 7 9]
78 training: Counter({5: 185, 3: 178, 8: 161}) testing iid: Counter({3: 1000, 8: 1000, 5: 1000})
79 [1 2 9] [1 2 9] [0 3 4 5 6 7 8]
79 training: Counter({1: 166, 2: 166, 9: 166}) testing iid: Counter({1: 1000, 9: 1000, 2: 1000})
80 [0 3 4] [0 3 4] [1 2 5 6 7 8 9]
80 training: Counter({3: 178, 4: 156, 0: 147}) testing iid: Counter({3: 1000, 0: 1000, 4: 1000})
81 [0 1 6] [0 1 6] [2 3 4 5 7 8 9]
81 training: Counter({6: 200, 1: 166, 0: 147}) testing iid: Counter({0: 1000, 6: 1000, 1: 1000})
82 [0 2 7] [0 2 7] [1 3 4 5 6 8 9]
82 training: Counter({2: 166, 7: 151, 0: 147}) testing iid: Counter({0: 1000, 7: 1000, 2: 1000})
83 [2 3 8] [2 3 8] [0 1 4 5 6 7 9]
83 training: Counter({3: 178, 2: 166, 8: 161}) testing iid: Counter({3: 1000, 8: 1000, 2: 1000})
84 [0 3 4] [0 3 4] [1 2 5 6 7 8 9]
84 training: Counter({3: 178, 4: 156, 0: 147}) testing iid: Counter({3: 1000, 0: 1000, 4: 1000})
85 [4 5 8] [4 5 8] [0 1 2 3 6 7 9]
85 training: Counter({5: 185, 8: 161, 4: 156}) testing iid: Counter({8: 1000, 5: 1000, 4: 1000})
86 [2 6 9] [2 6 9] [0 1 3 4 5 7 8]
86 training: Counter({6: 200, 2: 166, 9: 166}) testing iid: Counter({6: 1000, 9: 1000, 2: 1000})
87 [0 3 7] [0 3 7] [1 2 4 5 6 8 9]
87 training: Counter({3: 178, 7: 151, 0: 147}) testing iid: Counter({3: 1000, 0: 1000, 7: 1000})
88 [1 4 8] [1 4 8] [0 2 3 5 6 7 9]
88 training: Counter({1: 166, 8: 161, 4: 156}) testing iid: Counter({8: 1000, 1: 1000, 4: 1000})
89 [3 6 9] [3 6 9] [0 1 2 4 5 7 8]
89 training: Counter({6: 200, 3: 178, 9: 166}) testing iid: Counter({3: 1000, 6: 1000, 9: 1000})
90 [0 3 7] [0 3 7] [1 2 4 5 6 8 9]
90 training: Counter({3: 178, 7: 151, 0: 147}) testing iid: Counter({3: 1000, 0: 1000, 7: 1000})
91 [1 3 5] [1 3 5] [0 2 4 6 7 8 9]
91 training: Counter({5: 185, 3: 178, 1: 166}) testing iid: Counter({3: 1000, 1: 1000, 5: 1000})
92 [0 2 4] [0 2 4] [1 3 5 6 7 8 9]
92 training: Counter({2: 166, 4: 156, 0: 147}) testing iid: Counter({0: 1000, 4: 1000, 2: 1000})
93 [3 5 8] [3 5 8] [0 1 2 4 6 7 9]
93 training: Counter({5: 185, 3: 178, 8: 161}) testing iid: Counter({3: 1000, 8: 1000, 5: 1000})
94 [4 6 7] [4 6 7] [0 1 2 3 5 8 9]
94 training: Counter({6: 200, 4: 156, 7: 151}) testing iid: Counter({6: 1000, 7: 1000, 4: 1000})
95 [1 5 7] [1 5 7] [0 2 3 4 6 8 9]
95 training: Counter({5: 185, 1: 166, 7: 151}) testing iid: Counter({1: 1000, 5: 1000, 7: 1000})
96 [0 2 6] [0 2 6] [1 3 4 5 7 8 9]
96 training: Counter({6: 200, 2: 166, 0: 147}) testing iid: Counter({0: 1000, 6: 1000, 2: 1000})
97 [2 7 8] [2 7 8] [0 1 3 4 5 6 9]
97 training: Counter({2: 166, 8: 161, 7: 151}) testing iid: Counter({8: 1000, 7: 1000, 2: 1000})
98 [1 4 8] [1 4 8] [0 2 3 5 6 7 9]
98 training: Counter({1: 166, 8: 161, 4: 156}) testing iid: Counter({8: 1000, 1: 1000, 4: 1000})
99 [0 4 9] [0 4 9] [1 2 3 5 6 7 8]
99 training: Counter({9: 166, 4: 156, 0: 147}) testing iid: Counter({0: 1000, 9: 1000, 4: 1000})
Num_samples of Training set per client: [496, 520, 482, 531, 491, 510, 524, 476, 481, 514, 466, 534, 481, 508, 498, 515, 531, 538, 496, 503, 476, 471, 513, 493, 491, 504, 529, 487, 514, 546, 475, 486, 498, 487, 475, 531, 508, 508, 546, 519, 460, 475, 475, 493, 470, 504, 519, 468, 475, 495, 493, 485, 514, 512, 523, 483, 552, 507, 508, 518, 481, 507, 465, 506, 492, 498, 544, 473, 517, 493, 483, 507, 512, 524, 483, 483, 534, 464, 524, 498, 481, 513, 464, 505, 481, 502, 532, 476, 483, 544, 476, 529, 469, 524, 507, 502, 513, 478, 483, 469]
Total_training_samples: 50000
Global test set: 10000
Finish Generating Samples, distribution saved
MobileNetV2(
  (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (layers): Sequential(
    (0): Block(
      (conv1): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): Block(
      (conv1): Conv2d(16, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=96, bias=False)
      (bn2): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(96, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(16, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (2): Block(
      (conv1): Conv2d(24, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=144, bias=False)
      (bn2): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(144, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (3): Block(
      (conv1): Conv2d(24, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(144, 144, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=144, bias=False)
      (bn2): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(144, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (4): Block(
      (conv1): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
      (bn2): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(192, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (5): Block(
      (conv1): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
      (bn2): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(192, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (6): Block(
      (conv1): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(192, 192, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=192, bias=False)
      (bn2): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(192, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (7): Block(
      (conv1): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
      (bn2): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (8): Block(
      (conv1): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
      (bn2): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (9): Block(
      (conv1): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
      (bn2): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (10): Block(
      (conv1): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
      (bn2): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(384, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(64, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (11): Block(
      (conv1): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)
      (bn2): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (12): Block(
      (conv1): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)
      (bn2): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (13): Block(
      (conv1): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(576, 576, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=576, bias=False)
      (bn2): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(576, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (14): Block(
      (conv1): Conv2d(160, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(960, 960, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=960, bias=False)
      (bn2): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(960, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (15): Block(
      (conv1): Conv2d(160, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(960, 960, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=960, bias=False)
      (bn2): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(960, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (16): Block(
      (conv1): Conv2d(160, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(960, 960, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=960, bias=False)
      (bn2): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(960, 320, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(160, 320, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (conv2): Conv2d(320, 1280, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn2): BatchNorm2d(1280, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (linear): Linear(in_features=1280, out_features=10, bias=True)
)
number of parameters: 2296922
clients initializting...
output size: 10
  0%|          | 0/100 [00:00<?, ?it/s]  1%|          | 1/100 [00:00<00:59,  1.66it/s]  2%|▏         | 2/100 [00:01<00:59,  1.66it/s]  3%|▎         | 3/100 [00:01<00:59,  1.64it/s]  4%|▍         | 4/100 [00:02<00:59,  1.62it/s]  5%|▌         | 5/100 [00:03<00:58,  1.62it/s]  6%|▌         | 6/100 [00:03<00:57,  1.62it/s]  7%|▋         | 7/100 [00:04<00:57,  1.62it/s]  8%|▊         | 8/100 [00:04<00:56,  1.63it/s]  9%|▉         | 9/100 [00:05<00:56,  1.62it/s] 10%|█         | 10/100 [00:06<00:55,  1.62it/s] 11%|█         | 11/100 [00:06<00:55,  1.62it/s] 12%|█▏        | 12/100 [00:07<00:54,  1.61it/s] 13%|█▎        | 13/100 [00:08<00:54,  1.60it/s] 14%|█▍        | 14/100 [00:08<00:53,  1.61it/s] 15%|█▌        | 15/100 [00:09<00:53,  1.60it/s] 16%|█▌        | 16/100 [00:09<00:52,  1.60it/s] 17%|█▋        | 17/100 [00:10<00:52,  1.58it/s] 18%|█▊        | 18/100 [00:11<00:51,  1.59it/s] 19%|█▉        | 19/100 [00:11<00:50,  1.59it/s] 20%|██        | 20/100 [00:12<00:50,  1.59it/s] 21%|██        | 21/100 [00:13<00:49,  1.58it/s] 22%|██▏       | 22/100 [00:13<00:48,  1.60it/s] 23%|██▎       | 23/100 [00:14<00:48,  1.59it/s] 24%|██▍       | 24/100 [00:14<00:47,  1.58it/s] 25%|██▌       | 25/100 [00:15<00:47,  1.58it/s] 26%|██▌       | 26/100 [00:16<00:46,  1.58it/s] 27%|██▋       | 27/100 [00:16<00:46,  1.58it/s] 28%|██▊       | 28/100 [00:17<00:45,  1.58it/s] 29%|██▉       | 29/100 [00:18<00:44,  1.59it/s] 30%|███       | 30/100 [00:18<00:43,  1.60it/s] 31%|███       | 31/100 [00:19<00:42,  1.62it/s] 32%|███▏      | 32/100 [00:19<00:41,  1.62it/s] 33%|███▎      | 33/100 [00:20<00:41,  1.63it/s] 34%|███▍      | 34/100 [00:21<00:40,  1.62it/s] 35%|███▌      | 35/100 [00:25<01:51,  1.71s/it] 36%|███▌      | 36/100 [00:26<01:28,  1.38s/it] 37%|███▋      | 37/100 [00:26<01:12,  1.15s/it] 38%|███▊      | 38/100 [00:27<01:01,  1.01it/s] 39%|███▉      | 39/100 [00:27<00:53,  1.13it/s] 40%|████      | 40/100 [00:28<00:48,  1.25it/s] 41%|████      | 41/100 [00:29<00:44,  1.32it/s] 42%|████▏     | 42/100 [00:29<00:41,  1.40it/s] 43%|████▎     | 43/100 [00:30<00:39,  1.45it/s] 44%|████▍     | 44/100 [00:31<00:37,  1.49it/s] 45%|████▌     | 45/100 [00:31<00:36,  1.52it/s] 46%|████▌     | 46/100 [00:32<00:35,  1.54it/s] 47%|████▋     | 47/100 [00:32<00:34,  1.55it/s] 48%|████▊     | 48/100 [00:33<00:33,  1.57it/s] 49%|████▉     | 49/100 [00:34<00:32,  1.58it/s] 50%|█████     | 50/100 [00:34<00:31,  1.57it/s] 51%|█████     | 51/100 [00:35<00:31,  1.57it/s] 52%|█████▏    | 52/100 [00:36<00:30,  1.58it/s] 53%|█████▎    | 53/100 [00:36<00:30,  1.57it/s] 54%|█████▍    | 54/100 [00:37<00:29,  1.57it/s] 55%|█████▌    | 55/100 [00:38<00:28,  1.58it/s] 56%|█████▌    | 56/100 [00:38<00:27,  1.58it/s] 57%|█████▋    | 57/100 [00:39<00:27,  1.58it/s] 58%|█████▊    | 58/100 [00:39<00:26,  1.59it/s] 59%|█████▉    | 59/100 [00:40<00:25,  1.59it/s] 60%|██████    | 60/100 [00:41<00:25,  1.58it/s] 61%|██████    | 61/100 [00:41<00:24,  1.58it/s] 62%|██████▏   | 62/100 [00:42<00:24,  1.57it/s] 63%|██████▎   | 63/100 [00:43<00:23,  1.57it/s] 64%|██████▍   | 64/100 [00:43<00:22,  1.57it/s] 65%|██████▌   | 65/100 [00:44<00:22,  1.58it/s] 66%|██████▌   | 66/100 [00:44<00:21,  1.58it/s] 67%|██████▋   | 67/100 [00:45<00:20,  1.58it/s] 68%|██████▊   | 68/100 [00:46<00:20,  1.60it/s] 69%|██████▉   | 69/100 [00:46<00:19,  1.61it/s] 70%|███████   | 70/100 [00:47<00:18,  1.61it/s] 71%|███████   | 71/100 [00:48<00:18,  1.59it/s] 72%|███████▏  | 72/100 [00:52<00:45,  1.64s/it] 73%|███████▎  | 73/100 [00:52<00:36,  1.34s/it] 74%|███████▍  | 74/100 [00:53<00:29,  1.13s/it] 75%|███████▌  | 75/100 [00:54<00:24,  1.01it/s] 76%|███████▌  | 76/100 [00:54<00:21,  1.13it/s] 77%|███████▋  | 77/100 [00:55<00:18,  1.23it/s] 78%|███████▊  | 78/100 [00:55<00:16,  1.32it/s] 79%|███████▉  | 79/100 [00:56<00:15,  1.38it/s] 80%|████████  | 80/100 [00:57<00:13,  1.44it/s] 81%|████████  | 81/100 [00:57<00:12,  1.49it/s] 82%|████████▏ | 82/100 [00:58<00:11,  1.52it/s] 83%|████████▎ | 83/100 [00:59<00:11,  1.52it/s] 84%|████████▍ | 84/100 [00:59<00:10,  1.54it/s] 85%|████████▌ | 85/100 [01:00<00:09,  1.56it/s] 86%|████████▌ | 86/100 [01:01<00:08,  1.57it/s] 87%|████████▋ | 87/100 [01:01<00:08,  1.57it/s] 88%|████████▊ | 88/100 [01:02<00:07,  1.57it/s] 89%|████████▉ | 89/100 [01:02<00:06,  1.57it/s] 90%|█████████ | 90/100 [01:03<00:06,  1.57it/s] 91%|█████████ | 91/100 [01:04<00:05,  1.59it/s] 92%|█████████▏| 92/100 [01:04<00:05,  1.59it/s] 93%|█████████▎| 93/100 [01:05<00:04,  1.59it/s] 94%|█████████▍| 94/100 [01:06<00:03,  1.59it/s] 95%|█████████▌| 95/100 [01:06<00:03,  1.61it/s] 96%|█████████▌| 96/100 [01:07<00:02,  1.61it/s] 97%|█████████▋| 97/100 [01:07<00:01,  1.60it/s] 98%|█████████▊| 98/100 [01:08<00:01,  1.60it/s] 99%|█████████▉| 99/100 [01:09<00:00,  1.59it/s]100%|██████████| 100/100 [01:09<00:00,  1.59it/s]100%|██████████| 100/100 [01:09<00:00,  1.43it/s]
Number of users per round / total users: 10  /  100
Finished creating FL server.
=== Training starts: algorithm FedFea ===
-------------Round number:  0  -------------
selected users: [26, 86, 2, 55, 75, 93, 16, 73, 54, 95]
random features: torch.Size([105, 320, 4, 4]) torch.Size([105])
random features: torch.Size([106, 320, 4, 4]) torch.Size([106])
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
random features: torch.Size([104, 320, 4, 4]) torch.Size([104])
random features: torch.Size([106, 320, 4, 4]) torch.Size([106])
random features: torch.Size([104, 320, 4, 4]) torch.Size([104])
random features: torch.Size([104, 320, 4, 4]) torch.Size([104])
random features: torch.Size([100, 320, 4, 4]) torch.Size([100])
all data: 1017
Local adapation with distilling: 0.001
training loss: tensor(2.7776) feature loss: tensor(0.0127)
Local adapation with distilling: 0.001
training loss: tensor(2.8425) feature loss: tensor(0.0124)
Local adapation with distilling: 0.001
training loss: tensor(2.7948) feature loss: tensor(0.0120)
Local adapation with distilling: 0.001
training loss: tensor(2.8570) feature loss: tensor(0.0149)
Local adapation with distilling: 0.001
training loss: tensor(2.8482) feature loss: tensor(0.0150)
Local adapation with distilling: 0.001
training loss: tensor(2.8902) feature loss: tensor(0.0157)
Local adapation with distilling: 0.001
training loss: tensor(2.9016) feature loss: tensor(0.0166)
Local adapation with distilling: 0.001
training loss: tensor(2.8458) feature loss: tensor(0.0154)
Local adapation with distilling: 0.001
training loss: tensor(3.0063) feature loss: tensor(0.0080)
Local adapation with distilling: 0.001
training loss: tensor(2.8007) feature loss: tensor(0.0129)
Global Model Acc on global data: 0.1 length of data: 10000
save a model
-------------Round number:  1  -------------
selected users: [80, 84, 33, 81, 93, 17, 36, 82, 69, 65]
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
random features: torch.Size([97, 320, 4, 4]) torch.Size([97])
random features: torch.Size([102, 320, 4, 4]) torch.Size([102])
random features: torch.Size([104, 320, 4, 4]) torch.Size([104])
random features: torch.Size([107, 320, 4, 4]) torch.Size([107])
random features: torch.Size([101, 320, 4, 4]) torch.Size([101])
random features: torch.Size([92, 320, 4, 4]) torch.Size([92])
random features: torch.Size([98, 320, 4, 4]) torch.Size([98])
random features: torch.Size([99, 320, 4, 4]) torch.Size([99])
all data: 992
Local adapation with distilling: 0.000982
training loss: tensor(2.8208) feature loss: tensor(0.3123)
Local adapation with distilling: 0.000982
training loss: tensor(2.8403) feature loss: tensor(0.3137)
Local adapation with distilling: 0.000982
training loss: tensor(2.5573) feature loss: tensor(0.3185)
Local adapation with distilling: 0.000982
training loss: tensor(2.7666) feature loss: tensor(0.2974)
Local adapation with distilling: 0.000982
training loss: tensor(2.5099) feature loss: tensor(0.2892)
Local adapation with distilling: 0.000982
training loss: tensor(2.6125) feature loss: tensor(0.2707)
Local adapation with distilling: 0.000982
training loss: tensor(2.5191) feature loss: tensor(0.2900)
Local adapation with distilling: 0.000982
training loss: tensor(2.6834) feature loss: tensor(0.3097)
Local adapation with distilling: 0.000982
training loss: tensor(2.6963) feature loss: tensor(0.3106)
Local adapation with distilling: 0.000982
training loss: tensor(2.5250) feature loss: tensor(0.3014)
Global Model Acc on global data: 0.1809 length of data: 10000
save a model
-------------Round number:  2  -------------
selected users: [83, 30, 56, 24, 16, 23, 2, 27, 28, 13]
random features: torch.Size([101, 320, 4, 4]) torch.Size([101])
random features: torch.Size([95, 320, 4, 4]) torch.Size([95])
random features: torch.Size([110, 320, 4, 4]) torch.Size([110])
random features: torch.Size([98, 320, 4, 4]) torch.Size([98])
random features: torch.Size([106, 320, 4, 4]) torch.Size([106])
random features: torch.Size([98, 320, 4, 4]) torch.Size([98])
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
random features: torch.Size([97, 320, 4, 4]) torch.Size([97])
random features: torch.Size([102, 320, 4, 4]) torch.Size([102])
random features: torch.Size([101, 320, 4, 4]) torch.Size([101])
all data: 1004
Local adapation with distilling: 0.000964
training loss: tensor(2.2231) feature loss: tensor(0.2320)
Local adapation with distilling: 0.000964
training loss: tensor(2.2584) feature loss: tensor(0.2429)
Local adapation with distilling: 0.000964
training loss: tensor(2.1696) feature loss: tensor(0.2256)
Local adapation with distilling: 0.000964
training loss: tensor(2.3011) feature loss: tensor(0.2369)
Local adapation with distilling: 0.000964
training loss: tensor(2.3666) feature loss: tensor(0.2258)
Local adapation with distilling: 0.000964
training loss: tensor(2.2875) feature loss: tensor(0.2375)
Local adapation with distilling: 0.000964
training loss: tensor(2.1578) feature loss: tensor(0.2348)
Local adapation with distilling: 0.000964
training loss: tensor(2.4726) feature loss: tensor(0.2469)
Local adapation with distilling: 0.000964
training loss: tensor(2.3758) feature loss: tensor(0.2251)
Local adapation with distilling: 0.000964
training loss: tensor(2.1664) feature loss: tensor(0.2366)
Traceback (most recent call last):
  File "main.py", line 160, in <module>
    run()
  File "main.py", line 152, in run
    seed=args.seed
  File "main.py", line 72, in main
    server.train()
  File "/auto/homes/tx229/federated/FL_v4/FLAlgorithms/servers/myserver.py", line 127, in train
    global_acc = self.evaluate(glob_iter)  #global model evaluation
  File "/auto/homes/tx229/federated/FL_v4/FLAlgorithms/servers/myserver.py", line 155, in evaluate
    output = self.model(data) 
  File "/home/tx229/anaconda3/envs/posterior-network/lib/python3.6/site-packages/torch/nn/modules/module.py", line 1051, in _call_impl
    return forward_call(*input, **kwargs)
  File "/auto/homes/tx229/federated/FL_v4/FLAlgorithms/trainmodel/models.py", line 352, in forward
    out = self.layers(out)
  File "/home/tx229/anaconda3/envs/posterior-network/lib/python3.6/site-packages/torch/nn/modules/module.py", line 1051, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/tx229/anaconda3/envs/posterior-network/lib/python3.6/site-packages/torch/nn/modules/container.py", line 139, in forward
    input = module(input)
  File "/home/tx229/anaconda3/envs/posterior-network/lib/python3.6/site-packages/torch/nn/modules/module.py", line 1051, in _call_impl
    return forward_call(*input, **kwargs)
  File "/auto/homes/tx229/federated/FL_v4/FLAlgorithms/trainmodel/models.py", line 315, in forward
    out = F.relu(self.bn1(self.conv1(x)))
  File "/home/tx229/anaconda3/envs/posterior-network/lib/python3.6/site-packages/torch/nn/modules/module.py", line 1051, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/tx229/anaconda3/envs/posterior-network/lib/python3.6/site-packages/torch/nn/modules/batchnorm.py", line 178, in forward
    self.eps,
  File "/home/tx229/anaconda3/envs/posterior-network/lib/python3.6/site-packages/torch/nn/functional.py", line 2282, in batch_norm
    input, weight, bias, running_mean, running_var, training, momentum, eps, torch.backends.cudnn.enabled
RuntimeError: CUDA out of memory. Tried to allocate 18.00 MiB (GPU 0; 47.46 GiB total capacity; 5.48 GiB already allocated; 20.44 MiB free; 5.63 GiB reserved in total by PyTorch)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           training loss: tensor(1.8752) feature loss: tensor(0.2354)
Local adapation with distilling: 0.000892
training loss: tensor(1.9333) feature loss: tensor(0.2454)
Local adapation with distilling: 0.000892
training loss: tensor(1.8606) feature loss: tensor(0.2422)
Local adapation with distilling: 0.000892
training loss: tensor(1.9692) feature loss: tensor(0.2570)
Local adapation with distilling: 0.000892
training loss: tensor(2.0642) feature loss: tensor(0.2428)
Global Model Acc on global data: 0.3538 length of data: 10000
save a model
-------------Round number:  7  -------------
selected users: [37, 26, 78, 91, 49, 15, 93, 71, 86, 22]
random features: torch.Size([101, 320, 4, 4]) torch.Size([101])
random features: torch.Size([105, 320, 4, 4]) torch.Size([105])
random features: torch.Size([104, 320, 4, 4]) torch.Size([104])
random features: torch.Size([105, 320, 4, 4]) torch.Size([105])
random features: torch.Size([99, 320, 4, 4]) torch.Size([99])
random features: torch.Size([103, 320, 4, 4]) torch.Size([103])
random features: torch.Size([104, 320, 4, 4]) torch.Size([104])
random features: torch.Size([101, 320, 4, 4]) torch.Size([101])
random features: torch.Size([106, 320, 4, 4]) torch.Size([106])
random features: torch.Size([102, 320, 4, 4]) torch.Size([102])
all data: 1030
Local adapation with distilling: 0.000874
training loss: tensor(1.8807) feature loss: tensor(0.2318)
Local adapation with distilling: 0.000874
training loss: tensor(1.7548) feature loss: tensor(0.2400)
Local adapation with distilling: 0.000874
training loss: tensor(1.8218) feature loss: tensor(0.2528)
Local adapation with distilling: 0.000874
training loss: tensor(1.7889) feature loss: tensor(0.2467)
Local adapation with distilling: 0.000874
training loss: tensor(1.7603) feature loss: tensor(0.2560)
Local adapation with distilling: 0.000874
training loss: tensor(1.9617) feature loss: tensor(0.2451)
Local adapation with distilling: 0.000874
training loss: tensor(1.8073) feature loss: tensor(0.2542)
Local adapation with distilling: 0.000874
training loss: tensor(1.7482) feature loss: tensor(0.2424)
Local adapation with distilling: 0.000874
training loss: tensor(1.7498) feature loss: tensor(0.2384)
Local adapation with distilling: 0.000874
training loss: tensor(2.0087) feature loss: tensor(0.2458)
Global Model Acc on global data: 0.2425 length of data: 10000
-------------Round number:  8  -------------
selected users: [17, 23, 1, 44, 55, 99, 86, 29, 62, 33]
random features: torch.Size([107, 320, 4, 4]) torch.Size([107])
random features: torch.Size([98, 320, 4, 4]) torch.Size([98])
random features: torch.Size([104, 320, 4, 4]) torch.Size([104])
random features: torch.Size([94, 320, 4, 4]) torch.Size([94])
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
random features: torch.Size([93, 320, 4, 4]) torch.Size([93])
random features: torch.Size([106, 320, 4, 4]) torch.Size([106])
random features: torch.Size([109, 320, 4, 4]) torch.Size([109])
random features: torch.Size([93, 320, 4, 4]) torch.Size([93])
random features: torch.Size([97, 320, 4, 4]) torch.Size([97])
all data: 997
Local adapation with distilling: 0.000856
training loss: tensor(1.8581) feature loss: tensor(0.2276)
Local adapation with distilling: 0.000856
training loss: tensor(1.9057) feature loss: tensor(0.2305)
Local adapation with distilling: 0.000856
training loss: tensor(1.9164) feature loss: tensor(0.2276)
Local adapation with distilling: 0.000856
training loss: tensor(1.9386) feature loss: tensor(0.2405)
Local adapation with distilling: 0.000856
training loss: tensor(1.9009) feature loss: tensor(0.2284)
Local adapation with distilling: 0.000856
training loss: tensor(1.9195) feature loss: tensor(0.2346)
Local adapation with distilling: 0.000856
training loss: tensor(1.7807) feature loss: tensor(0.2274)
Local adapation with distilling: 0.000856
training loss: tensor(1.8752) feature loss: tensor(0.2223)
Local adapation with distilling: 0.000856
training loss: tensor(1.9774) feature loss: tensor(0.2380)
Local adapation with distilling: 0.000856
training loss: tensor(1.9027) feature loss: tensor(0.2245)
Global Model Acc on global data: 0.3129 length of data: 10000
-------------Round number:  9  -------------
selected users: [75, 42, 46, 68, 3, 39, 23, 20, 70, 73]
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
random features: torch.Size([95, 320, 4, 4]) torch.Size([95])
random features: torch.Size([103, 320, 4, 4]) torch.Size([103])
random features: torch.Size([103, 320, 4, 4]) torch.Size([103])
random features: torch.Size([106, 320, 4, 4]) torch.Size([106])
random features: torch.Size([103, 320, 4, 4]) torch.Size([103])
random features: torch.Size([98, 320, 4, 4]) torch.Size([98])
random features: torch.Size([95, 320, 4, 4]) torch.Size([95])
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
random features: torch.Size([104, 320, 4, 4]) torch.Size([104])
all data: 999
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(1.7363) feature loss: tensor(0.1772)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(1.8449) feature loss: tensor(0.1845)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(1.7366) feature loss: tensor(0.1659)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(1.9321) feature loss: tensor(0.1666)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(1.8414) feature loss: tensor(0.1685)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(1.8359) feature loss: tensor(0.1714)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(1.7044) feature loss: tensor(0.1724)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(1.8232) feature loss: tensor(0.1770)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(1.7189) feature loss: tensor(0.1713)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(1.8078) feature loss: tensor(0.1711)
Global Model Acc on global data: 0.2767 length of data: 10000
-------------Round number:  10  -------------
selected users: [19, 14, 43, 37, 66, 3, 79, 41, 38, 68]
random features: torch.Size([100, 320, 4, 4]) torch.Size([100])
random features: torch.Size([99, 320, 4, 4]) torch.Size([99])
random features: torch.Size([98, 320, 4, 4]) torch.Size([98])
random features: torch.Size([101, 320, 4, 4]) torch.Size([101])
random features: torch.Size([108, 320, 4, 4]) torch.Size([108])
random features: torch.Size([106, 320, 4, 4]) torch.Size([106])
random features: torch.Size([99, 320, 4, 4]) torch.Size([99])
random features: torch.Size([95, 320, 4, 4]) torch.Size([95])
random features: torch.Size([109, 320, 4, 4]) torch.Size([109])
random features: torch.Size([103, 320, 4, 4]) torch.Size([103])
all data: 1018
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(1.7618) feature loss: tensor(0.2371)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(1.7109) feature loss: tensor(0.2386)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(1.7349) feature loss: tensor(0.2346)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(1.7501) feature loss: tensor(0.2399)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(1.6989) feature loss: tensor(0.2332)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(1.7231) feature loss: tensor(0.2365)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(1.7619) feature loss: tensor(0.2413)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(1.7114) feature loss: tensor(0.2305)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(1.6811) feature loss: tensor(0.2244)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(1.8458) feature loss: tensor(0.2334)
Global Model Acc on global data: 0.2981 length of data: 10000
-------------Round number:  11  -------------
selected users: [46, 49, 22, 58, 41, 98, 62, 29, 30, 51]
random features: torch.Size([103, 320, 4, 4]) torch.Size([103])
random features: torch.Size([99, 320, 4, 4]) torch.Size([99])
random features: torch.Size([102, 320, 4, 4]) torch.Size([102])
random features: torch.Size([101, 320, 4, 4]) torch.Size([101])
random features: torch.Size([95, 320, 4, 4]) torch.Size([95])
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
random features: torch.Size([93, 320, 4, 4]) torch.Size([93])
random features: torch.Size([109, 320, 4, 4]) torch.Size([109])
random features: torch.Size([95, 320, 4, 4]) torch.Size([95])
random features: torch.Size([97, 320, 4, 4]) torch.Size([97])
all data: 990
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(1.6280) feature loss: tensor(0.2385)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(1.6440) feature loss: tensor(0.2501)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(1.8785) feature loss: tensor(0.2424)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(1.6489) feature loss: tensor(0.2456)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(1.6119) feature loss: tensor(0.2371)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(1.6517) feature loss: tensor(0.2432)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(1.7204) feature loss: tensor(0.2572)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(1.6264) feature loss: tensor(0.2383)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(1.7457) feature loss: tensor(0.2497)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(1.6621) feature loss: tensor(0.2536)
Global Model Acc on global data: 0.2487 length of data: 10000
-------------Round number:  12  -------------
selected users: [17, 41, 92, 14, 68, 31, 89, 15, 21, 60]
random features: torch.Size([107, 320, 4, 4]) torch.Size([107])
random features: torch.Size([95, 320, 4, 4]) torch.Size([95])
random features: torch.Size([93, 320, 4, 4]) torch.Size([93])
random features: torch.Size([99, 320, 4, 4]) torch.Size([99])
random features: torch.Size([103, 320, 4, 4]) torch.Size([103])
random features: torch.Size([97, 320, 4, 4]) torch.Size([97])
random features: torch.Size([108, 320, 4, 4]) torch.Size([108])
random features: torch.Size([103, 320, 4, 4]) torch.Size([103])
random features: torch.Size([94, 320, 4, 4]) torch.Size([94])
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
all data: 995
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(1.7688) feature loss: tensor(0.2627)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(1.6802) feature loss: tensor(0.2663)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(1.8482) feature loss: tensor(0.2617)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(1.7403) feature loss: tensor(0.2739)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(1.8266) feature loss: tensor(0.2659)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(1.8503) feature loss: tensor(0.2764)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(1.7478) feature loss: tensor(0.2658)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(1.9331) feature loss: tensor(0.2656)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(1.7578) feature loss: tensor(0.2725)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(1.7573) feature loss: tensor(0.2654)
Global Model Acc on global data: 0.3045 length of data: 10000
-------------Round number:  13  -------------
selected users: [37, 62, 83, 14, 43, 9, 44, 31, 69, 57]
random features: torch.Size([101, 320, 4, 4]) torch.Size([101])
random features: torch.Size([93, 320, 4, 4]) torch.Size([93])
random features: torch.Size([101, 320, 4, 4]) torch.Size([101])
random features: torch.Size([99, 320, 4, 4]) torch.Size([99])
random features: torch.Size([98, 320, 4, 4]) torch.Size([98])
random features: torch.Size([102, 320, 4, 4]) torch.Size([102])
random features: torch.Size([94, 320, 4, 4]) torch.Size([94])
random features: torch.Size([97, 320, 4, 4]) torch.Size([97])
random features: torch.Size([98, 320, 4, 4]) torch.Size([98])
random features: torch.Size([101, 320, 4, 4]) torch.Size([101])
all data: 984
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(1.5472) feature loss: tensor(0.2151)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(1.5445) feature loss: tensor(0.2210)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(1.5429) feature loss: tensor(0.2273)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(1.4797) feature loss: tensor(0.2159)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(1.4934) feature loss: tensor(0.2161)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(1.7378) feature loss: tensor(0.2171)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(1.5876) feature loss: tensor(0.2159)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(1.5601) feature loss: tensor(0.2132)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(1.5293) feature loss: tensor(0.2212)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(1.5804) feature loss: tensor(0.2122)
Global Model Acc on global data: 0.3337 length of data: 10000
-------------Round number:  14  -------------
selected users: [24, 39, 35, 44, 55, 70, 82, 40, 91, 65]
random features: torch.Size([98, 320, 4, 4]) torch.Size([98])
random features: torch.Size([103, 320, 4, 4]) torch.Size([103])
random features: torch.Size([106, 320, 4, 4]) torch.Size([106])
random features: torch.Size([94, 320, 4, 4]) torch.Size([94])
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
random features: torch.Size([92, 320, 4, 4]) torch.Size([92])
random features: torch.Size([92, 320, 4, 4]) torch.Size([92])
random features: torch.Size([105, 320, 4, 4]) torch.Size([105])
random features: torch.Size([99, 320, 4, 4]) torch.Size([99])
all data: 981
Local adapation with distilling: 0.000748
training loss: tensor(1.6041) feature loss: tensor(0.2330)
Local adapation with distilling: 0.000748
training loss: tensor(1.6448) feature loss: tensor(0.2305)
Local adapation with distilling: 0.000748
training loss: tensor(1.6819) feature loss: tensor(0.2353)
Local adapation with distilling: 0.000748
training loss: tensor(1.5918) feature loss: tensor(0.2292)
Local adapation with distilling: 0.000748
training loss: tensor(1.6010) feature loss: tensor(0.2467)
Local adapation with distilling: 0.000748
training loss: tensor(1.5812) feature loss: tensor(0.2446)
Local adapation with distilling: 0.000748
training loss: tensor(1.6289) feature loss: tensor(0.2337)
Local adapation with distilling: 0.000748
training loss: tensor(1.7318) feature loss: tensor(0.2403)
Local adapation with distilling: 0.000748
training loss: tensor(1.6748) feature loss: tensor(0.2355)
Local adapation with distilling: 0.000748
training loss: tensor(1.5668) feature loss: tensor(0.2329)
Global Model Acc on global data: 0.2394 length of data: 10000
-------------Round number:  15  -------------
selected users: [84, 36, 57, 51, 46, 78, 93, 14, 11, 59]
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
random features: torch.Size([101, 320, 4, 4]) torch.Size([101])
random features: torch.Size([101, 320, 4, 4]) torch.Size([101])
random features: torch.Size([97, 320, 4, 4]) torch.Size([97])
random features: torch.Size([103, 320, 4, 4]) torch.Size([103])
random features: torch.Size([104, 320, 4, 4]) torch.Size([104])
random features: torch.Size([104, 320, 4, 4]) torch.Size([104])
random features: torch.Size([99, 320, 4, 4]) torch.Size([99])
random features: torch.Size([106, 320, 4, 4]) torch.Size([106])
random features: torch.Size([103, 320, 4, 4]) torch.Size([103])
all data: 1014
Local adapation with distilling: 0.00073
training loss: tensor(1.7122) feature loss: tensor(0.2769)
Local adapation with distilling: 0.00073
training loss: tensor(1.6945) feature loss: tensor(0.2805)
Local adapation with distilling: 0.00073
training loss: tensor(1.6997) feature loss: tensor(0.2794)
Local adapation with distilling: 0.00073
training loss: tensor(1.6514) feature loss: tensor(0.2754)
Local adapation with distilling: 0.00073
training loss: tensor(1.6934) feature loss: tensor(0.2747)
Local adapation with distilling: 0.00073
training loss: tensor(1.7067) feature loss: tensor(0.2743)
Local adapation with distilling: 0.00073
training loss: tensor(1.7439) feature loss: tensor(0.2727)
Local adapation with distilling: 0.00073
training loss: tensor(1.6487) feature loss: tensor(0.2782)
Local adapation with distilling: 0.00073
training loss: tensor(1.7093) feature loss: tensor(0.2741)
Local adapation with distilling: 0.00073
training loss: tensor(1.7755) feature loss: tensor(0.2765)
Global Model Acc on global data: 0.3134 length of data: 10000
-------------Round number:  16  -------------
selected users: [7, 25, 71, 42, 47, 29, 63, 88, 50, 9]
random features: torch.Size([95, 320, 4, 4]) torch.Size([95])
random features: torch.Size([100, 320, 4, 4]) torch.Size([100])
random features: torch.Size([101, 320, 4, 4]) torch.Size([101])
random features: torch.Size([95, 320, 4, 4]) torch.Size([95])
random features: torch.Size([93, 320, 4, 4]) torch.Size([93])
random features: torch.Size([109, 320, 4, 4]) torch.Size([109])
random features: torch.Size([101, 320, 4, 4]) torch.Size([101])
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
random features: torch.Size([98, 320, 4, 4]) torch.Size([98])
random features: torch.Size([102, 320, 4, 4]) torch.Size([102])
all data: 990
Local adapation with distilling: 0.000712
training loss: tensor(1.6160) feature loss: tensor(0.1889)
Local adapation with distilling: 0.000712
training loss: tensor(1.5662) feature loss: tensor(0.1831)
Local adapation with distilling: 0.000712
training loss: tensor(1.5715) feature loss: tensor(0.1852)
Local adapation with distilling: 0.000712
training loss: tensor(1.6487) feature loss: tensor(0.1967)
Local adapation with distilling: 0.000712
training loss: tensor(1.5527) feature loss: tensor(0.1881)
Local adapation with distilling: 0.000712
training loss: tensor(1.5351) feature loss: tensor(0.1795)
Local adapation with distilling: 0.000712
training loss: tensor(1.5627) feature loss: tensor(0.1769)
Local adapation with distilling: 0.000712
training loss: tensor(1.5429) feature loss: tensor(0.1775)
Local adapation with distilling: 0.000712
training loss: tensor(1.5936) feature loss: tensor(0.1829)
Local adapation with distilling: 0.000712
training loss: tensor(1.6068) feature loss: tensor(0.1811)
Global Model Acc on global data: 0.3016 length of data: 10000
-------------Round number:  17  -------------
selected users: [71, 28, 9, 4, 73, 34, 94, 92, 47, 37]
random features: torch.Size([101, 320, 4, 4]) torch.Size([101])
random features: torch.Size([102, 320, 4, 4]) torch.Size([102])
random features: torch.Size([102, 320, 4, 4]) torch.Size([102])
random features: torch.Size([98, 320, 4, 4]) torch.Size([98])
random features: torch.Size([104, 320, 4, 4]) torch.Size([104])
random features: torch.Size([95, 320, 4, 4]) torch.Size([95])
random features: torch.Size([101, 320, 4, 4]) torch.Size([101])
random features: torch.Size([93, 320, 4, 4]) torch.Size([93])
random features: torch.Size([93, 320, 4, 4]) torch.Size([93])
random features: torch.Size([101, 320, 4, 4]) torch.Size([101])
all data: 990
Local adapation with distilling: 0.000694
training loss: tensor(1.4390) feature loss: tensor(0.1730)
Local adapation with distilling: 0.000694
training loss: tensor(1.6170) feature loss: tensor(0.1772)
Local adapation with distilling: 0.000694
training loss: tensor(1.7290) feature loss: tensor(0.1729)
Local adapation with distilling: 0.000694
training loss: tensor(1.5121) feature loss: tensor(0.1807)
Local adapation with distilling: 0.000694
training loss: tensor(1.5708) feature loss: tensor(0.1702)
Local adapation with distilling: 0.000694
training loss: tensor(1.4674) feature loss: tensor(0.1786)
Local adapation with distilling: 0.000694
training loss: tensor(1.5479) feature loss: tensor(0.1751)
Local adapation with distilling: 0.000694
training loss: tensor(1.5763) feature loss: tensor(0.1826)
Local adapation with distilling: 0.000694
training loss: tensor(1.4394) feature loss: tensor(0.1727)
Local adapation with distilling: 0.000694
training loss: tensor(1.4970) feature loss: tensor(0.1738)
Global Model Acc on global data: 0.3132 length of data: 10000
-------------Round number:  18  -------------
selected users: [53, 47, 43, 54, 33, 48, 0, 12, 44, 91]
random features: torch.Size([115, 320, 4, 4]) torch.Size([115])
random features: torch.Size([93, 320, 4, 4]) torch.Size([93])
random features: torch.Size([98, 320, 4, 4]) torch.Size([98])
random features: torch.Size([104, 320, 4, 4]) torch.Size([104])
random features: torch.Size([97, 320, 4, 4]) torch.Size([97])
random features: torch.Size([95, 320, 4, 4]) torch.Size([95])
random features: torch.Size([99, 320, 4, 4]) torch.Size([99])
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
random features: torch.Size([94, 320, 4, 4]) torch.Size([94])
random features: torch.Size([105, 320, 4, 4]) torch.Size([105])
all data: 996
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(1.5891) feature loss: tensor(0.2168)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(1.5700) feature loss: tensor(0.2042)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(1.6006) feature loss: tensor(0.2109)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(1.7449) feature loss: tensor(0.2097)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(1.6279) feature loss: tensor(0.2206)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(1.7201) feature loss: tensor(0.2135)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(1.6400) feature loss: tensor(0.2166)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(1.6732) feature loss: tensor(0.2211)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(1.6127) feature loss: tensor(0.2109)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(1.6428) feature loss: tensor(0.2151)
Global Model Acc on global data: 0.2826 length of data: 10000
-------------Round number:  19  -------------
selected users: [85, 72, 16, 18, 2, 38, 90, 30, 83, 61]
random features: torch.Size([100, 320, 4, 4]) torch.Size([100])
random features: torch.Size([115, 320, 4, 4]) torch.Size([115])
random features: torch.Size([106, 320, 4, 4]) torch.Size([106])
random features: torch.Size([99, 320, 4, 4]) torch.Size([99])
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
random features: torch.Size([109, 320, 4, 4]) torch.Size([109])
random features: torch.Size([95, 320, 4, 4]) torch.Size([95])
random features: torch.Size([95, 320, 4, 4]) torch.Size([95])
random features: torch.Size([101, 320, 4, 4]) torch.Size([101])
random features: torch.Size([101, 320, 4, 4]) torch.Size([101])
all data: 1017
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(1.5986) feature loss: tensor(0.1727)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(1.5932) feature loss: tensor(0.1716)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(1.6636) feature loss: tensor(0.1726)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(1.6914) feature loss: tensor(0.1822)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(1.6094) feature loss: tensor(0.1710)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(1.5827) feature loss: tensor(0.1692)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(1.6585) feature loss: tensor(0.1693)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(1.6018) feature loss: tensor(0.1662)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(1.5900) feature loss: tensor(0.1666)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(1.6074) feature loss: tensor(0.1723)
Global Model Acc on global data: 0.2585 length of data: 10000
-------------Round number:  20  -------------
selected users: [70, 74, 2, 44, 56, 48, 12, 36, 0, 49]
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
random features: torch.Size([94, 320, 4, 4]) torch.Size([94])
random features: torch.Size([110, 320, 4, 4]) torch.Size([110])
random features: torch.Size([95, 320, 4, 4]) torch.Size([95])
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
random features: torch.Size([101, 320, 4, 4]) torch.Size([101])
random features: torch.Size([99, 320, 4, 4]) torch.Size([99])
random features: torch.Size([99, 320, 4, 4]) torch.Size([99])
all data: 982
Local adapation with distilling: 0.00064
training loss: tensor(1.3709) feature loss: tensor(0.2240)
Local adapation with distilling: 0.00064
training loss: tensor(1.3779) feature loss: tensor(0.2250)
Local adapation with distilling: 0.00064
training loss: tensor(1.3539) feature loss: tensor(0.2193)
Local adapation with distilling: 0.00064
training loss: tensor(1.3777) feature loss: tensor(0.2224)
Local adapation with distilling: 0.00064
training loss: tensor(1.3786) feature loss: tensor(0.2228)
Local adapation with distilling: 0.00064
training loss: tensor(1.4021) feature loss: tensor(0.2177)
Local adapation with distilling: 0.00064
training loss: tensor(1.3610) feature loss: tensor(0.2268)
Local adapation with distilling: 0.00064
training loss: tensor(1.3665) feature loss: tensor(0.2266)
Local adapation with distilling: 0.00064
training loss: tensor(1.3492) feature loss: tensor(0.2260)
Local adapation with distilling: 0.00064
training loss: tensor(1.3748) feature loss: tensor(0.2183)
Global Model Acc on global data: 0.3665 length of data: 10000
save a model
-------------Round number:  21  -------------
selected users: [23, 81, 85, 34, 62, 46, 42, 31, 93, 11]
random features: torch.Size([98, 320, 4, 4]) torch.Size([98])
random features: torch.Size([102, 320, 4, 4]) torch.Size([102])
random features: torch.Size([100, 320, 4, 4]) torch.Size([100])
random features: torch.Size([95, 320, 4, 4]) torch.Size([95])
random features: torch.Size([93, 320, 4, 4]) torch.Size([93])
random features: torch.Size([103, 320, 4, 4]) torch.Size([103])
random features: torch.Size([95, 320, 4, 4]) torch.Size([95])
random features: torch.Size([97, 320, 4, 4]) torch.Size([97])
random features: torch.Size([104, 320, 4, 4]) torch.Size([104])
random features: torch.Size([106, 320, 4, 4]) torch.Size([106])
all data: 993
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(1.6194) feature loss: tensor(0.2134)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(1.7875) feature loss: tensor(0.2045)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(1.5583) feature loss: tensor(0.2059)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(1.5642) feature loss: tensor(0.2139)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(1.5803) feature loss: tensor(0.2105)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(1.5988) feature loss: tensor(0.2082)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(1.6315) feature loss: tensor(0.2143)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(1.6259) feature loss: tensor(0.2144)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(1.6392) feature loss: tensor(0.2093)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(1.5628) feature loss: tensor(0.2072)
Global Model Acc on global data: 0.3142 length of data: 10000
-------------Round number:  22  -------------
selected users: [2, 49, 82, 31, 37, 12, 87, 42, 99, 85]
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
random features: torch.Size([99, 320, 4, 4]) torch.Size([99])
random features: torch.Size([92, 320, 4, 4]) torch.Size([92])
random features: torch.Size([97, 320, 4, 4]) torch.Size([97])
random features: torch.Size([101, 320, 4, 4]) torch.Size([101])
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
random features: torch.Size([95, 320, 4, 4]) torch.Size([95])
random features: torch.Size([95, 320, 4, 4]) torch.Size([95])
random features: torch.Size([93, 320, 4, 4]) torch.Size([93])
random features: torch.Size([100, 320, 4, 4]) torch.Size([100])
all data: 964
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(1.3796) feature loss: tensor(0.2060)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(1.4153) feature loss: tensor(0.2060)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(1.4618) feature loss: tensor(0.2136)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(1.4328) feature loss: tensor(0.2080)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(1.4536) feature loss: tensor(0.2006)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(1.4014) feature loss: tensor(0.2073)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(1.4910) feature loss: tensor(0.2177)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(1.4117) feature loss: tensor(0.2128)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(1.4558) feature loss: tensor(0.2244)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(1.3929) feature loss: tensor(0.2053)
Global Model Acc on global data: 0.3229 length of data: 10000
-------------Round number:  23  -------------
selected users: [26, 80, 82, 68, 77, 37, 3, 55, 20, 17]
random features: torch.Size([105, 320, 4, 4]) torch.Size([105])
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
random features: torch.Size([92, 320, 4, 4]) torch.Size([92])
random features: torch.Size([103, 320, 4, 4]) torch.Size([103])
random features: torch.Size([92, 320, 4, 4]) torch.Size([92])
random features: torch.Size([101, 320, 4, 4]) torch.Size([101])
random features: torch.Size([106, 320, 4, 4]) torch.Size([106])
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
random features: torch.Size([95, 320, 4, 4]) torch.Size([95])
random features: torch.Size([107, 320, 4, 4]) torch.Size([107])
all data: 993
Local adapation with distilling: 0.000586
training loss: tensor(1.5334) feature loss: tensor(0.2669)
Local adapation with distilling: 0.000586
training loss: tensor(1.5740) feature loss: tensor(0.2655)
Local adapation with distilling: 0.000586
training loss: tensor(1.4966) feature loss: tensor(0.2608)
Local adapation with distilling: 0.000586
training loss: tensor(1.5834) feature loss: tensor(0.2620)
Local adapation with distilling: 0.000586
training loss: tensor(1.5690) feature loss: tensor(0.2567)
Local adapation with distilling: 0.000586
training loss: tensor(1.5091) feature loss: tensor(0.2636)
Local adapation with distilling: 0.000586
training loss: tensor(1.5827) feature loss: tensor(0.2693)
Local adapation with distilling: 0.000586
training loss: tensor(1.5519) feature loss: tensor(0.2688)
Local adapation with distilling: 0.000586
training loss: tensor(1.5782) feature loss: tensor(0.2728)
Local adapation with distilling: 0.000586
training loss: tensor(1.5623) feature loss: tensor(0.2703)
Global Model Acc on global data: 0.3411 length of data: 10000
-------------Round number:  24  -------------
selected users: [26, 31, 37, 86, 76, 14, 88, 48, 71, 67]
random features: torch.Size([105, 320, 4, 4]) torch.Size([105])
random features: torch.Size([97, 320, 4, 4]) torch.Size([97])
random features: torch.Size([101, 320, 4, 4]) torch.Size([101])
random features: torch.Size([106, 320, 4, 4]) torch.Size([106])
random features: torch.Size([106, 320, 4, 4]) torch.Size([106])
random features: torch.Size([99, 320, 4, 4]) torch.Size([99])
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
random features: torch.Size([95, 320, 4, 4]) torch.Size([95])
random features: torch.Size([101, 320, 4, 4]) torch.Size([101])
random features: torch.Size([94, 320, 4, 4]) torch.Size([94])
all data: 1000
Local adapation with distilling: 0.000568
training loss: tensor(1.3665) feature loss: tensor(0.2393)
Local adapation with distilling: 0.000568
training loss: tensor(1.4145) feature loss: tensor(0.2441)
Local adapation with distilling: 0.000568
training loss: tensor(1.3295) feature loss: tensor(0.2373)
Local adapation with distilling: 0.000568
training loss: tensor(1.3907) feature loss: tensor(0.2384)
Local adapation with distilling: 0.000568
training loss: tensor(1.4991) feature loss: tensor(0.2435)
Local adapation with distilling: 0.000568
training loss: tensor(1.3932) feature loss: tensor(0.2436)
Local adapation with distilling: 0.000568
training loss: tensor(1.3973) feature loss: tensor(0.2435)
Local adapation with distilling: 0.000568
training loss: tensor(1.4319) feature loss: tensor(0.2392)
Local adapation with distilling: 0.000568
training loss: tensor(1.3940) feature loss: tensor(0.2427)
Local adapation with distilling: 0.000568
training loss: tensor(1.4414) feature loss: tensor(0.2446)
Global Model Acc on global data: 0.3367 length of data: 10000
-------------Round number:  25  -------------
selected users: [41, 29, 33, 65, 74, 6, 57, 89, 87, 98]
random features: torch.Size([95, 320, 4, 4]) torch.Size([95])
random features: torch.Size([109, 320, 4, 4]) torch.Size([109])
random features: torch.Size([97, 320, 4, 4]) torch.Size([97])
random features: torch.Size([99, 320, 4, 4]) torch.Size([99])
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
random features: torch.Size([104, 320, 4, 4]) torch.Size([104])
random features: torch.Size([101, 320, 4, 4]) torch.Size([101])
random features: torch.Size([108, 320, 4, 4]) torch.Size([108])
random features: torch.Size([95, 320, 4, 4]) torch.Size([95])
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
all data: 1000
Local adapation with distilling: 0.00055
training loss: tensor(1.3276) feature loss: tensor(0.1711)
Local adapation with distilling: 0.00055
training loss: tensor(1.3398) feature loss: tensor(0.1697)
Local adapation with distilling: 0.00055
training loss: tensor(1.3812) feature loss: tensor(0.1768)
Local adapation with distilling: 0.00055
training loss: tensor(1.3639) feature loss: tensor(0.1767)
Local adapation with distilling: 0.00055
training loss: tensor(1.3181) feature loss: tensor(0.1697)
Local adapation with distilling: 0.00055
training loss: tensor(1.4397) feature loss: tensor(0.1699)
Local adapation with distilling: 0.00055
training loss: tensor(1.3632) feature loss: tensor(0.1735)
Local adapation with distilling: 0.00055
training loss: tensor(1.3589) feature loss: tensor(0.1765)
Local adapation with distilling: 0.00055
training loss: tensor(1.3685) feature loss: tensor(0.1850)
Local adapation with distilling: 0.00055
training loss: tensor(1.3295) feature loss: tensor(0.1729)
Global Model Acc on global data: 0.409 length of data: 10000
save a model
-------------Round number:  26  -------------
selected users: [8, 69, 84, 41, 25, 5, 63, 95, 33, 70]
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
random features: torch.Size([98, 320, 4, 4]) torch.Size([98])
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
random features: torch.Size([95, 320, 4, 4]) torch.Size([95])
random features: torch.Size([100, 320, 4, 4]) torch.Size([100])
random features: torch.Size([102, 320, 4, 4]) torch.Size([102])
random features: torch.Size([101, 320, 4, 4]) torch.Size([101])
random features: torch.Size([100, 320, 4, 4]) torch.Size([100])
random features: torch.Size([97, 320, 4, 4]) torch.Size([97])
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
all data: 981
Local adapation with distilling: 0.000532
training loss: tensor(1.4720) feature loss: tensor(0.2032)
Local adapation with distilling: 0.000532
training loss: tensor(1.4533) feature loss: tensor(0.1996)
Local adapation with distilling: 0.000532
training loss: tensor(1.4972) feature loss: tensor(0.1944)
Local adapation with distilling: 0.000532
training loss: tensor(1.4180) feature loss: tensor(0.2007)
Local adapation with distilling: 0.000532
training loss: tensor(1.4702) feature loss: tensor(0.2009)
Local adapation with distilling: 0.000532
training loss: tensor(1.5677) feature loss: tensor(0.2114)
Local adapation with distilling: 0.000532
training loss: tensor(1.4394) feature loss: tensor(0.1938)
Local adapation with distilling: 0.000532
training loss: tensor(1.4711) feature loss: tensor(0.2011)
Local adapation with distilling: 0.000532
training loss: tensor(1.4361) feature loss: tensor(0.2000)
Local adapation with distilling: 0.000532
training loss: tensor(1.4278) feature loss: tensor(0.2031)
Global Model Acc on global data: 0.3423 length of data: 10000
-------------Round number:  27  -------------
selected users: [89, 68, 43, 50, 40, 95, 27, 85, 22, 44]
random features: torch.Size([108, 320, 4, 4]) torch.Size([108])
random features: torch.Size([103, 320, 4, 4]) torch.Size([103])
random features: torch.Size([98, 320, 4, 4]) torch.Size([98])
random features: torch.Size([98, 320, 4, 4]) torch.Size([98])
random features: torch.Size([92, 320, 4, 4]) torch.Size([92])
random features: torch.Size([100, 320, 4, 4]) torch.Size([100])
random features: torch.Size([97, 320, 4, 4]) torch.Size([97])
random features: torch.Size([100, 320, 4, 4]) torch.Size([100])
random features: torch.Size([102, 320, 4, 4]) torch.Size([102])
random features: torch.Size([94, 320, 4, 4]) torch.Size([94])
all data: 992
Local adapation with distilling: 0.000514
training loss: tensor(1.4868) feature loss: tensor(0.1631)
Local adapation with distilling: 0.000514
training loss: tensor(1.6241) feature loss: tensor(0.1591)
Local adapation with distilling: 0.000514
training loss: tensor(1.4859) feature loss: tensor(0.1612)
Local adapation with distilling: 0.000514
training loss: tensor(1.5350) feature loss: tensor(0.1593)
Local adapation with distilling: 0.000514
training loss: tensor(1.5639) feature loss: tensor(0.1623)
Local adapation with distilling: 0.000514
training loss: tensor(1.5002) feature loss: tensor(0.1526)
Local adapation with distilling: 0.000514
training loss: tensor(1.5969) feature loss: tensor(0.1674)
Local adapation with distilling: 0.000514
training loss: tensor(1.4544) feature loss: tensor(0.1583)
Local adapation with distilling: 0.000514
training loss: tensor(1.7602) feature loss: tensor(0.1665)
Local adapation with distilling: 0.000514
training loss: tensor(1.5418) feature loss: tensor(0.1637)
Global Model Acc on global data: 0.3292 length of data: 10000
-------------Round number:  28  -------------
selected users: [67, 14, 0, 86, 13, 18, 30, 36, 52, 95]
random features: torch.Size([94, 320, 4, 4]) torch.Size([94])
random features: torch.Size([99, 320, 4, 4]) torch.Size([99])
random features: torch.Size([99, 320, 4, 4]) torch.Size([99])
random features: torch.Size([106, 320, 4, 4]) torch.Size([106])
random features: torch.Size([101, 320, 4, 4]) torch.Size([101])
random features: torch.Size([99, 320, 4, 4]) torch.Size([99])
random features: torch.Size([95, 320, 4, 4]) torch.Size([95])
random features: torch.Size([101, 320, 4, 4]) torch.Size([101])
random features: torch.Size([102, 320, 4, 4]) torch.Size([102])
random features: torch.Size([100, 320, 4, 4]) torch.Size([100])
all data: 996
Local adapation with distilling: 0.000496
training loss: tensor(1.4522) feature loss: tensor(0.2055)
Local adapation with distilling: 0.000496
training loss: tensor(1.4217) feature loss: tensor(0.2019)
Local adapation with distilling: 0.000496
training loss: tensor(1.4680) feature loss: tensor(0.2051)
Local adapation with distilling: 0.000496
training loss: tensor(1.4187) feature loss: tensor(0.2069)
Local adapation with distilling: 0.000496
training loss: tensor(1.4798) feature loss: tensor(0.2050)
Local adapation with distilling: 0.000496
training loss: tensor(1.5500) feature loss: tensor(0.2153)
Local adapation with distilling: 0.000496
training loss: tensor(1.4947) feature loss: tensor(0.2073)
Local adapation with distilling: 0.000496
training loss: tensor(1.4539) feature loss: tensor(0.2069)
Local adapation with distilling: 0.000496
training loss: tensor(1.7024) feature loss: tensor(0.2117)
Local adapation with distilling: 0.000496
training loss: tensor(1.4292) feature loss: tensor(0.2019)
Global Model Acc on global data: 0.3556 length of data: 10000
-------------Round number:  29  -------------
selected users: [73, 8, 10, 7, 19, 71, 92, 25, 38, 12]
random features: torch.Size([104, 320, 4, 4]) torch.Size([104])
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
random features: torch.Size([93, 320, 4, 4]) torch.Size([93])
random features: torch.Size([95, 320, 4, 4]) torch.Size([95])
random features: torch.Size([100, 320, 4, 4]) torch.Size([100])
random features: torch.Size([101, 320, 4, 4]) torch.Size([101])
random features: torch.Size([93, 320, 4, 4]) torch.Size([93])
random features: torch.Size([100, 320, 4, 4]) torch.Size([100])
random features: torch.Size([109, 320, 4, 4]) torch.Size([109])
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
all data: 987
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(1.4845) feature loss: tensor(0.1856)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(1.4319) feature loss: tensor(0.1842)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(1.4788) feature loss: tensor(0.1902)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(1.4776) feature loss: tensor(0.1908)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(1.4634) feature loss: tensor(0.1899)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(1.4120) feature loss: tensor(0.1852)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(1.5079) feature loss: tensor(0.1874)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(1.4314) feature loss: tensor(0.1889)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(1.4017) feature loss: tensor(0.1840)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(1.4280) feature loss: tensor(0.1886)
Global Model Acc on global data: 0.3362 length of data: 10000
-------------Round number:  30  -------------
selected users: [20, 91, 34, 52, 8, 74, 21, 88, 80, 89]
random features: torch.Size([95, 320, 4, 4]) torch.Size([95])
random features: torch.Size([105, 320, 4, 4]) torch.Size([105])
random features: torch.Size([95, 320, 4, 4]) torch.Size([95])
random features: torch.Size([102, 320, 4, 4]) torch.Size([102])
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
random features: torch.Size([94, 320, 4, 4]) torch.Size([94])
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
random features: torch.Size([108, 320, 4, 4]) torch.Size([108])
all data: 983
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(1.3457) feature loss: tensor(0.2285)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(1.3169) feature loss: tensor(0.2229)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(1.2892) feature loss: tensor(0.2217)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(1.4785) feature loss: tensor(0.2285)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(1.2341) feature loss: tensor(0.2249)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(1.2749) feature loss: tensor(0.2257)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(1.3197) feature loss: tensor(0.2220)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(1.2916) feature loss: tensor(0.2244)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(1.3331) feature loss: tensor(0.2266)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(1.2645) feature loss: tensor(0.2223)
Global Model Acc on global data: 0.3049 length of data: 10000
-------------Round number:  31  -------------
selected users: [17, 33, 76, 3, 56, 0, 37, 8, 60, 67]
random features: torch.Size([107, 320, 4, 4]) torch.Size([107])
random features: torch.Size([97, 320, 4, 4]) torch.Size([97])
random features: torch.Size([106, 320, 4, 4]) torch.Size([106])
random features: torch.Size([106, 320, 4, 4]) torch.Size([106])
random features: torch.Size([110, 320, 4, 4]) torch.Size([110])
random features: torch.Size([99, 320, 4, 4]) torch.Size([99])
random features: torch.Size([101, 320, 4, 4]) torch.Size([101])
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
random features: torch.Size([94, 320, 4, 4]) torch.Size([94])
all data: 1012
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(1.3624) feature loss: tensor(0.1968)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(1.2979) feature loss: tensor(0.1958)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(1.3944) feature loss: tensor(0.1941)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(1.3711) feature loss: tensor(0.2013)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(1.3074) feature loss: tensor(0.1945)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(1.3019) feature loss: tensor(0.1968)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(1.2957) feature loss: tensor(0.1946)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(1.2288) feature loss: tensor(0.1986)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(1.3389) feature loss: tensor(0.1976)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(1.3128) feature loss: tensor(0.1866)
Global Model Acc on global data: 0.392 length of data: 10000
-------------Round number:  32  -------------
selected users: [22, 39, 85, 97, 55, 33, 80, 13, 27, 96]
random features: torch.Size([102, 320, 4, 4]) torch.Size([102])
random features: torch.Size([103, 320, 4, 4]) torch.Size([103])
random features: torch.Size([100, 320, 4, 4]) torch.Size([100])
random features: torch.Size([95, 320, 4, 4]) torch.Size([95])
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
random features: torch.Size([97, 320, 4, 4]) torch.Size([97])
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
random features: torch.Size([101, 320, 4, 4]) torch.Size([101])
random features: torch.Size([97, 320, 4, 4]) torch.Size([97])
random features: torch.Size([102, 320, 4, 4]) torch.Size([102])
all data: 989
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(1.8310) feature loss: tensor(0.1912)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(1.6630) feature loss: tensor(0.1888)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(1.5017) feature loss: tensor(0.1847)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(1.5889) feature loss: tensor(0.1882)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(1.5458) feature loss: tensor(0.1871)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(1.4887) feature loss: tensor(0.1859)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(1.5306) feature loss: tensor(0.1853)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(1.5338) feature loss: tensor(0.1816)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(1.5939) feature loss: tensor(0.1916)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(1.8236) feature loss: tensor(0.1883)
Global Model Acc on global data: 0.3013 length of data: 10000
-------------Round number:  33  -------------
selected users: [56, 90, 95, 82, 60, 71, 6, 81, 2, 70]
random features: torch.Size([110, 320, 4, 4]) torch.Size([110])
random features: torch.Size([95, 320, 4, 4]) torch.Size([95])
random features: torch.Size([100, 320, 4, 4]) torch.Size([100])
random features: torch.Size([92, 320, 4, 4]) torch.Size([92])
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
random features: torch.Size([101, 320, 4, 4]) torch.Size([101])
random features: torch.Size([104, 320, 4, 4]) torch.Size([104])
random features: torch.Size([102, 320, 4, 4]) torch.Size([102])
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
all data: 992
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(1.3489) feature loss: tensor(0.2872)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(1.3957) feature loss: tensor(0.2808)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(1.3439) feature loss: tensor(0.2835)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(1.3731) feature loss: tensor(0.2905)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(1.3894) feature loss: tensor(0.2841)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(1.3318) feature loss: tensor(0.2852)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(1.5084) feature loss: tensor(0.2928)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(1.6185) feature loss: tensor(0.2883)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(1.3495) feature loss: tensor(0.2858)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(1.3445) feature loss: tensor(0.2852)
Global Model Acc on global data: 0.3621 length of data: 10000
-------------Round number:  34  -------------
selected users: [14, 74, 15, 4, 32, 59, 91, 10, 50, 53]
random features: torch.Size([99, 320, 4, 4]) torch.Size([99])
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
random features: torch.Size([103, 320, 4, 4]) torch.Size([103])
random features: torch.Size([98, 320, 4, 4]) torch.Size([98])
random features: torch.Size([99, 320, 4, 4]) torch.Size([99])
random features: torch.Size([103, 320, 4, 4]) torch.Size([103])
random features: torch.Size([105, 320, 4, 4]) torch.Size([105])
random features: torch.Size([93, 320, 4, 4]) torch.Size([93])
random features: torch.Size([98, 320, 4, 4]) torch.Size([98])
random features: torch.Size([115, 320, 4, 4]) torch.Size([115])
all data: 1009
Local adapation with distilling: 0.000388
training loss: tensor(1.5630) feature loss: tensor(0.2833)
Local adapation with distilling: 0.000388
training loss: tensor(1.5367) feature loss: tensor(0.2811)
Local adapation with distilling: 0.000388
training loss: tensor(1.7314) feature loss: tensor(0.2857)
Local adapation with distilling: 0.000388
training loss: tensor(1.6481) feature loss: tensor(0.2840)
Local adapation with distilling: 0.000388
training loss: tensor(1.6811) feature loss: tensor(0.2849)
Local adapation with distilling: 0.000388
training loss: tensor(1.6441) feature loss: tensor(0.2796)
Local adapation with distilling: 0.000388
training loss: tensor(1.5500) feature loss: tensor(0.2826)
Local adapation with distilling: 0.000388
training loss: tensor(1.5949) feature loss: tensor(0.2828)
Local adapation with distilling: 0.000388
training loss: tensor(1.5409) feature loss: tensor(0.2782)
Local adapation with distilling: 0.000388
training loss: tensor(1.5808) feature loss: tensor(0.2864)
Global Model Acc on global data: 0.2987 length of data: 10000
-------------Round number:  35  -------------
selected users: [40, 71, 98, 27, 70, 31, 10, 24, 51, 35]
random features: torch.Size([92, 320, 4, 4]) torch.Size([92])
random features: torch.Size([101, 320, 4, 4]) torch.Size([101])
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
random features: torch.Size([97, 320, 4, 4]) torch.Size([97])
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
random features: torch.Size([97, 320, 4, 4]) torch.Size([97])
random features: torch.Size([93, 320, 4, 4]) torch.Size([93])
random features: torch.Size([98, 320, 4, 4]) torch.Size([98])
random features: torch.Size([97, 320, 4, 4]) torch.Size([97])
random features: torch.Size([106, 320, 4, 4]) torch.Size([106])
all data: 973
Local adapation with distilling: 0.00037
training loss: tensor(1.4157) feature loss: tensor(0.1755)
Local adapation with distilling: 0.00037
training loss: tensor(1.2710) feature loss: tensor(0.1679)
Local adapation with distilling: 0.00037
training loss: tensor(1.3399) feature loss: tensor(0.1705)
Local adapation with distilling: 0.00037
training loss: tensor(1.3797) feature loss: tensor(0.1699)
Local adapation with distilling: 0.00037
training loss: tensor(1.3030) feature loss: tensor(0.1733)
Local adapation with distilling: 0.00037
training loss: tensor(1.3416) feature loss: tensor(0.1695)
Local adapation with distilling: 0.00037
training loss: tensor(1.3096) feature loss: tensor(0.1721)
Local adapation with distilling: 0.00037
training loss: tensor(1.3778) feature loss: tensor(0.1714)
Local adapation with distilling: 0.00037
training loss: tensor(1.3416) feature loss: tensor(0.1728)
Local adapation with distilling: 0.00037
training loss: tensor(1.4377) feature loss: tensor(0.1643)
Global Model Acc on global data: 0.2986 length of data: 10000
-------------Round number:  36  -------------
selected users: [59, 42, 2, 27, 28, 75, 58, 68, 52, 74]
random features: torch.Size([103, 320, 4, 4]) torch.Size([103])
random features: torch.Size([95, 320, 4, 4]) torch.Size([95])
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
random features: torch.Size([97, 320, 4, 4]) torch.Size([97])
random features: torch.Size([102, 320, 4, 4]) torch.Size([102])
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
random features: torch.Size([101, 320, 4, 4]) torch.Size([101])
random features: torch.Size([103, 320, 4, 4]) torch.Size([103])
random features: torch.Size([102, 320, 4, 4]) torch.Size([102])
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
all data: 991
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(1.4779) feature loss: tensor(0.1729)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(1.4716) feature loss: tensor(0.1737)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(1.4032) feature loss: tensor(0.1732)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(1.4208) feature loss: tensor(0.1692)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(1.5931) feature loss: tensor(0.1675)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(1.4646) feature loss: tensor(0.1713)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(1.4968) feature loss: tensor(0.1752)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(1.5698) feature loss: tensor(0.1711)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(1.5756) feature loss: tensor(0.1801)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(1.3704) feature loss: tensor(0.1726)
Global Model Acc on global data: 0.3749 length of data: 10000
-------------Round number:  37  -------------
selected users: [61, 49, 86, 78, 5, 91, 81, 82, 89, 18]
random features: torch.Size([101, 320, 4, 4]) torch.Size([101])
random features: torch.Size([99, 320, 4, 4]) torch.Size([99])
random features: torch.Size([106, 320, 4, 4]) torch.Size([106])
random features: torch.Size([104, 320, 4, 4]) torch.Size([104])
random features: torch.Size([102, 320, 4, 4]) torch.Size([102])
random features: torch.Size([105, 320, 4, 4]) torch.Size([105])
random features: torch.Size([102, 320, 4, 4]) torch.Size([102])
random features: torch.Size([92, 320, 4, 4]) torch.Size([92])
random features: torch.Size([108, 320, 4, 4]) torch.Size([108])
random features: torch.Size([99, 320, 4, 4]) torch.Size([99])
all data: 1018
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(1.4096) feature loss: tensor(0.1481)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(1.4074) feature loss: tensor(0.1484)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(1.4060) feature loss: tensor(0.1481)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(1.5032) feature loss: tensor(0.1506)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(1.5031) feature loss: tensor(0.1553)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(1.4069) feature loss: tensor(0.1479)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(1.6264) feature loss: tensor(0.1440)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(1.3973) feature loss: tensor(0.1497)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(1.3876) feature loss: tensor(0.1484)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(1.4708) feature loss: tensor(0.1511)
Global Model Acc on global data: 0.3813 length of data: 10000
-------------Round number:  38  -------------
selected users: [40, 73, 49, 45, 64, 16, 69, 17, 72, 66]
random features: torch.Size([92, 320, 4, 4]) torch.Size([92])
random features: torch.Size([104, 320, 4, 4]) torch.Size([104])
random features: torch.Size([99, 320, 4, 4]) torch.Size([99])
random features: torch.Size([100, 320, 4, 4]) torch.Size([100])
random features: torch.Size([98, 320, 4, 4]) torch.Size([98])
random features: torch.Size([106, 320, 4, 4]) torch.Size([106])
random features: torch.Size([98, 320, 4, 4]) torch.Size([98])
random features: torch.Size([107, 320, 4, 4]) torch.Size([107])
random features: torch.Size([115, 320, 4, 4]) torch.Size([115])
random features: torch.Size([108, 320, 4, 4]) torch.Size([108])
all data: 1027
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(1.3986) feature loss: tensor(0.1568)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(1.4182) feature loss: tensor(0.1611)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(1.3361) feature loss: tensor(0.1516)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(1.3701) feature loss: tensor(0.1518)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(1.5063) feature loss: tensor(0.1615)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(1.4589) feature loss: tensor(0.1542)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(1.3349) feature loss: tensor(0.1449)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(1.3568) feature loss: tensor(0.1524)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(1.3945) feature loss: tensor(0.1462)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(1.3961) feature loss: tensor(0.1497)
Global Model Acc on global data: 0.3609 length of data: 10000
-------------Round number:  39  -------------
selected users: [22, 53, 84, 57, 87, 58, 29, 21, 85, 79]
random features: torch.Size([102, 320, 4, 4]) torch.Size([102])
random features: torch.Size([115, 320, 4, 4]) torch.Size([115])
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
random features: torch.Size([101, 320, 4, 4]) torch.Size([101])
random features: torch.Size([95, 320, 4, 4]) torch.Size([95])
random features: torch.Size([101, 320, 4, 4]) torch.Size([101])
random features: torch.Size([109, 320, 4, 4]) torch.Size([109])
random features: torch.Size([94, 320, 4, 4]) torch.Size([94])
random features: torch.Size([100, 320, 4, 4]) torch.Size([100])
random features: torch.Size([99, 320, 4, 4]) torch.Size([99])
all data: 1012
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(1.7484) feature loss: tensor(0.2018)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(1.5066) feature loss: tensor(0.1993)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(1.6284) feature loss: tensor(0.2021)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(1.6046) feature loss: tensor(0.2011)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(1.5692) feature loss: tensor(0.1991)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(1.5636) feature loss: tensor(0.1949)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(1.5199) feature loss: tensor(0.1970)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(1.6062) feature loss: tensor(0.2013)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(1.5099) feature loss: tensor(0.1920)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(1.6414) feature loss: tensor(0.1976)
Global Model Acc on global data: 0.3205 length of data: 10000
-------------Round number:  40  -------------
selected users: [79, 75, 63, 15, 38, 11, 40, 45, 39, 62]
random features: torch.Size([99, 320, 4, 4]) torch.Size([99])
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
random features: torch.Size([101, 320, 4, 4]) torch.Size([101])
random features: torch.Size([103, 320, 4, 4]) torch.Size([103])
random features: torch.Size([109, 320, 4, 4]) torch.Size([109])
random features: torch.Size([106, 320, 4, 4]) torch.Size([106])
random features: torch.Size([92, 320, 4, 4]) torch.Size([92])
random features: torch.Size([100, 320, 4, 4]) torch.Size([100])
random features: torch.Size([103, 320, 4, 4]) torch.Size([103])
random features: torch.Size([93, 320, 4, 4]) torch.Size([93])
all data: 1002
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(1.3878) feature loss: tensor(0.2228)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(1.3697) feature loss: tensor(0.2221)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(1.3239) feature loss: tensor(0.2217)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(1.5137) feature loss: tensor(0.2213)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(1.3390) feature loss: tensor(0.2201)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(1.3926) feature loss: tensor(0.2196)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(1.3918) feature loss: tensor(0.2246)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(1.3532) feature loss: tensor(0.2220)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(1.4048) feature loss: tensor(0.2231)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(1.4175) feature loss: tensor(0.2270)
Global Model Acc on global data: 0.324 length of data: 10000
-------------Round number:  41  -------------
selected users: [42, 94, 37, 6, 79, 32, 24, 0, 33, 93]
random features: torch.Size([95, 320, 4, 4]) torch.Size([95])
random features: torch.Size([101, 320, 4, 4]) torch.Size([101])
random features: torch.Size([101, 320, 4, 4]) torch.Size([101])
random features: torch.Size([104, 320, 4, 4]) torch.Size([104])
random features: torch.Size([99, 320, 4, 4]) torch.Size([99])
random features: torch.Size([99, 320, 4, 4]) torch.Size([99])
random features: torch.Size([98, 320, 4, 4]) torch.Size([98])
random features: torch.Size([99, 320, 4, 4]) torch.Size([99])
random features: torch.Size([97, 320, 4, 4]) torch.Size([97])
random features: torch.Size([104, 320, 4, 4]) torch.Size([104])
all data: 997
Local adapation with distilling: 0.000262
training loss: tensor(1.6568) feature loss: tensor(0.2343)
Local adapation with distilling: 0.000262
training loss: tensor(1.7140) feature loss: tensor(0.2313)
Local adapation with distilling: 0.000262
training loss: tensor(1.6051) feature loss: tensor(0.2288)
Local adapation with distilling: 0.000262
training loss: tensor(1.6997) feature loss: tensor(0.2330)
Local adapation with distilling: 0.000262
training loss: tensor(1.5692) feature loss: tensor(0.2272)
Local adapation with distilling: 0.000262
training loss: tensor(1.6873) feature loss: tensor(0.2380)
Local adapation with distilling: 0.000262
training loss: tensor(1.6327) feature loss: tensor(0.2342)
Local adapation with distilling: 0.000262
training loss: tensor(1.5484) feature loss: tensor(0.2235)
Local adapation with distilling: 0.000262
training loss: tensor(1.5547) feature loss: tensor(0.2328)
Local adapation with distilling: 0.000262
training loss: tensor(1.6632) feature loss: tensor(0.2227)
Global Model Acc on global data: 0.3095 length of data: 10000
-------------Round number:  42  -------------
selected users: [83, 53, 70, 45, 44, 39, 22, 80, 10, 0]
random features: torch.Size([101, 320, 4, 4]) torch.Size([101])
random features: torch.Size([115, 320, 4, 4]) torch.Size([115])
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
random features: torch.Size([100, 320, 4, 4]) torch.Size([100])
random features: torch.Size([94, 320, 4, 4]) torch.Size([94])
random features: torch.Size([103, 320, 4, 4]) torch.Size([103])
random features: torch.Size([102, 320, 4, 4]) torch.Size([102])
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
random features: torch.Size([93, 320, 4, 4]) torch.Size([93])
random features: torch.Size([99, 320, 4, 4]) torch.Size([99])
all data: 999
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(1.3962) feature loss: tensor(0.2327)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(1.3070) feature loss: tensor(0.2321)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(1.2769) feature loss: tensor(0.2360)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(1.3040) feature loss: tensor(0.2352)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(1.3512) feature loss: tensor(0.2329)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(1.3542) feature loss: tensor(0.2364)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(1.5002) feature loss: tensor(0.2357)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(1.3324) feature loss: tensor(0.2359)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(1.3449) feature loss: tensor(0.2312)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(1.3026) feature loss: tensor(0.2342)
Global Model Acc on global data: 0.3215 length of data: 10000
-------------Round number:  43  -------------
selected users: [20, 2, 15, 22, 57, 91, 69, 55, 11, 79]
random features: torch.Size([95, 320, 4, 4]) torch.Size([95])
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
random features: torch.Size([103, 320, 4, 4]) torch.Size([103])
random features: torch.Size([102, 320, 4, 4]) torch.Size([102])
random features: torch.Size([101, 320, 4, 4]) torch.Size([101])
random features: torch.Size([105, 320, 4, 4]) torch.Size([105])
random features: torch.Size([98, 320, 4, 4]) torch.Size([98])
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
random features: torch.Size([106, 320, 4, 4]) torch.Size([106])
random features: torch.Size([99, 320, 4, 4]) torch.Size([99])
all data: 1001
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(1.4870) feature loss: tensor(0.1646)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(1.3519) feature loss: tensor(0.1616)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(1.5350) feature loss: tensor(0.1588)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(1.5103) feature loss: tensor(0.1579)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(1.4544) feature loss: tensor(0.1611)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(1.3672) feature loss: tensor(0.1563)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(1.3580) feature loss: tensor(0.1624)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(1.3726) feature loss: tensor(0.1617)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(1.4112) feature loss: tensor(0.1604)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(1.3410) feature loss: tensor(0.1636)
Global Model Acc on global data: 0.293 length of data: 10000
-------------Round number:  44  -------------
selected users: [42, 54, 27, 93, 39, 65, 7, 26, 24, 60]
random features: torch.Size([95, 320, 4, 4]) torch.Size([95])
random features: torch.Size([104, 320, 4, 4]) torch.Size([104])
random features: torch.Size([97, 320, 4, 4]) torch.Size([97])
random features: torch.Size([104, 320, 4, 4]) torch.Size([104])
random features: torch.Size([103, 320, 4, 4]) torch.Size([103])
random features: torch.Size([99, 320, 4, 4]) torch.Size([99])
random features: torch.Size([95, 320, 4, 4]) torch.Size([95])
random features: torch.Size([105, 320, 4, 4]) torch.Size([105])
random features: torch.Size([98, 320, 4, 4]) torch.Size([98])
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
all data: 996
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(1.5211) feature loss: tensor(0.1467)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(1.6619) feature loss: tensor(0.1531)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(1.5039) feature loss: tensor(0.1592)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(1.5142) feature loss: tensor(0.1479)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(1.4646) feature loss: tensor(0.1464)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(1.4490) feature loss: tensor(0.1458)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(1.5459) feature loss: tensor(0.1569)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(1.4676) feature loss: tensor(0.1455)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(1.4681) feature loss: tensor(0.1463)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(1.4556) feature loss: tensor(0.1453)
Global Model Acc on global data: 0.3496 length of data: 10000
-------------Round number:  45  -------------
selected users: [0, 1, 62, 76, 37, 99, 78, 38, 2, 84]
random features: torch.Size([99, 320, 4, 4]) torch.Size([99])
random features: torch.Size([104, 320, 4, 4]) torch.Size([104])
random features: torch.Size([93, 320, 4, 4]) torch.Size([93])
random features: torch.Size([106, 320, 4, 4]) torch.Size([106])
random features: torch.Size([101, 320, 4, 4]) torch.Size([101])
random features: torch.Size([93, 320, 4, 4]) torch.Size([93])
random features: torch.Size([104, 320, 4, 4]) torch.Size([104])
random features: torch.Size([109, 320, 4, 4]) torch.Size([109])
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
all data: 1001
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(1.4259) feature loss: tensor(0.1688)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(1.5681) feature loss: tensor(0.1682)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(1.5303) feature loss: tensor(0.1677)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(1.5477) feature loss: tensor(0.1826)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(1.4495) feature loss: tensor(0.1720)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(1.5406) feature loss: tensor(0.1731)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(1.5660) feature loss: tensor(0.1728)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(1.4446) feature loss: tensor(0.1689)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(1.4377) feature loss: tensor(0.1694)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(1.5118) feature loss: tensor(0.1774)
Global Model Acc on global data: 0.3563 length of data: 10000
-------------Round number:  46  -------------
selected users: [71, 33, 37, 10, 44, 34, 24, 98, 73, 95]
random features: torch.Size([101, 320, 4, 4]) torch.Size([101])
random features: torch.Size([97, 320, 4, 4]) torch.Size([97])
random features: torch.Size([101, 320, 4, 4]) torch.Size([101])
random features: torch.Size([93, 320, 4, 4]) torch.Size([93])
random features: torch.Size([94, 320, 4, 4]) torch.Size([94])
random features: torch.Size([95, 320, 4, 4]) torch.Size([95])
random features: torch.Size([98, 320, 4, 4]) torch.Size([98])
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
random features: torch.Size([104, 320, 4, 4]) torch.Size([104])
random features: torch.Size([100, 320, 4, 4]) torch.Size([100])
all data: 979
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(1.3246) feature loss: tensor(0.1478)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(1.3156) feature loss: tensor(0.1455)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(1.3194) feature loss: tensor(0.1479)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(1.3824) feature loss: tensor(0.1465)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(1.3745) feature loss: tensor(0.1480)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(1.3906) feature loss: tensor(0.1499)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(1.3719) feature loss: tensor(0.1516)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(1.3840) feature loss: tensor(0.1507)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(1.4388) feature loss: tensor(0.1454)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(1.3636) feature loss: tensor(0.1461)
Global Model Acc on global data: 0.313 length of data: 10000
-------------Round number:  47  -------------
selected users: [17, 90, 94, 86, 63, 5, 38, 14, 40, 47]
random features: torch.Size([107, 320, 4, 4]) torch.Size([107])
random features: torch.Size([95, 320, 4, 4]) torch.Size([95])
random features: torch.Size([101, 320, 4, 4]) torch.Size([101])
random features: torch.Size([106, 320, 4, 4]) torch.Size([106])
random features: torch.Size([101, 320, 4, 4]) torch.Size([101])
random features: torch.Size([102, 320, 4, 4]) torch.Size([102])
random features: torch.Size([109, 320, 4, 4]) torch.Size([109])
random features: torch.Size([99, 320, 4, 4]) torch.Size([99])
random features: torch.Size([92, 320, 4, 4]) torch.Size([92])
random features: torch.Size([93, 320, 4, 4]) torch.Size([93])
all data: 1005
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(1.4532) feature loss: tensor(0.1879)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(1.4957) feature loss: tensor(0.1896)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(1.5135) feature loss: tensor(0.1884)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(1.4508) feature loss: tensor(0.1869)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(1.4216) feature loss: tensor(0.1869)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(1.5687) feature loss: tensor(0.1884)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(1.3942) feature loss: tensor(0.1871)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(1.4085) feature loss: tensor(0.1840)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(1.4541) feature loss: tensor(0.1900)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(1.4501) feature loss: tensor(0.1835)
Global Model Acc on global data: 0.3181 length of data: 10000
-------------Round number:  48  -------------
selected users: [93, 5, 71, 9, 11, 79, 69, 8, 59, 63]
random features: torch.Size([104, 320, 4, 4]) torch.Size([104])
random features: torch.Size([102, 320, 4, 4]) torch.Size([102])
random features: torch.Size([101, 320, 4, 4]) torch.Size([101])
random features: torch.Size([102, 320, 4, 4]) torch.Size([102])
random features: torch.Size([106, 320, 4, 4]) torch.Size([106])
random features: torch.Size([99, 320, 4, 4]) torch.Size([99])
random features: torch.Size([98, 320, 4, 4]) torch.Size([98])
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
random features: torch.Size([103, 320, 4, 4]) torch.Size([103])
random features: torch.Size([101, 320, 4, 4]) torch.Size([101])
all data: 1012
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(1.3948) feature loss: tensor(0.2093)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(1.4402) feature loss: tensor(0.2214)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(1.3388) feature loss: tensor(0.2140)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(1.6519) feature loss: tensor(0.2114)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(1.4131) feature loss: tensor(0.2105)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(1.4208) feature loss: tensor(0.2146)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(1.3815) feature loss: tensor(0.2115)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(1.3939) feature loss: tensor(0.2115)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(1.4936) feature loss: tensor(0.2114)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(1.3342) feature loss: tensor(0.2083)
Global Model Acc on global data: 0.3404 length of data: 10000
-------------Round number:  49  -------------
selected users: [76, 25, 28, 75, 81, 47, 41, 22, 29, 1]
random features: torch.Size([106, 320, 4, 4]) torch.Size([106])
random features: torch.Size([100, 320, 4, 4]) torch.Size([100])
random features: torch.Size([102, 320, 4, 4]) torch.Size([102])
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
random features: torch.Size([102, 320, 4, 4]) torch.Size([102])
random features: torch.Size([93, 320, 4, 4]) torch.Size([93])
random features: torch.Size([95, 320, 4, 4]) torch.Size([95])
random features: torch.Size([102, 320, 4, 4]) torch.Size([102])
random features: torch.Size([109, 320, 4, 4]) torch.Size([109])
random features: torch.Size([104, 320, 4, 4]) torch.Size([104])
all data: 1009
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(1.5403) feature loss: tensor(0.1402)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(1.4578) feature loss: tensor(0.1313)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(1.6484) feature loss: tensor(0.1338)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(1.4869) feature loss: tensor(0.1332)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(1.6459) feature loss: tensor(0.1334)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(1.4789) feature loss: tensor(0.1376)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(1.4574) feature loss: tensor(0.1386)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(1.6260) feature loss: tensor(0.1390)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(1.4169) feature loss: tensor(0.1369)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(1.4018) feature loss: tensor(0.1336)
Global Model Acc on global data: 0.2835 length of data: 10000
-------------Round number:  50  -------------
selected users: [80, 79, 25, 15, 39, 40, 53, 17, 57, 50]
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
random features: torch.Size([99, 320, 4, 4]) torch.Size([99])
random features: torch.Size([100, 320, 4, 4]) torch.Size([100])
random features: torch.Size([103, 320, 4, 4]) torch.Size([103])
random features: torch.Size([103, 320, 4, 4]) torch.Size([103])
random features: torch.Size([92, 320, 4, 4]) torch.Size([92])
random features: torch.Size([115, 320, 4, 4]) torch.Size([115])
random features: torch.Size([107, 320, 4, 4]) torch.Size([107])
random features: torch.Size([101, 320, 4, 4]) torch.Size([101])
random features: torch.Size([98, 320, 4, 4]) torch.Size([98])
all data: 1014
Local adapation with distilling: 0.0001
training loss: tensor(1.3116) feature loss: tensor(0.1439)
Local adapation with distilling: 0.0001
training loss: tensor(1.2713) feature loss: tensor(0.1419)
Local adapation with distilling: 0.0001
training loss: tensor(1.2579) feature loss: tensor(0.1368)
Local adapation with distilling: 0.0001
training loss: tensor(1.5555) feature loss: tensor(0.1366)
Local adapation with distilling: 0.0001
training loss: tensor(1.2793) feature loss: tensor(0.1362)
Local adapation with distilling: 0.0001
training loss: tensor(1.3269) feature loss: tensor(0.1443)
Local adapation with distilling: 0.0001
training loss: tensor(1.2538) feature loss: tensor(0.1410)
Local adapation with distilling: 0.0001
training loss: tensor(1.2805) feature loss: tensor(0.1393)
Local adapation with distilling: 0.0001
training loss: tensor(1.3053) feature loss: tensor(0.1486)
Local adapation with distilling: 0.0001
training loss: tensor(1.3126) feature loss: tensor(0.1375)
Global Model Acc on global data: 0.322 length of data: 10000
-------------Round number:  51  -------------
selected users: [71, 43, 11, 83, 78, 19, 80, 4, 79, 75]
random features: torch.Size([101, 320, 4, 4]) torch.Size([101])
random features: torch.Size([98, 320, 4, 4]) torch.Size([98])
random features: torch.Size([106, 320, 4, 4]) torch.Size([106])
random features: torch.Size([101, 320, 4, 4]) torch.Size([101])
random features: torch.Size([104, 320, 4, 4]) torch.Size([104])
random features: torch.Size([100, 320, 4, 4]) torch.Size([100])
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
random features: torch.Size([98, 320, 4, 4]) torch.Size([98])
random features: torch.Size([99, 320, 4, 4]) torch.Size([99])
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
all data: 999
Local adapation with distilling: 0.0001
training loss: tensor(1.3402) feature loss: tensor(0.1119)
Local adapation with distilling: 0.0001
training loss: tensor(1.3938) feature loss: tensor(0.1134)
Local adapation with distilling: 0.0001
training loss: tensor(1.3948) feature loss: tensor(0.1118)
Local adapation with distilling: 0.0001
training loss: tensor(1.4638) feature loss: tensor(0.1162)
Local adapation with distilling: 0.0001
training loss: tensor(1.4423) feature loss: tensor(0.1104)
Local adapation with distilling: 0.0001
training loss: tensor(1.4155) feature loss: tensor(0.1161)
Local adapation with distilling: 0.0001
training loss: tensor(1.3637) feature loss: tensor(0.1145)
Local adapation with distilling: 0.0001
training loss: tensor(1.4442) feature loss: tensor(0.1210)
Local adapation with distilling: 0.0001
training loss: tensor(1.3455) feature loss: tensor(0.1134)
Local adapation with distilling: 0.0001
training loss: tensor(1.3673) feature loss: tensor(0.1114)
Global Model Acc on global data: 0.2885 length of data: 10000
-------------Round number:  52  -------------
selected users: [82, 8, 44, 19, 2, 73, 37, 89, 67, 18]
random features: torch.Size([92, 320, 4, 4]) torch.Size([92])
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
random features: torch.Size([94, 320, 4, 4]) torch.Size([94])
random features: torch.Size([100, 320, 4, 4]) torch.Size([100])
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
random features: torch.Size([104, 320, 4, 4]) torch.Size([104])
random features: torch.Size([101, 320, 4, 4]) torch.Size([101])
random features: torch.Size([108, 320, 4, 4]) torch.Size([108])
random features: torch.Size([94, 320, 4, 4]) torch.Size([94])
random features: torch.Size([99, 320, 4, 4]) torch.Size([99])
all data: 984
Local adapation with distilling: 0.0001
training loss: tensor(1.4502) feature loss: tensor(0.1288)
Local adapation with distilling: 0.0001
training loss: tensor(1.4290) feature loss: tensor(0.1298)
Local adapation with distilling: 0.0001
training loss: tensor(1.4439) feature loss: tensor(0.1295)
Local adapation with distilling: 0.0001
training loss: tensor(1.4111) feature loss: tensor(0.1245)
Local adapation with distilling: 0.0001
training loss: tensor(1.3803) feature loss: tensor(0.1235)
Local adapation with distilling: 0.0001
training loss: tensor(1.4682) feature loss: tensor(0.1220)
Local adapation with distilling: 0.0001
training loss: tensor(1.4190) feature loss: tensor(0.1281)
Local adapation with distilling: 0.0001
training loss: tensor(1.4139) feature loss: tensor(0.1242)
Local adapation with distilling: 0.0001
training loss: tensor(1.4699) feature loss: tensor(0.1319)
Local adapation with distilling: 0.0001
training loss: tensor(1.6009) feature loss: tensor(0.1339)
Global Model Acc on global data: 0.318 length of data: 10000
-------------Round number:  53  -------------
selected users: [19, 78, 64, 3, 71, 32, 68, 42, 55, 97]
random features: torch.Size([100, 320, 4, 4]) torch.Size([100])
random features: torch.Size([104, 320, 4, 4]) torch.Size([104])
random features: torch.Size([98, 320, 4, 4]) torch.Size([98])
random features: torch.Size([106, 320, 4, 4]) torch.Size([106])
random features: torch.Size([101, 320, 4, 4]) torch.Size([101])
random features: torch.Size([99, 320, 4, 4]) torch.Size([99])
random features: torch.Size([103, 320, 4, 4]) torch.Size([103])
random features: torch.Size([95, 320, 4, 4]) torch.Size([95])
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
random features: torch.Size([95, 320, 4, 4]) torch.Size([95])
all data: 997
Local adapation with distilling: 0.0001
training loss: tensor(1.4447) feature loss: tensor(0.1542)
Local adapation with distilling: 0.0001
training loss: tensor(1.5068) feature loss: tensor(0.1529)
Local adapation with distilling: 0.0001
training loss: tensor(1.6239) feature loss: tensor(0.1646)
Local adapation with distilling: 0.0001
training loss: tensor(1.5449) feature loss: tensor(0.1574)
Local adapation with distilling: 0.0001
training loss: tensor(1.4038) feature loss: tensor(0.1532)
Local adapation with distilling: 0.0001
training loss: tensor(1.5823) feature loss: tensor(0.1534)
Local adapation with distilling: 0.0001
training loss: tensor(1.6285) feature loss: tensor(0.1557)
Local adapation with distilling: 0.0001
training loss: tensor(1.4739) feature loss: tensor(0.1531)
Local adapation with distilling: 0.0001
training loss: tensor(1.4801) feature loss: tensor(0.1580)
Local adapation with distilling: 0.0001
training loss: tensor(1.5574) feature loss: tensor(0.1529)
Global Model Acc on global data: 0.2909 length of data: 10000
-------------Round number:  54  -------------
selected users: [36, 70, 48, 94, 81, 46, 38, 29, 34, 22]
random features: torch.Size([101, 320, 4, 4]) torch.Size([101])
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
random features: torch.Size([95, 320, 4, 4]) torch.Size([95])
random features: torch.Size([101, 320, 4, 4]) torch.Size([101])
random features: torch.Size([102, 320, 4, 4]) torch.Size([102])
random features: torch.Size([103, 320, 4, 4]) torch.Size([103])
random features: torch.Size([109, 320, 4, 4]) torch.Size([109])
random features: torch.Size([109, 320, 4, 4]) torch.Size([109])
random features: torch.Size([95, 320, 4, 4]) torch.Size([95])
random features: torch.Size([102, 320, 4, 4]) torch.Size([102])
all data: 1013
Local adapation with distilling: 0.0001
training loss: tensor(1.4484) feature loss: tensor(0.1871)
Local adapation with distilling: 0.0001
training loss: tensor(1.3176) feature loss: tensor(0.1814)
Local adapation with distilling: 0.0001
training loss: tensor(1.5769) feature loss: tensor(0.1878)
Local adapation with distilling: 0.0001
training loss: tensor(1.3926) feature loss: tensor(0.1910)
Local adapation with distilling: 0.0001
training loss: tensor(1.6064) feature loss: tensor(0.1857)
Local adapation with distilling: 0.0001
training loss: tensor(1.3981) feature loss: tensor(0.1879)
Local adapation with distilling: 0.0001
training loss: tensor(1.3011) feature loss: tensor(0.1843)
Local adapation with distilling: 0.0001
training loss: tensor(1.3515) feature loss: tensor(0.1854)
Local adapation with distilling: 0.0001
training loss: tensor(1.3603) feature loss: tensor(0.1886)
Local adapation with distilling: 0.0001
training loss: tensor(1.5535) feature loss: tensor(0.1836)
Global Model Acc on global data: 0.3442 length of data: 10000
-------------Round number:  55  -------------
selected users: [28, 92, 98, 95, 84, 34, 38, 76, 17, 78]
random features: torch.Size([102, 320, 4, 4]) torch.Size([102])
random features: torch.Size([93, 320, 4, 4]) torch.Size([93])
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
random features: torch.Size([100, 320, 4, 4]) torch.Size([100])
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
random features: torch.Size([95, 320, 4, 4]) torch.Size([95])
random features: torch.Size([109, 320, 4, 4]) torch.Size([109])
random features: torch.Size([106, 320, 4, 4]) torch.Size([106])
random features: torch.Size([107, 320, 4, 4]) torch.Size([107])
random features: torch.Size([104, 320, 4, 4]) torch.Size([104])
all data: 1008
Local adapation with distilling: 0.0001
training loss: tensor(1.4968) feature loss: tensor(0.1679)
Local adapation with distilling: 0.0001
training loss: tensor(1.5870) feature loss: tensor(0.1777)
Local adapation with distilling: 0.0001
training loss: tensor(1.3506) feature loss: tensor(0.1682)
Local adapation with distilling: 0.0001
training loss: tensor(1.3278) feature loss: tensor(0.1658)
Local adapation with distilling: 0.0001
training loss: tensor(1.4113) feature loss: tensor(0.1686)
Local adapation with distilling: 0.0001
training loss: tensor(1.3551) feature loss: tensor(0.1659)
Local adapation with distilling: 0.0001
training loss: tensor(1.2644) feature loss: tensor(0.1620)
Local adapation with distilling: 0.0001
training loss: tensor(1.3995) feature loss: tensor(0.1654)
Local adapation with distilling: 0.0001
training loss: tensor(1.3062) feature loss: tensor(0.1617)
Local adapation with distilling: 0.0001
training loss: tensor(1.3854) feature loss: tensor(0.1643)
Global Model Acc on global data: 0.3295 length of data: 10000
-------------Round number:  56  -------------
selected users: [92, 79, 23, 68, 52, 38, 73, 9, 59, 27]
random features: torch.Size([93, 320, 4, 4]) torch.Size([93])
random features: torch.Size([99, 320, 4, 4]) torch.Size([99])
random features: torch.Size([98, 320, 4, 4]) torch.Size([98])
random features: torch.Size([103, 320, 4, 4]) torch.Size([103])
random features: torch.Size([102, 320, 4, 4]) torch.Size([102])
random features: torch.Size([109, 320, 4, 4]) torch.Size([109])
random features: torch.Size([104, 320, 4, 4]) torch.Size([104])
random features: torch.Size([102, 320, 4, 4]) torch.Size([102])
random features: torch.Size([103, 320, 4, 4]) torch.Size([103])
random features: torch.Size([97, 320, 4, 4]) torch.Size([97])
all data: 1010
Local adapation with distilling: 0.0001
training loss: tensor(1.6104) feature loss: tensor(0.1614)
Local adapation with distilling: 0.0001
training loss: tensor(1.4871) feature loss: tensor(0.1584)
Local adapation with distilling: 0.0001
training loss: tensor(1.6820) feature loss: tensor(0.1663)
Local adapation with distilling: 0.0001
training loss: tensor(1.5337) feature loss: tensor(0.1607)
Local adapation with distilling: 0.0001
training loss: tensor(1.7524) feature loss: tensor(0.1678)
Local adapation with distilling: 0.0001
training loss: tensor(1.3699) feature loss: tensor(0.1544)
Local adapation with distilling: 0.0001
training loss: tensor(1.4633) feature loss: tensor(0.1525)
Local adapation with distilling: 0.0001
training loss: tensor(1.6595) feature loss: tensor(0.1623)
Local adapation with distilling: 0.0001
training loss: tensor(1.6609) feature loss: tensor(0.1530)
Local adapation with distilling: 0.0001
training loss: tensor(1.4986) feature loss: tensor(0.1607)
Global Model Acc on global data: 0.2888 length of data: 10000
-------------Round number:  57  -------------
selected users: [52, 17, 41, 3, 8, 98, 59, 20, 67, 7]
random features: torch.Size([102, 320, 4, 4]) torch.Size([102])
random features: torch.Size([107, 320, 4, 4]) torch.Size([107])
random features: torch.Size([95, 320, 4, 4]) torch.Size([95])
random features: torch.Size([106, 320, 4, 4]) torch.Size([106])
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
random features: torch.Size([103, 320, 4, 4]) torch.Size([103])
random features: torch.Size([95, 320, 4, 4]) torch.Size([95])
random features: torch.Size([94, 320, 4, 4]) torch.Size([94])
random features: torch.Size([95, 320, 4, 4]) torch.Size([95])
all data: 989
Local adapation with distilling: 0.0001
training loss: tensor(1.5692) feature loss: tensor(0.1974)
Local adapation with distilling: 0.0001
training loss: tensor(1.3472) feature loss: tensor(0.2023)
Local adapation with distilling: 0.0001
training loss: tensor(1.3821) feature loss: tensor(0.2036)
Local adapation with distilling: 0.0001
training loss: tensor(1.4206) feature loss: tensor(0.2071)
Local adapation with distilling: 0.0001
training loss: tensor(1.3613) feature loss: tensor(0.2030)
Local adapation with distilling: 0.0001
training loss: tensor(1.3824) feature loss: tensor(0.2019)
Local adapation with distilling: 0.0001
training loss: tensor(1.4841) feature loss: tensor(0.2019)
Local adapation with distilling: 0.0001
training loss: tensor(1.5054) feature loss: tensor(0.2037)
Local adapation with distilling: 0.0001
training loss: tensor(1.4039) feature loss: tensor(0.2044)
Local adapation with distilling: 0.0001
training loss: tensor(1.4654) feature loss: tensor(0.2055)
Global Model Acc on global data: 0.2645 length of data: 10000
-------------Round number:  58  -------------
selected users: [43, 58, 8, 31, 70, 45, 69, 95, 50, 4]
random features: torch.Size([98, 320, 4, 4]) torch.Size([98])
random features: torch.Size([101, 320, 4, 4]) torch.Size([101])
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
random features: torch.Size([97, 320, 4, 4]) torch.Size([97])
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
random features: torch.Size([100, 320, 4, 4]) torch.Size([100])
random features: torch.Size([98, 320, 4, 4]) torch.Size([98])
random features: torch.Size([100, 320, 4, 4]) torch.Size([100])
random features: torch.Size([98, 320, 4, 4]) torch.Size([98])
random features: torch.Size([98, 320, 4, 4]) torch.Size([98])
all data: 982
Local adapation with distilling: 0.0001
training loss: tensor(1.3551) feature loss: tensor(0.1571)
Local adapation with distilling: 0.0001
training loss: tensor(1.3821) feature loss: tensor(0.1602)
Local adapation with distilling: 0.0001
training loss: tensor(1.2579) feature loss: tensor(0.1539)
Local adapation with distilling: 0.0001
training loss: tensor(1.3578) feature loss: tensor(0.1528)
Local adapation with distilling: 0.0001
training loss: tensor(1.3086) feature loss: tensor(0.1535)
Local adapation with distilling: 0.0001
training loss: tensor(1.2998) feature loss: tensor(0.1548)
Local adapation with distilling: 0.0001
training loss: tensor(1.3376) feature loss: tensor(0.1553)
Local adapation with distilling: 0.0001
training loss: tensor(1.2682) feature loss: tensor(0.1548)
Local adapation with distilling: 0.0001
training loss: tensor(1.3359) feature loss: tensor(0.1553)
Local adapation with distilling: 0.0001
training loss: tensor(1.4070) feature loss: tensor(0.1568)
Global Model Acc on global data: 0.3292 length of data: 10000
-------------Round number:  59  -------------
selected users: [38, 46, 24, 87, 30, 85, 16, 96, 18, 99]
random features: torch.Size([109, 320, 4, 4]) torch.Size([109])
random features: torch.Size([103, 320, 4, 4]) torch.Size([103])
random features: torch.Size([98, 320, 4, 4]) torch.Size([98])
random features: torch.Size([95, 320, 4, 4]) torch.Size([95])
random features: torch.Size([95, 320, 4, 4]) torch.Size([95])
random features: torch.Size([100, 320, 4, 4]) torch.Size([100])
random features: torch.Size([106, 320, 4, 4]) torch.Size([106])
random features: torch.Size([102, 320, 4, 4]) torch.Size([102])
random features: torch.Size([99, 320, 4, 4]) torch.Size([99])
random features: torch.Size([93, 320, 4, 4]) torch.Size([93])
all data: 1000
Local adapation with distilling: 0.0001
training loss: tensor(1.4070) feature loss: tensor(0.1246)
Local adapation with distilling: 0.0001
training loss: tensor(1.5075) feature loss: tensor(0.1287)
Local adapation with distilling: 0.0001
training loss: tensor(1.4718) feature loss: tensor(0.1283)
Local adapation with distilling: 0.0001
training loss: tensor(1.4809) feature loss: tensor(0.1229)
Local adapation with distilling: 0.0001
training loss: tensor(1.5650) feature loss: tensor(0.1315)
Local adapation with distilling: 0.0001
training loss: tensor(1.4694) feature loss: tensor(0.1265)
Local adapation with distilling: 0.0001
training loss: tensor(1.5802) feature loss: tensor(0.1249)
Local adapation with distilling: 0.0001
training loss: tensor(1.7711) feature loss: tensor(0.1327)
Local adapation with distilling: 0.0001
training loss: tensor(1.5237) feature loss: tensor(0.1319)
Local adapation with distilling: 0.0001
training loss: tensor(1.5003) feature loss: tensor(0.1311)
Global Model Acc on global data: 0.3453 length of data: 10000
-------------Round number:  60  -------------
selected users: [88, 4, 79, 14, 55, 3, 19, 28, 94, 25]
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
random features: torch.Size([98, 320, 4, 4]) torch.Size([98])
random features: torch.Size([99, 320, 4, 4]) torch.Size([99])
random features: torch.Size([99, 320, 4, 4]) torch.Size([99])
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
random features: torch.Size([106, 320, 4, 4]) torch.Size([106])
random features: torch.Size([100, 320, 4, 4]) torch.Size([100])
random features: torch.Size([102, 320, 4, 4]) torch.Size([102])
random features: torch.Size([101, 320, 4, 4]) torch.Size([101])
random features: torch.Size([100, 320, 4, 4]) torch.Size([100])
all data: 997
Local adapation with distilling: 0.0001
training loss: tensor(1.4311) feature loss: tensor(0.1552)
Local adapation with distilling: 0.0001
training loss: tensor(1.3986) feature loss: tensor(0.1537)
Local adapation with distilling: 0.0001
training loss: tensor(1.3566) feature loss: tensor(0.1519)
Local adapation with distilling: 0.0001
training loss: tensor(1.3906) feature loss: tensor(0.1563)
Local adapation with distilling: 0.0001
training loss: tensor(1.4007) feature loss: tensor(0.1538)
Local adapation with distilling: 0.0001
training loss: tensor(1.4188) feature loss: tensor(0.1550)
Local adapation with distilling: 0.0001
training loss: tensor(1.3933) feature loss: tensor(0.1547)
Local adapation with distilling: 0.0001
training loss: tensor(1.4875) feature loss: tensor(0.1535)
Local adapation with distilling: 0.0001
training loss: tensor(1.4419) feature loss: tensor(0.1615)
Local adapation with distilling: 0.0001
training loss: tensor(1.3852) feature loss: tensor(0.1571)
Global Model Acc on global data: 0.2967 length of data: 10000
-------------Round number:  61  -------------
selected users: [83, 1, 55, 9, 31, 28, 96, 29, 86, 63]
random features: torch.Size([101, 320, 4, 4]) torch.Size([101])
random features: torch.Size([104, 320, 4, 4]) torch.Size([104])
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
random features: torch.Size([102, 320, 4, 4]) torch.Size([102])
random features: torch.Size([97, 320, 4, 4]) torch.Size([97])
random features: torch.Size([102, 320, 4, 4]) torch.Size([102])
random features: torch.Size([102, 320, 4, 4]) torch.Size([102])
random features: torch.Size([109, 320, 4, 4]) torch.Size([109])
random features: torch.Size([106, 320, 4, 4]) torch.Size([106])
random features: torch.Size([101, 320, 4, 4]) torch.Size([101])
all data: 1020
Local adapation with distilling: 0.0001
training loss: tensor(1.3690) feature loss: tensor(0.1455)
Local adapation with distilling: 0.0001
training loss: tensor(1.3821) feature loss: tensor(0.1411)
Local adapation with distilling: 0.0001
training loss: tensor(1.2731) feature loss: tensor(0.1400)
Local adapation with distilling: 0.0001
training loss: tensor(1.6141) feature loss: tensor(0.1412)
Local adapation with distilling: 0.0001
training loss: tensor(1.3217) feature loss: tensor(0.1400)
Local adapation with distilling: 0.0001
training loss: tensor(1.4302) feature loss: tensor(0.1410)
Local adapation with distilling: 0.0001
training loss: tensor(1.5540) feature loss: tensor(0.1487)
Local adapation with distilling: 0.0001
training loss: tensor(1.2733) feature loss: tensor(0.1445)
Local adapation with distilling: 0.0001
training loss: tensor(1.2745) feature loss: tensor(0.1472)
Local adapation with distilling: 0.0001
training loss: tensor(1.2391) feature loss: tensor(0.1397)
Global Model Acc on global data: 0.3215 length of data: 10000
-------------Round number:  62  -------------
selected users: [76, 48, 62, 80, 29, 99, 60, 89, 39, 69]
random features: torch.Size([106, 320, 4, 4]) torch.Size([106])
random features: torch.Size([95, 320, 4, 4]) torch.Size([95])
random features: torch.Size([93, 320, 4, 4]) torch.Size([93])
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
random features: torch.Size([109, 320, 4, 4]) torch.Size([109])
random features: torch.Size([93, 320, 4, 4]) torch.Size([93])
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
random features: torch.Size([108, 320, 4, 4]) torch.Size([108])
random features: torch.Size([103, 320, 4, 4]) torch.Size([103])
random features: torch.Size([98, 320, 4, 4]) torch.Size([98])
all data: 997
Local adapation with distilling: 0.0001
training loss: tensor(1.4679) feature loss: tensor(0.1245)
Local adapation with distilling: 0.0001
training loss: tensor(1.5363) feature loss: tensor(0.1266)
Local adapation with distilling: 0.0001
training loss: tensor(1.5053) feature loss: tensor(0.1208)
Local adapation with distilling: 0.0001
training loss: tensor(1.4398) feature loss: tensor(0.1214)
Local adapation with distilling: 0.0001
training loss: tensor(1.3410) feature loss: tensor(0.1198)
Local adapation with distilling: 0.0001
training loss: tensor(1.4373) feature loss: tensor(0.1222)
Local adapation with distilling: 0.0001
training loss: tensor(1.4286) feature loss: tensor(0.1175)
Local adapation with distilling: 0.0001
training loss: tensor(1.3565) feature loss: tensor(0.1199)
Local adapation with distilling: 0.0001
training loss: tensor(1.3869) feature loss: tensor(0.1158)
Local adapation with distilling: 0.0001
training loss: tensor(1.3425) feature loss: tensor(0.1195)
Global Model Acc on global data: 0.289 length of data: 10000
-------------Round number:  63  -------------
selected users: [64, 59, 63, 2, 80, 20, 18, 48, 72, 51]
random features: torch.Size([98, 320, 4, 4]) torch.Size([98])
random features: torch.Size([103, 320, 4, 4]) torch.Size([103])
random features: torch.Size([101, 320, 4, 4]) torch.Size([101])
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
random features: torch.Size([95, 320, 4, 4]) torch.Size([95])
random features: torch.Size([99, 320, 4, 4]) torch.Size([99])
random features: torch.Size([95, 320, 4, 4]) torch.Size([95])
random features: torch.Size([115, 320, 4, 4]) torch.Size([115])
random features: torch.Size([97, 320, 4, 4]) torch.Size([97])
all data: 995
Local adapation with distilling: 0.0001
training loss: tensor(1.5475) feature loss: tensor(0.1870)
Local adapation with distilling: 0.0001
training loss: tensor(1.4467) feature loss: tensor(0.1763)
Local adapation with distilling: 0.0001
training loss: tensor(1.3183) feature loss: tensor(0.1727)
Local adapation with distilling: 0.0001
training loss: tensor(1.3111) feature loss: tensor(0.1748)
Local adapation with distilling: 0.0001
training loss: tensor(1.3433) feature loss: tensor(0.1740)
Local adapation with distilling: 0.0001
training loss: tensor(1.4371) feature loss: tensor(0.1767)
Local adapation with distilling: 0.0001
training loss: tensor(1.4417) feature loss: tensor(0.1772)
Local adapation with distilling: 0.0001
training loss: tensor(1.4241) feature loss: tensor(0.1784)
Local adapation with distilling: 0.0001
training loss: tensor(1.4541) feature loss: tensor(0.1787)
Local adapation with distilling: 0.0001
training loss: tensor(1.4289) feature loss: tensor(0.1775)
Global Model Acc on global data: 0.2879 length of data: 10000
-------------Round number:  64  -------------
selected users: [17, 22, 60, 92, 23, 19, 71, 94, 40, 49]
random features: torch.Size([107, 320, 4, 4]) torch.Size([107])
random features: torch.Size([102, 320, 4, 4]) torch.Size([102])
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
random features: torch.Size([93, 320, 4, 4]) torch.Size([93])
random features: torch.Size([98, 320, 4, 4]) torch.Size([98])
random features: torch.Size([100, 320, 4, 4]) torch.Size([100])
random features: torch.Size([101, 320, 4, 4]) torch.Size([101])
random features: torch.Size([101, 320, 4, 4]) torch.Size([101])
random features: torch.Size([92, 320, 4, 4]) torch.Size([92])
random features: torch.Size([99, 320, 4, 4]) torch.Size([99])
all data: 989
Local adapation with distilling: 0.0001
training loss: tensor(1.5797) feature loss: tensor(0.1571)
Local adapation with distilling: 0.0001
training loss: tensor(1.7352) feature loss: tensor(0.1518)
Local adapation with distilling: 0.0001
training loss: tensor(1.5149) feature loss: tensor(0.1532)
Local adapation with distilling: 0.0001
training loss: tensor(1.7125) feature loss: tensor(0.1545)
Local adapation with distilling: 0.0001
training loss: tensor(1.7230) feature loss: tensor(0.1503)
Local adapation with distilling: 0.0001
training loss: tensor(1.5626) feature loss: tensor(0.1539)
Local adapation with distilling: 0.0001
training loss: tensor(1.5079) feature loss: tensor(0.1525)
Local adapation with distilling: 0.0001
training loss: tensor(1.6657) feature loss: tensor(0.1595)
Local adapation with distilling: 0.0001
training loss: tensor(1.5934) feature loss: tensor(0.1589)
Local adapation with distilling: 0.0001
training loss: tensor(1.5517) feature loss: tensor(0.1525)
Global Model Acc on global data: 0.2976 length of data: 10000
-------------Round number:  65  -------------
selected users: [37, 81, 39, 61, 76, 90, 27, 86, 28, 69]
random features: torch.Size([101, 320, 4, 4]) torch.Size([101])
random features: torch.Size([102, 320, 4, 4]) torch.Size([102])
random features: torch.Size([103, 320, 4, 4]) torch.Size([103])
random features: torch.Size([101, 320, 4, 4]) torch.Size([101])
random features: torch.Size([106, 320, 4, 4]) torch.Size([106])
random features: torch.Size([95, 320, 4, 4]) torch.Size([95])
random features: torch.Size([97, 320, 4, 4]) torch.Size([97])
random features: torch.Size([106, 320, 4, 4]) torch.Size([106])
random features: torch.Size([102, 320, 4, 4]) torch.Size([102])
random features: torch.Size([98, 320, 4, 4]) torch.Size([98])
all data: 1011
Local adapation with distilling: 0.0001
training loss: tensor(1.2675) feature loss: tensor(0.1350)
Local adapation with distilling: 0.0001
training loss: tensor(1.5389) feature loss: tensor(0.1350)
Local adapation with distilling: 0.0001
training loss: tensor(1.3205) feature loss: tensor(0.1316)
Local adapation with distilling: 0.0001
training loss: tensor(1.3345) feature loss: tensor(0.1350)
Local adapation with distilling: 0.0001
training loss: tensor(1.3224) feature loss: tensor(0.1384)
Local adapation with distilling: 0.0001
training loss: tensor(1.3491) feature loss: tensor(0.1360)
Local adapation with distilling: 0.0001
training loss: tensor(1.3152) feature loss: tensor(0.1398)
Local adapation with distilling: 0.0001
training loss: tensor(1.2782) feature loss: tensor(0.1363)
Local adapation with distilling: 0.0001
training loss: tensor(1.4894) feature loss: tensor(0.1333)
Local adapation with distilling: 0.0001
training loss: tensor(1.2508) feature loss: tensor(0.1334)
Global Model Acc on global data: 0.3496 length of data: 10000
-------------Round number:  66  -------------
selected users: [8, 93, 4, 5, 52, 41, 0, 73, 88, 68]
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
random features: torch.Size([104, 320, 4, 4]) torch.Size([104])
random features: torch.Size([98, 320, 4, 4]) torch.Size([98])
random features: torch.Size([102, 320, 4, 4]) torch.Size([102])
random features: torch.Size([102, 320, 4, 4]) torch.Size([102])
random features: torch.Size([95, 320, 4, 4]) torch.Size([95])
random features: torch.Size([99, 320, 4, 4]) torch.Size([99])
random features: torch.Size([104, 320, 4, 4]) torch.Size([104])
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
random features: torch.Size([103, 320, 4, 4]) torch.Size([103])
all data: 999
Local adapation with distilling: 0.0001
training loss: tensor(1.3064) feature loss: tensor(0.1472)
Local adapation with distilling: 0.0001
training loss: tensor(1.3771) feature loss: tensor(0.1449)
Local adapation with distilling: 0.0001
training loss: tensor(1.3464) feature loss: tensor(0.1476)
Local adapation with distilling: 0.0001
training loss: tensor(1.4258) feature loss: tensor(0.1553)
Local adapation with distilling: 0.0001
training loss: tensor(1.5702) feature loss: tensor(0.1482)
Local adapation with distilling: 0.0001
training loss: tensor(1.3373) feature loss: tensor(0.1468)
Local adapation with distilling: 0.0001
training loss: tensor(1.3098) feature loss: tensor(0.1444)
Local adapation with distilling: 0.0001
training loss: tensor(1.3779) feature loss: tensor(0.1455)
Local adapation with distilling: 0.0001
training loss: tensor(1.3565) feature loss: tensor(0.1477)
Local adapation with distilling: 0.0001
training loss: tensor(1.4435) feature loss: tensor(0.1478)
Global Model Acc on global data: 0.298 length of data: 10000
-------------Round number:  67  -------------
selected users: [17, 24, 64, 93, 97, 29, 3, 70, 82, 11]
random features: torch.Size([107, 320, 4, 4]) torch.Size([107])
random features: torch.Size([98, 320, 4, 4]) torch.Size([98])
random features: torch.Size([98, 320, 4, 4]) torch.Size([98])
random features: torch.Size([104, 320, 4, 4]) torch.Size([104])
random features: torch.Size([95, 320, 4, 4]) torch.Size([95])
random features: torch.Size([109, 320, 4, 4]) torch.Size([109])
random features: torch.Size([106, 320, 4, 4]) torch.Size([106])
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
random features: torch.Size([92, 320, 4, 4]) torch.Size([92])
random features: torch.Size([106, 320, 4, 4]) torch.Size([106])
all data: 1011
Local adapation with distilling: 0.0001
training loss: tensor(1.4628) feature loss: tensor(0.1829)
Local adapation with distilling: 0.0001
training loss: tensor(1.5153) feature loss: tensor(0.1826)
Local adapation with distilling: 0.0001
training loss: tensor(1.6123) feature loss: tensor(0.1764)
Local adapation with distilling: 0.0001
training loss: tensor(1.5178) feature loss: tensor(0.1788)
Local adapation with distilling: 0.0001
training loss: tensor(1.5984) feature loss: tensor(0.1809)
Local adapation with distilling: 0.0001
training loss: tensor(1.4990) feature loss: tensor(0.1862)
Local adapation with distilling: 0.0001
training loss: tensor(1.5583) feature loss: tensor(0.1876)
Local adapation with distilling: 0.0001
training loss: tensor(1.4928) feature loss: tensor(0.1808)
Local adapation with distilling: 0.0001
training loss: tensor(1.5505) feature loss: tensor(0.1808)
Local adapation with distilling: 0.0001
training loss: tensor(1.5393) feature loss: tensor(0.1799)
Global Model Acc on global data: 0.334 length of data: 10000
-------------Round number:  68  -------------
selected users: [29, 30, 16, 5, 38, 71, 76, 94, 99, 95]
random features: torch.Size([109, 320, 4, 4]) torch.Size([109])
random features: torch.Size([95, 320, 4, 4]) torch.Size([95])
random features: torch.Size([106, 320, 4, 4]) torch.Size([106])
random features: torch.Size([102, 320, 4, 4]) torch.Size([102])
random features: torch.Size([109, 320, 4, 4]) torch.Size([109])
random features: torch.Size([101, 320, 4, 4]) torch.Size([101])
random features: torch.Size([106, 320, 4, 4]) torch.Size([106])
random features: torch.Size([101, 320, 4, 4]) torch.Size([101])
random features: torch.Size([93, 320, 4, 4]) torch.Size([93])
random features: torch.Size([100, 320, 4, 4]) torch.Size([100])
all data: 1022
Local adapation with distilling: 0.0001
training loss: tensor(1.2682) feature loss: tensor(0.1519)
Local adapation with distilling: 0.0001
training loss: tensor(1.4936) feature loss: tensor(0.1519)
Local adapation with distilling: 0.0001
training loss: tensor(1.3632) feature loss: tensor(0.1588)
Local adapation with distilling: 0.0001
training loss: tensor(1.3762) feature loss: tensor(0.1566)
Local adapation with distilling: 0.0001
training loss: tensor(1.2582) feature loss: tensor(0.1520)
Local adapation with distilling: 0.0001
training loss: tensor(1.2780) feature loss: tensor(0.1556)
Local adapation with distilling: 0.0001
training loss: tensor(1.3152) feature loss: tensor(0.1585)
Local adapation with distilling: 0.0001
training loss: tensor(1.3156) feature loss: tensor(0.1597)
Local adapation with distilling: 0.0001
training loss: tensor(1.3565) feature loss: tensor(0.1606)
Local adapation with distilling: 0.0001
training loss: tensor(1.2930) feature loss: tensor(0.1536)
Global Model Acc on global data: 0.3517 length of data: 10000
-------------Round number:  69  -------------
selected users: [72, 31, 13, 83, 33, 8, 26, 89, 64, 97]
random features: torch.Size([115, 320, 4, 4]) torch.Size([115])
random features: torch.Size([97, 320, 4, 4]) torch.Size([97])
random features: torch.Size([101, 320, 4, 4]) torch.Size([101])
random features: torch.Size([101, 320, 4, 4]) torch.Size([101])
random features: torch.Size([97, 320, 4, 4]) torch.Size([97])
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
random features: torch.Size([105, 320, 4, 4]) torch.Size([105])
random features: torch.Size([108, 320, 4, 4]) torch.Size([108])
random features: torch.Size([98, 320, 4, 4]) torch.Size([98])
random features: torch.Size([95, 320, 4, 4]) torch.Size([95])
all data: 1013
Local adapation with distilling: 0.0001
training loss: tensor(1.4512) feature loss: tensor(0.1706)
Local adapation with distilling: 0.0001
training loss: tensor(1.4792) feature loss: tensor(0.1655)
Local adapation with distilling: 0.0001
training loss: tensor(1.4462) feature loss: tensor(0.1663)
Local adapation with distilling: 0.0001
training loss: tensor(1.4642) feature loss: tensor(0.1740)
Local adapation with distilling: 0.0001
training loss: tensor(1.4197) feature loss: tensor(0.1694)
Local adapation with distilling: 0.0001
training loss: tensor(1.4034) feature loss: tensor(0.1712)
Local adapation with distilling: 0.0001
training loss: tensor(1.4330) feature loss: tensor(0.1657)
Local adapation with distilling: 0.0001
training loss: tensor(1.3577) feature loss: tensor(0.1643)
Local adapation with distilling: 0.0001
training loss: tensor(1.4638) feature loss: tensor(0.1679)
Local adapation with distilling: 0.0001
training loss: tensor(1.4713) feature loss: tensor(0.1767)
Global Model Acc on global data: 0.2625 length of data: 10000
-------------Round number:  70  -------------
selected users: [81, 43, 88, 32, 50, 71, 73, 55, 42, 2]
random features: torch.Size([102, 320, 4, 4]) torch.Size([102])
random features: torch.Size([98, 320, 4, 4]) torch.Size([98])
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
random features: torch.Size([99, 320, 4, 4]) torch.Size([99])
random features: torch.Size([98, 320, 4, 4]) torch.Size([98])
random features: torch.Size([101, 320, 4, 4]) torch.Size([101])
random features: torch.Size([104, 320, 4, 4]) torch.Size([104])
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
random features: torch.Size([95, 320, 4, 4]) torch.Size([95])
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
all data: 985
Local adapation with distilling: 0.0001
training loss: tensor(1.6817) feature loss: tensor(0.1955)
Local adapation with distilling: 0.0001
training loss: tensor(1.4776) feature loss: tensor(0.1885)
Local adapation with distilling: 0.0001
training loss: tensor(1.4689) feature loss: tensor(0.1910)
Local adapation with distilling: 0.0001
training loss: tensor(1.6164) feature loss: tensor(0.1918)
Local adapation with distilling: 0.0001
training loss: tensor(1.4650) feature loss: tensor(0.1922)
Local adapation with distilling: 0.0001
training loss: tensor(1.4320) feature loss: tensor(0.1933)
Local adapation with distilling: 0.0001
training loss: tensor(1.4628) feature loss: tensor(0.1965)
Local adapation with distilling: 0.0001
training loss: tensor(1.4771) feature loss: tensor(0.1953)
Local adapation with distilling: 0.0001
training loss: tensor(1.5560) feature loss: tensor(0.1963)
Local adapation with distilling: 0.0001
training loss: tensor(1.4510) feature loss: tensor(0.1935)
Global Model Acc on global data: 0.2987 length of data: 10000
-------------Round number:  71  -------------
selected users: [41, 84, 98, 42, 75, 25, 60, 19, 52, 29]
random features: torch.Size([95, 320, 4, 4]) torch.Size([95])
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
random features: torch.Size([95, 320, 4, 4]) torch.Size([95])
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
random features: torch.Size([100, 320, 4, 4]) torch.Size([100])
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
random features: torch.Size([100, 320, 4, 4]) torch.Size([100])
random features: torch.Size([102, 320, 4, 4]) torch.Size([102])
random features: torch.Size([109, 320, 4, 4]) torch.Size([109])
all data: 985
Local adapation with distilling: 0.0001
training loss: tensor(1.3668) feature loss: tensor(0.1468)
Local adapation with distilling: 0.0001
training loss: tensor(1.4350) feature loss: tensor(0.1446)
Local adapation with distilling: 0.0001
training loss: tensor(1.3807) feature loss: tensor(0.1425)
Local adapation with distilling: 0.0001
training loss: tensor(1.4157) feature loss: tensor(0.1497)
Local adapation with distilling: 0.0001
training loss: tensor(1.3796) feature loss: tensor(0.1458)
Local adapation with distilling: 0.0001
training loss: tensor(1.4105) feature loss: tensor(0.1398)
Local adapation with distilling: 0.0001
training loss: tensor(1.3524) feature loss: tensor(0.1390)
Local adapation with distilling: 0.0001
training loss: tensor(1.3926) feature loss: tensor(0.1423)
Local adapation with distilling: 0.0001
training loss: tensor(1.5881) feature loss: tensor(0.1454)
Local adapation with distilling: 0.0001
training loss: tensor(1.3737) feature loss: tensor(0.1429)
Global Model Acc on global data: 0.3447 length of data: 10000
-------------Round number:  72  -------------
selected users: [76, 82, 43, 16, 84, 95, 78, 91, 30, 22]
random features: torch.Size([106, 320, 4, 4]) torch.Size([106])
random features: torch.Size([92, 320, 4, 4]) torch.Size([92])
random features: torch.Size([98, 320, 4, 4]) torch.Size([98])
random features: torch.Size([106, 320, 4, 4]) torch.Size([106])
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
random features: torch.Size([100, 320, 4, 4]) torch.Size([100])
random features: torch.Size([104, 320, 4, 4]) torch.Size([104])
random features: torch.Size([105, 320, 4, 4]) torch.Size([105])
random features: torch.Size([95, 320, 4, 4]) torch.Size([95])
random features: torch.Size([102, 320, 4, 4]) torch.Size([102])
all data: 1004
Local adapation with distilling: 0.0001
training loss: tensor(1.3275) feature loss: tensor(0.1170)
Local adapation with distilling: 0.0001
training loss: tensor(1.3449) feature loss: tensor(0.1141)
Local adapation with distilling: 0.0001
training loss: tensor(1.3041) feature loss: tensor(0.1149)
Local adapation with distilling: 0.0001
training loss: tensor(1.3827) feature loss: tensor(0.1225)
Local adapation with distilling: 0.0001
training loss: tensor(1.3591) feature loss: tensor(0.1183)
Local adapation with distilling: 0.0001
training loss: tensor(1.3031) feature loss: tensor(0.1137)
Local adapation with distilling: 0.0001
training loss: tensor(1.4346) feature loss: tensor(0.1135)
Local adapation with distilling: 0.0001
training loss: tensor(1.3598) feature loss: tensor(0.1131)
Local adapation with distilling: 0.0001
training loss: tensor(1.4351) feature loss: tensor(0.1161)
Local adapation with distilling: 0.0001
training loss: tensor(1.5466) feature loss: tensor(0.1103)
Global Model Acc on global data: 0.2966 length of data: 10000
-------------Round number:  73  -------------
selected users: [49, 14, 34, 70, 90, 35, 68, 76, 80, 9]
random features: torch.Size([99, 320, 4, 4]) torch.Size([99])
random features: torch.Size([99, 320, 4, 4]) torch.Size([99])
random features: torch.Size([95, 320, 4, 4]) torch.Size([95])
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
random features: torch.Size([95, 320, 4, 4]) torch.Size([95])
random features: torch.Size([106, 320, 4, 4]) torch.Size([106])
random features: torch.Size([103, 320, 4, 4]) torch.Size([103])
random features: torch.Size([106, 320, 4, 4]) torch.Size([106])
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
random features: torch.Size([102, 320, 4, 4]) torch.Size([102])
all data: 997
Local adapation with distilling: 0.0001
training loss: tensor(1.3654) feature loss: tensor(0.1779)
Local adapation with distilling: 0.0001
training loss: tensor(1.3184) feature loss: tensor(0.1796)
Local adapation with distilling: 0.0001
training loss: tensor(1.3705) feature loss: tensor(0.1828)
Local adapation with distilling: 0.0001
training loss: tensor(1.3216) feature loss: tensor(0.1765)
Local adapation with distilling: 0.0001
training loss: tensor(1.3714) feature loss: tensor(0.1793)
Local adapation with distilling: 0.0001
training loss: tensor(1.4580) feature loss: tensor(0.1760)
Local adapation with distilling: 0.0001
training loss: tensor(1.4768) feature loss: tensor(0.1809)
Local adapation with distilling: 0.0001
training loss: tensor(1.3182) feature loss: tensor(0.1791)
Local adapation with distilling: 0.0001
training loss: tensor(1.3213) feature loss: tensor(0.1769)
Local adapation with distilling: 0.0001
training loss: tensor(1.4394) feature loss: tensor(0.1826)
Global Model Acc on global data: 0.2943 length of data: 10000
-------------Round number:  74  -------------
selected users: [85, 64, 63, 80, 6, 12, 43, 17, 7, 8]
random features: torch.Size([100, 320, 4, 4]) torch.Size([100])
random features: torch.Size([98, 320, 4, 4]) torch.Size([98])
random features: torch.Size([101, 320, 4, 4]) torch.Size([101])
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
random features: torch.Size([104, 320, 4, 4]) torch.Size([104])
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
random features: torch.Size([98, 320, 4, 4]) torch.Size([98])
random features: torch.Size([107, 320, 4, 4]) torch.Size([107])
random features: torch.Size([95, 320, 4, 4]) torch.Size([95])
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
all data: 991
Local adapation with distilling: 0.0001
training loss: tensor(1.2852) feature loss: tensor(0.1309)
Local adapation with distilling: 0.0001
training loss: tensor(1.3640) feature loss: tensor(0.1347)
Local adapation with distilling: 0.0001
training loss: tensor(1.2512) feature loss: tensor(0.1301)
Local adapation with distilling: 0.0001
training loss: tensor(1.2547) feature loss: tensor(0.1270)
Local adapation with distilling: 0.0001
training loss: tensor(1.4599) feature loss: tensor(0.1415)
Local adapation with distilling: 0.0001
training loss: tensor(1.4124) feature loss: tensor(0.1308)
Local adapation with distilling: 0.0001
training loss: tensor(1.2724) feature loss: tensor(0.1291)
Local adapation with distilling: 0.0001
training loss: tensor(1.2855) feature loss: tensor(0.1318)
Local adapation with distilling: 0.0001
training loss: tensor(1.3775) feature loss: tensor(0.1374)
Local adapation with distilling: 0.0001
training loss: tensor(1.2817) feature loss: tensor(0.1328)
Global Model Acc on global data: 0.3385 length of data: 10000
-------------Round number:  75  -------------
selected users: [36, 7, 6, 45, 56, 54, 22, 37, 53, 68]
random features: torch.Size([101, 320, 4, 4]) torch.Size([101])
random features: torch.Size([95, 320, 4, 4]) torch.Size([95])
random features: torch.Size([104, 320, 4, 4]) torch.Size([104])
random features: torch.Size([100, 320, 4, 4]) torch.Size([100])
random features: torch.Size([110, 320, 4, 4]) torch.Size([110])
random features: torch.Size([104, 320, 4, 4]) torch.Size([104])
random features: torch.Size([102, 320, 4, 4]) torch.Size([102])
random features: torch.Size([101, 320, 4, 4]) torch.Size([101])
random features: torch.Size([115, 320, 4, 4]) torch.Size([115])
random features: torch.Size([103, 320, 4, 4]) torch.Size([103])
all data: 1035
Local adapation with distilling: 0.0001
training loss: tensor(1.4488) feature loss: tensor(0.1842)
Local adapation with distilling: 0.0001
training loss: tensor(1.3884) feature loss: tensor(0.1872)
Local adapation with distilling: 0.0001
training loss: tensor(1.4891) feature loss: tensor(0.1970)
Local adapation with distilling: 0.0001
training loss: tensor(1.3785) feature loss: tensor(0.1763)
Local adapation with distilling: 0.0001
training loss: tensor(1.4115) feature loss: tensor(0.1777)
Local adapation with distilling: 0.0001
training loss: tensor(1.5701) feature loss: tensor(0.2051)
Local adapation with distilling: 0.0001
training loss: tensor(1.6044) feature loss: tensor(0.1782)
Local adapation with distilling: 0.0001
training loss: tensor(1.3514) feature loss: tensor(0.1868)
Local adapation with distilling: 0.0001
training loss: tensor(1.3803) feature loss: tensor(0.1773)
Local adapation with distilling: 0.0001
training loss: tensor(1.4293) feature loss: tensor(0.1824)
Global Model Acc on global data: 0.3009 length of data: 10000
-------------Round number:  76  -------------
selected users: [38, 37, 32, 50, 10, 94, 19, 44, 86, 23]
random features: torch.Size([109, 320, 4, 4]) torch.Size([109])
random features: torch.Size([101, 320, 4, 4]) torch.Size([101])
random features: torch.Size([99, 320, 4, 4]) torch.Size([99])
random features: torch.Size([98, 320, 4, 4]) torch.Size([98])
random features: torch.Size([93, 320, 4, 4]) torch.Size([93])
random features: torch.Size([101, 320, 4, 4]) torch.Size([101])
random features: torch.Size([100, 320, 4, 4]) torch.Size([100])
random features: torch.Size([94, 320, 4, 4]) torch.Size([94])
random features: torch.Size([106, 320, 4, 4]) torch.Size([106])
random features: torch.Size([98, 320, 4, 4]) torch.Size([98])
all data: 999
Local adapation with distilling: 0.0001
training loss: tensor(1.2444) feature loss: tensor(0.1346)
Local adapation with distilling: 0.0001
training loss: tensor(1.2490) feature loss: tensor(0.1398)
Local adapation with distilling: 0.0001
training loss: tensor(1.4097) feature loss: tensor(0.1458)
Local adapation with distilling: 0.0001
training loss: tensor(1.3396) feature loss: tensor(0.1398)
Local adapation with distilling: 0.0001
training loss: tensor(1.3512) feature loss: tensor(0.1396)
Local adapation with distilling: 0.0001
training loss: tensor(1.2949) feature loss: tensor(0.1407)
Local adapation with distilling: 0.0001
training loss: tensor(1.2698) feature loss: tensor(0.1406)
Local adapation with distilling: 0.0001
training loss: tensor(1.3913) feature loss: tensor(0.1427)
Local adapation with distilling: 0.0001
training loss: tensor(1.2727) feature loss: tensor(0.1358)
Local adapation with distilling: 0.0001
training loss: tensor(1.4469) feature loss: tensor(0.1492)
Global Model Acc on global data: 0.3298 length of data: 10000
-------------Round number:  77  -------------
selected users: [5, 93, 41, 96, 16, 42, 81, 91, 50, 58]
random features: torch.Size([102, 320, 4, 4]) torch.Size([102])
random features: torch.Size([104, 320, 4, 4]) torch.Size([104])
random features: torch.Size([95, 320, 4, 4]) torch.Size([95])
random features: torch.Size([102, 320, 4, 4]) torch.Size([102])
random features: torch.Size([106, 320, 4, 4]) torch.Size([106])
random features: torch.Size([95, 320, 4, 4]) torch.Size([95])
random features: torch.Size([102, 320, 4, 4]) torch.Size([102])
random features: torch.Size([105, 320, 4, 4]) torch.Size([105])
random features: torch.Size([98, 320, 4, 4]) torch.Size([98])
random features: torch.Size([101, 320, 4, 4]) torch.Size([101])
all data: 1010
Local adapation with distilling: 0.0001
training loss: tensor(1.3865) feature loss: tensor(0.1637)
Local adapation with distilling: 0.0001
training loss: tensor(1.3871) feature loss: tensor(0.1580)
Local adapation with distilling: 0.0001
training loss: tensor(1.2893) feature loss: tensor(0.1607)
Local adapation with distilling: 0.0001
training loss: tensor(1.5683) feature loss: tensor(0.1607)
Local adapation with distilling: 0.0001
training loss: tensor(1.3189) feature loss: tensor(0.1614)
Local adapation with distilling: 0.0001
training loss: tensor(1.3298) feature loss: tensor(0.1630)
Local adapation with distilling: 0.0001
training loss: tensor(1.5098) feature loss: tensor(0.1591)
Local adapation with distilling: 0.0001
training loss: tensor(1.3111) feature loss: tensor(0.1573)
Local adapation with distilling: 0.0001
training loss: tensor(1.2915) feature loss: tensor(0.1580)
Local adapation with distilling: 0.0001
training loss: tensor(1.3688) feature loss: tensor(0.1571)
Global Model Acc on global data: 0.3462 length of data: 10000
-------------Round number:  78  -------------
selected users: [9, 46, 7, 63, 15, 2, 74, 31, 5, 36]
random features: torch.Size([102, 320, 4, 4]) torch.Size([102])
random features: torch.Size([103, 320, 4, 4]) torch.Size([103])
random features: torch.Size([95, 320, 4, 4]) torch.Size([95])
random features: torch.Size([101, 320, 4, 4]) torch.Size([101])
random features: torch.Size([103, 320, 4, 4]) torch.Size([103])
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
random features: torch.Size([97, 320, 4, 4]) torch.Size([97])
random features: torch.Size([102, 320, 4, 4]) torch.Size([102])
random features: torch.Size([101, 320, 4, 4]) torch.Size([101])
all data: 996
Local adapation with distilling: 0.0001
training loss: tensor(1.4120) feature loss: tensor(0.1967)
Local adapation with distilling: 0.0001
training loss: tensor(1.4197) feature loss: tensor(0.1972)
Local adapation with distilling: 0.0001
training loss: tensor(1.3600) feature loss: tensor(0.2002)
Local adapation with distilling: 0.0001
training loss: tensor(1.3075) feature loss: tensor(0.1934)
Local adapation with distilling: 0.0001
training loss: tensor(1.4917) feature loss: tensor(0.1944)
Local adapation with distilling: 0.0001
training loss: tensor(1.2732) feature loss: tensor(0.1931)
Local adapation with distilling: 0.0001
training loss: tensor(1.3395) feature loss: tensor(0.1957)
Local adapation with distilling: 0.0001
training loss: tensor(1.3869) feature loss: tensor(0.1938)
Local adapation with distilling: 0.0001
training loss: tensor(1.3487) feature loss: tensor(0.1982)
Local adapation with distilling: 0.0001
training loss: tensor(1.3351) feature loss: tensor(0.1957)
Global Model Acc on global data: 0.3142 length of data: 10000
-------------Round number:  79  -------------
selected users: [68, 18, 86, 60, 56, 32, 30, 24, 45, 92]
random features: torch.Size([103, 320, 4, 4]) torch.Size([103])
random features: torch.Size([99, 320, 4, 4]) torch.Size([99])
random features: torch.Size([106, 320, 4, 4]) torch.Size([106])
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
random features: torch.Size([110, 320, 4, 4]) torch.Size([110])
random features: torch.Size([99, 320, 4, 4]) torch.Size([99])
random features: torch.Size([95, 320, 4, 4]) torch.Size([95])
random features: torch.Size([98, 320, 4, 4]) torch.Size([98])
random features: torch.Size([100, 320, 4, 4]) torch.Size([100])
random features: torch.Size([93, 320, 4, 4]) torch.Size([93])
all data: 999
Local adapation with distilling: 0.0001
training loss: tensor(1.4799) feature loss: tensor(0.1533)
Local adapation with distilling: 0.0001
training loss: tensor(1.4679) feature loss: tensor(0.1592)
Local adapation with distilling: 0.0001
training loss: tensor(1.3371) feature loss: tensor(0.1559)
Local adapation with distilling: 0.0001
training loss: tensor(1.3764) feature loss: tensor(0.1554)
Local adapation with distilling: 0.0001
training loss: tensor(1.3627) feature loss: tensor(0.1516)
Local adapation with distilling: 0.0001
training loss: tensor(1.4887) feature loss: tensor(0.1585)
Local adapation with distilling: 0.0001
training loss: tensor(1.4481) feature loss: tensor(0.1594)
Local adapation with distilling: 0.0001
training loss: tensor(1.3656) feature loss: tensor(0.1567)
Local adapation with distilling: 0.0001
training loss: tensor(1.3764) feature loss: tensor(0.1535)
Local adapation with distilling: 0.0001
training loss: tensor(1.5146) feature loss: tensor(0.1622)
Global Model Acc on global data: 0.3024 length of data: 10000
-------------Round number:  80  -------------
selected users: [37, 65, 95, 53, 66, 30, 73, 85, 45, 36]
random features: torch.Size([101, 320, 4, 4]) torch.Size([101])
random features: torch.Size([99, 320, 4, 4]) torch.Size([99])
random features: torch.Size([100, 320, 4, 4]) torch.Size([100])
random features: torch.Size([115, 320, 4, 4]) torch.Size([115])
random features: torch.Size([108, 320, 4, 4]) torch.Size([108])
random features: torch.Size([95, 320, 4, 4]) torch.Size([95])
random features: torch.Size([104, 320, 4, 4]) torch.Size([104])
random features: torch.Size([100, 320, 4, 4]) torch.Size([100])
random features: torch.Size([100, 320, 4, 4]) torch.Size([100])
random features: torch.Size([101, 320, 4, 4]) torch.Size([101])
all data: 1023
Local adapation with distilling: 0.0001
training loss: tensor(1.3816) feature loss: tensor(0.2173)
Local adapation with distilling: 0.0001
training loss: tensor(1.4287) feature loss: tensor(0.2136)
Local adapation with distilling: 0.0001
training loss: tensor(1.3583) feature loss: tensor(0.2142)
Local adapation with distilling: 0.0001
training loss: tensor(1.3958) feature loss: tensor(0.2095)
Local adapation with distilling: 0.0001
training loss: tensor(1.4783) feature loss: tensor(0.2163)
Local adapation with distilling: 0.0001
training loss: tensor(1.4020) feature loss: tensor(0.2091)
Local adapation with distilling: 0.0001
training loss: tensor(1.4231) feature loss: tensor(0.2107)
Local adapation with distilling: 0.0001
training loss: tensor(1.3901) feature loss: tensor(0.2153)
Local adapation with distilling: 0.0001
training loss: tensor(1.3471) feature loss: tensor(0.2098)
Local adapation with distilling: 0.0001
training loss: tensor(1.3787) feature loss: tensor(0.2149)
Global Model Acc on global data: 0.2909 length of data: 10000
-------------Round number:  81  -------------
selected users: [73, 89, 41, 78, 51, 21, 30, 69, 8, 5]
random features: torch.Size([104, 320, 4, 4]) torch.Size([104])
random features: torch.Size([108, 320, 4, 4]) torch.Size([108])
random features: torch.Size([95, 320, 4, 4]) torch.Size([95])
random features: torch.Size([104, 320, 4, 4]) torch.Size([104])
random features: torch.Size([97, 320, 4, 4]) torch.Size([97])
random features: torch.Size([94, 320, 4, 4]) torch.Size([94])
random features: torch.Size([95, 320, 4, 4]) torch.Size([95])
random features: torch.Size([98, 320, 4, 4]) torch.Size([98])
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
random features: torch.Size([102, 320, 4, 4]) torch.Size([102])
all data: 993
Local adapation with distilling: 0.0001
training loss: tensor(1.3867) feature loss: tensor(0.1941)
Local adapation with distilling: 0.0001
training loss: tensor(1.3702) feature loss: tensor(0.1921)
Local adapation with distilling: 0.0001
training loss: tensor(1.3883) feature loss: tensor(0.1990)
Local adapation with distilling: 0.0001
training loss: tensor(1.4033) feature loss: tensor(0.1938)
Local adapation with distilling: 0.0001
training loss: tensor(1.4308) feature loss: tensor(0.2011)
Local adapation with distilling: 0.0001
training loss: tensor(1.5016) feature loss: tensor(0.1969)
Local adapation with distilling: 0.0001
training loss: tensor(1.4029) feature loss: tensor(0.1982)
Local adapation with distilling: 0.0001
training loss: tensor(1.3685) feature loss: tensor(0.1934)
Local adapation with distilling: 0.0001
training loss: tensor(1.3839) feature loss: tensor(0.1966)
Local adapation with distilling: 0.0001
training loss: tensor(1.4137) feature loss: tensor(0.1943)
Global Model Acc on global data: 0.2862 length of data: 10000
-------------Round number:  82  -------------
selected users: [72, 33, 58, 2, 55, 84, 54, 75, 28, 40]
random features: torch.Size([115, 320, 4, 4]) torch.Size([115])
random features: torch.Size([97, 320, 4, 4]) torch.Size([97])
random features: torch.Size([101, 320, 4, 4]) torch.Size([101])
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
random features: torch.Size([104, 320, 4, 4]) torch.Size([104])
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
random features: torch.Size([102, 320, 4, 4]) torch.Size([102])
random features: torch.Size([92, 320, 4, 4]) torch.Size([92])
all data: 995
Local adapation with distilling: 0.0001
training loss: tensor(1.3575) feature loss: tensor(0.1596)
Local adapation with distilling: 0.0001
training loss: tensor(1.3292) feature loss: tensor(0.1594)
Local adapation with distilling: 0.0001
training loss: tensor(1.3596) feature loss: tensor(0.1601)
Local adapation with distilling: 0.0001
training loss: tensor(1.2812) feature loss: tensor(0.1588)
Local adapation with distilling: 0.0001
training loss: tensor(1.3521) feature loss: tensor(0.1603)
Local adapation with distilling: 0.0001
training loss: tensor(1.4028) feature loss: tensor(0.1620)
Local adapation with distilling: 0.0001
training loss: tensor(1.5619) feature loss: tensor(0.1616)
Local adapation with distilling: 0.0001
training loss: tensor(1.3577) feature loss: tensor(0.1621)
Local adapation with distilling: 0.0001
training loss: tensor(1.4293) feature loss: tensor(0.1571)
Local adapation with distilling: 0.0001
training loss: tensor(1.3701) feature loss: tensor(0.1577)
Global Model Acc on global data: 0.2476 length of data: 10000
-------------Round number:  83  -------------
selected users: [6, 65, 95, 84, 61, 12, 30, 69, 35, 1]
random features: torch.Size([104, 320, 4, 4]) torch.Size([104])
random features: torch.Size([99, 320, 4, 4]) torch.Size([99])
random features: torch.Size([100, 320, 4, 4]) torch.Size([100])
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
random features: torch.Size([101, 320, 4, 4]) torch.Size([101])
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
random features: torch.Size([95, 320, 4, 4]) torch.Size([95])
random features: torch.Size([98, 320, 4, 4]) torch.Size([98])
random features: torch.Size([106, 320, 4, 4]) torch.Size([106])
random features: torch.Size([104, 320, 4, 4]) torch.Size([104])
all data: 999
Local adapation with distilling: 0.0001
training loss: tensor(1.5763) feature loss: tensor(0.1886)
Local adapation with distilling: 0.0001
training loss: tensor(1.4636) feature loss: tensor(0.1758)
Local adapation with distilling: 0.0001
training loss: tensor(1.4359) feature loss: tensor(0.1772)
Local adapation with distilling: 0.0001
training loss: tensor(1.4830) feature loss: tensor(0.1854)
Local adapation with distilling: 0.0001
training loss: tensor(1.5136) feature loss: tensor(0.1786)
Local adapation with distilling: 0.0001
training loss: tensor(1.5192) feature loss: tensor(0.1813)
Local adapation with distilling: 0.0001
training loss: tensor(1.4456) feature loss: tensor(0.1810)
Local adapation with distilling: 0.0001
training loss: tensor(1.4345) feature loss: tensor(0.1765)
Local adapation with distilling: 0.0001
training loss: tensor(1.6071) feature loss: tensor(0.1774)
Local adapation with distilling: 0.0001
training loss: tensor(1.5242) feature loss: tensor(0.1802)
Global Model Acc on global data: 0.2183 length of data: 10000
-------------Round number:  84  -------------
selected users: [94, 55, 80, 1, 90, 11, 32, 8, 6, 82]
random features: torch.Size([101, 320, 4, 4]) torch.Size([101])
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
random features: torch.Size([104, 320, 4, 4]) torch.Size([104])
random features: torch.Size([95, 320, 4, 4]) torch.Size([95])
random features: torch.Size([106, 320, 4, 4]) torch.Size([106])
random features: torch.Size([99, 320, 4, 4]) torch.Size([99])
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
random features: torch.Size([104, 320, 4, 4]) torch.Size([104])
random features: torch.Size([92, 320, 4, 4]) torch.Size([92])
all data: 989
Local adapation with distilling: 0.0001
training loss: tensor(1.5982) feature loss: tensor(0.2320)
Local adapation with distilling: 0.0001
training loss: tensor(1.5101) feature loss: tensor(0.2211)
Local adapation with distilling: 0.0001
training loss: tensor(1.5207) feature loss: tensor(0.2293)
Local adapation with distilling: 0.0001
training loss: tensor(1.5898) feature loss: tensor(0.2220)
Local adapation with distilling: 0.0001
training loss: tensor(1.5965) feature loss: tensor(0.2262)
Local adapation with distilling: 0.0001
training loss: tensor(1.5351) feature loss: tensor(0.2238)
Local adapation with distilling: 0.0001
training loss: tensor(1.6161) feature loss: tensor(0.2242)
Local adapation with distilling: 0.0001
training loss: tensor(1.5138) feature loss: tensor(0.2249)
Local adapation with distilling: 0.0001
training loss: tensor(1.6485) feature loss: tensor(0.2315)
Local adapation with distilling: 0.0001
training loss: tensor(1.5656) feature loss: tensor(0.2259)
Global Model Acc on global data: 0.2857 length of data: 10000
-------------Round number:  85  -------------
selected users: [81, 25, 40, 87, 41, 23, 10, 89, 50, 54]
random features: torch.Size([102, 320, 4, 4]) torch.Size([102])
random features: torch.Size([100, 320, 4, 4]) torch.Size([100])
random features: torch.Size([92, 320, 4, 4]) torch.Size([92])
random features: torch.Size([95, 320, 4, 4]) torch.Size([95])
random features: torch.Size([95, 320, 4, 4]) torch.Size([95])
random features: torch.Size([98, 320, 4, 4]) torch.Size([98])
random features: torch.Size([93, 320, 4, 4]) torch.Size([93])
random features: torch.Size([108, 320, 4, 4]) torch.Size([108])
random features: torch.Size([98, 320, 4, 4]) torch.Size([98])
random features: torch.Size([104, 320, 4, 4]) torch.Size([104])
all data: 985
Local adapation with distilling: 0.0001
training loss: tensor(1.5331) feature loss: tensor(0.1220)
Local adapation with distilling: 0.0001
training loss: tensor(1.3127) feature loss: tensor(0.1266)
Local adapation with distilling: 0.0001
training loss: tensor(1.3902) feature loss: tensor(0.1258)
Local adapation with distilling: 0.0001
training loss: tensor(1.3470) feature loss: tensor(0.1244)
Local adapation with distilling: 0.0001
training loss: tensor(1.2960) feature loss: tensor(0.1230)
Local adapation with distilling: 0.0001
training loss: tensor(1.4383) feature loss: tensor(0.1293)
Local adapation with distilling: 0.0001
training loss: tensor(1.3620) feature loss: tensor(0.1280)
Local adapation with distilling: 0.0001
training loss: tensor(1.3021) feature loss: tensor(0.1244)
Local adapation with distilling: 0.0001
training loss: tensor(1.2849) feature loss: tensor(0.1225)
Local adapation with distilling: 0.0001
training loss: tensor(1.4694) feature loss: tensor(0.1302)
Global Model Acc on global data: 0.3204 length of data: 10000
-------------Round number:  86  -------------
selected users: [69, 74, 34, 68, 42, 0, 32, 88, 8, 3]
random features: torch.Size([98, 320, 4, 4]) torch.Size([98])
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
random features: torch.Size([95, 320, 4, 4]) torch.Size([95])
random features: torch.Size([103, 320, 4, 4]) torch.Size([103])
random features: torch.Size([95, 320, 4, 4]) torch.Size([95])
random features: torch.Size([99, 320, 4, 4]) torch.Size([99])
random features: torch.Size([99, 320, 4, 4]) torch.Size([99])
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
random features: torch.Size([106, 320, 4, 4]) torch.Size([106])
all data: 983
Local adapation with distilling: 0.0001
training loss: tensor(1.2669) feature loss: tensor(0.1945)
Local adapation with distilling: 0.0001
training loss: tensor(1.3094) feature loss: tensor(0.1950)
Local adapation with distilling: 0.0001
training loss: tensor(1.2799) feature loss: tensor(0.1963)
Local adapation with distilling: 0.0001
training loss: tensor(1.4086) feature loss: tensor(0.1950)
Local adapation with distilling: 0.0001
training loss: tensor(1.3196) feature loss: tensor(0.2015)
Local adapation with distilling: 0.0001
training loss: tensor(1.3057) feature loss: tensor(0.1917)
Local adapation with distilling: 0.0001
training loss: tensor(1.3023) feature loss: tensor(0.1987)
Local adapation with distilling: 0.0001
training loss: tensor(1.3207) feature loss: tensor(0.1930)
Local adapation with distilling: 0.0001
training loss: tensor(1.2542) feature loss: tensor(0.1950)
Local adapation with distilling: 0.0001
training loss: tensor(1.3263) feature loss: tensor(0.1976)
Global Model Acc on global data: 0.2823 length of data: 10000
-------------Round number:  87  -------------
selected users: [16, 81, 85, 32, 39, 25, 26, 29, 65, 7]
random features: torch.Size([106, 320, 4, 4]) torch.Size([106])
random features: torch.Size([102, 320, 4, 4]) torch.Size([102])
random features: torch.Size([100, 320, 4, 4]) torch.Size([100])
random features: torch.Size([99, 320, 4, 4]) torch.Size([99])
random features: torch.Size([103, 320, 4, 4]) torch.Size([103])
random features: torch.Size([100, 320, 4, 4]) torch.Size([100])
random features: torch.Size([105, 320, 4, 4]) torch.Size([105])
random features: torch.Size([109, 320, 4, 4]) torch.Size([109])
random features: torch.Size([99, 320, 4, 4]) torch.Size([99])
random features: torch.Size([95, 320, 4, 4]) torch.Size([95])
all data: 1018
Local adapation with distilling: 0.0001
training loss: tensor(1.3749) feature loss: tensor(0.2441)
Local adapation with distilling: 0.0001
training loss: tensor(1.5806) feature loss: tensor(0.2400)
Local adapation with distilling: 0.0001
training loss: tensor(1.3490) feature loss: tensor(0.2364)
Local adapation with distilling: 0.0001
training loss: tensor(1.3727) feature loss: tensor(0.2407)
Local adapation with distilling: 0.0001
training loss: tensor(1.4189) feature loss: tensor(0.2380)
Local adapation with distilling: 0.0001
training loss: tensor(1.3650) feature loss: tensor(0.2438)
Local adapation with distilling: 0.0001
training loss: tensor(1.3554) feature loss: tensor(0.2417)
Local adapation with distilling: 0.0001
training loss: tensor(1.3218) feature loss: tensor(0.2420)
Local adapation with distilling: 0.0001
training loss: tensor(1.4094) feature loss: tensor(0.2394)
Local adapation with distilling: 0.0001
training loss: tensor(1.3861) feature loss: tensor(0.2378)
Global Model Acc on global data: 0.2739 length of data: 10000
-------------Round number:  88  -------------
selected users: [95, 53, 43, 84, 2, 74, 55, 31, 54, 97]
random features: torch.Size([100, 320, 4, 4]) torch.Size([100])
random features: torch.Size([115, 320, 4, 4]) torch.Size([115])
random features: torch.Size([98, 320, 4, 4]) torch.Size([98])
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
random features: torch.Size([97, 320, 4, 4]) torch.Size([97])
random features: torch.Size([104, 320, 4, 4]) torch.Size([104])
random features: torch.Size([95, 320, 4, 4]) torch.Size([95])
all data: 993
Local adapation with distilling: 0.0001
training loss: tensor(1.4104) feature loss: tensor(0.2118)
Local adapation with distilling: 0.0001
training loss: tensor(1.4067) feature loss: tensor(0.2132)
Local adapation with distilling: 0.0001
training loss: tensor(1.4322) feature loss: tensor(0.2098)
Local adapation with distilling: 0.0001
training loss: tensor(1.4650) feature loss: tensor(0.2131)
Local adapation with distilling: 0.0001
training loss: tensor(1.4458) feature loss: tensor(0.2142)
Local adapation with distilling: 0.0001
training loss: tensor(1.4536) feature loss: tensor(0.2107)
Local adapation with distilling: 0.0001
training loss: tensor(1.4146) feature loss: tensor(0.2071)
Local adapation with distilling: 0.0001
training loss: tensor(1.4996) feature loss: tensor(0.2104)
Local adapation with distilling: 0.0001
training loss: tensor(1.5519) feature loss: tensor(0.2209)
Local adapation with distilling: 0.0001
training loss: tensor(1.5321) feature loss: tensor(0.2157)
Global Model Acc on global data: 0.312 length of data: 10000
-------------Round number:  89  -------------
selected users: [65, 21, 87, 6, 46, 74, 44, 60, 72, 5]
random features: torch.Size([99, 320, 4, 4]) torch.Size([99])
random features: torch.Size([94, 320, 4, 4]) torch.Size([94])
random features: torch.Size([95, 320, 4, 4]) torch.Size([95])
random features: torch.Size([104, 320, 4, 4]) torch.Size([104])
random features: torch.Size([103, 320, 4, 4]) torch.Size([103])
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
random features: torch.Size([94, 320, 4, 4]) torch.Size([94])
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
random features: torch.Size([115, 320, 4, 4]) torch.Size([115])
random features: torch.Size([102, 320, 4, 4]) torch.Size([102])
all data: 998
Local adapation with distilling: 0.0001
training loss: tensor(1.2895) feature loss: tensor(0.1228)
Local adapation with distilling: 0.0001
training loss: tensor(1.3554) feature loss: tensor(0.1257)
Local adapation with distilling: 0.0001
training loss: tensor(1.3359) feature loss: tensor(0.1202)
Local adapation with distilling: 0.0001
training loss: tensor(1.3876) feature loss: tensor(0.1278)
Local adapation with distilling: 0.0001
training loss: tensor(1.3826) feature loss: tensor(0.1232)
Local adapation with distilling: 0.0001
training loss: tensor(1.2848) feature loss: tensor(0.1205)
Local adapation with distilling: 0.0001
training loss: tensor(1.3467) feature loss: tensor(0.1248)
Local adapation with distilling: 0.0001
training loss: tensor(1.2807) feature loss: tensor(0.1207)
Local adapation with distilling: 0.0001
training loss: tensor(1.3587) feature loss: tensor(0.1214)
Local adapation with distilling: 0.0001
training loss: tensor(1.3450) feature loss: tensor(0.1230)
Global Model Acc on global data: 0.2699 length of data: 10000
-------------Round number:  90  -------------
selected users: [25, 85, 96, 89, 65, 94, 5, 35, 36, 92]
random features: torch.Size([100, 320, 4, 4]) torch.Size([100])
random features: torch.Size([100, 320, 4, 4]) torch.Size([100])
random features: torch.Size([102, 320, 4, 4]) torch.Size([102])
random features: torch.Size([108, 320, 4, 4]) torch.Size([108])
random features: torch.Size([99, 320, 4, 4]) torch.Size([99])
random features: torch.Size([101, 320, 4, 4]) torch.Size([101])
random features: torch.Size([102, 320, 4, 4]) torch.Size([102])
random features: torch.Size([106, 320, 4, 4]) torch.Size([106])
random features: torch.Size([101, 320, 4, 4]) torch.Size([101])
random features: torch.Size([93, 320, 4, 4]) torch.Size([93])
all data: 1012
Local adapation with distilling: 0.0001
training loss: tensor(1.3071) feature loss: tensor(0.1374)
Local adapation with distilling: 0.0001
training loss: tensor(1.2852) feature loss: tensor(0.1370)
Local adapation with distilling: 0.0001
training loss: tensor(1.5896) feature loss: tensor(0.1420)
Local adapation with distilling: 0.0001
training loss: tensor(1.2858) feature loss: tensor(0.1397)
Local adapation with distilling: 0.0001
training loss: tensor(1.2724) feature loss: tensor(0.1408)
Local adapation with distilling: 0.0001
training loss: tensor(1.3381) feature loss: tensor(0.1426)
Local adapation with distilling: 0.0001
training loss: tensor(1.2982) feature loss: tensor(0.1372)
Local adapation with distilling: 0.0001
training loss: tensor(1.4139) feature loss: tensor(0.1403)
Local adapation with distilling: 0.0001
training loss: tensor(1.3388) feature loss: tensor(0.1403)
Local adapation with distilling: 0.0001
training loss: tensor(1.4114) feature loss: tensor(0.1377)
Global Model Acc on global data: 0.307 length of data: 10000
-------------Round number:  91  -------------
selected users: [75, 25, 3, 52, 78, 54, 59, 26, 62, 97]
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
random features: torch.Size([100, 320, 4, 4]) torch.Size([100])
random features: torch.Size([106, 320, 4, 4]) torch.Size([106])
random features: torch.Size([102, 320, 4, 4]) torch.Size([102])
random features: torch.Size([104, 320, 4, 4]) torch.Size([104])
random features: torch.Size([104, 320, 4, 4]) torch.Size([104])
random features: torch.Size([103, 320, 4, 4]) torch.Size([103])
random features: torch.Size([105, 320, 4, 4]) torch.Size([105])
random features: torch.Size([93, 320, 4, 4]) torch.Size([93])
random features: torch.Size([95, 320, 4, 4]) torch.Size([95])
all data: 1008
Local adapation with distilling: 0.0001
training loss: tensor(1.3214) feature loss: tensor(0.1476)
Local adapation with distilling: 0.0001
training loss: tensor(1.2832) feature loss: tensor(0.1473)
Local adapation with distilling: 0.0001
training loss: tensor(1.3623) feature loss: tensor(0.1490)
Local adapation with distilling: 0.0001
training loss: tensor(1.4636) feature loss: tensor(0.1510)
Local adapation with distilling: 0.0001
training loss: tensor(1.3816) feature loss: tensor(0.1420)
Local adapation with distilling: 0.0001
training loss: tensor(1.4158) feature loss: tensor(0.1563)
Local adapation with distilling: 0.0001
training loss: tensor(1.4748) feature loss: tensor(0.1411)
Local adapation with distilling: 0.0001
training loss: tensor(1.3302) feature loss: tensor(0.1476)
Local adapation with distilling: 0.0001
training loss: tensor(1.3933) feature loss: tensor(0.1562)
Local adapation with distilling: 0.0001
training loss: tensor(1.3641) feature loss: tensor(0.1528)
Global Model Acc on global data: 0.3609 length of data: 10000
-------------Round number:  92  -------------
selected users: [25, 99, 73, 61, 66, 36, 23, 83, 77, 6]
random features: torch.Size([100, 320, 4, 4]) torch.Size([100])
random features: torch.Size([93, 320, 4, 4]) torch.Size([93])
random features: torch.Size([104, 320, 4, 4]) torch.Size([104])
random features: torch.Size([101, 320, 4, 4]) torch.Size([101])
random features: torch.Size([108, 320, 4, 4]) torch.Size([108])
random features: torch.Size([101, 320, 4, 4]) torch.Size([101])
random features: torch.Size([98, 320, 4, 4]) torch.Size([98])
random features: torch.Size([101, 320, 4, 4]) torch.Size([101])
random features: torch.Size([92, 320, 4, 4]) torch.Size([92])
random features: torch.Size([104, 320, 4, 4]) torch.Size([104])
all data: 1002
Local adapation with distilling: 0.0001
training loss: tensor(1.4170) feature loss: tensor(0.1117)
Local adapation with distilling: 0.0001
training loss: tensor(1.5742) feature loss: tensor(0.1144)
Local adapation with distilling: 0.0001
training loss: tensor(1.4685) feature loss: tensor(0.1104)
Local adapation with distilling: 0.0001
training loss: tensor(1.4974) feature loss: tensor(0.1124)
Local adapation with distilling: 0.0001
training loss: tensor(1.5235) feature loss: tensor(0.1148)
Local adapation with distilling: 0.0001
training loss: tensor(1.4760) feature loss: tensor(0.1149)
Local adapation with distilling: 0.0001
training loss: tensor(1.6130) feature loss: tensor(0.1161)
Local adapation with distilling: 0.0001
training loss: tensor(1.5510) feature loss: tensor(0.1137)
Local adapation with distilling: 0.0001
training loss: tensor(1.6666) feature loss: tensor(0.1185)
Local adapation with distilling: 0.0001
training loss: tensor(1.4961) feature loss: tensor(0.1156)
Global Model Acc on global data: 0.3615 length of data: 10000
-------------Round number:  93  -------------
selected users: [75, 82, 56, 27, 42, 35, 1, 97, 66, 61]
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
random features: torch.Size([92, 320, 4, 4]) torch.Size([92])
random features: torch.Size([110, 320, 4, 4]) torch.Size([110])
random features: torch.Size([97, 320, 4, 4]) torch.Size([97])
random features: torch.Size([95, 320, 4, 4]) torch.Size([95])
random features: torch.Size([106, 320, 4, 4]) torch.Size([106])
random features: torch.Size([104, 320, 4, 4]) torch.Size([104])
random features: torch.Size([95, 320, 4, 4]) torch.Size([95])
random features: torch.Size([108, 320, 4, 4]) torch.Size([108])
random features: torch.Size([101, 320, 4, 4]) torch.Size([101])
all data: 1004
Local adapation with distilling: 0.0001
training loss: tensor(1.3560) feature loss: tensor(0.1438)
Local adapation with distilling: 0.0001
training loss: tensor(1.3779) feature loss: tensor(0.1426)
Local adapation with distilling: 0.0001
training loss: tensor(1.3653) feature loss: tensor(0.1391)
Local adapation with distilling: 0.0001
training loss: tensor(1.4319) feature loss: tensor(0.1473)
Local adapation with distilling: 0.0001
training loss: tensor(1.3977) feature loss: tensor(0.1484)
Local adapation with distilling: 0.0001
training loss: tensor(1.4513) feature loss: tensor(0.1415)
Local adapation with distilling: 0.0001
training loss: tensor(1.3839) feature loss: tensor(0.1400)
Local adapation with distilling: 0.0001
training loss: tensor(1.4109) feature loss: tensor(0.1466)
Local adapation with distilling: 0.0001
training loss: tensor(1.3956) feature loss: tensor(0.1399)
Local adapation with distilling: 0.0001
training loss: tensor(1.3643) feature loss: tensor(0.1445)
Global Model Acc on global data: 0.2497 length of data: 10000
-------------Round number:  94  -------------
selected users: [13, 73, 5, 18, 99, 48, 23, 4, 35, 17]
random features: torch.Size([101, 320, 4, 4]) torch.Size([101])
random features: torch.Size([104, 320, 4, 4]) torch.Size([104])
random features: torch.Size([102, 320, 4, 4]) torch.Size([102])
random features: torch.Size([99, 320, 4, 4]) torch.Size([99])
random features: torch.Size([93, 320, 4, 4]) torch.Size([93])
random features: torch.Size([95, 320, 4, 4]) torch.Size([95])
random features: torch.Size([98, 320, 4, 4]) torch.Size([98])
random features: torch.Size([98, 320, 4, 4]) torch.Size([98])
random features: torch.Size([106, 320, 4, 4]) torch.Size([106])
random features: torch.Size([107, 320, 4, 4]) torch.Size([107])
all data: 1003
Local adapation with distilling: 0.0001
training loss: tensor(1.5005) feature loss: tensor(0.1696)
Local adapation with distilling: 0.0001
training loss: tensor(1.4811) feature loss: tensor(0.1723)
Local adapation with distilling: 0.0001
training loss: tensor(1.4636) feature loss: tensor(0.1770)
Local adapation with distilling: 0.0001
training loss: tensor(1.6085) feature loss: tensor(0.1720)
Local adapation with distilling: 0.0001
training loss: tensor(1.5193) feature loss: tensor(0.1737)
Local adapation with distilling: 0.0001
training loss: tensor(1.6464) feature loss: tensor(0.1692)
Local adapation with distilling: 0.0001
training loss: tensor(1.5543) feature loss: tensor(0.1730)
Local adapation with distilling: 0.0001
training loss: tensor(1.4888) feature loss: tensor(0.1761)
Local adapation with distilling: 0.0001
training loss: tensor(1.4445) feature loss: tensor(0.1751)
Local adapation with distilling: 0.0001
training loss: tensor(1.4118) feature loss: tensor(0.1727)
Global Model Acc on global data: 0.2766 length of data: 10000
-------------Round number:  95  -------------
selected users: [88, 9, 1, 60, 95, 26, 45, 71, 44, 21]
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
random features: torch.Size([102, 320, 4, 4]) torch.Size([102])
random features: torch.Size([104, 320, 4, 4]) torch.Size([104])
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
random features: torch.Size([100, 320, 4, 4]) torch.Size([100])
random features: torch.Size([105, 320, 4, 4]) torch.Size([105])
random features: torch.Size([100, 320, 4, 4]) torch.Size([100])
random features: torch.Size([101, 320, 4, 4]) torch.Size([101])
random features: torch.Size([94, 320, 4, 4]) torch.Size([94])
random features: torch.Size([94, 320, 4, 4]) torch.Size([94])
all data: 992
Local adapation with distilling: 0.0001
training loss: tensor(1.1879) feature loss: tensor(0.1830)
Local adapation with distilling: 0.0001
training loss: tensor(1.3948) feature loss: tensor(0.1837)
Local adapation with distilling: 0.0001
training loss: tensor(1.2203) feature loss: tensor(0.1841)
Local adapation with distilling: 0.0001
training loss: tensor(1.1781) feature loss: tensor(0.1841)
Local adapation with distilling: 0.0001
training loss: tensor(1.1744) feature loss: tensor(0.1855)
Local adapation with distilling: 0.0001
training loss: tensor(1.2002) feature loss: tensor(0.1851)
Local adapation with distilling: 0.0001
training loss: tensor(1.1965) feature loss: tensor(0.1852)
Local adapation with distilling: 0.0001
training loss: tensor(1.1605) feature loss: tensor(0.1853)
Local adapation with distilling: 0.0001
training loss: tensor(1.2441) feature loss: tensor(0.1899)
Local adapation with distilling: 0.0001
training loss: tensor(1.2387) feature loss: tensor(0.1854)
Global Model Acc on global data: 0.2826 length of data: 10000
-------------Round number:  96  -------------
selected users: [41, 28, 52, 15, 87, 17, 75, 42, 45, 49]
random features: torch.Size([95, 320, 4, 4]) torch.Size([95])
random features: torch.Size([102, 320, 4, 4]) torch.Size([102])
random features: torch.Size([102, 320, 4, 4]) torch.Size([102])
random features: torch.Size([103, 320, 4, 4]) torch.Size([103])
random features: torch.Size([95, 320, 4, 4]) torch.Size([95])
random features: torch.Size([107, 320, 4, 4]) torch.Size([107])
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
random features: torch.Size([95, 320, 4, 4]) torch.Size([95])
random features: torch.Size([100, 320, 4, 4]) torch.Size([100])
random features: torch.Size([99, 320, 4, 4]) torch.Size([99])
all data: 994
Local adapation with distilling: 0.0001
training loss: tensor(1.3974) feature loss: tensor(0.1859)
Local adapation with distilling: 0.0001
training loss: tensor(1.4953) feature loss: tensor(0.1895)
Local adapation with distilling: 0.0001
training loss: tensor(1.7779) feature loss: tensor(0.1899)
Local adapation with distilling: 0.0001
training loss: tensor(1.5175) feature loss: tensor(0.1884)
Local adapation with distilling: 0.0001
training loss: tensor(1.4630) feature loss: tensor(0.1915)
Local adapation with distilling: 0.0001
training loss: tensor(1.4142) feature loss: tensor(0.1869)
Local adapation with distilling: 0.0001
training loss: tensor(1.4020) feature loss: tensor(0.1840)
Local adapation with distilling: 0.0001
training loss: tensor(1.4597) feature loss: tensor(0.1868)
Local adapation with distilling: 0.0001
training loss: tensor(1.3580) feature loss: tensor(0.1850)
Local adapation with distilling: 0.0001
training loss: tensor(1.4443) feature loss: tensor(0.1867)
Global Model Acc on global data: 0.3081 length of data: 10000
-------------Round number:  97  -------------
selected users: [31, 43, 64, 56, 85, 2, 70, 21, 34, 50]
random features: torch.Size([97, 320, 4, 4]) torch.Size([97])
random features: torch.Size([98, 320, 4, 4]) torch.Size([98])
random features: torch.Size([98, 320, 4, 4]) torch.Size([98])
random features: torch.Size([110, 320, 4, 4]) torch.Size([110])
random features: torch.Size([100, 320, 4, 4]) torch.Size([100])
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
random features: torch.Size([96, 320, 4, 4]) torch.Size([96])
random features: torch.Size([94, 320, 4, 4]) torch.Size([94])
random features: torch.Size([95, 320, 4, 4]) torch.Size([95])
random features: torch.Size([98, 320, 4, 4]) torch.Size([98])
all data: 982
Local adapation with distilling: 0.0001
training loss: tensor(1.2826) feature loss: tensor(0.1670)
Local adapation with distilling: 0.0001
training loss: tensor(1.2453) feature loss: tensor(0.1649)
Local adapation with distilling: 0.0001
training loss: tensor(1.3146) feature loss: tensor(0.1694)
Local adapation with distilling: 0.0001
training loss: tensor(1.2341) feature loss: tensor(0.1652)
Local adapation with distilling: 0.0001
training loss: tensor(1.2288) feature loss: tensor(0.1669)
Local adapation with distilling: 0.0001
training loss: tensor(1.2180) feature loss: tensor(0.1632)
Local adapation with distilling: 0.0001
training loss: tensor(1.2067) feature loss: tensor(0.1662)
Local adapation with distilling: 0.0001
training loss: tensor(1.2828) feature loss: tensor(0.1681)
Local adapation with distilling: 0.0001
training loss: tensor(1.2367) feature loss: tensor(0.1701)
Local adapation with distilling: 0.0001
training loss: tensor(1.2646) feature loss: tensor(0.1713)
Global Model Acc on global data: 0.2831 length of data: 10000
-------------Round number:  98  -------------
selected users: [11, 48, 97, 14, 22, 36, 99, 47, 33, 81]
random features: torch.Size([106, 320, 4, 4]) torch.Size([106])
random features: torch.Size([95, 320, 4, 4]) torch.Size([95])
random features: torch.Size([95, 320, 4, 4]) torch.Size([95])
random features: torch.Size([99, 320, 4, 4]) torch.Size([99])
random features: torch.Size([102, 320, 4, 4]) torch.Size([102])
random features: torch.Size([101, 320, 4, 4]) torch.Size([101])
random features: torch.Size([93, 320, 4, 4]) torch.Size([93])
random features: torch.Size([93, 320, 4, 4]) torch.Size([93])
random features: torch.Size([97, 320, 4, 4]) torch.Size([97])
random features: torch.Size([102, 320, 4, 4]) torch.Size([102])
all data: 983
Local adapation with distilling: 0.0001
training loss: tensor(1.3516) feature loss: tensor(0.1899)
Local adapation with distilling: 0.0001
training loss: tensor(1.4797) feature loss: tensor(0.1919)
Local adapation with distilling: 0.0001
training loss: tensor(1.3803) feature loss: tensor(0.1938)
Local adapation with distilling: 0.0001
training loss: tensor(1.3801) feature loss: tensor(0.1953)
Local adapation with distilling: 0.0001
training loss: tensor(1.5844) feature loss: tensor(0.1944)
Local adapation with distilling: 0.0001
training loss: tensor(1.3697) feature loss: tensor(0.1944)
Local adapation with distilling: 0.0001
training loss: tensor(1.3508) feature loss: tensor(0.1937)
Local adapation with distilling: 0.0001
training loss: tensor(1.4243) feature loss: tensor(0.1929)
Local adapation with distilling: 0.0001
training loss: tensor(1.3749) feature loss: tensor(0.1937)
Local adapation with distilling: 0.0001
training loss: tensor(1.5098) feature loss: tensor(0.1921)
Global Model Acc on global data: 0.2581 length of data: 10000
-------------Round number:  99  -------------
selected users: [14, 34, 30, 78, 16, 15, 91, 38, 10, 85]
random features: torch.Size([99, 320, 4, 4]) torch.Size([99])
random features: torch.Size([95, 320, 4, 4]) torch.Size([95])
random features: torch.Size([95, 320, 4, 4]) torch.Size([95])
random features: torch.Size([104, 320, 4, 4]) torch.Size([104])
random features: torch.Size([106, 320, 4, 4]) torch.Size([106])
random features: torch.Size([103, 320, 4, 4]) torch.Size([103])
random features: torch.Size([105, 320, 4, 4]) torch.Size([105])
random features: torch.Size([109, 320, 4, 4]) torch.Size([109])
random features: torch.Size([93, 320, 4, 4]) torch.Size([93])
random features: torch.Size([100, 320, 4, 4]) torch.Size([100])
all data: 1009
Local adapation with distilling: 0.0001
training loss: tensor(1.2964) feature loss: tensor(0.1935)
Local adapation with distilling: 0.0001
training loss: tensor(1.3100) feature loss: tensor(0.1913)
Local adapation with distilling: 0.0001
training loss: tensor(1.3306) feature loss: tensor(0.1952)
Local adapation with distilling: 0.0001
training loss: tensor(1.3408) feature loss: tensor(0.1925)
Local adapation with distilling: 0.0001
training loss: tensor(1.3836) feature loss: tensor(0.1875)
Local adapation with distilling: 0.0001
training loss: tensor(1.4975) feature loss: tensor(0.1942)
Local adapation with distilling: 0.0001
training loss: tensor(1.3430) feature loss: tensor(0.1932)
Local adapation with distilling: 0.0001
training loss: tensor(1.2593) feature loss: tensor(0.1925)
Local adapation with distilling: 0.0001
training loss: tensor(1.3278) feature loss: tensor(0.1940)
Local adapation with distilling: 0.0001
training loss: tensor(1.2734) feature loss: tensor(0.1901)
Global Model Acc on global data: 0.2302 length of data: 10000
