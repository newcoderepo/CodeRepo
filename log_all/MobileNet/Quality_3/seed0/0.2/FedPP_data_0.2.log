nohup: ignoring input
================================================================================
Summary of training process:
Dataset                : Cifar10
Batch size             : 64
Learing rate           : 0.001
Number of total clients: 100
Split method           : quantity
Split parameter        : 3.0
Clients per round      : 10
Number of global rounds: 100
Number of local rounds : 10
Feature from layer     : -1
Feature percentage     : 0.2
Local training loss    : CE_CE_KL
Loss of beta           : 1.0
Algorithm              : FedFea
Modelname              : MOBNET
Mode                   : training
Seed                   : 0
================================================================================
Files already downloaded and verified
Files already downloaded and verified
Class frequencies:
client,class0,class1,class2,class3,class4,class5,class6,class7,class8,class9,Amount
Client   0,0.298,0.00,0.00,0.00,0.00,0.375,0.00,0.00,0.327,0.00,496
Client   1,0.00,0.321,0.00,0.00,0.00,0.358,0.00,0.00,0.00,0.321,520
Client   2,0.307,0.346,0.346,0.00,0.00,0.00,0.00,0.00,0.00,0.00,482
Client   3,0.00,0.00,0.00,0.337,0.00,0.00,0.377,0.286,0.00,0.00,531
Client   4,0.00,0.00,0.340,0.00,0.320,0.00,0.00,0.00,0.00,0.340,491
Client   5,0.00,0.00,0.327,0.00,0.308,0.365,0.00,0.00,0.00,0.00,510
Client   6,0.00,0.00,0.319,0.00,0.300,0.00,0.382,0.00,0.00,0.00,524
Client   7,0.00,0.00,0.00,0.00,0.330,0.00,0.00,0.319,0.00,0.351,476
Client   8,0.00,0.347,0.00,0.00,0.00,0.00,0.00,0.316,0.337,0.00,481
Client   9,0.286,0.00,0.00,0.00,0.00,0.00,0.389,0.00,0.00,0.325,514
Client  10,0.315,0.00,0.00,0.00,0.00,0.00,0.00,0.326,0.00,0.358,466
Client  11,0.00,0.313,0.00,0.00,0.00,0.00,0.375,0.00,0.00,0.313,534
Client  12,0.306,0.347,0.347,0.00,0.00,0.00,0.00,0.00,0.00,0.00,481
Client  13,0.00,0.329,0.00,0.352,0.00,0.00,0.00,0.00,0.319,0.00,508
Client  14,0.00,0.00,0.00,0.359,0.315,0.00,0.00,0.00,0.325,0.00,498
Client  15,0.00,0.00,0.00,0.00,0.00,0.361,0.00,0.00,0.315,0.324,515
Client  16,0.00,0.00,0.00,0.337,0.00,0.00,0.377,0.286,0.00,0.00,531
Client  17,0.00,0.00,0.00,0.00,0.00,0.346,0.372,0.283,0.00,0.00,538
Client  18,0.00,0.337,0.00,0.00,0.00,0.00,0.00,0.00,0.327,0.337,496
Client  19,0.00,0.00,0.00,0.356,0.312,0.00,0.00,0.00,0.00,0.332,503
Client  20,0.309,0.351,0.00,0.00,0.00,0.00,0.00,0.00,0.340,0.00,476
Client  21,0.312,0.355,0.00,0.00,0.333,0.00,0.00,0.00,0.00,0.00,471
Client  22,0.00,0.00,0.326,0.349,0.00,0.00,0.00,0.00,0.00,0.326,513
Client  23,0.298,0.00,0.339,0.363,0.00,0.00,0.00,0.00,0.00,0.00,493
Client  24,0.00,0.00,0.340,0.00,0.320,0.00,0.00,0.00,0.00,0.340,491
Client  25,0.00,0.00,0.00,0.00,0.00,0.367,0.00,0.302,0.00,0.331,504
Client  26,0.00,0.00,0.00,0.00,0.00,0.00,0.378,0.00,0.306,0.316,529
Client  27,0.00,0.00,0.00,0.368,0.320,0.00,0.00,0.312,0.00,0.00,487
Client  28,0.00,0.00,0.00,0.00,0.00,0.360,0.00,0.00,0.315,0.325,514
Client  29,0.00,0.00,0.00,0.328,0.00,0.00,0.366,0.00,0.00,0.306,546
Client  30,0.309,0.00,0.352,0.00,0.00,0.00,0.00,0.00,0.339,0.00,475
Client  31,0.00,0.344,0.00,0.00,0.00,0.00,0.00,0.313,0.00,0.344,486
Client  32,0.00,0.00,0.335,0.359,0.00,0.00,0.00,0.305,0.00,0.00,498
Client  33,0.302,0.00,0.00,0.368,0.00,0.00,0.00,0.00,0.331,0.00,487
Client  34,0.00,0.352,0.00,0.00,0.328,0.00,0.00,0.320,0.00,0.00,475
Client  35,0.00,0.315,0.00,0.337,0.00,0.348,0.00,0.00,0.00,0.00,531
Client  36,0.289,0.00,0.00,0.00,0.00,0.00,0.394,0.00,0.317,0.00,508
Client  37,0.00,0.00,0.00,0.00,0.307,0.00,0.394,0.299,0.00,0.00,508
Client  38,0.00,0.00,0.00,0.00,0.00,0.339,0.366,0.00,0.295,0.00,546
Client  39,0.00,0.00,0.322,0.00,0.00,0.356,0.00,0.00,0.00,0.322,519
Client  40,0.320,0.00,0.00,0.00,0.00,0.00,0.00,0.330,0.350,0.00,460
Client  41,0.00,0.352,0.00,0.00,0.328,0.00,0.00,0.320,0.00,0.00,475
Client  42,0.00,0.00,0.352,0.00,0.328,0.00,0.00,0.320,0.00,0.00,475
Client  43,0.298,0.00,0.00,0.363,0.00,0.00,0.00,0.00,0.00,0.339,493
Client  44,0.313,0.00,0.355,0.00,0.332,0.00,0.00,0.00,0.00,0.00,470
Client  45,0.00,0.331,0.00,0.00,0.00,0.367,0.00,0.302,0.00,0.00,504
Client  46,0.00,0.00,0.00,0.00,0.00,0.00,0.385,0.293,0.00,0.322,519
Client  47,0.00,0.00,0.00,0.00,0.333,0.00,0.00,0.323,0.344,0.00,468
Client  48,0.309,0.352,0.00,0.00,0.00,0.00,0.00,0.00,0.339,0.00,475
Client  49,0.00,0.00,0.337,0.00,0.00,0.00,0.00,0.00,0.325,0.337,495
Client  50,0.298,0.339,0.00,0.363,0.00,0.00,0.00,0.00,0.00,0.00,493
Client  51,0.00,0.344,0.344,0.00,0.00,0.00,0.00,0.311,0.00,0.00,485
Client  52,0.286,0.00,0.325,0.00,0.00,0.00,0.389,0.00,0.00,0.00,514
Client  53,0.00,0.00,0.326,0.350,0.00,0.00,0.00,0.00,0.00,0.324,512
Client  54,0.00,0.00,0.319,0.00,0.298,0.00,0.382,0.00,0.00,0.00,523
Client  55,0.304,0.00,0.00,0.00,0.00,0.383,0.00,0.313,0.00,0.00,483
Client  56,0.00,0.303,0.00,0.00,0.00,0.335,0.362,0.00,0.00,0.00,552
Client  57,0.00,0.00,0.00,0.00,0.308,0.00,0.394,0.298,0.00,0.00,507
Client  58,0.289,0.00,0.00,0.00,0.00,0.00,0.394,0.00,0.317,0.00,508
Client  59,0.00,0.322,0.00,0.00,0.00,0.357,0.00,0.00,0.00,0.320,518
Client  60,0.306,0.347,0.347,0.00,0.00,0.00,0.00,0.00,0.00,0.00,481
Client  61,0.00,0.327,0.00,0.00,0.308,0.365,0.00,0.00,0.00,0.00,507
Client  62,0.316,0.00,0.359,0.00,0.00,0.00,0.00,0.325,0.00,0.00,465
Client  63,0.00,0.00,0.00,0.354,0.00,0.00,0.00,0.00,0.318,0.328,506
Client  64,0.00,0.00,0.00,0.00,0.317,0.376,0.00,0.307,0.00,0.00,492
Client  65,0.295,0.00,0.00,0.00,0.00,0.371,0.00,0.00,0.00,0.333,498
Client  66,0.00,0.00,0.00,0.327,0.00,0.00,0.368,0.00,0.00,0.305,544
Client  67,0.00,0.351,0.00,0.00,0.330,0.00,0.00,0.319,0.00,0.00,473
Client  68,0.00,0.00,0.00,0.00,0.302,0.00,0.387,0.00,0.311,0.00,517
Client  69,0.00,0.00,0.337,0.00,0.00,0.00,0.00,0.00,0.327,0.337,493
Client  70,0.304,0.00,0.00,0.00,0.00,0.383,0.00,0.313,0.00,0.00,483
Client  71,0.00,0.327,0.00,0.00,0.308,0.365,0.00,0.00,0.00,0.00,507
Client  72,0.00,0.00,0.324,0.00,0.00,0.361,0.00,0.00,0.314,0.00,512
Client  73,0.00,0.00,0.00,0.340,0.00,0.353,0.00,0.00,0.307,0.00,524
Client  74,0.00,0.344,0.00,0.00,0.323,0.00,0.00,0.00,0.333,0.00,483
Client  75,0.304,0.00,0.00,0.00,0.00,0.383,0.00,0.313,0.00,0.00,483
Client  76,0.00,0.00,0.00,0.333,0.292,0.00,0.375,0.00,0.00,0.00,534
Client  77,0.317,0.00,0.358,0.00,0.00,0.00,0.00,0.325,0.00,0.00,464
Client  78,0.00,0.00,0.00,0.340,0.00,0.353,0.00,0.00,0.307,0.00,524
Client  79,0.00,0.333,0.333,0.00,0.00,0.00,0.00,0.00,0.00,0.333,498
Client  80,0.306,0.00,0.00,0.370,0.324,0.00,0.00,0.00,0.00,0.00,481
Client  81,0.287,0.324,0.00,0.00,0.00,0.00,0.390,0.00,0.00,0.00,513
Client  82,0.317,0.00,0.358,0.00,0.00,0.00,0.00,0.325,0.00,0.00,464
Client  83,0.00,0.00,0.329,0.352,0.00,0.00,0.00,0.00,0.319,0.00,505
Client  84,0.306,0.00,0.00,0.370,0.324,0.00,0.00,0.00,0.00,0.00,481
Client  85,0.00,0.00,0.00,0.00,0.311,0.369,0.00,0.00,0.321,0.00,502
Client  86,0.00,0.00,0.312,0.00,0.00,0.00,0.376,0.00,0.00,0.312,532
Client  87,0.309,0.00,0.00,0.374,0.00,0.00,0.00,0.317,0.00,0.00,476
Client  88,0.00,0.344,0.00,0.00,0.323,0.00,0.00,0.00,0.333,0.00,483
Client  89,0.00,0.00,0.00,0.327,0.00,0.00,0.368,0.00,0.00,0.305,544
Client  90,0.309,0.00,0.00,0.374,0.00,0.00,0.00,0.317,0.00,0.00,476
Client  91,0.00,0.314,0.00,0.336,0.00,0.350,0.00,0.00,0.00,0.00,529
Client  92,0.313,0.00,0.354,0.00,0.333,0.00,0.00,0.00,0.00,0.00,469
Client  93,0.00,0.00,0.00,0.340,0.00,0.353,0.00,0.00,0.307,0.00,524
Client  94,0.00,0.00,0.00,0.00,0.308,0.00,0.394,0.298,0.00,0.00,507
Client  95,0.00,0.331,0.00,0.00,0.00,0.369,0.00,0.301,0.00,0.00,502
Client  96,0.287,0.00,0.324,0.00,0.00,0.00,0.390,0.00,0.00,0.00,513
Client  97,0.00,0.00,0.347,0.00,0.00,0.00,0.00,0.316,0.337,0.00,478
Client  98,0.00,0.344,0.00,0.00,0.323,0.00,0.00,0.00,0.333,0.00,483
Client  99,0.313,0.00,0.00,0.00,0.333,0.00,0.00,0.00,0.00,0.354,469
0 [0 5 8] [0 5 8] [1 2 3 4 6 7 9]
0 training: Counter({5: 186, 8: 162, 0: 148}) testing iid: Counter({8: 1000, 0: 1000, 5: 1000})
1 [1 5 9] [1 5 9] [0 2 3 4 6 7 8]
1 training: Counter({5: 186, 1: 167, 9: 167}) testing iid: Counter({1: 1000, 9: 1000, 5: 1000})
2 [0 1 2] [0 1 2] [3 4 5 6 7 8 9]
2 training: Counter({1: 167, 2: 167, 0: 148}) testing iid: Counter({0: 1000, 1: 1000, 2: 1000})
3 [3 6 7] [3 6 7] [0 1 2 4 5 8 9]
3 training: Counter({6: 200, 3: 179, 7: 152}) testing iid: Counter({3: 1000, 6: 1000, 7: 1000})
4 [2 4 9] [2 4 9] [0 1 3 5 6 7 8]
4 training: Counter({2: 167, 9: 167, 4: 157}) testing iid: Counter({9: 1000, 4: 1000, 2: 1000})
5 [2 4 5] [2 4 5] [0 1 3 6 7 8 9]
5 training: Counter({5: 186, 2: 167, 4: 157}) testing iid: Counter({5: 1000, 4: 1000, 2: 1000})
6 [2 4 6] [2 4 6] [0 1 3 5 7 8 9]
6 training: Counter({6: 200, 2: 167, 4: 157}) testing iid: Counter({6: 1000, 4: 1000, 2: 1000})
7 [4 7 9] [4 7 9] [0 1 2 3 5 6 8]
7 training: Counter({9: 167, 4: 157, 7: 152}) testing iid: Counter({9: 1000, 7: 1000, 4: 1000})
8 [1 7 8] [1 7 8] [0 2 3 4 5 6 9]
8 training: Counter({1: 167, 8: 162, 7: 152}) testing iid: Counter({8: 1000, 1: 1000, 7: 1000})
9 [0 6 9] [0 6 9] [1 2 3 4 5 7 8]
9 training: Counter({6: 200, 9: 167, 0: 147}) testing iid: Counter({0: 1000, 6: 1000, 9: 1000})
10 [0 7 9] [0 7 9] [1 2 3 4 5 6 8]
10 training: Counter({9: 167, 7: 152, 0: 147}) testing iid: Counter({0: 1000, 9: 1000, 7: 1000})
11 [1 6 9] [1 6 9] [0 2 3 4 5 7 8]
11 training: Counter({6: 200, 1: 167, 9: 167}) testing iid: Counter({6: 1000, 1: 1000, 9: 1000})
12 [0 1 2] [0 1 2] [3 4 5 6 7 8 9]
12 training: Counter({1: 167, 2: 167, 0: 147}) testing iid: Counter({0: 1000, 1: 1000, 2: 1000})
13 [1 3 8] [1 3 8] [0 2 4 5 6 7 9]
13 training: Counter({3: 179, 1: 167, 8: 162}) testing iid: Counter({3: 1000, 8: 1000, 1: 1000})
14 [3 4 8] [3 4 8] [0 1 2 5 6 7 9]
14 training: Counter({3: 179, 8: 162, 4: 157}) testing iid: Counter({3: 1000, 8: 1000, 4: 1000})
15 [5 8 9] [5 8 9] [0 1 2 3 4 6 7]
15 training: Counter({5: 186, 9: 167, 8: 162}) testing iid: Counter({8: 1000, 9: 1000, 5: 1000})
16 [3 6 7] [3 6 7] [0 1 2 4 5 8 9]
16 training: Counter({6: 200, 3: 179, 7: 152}) testing iid: Counter({3: 1000, 6: 1000, 7: 1000})
17 [5 6 7] [5 6 7] [0 1 2 3 4 8 9]
17 training: Counter({6: 200, 5: 186, 7: 152}) testing iid: Counter({6: 1000, 5: 1000, 7: 1000})
18 [1 8 9] [1 8 9] [0 2 3 4 5 6 7]
18 training: Counter({1: 167, 9: 167, 8: 162}) testing iid: Counter({8: 1000, 1: 1000, 9: 1000})
19 [3 4 9] [3 4 9] [0 1 2 5 6 7 8]
19 training: Counter({3: 179, 9: 167, 4: 157}) testing iid: Counter({3: 1000, 9: 1000, 4: 1000})
20 [0 1 8] [0 1 8] [2 3 4 5 6 7 9]
20 training: Counter({1: 167, 8: 162, 0: 147}) testing iid: Counter({8: 1000, 0: 1000, 1: 1000})
21 [0 1 4] [0 1 4] [2 3 5 6 7 8 9]
21 training: Counter({1: 167, 4: 157, 0: 147}) testing iid: Counter({0: 1000, 1: 1000, 4: 1000})
22 [2 3 9] [2 3 9] [0 1 4 5 6 7 8]
22 training: Counter({3: 179, 2: 167, 9: 167}) testing iid: Counter({3: 1000, 9: 1000, 2: 1000})
23 [0 2 3] [0 2 3] [1 4 5 6 7 8 9]
23 training: Counter({3: 179, 2: 167, 0: 147}) testing iid: Counter({3: 1000, 0: 1000, 2: 1000})
24 [2 4 9] [2 4 9] [0 1 3 5 6 7 8]
24 training: Counter({2: 167, 9: 167, 4: 157}) testing iid: Counter({9: 1000, 4: 1000, 2: 1000})
25 [5 7 9] [5 7 9] [0 1 2 3 4 6 8]
25 training: Counter({5: 185, 9: 167, 7: 152}) testing iid: Counter({9: 1000, 5: 1000, 7: 1000})
26 [6 8 9] [6 8 9] [0 1 2 3 4 5 7]
26 training: Counter({6: 200, 9: 167, 8: 162}) testing iid: Counter({8: 1000, 6: 1000, 9: 1000})
27 [3 4 7] [3 4 7] [0 1 2 5 6 8 9]
27 training: Counter({3: 179, 4: 156, 7: 152}) testing iid: Counter({3: 1000, 7: 1000, 4: 1000})
28 [5 8 9] [5 8 9] [0 1 2 3 4 6 7]
28 training: Counter({5: 185, 9: 167, 8: 162}) testing iid: Counter({8: 1000, 9: 1000, 5: 1000})
29 [3 6 9] [3 6 9] [0 1 2 4 5 7 8]
29 training: Counter({6: 200, 3: 179, 9: 167}) testing iid: Counter({3: 1000, 6: 1000, 9: 1000})
30 [0 2 8] [0 2 8] [1 3 4 5 6 7 9]
30 training: Counter({2: 167, 8: 161, 0: 147}) testing iid: Counter({8: 1000, 0: 1000, 2: 1000})
31 [1 7 9] [1 7 9] [0 2 3 4 5 6 8]
31 training: Counter({1: 167, 9: 167, 7: 152}) testing iid: Counter({1: 1000, 9: 1000, 7: 1000})
32 [2 3 7] [2 3 7] [0 1 4 5 6 8 9]
32 training: Counter({3: 179, 2: 167, 7: 152}) testing iid: Counter({3: 1000, 7: 1000, 2: 1000})
33 [0 3 8] [0 3 8] [1 2 4 5 6 7 9]
33 training: Counter({3: 179, 8: 161, 0: 147}) testing iid: Counter({3: 1000, 8: 1000, 0: 1000})
34 [1 4 7] [1 4 7] [0 2 3 5 6 8 9]
34 training: Counter({1: 167, 4: 156, 7: 152}) testing iid: Counter({1: 1000, 7: 1000, 4: 1000})
35 [1 3 5] [1 3 5] [0 2 4 6 7 8 9]
35 training: Counter({5: 185, 3: 179, 1: 167}) testing iid: Counter({3: 1000, 1: 1000, 5: 1000})
36 [0 6 8] [0 6 8] [1 2 3 4 5 7 9]
36 training: Counter({6: 200, 8: 161, 0: 147}) testing iid: Counter({8: 1000, 0: 1000, 6: 1000})
37 [4 6 7] [4 6 7] [0 1 2 3 5 8 9]
37 training: Counter({6: 200, 4: 156, 7: 152}) testing iid: Counter({6: 1000, 7: 1000, 4: 1000})
38 [5 6 8] [5 6 8] [0 1 2 3 4 7 9]
38 training: Counter({6: 200, 5: 185, 8: 161}) testing iid: Counter({8: 1000, 6: 1000, 5: 1000})
39 [2 5 9] [2 5 9] [0 1 3 4 6 7 8]
39 training: Counter({5: 185, 2: 167, 9: 167}) testing iid: Counter({9: 1000, 5: 1000, 2: 1000})
40 [0 7 8] [0 7 8] [1 2 3 4 5 6 9]
40 training: Counter({8: 161, 7: 152, 0: 147}) testing iid: Counter({8: 1000, 0: 1000, 7: 1000})
41 [1 4 7] [1 4 7] [0 2 3 5 6 8 9]
41 training: Counter({1: 167, 4: 156, 7: 152}) testing iid: Counter({1: 1000, 7: 1000, 4: 1000})
42 [2 4 7] [2 4 7] [0 1 3 5 6 8 9]
42 training: Counter({2: 167, 4: 156, 7: 152}) testing iid: Counter({7: 1000, 4: 1000, 2: 1000})
43 [0 3 9] [0 3 9] [1 2 4 5 6 7 8]
43 training: Counter({3: 179, 9: 167, 0: 147}) testing iid: Counter({3: 1000, 0: 1000, 9: 1000})
44 [0 2 4] [0 2 4] [1 3 5 6 7 8 9]
44 training: Counter({2: 167, 4: 156, 0: 147}) testing iid: Counter({0: 1000, 4: 1000, 2: 1000})
45 [1 5 7] [1 5 7] [0 2 3 4 6 8 9]
45 training: Counter({5: 185, 1: 167, 7: 152}) testing iid: Counter({1: 1000, 5: 1000, 7: 1000})
46 [6 7 9] [6 7 9] [0 1 2 3 4 5 8]
46 training: Counter({6: 200, 9: 167, 7: 152}) testing iid: Counter({6: 1000, 9: 1000, 7: 1000})
47 [4 7 8] [4 7 8] [0 1 2 3 5 6 9]
47 training: Counter({8: 161, 4: 156, 7: 151}) testing iid: Counter({8: 1000, 7: 1000, 4: 1000})
48 [0 1 8] [0 1 8] [2 3 4 5 6 7 9]
48 training: Counter({1: 167, 8: 161, 0: 147}) testing iid: Counter({8: 1000, 0: 1000, 1: 1000})
49 [2 8 9] [2 8 9] [0 1 3 4 5 6 7]
49 training: Counter({2: 167, 9: 167, 8: 161}) testing iid: Counter({8: 1000, 9: 1000, 2: 1000})
50 [0 1 3] [0 1 3] [2 4 5 6 7 8 9]
50 training: Counter({3: 179, 1: 167, 0: 147}) testing iid: Counter({3: 1000, 0: 1000, 1: 1000})
51 [1 2 7] [1 2 7] [0 3 4 5 6 8 9]
51 training: Counter({1: 167, 2: 167, 7: 151}) testing iid: Counter({1: 1000, 7: 1000, 2: 1000})
52 [0 2 6] [0 2 6] [1 3 4 5 7 8 9]
52 training: Counter({6: 200, 2: 167, 0: 147}) testing iid: Counter({0: 1000, 6: 1000, 2: 1000})
53 [2 3 9] [2 3 9] [0 1 4 5 6 7 8]
53 training: Counter({3: 179, 2: 167, 9: 166}) testing iid: Counter({3: 1000, 9: 1000, 2: 1000})
54 [2 4 6] [2 4 6] [0 1 3 5 7 8 9]
54 training: Counter({6: 200, 2: 167, 4: 156}) testing iid: Counter({6: 1000, 4: 1000, 2: 1000})
55 [0 5 7] [0 5 7] [1 2 3 4 6 8 9]
55 training: Counter({5: 185, 7: 151, 0: 147}) testing iid: Counter({0: 1000, 5: 1000, 7: 1000})
56 [1 5 6] [1 5 6] [0 2 3 4 7 8 9]
56 training: Counter({6: 200, 5: 185, 1: 167}) testing iid: Counter({6: 1000, 1: 1000, 5: 1000})
57 [4 6 7] [4 6 7] [0 1 2 3 5 8 9]
57 training: Counter({6: 200, 4: 156, 7: 151}) testing iid: Counter({6: 1000, 7: 1000, 4: 1000})
58 [0 6 8] [0 6 8] [1 2 3 4 5 7 9]
58 training: Counter({6: 200, 8: 161, 0: 147}) testing iid: Counter({8: 1000, 0: 1000, 6: 1000})
59 [1 5 9] [1 5 9] [0 2 3 4 6 7 8]
59 training: Counter({5: 185, 1: 167, 9: 166}) testing iid: Counter({1: 1000, 9: 1000, 5: 1000})
60 [0 1 2] [0 1 2] [3 4 5 6 7 8 9]
60 training: Counter({1: 167, 2: 167, 0: 147}) testing iid: Counter({0: 1000, 1: 1000, 2: 1000})
61 [1 4 5] [1 4 5] [0 2 3 6 7 8 9]
61 training: Counter({5: 185, 1: 166, 4: 156}) testing iid: Counter({1: 1000, 5: 1000, 4: 1000})
62 [0 2 7] [0 2 7] [1 3 4 5 6 8 9]
62 training: Counter({2: 167, 7: 151, 0: 147}) testing iid: Counter({0: 1000, 7: 1000, 2: 1000})
63 [3 8 9] [3 8 9] [0 1 2 4 5 6 7]
63 training: Counter({3: 179, 9: 166, 8: 161}) testing iid: Counter({3: 1000, 8: 1000, 9: 1000})
64 [4 5 7] [4 5 7] [0 1 2 3 6 8 9]
64 training: Counter({5: 185, 4: 156, 7: 151}) testing iid: Counter({5: 1000, 7: 1000, 4: 1000})
65 [0 5 9] [0 5 9] [1 2 3 4 6 7 8]
65 training: Counter({5: 185, 9: 166, 0: 147}) testing iid: Counter({0: 1000, 9: 1000, 5: 1000})
66 [3 6 9] [3 6 9] [0 1 2 4 5 7 8]
66 training: Counter({6: 200, 3: 178, 9: 166}) testing iid: Counter({3: 1000, 6: 1000, 9: 1000})
67 [1 4 7] [1 4 7] [0 2 3 5 6 8 9]
67 training: Counter({1: 166, 4: 156, 7: 151}) testing iid: Counter({1: 1000, 7: 1000, 4: 1000})
68 [4 6 8] [4 6 8] [0 1 2 3 5 7 9]
68 training: Counter({6: 200, 8: 161, 4: 156}) testing iid: Counter({8: 1000, 6: 1000, 4: 1000})
69 [2 8 9] [2 8 9] [0 1 3 4 5 6 7]
69 training: Counter({2: 166, 9: 166, 8: 161}) testing iid: Counter({8: 1000, 9: 1000, 2: 1000})
70 [0 5 7] [0 5 7] [1 2 3 4 6 8 9]
70 training: Counter({5: 185, 7: 151, 0: 147}) testing iid: Counter({0: 1000, 5: 1000, 7: 1000})
71 [1 4 5] [1 4 5] [0 2 3 6 7 8 9]
71 training: Counter({5: 185, 1: 166, 4: 156}) testing iid: Counter({1: 1000, 5: 1000, 4: 1000})
72 [2 5 8] [2 5 8] [0 1 3 4 6 7 9]
72 training: Counter({5: 185, 2: 166, 8: 161}) testing iid: Counter({8: 1000, 5: 1000, 2: 1000})
73 [3 5 8] [3 5 8] [0 1 2 4 6 7 9]
73 training: Counter({5: 185, 3: 178, 8: 161}) testing iid: Counter({3: 1000, 8: 1000, 5: 1000})
74 [1 4 8] [1 4 8] [0 2 3 5 6 7 9]
74 training: Counter({1: 166, 8: 161, 4: 156}) testing iid: Counter({8: 1000, 1: 1000, 4: 1000})
75 [0 5 7] [0 5 7] [1 2 3 4 6 8 9]
75 training: Counter({5: 185, 7: 151, 0: 147}) testing iid: Counter({0: 1000, 5: 1000, 7: 1000})
76 [3 4 6] [3 4 6] [0 1 2 5 7 8 9]
76 training: Counter({6: 200, 3: 178, 4: 156}) testing iid: Counter({3: 1000, 6: 1000, 4: 1000})
77 [0 2 7] [0 2 7] [1 3 4 5 6 8 9]
77 training: Counter({2: 166, 7: 151, 0: 147}) testing iid: Counter({0: 1000, 7: 1000, 2: 1000})
78 [3 5 8] [3 5 8] [0 1 2 4 6 7 9]
78 training: Counter({5: 185, 3: 178, 8: 161}) testing iid: Counter({3: 1000, 8: 1000, 5: 1000})
79 [1 2 9] [1 2 9] [0 3 4 5 6 7 8]
79 training: Counter({1: 166, 2: 166, 9: 166}) testing iid: Counter({1: 1000, 9: 1000, 2: 1000})
80 [0 3 4] [0 3 4] [1 2 5 6 7 8 9]
80 training: Counter({3: 178, 4: 156, 0: 147}) testing iid: Counter({3: 1000, 0: 1000, 4: 1000})
81 [0 1 6] [0 1 6] [2 3 4 5 7 8 9]
81 training: Counter({6: 200, 1: 166, 0: 147}) testing iid: Counter({0: 1000, 6: 1000, 1: 1000})
82 [0 2 7] [0 2 7] [1 3 4 5 6 8 9]
82 training: Counter({2: 166, 7: 151, 0: 147}) testing iid: Counter({0: 1000, 7: 1000, 2: 1000})
83 [2 3 8] [2 3 8] [0 1 4 5 6 7 9]
83 training: Counter({3: 178, 2: 166, 8: 161}) testing iid: Counter({3: 1000, 8: 1000, 2: 1000})
84 [0 3 4] [0 3 4] [1 2 5 6 7 8 9]
84 training: Counter({3: 178, 4: 156, 0: 147}) testing iid: Counter({3: 1000, 0: 1000, 4: 1000})
85 [4 5 8] [4 5 8] [0 1 2 3 6 7 9]
85 training: Counter({5: 185, 8: 161, 4: 156}) testing iid: Counter({8: 1000, 5: 1000, 4: 1000})
86 [2 6 9] [2 6 9] [0 1 3 4 5 7 8]
86 training: Counter({6: 200, 2: 166, 9: 166}) testing iid: Counter({6: 1000, 9: 1000, 2: 1000})
87 [0 3 7] [0 3 7] [1 2 4 5 6 8 9]
87 training: Counter({3: 178, 7: 151, 0: 147}) testing iid: Counter({3: 1000, 0: 1000, 7: 1000})
88 [1 4 8] [1 4 8] [0 2 3 5 6 7 9]
88 training: Counter({1: 166, 8: 161, 4: 156}) testing iid: Counter({8: 1000, 1: 1000, 4: 1000})
89 [3 6 9] [3 6 9] [0 1 2 4 5 7 8]
89 training: Counter({6: 200, 3: 178, 9: 166}) testing iid: Counter({3: 1000, 6: 1000, 9: 1000})
90 [0 3 7] [0 3 7] [1 2 4 5 6 8 9]
90 training: Counter({3: 178, 7: 151, 0: 147}) testing iid: Counter({3: 1000, 0: 1000, 7: 1000})
91 [1 3 5] [1 3 5] [0 2 4 6 7 8 9]
91 training: Counter({5: 185, 3: 178, 1: 166}) testing iid: Counter({3: 1000, 1: 1000, 5: 1000})
92 [0 2 4] [0 2 4] [1 3 5 6 7 8 9]
92 training: Counter({2: 166, 4: 156, 0: 147}) testing iid: Counter({0: 1000, 4: 1000, 2: 1000})
93 [3 5 8] [3 5 8] [0 1 2 4 6 7 9]
93 training: Counter({5: 185, 3: 178, 8: 161}) testing iid: Counter({3: 1000, 8: 1000, 5: 1000})
94 [4 6 7] [4 6 7] [0 1 2 3 5 8 9]
94 training: Counter({6: 200, 4: 156, 7: 151}) testing iid: Counter({6: 1000, 7: 1000, 4: 1000})
95 [1 5 7] [1 5 7] [0 2 3 4 6 8 9]
95 training: Counter({5: 185, 1: 166, 7: 151}) testing iid: Counter({1: 1000, 5: 1000, 7: 1000})
96 [0 2 6] [0 2 6] [1 3 4 5 7 8 9]
96 training: Counter({6: 200, 2: 166, 0: 147}) testing iid: Counter({0: 1000, 6: 1000, 2: 1000})
97 [2 7 8] [2 7 8] [0 1 3 4 5 6 9]
97 training: Counter({2: 166, 8: 161, 7: 151}) testing iid: Counter({8: 1000, 7: 1000, 2: 1000})
98 [1 4 8] [1 4 8] [0 2 3 5 6 7 9]
98 training: Counter({1: 166, 8: 161, 4: 156}) testing iid: Counter({8: 1000, 1: 1000, 4: 1000})
99 [0 4 9] [0 4 9] [1 2 3 5 6 7 8]
99 training: Counter({9: 166, 4: 156, 0: 147}) testing iid: Counter({0: 1000, 9: 1000, 4: 1000})
Num_samples of Training set per client: [496, 520, 482, 531, 491, 510, 524, 476, 481, 514, 466, 534, 481, 508, 498, 515, 531, 538, 496, 503, 476, 471, 513, 493, 491, 504, 529, 487, 514, 546, 475, 486, 498, 487, 475, 531, 508, 508, 546, 519, 460, 475, 475, 493, 470, 504, 519, 468, 475, 495, 493, 485, 514, 512, 523, 483, 552, 507, 508, 518, 481, 507, 465, 506, 492, 498, 544, 473, 517, 493, 483, 507, 512, 524, 483, 483, 534, 464, 524, 498, 481, 513, 464, 505, 481, 502, 532, 476, 483, 544, 476, 529, 469, 524, 507, 502, 513, 478, 483, 469]
Total_training_samples: 50000
Global test set: 10000
Finish Generating Samples, distribution saved
MobileNetV2(
  (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (layers): Sequential(
    (0): Block(
      (conv1): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): Block(
      (conv1): Conv2d(16, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=96, bias=False)
      (bn2): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(96, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(16, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (2): Block(
      (conv1): Conv2d(24, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=144, bias=False)
      (bn2): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(144, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (3): Block(
      (conv1): Conv2d(24, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(144, 144, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=144, bias=False)
      (bn2): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(144, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (4): Block(
      (conv1): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
      (bn2): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(192, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (5): Block(
      (conv1): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
      (bn2): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(192, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (6): Block(
      (conv1): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(192, 192, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=192, bias=False)
      (bn2): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(192, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (7): Block(
      (conv1): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
      (bn2): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (8): Block(
      (conv1): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
      (bn2): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (9): Block(
      (conv1): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
      (bn2): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (10): Block(
      (conv1): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
      (bn2): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(384, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(64, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (11): Block(
      (conv1): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)
      (bn2): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (12): Block(
      (conv1): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)
      (bn2): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (13): Block(
      (conv1): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(576, 576, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=576, bias=False)
      (bn2): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(576, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (14): Block(
      (conv1): Conv2d(160, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(960, 960, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=960, bias=False)
      (bn2): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(960, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (15): Block(
      (conv1): Conv2d(160, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(960, 960, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=960, bias=False)
      (bn2): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(960, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (16): Block(
      (conv1): Conv2d(160, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(960, 960, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=960, bias=False)
      (bn2): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(960, 320, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(160, 320, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (conv2): Conv2d(320, 1280, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn2): BatchNorm2d(1280, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (linear): Linear(in_features=1280, out_features=10, bias=True)
)
number of parameters: 2296922
clients initializting...
output size: 10
  0%|          | 0/100 [00:00<?, ?it/s]  1%|          | 1/100 [00:00<01:05,  1.51it/s]  2%|▏         | 2/100 [00:01<01:07,  1.45it/s]  3%|▎         | 3/100 [00:02<01:05,  1.47it/s]  4%|▍         | 4/100 [00:02<01:04,  1.48it/s]  5%|▌         | 5/100 [00:03<01:03,  1.49it/s]  6%|▌         | 6/100 [00:04<01:02,  1.50it/s]  7%|▋         | 7/100 [00:04<01:01,  1.51it/s]  8%|▊         | 8/100 [00:05<01:00,  1.52it/s]  9%|▉         | 9/100 [00:06<00:59,  1.52it/s] 10%|█         | 10/100 [00:06<00:58,  1.53it/s] 11%|█         | 11/100 [00:07<00:57,  1.54it/s] 12%|█▏        | 12/100 [00:07<00:57,  1.54it/s] 13%|█▎        | 13/100 [00:08<00:56,  1.53it/s] 14%|█▍        | 14/100 [00:09<00:56,  1.53it/s] 15%|█▌        | 15/100 [00:09<00:55,  1.54it/s] 16%|█▌        | 16/100 [00:10<00:54,  1.53it/s] 17%|█▋        | 17/100 [00:11<00:54,  1.53it/s] 18%|█▊        | 18/100 [00:11<00:54,  1.51it/s] 19%|█▉        | 19/100 [00:12<00:53,  1.51it/s] 20%|██        | 20/100 [00:13<00:52,  1.51it/s] 21%|██        | 21/100 [00:13<00:51,  1.52it/s] 22%|██▏       | 22/100 [00:14<00:51,  1.53it/s] 23%|██▎       | 23/100 [00:15<00:50,  1.52it/s] 24%|██▍       | 24/100 [00:15<00:49,  1.53it/s] 25%|██▌       | 25/100 [00:16<00:48,  1.53it/s] 26%|██▌       | 26/100 [00:17<00:48,  1.53it/s] 27%|██▋       | 27/100 [00:17<00:47,  1.53it/s] 28%|██▊       | 28/100 [00:18<00:48,  1.49it/s] 29%|██▉       | 29/100 [00:19<00:47,  1.49it/s] 30%|███       | 30/100 [00:19<00:46,  1.50it/s] 31%|███       | 31/100 [00:20<00:45,  1.52it/s] 32%|███▏      | 32/100 [00:21<00:44,  1.54it/s] 33%|███▎      | 33/100 [00:21<00:43,  1.54it/s] 34%|███▍      | 34/100 [00:22<00:42,  1.54it/s] 35%|███▌      | 35/100 [00:26<01:55,  1.78s/it] 36%|███▌      | 36/100 [00:27<01:32,  1.44s/it] 37%|███▋      | 37/100 [00:28<01:15,  1.21s/it] 38%|███▊      | 38/100 [00:28<01:04,  1.04s/it] 39%|███▉      | 39/100 [00:29<00:56,  1.09it/s] 40%|████      | 40/100 [00:30<00:49,  1.20it/s] 41%|████      | 41/100 [00:30<00:46,  1.28it/s] 42%|████▏     | 42/100 [00:31<00:42,  1.35it/s] 43%|████▎     | 43/100 [00:31<00:40,  1.40it/s] 44%|████▍     | 44/100 [00:32<00:38,  1.44it/s] 45%|████▌     | 45/100 [00:33<00:37,  1.45it/s] 46%|████▌     | 46/100 [00:33<00:36,  1.48it/s] 47%|████▋     | 47/100 [00:34<00:35,  1.49it/s] 48%|████▊     | 48/100 [00:35<00:34,  1.51it/s] 49%|████▉     | 49/100 [00:35<00:33,  1.52it/s] 50%|█████     | 50/100 [00:36<00:32,  1.54it/s] 51%|█████     | 51/100 [00:37<00:31,  1.54it/s] 52%|█████▏    | 52/100 [00:37<00:31,  1.54it/s] 53%|█████▎    | 53/100 [00:38<00:30,  1.55it/s] 54%|█████▍    | 54/100 [00:39<00:29,  1.55it/s] 55%|█████▌    | 55/100 [00:39<00:29,  1.54it/s] 56%|█████▌    | 56/100 [00:40<00:28,  1.54it/s] 57%|█████▋    | 57/100 [00:41<00:28,  1.53it/s] 58%|█████▊    | 58/100 [00:41<00:27,  1.53it/s] 59%|█████▉    | 59/100 [00:42<00:27,  1.52it/s] 60%|██████    | 60/100 [00:43<00:26,  1.50it/s] 61%|██████    | 61/100 [00:43<00:25,  1.51it/s] 62%|██████▏   | 62/100 [00:44<00:25,  1.51it/s] 63%|██████▎   | 63/100 [00:45<00:24,  1.51it/s] 64%|██████▍   | 64/100 [00:45<00:23,  1.52it/s] 65%|██████▌   | 65/100 [00:46<00:23,  1.51it/s] 66%|██████▌   | 66/100 [00:47<00:22,  1.50it/s] 67%|██████▋   | 67/100 [00:47<00:21,  1.51it/s] 68%|██████▊   | 68/100 [00:48<00:20,  1.53it/s] 69%|██████▉   | 69/100 [00:49<00:20,  1.53it/s] 70%|███████   | 70/100 [00:49<00:19,  1.53it/s] 71%|███████   | 71/100 [00:50<00:18,  1.54it/s] 72%|███████▏  | 72/100 [00:54<00:46,  1.68s/it] 73%|███████▎  | 73/100 [00:55<00:36,  1.36s/it] 74%|███████▍  | 74/100 [00:55<00:29,  1.14s/it] 75%|███████▌  | 75/100 [00:56<00:24,  1.02it/s] 76%|███████▌  | 76/100 [00:56<00:21,  1.14it/s] 77%|███████▋  | 77/100 [00:57<00:18,  1.24it/s] 78%|███████▊  | 78/100 [00:58<00:16,  1.31it/s] 79%|███████▉  | 79/100 [00:58<00:15,  1.37it/s] 80%|████████  | 80/100 [00:59<00:13,  1.43it/s] 81%|████████  | 81/100 [01:00<00:12,  1.47it/s] 82%|████████▏ | 82/100 [01:00<00:11,  1.50it/s] 83%|████████▎ | 83/100 [01:01<00:11,  1.53it/s] 84%|████████▍ | 84/100 [01:02<00:10,  1.54it/s] 85%|████████▌ | 85/100 [01:02<00:09,  1.53it/s] 86%|████████▌ | 86/100 [01:03<00:09,  1.53it/s] 87%|████████▋ | 87/100 [01:03<00:08,  1.54it/s] 88%|████████▊ | 88/100 [01:04<00:07,  1.54it/s] 89%|████████▉ | 89/100 [01:05<00:07,  1.53it/s] 90%|█████████ | 90/100 [01:05<00:06,  1.53it/s] 91%|█████████ | 91/100 [01:06<00:05,  1.52it/s] 92%|█████████▏| 92/100 [01:07<00:05,  1.51it/s] 93%|█████████▎| 93/100 [01:07<00:04,  1.52it/s] 94%|█████████▍| 94/100 [01:08<00:03,  1.52it/s] 95%|█████████▌| 95/100 [01:09<00:03,  1.52it/s] 96%|█████████▌| 96/100 [01:09<00:02,  1.51it/s] 97%|█████████▋| 97/100 [01:10<00:01,  1.51it/s] 98%|█████████▊| 98/100 [01:11<00:01,  1.52it/s] 99%|█████████▉| 99/100 [01:11<00:00,  1.52it/s]100%|██████████| 100/100 [01:12<00:00,  1.52it/s]100%|██████████| 100/100 [01:12<00:00,  1.38it/s]
Number of users per round / total users: 10  /  100
Finished creating FL server.
=== Training starts: algorithm FedFea ===
-------------Round number:  0  -------------
selected users: [26, 86, 2, 55, 75, 93, 16, 73, 54, 95]
random features: torch.Size([105, 3, 32, 32]) torch.Size([105])
random features: torch.Size([106, 3, 32, 32]) torch.Size([106])
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([104, 3, 32, 32]) torch.Size([104])
random features: torch.Size([106, 3, 32, 32]) torch.Size([106])
random features: torch.Size([104, 3, 32, 32]) torch.Size([104])
random features: torch.Size([104, 3, 32, 32]) torch.Size([104])
random features: torch.Size([100, 3, 32, 32]) torch.Size([100])
all data: 1017
Local adapation with distilling: 0.001
training loss: tensor(2.9621) feature loss: tensor(0.4364)
Local adapation with distilling: 0.001
training loss: tensor(2.9976) feature loss: tensor(0.4380)
Local adapation with distilling: 0.001
training loss: tensor(3.0822) feature loss: tensor(0.4213)
Local adapation with distilling: 0.001
training loss: tensor(3.0302) feature loss: tensor(0.4203)
Local adapation with distilling: 0.001
training loss: tensor(2.9630) feature loss: tensor(0.4359)
Local adapation with distilling: 0.001
training loss: tensor(2.9946) feature loss: tensor(0.4406)
Local adapation with distilling: 0.001
training loss: tensor(2.9508) feature loss: tensor(0.4426)
Local adapation with distilling: 0.001
training loss: tensor(2.9688) feature loss: tensor(0.4374)
Local adapation with distilling: 0.001
training loss: tensor(3.2156) feature loss: tensor(0.3909)
Local adapation with distilling: 0.001
training loss: tensor(2.9875) feature loss: tensor(0.4383)
Global Model Acc on global data: 0.1098 length of data: 10000
save a model
-------------Round number:  1  -------------
selected users: [80, 84, 33, 81, 93, 17, 36, 82, 69, 65]
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([97, 3, 32, 32]) torch.Size([97])
random features: torch.Size([102, 3, 32, 32]) torch.Size([102])
random features: torch.Size([104, 3, 32, 32]) torch.Size([104])
random features: torch.Size([107, 3, 32, 32]) torch.Size([107])
random features: torch.Size([101, 3, 32, 32]) torch.Size([101])
random features: torch.Size([92, 3, 32, 32]) torch.Size([92])
random features: torch.Size([98, 3, 32, 32]) torch.Size([98])
random features: torch.Size([99, 3, 32, 32]) torch.Size([99])
all data: 992
Local adapation with distilling: 0.000982
training loss: tensor(2.6356) feature loss: tensor(0.5843)
Local adapation with distilling: 0.000982
training loss: tensor(2.5612) feature loss: tensor(0.5784)
Local adapation with distilling: 0.000982
training loss: tensor(2.4532) feature loss: tensor(0.6174)
Local adapation with distilling: 0.000982
training loss: tensor(2.6886) feature loss: tensor(0.5764)
Local adapation with distilling: 0.000982
training loss: tensor(2.4634) feature loss: tensor(0.5132)
Local adapation with distilling: 0.000982
training loss: tensor(2.4824) feature loss: tensor(0.4429)
Local adapation with distilling: 0.000982
training loss: tensor(2.4225) feature loss: tensor(0.5637)
Local adapation with distilling: 0.000982
training loss: tensor(2.6855) feature loss: tensor(0.5984)
Local adapation with distilling: 0.000982
training loss: tensor(2.6164) feature loss: tensor(0.5892)
Local adapation with distilling: 0.000982
training loss: tensor(2.4653) feature loss: tensor(0.5559)
Global Model Acc on global data: 0.2018 length of data: 10000
save a model
-------------Round number:  2  -------------
selected users: [83, 30, 56, 24, 16, 23, 2, 27, 28, 13]
random features: torch.Size([101, 3, 32, 32]) torch.Size([101])
random features: torch.Size([95, 3, 32, 32]) torch.Size([95])
random features: torch.Size([110, 3, 32, 32]) torch.Size([110])
random features: torch.Size([98, 3, 32, 32]) torch.Size([98])
random features: torch.Size([106, 3, 32, 32]) torch.Size([106])
random features: torch.Size([98, 3, 32, 32]) torch.Size([98])
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([97, 3, 32, 32]) torch.Size([97])
random features: torch.Size([102, 3, 32, 32]) torch.Size([102])
random features: torch.Size([101, 3, 32, 32]) torch.Size([101])
all data: 1004
Local adapation with distilling: 0.000964
training loss: tensor(2.0499) feature loss: tensor(0.5799)
Local adapation with distilling: 0.000964
training loss: tensor(2.1737) feature loss: tensor(0.6161)
Local adapation with distilling: 0.000964
training loss: tensor(2.0344) feature loss: tensor(0.5155)
Local adapation with distilling: 0.000964
training loss: tensor(2.1798) feature loss: tensor(0.5640)
Local adapation with distilling: 0.000964
training loss: tensor(2.0695) feature loss: tensor(0.4758)
Local adapation with distilling: 0.000964
training loss: tensor(2.0898) feature loss: tensor(0.5801)
Local adapation with distilling: 0.000964
training loss: tensor(2.1348) feature loss: tensor(0.5969)
Local adapation with distilling: 0.000964
training loss: tensor(2.1502) feature loss: tensor(0.5096)
Local adapation with distilling: 0.000964
training loss: tensor(2.2517) feature loss: tensor(0.5718)
Local adapation with distilling: 0.000964
training loss: tensor(2.1124) feature loss: tensor(0.6207)
Global Model Acc on global data: 0.2552 length of data: 10000
save a model
-------------Round number:  3  -------------
selected users: [93, 67, 6, 64, 96, 83, 98, 42, 25, 15]
random features: torch.Size([104, 3, 32, 32]) torch.Size([104])
random features: torch.Size([94, 3, 32, 32]) torch.Size([94])
random features: torch.Size([104, 3, 32, 32]) torch.Size([104])
random features: torch.Size([98, 3, 32, 32]) torch.Size([98])
random features: torch.Size([102, 3, 32, 32]) torch.Size([102])
random features: torch.Size([101, 3, 32, 32]) torch.Size([101])
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([95, 3, 32, 32]) torch.Size([95])
random features: torch.Size([100, 3, 32, 32]) torch.Size([100])
random features: torch.Size([103, 3, 32, 32]) torch.Size([103])
all data: 997
Local adapation with distilling: 0.000946
training loss: tensor(1.8431) feature loss: tensor(0.5754)
Local adapation with distilling: 0.000946
training loss: tensor(1.8983) feature loss: tensor(0.6018)
Local adapation with distilling: 0.000946
training loss: tensor(1.8679) feature loss: tensor(0.4717)
Local adapation with distilling: 0.000946
training loss: tensor(1.8295) feature loss: tensor(0.5574)
Local adapation with distilling: 0.000946
training loss: tensor(2.0049) feature loss: tensor(0.5423)
Local adapation with distilling: 0.000946
training loss: tensor(1.8053) feature loss: tensor(0.5206)
Local adapation with distilling: 0.000946
training loss: tensor(1.8446) feature loss: tensor(0.5761)
Local adapation with distilling: 0.000946
training loss: tensor(1.8640) feature loss: tensor(0.5115)
Local adapation with distilling: 0.000946
training loss: tensor(1.8437) feature loss: tensor(0.5859)
Local adapation with distilling: 0.000946
training loss: tensor(1.9731) feature loss: tensor(0.5990)
Global Model Acc on global data: 0.2297 length of data: 10000
-------------Round number:  4  -------------
selected users: [20, 10, 96, 16, 63, 24, 53, 97, 41, 47]
random features: torch.Size([95, 3, 32, 32]) torch.Size([95])
random features: torch.Size([93, 3, 32, 32]) torch.Size([93])
random features: torch.Size([102, 3, 32, 32]) torch.Size([102])
random features: torch.Size([106, 3, 32, 32]) torch.Size([106])
random features: torch.Size([101, 3, 32, 32]) torch.Size([101])
random features: torch.Size([98, 3, 32, 32]) torch.Size([98])
random features: torch.Size([115, 3, 32, 32]) torch.Size([115])
random features: torch.Size([95, 3, 32, 32]) torch.Size([95])
random features: torch.Size([95, 3, 32, 32]) torch.Size([95])
random features: torch.Size([93, 3, 32, 32]) torch.Size([93])
all data: 993
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.8145) feature loss: tensor(0.6568)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.8122) feature loss: tensor(0.7007)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.8969) feature loss: tensor(0.6460)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.5408) feature loss: tensor(0.5342)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.6485) feature loss: tensor(0.6662)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.5498) feature loss: tensor(0.5400)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.5118) feature loss: tensor(0.6094)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.6211) feature loss: tensor(0.6385)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.6483) feature loss: tensor(0.5767)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.6475) feature loss: tensor(0.5654)
Global Model Acc on global data: 0.3099 length of data: 10000
save a model
-------------Round number:  5  -------------
selected users: [66, 32, 46, 28, 74, 23, 10, 20, 17, 35]
random features: torch.Size([108, 3, 32, 32]) torch.Size([108])
random features: torch.Size([99, 3, 32, 32]) torch.Size([99])
random features: torch.Size([103, 3, 32, 32]) torch.Size([103])
random features: torch.Size([102, 3, 32, 32]) torch.Size([102])
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([98, 3, 32, 32]) torch.Size([98])
random features: torch.Size([93, 3, 32, 32]) torch.Size([93])
random features: torch.Size([95, 3, 32, 32]) torch.Size([95])
random features: torch.Size([107, 3, 32, 32]) torch.Size([107])
random features: torch.Size([106, 3, 32, 32]) torch.Size([106])
all data: 1007
Local adapation with distilling: 0.00091
training loss: tensor(1.4681) feature loss: tensor(0.5924)
Local adapation with distilling: 0.00091
training loss: tensor(1.4547) feature loss: tensor(0.5421)
Local adapation with distilling: 0.00091
training loss: tensor(1.5006) feature loss: tensor(0.5759)
Local adapation with distilling: 0.00091
training loss: tensor(1.6451) feature loss: tensor(0.6425)
Local adapation with distilling: 0.00091
training loss: tensor(1.4975) feature loss: tensor(0.5536)
Local adapation with distilling: 0.00091
training loss: tensor(1.5562) feature loss: tensor(0.6351)
Local adapation with distilling: 0.00091
training loss: tensor(1.5159) feature loss: tensor(0.6211)
Local adapation with distilling: 0.00091
training loss: tensor(1.5023) feature loss: tensor(0.5949)
Local adapation with distilling: 0.00091
training loss: tensor(1.4037) feature loss: tensor(0.5615)
Local adapation with distilling: 0.00091
training loss: tensor(1.4766) feature loss: tensor(0.6400)
Global Model Acc on global data: 0.402 length of data: 10000
save a model
-------------Round number:  6  -------------
selected users: [17, 34, 0, 45, 60, 86, 20, 47, 44, 81]
random features: torch.Size([107, 3, 32, 32]) torch.Size([107])
random features: torch.Size([95, 3, 32, 32]) torch.Size([95])
random features: torch.Size([99, 3, 32, 32]) torch.Size([99])
random features: torch.Size([100, 3, 32, 32]) torch.Size([100])
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([106, 3, 32, 32]) torch.Size([106])
random features: torch.Size([95, 3, 32, 32]) torch.Size([95])
random features: torch.Size([93, 3, 32, 32]) torch.Size([93])
random features: torch.Size([94, 3, 32, 32]) torch.Size([94])
random features: torch.Size([102, 3, 32, 32]) torch.Size([102])
all data: 987
Local adapation with distilling: 0.000892
training loss: tensor(1.1975) feature loss: tensor(0.4957)
Local adapation with distilling: 0.000892
training loss: tensor(1.3234) feature loss: tensor(0.5460)
Local adapation with distilling: 0.000892
training loss: tensor(1.3463) feature loss: tensor(0.5969)
Local adapation with distilling: 0.000892
training loss: tensor(1.3024) feature loss: tensor(0.5530)
Local adapation with distilling: 0.000892
training loss: tensor(1.3749) feature loss: tensor(0.6373)
Local adapation with distilling: 0.000892
training loss: tensor(1.3358) feature loss: tensor(0.5156)
Local adapation with distilling: 0.000892
training loss: tensor(1.3086) feature loss: tensor(0.5737)
Local adapation with distilling: 0.000892
training loss: tensor(1.3046) feature loss: tensor(0.5416)
Local adapation with distilling: 0.000892
training loss: tensor(1.4140) feature loss: tensor(0.5929)
Local adapation with distilling: 0.000892
training loss: tensor(1.5932) feature loss: tensor(0.6286)
Global Model Acc on global data: 0.4268 length of data: 10000
save a model
-------------Round number:  7  -------------
selected users: [37, 26, 78, 91, 49, 15, 93, 71, 86, 22]
random features: torch.Size([101, 3, 32, 32]) torch.Size([101])
random features: torch.Size([105, 3, 32, 32]) torch.Size([105])
random features: torch.Size([104, 3, 32, 32]) torch.Size([104])
random features: torch.Size([105, 3, 32, 32]) torch.Size([105])
random features: torch.Size([99, 3, 32, 32]) torch.Size([99])
random features: torch.Size([103, 3, 32, 32]) torch.Size([103])
random features: torch.Size([104, 3, 32, 32]) torch.Size([104])
random features: torch.Size([101, 3, 32, 32]) torch.Size([101])
random features: torch.Size([106, 3, 32, 32]) torch.Size([106])
random features: torch.Size([102, 3, 32, 32]) torch.Size([102])
all data: 1030
Local adapation with distilling: 0.000874
training loss: tensor(1.2228) feature loss: tensor(0.4274)
Local adapation with distilling: 0.000874
training loss: tensor(1.2349) feature loss: tensor(0.5398)
Local adapation with distilling: 0.000874
training loss: tensor(1.2578) feature loss: tensor(0.5758)
Local adapation with distilling: 0.000874
training loss: tensor(1.2621) feature loss: tensor(0.5290)
Local adapation with distilling: 0.000874
training loss: tensor(1.2786) feature loss: tensor(0.5752)
Local adapation with distilling: 0.000874
training loss: tensor(1.2985) feature loss: tensor(0.5834)
Local adapation with distilling: 0.000874
training loss: tensor(1.2563) feature loss: tensor(0.5844)
Local adapation with distilling: 0.000874
training loss: tensor(1.2110) feature loss: tensor(0.4721)
Local adapation with distilling: 0.000874
training loss: tensor(1.1898) feature loss: tensor(0.4917)
Local adapation with distilling: 0.000874
training loss: tensor(1.3483) feature loss: tensor(0.5615)
Global Model Acc on global data: 0.4207 length of data: 10000
-------------Round number:  8  -------------
selected users: [17, 23, 1, 44, 55, 99, 86, 29, 62, 33]
random features: torch.Size([107, 3, 32, 32]) torch.Size([107])
random features: torch.Size([98, 3, 32, 32]) torch.Size([98])
random features: torch.Size([104, 3, 32, 32]) torch.Size([104])
random features: torch.Size([94, 3, 32, 32]) torch.Size([94])
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([93, 3, 32, 32]) torch.Size([93])
random features: torch.Size([106, 3, 32, 32]) torch.Size([106])
random features: torch.Size([109, 3, 32, 32]) torch.Size([109])
random features: torch.Size([93, 3, 32, 32]) torch.Size([93])
random features: torch.Size([97, 3, 32, 32]) torch.Size([97])
all data: 997
Local adapation with distilling: 0.000856
training loss: tensor(1.0524) feature loss: tensor(0.4479)
Local adapation with distilling: 0.000856
training loss: tensor(1.1963) feature loss: tensor(0.6197)
Local adapation with distilling: 0.000856
training loss: tensor(1.1731) feature loss: tensor(0.5024)
Local adapation with distilling: 0.000856
training loss: tensor(1.2332) feature loss: tensor(0.5690)
Local adapation with distilling: 0.000856
training loss: tensor(1.2149) feature loss: tensor(0.6303)
Local adapation with distilling: 0.000856
training loss: tensor(1.2346) feature loss: tensor(0.5517)
Local adapation with distilling: 0.000856
training loss: tensor(1.0016) feature loss: tensor(0.4430)
Local adapation with distilling: 0.000856
training loss: tensor(1.1079) feature loss: tensor(0.4815)
Local adapation with distilling: 0.000856
training loss: tensor(1.2609) feature loss: tensor(0.6251)
Local adapation with distilling: 0.000856
training loss: tensor(1.2124) feature loss: tensor(0.5392)
Global Model Acc on global data: 0.4651 length of data: 10000
save a model
-------------Round number:  9  -------------
selected users: [75, 42, 46, 68, 3, 39, 23, 20, 70, 73]
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([95, 3, 32, 32]) torch.Size([95])
random features: torch.Size([103, 3, 32, 32]) torch.Size([103])
random features: torch.Size([103, 3, 32, 32]) torch.Size([103])
random features: torch.Size([106, 3, 32, 32]) torch.Size([106])
random features: torch.Size([103, 3, 32, 32]) torch.Size([103])
random features: torch.Size([98, 3, 32, 32]) torch.Size([98])
random features: torch.Size([95, 3, 32, 32]) torch.Size([95])
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([104, 3, 32, 32]) torch.Size([104])
all data: 999
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(1.0255) feature loss: tensor(0.4789)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(1.0831) feature loss: tensor(0.4121)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.9315) feature loss: tensor(0.3765)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(1.1329) feature loss: tensor(0.4447)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(1.0074) feature loss: tensor(0.4020)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(1.0207) feature loss: tensor(0.4126)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.9994) feature loss: tensor(0.4674)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(1.0609) feature loss: tensor(0.4557)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(1.0374) feature loss: tensor(0.4995)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(1.0771) feature loss: tensor(0.5003)
Global Model Acc on global data: 0.4786 length of data: 10000
save a model
-------------Round number:  10  -------------
selected users: [19, 14, 43, 37, 66, 3, 79, 41, 38, 68]
random features: torch.Size([100, 3, 32, 32]) torch.Size([100])
random features: torch.Size([99, 3, 32, 32]) torch.Size([99])
random features: torch.Size([98, 3, 32, 32]) torch.Size([98])
random features: torch.Size([101, 3, 32, 32]) torch.Size([101])
random features: torch.Size([108, 3, 32, 32]) torch.Size([108])
random features: torch.Size([106, 3, 32, 32]) torch.Size([106])
random features: torch.Size([99, 3, 32, 32]) torch.Size([99])
random features: torch.Size([95, 3, 32, 32]) torch.Size([95])
random features: torch.Size([109, 3, 32, 32]) torch.Size([109])
random features: torch.Size([103, 3, 32, 32]) torch.Size([103])
all data: 1018
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.9764) feature loss: tensor(0.4523)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(1.0085) feature loss: tensor(0.4885)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(1.0207) feature loss: tensor(0.4674)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.9510) feature loss: tensor(0.3831)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.9746) feature loss: tensor(0.4706)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.8788) feature loss: tensor(0.3776)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(1.0862) feature loss: tensor(0.4620)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(1.0212) feature loss: tensor(0.4318)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.9907) feature loss: tensor(0.4354)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(1.0015) feature loss: tensor(0.4561)
Global Model Acc on global data: 0.4703 length of data: 10000
-------------Round number:  11  -------------
selected users: [46, 49, 22, 58, 41, 98, 62, 29, 30, 51]
random features: torch.Size([103, 3, 32, 32]) torch.Size([103])
random features: torch.Size([99, 3, 32, 32]) torch.Size([99])
random features: torch.Size([102, 3, 32, 32]) torch.Size([102])
random features: torch.Size([101, 3, 32, 32]) torch.Size([101])
random features: torch.Size([95, 3, 32, 32]) torch.Size([95])
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([93, 3, 32, 32]) torch.Size([93])
random features: torch.Size([109, 3, 32, 32]) torch.Size([109])
random features: torch.Size([95, 3, 32, 32]) torch.Size([95])
random features: torch.Size([97, 3, 32, 32]) torch.Size([97])
all data: 990
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.8679) feature loss: tensor(0.3876)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.9527) feature loss: tensor(0.4792)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(1.1564) feature loss: tensor(0.4432)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.9365) feature loss: tensor(0.4573)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.8816) feature loss: tensor(0.4338)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.9936) feature loss: tensor(0.4703)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(1.0027) feature loss: tensor(0.5129)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.9099) feature loss: tensor(0.4407)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(1.0505) feature loss: tensor(0.5018)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.9673) feature loss: tensor(0.4760)
Global Model Acc on global data: 0.4868 length of data: 10000
save a model
-------------Round number:  12  -------------
selected users: [17, 41, 92, 14, 68, 31, 89, 15, 21, 60]
random features: torch.Size([107, 3, 32, 32]) torch.Size([107])
random features: torch.Size([95, 3, 32, 32]) torch.Size([95])
random features: torch.Size([93, 3, 32, 32]) torch.Size([93])
random features: torch.Size([99, 3, 32, 32]) torch.Size([99])
random features: torch.Size([103, 3, 32, 32]) torch.Size([103])
random features: torch.Size([97, 3, 32, 32]) torch.Size([97])
random features: torch.Size([108, 3, 32, 32]) torch.Size([108])
random features: torch.Size([103, 3, 32, 32]) torch.Size([103])
random features: torch.Size([94, 3, 32, 32]) torch.Size([94])
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
all data: 995
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.8049) feature loss: tensor(0.3683)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.7890) feature loss: tensor(0.3801)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(1.0072) feature loss: tensor(0.4473)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.8922) feature loss: tensor(0.4195)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.8702) feature loss: tensor(0.4001)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.9787) feature loss: tensor(0.4256)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.8594) feature loss: tensor(0.3707)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.9804) feature loss: tensor(0.4482)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.9262) feature loss: tensor(0.4689)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.9561) feature loss: tensor(0.4653)
Global Model Acc on global data: 0.5058 length of data: 10000
save a model
-------------Round number:  13  -------------
selected users: [37, 62, 83, 14, 43, 9, 44, 31, 69, 57]
random features: torch.Size([101, 3, 32, 32]) torch.Size([101])
random features: torch.Size([93, 3, 32, 32]) torch.Size([93])
random features: torch.Size([101, 3, 32, 32]) torch.Size([101])
random features: torch.Size([99, 3, 32, 32]) torch.Size([99])
random features: torch.Size([98, 3, 32, 32]) torch.Size([98])
random features: torch.Size([102, 3, 32, 32]) torch.Size([102])
random features: torch.Size([94, 3, 32, 32]) torch.Size([94])
random features: torch.Size([97, 3, 32, 32]) torch.Size([97])
random features: torch.Size([98, 3, 32, 32]) torch.Size([98])
random features: torch.Size([101, 3, 32, 32]) torch.Size([101])
all data: 984
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.7412) feature loss: tensor(0.3301)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.8334) feature loss: tensor(0.4079)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.8568) feature loss: tensor(0.4201)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.7567) feature loss: tensor(0.3682)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.7862) feature loss: tensor(0.4163)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(1.0868) feature loss: tensor(0.4019)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.8581) feature loss: tensor(0.3949)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.8338) feature loss: tensor(0.3768)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.8364) feature loss: tensor(0.4097)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.7857) feature loss: tensor(0.3255)
Global Model Acc on global data: 0.4954 length of data: 10000
-------------Round number:  14  -------------
selected users: [24, 39, 35, 44, 55, 70, 82, 40, 91, 65]
random features: torch.Size([98, 3, 32, 32]) torch.Size([98])
random features: torch.Size([103, 3, 32, 32]) torch.Size([103])
random features: torch.Size([106, 3, 32, 32]) torch.Size([106])
random features: torch.Size([94, 3, 32, 32]) torch.Size([94])
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([92, 3, 32, 32]) torch.Size([92])
random features: torch.Size([92, 3, 32, 32]) torch.Size([92])
random features: torch.Size([105, 3, 32, 32]) torch.Size([105])
random features: torch.Size([99, 3, 32, 32]) torch.Size([99])
all data: 981
Local adapation with distilling: 0.000748
training loss: tensor(0.9946) feature loss: tensor(0.5043)
Local adapation with distilling: 0.000748
training loss: tensor(0.9903) feature loss: tensor(0.5347)
Local adapation with distilling: 0.000748
training loss: tensor(1.0240) feature loss: tensor(0.5559)
Local adapation with distilling: 0.000748
training loss: tensor(0.9837) feature loss: tensor(0.5643)
Local adapation with distilling: 0.000748
training loss: tensor(1.0223) feature loss: tensor(0.6257)
Local adapation with distilling: 0.000748
training loss: tensor(1.0090) feature loss: tensor(0.6164)
Local adapation with distilling: 0.000748
training loss: tensor(1.0452) feature loss: tensor(0.5752)
Local adapation with distilling: 0.000748
training loss: tensor(1.0835) feature loss: tensor(0.5317)
Local adapation with distilling: 0.000748
training loss: tensor(1.0450) feature loss: tensor(0.5206)
Local adapation with distilling: 0.000748
training loss: tensor(0.9919) feature loss: tensor(0.5795)
Global Model Acc on global data: 0.5228 length of data: 10000
save a model
-------------Round number:  15  -------------
selected users: [84, 36, 57, 51, 46, 78, 93, 14, 11, 59]
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([101, 3, 32, 32]) torch.Size([101])
random features: torch.Size([101, 3, 32, 32]) torch.Size([101])
random features: torch.Size([97, 3, 32, 32]) torch.Size([97])
random features: torch.Size([103, 3, 32, 32]) torch.Size([103])
random features: torch.Size([104, 3, 32, 32]) torch.Size([104])
random features: torch.Size([104, 3, 32, 32]) torch.Size([104])
random features: torch.Size([99, 3, 32, 32]) torch.Size([99])
random features: torch.Size([106, 3, 32, 32]) torch.Size([106])
random features: torch.Size([103, 3, 32, 32]) torch.Size([103])
all data: 1014
Local adapation with distilling: 0.00073
training loss: tensor(0.8834) feature loss: tensor(0.3888)
Local adapation with distilling: 0.00073
training loss: tensor(0.8316) feature loss: tensor(0.4220)
Local adapation with distilling: 0.00073
training loss: tensor(0.7659) feature loss: tensor(0.3472)
Local adapation with distilling: 0.00073
training loss: tensor(0.8345) feature loss: tensor(0.3760)
Local adapation with distilling: 0.00073
training loss: tensor(0.7472) feature loss: tensor(0.3787)
Local adapation with distilling: 0.00073
training loss: tensor(0.8622) feature loss: tensor(0.4325)
Local adapation with distilling: 0.00073
training loss: tensor(0.8767) feature loss: tensor(0.4419)
Local adapation with distilling: 0.00073
training loss: tensor(0.7947) feature loss: tensor(0.4050)
Local adapation with distilling: 0.00073
training loss: tensor(0.8465) feature loss: tensor(0.4002)
Local adapation with distilling: 0.00073
training loss: tensor(0.9028) feature loss: tensor(0.3895)
Global Model Acc on global data: 0.5625 length of data: 10000
save a model
-------------Round number:  16  -------------
selected users: [7, 25, 71, 42, 47, 29, 63, 88, 50, 9]
random features: torch.Size([95, 3, 32, 32]) torch.Size([95])
random features: torch.Size([100, 3, 32, 32]) torch.Size([100])
random features: torch.Size([101, 3, 32, 32]) torch.Size([101])
random features: torch.Size([95, 3, 32, 32]) torch.Size([95])
random features: torch.Size([93, 3, 32, 32]) torch.Size([93])
random features: torch.Size([109, 3, 32, 32]) torch.Size([109])
random features: torch.Size([101, 3, 32, 32]) torch.Size([101])
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([98, 3, 32, 32]) torch.Size([98])
random features: torch.Size([102, 3, 32, 32]) torch.Size([102])
all data: 990
Local adapation with distilling: 0.000712
training loss: tensor(0.8462) feature loss: tensor(0.3604)
Local adapation with distilling: 0.000712
training loss: tensor(0.8461) feature loss: tensor(0.3571)
Local adapation with distilling: 0.000712
training loss: tensor(0.7829) feature loss: tensor(0.3306)
Local adapation with distilling: 0.000712
training loss: tensor(0.8574) feature loss: tensor(0.3400)
Local adapation with distilling: 0.000712
training loss: tensor(0.8100) feature loss: tensor(0.4006)
Local adapation with distilling: 0.000712
training loss: tensor(0.7292) feature loss: tensor(0.3310)
Local adapation with distilling: 0.000712
training loss: tensor(0.8004) feature loss: tensor(0.3975)
Local adapation with distilling: 0.000712
training loss: tensor(0.8214) feature loss: tensor(0.3961)
Local adapation with distilling: 0.000712
training loss: tensor(0.8726) feature loss: tensor(0.3914)
Local adapation with distilling: 0.000712
training loss: tensor(0.9776) feature loss: tensor(0.4150)
Global Model Acc on global data: 0.5611 length of data: 10000
-------------Round number:  17  -------------
selected users: [71, 28, 9, 4, 73, 34, 94, 92, 47, 37]
random features: torch.Size([101, 3, 32, 32]) torch.Size([101])
random features: torch.Size([102, 3, 32, 32]) torch.Size([102])
random features: torch.Size([102, 3, 32, 32]) torch.Size([102])
random features: torch.Size([98, 3, 32, 32]) torch.Size([98])
random features: torch.Size([104, 3, 32, 32]) torch.Size([104])
random features: torch.Size([95, 3, 32, 32]) torch.Size([95])
random features: torch.Size([101, 3, 32, 32]) torch.Size([101])
random features: torch.Size([93, 3, 32, 32]) torch.Size([93])
random features: torch.Size([93, 3, 32, 32]) torch.Size([93])
random features: torch.Size([101, 3, 32, 32]) torch.Size([101])
all data: 990
Local adapation with distilling: 0.000694
training loss: tensor(0.6777) feature loss: tensor(0.3427)
Local adapation with distilling: 0.000694
training loss: tensor(0.8420) feature loss: tensor(0.3702)
Local adapation with distilling: 0.000694
training loss: tensor(0.9611) feature loss: tensor(0.3981)
Local adapation with distilling: 0.000694
training loss: tensor(0.7431) feature loss: tensor(0.3519)
Local adapation with distilling: 0.000694
training loss: tensor(0.7965) feature loss: tensor(0.3724)
Local adapation with distilling: 0.000694
training loss: tensor(0.7195) feature loss: tensor(0.3330)
Local adapation with distilling: 0.000694
training loss: tensor(0.7354) feature loss: tensor(0.3138)
Local adapation with distilling: 0.000694
training loss: tensor(0.7904) feature loss: tensor(0.3832)
Local adapation with distilling: 0.000694
training loss: tensor(0.6527) feature loss: tensor(0.3386)
Local adapation with distilling: 0.000694
training loss: tensor(0.6850) feature loss: tensor(0.2960)
Global Model Acc on global data: 0.5556 length of data: 10000
-------------Round number:  18  -------------
selected users: [53, 47, 43, 54, 33, 48, 0, 12, 44, 91]
random features: torch.Size([115, 3, 32, 32]) torch.Size([115])
random features: torch.Size([93, 3, 32, 32]) torch.Size([93])
random features: torch.Size([98, 3, 32, 32]) torch.Size([98])
random features: torch.Size([104, 3, 32, 32]) torch.Size([104])
random features: torch.Size([97, 3, 32, 32]) torch.Size([97])
random features: torch.Size([95, 3, 32, 32]) torch.Size([95])
random features: torch.Size([99, 3, 32, 32]) torch.Size([99])
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([94, 3, 32, 32]) torch.Size([94])
random features: torch.Size([105, 3, 32, 32]) torch.Size([105])
all data: 996
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.7207) feature loss: tensor(0.3691)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.7452) feature loss: tensor(0.3652)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.7531) feature loss: tensor(0.3933)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.8638) feature loss: tensor(0.3521)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.8042) feature loss: tensor(0.4340)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.8713) feature loss: tensor(0.4105)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.7960) feature loss: tensor(0.4164)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.8235) feature loss: tensor(0.4084)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.7569) feature loss: tensor(0.3880)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.7718) feature loss: tensor(0.3929)
Global Model Acc on global data: 0.5726 length of data: 10000
save a model
-------------Round number:  19  -------------
selected users: [85, 72, 16, 18, 2, 38, 90, 30, 83, 61]
random features: torch.Size([100, 3, 32, 32]) torch.Size([100])
random features: torch.Size([115, 3, 32, 32]) torch.Size([115])
random features: torch.Size([106, 3, 32, 32]) torch.Size([106])
random features: torch.Size([99, 3, 32, 32]) torch.Size([99])
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([109, 3, 32, 32]) torch.Size([109])
random features: torch.Size([95, 3, 32, 32]) torch.Size([95])
random features: torch.Size([95, 3, 32, 32]) torch.Size([95])
random features: torch.Size([101, 3, 32, 32]) torch.Size([101])
random features: torch.Size([101, 3, 32, 32]) torch.Size([101])
all data: 1017
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.8024) feature loss: tensor(0.3753)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.7788) feature loss: tensor(0.4111)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.8115) feature loss: tensor(0.3211)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.8916) feature loss: tensor(0.3873)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.7854) feature loss: tensor(0.3590)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.7774) feature loss: tensor(0.3922)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.8371) feature loss: tensor(0.3500)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.8036) feature loss: tensor(0.3750)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.8000) feature loss: tensor(0.3863)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.7605) feature loss: tensor(0.3311)
Global Model Acc on global data: 0.5778 length of data: 10000
save a model
-------------Round number:  20  -------------
selected users: [70, 74, 2, 44, 56, 48, 12, 36, 0, 49]
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([94, 3, 32, 32]) torch.Size([94])
random features: torch.Size([110, 3, 32, 32]) torch.Size([110])
random features: torch.Size([95, 3, 32, 32]) torch.Size([95])
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([101, 3, 32, 32]) torch.Size([101])
random features: torch.Size([99, 3, 32, 32]) torch.Size([99])
random features: torch.Size([99, 3, 32, 32]) torch.Size([99])
all data: 982
Local adapation with distilling: 0.00064
training loss: tensor(0.6632) feature loss: tensor(0.3710)
Local adapation with distilling: 0.00064
training loss: tensor(0.6460) feature loss: tensor(0.3359)
Local adapation with distilling: 0.00064
training loss: tensor(0.6073) feature loss: tensor(0.3312)
Local adapation with distilling: 0.00064
training loss: tensor(0.6087) feature loss: tensor(0.3133)
Local adapation with distilling: 0.00064
training loss: tensor(0.6119) feature loss: tensor(0.3274)
Local adapation with distilling: 0.00064
training loss: tensor(0.6465) feature loss: tensor(0.3468)
Local adapation with distilling: 0.00064
training loss: tensor(0.6167) feature loss: tensor(0.3026)
Local adapation with distilling: 0.00064
training loss: tensor(0.6168) feature loss: tensor(0.3347)
Local adapation with distilling: 0.00064
training loss: tensor(0.6081) feature loss: tensor(0.3284)
Local adapation with distilling: 0.00064
training loss: tensor(0.6716) feature loss: tensor(0.3477)
Global Model Acc on global data: 0.5694 length of data: 10000
-------------Round number:  21  -------------
selected users: [23, 81, 85, 34, 62, 46, 42, 31, 93, 11]
random features: torch.Size([98, 3, 32, 32]) torch.Size([98])
random features: torch.Size([102, 3, 32, 32]) torch.Size([102])
random features: torch.Size([100, 3, 32, 32]) torch.Size([100])
random features: torch.Size([95, 3, 32, 32]) torch.Size([95])
random features: torch.Size([93, 3, 32, 32]) torch.Size([93])
random features: torch.Size([103, 3, 32, 32]) torch.Size([103])
random features: torch.Size([95, 3, 32, 32]) torch.Size([95])
random features: torch.Size([97, 3, 32, 32]) torch.Size([97])
random features: torch.Size([104, 3, 32, 32]) torch.Size([104])
random features: torch.Size([106, 3, 32, 32]) torch.Size([106])
all data: 993
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.8041) feature loss: tensor(0.3931)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(1.0016) feature loss: tensor(0.3755)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.7192) feature loss: tensor(0.3428)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.7227) feature loss: tensor(0.3378)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.7462) feature loss: tensor(0.4039)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.7392) feature loss: tensor(0.3811)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.7590) feature loss: tensor(0.3421)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.8021) feature loss: tensor(0.3785)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.7626) feature loss: tensor(0.3774)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.7388) feature loss: tensor(0.3405)
Global Model Acc on global data: 0.6046 length of data: 10000
save a model
-------------Round number:  22  -------------
selected users: [2, 49, 82, 31, 37, 12, 87, 42, 99, 85]
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([99, 3, 32, 32]) torch.Size([99])
random features: torch.Size([92, 3, 32, 32]) torch.Size([92])
random features: torch.Size([97, 3, 32, 32]) torch.Size([97])
random features: torch.Size([101, 3, 32, 32]) torch.Size([101])
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([95, 3, 32, 32]) torch.Size([95])
random features: torch.Size([95, 3, 32, 32]) torch.Size([95])
random features: torch.Size([93, 3, 32, 32]) torch.Size([93])
random features: torch.Size([100, 3, 32, 32]) torch.Size([100])
all data: 964
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.6827) feature loss: tensor(0.4312)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.6278) feature loss: tensor(0.3808)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.6980) feature loss: tensor(0.4516)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.6634) feature loss: tensor(0.3722)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.6634) feature loss: tensor(0.3558)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.6452) feature loss: tensor(0.4064)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.7613) feature loss: tensor(0.4125)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.6352) feature loss: tensor(0.3787)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.7243) feature loss: tensor(0.4504)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.6160) feature loss: tensor(0.3343)
Global Model Acc on global data: 0.6104 length of data: 10000
save a model
-------------Round number:  23  -------------
selected users: [26, 80, 82, 68, 77, 37, 3, 55, 20, 17]
random features: torch.Size([105, 3, 32, 32]) torch.Size([105])
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([92, 3, 32, 32]) torch.Size([92])
random features: torch.Size([103, 3, 32, 32]) torch.Size([103])
random features: torch.Size([92, 3, 32, 32]) torch.Size([92])
random features: torch.Size([101, 3, 32, 32]) torch.Size([101])
random features: torch.Size([106, 3, 32, 32]) torch.Size([106])
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([95, 3, 32, 32]) torch.Size([95])
random features: torch.Size([107, 3, 32, 32]) torch.Size([107])
all data: 993
Local adapation with distilling: 0.000586
training loss: tensor(0.6371) feature loss: tensor(0.3603)
Local adapation with distilling: 0.000586
training loss: tensor(0.7251) feature loss: tensor(0.3707)
Local adapation with distilling: 0.000586
training loss: tensor(0.6273) feature loss: tensor(0.3053)
Local adapation with distilling: 0.000586
training loss: tensor(0.6850) feature loss: tensor(0.3424)
Local adapation with distilling: 0.000586
training loss: tensor(0.7093) feature loss: tensor(0.3454)
Local adapation with distilling: 0.000586
training loss: tensor(0.6034) feature loss: tensor(0.3048)
Local adapation with distilling: 0.000586
training loss: tensor(0.6753) feature loss: tensor(0.3059)
Local adapation with distilling: 0.000586
training loss: tensor(0.6862) feature loss: tensor(0.3388)
Local adapation with distilling: 0.000586
training loss: tensor(0.7105) feature loss: tensor(0.3397)
Local adapation with distilling: 0.000586
training loss: tensor(0.6387) feature loss: tensor(0.3099)
Global Model Acc on global data: 0.6098 length of data: 10000
-------------Round number:  24  -------------
selected users: [26, 31, 37, 86, 76, 14, 88, 48, 71, 67]
random features: torch.Size([105, 3, 32, 32]) torch.Size([105])
random features: torch.Size([97, 3, 32, 32]) torch.Size([97])
random features: torch.Size([101, 3, 32, 32]) torch.Size([101])
random features: torch.Size([106, 3, 32, 32]) torch.Size([106])
random features: torch.Size([106, 3, 32, 32]) torch.Size([106])
random features: torch.Size([99, 3, 32, 32]) torch.Size([99])
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([95, 3, 32, 32]) torch.Size([95])
random features: torch.Size([101, 3, 32, 32]) torch.Size([101])
random features: torch.Size([94, 3, 32, 32]) torch.Size([94])
all data: 1000
Local adapation with distilling: 0.000568
training loss: tensor(0.5237) feature loss: tensor(0.2918)
Local adapation with distilling: 0.000568
training loss: tensor(0.5727) feature loss: tensor(0.2718)
Local adapation with distilling: 0.000568
training loss: tensor(0.4842) feature loss: tensor(0.2491)
Local adapation with distilling: 0.000568
training loss: tensor(0.5640) feature loss: tensor(0.2618)
Local adapation with distilling: 0.000568
training loss: tensor(0.6480) feature loss: tensor(0.2810)
Local adapation with distilling: 0.000568
training loss: tensor(0.5823) feature loss: tensor(0.3209)
Local adapation with distilling: 0.000568
training loss: tensor(0.5658) feature loss: tensor(0.3016)
Local adapation with distilling: 0.000568
training loss: tensor(0.5916) feature loss: tensor(0.2922)
Local adapation with distilling: 0.000568
training loss: tensor(0.5910) feature loss: tensor(0.2872)
Local adapation with distilling: 0.000568
training loss: tensor(0.5799) feature loss: tensor(0.2803)
Global Model Acc on global data: 0.5977 length of data: 10000
-------------Round number:  25  -------------
selected users: [41, 29, 33, 65, 74, 6, 57, 89, 87, 98]
random features: torch.Size([95, 3, 32, 32]) torch.Size([95])
random features: torch.Size([109, 3, 32, 32]) torch.Size([109])
random features: torch.Size([97, 3, 32, 32]) torch.Size([97])
random features: torch.Size([99, 3, 32, 32]) torch.Size([99])
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([104, 3, 32, 32]) torch.Size([104])
random features: torch.Size([101, 3, 32, 32]) torch.Size([101])
random features: torch.Size([108, 3, 32, 32]) torch.Size([108])
random features: torch.Size([95, 3, 32, 32]) torch.Size([95])
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
all data: 1000
Local adapation with distilling: 0.00055
training loss: tensor(0.5510) feature loss: tensor(0.2557)
Local adapation with distilling: 0.00055
training loss: tensor(0.5784) feature loss: tensor(0.2781)
Local adapation with distilling: 0.00055
training loss: tensor(0.6430) feature loss: tensor(0.3155)
Local adapation with distilling: 0.00055
training loss: tensor(0.6760) feature loss: tensor(0.3124)
Local adapation with distilling: 0.00055
training loss: tensor(0.5936) feature loss: tensor(0.2900)
Local adapation with distilling: 0.00055
training loss: tensor(0.6702) feature loss: tensor(0.2721)
Local adapation with distilling: 0.00055
training loss: tensor(0.5659) feature loss: tensor(0.2601)
Local adapation with distilling: 0.00055
training loss: tensor(0.6175) feature loss: tensor(0.2845)
Local adapation with distilling: 0.00055
training loss: tensor(0.6255) feature loss: tensor(0.3044)
Local adapation with distilling: 0.00055
training loss: tensor(0.6102) feature loss: tensor(0.2986)
Global Model Acc on global data: 0.6063 length of data: 10000
-------------Round number:  26  -------------
selected users: [8, 69, 84, 41, 25, 5, 63, 95, 33, 70]
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([98, 3, 32, 32]) torch.Size([98])
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([95, 3, 32, 32]) torch.Size([95])
random features: torch.Size([100, 3, 32, 32]) torch.Size([100])
random features: torch.Size([102, 3, 32, 32]) torch.Size([102])
random features: torch.Size([101, 3, 32, 32]) torch.Size([101])
random features: torch.Size([100, 3, 32, 32]) torch.Size([100])
random features: torch.Size([97, 3, 32, 32]) torch.Size([97])
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
all data: 981
Local adapation with distilling: 0.000532
training loss: tensor(0.6923) feature loss: tensor(0.3594)
Local adapation with distilling: 0.000532
training loss: tensor(0.6834) feature loss: tensor(0.3615)
Local adapation with distilling: 0.000532
training loss: tensor(0.6931) feature loss: tensor(0.3266)
Local adapation with distilling: 0.000532
training loss: tensor(0.6111) feature loss: tensor(0.3178)
Local adapation with distilling: 0.000532
training loss: tensor(0.6999) feature loss: tensor(0.3365)
Local adapation with distilling: 0.000532
training loss: tensor(0.7917) feature loss: tensor(0.3601)
Local adapation with distilling: 0.000532
training loss: tensor(0.6610) feature loss: tensor(0.3479)
Local adapation with distilling: 0.000532
training loss: tensor(0.6840) feature loss: tensor(0.3212)
Local adapation with distilling: 0.000532
training loss: tensor(0.6432) feature loss: tensor(0.3290)
Local adapation with distilling: 0.000532
training loss: tensor(0.6489) feature loss: tensor(0.3769)
Global Model Acc on global data: 0.6179 length of data: 10000
save a model
-------------Round number:  27  -------------
selected users: [89, 68, 43, 50, 40, 95, 27, 85, 22, 44]
random features: torch.Size([108, 3, 32, 32]) torch.Size([108])
random features: torch.Size([103, 3, 32, 32]) torch.Size([103])
random features: torch.Size([98, 3, 32, 32]) torch.Size([98])
random features: torch.Size([98, 3, 32, 32]) torch.Size([98])
random features: torch.Size([92, 3, 32, 32]) torch.Size([92])
random features: torch.Size([100, 3, 32, 32]) torch.Size([100])
random features: torch.Size([97, 3, 32, 32]) torch.Size([97])
random features: torch.Size([100, 3, 32, 32]) torch.Size([100])
random features: torch.Size([102, 3, 32, 32]) torch.Size([102])
random features: torch.Size([94, 3, 32, 32]) torch.Size([94])
all data: 992
Local adapation with distilling: 0.000514
training loss: tensor(0.5738) feature loss: tensor(0.2799)
Local adapation with distilling: 0.000514
training loss: tensor(0.6464) feature loss: tensor(0.3095)
Local adapation with distilling: 0.000514
training loss: tensor(0.5750) feature loss: tensor(0.2815)
Local adapation with distilling: 0.000514
training loss: tensor(0.6128) feature loss: tensor(0.2965)
Local adapation with distilling: 0.000514
training loss: tensor(0.6536) feature loss: tensor(0.2947)
Local adapation with distilling: 0.000514
training loss: tensor(0.5924) feature loss: tensor(0.2686)
Local adapation with distilling: 0.000514
training loss: tensor(0.6577) feature loss: tensor(0.2634)
Local adapation with distilling: 0.000514
training loss: tensor(0.5820) feature loss: tensor(0.2929)
Local adapation with distilling: 0.000514
training loss: tensor(0.8261) feature loss: tensor(0.2851)
Local adapation with distilling: 0.000514
training loss: tensor(0.5978) feature loss: tensor(0.2735)
Global Model Acc on global data: 0.6211 length of data: 10000
save a model
-------------Round number:  28  -------------
selected users: [67, 14, 0, 86, 13, 18, 30, 36, 52, 95]
random features: torch.Size([94, 3, 32, 32]) torch.Size([94])
random features: torch.Size([99, 3, 32, 32]) torch.Size([99])
random features: torch.Size([99, 3, 32, 32]) torch.Size([99])
random features: torch.Size([106, 3, 32, 32]) torch.Size([106])
random features: torch.Size([101, 3, 32, 32]) torch.Size([101])
random features: torch.Size([99, 3, 32, 32]) torch.Size([99])
random features: torch.Size([95, 3, 32, 32]) torch.Size([95])
random features: torch.Size([101, 3, 32, 32]) torch.Size([101])
random features: torch.Size([102, 3, 32, 32]) torch.Size([102])
random features: torch.Size([100, 3, 32, 32]) torch.Size([100])
all data: 996
Local adapation with distilling: 0.000496
training loss: tensor(0.5771) feature loss: tensor(0.2565)
Local adapation with distilling: 0.000496
training loss: tensor(0.5841) feature loss: tensor(0.2833)
Local adapation with distilling: 0.000496
training loss: tensor(0.5937) feature loss: tensor(0.2968)
Local adapation with distilling: 0.000496
training loss: tensor(0.5491) feature loss: tensor(0.2681)
Local adapation with distilling: 0.000496
training loss: tensor(0.6188) feature loss: tensor(0.2875)
Local adapation with distilling: 0.000496
training loss: tensor(0.6543) feature loss: tensor(0.3135)
Local adapation with distilling: 0.000496
training loss: tensor(0.6251) feature loss: tensor(0.3142)
Local adapation with distilling: 0.000496
training loss: tensor(0.5849) feature loss: tensor(0.3093)
Local adapation with distilling: 0.000496
training loss: tensor(0.8857) feature loss: tensor(0.2789)
Local adapation with distilling: 0.000496
training loss: tensor(0.5305) feature loss: tensor(0.2650)
Global Model Acc on global data: 0.6407 length of data: 10000
save a model
-------------Round number:  29  -------------
selected users: [73, 8, 10, 7, 19, 71, 92, 25, 38, 12]
random features: torch.Size([104, 3, 32, 32]) torch.Size([104])
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([93, 3, 32, 32]) torch.Size([93])
random features: torch.Size([95, 3, 32, 32]) torch.Size([95])
random features: torch.Size([100, 3, 32, 32]) torch.Size([100])
random features: torch.Size([101, 3, 32, 32]) torch.Size([101])
random features: torch.Size([93, 3, 32, 32]) torch.Size([93])
random features: torch.Size([100, 3, 32, 32]) torch.Size([100])
random features: torch.Size([109, 3, 32, 32]) torch.Size([109])
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
all data: 987
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.6263) feature loss: tensor(0.2872)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.5831) feature loss: tensor(0.2770)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.6678) feature loss: tensor(0.2939)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.6083) feature loss: tensor(0.2648)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.6157) feature loss: tensor(0.2517)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.5444) feature loss: tensor(0.2473)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.6693) feature loss: tensor(0.2759)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.5915) feature loss: tensor(0.2862)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.5781) feature loss: tensor(0.2841)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.5971) feature loss: tensor(0.2666)
Global Model Acc on global data: 0.6415 length of data: 10000
save a model
-------------Round number:  30  -------------
selected users: [20, 91, 34, 52, 8, 74, 21, 88, 80, 89]
random features: torch.Size([95, 3, 32, 32]) torch.Size([95])
random features: torch.Size([105, 3, 32, 32]) torch.Size([105])
random features: torch.Size([95, 3, 32, 32]) torch.Size([95])
random features: torch.Size([102, 3, 32, 32]) torch.Size([102])
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([94, 3, 32, 32]) torch.Size([94])
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([108, 3, 32, 32]) torch.Size([108])
all data: 983
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.4608) feature loss: tensor(0.2353)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.4900) feature loss: tensor(0.2190)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.4011) feature loss: tensor(0.2002)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.6424) feature loss: tensor(0.2116)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.4163) feature loss: tensor(0.2384)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.4127) feature loss: tensor(0.2364)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.4432) feature loss: tensor(0.2269)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.4275) feature loss: tensor(0.2245)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.4757) feature loss: tensor(0.2214)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.4071) feature loss: tensor(0.2040)
Global Model Acc on global data: 0.6288 length of data: 10000
-------------Round number:  31  -------------
selected users: [17, 33, 76, 3, 56, 0, 37, 8, 60, 67]
random features: torch.Size([107, 3, 32, 32]) torch.Size([107])
random features: torch.Size([97, 3, 32, 32]) torch.Size([97])
random features: torch.Size([106, 3, 32, 32]) torch.Size([106])
random features: torch.Size([106, 3, 32, 32]) torch.Size([106])
random features: torch.Size([110, 3, 32, 32]) torch.Size([110])
random features: torch.Size([99, 3, 32, 32]) torch.Size([99])
random features: torch.Size([101, 3, 32, 32]) torch.Size([101])
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([94, 3, 32, 32]) torch.Size([94])
all data: 1012
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.5057) feature loss: tensor(0.2309)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.4856) feature loss: tensor(0.2530)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.5585) feature loss: tensor(0.2246)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.5309) feature loss: tensor(0.2293)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.5016) feature loss: tensor(0.2292)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.4834) feature loss: tensor(0.2509)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.4602) feature loss: tensor(0.2256)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.4600) feature loss: tensor(0.2433)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.5419) feature loss: tensor(0.2338)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.4489) feature loss: tensor(0.2286)
Global Model Acc on global data: 0.6142 length of data: 10000
-------------Round number:  32  -------------
selected users: [22, 39, 85, 97, 55, 33, 80, 13, 27, 96]
random features: torch.Size([102, 3, 32, 32]) torch.Size([102])
random features: torch.Size([103, 3, 32, 32]) torch.Size([103])
random features: torch.Size([100, 3, 32, 32]) torch.Size([100])
random features: torch.Size([95, 3, 32, 32]) torch.Size([95])
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([97, 3, 32, 32]) torch.Size([97])
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([101, 3, 32, 32]) torch.Size([101])
random features: torch.Size([97, 3, 32, 32]) torch.Size([97])
random features: torch.Size([102, 3, 32, 32]) torch.Size([102])
all data: 989
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(1.1631) feature loss: tensor(0.2970)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.7636) feature loss: tensor(0.3142)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.6320) feature loss: tensor(0.3041)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.7246) feature loss: tensor(0.3471)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.6766) feature loss: tensor(0.2974)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.6024) feature loss: tensor(0.2997)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.6326) feature loss: tensor(0.3017)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.6399) feature loss: tensor(0.3071)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.6693) feature loss: tensor(0.2806)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(1.0191) feature loss: tensor(0.2945)
Global Model Acc on global data: 0.6413 length of data: 10000
-------------Round number:  33  -------------
selected users: [56, 90, 95, 82, 60, 71, 6, 81, 2, 70]
random features: torch.Size([110, 3, 32, 32]) torch.Size([110])
random features: torch.Size([95, 3, 32, 32]) torch.Size([95])
random features: torch.Size([100, 3, 32, 32]) torch.Size([100])
random features: torch.Size([92, 3, 32, 32]) torch.Size([92])
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([101, 3, 32, 32]) torch.Size([101])
random features: torch.Size([104, 3, 32, 32]) torch.Size([104])
random features: torch.Size([102, 3, 32, 32]) torch.Size([102])
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
all data: 992
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.4976) feature loss: tensor(0.2694)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.5960) feature loss: tensor(0.3083)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.5061) feature loss: tensor(0.2956)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.5459) feature loss: tensor(0.3114)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.5438) feature loss: tensor(0.3321)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.4724) feature loss: tensor(0.2498)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.6353) feature loss: tensor(0.2784)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.9292) feature loss: tensor(0.3066)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.5613) feature loss: tensor(0.3223)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.5009) feature loss: tensor(0.2974)
Global Model Acc on global data: 0.6169 length of data: 10000
-------------Round number:  34  -------------
selected users: [14, 74, 15, 4, 32, 59, 91, 10, 50, 53]
random features: torch.Size([99, 3, 32, 32]) torch.Size([99])
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([103, 3, 32, 32]) torch.Size([103])
random features: torch.Size([98, 3, 32, 32]) torch.Size([98])
random features: torch.Size([99, 3, 32, 32]) torch.Size([99])
random features: torch.Size([103, 3, 32, 32]) torch.Size([103])
random features: torch.Size([105, 3, 32, 32]) torch.Size([105])
random features: torch.Size([93, 3, 32, 32]) torch.Size([93])
random features: torch.Size([98, 3, 32, 32]) torch.Size([98])
random features: torch.Size([115, 3, 32, 32]) torch.Size([115])
all data: 1009
Local adapation with distilling: 0.000388
training loss: tensor(0.6232) feature loss: tensor(0.3359)
Local adapation with distilling: 0.000388
training loss: tensor(0.6174) feature loss: tensor(0.3166)
Local adapation with distilling: 0.000388
training loss: tensor(0.7336) feature loss: tensor(0.3509)
Local adapation with distilling: 0.000388
training loss: tensor(0.7105) feature loss: tensor(0.3051)
Local adapation with distilling: 0.000388
training loss: tensor(0.7508) feature loss: tensor(0.3146)
Local adapation with distilling: 0.000388
training loss: tensor(0.7189) feature loss: tensor(0.3052)
Local adapation with distilling: 0.000388
training loss: tensor(0.5955) feature loss: tensor(0.3009)
Local adapation with distilling: 0.000388
training loss: tensor(0.7223) feature loss: tensor(0.3117)
Local adapation with distilling: 0.000388
training loss: tensor(0.6051) feature loss: tensor(0.3009)
Local adapation with distilling: 0.000388
training loss: tensor(0.6299) feature loss: tensor(0.3117)
Global Model Acc on global data: 0.6448 length of data: 10000
save a model
-------------Round number:  35  -------------
selected users: [40, 71, 98, 27, 70, 31, 10, 24, 51, 35]
random features: torch.Size([92, 3, 32, 32]) torch.Size([92])
random features: torch.Size([101, 3, 32, 32]) torch.Size([101])
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([97, 3, 32, 32]) torch.Size([97])
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([97, 3, 32, 32]) torch.Size([97])
random features: torch.Size([93, 3, 32, 32]) torch.Size([93])
random features: torch.Size([98, 3, 32, 32]) torch.Size([98])
random features: torch.Size([97, 3, 32, 32]) torch.Size([97])
random features: torch.Size([106, 3, 32, 32]) torch.Size([106])
all data: 973
Local adapation with distilling: 0.00037
training loss: tensor(0.5413) feature loss: tensor(0.2536)
Local adapation with distilling: 0.00037
training loss: tensor(0.4196) feature loss: tensor(0.2389)
Local adapation with distilling: 0.00037
training loss: tensor(0.4695) feature loss: tensor(0.2496)
Local adapation with distilling: 0.00037
training loss: tensor(0.4934) feature loss: tensor(0.2342)
Local adapation with distilling: 0.00037
training loss: tensor(0.4417) feature loss: tensor(0.2460)
Local adapation with distilling: 0.00037
training loss: tensor(0.4941) feature loss: tensor(0.2639)
Local adapation with distilling: 0.00037
training loss: tensor(0.4886) feature loss: tensor(0.2903)
Local adapation with distilling: 0.00037
training loss: tensor(0.5679) feature loss: tensor(0.2653)
Local adapation with distilling: 0.00037
training loss: tensor(0.5213) feature loss: tensor(0.2712)
Local adapation with distilling: 0.00037
training loss: tensor(0.5562) feature loss: tensor(0.2679)
Global Model Acc on global data: 0.6206 length of data: 10000
-------------Round number:  36  -------------
selected users: [59, 42, 2, 27, 28, 75, 58, 68, 52, 74]
random features: torch.Size([103, 3, 32, 32]) torch.Size([103])
random features: torch.Size([95, 3, 32, 32]) torch.Size([95])
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([97, 3, 32, 32]) torch.Size([97])
random features: torch.Size([102, 3, 32, 32]) torch.Size([102])
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([101, 3, 32, 32]) torch.Size([101])
random features: torch.Size([103, 3, 32, 32]) torch.Size([103])
random features: torch.Size([102, 3, 32, 32]) torch.Size([102])
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
all data: 991
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.4631) feature loss: tensor(0.2249)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.4938) feature loss: tensor(0.2159)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.4772) feature loss: tensor(0.2499)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.4538) feature loss: tensor(0.2107)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.6907) feature loss: tensor(0.2624)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.5125) feature loss: tensor(0.2320)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.5418) feature loss: tensor(0.2916)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.5575) feature loss: tensor(0.2658)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.7354) feature loss: tensor(0.2435)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.4452) feature loss: tensor(0.2351)
Global Model Acc on global data: 0.6528 length of data: 10000
save a model
-------------Round number:  37  -------------
selected users: [61, 49, 86, 78, 5, 91, 81, 82, 89, 18]
random features: torch.Size([101, 3, 32, 32]) torch.Size([101])
random features: torch.Size([99, 3, 32, 32]) torch.Size([99])
random features: torch.Size([106, 3, 32, 32]) torch.Size([106])
random features: torch.Size([104, 3, 32, 32]) torch.Size([104])
random features: torch.Size([102, 3, 32, 32]) torch.Size([102])
random features: torch.Size([105, 3, 32, 32]) torch.Size([105])
random features: torch.Size([102, 3, 32, 32]) torch.Size([102])
random features: torch.Size([92, 3, 32, 32]) torch.Size([92])
random features: torch.Size([108, 3, 32, 32]) torch.Size([108])
random features: torch.Size([99, 3, 32, 32]) torch.Size([99])
all data: 1018
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.4670) feature loss: tensor(0.2157)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.4807) feature loss: tensor(0.2363)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.4635) feature loss: tensor(0.2078)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.5371) feature loss: tensor(0.2393)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.5386) feature loss: tensor(0.2009)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.4177) feature loss: tensor(0.1976)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.9103) feature loss: tensor(0.2123)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.4553) feature loss: tensor(0.2222)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.4481) feature loss: tensor(0.2095)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.5230) feature loss: tensor(0.2333)
Global Model Acc on global data: 0.6542 length of data: 10000
save a model
-------------Round number:  38  -------------
selected users: [40, 73, 49, 45, 64, 16, 69, 17, 72, 66]
random features: torch.Size([92, 3, 32, 32]) torch.Size([92])
random features: torch.Size([104, 3, 32, 32]) torch.Size([104])
random features: torch.Size([99, 3, 32, 32]) torch.Size([99])
random features: torch.Size([100, 3, 32, 32]) torch.Size([100])
random features: torch.Size([98, 3, 32, 32]) torch.Size([98])
random features: torch.Size([106, 3, 32, 32]) torch.Size([106])
random features: torch.Size([98, 3, 32, 32]) torch.Size([98])
random features: torch.Size([107, 3, 32, 32]) torch.Size([107])
random features: torch.Size([115, 3, 32, 32]) torch.Size([115])
random features: torch.Size([108, 3, 32, 32]) torch.Size([108])
all data: 1027
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.5849) feature loss: tensor(0.3436)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.6536) feature loss: tensor(0.3072)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.5743) feature loss: tensor(0.2656)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.5592) feature loss: tensor(0.2554)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.8062) feature loss: tensor(0.2865)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.6346) feature loss: tensor(0.3046)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.5792) feature loss: tensor(0.2680)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.5214) feature loss: tensor(0.2429)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.5852) feature loss: tensor(0.2850)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.6356) feature loss: tensor(0.3242)
Global Model Acc on global data: 0.6476 length of data: 10000
-------------Round number:  39  -------------
selected users: [22, 53, 84, 57, 87, 58, 29, 21, 85, 79]
random features: torch.Size([102, 3, 32, 32]) torch.Size([102])
random features: torch.Size([115, 3, 32, 32]) torch.Size([115])
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([101, 3, 32, 32]) torch.Size([101])
random features: torch.Size([95, 3, 32, 32]) torch.Size([95])
random features: torch.Size([101, 3, 32, 32]) torch.Size([101])
random features: torch.Size([109, 3, 32, 32]) torch.Size([109])
random features: torch.Size([94, 3, 32, 32]) torch.Size([94])
random features: torch.Size([100, 3, 32, 32]) torch.Size([100])
random features: torch.Size([99, 3, 32, 32]) torch.Size([99])
all data: 1012
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.7786) feature loss: tensor(0.2541)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.4994) feature loss: tensor(0.2477)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.5780) feature loss: tensor(0.2635)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.5454) feature loss: tensor(0.2247)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.5715) feature loss: tensor(0.2576)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.5545) feature loss: tensor(0.2590)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.5138) feature loss: tensor(0.2495)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.5678) feature loss: tensor(0.2477)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.5067) feature loss: tensor(0.2464)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.6019) feature loss: tensor(0.2414)
Global Model Acc on global data: 0.6573 length of data: 10000
save a model
-------------Round number:  40  -------------
selected users: [79, 75, 63, 15, 38, 11, 40, 45, 39, 62]
random features: torch.Size([99, 3, 32, 32]) torch.Size([99])
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([101, 3, 32, 32]) torch.Size([101])
random features: torch.Size([103, 3, 32, 32]) torch.Size([103])
random features: torch.Size([109, 3, 32, 32]) torch.Size([109])
random features: torch.Size([106, 3, 32, 32]) torch.Size([106])
random features: torch.Size([92, 3, 32, 32]) torch.Size([92])
random features: torch.Size([100, 3, 32, 32]) torch.Size([100])
random features: torch.Size([103, 3, 32, 32]) torch.Size([103])
random features: torch.Size([93, 3, 32, 32]) torch.Size([93])
all data: 1002
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.4556) feature loss: tensor(0.2026)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.4641) feature loss: tensor(0.2043)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.4828) feature loss: tensor(0.2119)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.5746) feature loss: tensor(0.2229)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.4619) feature loss: tensor(0.2249)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.4833) feature loss: tensor(0.1946)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.4635) feature loss: tensor(0.2196)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.4353) feature loss: tensor(0.1964)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.4678) feature loss: tensor(0.1999)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.4911) feature loss: tensor(0.2246)
Global Model Acc on global data: 0.6599 length of data: 10000
save a model
-------------Round number:  41  -------------
selected users: [42, 94, 37, 6, 79, 32, 24, 0, 33, 93]
random features: torch.Size([95, 3, 32, 32]) torch.Size([95])
random features: torch.Size([101, 3, 32, 32]) torch.Size([101])
random features: torch.Size([101, 3, 32, 32]) torch.Size([101])
random features: torch.Size([104, 3, 32, 32]) torch.Size([104])
random features: torch.Size([99, 3, 32, 32]) torch.Size([99])
random features: torch.Size([99, 3, 32, 32]) torch.Size([99])
random features: torch.Size([98, 3, 32, 32]) torch.Size([98])
random features: torch.Size([99, 3, 32, 32]) torch.Size([99])
random features: torch.Size([97, 3, 32, 32]) torch.Size([97])
random features: torch.Size([104, 3, 32, 32]) torch.Size([104])
all data: 997
Local adapation with distilling: 0.000262
training loss: tensor(0.5306) feature loss: tensor(0.2035)
Local adapation with distilling: 0.000262
training loss: tensor(0.6086) feature loss: tensor(0.2066)
Local adapation with distilling: 0.000262
training loss: tensor(0.4731) feature loss: tensor(0.1950)
Local adapation with distilling: 0.000262
training loss: tensor(0.5686) feature loss: tensor(0.2132)
Local adapation with distilling: 0.000262
training loss: tensor(0.4729) feature loss: tensor(0.2021)
Local adapation with distilling: 0.000262
training loss: tensor(0.6075) feature loss: tensor(0.2308)
Local adapation with distilling: 0.000262
training loss: tensor(0.5196) feature loss: tensor(0.1977)
Local adapation with distilling: 0.000262
training loss: tensor(0.5062) feature loss: tensor(0.2168)
Local adapation with distilling: 0.000262
training loss: tensor(0.4988) feature loss: tensor(0.2230)
Local adapation with distilling: 0.000262
training loss: tensor(0.5789) feature loss: tensor(0.2461)
Global Model Acc on global data: 0.6627 length of data: 10000
save a model
-------------Round number:  42  -------------
selected users: [83, 53, 70, 45, 44, 39, 22, 80, 10, 0]
random features: torch.Size([101, 3, 32, 32]) torch.Size([101])
random features: torch.Size([115, 3, 32, 32]) torch.Size([115])
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([100, 3, 32, 32]) torch.Size([100])
random features: torch.Size([94, 3, 32, 32]) torch.Size([94])
random features: torch.Size([103, 3, 32, 32]) torch.Size([103])
random features: torch.Size([102, 3, 32, 32]) torch.Size([102])
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([93, 3, 32, 32]) torch.Size([93])
random features: torch.Size([99, 3, 32, 32]) torch.Size([99])
all data: 999
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.4253) feature loss: tensor(0.2100)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.3345) feature loss: tensor(0.1730)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.3779) feature loss: tensor(0.1984)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.3766) feature loss: tensor(0.1824)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.4118) feature loss: tensor(0.1964)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.3858) feature loss: tensor(0.1856)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.5410) feature loss: tensor(0.1730)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.4221) feature loss: tensor(0.2083)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.4053) feature loss: tensor(0.1916)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.3718) feature loss: tensor(0.1911)
Global Model Acc on global data: 0.6527 length of data: 10000
-------------Round number:  43  -------------
selected users: [20, 2, 15, 22, 57, 91, 69, 55, 11, 79]
random features: torch.Size([95, 3, 32, 32]) torch.Size([95])
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([103, 3, 32, 32]) torch.Size([103])
random features: torch.Size([102, 3, 32, 32]) torch.Size([102])
random features: torch.Size([101, 3, 32, 32]) torch.Size([101])
random features: torch.Size([105, 3, 32, 32]) torch.Size([105])
random features: torch.Size([98, 3, 32, 32]) torch.Size([98])
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([106, 3, 32, 32]) torch.Size([106])
random features: torch.Size([99, 3, 32, 32]) torch.Size([99])
all data: 1001
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.4308) feature loss: tensor(0.1884)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.3796) feature loss: tensor(0.1831)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.4161) feature loss: tensor(0.1723)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.4713) feature loss: tensor(0.1553)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.4094) feature loss: tensor(0.1632)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.3592) feature loss: tensor(0.1630)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.3861) feature loss: tensor(0.1755)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.3827) feature loss: tensor(0.1680)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.4058) feature loss: tensor(0.1643)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.3576) feature loss: tensor(0.1613)
Global Model Acc on global data: 0.6641 length of data: 10000
save a model
-------------Round number:  44  -------------
selected users: [42, 54, 27, 93, 39, 65, 7, 26, 24, 60]
random features: torch.Size([95, 3, 32, 32]) torch.Size([95])
random features: torch.Size([104, 3, 32, 32]) torch.Size([104])
random features: torch.Size([97, 3, 32, 32]) torch.Size([97])
random features: torch.Size([104, 3, 32, 32]) torch.Size([104])
random features: torch.Size([103, 3, 32, 32]) torch.Size([103])
random features: torch.Size([99, 3, 32, 32]) torch.Size([99])
random features: torch.Size([95, 3, 32, 32]) torch.Size([95])
random features: torch.Size([105, 3, 32, 32]) torch.Size([105])
random features: torch.Size([98, 3, 32, 32]) torch.Size([98])
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
all data: 996
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.4364) feature loss: tensor(0.1837)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.6082) feature loss: tensor(0.1739)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.4647) feature loss: tensor(0.1943)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.4663) feature loss: tensor(0.2014)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.4166) feature loss: tensor(0.1757)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.4584) feature loss: tensor(0.1966)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.4872) feature loss: tensor(0.2003)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.4618) feature loss: tensor(0.2143)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.4250) feature loss: tensor(0.1932)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.4595) feature loss: tensor(0.1942)
Global Model Acc on global data: 0.6627 length of data: 10000
-------------Round number:  45  -------------
selected users: [0, 1, 62, 76, 37, 99, 78, 38, 2, 84]
random features: torch.Size([99, 3, 32, 32]) torch.Size([99])
random features: torch.Size([104, 3, 32, 32]) torch.Size([104])
random features: torch.Size([93, 3, 32, 32]) torch.Size([93])
random features: torch.Size([106, 3, 32, 32]) torch.Size([106])
random features: torch.Size([101, 3, 32, 32]) torch.Size([101])
random features: torch.Size([93, 3, 32, 32]) torch.Size([93])
random features: torch.Size([104, 3, 32, 32]) torch.Size([104])
random features: torch.Size([109, 3, 32, 32]) torch.Size([109])
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
all data: 1001
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.3817) feature loss: tensor(0.1937)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.4520) feature loss: tensor(0.1907)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.4675) feature loss: tensor(0.1751)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.4874) feature loss: tensor(0.1782)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.3853) feature loss: tensor(0.1649)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.4644) feature loss: tensor(0.1803)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.4893) feature loss: tensor(0.1990)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.4283) feature loss: tensor(0.1959)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.3977) feature loss: tensor(0.1865)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.4749) feature loss: tensor(0.1932)
Global Model Acc on global data: 0.6729 length of data: 10000
save a model
-------------Round number:  46  -------------
selected users: [71, 33, 37, 10, 44, 34, 24, 98, 73, 95]
random features: torch.Size([101, 3, 32, 32]) torch.Size([101])
random features: torch.Size([97, 3, 32, 32]) torch.Size([97])
random features: torch.Size([101, 3, 32, 32]) torch.Size([101])
random features: torch.Size([93, 3, 32, 32]) torch.Size([93])
random features: torch.Size([94, 3, 32, 32]) torch.Size([94])
random features: torch.Size([95, 3, 32, 32]) torch.Size([95])
random features: torch.Size([98, 3, 32, 32]) torch.Size([98])
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([104, 3, 32, 32]) torch.Size([104])
random features: torch.Size([100, 3, 32, 32]) torch.Size([100])
all data: 979
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.3090) feature loss: tensor(0.1583)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.3344) feature loss: tensor(0.1635)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.3014) feature loss: tensor(0.1481)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.3594) feature loss: tensor(0.1793)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.3459) feature loss: tensor(0.1422)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.3428) feature loss: tensor(0.1485)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.3217) feature loss: tensor(0.1446)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.3672) feature loss: tensor(0.1637)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.3948) feature loss: tensor(0.1699)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.3220) feature loss: tensor(0.1529)
Global Model Acc on global data: 0.6722 length of data: 10000
-------------Round number:  47  -------------
selected users: [17, 90, 94, 86, 63, 5, 38, 14, 40, 47]
random features: torch.Size([107, 3, 32, 32]) torch.Size([107])
random features: torch.Size([95, 3, 32, 32]) torch.Size([95])
random features: torch.Size([101, 3, 32, 32]) torch.Size([101])
random features: torch.Size([106, 3, 32, 32]) torch.Size([106])
random features: torch.Size([101, 3, 32, 32]) torch.Size([101])
random features: torch.Size([102, 3, 32, 32]) torch.Size([102])
random features: torch.Size([109, 3, 32, 32]) torch.Size([109])
random features: torch.Size([99, 3, 32, 32]) torch.Size([99])
random features: torch.Size([92, 3, 32, 32]) torch.Size([92])
random features: torch.Size([93, 3, 32, 32]) torch.Size([93])
all data: 1005
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.3659) feature loss: tensor(0.1476)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.4669) feature loss: tensor(0.1539)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.4271) feature loss: tensor(0.1384)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.3792) feature loss: tensor(0.1504)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.4199) feature loss: tensor(0.1737)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.4381) feature loss: tensor(0.1399)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.3763) feature loss: tensor(0.1740)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.3875) feature loss: tensor(0.1683)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.4023) feature loss: tensor(0.1637)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.4287) feature loss: tensor(0.1650)
Global Model Acc on global data: 0.6638 length of data: 10000
-------------Round number:  48  -------------
selected users: [93, 5, 71, 9, 11, 79, 69, 8, 59, 63]
random features: torch.Size([104, 3, 32, 32]) torch.Size([104])
random features: torch.Size([102, 3, 32, 32]) torch.Size([102])
random features: torch.Size([101, 3, 32, 32]) torch.Size([101])
random features: torch.Size([102, 3, 32, 32]) torch.Size([102])
random features: torch.Size([106, 3, 32, 32]) torch.Size([106])
random features: torch.Size([99, 3, 32, 32]) torch.Size([99])
random features: torch.Size([98, 3, 32, 32]) torch.Size([98])
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([103, 3, 32, 32]) torch.Size([103])
random features: torch.Size([101, 3, 32, 32]) torch.Size([101])
all data: 1012
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.3513) feature loss: tensor(0.1510)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.3504) feature loss: tensor(0.1325)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.2896) feature loss: tensor(0.1370)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.6778) feature loss: tensor(0.1346)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.3448) feature loss: tensor(0.1310)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.3457) feature loss: tensor(0.1320)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.3601) feature loss: tensor(0.1575)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.3696) feature loss: tensor(0.1571)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.3614) feature loss: tensor(0.1285)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.3356) feature loss: tensor(0.1391)
Global Model Acc on global data: 0.6661 length of data: 10000
-------------Round number:  49  -------------
selected users: [76, 25, 28, 75, 81, 47, 41, 22, 29, 1]
random features: torch.Size([106, 3, 32, 32]) torch.Size([106])
random features: torch.Size([100, 3, 32, 32]) torch.Size([100])
random features: torch.Size([102, 3, 32, 32]) torch.Size([102])
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([102, 3, 32, 32]) torch.Size([102])
random features: torch.Size([93, 3, 32, 32]) torch.Size([93])
random features: torch.Size([95, 3, 32, 32]) torch.Size([95])
random features: torch.Size([102, 3, 32, 32]) torch.Size([102])
random features: torch.Size([109, 3, 32, 32]) torch.Size([109])
random features: torch.Size([104, 3, 32, 32]) torch.Size([104])
all data: 1009
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.4087) feature loss: tensor(0.1268)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.3688) feature loss: tensor(0.1298)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.6324) feature loss: tensor(0.1412)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.3740) feature loss: tensor(0.1486)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(1.0208) feature loss: tensor(0.1356)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.4144) feature loss: tensor(0.1488)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.3610) feature loss: tensor(0.1356)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.6435) feature loss: tensor(0.1321)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.3712) feature loss: tensor(0.1242)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.3561) feature loss: tensor(0.1337)
Global Model Acc on global data: 0.6694 length of data: 10000
-------------Round number:  50  -------------
selected users: [80, 79, 25, 15, 39, 40, 53, 17, 57, 50]
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([99, 3, 32, 32]) torch.Size([99])
random features: torch.Size([100, 3, 32, 32]) torch.Size([100])
random features: torch.Size([103, 3, 32, 32]) torch.Size([103])
random features: torch.Size([103, 3, 32, 32]) torch.Size([103])
random features: torch.Size([92, 3, 32, 32]) torch.Size([92])
random features: torch.Size([115, 3, 32, 32]) torch.Size([115])
random features: torch.Size([107, 3, 32, 32]) torch.Size([107])
random features: torch.Size([101, 3, 32, 32]) torch.Size([101])
random features: torch.Size([98, 3, 32, 32]) torch.Size([98])
all data: 1014
Local adapation with distilling: 0.0001
training loss: tensor(0.3601) feature loss: tensor(0.1220)
Local adapation with distilling: 0.0001
training loss: tensor(0.2961) feature loss: tensor(0.1105)
Local adapation with distilling: 0.0001
training loss: tensor(0.3043) feature loss: tensor(0.1253)
Local adapation with distilling: 0.0001
training loss: tensor(0.5136) feature loss: tensor(0.1122)
Local adapation with distilling: 0.0001
training loss: tensor(0.2934) feature loss: tensor(0.1123)
Local adapation with distilling: 0.0001
training loss: tensor(0.3353) feature loss: tensor(0.1198)
Local adapation with distilling: 0.0001
training loss: tensor(0.2872) feature loss: tensor(0.1332)
Local adapation with distilling: 0.0001
training loss: tensor(0.2802) feature loss: tensor(0.1098)
Local adapation with distilling: 0.0001
training loss: tensor(0.3120) feature loss: tensor(0.1091)
Local adapation with distilling: 0.0001
training loss: tensor(0.3986) feature loss: tensor(0.1394)
Global Model Acc on global data: 0.6738 length of data: 10000
save a model
-------------Round number:  51  -------------
selected users: [71, 43, 11, 83, 78, 19, 80, 4, 79, 75]
random features: torch.Size([101, 3, 32, 32]) torch.Size([101])
random features: torch.Size([98, 3, 32, 32]) torch.Size([98])
random features: torch.Size([106, 3, 32, 32]) torch.Size([106])
random features: torch.Size([101, 3, 32, 32]) torch.Size([101])
random features: torch.Size([104, 3, 32, 32]) torch.Size([104])
random features: torch.Size([100, 3, 32, 32]) torch.Size([100])
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([98, 3, 32, 32]) torch.Size([98])
random features: torch.Size([99, 3, 32, 32]) torch.Size([99])
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
all data: 999
Local adapation with distilling: 0.0001
training loss: tensor(0.3132) feature loss: tensor(0.1324)
Local adapation with distilling: 0.0001
training loss: tensor(0.4083) feature loss: tensor(0.1444)
Local adapation with distilling: 0.0001
training loss: tensor(0.3539) feature loss: tensor(0.1510)
Local adapation with distilling: 0.0001
training loss: tensor(0.4372) feature loss: tensor(0.1684)
Local adapation with distilling: 0.0001
training loss: tensor(0.3970) feature loss: tensor(0.1546)
Local adapation with distilling: 0.0001
training loss: tensor(0.4658) feature loss: tensor(0.1595)
Local adapation with distilling: 0.0001
training loss: tensor(0.3733) feature loss: tensor(0.1508)
Local adapation with distilling: 0.0001
training loss: tensor(0.4370) feature loss: tensor(0.1461)
Local adapation with distilling: 0.0001
training loss: tensor(0.3271) feature loss: tensor(0.1438)
Local adapation with distilling: 0.0001
training loss: tensor(0.3783) feature loss: tensor(0.1404)
Global Model Acc on global data: 0.6731 length of data: 10000
-------------Round number:  52  -------------
selected users: [82, 8, 44, 19, 2, 73, 37, 89, 67, 18]
random features: torch.Size([92, 3, 32, 32]) torch.Size([92])
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([94, 3, 32, 32]) torch.Size([94])
random features: torch.Size([100, 3, 32, 32]) torch.Size([100])
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([104, 3, 32, 32]) torch.Size([104])
random features: torch.Size([101, 3, 32, 32]) torch.Size([101])
random features: torch.Size([108, 3, 32, 32]) torch.Size([108])
random features: torch.Size([94, 3, 32, 32]) torch.Size([94])
random features: torch.Size([99, 3, 32, 32]) torch.Size([99])
all data: 984
Local adapation with distilling: 0.0001
training loss: tensor(0.3634) feature loss: tensor(0.1233)
Local adapation with distilling: 0.0001
training loss: tensor(0.3175) feature loss: tensor(0.1387)
Local adapation with distilling: 0.0001
training loss: tensor(0.3178) feature loss: tensor(0.1138)
Local adapation with distilling: 0.0001
training loss: tensor(0.3635) feature loss: tensor(0.1215)
Local adapation with distilling: 0.0001
training loss: tensor(0.3034) feature loss: tensor(0.1222)
Local adapation with distilling: 0.0001
training loss: tensor(0.3457) feature loss: tensor(0.1352)
Local adapation with distilling: 0.0001
training loss: tensor(0.2710) feature loss: tensor(0.1047)
Local adapation with distilling: 0.0001
training loss: tensor(0.2971) feature loss: tensor(0.1157)
Local adapation with distilling: 0.0001
training loss: tensor(0.3742) feature loss: tensor(0.1223)
Local adapation with distilling: 0.0001
training loss: tensor(0.4303) feature loss: tensor(0.1277)
Global Model Acc on global data: 0.6734 length of data: 10000
-------------Round number:  53  -------------
selected users: [19, 78, 64, 3, 71, 32, 68, 42, 55, 97]
random features: torch.Size([100, 3, 32, 32]) torch.Size([100])
random features: torch.Size([104, 3, 32, 32]) torch.Size([104])
random features: torch.Size([98, 3, 32, 32]) torch.Size([98])
random features: torch.Size([106, 3, 32, 32]) torch.Size([106])
random features: torch.Size([101, 3, 32, 32]) torch.Size([101])
random features: torch.Size([99, 3, 32, 32]) torch.Size([99])
random features: torch.Size([103, 3, 32, 32]) torch.Size([103])
random features: torch.Size([95, 3, 32, 32]) torch.Size([95])
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([95, 3, 32, 32]) torch.Size([95])
all data: 997
Local adapation with distilling: 0.0001
training loss: tensor(0.4302) feature loss: tensor(0.1508)
Local adapation with distilling: 0.0001
training loss: tensor(0.4292) feature loss: tensor(0.1576)
Local adapation with distilling: 0.0001
training loss: tensor(0.6079) feature loss: tensor(0.1393)
Local adapation with distilling: 0.0001
training loss: tensor(0.5000) feature loss: tensor(0.1772)
Local adapation with distilling: 0.0001
training loss: tensor(0.3544) feature loss: tensor(0.1565)
Local adapation with distilling: 0.0001
training loss: tensor(0.5698) feature loss: tensor(0.1569)
Local adapation with distilling: 0.0001
training loss: tensor(0.5742) feature loss: tensor(0.1776)
Local adapation with distilling: 0.0001
training loss: tensor(0.4077) feature loss: tensor(0.1589)
Local adapation with distilling: 0.0001
training loss: tensor(0.4261) feature loss: tensor(0.1606)
Local adapation with distilling: 0.0001
training loss: tensor(0.5300) feature loss: tensor(0.1745)
Global Model Acc on global data: 0.6703 length of data: 10000
-------------Round number:  54  -------------
selected users: [36, 70, 48, 94, 81, 46, 38, 29, 34, 22]
random features: torch.Size([101, 3, 32, 32]) torch.Size([101])
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([95, 3, 32, 32]) torch.Size([95])
random features: torch.Size([101, 3, 32, 32]) torch.Size([101])
random features: torch.Size([102, 3, 32, 32]) torch.Size([102])
random features: torch.Size([103, 3, 32, 32]) torch.Size([103])
random features: torch.Size([109, 3, 32, 32]) torch.Size([109])
random features: torch.Size([109, 3, 32, 32]) torch.Size([109])
random features: torch.Size([95, 3, 32, 32]) torch.Size([95])
random features: torch.Size([102, 3, 32, 32]) torch.Size([102])
all data: 1013
Local adapation with distilling: 0.0001
training loss: tensor(0.3764) feature loss: tensor(0.1575)
Local adapation with distilling: 0.0001
training loss: tensor(0.2933) feature loss: tensor(0.1500)
Local adapation with distilling: 0.0001
training loss: tensor(0.4689) feature loss: tensor(0.1475)
Local adapation with distilling: 0.0001
training loss: tensor(0.3432) feature loss: tensor(0.1258)
Local adapation with distilling: 0.0001
training loss: tensor(1.0123) feature loss: tensor(0.1415)
Local adapation with distilling: 0.0001
training loss: tensor(0.3298) feature loss: tensor(0.1300)
Local adapation with distilling: 0.0001
training loss: tensor(0.3057) feature loss: tensor(0.1385)
Local adapation with distilling: 0.0001
training loss: tensor(0.3134) feature loss: tensor(0.1335)
Local adapation with distilling: 0.0001
training loss: tensor(0.3345) feature loss: tensor(0.1393)
Local adapation with distilling: 0.0001
training loss: tensor(0.5858) feature loss: tensor(0.1299)
Global Model Acc on global data: 0.6748 length of data: 10000
save a model
-------------Round number:  55  -------------
selected users: [28, 92, 98, 95, 84, 34, 38, 76, 17, 78]
random features: torch.Size([102, 3, 32, 32]) torch.Size([102])
random features: torch.Size([93, 3, 32, 32]) torch.Size([93])
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([100, 3, 32, 32]) torch.Size([100])
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([95, 3, 32, 32]) torch.Size([95])
random features: torch.Size([109, 3, 32, 32]) torch.Size([109])
random features: torch.Size([106, 3, 32, 32]) torch.Size([106])
random features: torch.Size([107, 3, 32, 32]) torch.Size([107])
random features: torch.Size([104, 3, 32, 32]) torch.Size([104])
all data: 1008
Local adapation with distilling: 0.0001
training loss: tensor(0.4186) feature loss: tensor(0.1203)
Local adapation with distilling: 0.0001
training loss: tensor(0.4256) feature loss: tensor(0.1121)
Local adapation with distilling: 0.0001
training loss: tensor(0.2754) feature loss: tensor(0.1180)
Local adapation with distilling: 0.0001
training loss: tensor(0.2417) feature loss: tensor(0.1055)
Local adapation with distilling: 0.0001
training loss: tensor(0.3158) feature loss: tensor(0.1109)
Local adapation with distilling: 0.0001
training loss: tensor(0.2498) feature loss: tensor(0.1042)
Local adapation with distilling: 0.0001
training loss: tensor(0.2442) feature loss: tensor(0.1184)
Local adapation with distilling: 0.0001
training loss: tensor(0.2841) feature loss: tensor(0.1064)
Local adapation with distilling: 0.0001
training loss: tensor(0.2351) feature loss: tensor(0.1050)
Local adapation with distilling: 0.0001
training loss: tensor(0.2747) feature loss: tensor(0.1210)
Global Model Acc on global data: 0.6738 length of data: 10000
-------------Round number:  56  -------------
selected users: [92, 79, 23, 68, 52, 38, 73, 9, 59, 27]
random features: torch.Size([93, 3, 32, 32]) torch.Size([93])
random features: torch.Size([99, 3, 32, 32]) torch.Size([99])
random features: torch.Size([98, 3, 32, 32]) torch.Size([98])
random features: torch.Size([103, 3, 32, 32]) torch.Size([103])
random features: torch.Size([102, 3, 32, 32]) torch.Size([102])
random features: torch.Size([109, 3, 32, 32]) torch.Size([109])
random features: torch.Size([104, 3, 32, 32]) torch.Size([104])
random features: torch.Size([102, 3, 32, 32]) torch.Size([102])
random features: torch.Size([103, 3, 32, 32]) torch.Size([103])
random features: torch.Size([97, 3, 32, 32]) torch.Size([97])
all data: 1010
Local adapation with distilling: 0.0001
training loss: tensor(0.3864) feature loss: tensor(0.1178)
Local adapation with distilling: 0.0001
training loss: tensor(0.2894) feature loss: tensor(0.1176)
Local adapation with distilling: 0.0001
training loss: tensor(0.4955) feature loss: tensor(0.1375)
Local adapation with distilling: 0.0001
training loss: tensor(0.3856) feature loss: tensor(0.1255)
Local adapation with distilling: 0.0001
training loss: tensor(0.7103) feature loss: tensor(0.1215)
Local adapation with distilling: 0.0001
training loss: tensor(0.2744) feature loss: tensor(0.1244)
Local adapation with distilling: 0.0001
training loss: tensor(0.3252) feature loss: tensor(0.1325)
Local adapation with distilling: 0.0001
training loss: tensor(0.6916) feature loss: tensor(0.1310)
Local adapation with distilling: 0.0001
training loss: tensor(0.4576) feature loss: tensor(0.1195)
Local adapation with distilling: 0.0001
training loss: tensor(0.3211) feature loss: tensor(0.1184)
Global Model Acc on global data: 0.6725 length of data: 10000
-------------Round number:  57  -------------
selected users: [52, 17, 41, 3, 8, 98, 59, 20, 67, 7]
random features: torch.Size([102, 3, 32, 32]) torch.Size([102])
random features: torch.Size([107, 3, 32, 32]) torch.Size([107])
random features: torch.Size([95, 3, 32, 32]) torch.Size([95])
random features: torch.Size([106, 3, 32, 32]) torch.Size([106])
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([103, 3, 32, 32]) torch.Size([103])
random features: torch.Size([95, 3, 32, 32]) torch.Size([95])
random features: torch.Size([94, 3, 32, 32]) torch.Size([94])
random features: torch.Size([95, 3, 32, 32]) torch.Size([95])
all data: 989
Local adapation with distilling: 0.0001
training loss: tensor(0.5225) feature loss: tensor(0.1308)
Local adapation with distilling: 0.0001
training loss: tensor(0.2407) feature loss: tensor(0.1138)
Local adapation with distilling: 0.0001
training loss: tensor(0.2761) feature loss: tensor(0.1147)
Local adapation with distilling: 0.0001
training loss: tensor(0.3188) feature loss: tensor(0.1168)
Local adapation with distilling: 0.0001
training loss: tensor(0.2607) feature loss: tensor(0.1285)
Local adapation with distilling: 0.0001
training loss: tensor(0.2771) feature loss: tensor(0.1235)
Local adapation with distilling: 0.0001
training loss: tensor(0.3075) feature loss: tensor(0.1206)
Local adapation with distilling: 0.0001
training loss: tensor(0.3511) feature loss: tensor(0.1335)
Local adapation with distilling: 0.0001
training loss: tensor(0.2797) feature loss: tensor(0.1164)
Local adapation with distilling: 0.0001
training loss: tensor(0.3520) feature loss: tensor(0.1131)
Global Model Acc on global data: 0.6731 length of data: 10000
-------------Round number:  58  -------------
selected users: [43, 58, 8, 31, 70, 45, 69, 95, 50, 4]
random features: torch.Size([98, 3, 32, 32]) torch.Size([98])
random features: torch.Size([101, 3, 32, 32]) torch.Size([101])
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([97, 3, 32, 32]) torch.Size([97])
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([100, 3, 32, 32]) torch.Size([100])
random features: torch.Size([98, 3, 32, 32]) torch.Size([98])
random features: torch.Size([100, 3, 32, 32]) torch.Size([100])
random features: torch.Size([98, 3, 32, 32]) torch.Size([98])
random features: torch.Size([98, 3, 32, 32]) torch.Size([98])
all data: 982
Local adapation with distilling: 0.0001
training loss: tensor(0.3421) feature loss: tensor(0.1331)
Local adapation with distilling: 0.0001
training loss: tensor(0.3241) feature loss: tensor(0.1414)
Local adapation with distilling: 0.0001
training loss: tensor(0.2617) feature loss: tensor(0.1281)
Local adapation with distilling: 0.0001
training loss: tensor(0.3288) feature loss: tensor(0.1413)
Local adapation with distilling: 0.0001
training loss: tensor(0.2670) feature loss: tensor(0.1309)
Local adapation with distilling: 0.0001
training loss: tensor(0.3010) feature loss: tensor(0.1194)
Local adapation with distilling: 0.0001
training loss: tensor(0.3144) feature loss: tensor(0.1407)
Local adapation with distilling: 0.0001
training loss: tensor(0.2505) feature loss: tensor(0.1396)
Local adapation with distilling: 0.0001
training loss: tensor(0.3221) feature loss: tensor(0.1450)
Local adapation with distilling: 0.0001
training loss: tensor(0.3665) feature loss: tensor(0.1247)
Global Model Acc on global data: 0.6785 length of data: 10000
save a model
-------------Round number:  59  -------------
selected users: [38, 46, 24, 87, 30, 85, 16, 96, 18, 99]
random features: torch.Size([109, 3, 32, 32]) torch.Size([109])
random features: torch.Size([103, 3, 32, 32]) torch.Size([103])
random features: torch.Size([98, 3, 32, 32]) torch.Size([98])
random features: torch.Size([95, 3, 32, 32]) torch.Size([95])
random features: torch.Size([95, 3, 32, 32]) torch.Size([95])
random features: torch.Size([100, 3, 32, 32]) torch.Size([100])
random features: torch.Size([106, 3, 32, 32]) torch.Size([106])
random features: torch.Size([102, 3, 32, 32]) torch.Size([102])
random features: torch.Size([99, 3, 32, 32]) torch.Size([99])
random features: torch.Size([93, 3, 32, 32]) torch.Size([93])
all data: 1000
Local adapation with distilling: 0.0001
training loss: tensor(0.3123) feature loss: tensor(0.1522)
Local adapation with distilling: 0.0001
training loss: tensor(0.3589) feature loss: tensor(0.1406)
Local adapation with distilling: 0.0001
training loss: tensor(0.3543) feature loss: tensor(0.1354)
Local adapation with distilling: 0.0001
training loss: tensor(0.4155) feature loss: tensor(0.1449)
Local adapation with distilling: 0.0001
training loss: tensor(0.5095) feature loss: tensor(0.1590)
Local adapation with distilling: 0.0001
training loss: tensor(0.3637) feature loss: tensor(0.1429)
Local adapation with distilling: 0.0001
training loss: tensor(0.4021) feature loss: tensor(0.1405)
Local adapation with distilling: 0.0001
training loss: tensor(0.6813) feature loss: tensor(0.1411)
Local adapation with distilling: 0.0001
training loss: tensor(0.4151) feature loss: tensor(0.1601)
Local adapation with distilling: 0.0001
training loss: tensor(0.4201) feature loss: tensor(0.1440)
Global Model Acc on global data: 0.6742 length of data: 10000
-------------Round number:  60  -------------
selected users: [88, 4, 79, 14, 55, 3, 19, 28, 94, 25]
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([98, 3, 32, 32]) torch.Size([98])
random features: torch.Size([99, 3, 32, 32]) torch.Size([99])
random features: torch.Size([99, 3, 32, 32]) torch.Size([99])
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([106, 3, 32, 32]) torch.Size([106])
random features: torch.Size([100, 3, 32, 32]) torch.Size([100])
random features: torch.Size([102, 3, 32, 32]) torch.Size([102])
random features: torch.Size([101, 3, 32, 32]) torch.Size([101])
random features: torch.Size([100, 3, 32, 32]) torch.Size([100])
all data: 997
Local adapation with distilling: 0.0001
training loss: tensor(0.3337) feature loss: tensor(0.1324)
Local adapation with distilling: 0.0001
training loss: tensor(0.3092) feature loss: tensor(0.1116)
Local adapation with distilling: 0.0001
training loss: tensor(0.2624) feature loss: tensor(0.1208)
Local adapation with distilling: 0.0001
training loss: tensor(0.3139) feature loss: tensor(0.1519)
Local adapation with distilling: 0.0001
training loss: tensor(0.2998) feature loss: tensor(0.1322)
Local adapation with distilling: 0.0001
training loss: tensor(0.3091) feature loss: tensor(0.1247)
Local adapation with distilling: 0.0001
training loss: tensor(0.3102) feature loss: tensor(0.1235)
Local adapation with distilling: 0.0001
training loss: tensor(0.4835) feature loss: tensor(0.1305)
Local adapation with distilling: 0.0001
training loss: tensor(0.3190) feature loss: tensor(0.1140)
Local adapation with distilling: 0.0001
training loss: tensor(0.2951) feature loss: tensor(0.1292)
Global Model Acc on global data: 0.6774 length of data: 10000
-------------Round number:  61  -------------
selected users: [83, 1, 55, 9, 31, 28, 96, 29, 86, 63]
random features: torch.Size([101, 3, 32, 32]) torch.Size([101])
random features: torch.Size([104, 3, 32, 32]) torch.Size([104])
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([102, 3, 32, 32]) torch.Size([102])
random features: torch.Size([97, 3, 32, 32]) torch.Size([97])
random features: torch.Size([102, 3, 32, 32]) torch.Size([102])
random features: torch.Size([102, 3, 32, 32]) torch.Size([102])
random features: torch.Size([109, 3, 32, 32]) torch.Size([109])
random features: torch.Size([106, 3, 32, 32]) torch.Size([106])
random features: torch.Size([101, 3, 32, 32]) torch.Size([101])
all data: 1020
Local adapation with distilling: 0.0001
training loss: tensor(0.3313) feature loss: tensor(0.1397)
Local adapation with distilling: 0.0001
training loss: tensor(0.3331) feature loss: tensor(0.1430)
Local adapation with distilling: 0.0001
training loss: tensor(0.2638) feature loss: tensor(0.1207)
Local adapation with distilling: 0.0001
training loss: tensor(0.7326) feature loss: tensor(0.1237)
Local adapation with distilling: 0.0001
training loss: tensor(0.2724) feature loss: tensor(0.1208)
Local adapation with distilling: 0.0001
training loss: tensor(0.5467) feature loss: tensor(0.1308)
Local adapation with distilling: 0.0001
training loss: tensor(0.5769) feature loss: tensor(0.1447)
Local adapation with distilling: 0.0001
training loss: tensor(0.2626) feature loss: tensor(0.1201)
Local adapation with distilling: 0.0001
training loss: tensor(0.2600) feature loss: tensor(0.1166)
Local adapation with distilling: 0.0001
training loss: tensor(0.2755) feature loss: tensor(0.1376)
Global Model Acc on global data: 0.6732 length of data: 10000
-------------Round number:  62  -------------
selected users: [76, 48, 62, 80, 29, 99, 60, 89, 39, 69]
random features: torch.Size([106, 3, 32, 32]) torch.Size([106])
random features: torch.Size([95, 3, 32, 32]) torch.Size([95])
random features: torch.Size([93, 3, 32, 32]) torch.Size([93])
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([109, 3, 32, 32]) torch.Size([109])
random features: torch.Size([93, 3, 32, 32]) torch.Size([93])
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([108, 3, 32, 32]) torch.Size([108])
random features: torch.Size([103, 3, 32, 32]) torch.Size([103])
random features: torch.Size([98, 3, 32, 32]) torch.Size([98])
all data: 997
Local adapation with distilling: 0.0001
training loss: tensor(0.3166) feature loss: tensor(0.1261)
Local adapation with distilling: 0.0001
training loss: tensor(0.3515) feature loss: tensor(0.1498)
Local adapation with distilling: 0.0001
training loss: tensor(0.3379) feature loss: tensor(0.1357)
Local adapation with distilling: 0.0001
training loss: tensor(0.3127) feature loss: tensor(0.1396)
Local adapation with distilling: 0.0001
training loss: tensor(0.2486) feature loss: tensor(0.1281)
Local adapation with distilling: 0.0001
training loss: tensor(0.3368) feature loss: tensor(0.1456)
Local adapation with distilling: 0.0001
training loss: tensor(0.3176) feature loss: tensor(0.1296)
Local adapation with distilling: 0.0001
training loss: tensor(0.2585) feature loss: tensor(0.1372)
Local adapation with distilling: 0.0001
training loss: tensor(0.2917) feature loss: tensor(0.1330)
Local adapation with distilling: 0.0001
training loss: tensor(0.2782) feature loss: tensor(0.1306)
Global Model Acc on global data: 0.6739 length of data: 10000
-------------Round number:  63  -------------
selected users: [64, 59, 63, 2, 80, 20, 18, 48, 72, 51]
random features: torch.Size([98, 3, 32, 32]) torch.Size([98])
random features: torch.Size([103, 3, 32, 32]) torch.Size([103])
random features: torch.Size([101, 3, 32, 32]) torch.Size([101])
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([95, 3, 32, 32]) torch.Size([95])
random features: torch.Size([99, 3, 32, 32]) torch.Size([99])
random features: torch.Size([95, 3, 32, 32]) torch.Size([95])
random features: torch.Size([115, 3, 32, 32]) torch.Size([115])
random features: torch.Size([97, 3, 32, 32]) torch.Size([97])
all data: 995
Local adapation with distilling: 0.0001
training loss: tensor(0.4534) feature loss: tensor(0.1175)
Local adapation with distilling: 0.0001
training loss: tensor(0.2940) feature loss: tensor(0.1198)
Local adapation with distilling: 0.0001
training loss: tensor(0.2648) feature loss: tensor(0.1256)
Local adapation with distilling: 0.0001
training loss: tensor(0.2466) feature loss: tensor(0.1259)
Local adapation with distilling: 0.0001
training loss: tensor(0.2596) feature loss: tensor(0.1192)
Local adapation with distilling: 0.0001
training loss: tensor(0.3032) feature loss: tensor(0.1324)
Local adapation with distilling: 0.0001
training loss: tensor(0.2993) feature loss: tensor(0.1336)
Local adapation with distilling: 0.0001
training loss: tensor(0.3022) feature loss: tensor(0.1349)
Local adapation with distilling: 0.0001
training loss: tensor(0.3285) feature loss: tensor(0.1505)
Local adapation with distilling: 0.0001
training loss: tensor(0.3330) feature loss: tensor(0.1266)
Global Model Acc on global data: 0.668 length of data: 10000
-------------Round number:  64  -------------
selected users: [17, 22, 60, 92, 23, 19, 71, 94, 40, 49]
random features: torch.Size([107, 3, 32, 32]) torch.Size([107])
random features: torch.Size([102, 3, 32, 32]) torch.Size([102])
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([93, 3, 32, 32]) torch.Size([93])
random features: torch.Size([98, 3, 32, 32]) torch.Size([98])
random features: torch.Size([100, 3, 32, 32]) torch.Size([100])
random features: torch.Size([101, 3, 32, 32]) torch.Size([101])
random features: torch.Size([101, 3, 32, 32]) torch.Size([101])
random features: torch.Size([92, 3, 32, 32]) torch.Size([92])
random features: torch.Size([99, 3, 32, 32]) torch.Size([99])
all data: 989
Local adapation with distilling: 0.0001
training loss: tensor(0.2538) feature loss: tensor(0.1390)
Local adapation with distilling: 0.0001
training loss: tensor(0.4306) feature loss: tensor(0.1374)
Local adapation with distilling: 0.0001
training loss: tensor(0.2758) feature loss: tensor(0.1636)
Local adapation with distilling: 0.0001
training loss: tensor(0.3454) feature loss: tensor(0.1582)
Local adapation with distilling: 0.0001
training loss: tensor(0.4072) feature loss: tensor(0.1679)
Local adapation with distilling: 0.0001
training loss: tensor(0.2980) feature loss: tensor(0.1651)
Local adapation with distilling: 0.0001
training loss: tensor(0.2581) feature loss: tensor(0.1632)
Local adapation with distilling: 0.0001
training loss: tensor(0.3252) feature loss: tensor(0.1475)
Local adapation with distilling: 0.0001
training loss: tensor(0.2938) feature loss: tensor(0.1444)
Local adapation with distilling: 0.0001
training loss: tensor(0.3034) feature loss: tensor(0.1521)
Global Model Acc on global data: 0.6739 length of data: 10000
-------------Round number:  65  -------------
selected users: [37, 81, 39, 61, 76, 90, 27, 86, 28, 69]
random features: torch.Size([101, 3, 32, 32]) torch.Size([101])
random features: torch.Size([102, 3, 32, 32]) torch.Size([102])
random features: torch.Size([103, 3, 32, 32]) torch.Size([103])
random features: torch.Size([101, 3, 32, 32]) torch.Size([101])
random features: torch.Size([106, 3, 32, 32]) torch.Size([106])
random features: torch.Size([95, 3, 32, 32]) torch.Size([95])
random features: torch.Size([97, 3, 32, 32]) torch.Size([97])
random features: torch.Size([106, 3, 32, 32]) torch.Size([106])
random features: torch.Size([102, 3, 32, 32]) torch.Size([102])
random features: torch.Size([98, 3, 32, 32]) torch.Size([98])
all data: 1011
Local adapation with distilling: 0.0001
training loss: tensor(0.2450) feature loss: tensor(0.1242)
Local adapation with distilling: 0.0001
training loss: tensor(0.7882) feature loss: tensor(0.1501)
Local adapation with distilling: 0.0001
training loss: tensor(0.2973) feature loss: tensor(0.1240)
Local adapation with distilling: 0.0001
training loss: tensor(0.3167) feature loss: tensor(0.1271)
Local adapation with distilling: 0.0001
training loss: tensor(0.2643) feature loss: tensor(0.1265)
Local adapation with distilling: 0.0001
training loss: tensor(0.3284) feature loss: tensor(0.1433)
Local adapation with distilling: 0.0001
training loss: tensor(0.2682) feature loss: tensor(0.1279)
Local adapation with distilling: 0.0001
training loss: tensor(0.2563) feature loss: tensor(0.1352)
Local adapation with distilling: 0.0001
training loss: tensor(0.5256) feature loss: tensor(0.1262)
Local adapation with distilling: 0.0001
training loss: tensor(0.2452) feature loss: tensor(0.1230)
Global Model Acc on global data: 0.6771 length of data: 10000
-------------Round number:  66  -------------
selected users: [8, 93, 4, 5, 52, 41, 0, 73, 88, 68]
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([104, 3, 32, 32]) torch.Size([104])
random features: torch.Size([98, 3, 32, 32]) torch.Size([98])
random features: torch.Size([102, 3, 32, 32]) torch.Size([102])
random features: torch.Size([102, 3, 32, 32]) torch.Size([102])
random features: torch.Size([95, 3, 32, 32]) torch.Size([95])
random features: torch.Size([99, 3, 32, 32]) torch.Size([99])
random features: torch.Size([104, 3, 32, 32]) torch.Size([104])
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([103, 3, 32, 32]) torch.Size([103])
all data: 999
Local adapation with distilling: 0.0001
training loss: tensor(0.2408) feature loss: tensor(0.1258)
Local adapation with distilling: 0.0001
training loss: tensor(0.2819) feature loss: tensor(0.1393)
Local adapation with distilling: 0.0001
training loss: tensor(0.2491) feature loss: tensor(0.1089)
Local adapation with distilling: 0.0001
training loss: tensor(0.2833) feature loss: tensor(0.1122)
Local adapation with distilling: 0.0001
training loss: tensor(0.5464) feature loss: tensor(0.1092)
Local adapation with distilling: 0.0001
training loss: tensor(0.2312) feature loss: tensor(0.1114)
Local adapation with distilling: 0.0001
training loss: tensor(0.2297) feature loss: tensor(0.1223)
Local adapation with distilling: 0.0001
training loss: tensor(0.2732) feature loss: tensor(0.1332)
Local adapation with distilling: 0.0001
training loss: tensor(0.2573) feature loss: tensor(0.1357)
Local adapation with distilling: 0.0001
training loss: tensor(0.3305) feature loss: tensor(0.1291)
Global Model Acc on global data: 0.6789 length of data: 10000
save a model
-------------Round number:  67  -------------
selected users: [17, 24, 64, 93, 97, 29, 3, 70, 82, 11]
random features: torch.Size([107, 3, 32, 32]) torch.Size([107])
random features: torch.Size([98, 3, 32, 32]) torch.Size([98])
random features: torch.Size([98, 3, 32, 32]) torch.Size([98])
random features: torch.Size([104, 3, 32, 32]) torch.Size([104])
random features: torch.Size([95, 3, 32, 32]) torch.Size([95])
random features: torch.Size([109, 3, 32, 32]) torch.Size([109])
random features: torch.Size([106, 3, 32, 32]) torch.Size([106])
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([92, 3, 32, 32]) torch.Size([92])
random features: torch.Size([106, 3, 32, 32]) torch.Size([106])
all data: 1011
Local adapation with distilling: 0.0001
training loss: tensor(0.2278) feature loss: tensor(0.1447)
Local adapation with distilling: 0.0001
training loss: tensor(0.2871) feature loss: tensor(0.1464)
Local adapation with distilling: 0.0001
training loss: tensor(0.3529) feature loss: tensor(0.1385)
Local adapation with distilling: 0.0001
training loss: tensor(0.2721) feature loss: tensor(0.1387)
Local adapation with distilling: 0.0001
training loss: tensor(0.3605) feature loss: tensor(0.1529)
Local adapation with distilling: 0.0001
training loss: tensor(0.2518) feature loss: tensor(0.1568)
Local adapation with distilling: 0.0001
training loss: tensor(0.2851) feature loss: tensor(0.1400)
Local adapation with distilling: 0.0001
training loss: tensor(0.2583) feature loss: tensor(0.1476)
Local adapation with distilling: 0.0001
training loss: tensor(0.2842) feature loss: tensor(0.1582)
Local adapation with distilling: 0.0001
training loss: tensor(0.2760) feature loss: tensor(0.1422)
Global Model Acc on global data: 0.6756 length of data: 10000
-------------Round number:  68  -------------
selected users: [29, 30, 16, 5, 38, 71, 76, 94, 99, 95]
random features: torch.Size([109, 3, 32, 32]) torch.Size([109])
random features: torch.Size([95, 3, 32, 32]) torch.Size([95])
random features: torch.Size([106, 3, 32, 32]) torch.Size([106])
random features: torch.Size([102, 3, 32, 32]) torch.Size([102])
random features: torch.Size([109, 3, 32, 32]) torch.Size([109])
random features: torch.Size([101, 3, 32, 32]) torch.Size([101])
random features: torch.Size([106, 3, 32, 32]) torch.Size([106])
random features: torch.Size([101, 3, 32, 32]) torch.Size([101])
random features: torch.Size([93, 3, 32, 32]) torch.Size([93])
random features: torch.Size([100, 3, 32, 32]) torch.Size([100])
all data: 1022
Local adapation with distilling: 0.0001
training loss: tensor(0.1886) feature loss: tensor(0.1029)
Local adapation with distilling: 0.0001
training loss: tensor(0.3341) feature loss: tensor(0.1207)
Local adapation with distilling: 0.0001
training loss: tensor(0.2552) feature loss: tensor(0.1166)
Local adapation with distilling: 0.0001
training loss: tensor(0.2472) feature loss: tensor(0.0998)
Local adapation with distilling: 0.0001
training loss: tensor(0.1944) feature loss: tensor(0.1123)
Local adapation with distilling: 0.0001
training loss: tensor(0.1908) feature loss: tensor(0.1137)
Local adapation with distilling: 0.0001
training loss: tensor(0.2101) feature loss: tensor(0.1039)
Local adapation with distilling: 0.0001
training loss: tensor(0.2182) feature loss: tensor(0.1153)
Local adapation with distilling: 0.0001
training loss: tensor(0.2526) feature loss: tensor(0.1207)
Local adapation with distilling: 0.0001
training loss: tensor(0.2026) feature loss: tensor(0.1132)
Global Model Acc on global data: 0.6771 length of data: 10000
-------------Round number:  69  -------------
selected users: [72, 31, 13, 83, 33, 8, 26, 89, 64, 97]
random features: torch.Size([115, 3, 32, 32]) torch.Size([115])
random features: torch.Size([97, 3, 32, 32]) torch.Size([97])
random features: torch.Size([101, 3, 32, 32]) torch.Size([101])
random features: torch.Size([101, 3, 32, 32]) torch.Size([101])
random features: torch.Size([97, 3, 32, 32]) torch.Size([97])
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([105, 3, 32, 32]) torch.Size([105])
random features: torch.Size([108, 3, 32, 32]) torch.Size([108])
random features: torch.Size([98, 3, 32, 32]) torch.Size([98])
random features: torch.Size([95, 3, 32, 32]) torch.Size([95])
all data: 1013
Local adapation with distilling: 0.0001
training loss: tensor(0.3471) feature loss: tensor(0.1660)
Local adapation with distilling: 0.0001
training loss: tensor(0.3329) feature loss: tensor(0.1346)
Local adapation with distilling: 0.0001
training loss: tensor(0.3804) feature loss: tensor(0.1619)
Local adapation with distilling: 0.0001
training loss: tensor(0.3272) feature loss: tensor(0.1615)
Local adapation with distilling: 0.0001
training loss: tensor(0.3041) feature loss: tensor(0.1530)
Local adapation with distilling: 0.0001
training loss: tensor(0.2795) feature loss: tensor(0.1513)
Local adapation with distilling: 0.0001
training loss: tensor(0.3344) feature loss: tensor(0.1502)
Local adapation with distilling: 0.0001
training loss: tensor(0.2754) feature loss: tensor(0.1356)
Local adapation with distilling: 0.0001
training loss: tensor(0.3433) feature loss: tensor(0.1326)
Local adapation with distilling: 0.0001
training loss: tensor(0.3664) feature loss: tensor(0.1647)
Global Model Acc on global data: 0.6792 length of data: 10000
save a model
-------------Round number:  70  -------------
selected users: [81, 43, 88, 32, 50, 71, 73, 55, 42, 2]
random features: torch.Size([102, 3, 32, 32]) torch.Size([102])
random features: torch.Size([98, 3, 32, 32]) torch.Size([98])
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([99, 3, 32, 32]) torch.Size([99])
random features: torch.Size([98, 3, 32, 32]) torch.Size([98])
random features: torch.Size([101, 3, 32, 32]) torch.Size([101])
random features: torch.Size([104, 3, 32, 32]) torch.Size([104])
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([95, 3, 32, 32]) torch.Size([95])
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
all data: 985
Local adapation with distilling: 0.0001
training loss: tensor(0.7582) feature loss: tensor(0.1358)
Local adapation with distilling: 0.0001
training loss: tensor(0.2933) feature loss: tensor(0.1342)
Local adapation with distilling: 0.0001
training loss: tensor(0.2659) feature loss: tensor(0.1284)
Local adapation with distilling: 0.0001
training loss: tensor(0.3539) feature loss: tensor(0.1340)
Local adapation with distilling: 0.0001
training loss: tensor(0.2599) feature loss: tensor(0.1297)
Local adapation with distilling: 0.0001
training loss: tensor(0.2137) feature loss: tensor(0.1239)
Local adapation with distilling: 0.0001
training loss: tensor(0.2530) feature loss: tensor(0.1371)
Local adapation with distilling: 0.0001
training loss: tensor(0.2544) feature loss: tensor(0.1304)
Local adapation with distilling: 0.0001
training loss: tensor(0.2632) feature loss: tensor(0.1261)
Local adapation with distilling: 0.0001
training loss: tensor(0.2357) feature loss: tensor(0.1361)
Global Model Acc on global data: 0.6786 length of data: 10000
-------------Round number:  71  -------------
selected users: [41, 84, 98, 42, 75, 25, 60, 19, 52, 29]
random features: torch.Size([95, 3, 32, 32]) torch.Size([95])
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([95, 3, 32, 32]) torch.Size([95])
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([100, 3, 32, 32]) torch.Size([100])
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([100, 3, 32, 32]) torch.Size([100])
random features: torch.Size([102, 3, 32, 32]) torch.Size([102])
random features: torch.Size([109, 3, 32, 32]) torch.Size([109])
all data: 985
Local adapation with distilling: 0.0001
training loss: tensor(0.2289) feature loss: tensor(0.1274)
Local adapation with distilling: 0.0001
training loss: tensor(0.2773) feature loss: tensor(0.1544)
Local adapation with distilling: 0.0001
training loss: tensor(0.2389) feature loss: tensor(0.1333)
Local adapation with distilling: 0.0001
training loss: tensor(0.2349) feature loss: tensor(0.1207)
Local adapation with distilling: 0.0001
training loss: tensor(0.2638) feature loss: tensor(0.1450)
Local adapation with distilling: 0.0001
training loss: tensor(0.2715) feature loss: tensor(0.1292)
Local adapation with distilling: 0.0001
training loss: tensor(0.2512) feature loss: tensor(0.1516)
Local adapation with distilling: 0.0001
training loss: tensor(0.2463) feature loss: tensor(0.1343)
Local adapation with distilling: 0.0001
training loss: tensor(0.5343) feature loss: tensor(0.1436)
Local adapation with distilling: 0.0001
training loss: tensor(0.2275) feature loss: tensor(0.1387)
Global Model Acc on global data: 0.6803 length of data: 10000
save a model
-------------Round number:  72  -------------
selected users: [76, 82, 43, 16, 84, 95, 78, 91, 30, 22]
random features: torch.Size([106, 3, 32, 32]) torch.Size([106])
random features: torch.Size([92, 3, 32, 32]) torch.Size([92])
random features: torch.Size([98, 3, 32, 32]) torch.Size([98])
random features: torch.Size([106, 3, 32, 32]) torch.Size([106])
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([100, 3, 32, 32]) torch.Size([100])
random features: torch.Size([104, 3, 32, 32]) torch.Size([104])
random features: torch.Size([105, 3, 32, 32]) torch.Size([105])
random features: torch.Size([95, 3, 32, 32]) torch.Size([95])
random features: torch.Size([102, 3, 32, 32]) torch.Size([102])
all data: 1004
Local adapation with distilling: 0.0001
training loss: tensor(0.2357) feature loss: tensor(0.1258)
Local adapation with distilling: 0.0001
training loss: tensor(0.2696) feature loss: tensor(0.1303)
Local adapation with distilling: 0.0001
training loss: tensor(0.2515) feature loss: tensor(0.1362)
Local adapation with distilling: 0.0001
training loss: tensor(0.2664) feature loss: tensor(0.1329)
Local adapation with distilling: 0.0001
training loss: tensor(0.2501) feature loss: tensor(0.1322)
Local adapation with distilling: 0.0001
training loss: tensor(0.2306) feature loss: tensor(0.1326)
Local adapation with distilling: 0.0001
training loss: tensor(0.2637) feature loss: tensor(0.1380)
Local adapation with distilling: 0.0001
training loss: tensor(0.2649) feature loss: tensor(0.1303)
Local adapation with distilling: 0.0001
training loss: tensor(0.3360) feature loss: tensor(0.1403)
Local adapation with distilling: 0.0001
training loss: tensor(0.5918) feature loss: tensor(0.1221)
Global Model Acc on global data: 0.6778 length of data: 10000
-------------Round number:  73  -------------
selected users: [49, 14, 34, 70, 90, 35, 68, 76, 80, 9]
random features: torch.Size([99, 3, 32, 32]) torch.Size([99])
random features: torch.Size([99, 3, 32, 32]) torch.Size([99])
random features: torch.Size([95, 3, 32, 32]) torch.Size([95])
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([95, 3, 32, 32]) torch.Size([95])
random features: torch.Size([106, 3, 32, 32]) torch.Size([106])
random features: torch.Size([103, 3, 32, 32]) torch.Size([103])
random features: torch.Size([106, 3, 32, 32]) torch.Size([106])
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([102, 3, 32, 32]) torch.Size([102])
all data: 997
Local adapation with distilling: 0.0001
training loss: tensor(0.2724) feature loss: tensor(0.1196)
Local adapation with distilling: 0.0001
training loss: tensor(0.2368) feature loss: tensor(0.1243)
Local adapation with distilling: 0.0001
training loss: tensor(0.2327) feature loss: tensor(0.1133)
Local adapation with distilling: 0.0001
training loss: tensor(0.2182) feature loss: tensor(0.1132)
Local adapation with distilling: 0.0001
training loss: tensor(0.2629) feature loss: tensor(0.1230)
Local adapation with distilling: 0.0001
training loss: tensor(0.3240) feature loss: tensor(0.1187)
Local adapation with distilling: 0.0001
training loss: tensor(0.2986) feature loss: tensor(0.1255)
Local adapation with distilling: 0.0001
training loss: tensor(0.2086) feature loss: tensor(0.1095)
Local adapation with distilling: 0.0001
training loss: tensor(0.2188) feature loss: tensor(0.1129)
Local adapation with distilling: 0.0001
training loss: tensor(0.3873) feature loss: tensor(0.1198)
Global Model Acc on global data: 0.6781 length of data: 10000
-------------Round number:  74  -------------
selected users: [85, 64, 63, 80, 6, 12, 43, 17, 7, 8]
random features: torch.Size([100, 3, 32, 32]) torch.Size([100])
random features: torch.Size([98, 3, 32, 32]) torch.Size([98])
random features: torch.Size([101, 3, 32, 32]) torch.Size([101])
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([104, 3, 32, 32]) torch.Size([104])
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([98, 3, 32, 32]) torch.Size([98])
random features: torch.Size([107, 3, 32, 32]) torch.Size([107])
random features: torch.Size([95, 3, 32, 32]) torch.Size([95])
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
all data: 991
Local adapation with distilling: 0.0001
training loss: tensor(0.2372) feature loss: tensor(0.1148)
Local adapation with distilling: 0.0001
training loss: tensor(0.2597) feature loss: tensor(0.1041)
Local adapation with distilling: 0.0001
training loss: tensor(0.2270) feature loss: tensor(0.1156)
Local adapation with distilling: 0.0001
training loss: tensor(0.2050) feature loss: tensor(0.1091)
Local adapation with distilling: 0.0001
training loss: tensor(0.3345) feature loss: tensor(0.1097)
Local adapation with distilling: 0.0001
training loss: tensor(0.2935) feature loss: tensor(0.1095)
Local adapation with distilling: 0.0001
training loss: tensor(0.2204) feature loss: tensor(0.1113)
Local adapation with distilling: 0.0001
training loss: tensor(0.1997) feature loss: tensor(0.1071)
Local adapation with distilling: 0.0001
training loss: tensor(0.2805) feature loss: tensor(0.1075)
Local adapation with distilling: 0.0001
training loss: tensor(0.2179) feature loss: tensor(0.1125)
Global Model Acc on global data: 0.6775 length of data: 10000
-------------Round number:  75  -------------
selected users: [36, 7, 6, 45, 56, 54, 22, 37, 53, 68]
random features: torch.Size([101, 3, 32, 32]) torch.Size([101])
random features: torch.Size([95, 3, 32, 32]) torch.Size([95])
random features: torch.Size([104, 3, 32, 32]) torch.Size([104])
random features: torch.Size([100, 3, 32, 32]) torch.Size([100])
random features: torch.Size([110, 3, 32, 32]) torch.Size([110])
random features: torch.Size([104, 3, 32, 32]) torch.Size([104])
random features: torch.Size([102, 3, 32, 32]) torch.Size([102])
random features: torch.Size([101, 3, 32, 32]) torch.Size([101])
random features: torch.Size([115, 3, 32, 32]) torch.Size([115])
random features: torch.Size([103, 3, 32, 32]) torch.Size([103])
all data: 1035
Local adapation with distilling: 0.0001
training loss: tensor(0.3266) feature loss: tensor(0.1439)
Local adapation with distilling: 0.0001
training loss: tensor(0.2910) feature loss: tensor(0.1298)
Local adapation with distilling: 0.0001
training loss: tensor(0.3242) feature loss: tensor(0.1580)
Local adapation with distilling: 0.0001
training loss: tensor(0.2962) feature loss: tensor(0.1503)
Local adapation with distilling: 0.0001
training loss: tensor(0.2958) feature loss: tensor(0.1482)
Local adapation with distilling: 0.0001
training loss: tensor(0.4215) feature loss: tensor(0.1363)
Local adapation with distilling: 0.0001
training loss: tensor(0.6895) feature loss: tensor(0.1344)
Local adapation with distilling: 0.0001
training loss: tensor(0.2283) feature loss: tensor(0.1305)
Local adapation with distilling: 0.0001
training loss: tensor(0.2721) feature loss: tensor(0.1478)
Local adapation with distilling: 0.0001
training loss: tensor(0.3150) feature loss: tensor(0.1513)
Global Model Acc on global data: 0.6723 length of data: 10000
-------------Round number:  76  -------------
selected users: [38, 37, 32, 50, 10, 94, 19, 44, 86, 23]
random features: torch.Size([109, 3, 32, 32]) torch.Size([109])
random features: torch.Size([101, 3, 32, 32]) torch.Size([101])
random features: torch.Size([99, 3, 32, 32]) torch.Size([99])
random features: torch.Size([98, 3, 32, 32]) torch.Size([98])
random features: torch.Size([93, 3, 32, 32]) torch.Size([93])
random features: torch.Size([101, 3, 32, 32]) torch.Size([101])
random features: torch.Size([100, 3, 32, 32]) torch.Size([100])
random features: torch.Size([94, 3, 32, 32]) torch.Size([94])
random features: torch.Size([106, 3, 32, 32]) torch.Size([106])
random features: torch.Size([98, 3, 32, 32]) torch.Size([98])
all data: 999
Local adapation with distilling: 0.0001
training loss: tensor(0.2141) feature loss: tensor(0.1219)
Local adapation with distilling: 0.0001
training loss: tensor(0.1933) feature loss: tensor(0.1189)
Local adapation with distilling: 0.0001
training loss: tensor(0.3207) feature loss: tensor(0.1410)
Local adapation with distilling: 0.0001
training loss: tensor(0.2481) feature loss: tensor(0.1460)
Local adapation with distilling: 0.0001
training loss: tensor(0.2742) feature loss: tensor(0.1350)
Local adapation with distilling: 0.0001
training loss: tensor(0.2205) feature loss: tensor(0.1239)
Local adapation with distilling: 0.0001
training loss: tensor(0.2207) feature loss: tensor(0.1308)
Local adapation with distilling: 0.0001
training loss: tensor(0.2670) feature loss: tensor(0.1356)
Local adapation with distilling: 0.0001
training loss: tensor(0.2101) feature loss: tensor(0.1267)
Local adapation with distilling: 0.0001
training loss: tensor(0.3193) feature loss: tensor(0.1516)
Global Model Acc on global data: 0.6745 length of data: 10000
-------------Round number:  77  -------------
selected users: [5, 93, 41, 96, 16, 42, 81, 91, 50, 58]
random features: torch.Size([102, 3, 32, 32]) torch.Size([102])
random features: torch.Size([104, 3, 32, 32]) torch.Size([104])
random features: torch.Size([95, 3, 32, 32]) torch.Size([95])
random features: torch.Size([102, 3, 32, 32]) torch.Size([102])
random features: torch.Size([106, 3, 32, 32]) torch.Size([106])
random features: torch.Size([95, 3, 32, 32]) torch.Size([95])
random features: torch.Size([102, 3, 32, 32]) torch.Size([102])
random features: torch.Size([105, 3, 32, 32]) torch.Size([105])
random features: torch.Size([98, 3, 32, 32]) torch.Size([98])
random features: torch.Size([101, 3, 32, 32]) torch.Size([101])
all data: 1010
Local adapation with distilling: 0.0001
training loss: tensor(0.2653) feature loss: tensor(0.1290)
Local adapation with distilling: 0.0001
training loss: tensor(0.2819) feature loss: tensor(0.1413)
Local adapation with distilling: 0.0001
training loss: tensor(0.2313) feature loss: tensor(0.1220)
Local adapation with distilling: 0.0001
training loss: tensor(0.6942) feature loss: tensor(0.1412)
Local adapation with distilling: 0.0001
training loss: tensor(0.2517) feature loss: tensor(0.1300)
Local adapation with distilling: 0.0001
training loss: tensor(0.2421) feature loss: tensor(0.1219)
Local adapation with distilling: 0.0001
training loss: tensor(0.7710) feature loss: tensor(0.1405)
Local adapation with distilling: 0.0001
training loss: tensor(0.2443) feature loss: tensor(0.1253)
Local adapation with distilling: 0.0001
training loss: tensor(0.2380) feature loss: tensor(0.1352)
Local adapation with distilling: 0.0001
training loss: tensor(0.2631) feature loss: tensor(0.1302)
Global Model Acc on global data: 0.6798 length of data: 10000
-------------Round number:  78  -------------
selected users: [9, 46, 7, 63, 15, 2, 74, 31, 5, 36]
random features: torch.Size([102, 3, 32, 32]) torch.Size([102])
random features: torch.Size([103, 3, 32, 32]) torch.Size([103])
random features: torch.Size([95, 3, 32, 32]) torch.Size([95])
random features: torch.Size([101, 3, 32, 32]) torch.Size([101])
random features: torch.Size([103, 3, 32, 32]) torch.Size([103])
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([97, 3, 32, 32]) torch.Size([97])
random features: torch.Size([102, 3, 32, 32]) torch.Size([102])
random features: torch.Size([101, 3, 32, 32]) torch.Size([101])
all data: 996
Local adapation with distilling: 0.0001
training loss: tensor(0.2648) feature loss: tensor(0.1034)
Local adapation with distilling: 0.0001
training loss: tensor(0.2400) feature loss: tensor(0.1037)
Local adapation with distilling: 0.0001
training loss: tensor(0.2153) feature loss: tensor(0.0980)
Local adapation with distilling: 0.0001
training loss: tensor(0.2109) feature loss: tensor(0.1135)
Local adapation with distilling: 0.0001
training loss: tensor(0.4131) feature loss: tensor(0.1192)
Local adapation with distilling: 0.0001
training loss: tensor(0.1809) feature loss: tensor(0.1018)
Local adapation with distilling: 0.0001
training loss: tensor(0.2139) feature loss: tensor(0.1089)
Local adapation with distilling: 0.0001
training loss: tensor(0.2181) feature loss: tensor(0.0978)
Local adapation with distilling: 0.0001
training loss: tensor(0.2016) feature loss: tensor(0.1024)
Local adapation with distilling: 0.0001
training loss: tensor(0.2189) feature loss: tensor(0.1128)
Global Model Acc on global data: 0.6806 length of data: 10000
save a model
-------------Round number:  79  -------------
selected users: [68, 18, 86, 60, 56, 32, 30, 24, 45, 92]
random features: torch.Size([103, 3, 32, 32]) torch.Size([103])
random features: torch.Size([99, 3, 32, 32]) torch.Size([99])
random features: torch.Size([106, 3, 32, 32]) torch.Size([106])
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([110, 3, 32, 32]) torch.Size([110])
random features: torch.Size([99, 3, 32, 32]) torch.Size([99])
random features: torch.Size([95, 3, 32, 32]) torch.Size([95])
random features: torch.Size([98, 3, 32, 32]) torch.Size([98])
random features: torch.Size([100, 3, 32, 32]) torch.Size([100])
random features: torch.Size([93, 3, 32, 32]) torch.Size([93])
all data: 999
Local adapation with distilling: 0.0001
training loss: tensor(0.2813) feature loss: tensor(0.1148)
Local adapation with distilling: 0.0001
training loss: tensor(0.2583) feature loss: tensor(0.1289)
Local adapation with distilling: 0.0001
training loss: tensor(0.1958) feature loss: tensor(0.1187)
Local adapation with distilling: 0.0001
training loss: tensor(0.2196) feature loss: tensor(0.1233)
Local adapation with distilling: 0.0001
training loss: tensor(0.2243) feature loss: tensor(0.1122)
Local adapation with distilling: 0.0001
training loss: tensor(0.2759) feature loss: tensor(0.1249)
Local adapation with distilling: 0.0001
training loss: tensor(0.2723) feature loss: tensor(0.1271)
Local adapation with distilling: 0.0001
training loss: tensor(0.2207) feature loss: tensor(0.1126)
Local adapation with distilling: 0.0001
training loss: tensor(0.2154) feature loss: tensor(0.1112)
Local adapation with distilling: 0.0001
training loss: tensor(0.2643) feature loss: tensor(0.1127)
Global Model Acc on global data: 0.6805 length of data: 10000
-------------Round number:  80  -------------
selected users: [37, 65, 95, 53, 66, 30, 73, 85, 45, 36]
random features: torch.Size([101, 3, 32, 32]) torch.Size([101])
random features: torch.Size([99, 3, 32, 32]) torch.Size([99])
random features: torch.Size([100, 3, 32, 32]) torch.Size([100])
random features: torch.Size([115, 3, 32, 32]) torch.Size([115])
random features: torch.Size([108, 3, 32, 32]) torch.Size([108])
random features: torch.Size([95, 3, 32, 32]) torch.Size([95])
random features: torch.Size([104, 3, 32, 32]) torch.Size([104])
random features: torch.Size([100, 3, 32, 32]) torch.Size([100])
random features: torch.Size([100, 3, 32, 32]) torch.Size([100])
random features: torch.Size([101, 3, 32, 32]) torch.Size([101])
all data: 1023
Local adapation with distilling: 0.0001
training loss: tensor(0.2049) feature loss: tensor(0.1201)
Local adapation with distilling: 0.0001
training loss: tensor(0.2946) feature loss: tensor(0.1274)
Local adapation with distilling: 0.0001
training loss: tensor(0.2094) feature loss: tensor(0.1201)
Local adapation with distilling: 0.0001
training loss: tensor(0.2226) feature loss: tensor(0.1224)
Local adapation with distilling: 0.0001
training loss: tensor(0.3120) feature loss: tensor(0.1253)
Local adapation with distilling: 0.0001
training loss: tensor(0.2752) feature loss: tensor(0.1341)
Local adapation with distilling: 0.0001
training loss: tensor(0.2476) feature loss: tensor(0.1400)
Local adapation with distilling: 0.0001
training loss: tensor(0.2476) feature loss: tensor(0.1256)
Local adapation with distilling: 0.0001
training loss: tensor(0.2124) feature loss: tensor(0.1220)
Local adapation with distilling: 0.0001
training loss: tensor(0.2476) feature loss: tensor(0.1343)
Global Model Acc on global data: 0.6811 length of data: 10000
save a model
-------------Round number:  81  -------------
selected users: [73, 89, 41, 78, 51, 21, 30, 69, 8, 5]
random features: torch.Size([104, 3, 32, 32]) torch.Size([104])
random features: torch.Size([108, 3, 32, 32]) torch.Size([108])
random features: torch.Size([95, 3, 32, 32]) torch.Size([95])
random features: torch.Size([104, 3, 32, 32]) torch.Size([104])
random features: torch.Size([97, 3, 32, 32]) torch.Size([97])
random features: torch.Size([94, 3, 32, 32]) torch.Size([94])
random features: torch.Size([95, 3, 32, 32]) torch.Size([95])
random features: torch.Size([98, 3, 32, 32]) torch.Size([98])
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([102, 3, 32, 32]) torch.Size([102])
all data: 993
Local adapation with distilling: 0.0001
training loss: tensor(0.2125) feature loss: tensor(0.1316)
Local adapation with distilling: 0.0001
training loss: tensor(0.1968) feature loss: tensor(0.1154)
Local adapation with distilling: 0.0001
training loss: tensor(0.1910) feature loss: tensor(0.1149)
Local adapation with distilling: 0.0001
training loss: tensor(0.2329) feature loss: tensor(0.1377)
Local adapation with distilling: 0.0001
training loss: tensor(0.2477) feature loss: tensor(0.1194)
Local adapation with distilling: 0.0001
training loss: tensor(0.2800) feature loss: tensor(0.1202)
Local adapation with distilling: 0.0001
training loss: tensor(0.2358) feature loss: tensor(0.1249)
Local adapation with distilling: 0.0001
training loss: tensor(0.2240) feature loss: tensor(0.1237)
Local adapation with distilling: 0.0001
training loss: tensor(0.1992) feature loss: tensor(0.1280)
Local adapation with distilling: 0.0001
training loss: tensor(0.2000) feature loss: tensor(0.1185)
Global Model Acc on global data: 0.6806 length of data: 10000
-------------Round number:  82  -------------
selected users: [72, 33, 58, 2, 55, 84, 54, 75, 28, 40]
random features: torch.Size([115, 3, 32, 32]) torch.Size([115])
random features: torch.Size([97, 3, 32, 32]) torch.Size([97])
random features: torch.Size([101, 3, 32, 32]) torch.Size([101])
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([104, 3, 32, 32]) torch.Size([104])
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([102, 3, 32, 32]) torch.Size([102])
random features: torch.Size([92, 3, 32, 32]) torch.Size([92])
all data: 995
Local adapation with distilling: 0.0001
training loss: tensor(0.2596) feature loss: tensor(0.1470)
Local adapation with distilling: 0.0001
training loss: tensor(0.2487) feature loss: tensor(0.1375)
Local adapation with distilling: 0.0001
training loss: tensor(0.2638) feature loss: tensor(0.1527)
Local adapation with distilling: 0.0001
training loss: tensor(0.2096) feature loss: tensor(0.1232)
Local adapation with distilling: 0.0001
training loss: tensor(0.2307) feature loss: tensor(0.1237)
Local adapation with distilling: 0.0001
training loss: tensor(0.2637) feature loss: tensor(0.1287)
Local adapation with distilling: 0.0001
training loss: tensor(0.3408) feature loss: tensor(0.1221)
Local adapation with distilling: 0.0001
training loss: tensor(0.2300) feature loss: tensor(0.1265)
Local adapation with distilling: 0.0001
training loss: tensor(0.3618) feature loss: tensor(0.1410)
Local adapation with distilling: 0.0001
training loss: tensor(0.2499) feature loss: tensor(0.1390)
Global Model Acc on global data: 0.6757 length of data: 10000
-------------Round number:  83  -------------
selected users: [6, 65, 95, 84, 61, 12, 30, 69, 35, 1]
random features: torch.Size([104, 3, 32, 32]) torch.Size([104])
random features: torch.Size([99, 3, 32, 32]) torch.Size([99])
random features: torch.Size([100, 3, 32, 32]) torch.Size([100])
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([101, 3, 32, 32]) torch.Size([101])
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([95, 3, 32, 32]) torch.Size([95])
random features: torch.Size([98, 3, 32, 32]) torch.Size([98])
random features: torch.Size([106, 3, 32, 32]) torch.Size([106])
random features: torch.Size([104, 3, 32, 32]) torch.Size([104])
all data: 999
Local adapation with distilling: 0.0001
training loss: tensor(0.3095) feature loss: tensor(0.1285)
Local adapation with distilling: 0.0001
training loss: tensor(0.2997) feature loss: tensor(0.1498)
Local adapation with distilling: 0.0001
training loss: tensor(0.2261) feature loss: tensor(0.1328)
Local adapation with distilling: 0.0001
training loss: tensor(0.2586) feature loss: tensor(0.1378)
Local adapation with distilling: 0.0001
training loss: tensor(0.2854) feature loss: tensor(0.1380)
Local adapation with distilling: 0.0001
training loss: tensor(0.2873) feature loss: tensor(0.1500)
Local adapation with distilling: 0.0001
training loss: tensor(0.2727) feature loss: tensor(0.1396)
Local adapation with distilling: 0.0001
training loss: tensor(0.2543) feature loss: tensor(0.1372)
Local adapation with distilling: 0.0001
training loss: tensor(0.3340) feature loss: tensor(0.1404)
Local adapation with distilling: 0.0001
training loss: tensor(0.2974) feature loss: tensor(0.1368)
Global Model Acc on global data: 0.6704 length of data: 10000
-------------Round number:  84  -------------
selected users: [94, 55, 80, 1, 90, 11, 32, 8, 6, 82]
random features: torch.Size([101, 3, 32, 32]) torch.Size([101])
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([104, 3, 32, 32]) torch.Size([104])
random features: torch.Size([95, 3, 32, 32]) torch.Size([95])
random features: torch.Size([106, 3, 32, 32]) torch.Size([106])
random features: torch.Size([99, 3, 32, 32]) torch.Size([99])
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([104, 3, 32, 32]) torch.Size([104])
random features: torch.Size([92, 3, 32, 32]) torch.Size([92])
all data: 989
Local adapation with distilling: 0.0001
training loss: tensor(0.2504) feature loss: tensor(0.1518)
Local adapation with distilling: 0.0001
training loss: tensor(0.2276) feature loss: tensor(0.1504)
Local adapation with distilling: 0.0001
training loss: tensor(0.2332) feature loss: tensor(0.1677)
Local adapation with distilling: 0.0001
training loss: tensor(0.2798) feature loss: tensor(0.1439)
Local adapation with distilling: 0.0001
training loss: tensor(0.2678) feature loss: tensor(0.1823)
Local adapation with distilling: 0.0001
training loss: tensor(0.2543) feature loss: tensor(0.1452)
Local adapation with distilling: 0.0001
training loss: tensor(0.2649) feature loss: tensor(0.1504)
Local adapation with distilling: 0.0001
training loss: tensor(0.2221) feature loss: tensor(0.1471)
Local adapation with distilling: 0.0001
training loss: tensor(0.2767) feature loss: tensor(0.1407)
Local adapation with distilling: 0.0001
training loss: tensor(0.2558) feature loss: tensor(0.1420)
Global Model Acc on global data: 0.6765 length of data: 10000
-------------Round number:  85  -------------
selected users: [81, 25, 40, 87, 41, 23, 10, 89, 50, 54]
random features: torch.Size([102, 3, 32, 32]) torch.Size([102])
random features: torch.Size([100, 3, 32, 32]) torch.Size([100])
random features: torch.Size([92, 3, 32, 32]) torch.Size([92])
random features: torch.Size([95, 3, 32, 32]) torch.Size([95])
random features: torch.Size([95, 3, 32, 32]) torch.Size([95])
random features: torch.Size([98, 3, 32, 32]) torch.Size([98])
random features: torch.Size([93, 3, 32, 32]) torch.Size([93])
random features: torch.Size([108, 3, 32, 32]) torch.Size([108])
random features: torch.Size([98, 3, 32, 32]) torch.Size([98])
random features: torch.Size([104, 3, 32, 32]) torch.Size([104])
all data: 985
Local adapation with distilling: 0.0001
training loss: tensor(0.9482) feature loss: tensor(0.1393)
Local adapation with distilling: 0.0001
training loss: tensor(0.2277) feature loss: tensor(0.1205)
Local adapation with distilling: 0.0001
training loss: tensor(0.2374) feature loss: tensor(0.1291)
Local adapation with distilling: 0.0001
training loss: tensor(0.2708) feature loss: tensor(0.1448)
Local adapation with distilling: 0.0001
training loss: tensor(0.2003) feature loss: tensor(0.1196)
Local adapation with distilling: 0.0001
training loss: tensor(0.2880) feature loss: tensor(0.1558)
Local adapation with distilling: 0.0001
training loss: tensor(0.2591) feature loss: tensor(0.1272)
Local adapation with distilling: 0.0001
training loss: tensor(0.2121) feature loss: tensor(0.1324)
Local adapation with distilling: 0.0001
training loss: tensor(0.2166) feature loss: tensor(0.1377)
Local adapation with distilling: 0.0001
training loss: tensor(0.3027) feature loss: tensor(0.1291)
Global Model Acc on global data: 0.6778 length of data: 10000
-------------Round number:  86  -------------
selected users: [69, 74, 34, 68, 42, 0, 32, 88, 8, 3]
random features: torch.Size([98, 3, 32, 32]) torch.Size([98])
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([95, 3, 32, 32]) torch.Size([95])
random features: torch.Size([103, 3, 32, 32]) torch.Size([103])
random features: torch.Size([95, 3, 32, 32]) torch.Size([95])
random features: torch.Size([99, 3, 32, 32]) torch.Size([99])
random features: torch.Size([99, 3, 32, 32]) torch.Size([99])
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([106, 3, 32, 32]) torch.Size([106])
all data: 983
Local adapation with distilling: 0.0001
training loss: tensor(0.1891) feature loss: tensor(0.1276)
Local adapation with distilling: 0.0001
training loss: tensor(0.2005) feature loss: tensor(0.1293)
Local adapation with distilling: 0.0001
training loss: tensor(0.1804) feature loss: tensor(0.1105)
Local adapation with distilling: 0.0001
training loss: tensor(0.2385) feature loss: tensor(0.1265)
Local adapation with distilling: 0.0001
training loss: tensor(0.1876) feature loss: tensor(0.1091)
Local adapation with distilling: 0.0001
training loss: tensor(0.2036) feature loss: tensor(0.1192)
Local adapation with distilling: 0.0001
training loss: tensor(0.1903) feature loss: tensor(0.1164)
Local adapation with distilling: 0.0001
training loss: tensor(0.1981) feature loss: tensor(0.1388)
Local adapation with distilling: 0.0001
training loss: tensor(0.1734) feature loss: tensor(0.1243)
Local adapation with distilling: 0.0001
training loss: tensor(0.1951) feature loss: tensor(0.1135)
Global Model Acc on global data: 0.6839 length of data: 10000
save a model
-------------Round number:  87  -------------
selected users: [16, 81, 85, 32, 39, 25, 26, 29, 65, 7]
random features: torch.Size([106, 3, 32, 32]) torch.Size([106])
random features: torch.Size([102, 3, 32, 32]) torch.Size([102])
random features: torch.Size([100, 3, 32, 32]) torch.Size([100])
random features: torch.Size([99, 3, 32, 32]) torch.Size([99])
random features: torch.Size([103, 3, 32, 32]) torch.Size([103])
random features: torch.Size([100, 3, 32, 32]) torch.Size([100])
random features: torch.Size([105, 3, 32, 32]) torch.Size([105])
random features: torch.Size([109, 3, 32, 32]) torch.Size([109])
random features: torch.Size([99, 3, 32, 32]) torch.Size([99])
random features: torch.Size([95, 3, 32, 32]) torch.Size([95])
all data: 1018
Local adapation with distilling: 0.0001
training loss: tensor(0.2286) feature loss: tensor(0.1267)
Local adapation with distilling: 0.0001
training loss: tensor(0.5900) feature loss: tensor(0.1148)
Local adapation with distilling: 0.0001
training loss: tensor(0.2153) feature loss: tensor(0.1260)
Local adapation with distilling: 0.0001
training loss: tensor(0.2039) feature loss: tensor(0.1074)
Local adapation with distilling: 0.0001
training loss: tensor(0.2252) feature loss: tensor(0.1162)
Local adapation with distilling: 0.0001
training loss: tensor(0.2103) feature loss: tensor(0.1204)
Local adapation with distilling: 0.0001
training loss: tensor(0.2292) feature loss: tensor(0.1280)
Local adapation with distilling: 0.0001
training loss: tensor(0.1886) feature loss: tensor(0.1179)
Local adapation with distilling: 0.0001
training loss: tensor(0.2449) feature loss: tensor(0.1265)
Local adapation with distilling: 0.0001
training loss: tensor(0.2305) feature loss: tensor(0.1103)
Global Model Acc on global data: 0.6801 length of data: 10000
-------------Round number:  88  -------------
selected users: [95, 53, 43, 84, 2, 74, 55, 31, 54, 97]
random features: torch.Size([100, 3, 32, 32]) torch.Size([100])
random features: torch.Size([115, 3, 32, 32]) torch.Size([115])
random features: torch.Size([98, 3, 32, 32]) torch.Size([98])
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([97, 3, 32, 32]) torch.Size([97])
random features: torch.Size([104, 3, 32, 32]) torch.Size([104])
random features: torch.Size([95, 3, 32, 32]) torch.Size([95])
all data: 993
Local adapation with distilling: 0.0001
training loss: tensor(0.1776) feature loss: tensor(0.1187)
Local adapation with distilling: 0.0001
training loss: tensor(0.1734) feature loss: tensor(0.1152)
Local adapation with distilling: 0.0001
training loss: tensor(0.1946) feature loss: tensor(0.1166)
Local adapation with distilling: 0.0001
training loss: tensor(0.1948) feature loss: tensor(0.1182)
Local adapation with distilling: 0.0001
training loss: tensor(0.1749) feature loss: tensor(0.1223)
Local adapation with distilling: 0.0001
training loss: tensor(0.1858) feature loss: tensor(0.1113)
Local adapation with distilling: 0.0001
training loss: tensor(0.1795) feature loss: tensor(0.1155)
Local adapation with distilling: 0.0001
training loss: tensor(0.1980) feature loss: tensor(0.1088)
Local adapation with distilling: 0.0001
training loss: tensor(0.2600) feature loss: tensor(0.1100)
Local adapation with distilling: 0.0001
training loss: tensor(0.2522) feature loss: tensor(0.1202)
Global Model Acc on global data: 0.6802 length of data: 10000
-------------Round number:  89  -------------
selected users: [65, 21, 87, 6, 46, 74, 44, 60, 72, 5]
random features: torch.Size([99, 3, 32, 32]) torch.Size([99])
random features: torch.Size([94, 3, 32, 32]) torch.Size([94])
random features: torch.Size([95, 3, 32, 32]) torch.Size([95])
random features: torch.Size([104, 3, 32, 32]) torch.Size([104])
random features: torch.Size([103, 3, 32, 32]) torch.Size([103])
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([94, 3, 32, 32]) torch.Size([94])
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([115, 3, 32, 32]) torch.Size([115])
random features: torch.Size([102, 3, 32, 32]) torch.Size([102])
all data: 998
Local adapation with distilling: 0.0001
training loss: tensor(0.2366) feature loss: tensor(0.1122)
Local adapation with distilling: 0.0001
training loss: tensor(0.2549) feature loss: tensor(0.1220)
Local adapation with distilling: 0.0001
training loss: tensor(0.2555) feature loss: tensor(0.1110)
Local adapation with distilling: 0.0001
training loss: tensor(0.2207) feature loss: tensor(0.1059)
Local adapation with distilling: 0.0001
training loss: tensor(0.2595) feature loss: tensor(0.1145)
Local adapation with distilling: 0.0001
training loss: tensor(0.2055) feature loss: tensor(0.1203)
Local adapation with distilling: 0.0001
training loss: tensor(0.2400) feature loss: tensor(0.1099)
Local adapation with distilling: 0.0001
training loss: tensor(0.2127) feature loss: tensor(0.1175)
Local adapation with distilling: 0.0001
training loss: tensor(0.2427) feature loss: tensor(0.1299)
Local adapation with distilling: 0.0001
training loss: tensor(0.2228) feature loss: tensor(0.1131)
Global Model Acc on global data: 0.6778 length of data: 10000
-------------Round number:  90  -------------
selected users: [25, 85, 96, 89, 65, 94, 5, 35, 36, 92]
random features: torch.Size([100, 3, 32, 32]) torch.Size([100])
random features: torch.Size([100, 3, 32, 32]) torch.Size([100])
random features: torch.Size([102, 3, 32, 32]) torch.Size([102])
random features: torch.Size([108, 3, 32, 32]) torch.Size([108])
random features: torch.Size([99, 3, 32, 32]) torch.Size([99])
random features: torch.Size([101, 3, 32, 32]) torch.Size([101])
random features: torch.Size([102, 3, 32, 32]) torch.Size([102])
random features: torch.Size([106, 3, 32, 32]) torch.Size([106])
random features: torch.Size([101, 3, 32, 32]) torch.Size([101])
random features: torch.Size([93, 3, 32, 32]) torch.Size([93])
all data: 1012
Local adapation with distilling: 0.0001
training loss: tensor(0.2290) feature loss: tensor(0.1233)
Local adapation with distilling: 0.0001
training loss: tensor(0.2257) feature loss: tensor(0.1298)
Local adapation with distilling: 0.0001
training loss: tensor(0.6142) feature loss: tensor(0.1386)
Local adapation with distilling: 0.0001
training loss: tensor(0.2164) feature loss: tensor(0.1244)
Local adapation with distilling: 0.0001
training loss: tensor(0.2286) feature loss: tensor(0.1315)
Local adapation with distilling: 0.0001
training loss: tensor(0.2245) feature loss: tensor(0.1260)
Local adapation with distilling: 0.0001
training loss: tensor(0.2163) feature loss: tensor(0.1215)
Local adapation with distilling: 0.0001
training loss: tensor(0.2992) feature loss: tensor(0.1243)
Local adapation with distilling: 0.0001
training loss: tensor(0.2519) feature loss: tensor(0.1417)
Local adapation with distilling: 0.0001
training loss: tensor(0.2573) feature loss: tensor(0.1318)
Global Model Acc on global data: 0.6776 length of data: 10000
-------------Round number:  91  -------------
selected users: [75, 25, 3, 52, 78, 54, 59, 26, 62, 97]
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([100, 3, 32, 32]) torch.Size([100])
random features: torch.Size([106, 3, 32, 32]) torch.Size([106])
random features: torch.Size([102, 3, 32, 32]) torch.Size([102])
random features: torch.Size([104, 3, 32, 32]) torch.Size([104])
random features: torch.Size([104, 3, 32, 32]) torch.Size([104])
random features: torch.Size([103, 3, 32, 32]) torch.Size([103])
random features: torch.Size([105, 3, 32, 32]) torch.Size([105])
random features: torch.Size([93, 3, 32, 32]) torch.Size([93])
random features: torch.Size([95, 3, 32, 32]) torch.Size([95])
all data: 1008
Local adapation with distilling: 0.0001
training loss: tensor(0.1989) feature loss: tensor(0.1116)
Local adapation with distilling: 0.0001
training loss: tensor(0.1764) feature loss: tensor(0.1036)
Local adapation with distilling: 0.0001
training loss: tensor(0.1977) feature loss: tensor(0.1069)
Local adapation with distilling: 0.0001
training loss: tensor(0.3864) feature loss: tensor(0.1124)
Local adapation with distilling: 0.0001
training loss: tensor(0.2381) feature loss: tensor(0.1231)
Local adapation with distilling: 0.0001
training loss: tensor(0.2316) feature loss: tensor(0.1106)
Local adapation with distilling: 0.0001
training loss: tensor(0.3425) feature loss: tensor(0.1050)
Local adapation with distilling: 0.0001
training loss: tensor(0.2125) feature loss: tensor(0.1204)
Local adapation with distilling: 0.0001
training loss: tensor(0.2302) feature loss: tensor(0.1083)
Local adapation with distilling: 0.0001
training loss: tensor(0.2383) feature loss: tensor(0.1179)
Global Model Acc on global data: 0.6717 length of data: 10000
-------------Round number:  92  -------------
selected users: [25, 99, 73, 61, 66, 36, 23, 83, 77, 6]
random features: torch.Size([100, 3, 32, 32]) torch.Size([100])
random features: torch.Size([93, 3, 32, 32]) torch.Size([93])
random features: torch.Size([104, 3, 32, 32]) torch.Size([104])
random features: torch.Size([101, 3, 32, 32]) torch.Size([101])
random features: torch.Size([108, 3, 32, 32]) torch.Size([108])
random features: torch.Size([101, 3, 32, 32]) torch.Size([101])
random features: torch.Size([98, 3, 32, 32]) torch.Size([98])
random features: torch.Size([101, 3, 32, 32]) torch.Size([101])
random features: torch.Size([92, 3, 32, 32]) torch.Size([92])
random features: torch.Size([104, 3, 32, 32]) torch.Size([104])
all data: 1002
Local adapation with distilling: 0.0001
training loss: tensor(0.2418) feature loss: tensor(0.1396)
Local adapation with distilling: 0.0001
training loss: tensor(0.3055) feature loss: tensor(0.1334)
Local adapation with distilling: 0.0001
training loss: tensor(0.2593) feature loss: tensor(0.1509)
Local adapation with distilling: 0.0001
training loss: tensor(0.2876) feature loss: tensor(0.1410)
Local adapation with distilling: 0.0001
training loss: tensor(0.3060) feature loss: tensor(0.1421)
Local adapation with distilling: 0.0001
training loss: tensor(0.2660) feature loss: tensor(0.1406)
Local adapation with distilling: 0.0001
training loss: tensor(0.3078) feature loss: tensor(0.1435)
Local adapation with distilling: 0.0001
training loss: tensor(0.3017) feature loss: tensor(0.1565)
Local adapation with distilling: 0.0001
training loss: tensor(0.3848) feature loss: tensor(0.1490)
Local adapation with distilling: 0.0001
training loss: tensor(0.2700) feature loss: tensor(0.1297)
Global Model Acc on global data: 0.6702 length of data: 10000
-------------Round number:  93  -------------
selected users: [75, 82, 56, 27, 42, 35, 1, 97, 66, 61]
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([92, 3, 32, 32]) torch.Size([92])
random features: torch.Size([110, 3, 32, 32]) torch.Size([110])
random features: torch.Size([97, 3, 32, 32]) torch.Size([97])
random features: torch.Size([95, 3, 32, 32]) torch.Size([95])
random features: torch.Size([106, 3, 32, 32]) torch.Size([106])
random features: torch.Size([104, 3, 32, 32]) torch.Size([104])
random features: torch.Size([95, 3, 32, 32]) torch.Size([95])
random features: torch.Size([108, 3, 32, 32]) torch.Size([108])
random features: torch.Size([101, 3, 32, 32]) torch.Size([101])
all data: 1004
Local adapation with distilling: 0.0001
training loss: tensor(0.2473) feature loss: tensor(0.1809)
Local adapation with distilling: 0.0001
training loss: tensor(0.2500) feature loss: tensor(0.1794)
Local adapation with distilling: 0.0001
training loss: tensor(0.2606) feature loss: tensor(0.1639)
Local adapation with distilling: 0.0001
training loss: tensor(0.2992) feature loss: tensor(0.1545)
Local adapation with distilling: 0.0001
training loss: tensor(0.2538) feature loss: tensor(0.1614)
Local adapation with distilling: 0.0001
training loss: tensor(0.2841) feature loss: tensor(0.1663)
Local adapation with distilling: 0.0001
training loss: tensor(0.2847) feature loss: tensor(0.1920)
Local adapation with distilling: 0.0001
training loss: tensor(0.2781) feature loss: tensor(0.1641)
Local adapation with distilling: 0.0001
training loss: tensor(0.2835) feature loss: tensor(0.1934)
Local adapation with distilling: 0.0001
training loss: tensor(0.2596) feature loss: tensor(0.1795)
Global Model Acc on global data: 0.6764 length of data: 10000
-------------Round number:  94  -------------
selected users: [13, 73, 5, 18, 99, 48, 23, 4, 35, 17]
random features: torch.Size([101, 3, 32, 32]) torch.Size([101])
random features: torch.Size([104, 3, 32, 32]) torch.Size([104])
random features: torch.Size([102, 3, 32, 32]) torch.Size([102])
random features: torch.Size([99, 3, 32, 32]) torch.Size([99])
random features: torch.Size([93, 3, 32, 32]) torch.Size([93])
random features: torch.Size([95, 3, 32, 32]) torch.Size([95])
random features: torch.Size([98, 3, 32, 32]) torch.Size([98])
random features: torch.Size([98, 3, 32, 32]) torch.Size([98])
random features: torch.Size([106, 3, 32, 32]) torch.Size([106])
random features: torch.Size([107, 3, 32, 32]) torch.Size([107])
all data: 1003
Local adapation with distilling: 0.0001
training loss: tensor(0.2600) feature loss: tensor(0.1368)
Local adapation with distilling: 0.0001
training loss: tensor(0.2025) feature loss: tensor(0.1231)
Local adapation with distilling: 0.0001
training loss: tensor(0.1952) feature loss: tensor(0.1154)
Local adapation with distilling: 0.0001
training loss: tensor(0.2668) feature loss: tensor(0.1249)
Local adapation with distilling: 0.0001
training loss: tensor(0.2302) feature loss: tensor(0.1163)
Local adapation with distilling: 0.0001
training loss: tensor(0.2762) feature loss: tensor(0.1288)
Local adapation with distilling: 0.0001
training loss: tensor(0.2299) feature loss: tensor(0.1194)
Local adapation with distilling: 0.0001
training loss: tensor(0.2331) feature loss: tensor(0.1163)
Local adapation with distilling: 0.0001
training loss: tensor(0.1989) feature loss: tensor(0.1171)
Local adapation with distilling: 0.0001
training loss: tensor(0.1834) feature loss: tensor(0.1108)
Global Model Acc on global data: 0.6824 length of data: 10000
-------------Round number:  95  -------------
selected users: [88, 9, 1, 60, 95, 26, 45, 71, 44, 21]
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([102, 3, 32, 32]) torch.Size([102])
random features: torch.Size([104, 3, 32, 32]) torch.Size([104])
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([100, 3, 32, 32]) torch.Size([100])
random features: torch.Size([105, 3, 32, 32]) torch.Size([105])
random features: torch.Size([100, 3, 32, 32]) torch.Size([100])
random features: torch.Size([101, 3, 32, 32]) torch.Size([101])
random features: torch.Size([94, 3, 32, 32]) torch.Size([94])
random features: torch.Size([94, 3, 32, 32]) torch.Size([94])
all data: 992
Local adapation with distilling: 0.0001
training loss: tensor(0.1775) feature loss: tensor(0.1097)
Local adapation with distilling: 0.0001
training loss: tensor(0.5061) feature loss: tensor(0.1081)
Local adapation with distilling: 0.0001
training loss: tensor(0.1889) feature loss: tensor(0.1099)
Local adapation with distilling: 0.0001
training loss: tensor(0.1710) feature loss: tensor(0.0988)
Local adapation with distilling: 0.0001
training loss: tensor(0.1453) feature loss: tensor(0.1039)
Local adapation with distilling: 0.0001
training loss: tensor(0.1833) feature loss: tensor(0.1179)
Local adapation with distilling: 0.0001
training loss: tensor(0.1679) feature loss: tensor(0.1106)
Local adapation with distilling: 0.0001
training loss: tensor(0.1476) feature loss: tensor(0.1101)
Local adapation with distilling: 0.0001
training loss: tensor(0.1729) feature loss: tensor(0.1092)
Local adapation with distilling: 0.0001
training loss: tensor(0.1822) feature loss: tensor(0.1117)
Global Model Acc on global data: 0.6739 length of data: 10000
-------------Round number:  96  -------------
selected users: [41, 28, 52, 15, 87, 17, 75, 42, 45, 49]
random features: torch.Size([95, 3, 32, 32]) torch.Size([95])
random features: torch.Size([102, 3, 32, 32]) torch.Size([102])
random features: torch.Size([102, 3, 32, 32]) torch.Size([102])
random features: torch.Size([103, 3, 32, 32]) torch.Size([103])
random features: torch.Size([95, 3, 32, 32]) torch.Size([95])
random features: torch.Size([107, 3, 32, 32]) torch.Size([107])
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([95, 3, 32, 32]) torch.Size([95])
random features: torch.Size([100, 3, 32, 32]) torch.Size([100])
random features: torch.Size([99, 3, 32, 32]) torch.Size([99])
all data: 994
Local adapation with distilling: 0.0001
training loss: tensor(0.1573) feature loss: tensor(0.0999)
Local adapation with distilling: 0.0001
training loss: tensor(0.2623) feature loss: tensor(0.1118)
Local adapation with distilling: 0.0001
training loss: tensor(0.4595) feature loss: tensor(0.1068)
Local adapation with distilling: 0.0001
training loss: tensor(0.1957) feature loss: tensor(0.1124)
Local adapation with distilling: 0.0001
training loss: tensor(0.2238) feature loss: tensor(0.1074)
Local adapation with distilling: 0.0001
training loss: tensor(0.1453) feature loss: tensor(0.0998)
Local adapation with distilling: 0.0001
training loss: tensor(0.1528) feature loss: tensor(0.1053)
Local adapation with distilling: 0.0001
training loss: tensor(0.1547) feature loss: tensor(0.1010)
Local adapation with distilling: 0.0001
training loss: tensor(0.1490) feature loss: tensor(0.1016)
Local adapation with distilling: 0.0001
training loss: tensor(0.1920) feature loss: tensor(0.1131)
Global Model Acc on global data: 0.6777 length of data: 10000
-------------Round number:  97  -------------
selected users: [31, 43, 64, 56, 85, 2, 70, 21, 34, 50]
random features: torch.Size([97, 3, 32, 32]) torch.Size([97])
random features: torch.Size([98, 3, 32, 32]) torch.Size([98])
random features: torch.Size([98, 3, 32, 32]) torch.Size([98])
random features: torch.Size([110, 3, 32, 32]) torch.Size([110])
random features: torch.Size([100, 3, 32, 32]) torch.Size([100])
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([96, 3, 32, 32]) torch.Size([96])
random features: torch.Size([94, 3, 32, 32]) torch.Size([94])
random features: torch.Size([95, 3, 32, 32]) torch.Size([95])
random features: torch.Size([98, 3, 32, 32]) torch.Size([98])
all data: 982
Local adapation with distilling: 0.0001
