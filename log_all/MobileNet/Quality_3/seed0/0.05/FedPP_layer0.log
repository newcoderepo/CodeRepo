nohup: ignoring input
================================================================================
Summary of training process:
Dataset                : Cifar10
Batch size             : 64
Learing rate           : 0.001
Number of total clients: 100
Split method           : quantity
Split parameter        : 3.0
Clients per round      : 10
Number of global rounds: 100
Number of local rounds : 10
Feature from layer     : 0
Feature percentage     : 0.05
Local training loss    : CE_CE_KL
Loss of beta           : 1.0
Algorithm              : FedFea
Modelname              : MOBNET
Mode                   : training
Seed                   : 0
================================================================================
Files already downloaded and verified
Files already downloaded and verified
Class frequencies:
client,class0,class1,class2,class3,class4,class5,class6,class7,class8,class9,Amount
Client   0,0.298,0.00,0.00,0.00,0.00,0.375,0.00,0.00,0.327,0.00,496
Client   1,0.00,0.321,0.00,0.00,0.00,0.358,0.00,0.00,0.00,0.321,520
Client   2,0.307,0.346,0.346,0.00,0.00,0.00,0.00,0.00,0.00,0.00,482
Client   3,0.00,0.00,0.00,0.337,0.00,0.00,0.377,0.286,0.00,0.00,531
Client   4,0.00,0.00,0.340,0.00,0.320,0.00,0.00,0.00,0.00,0.340,491
Client   5,0.00,0.00,0.327,0.00,0.308,0.365,0.00,0.00,0.00,0.00,510
Client   6,0.00,0.00,0.319,0.00,0.300,0.00,0.382,0.00,0.00,0.00,524
Client   7,0.00,0.00,0.00,0.00,0.330,0.00,0.00,0.319,0.00,0.351,476
Client   8,0.00,0.347,0.00,0.00,0.00,0.00,0.00,0.316,0.337,0.00,481
Client   9,0.286,0.00,0.00,0.00,0.00,0.00,0.389,0.00,0.00,0.325,514
Client  10,0.315,0.00,0.00,0.00,0.00,0.00,0.00,0.326,0.00,0.358,466
Client  11,0.00,0.313,0.00,0.00,0.00,0.00,0.375,0.00,0.00,0.313,534
Client  12,0.306,0.347,0.347,0.00,0.00,0.00,0.00,0.00,0.00,0.00,481
Client  13,0.00,0.329,0.00,0.352,0.00,0.00,0.00,0.00,0.319,0.00,508
Client  14,0.00,0.00,0.00,0.359,0.315,0.00,0.00,0.00,0.325,0.00,498
Client  15,0.00,0.00,0.00,0.00,0.00,0.361,0.00,0.00,0.315,0.324,515
Client  16,0.00,0.00,0.00,0.337,0.00,0.00,0.377,0.286,0.00,0.00,531
Client  17,0.00,0.00,0.00,0.00,0.00,0.346,0.372,0.283,0.00,0.00,538
Client  18,0.00,0.337,0.00,0.00,0.00,0.00,0.00,0.00,0.327,0.337,496
Client  19,0.00,0.00,0.00,0.356,0.312,0.00,0.00,0.00,0.00,0.332,503
Client  20,0.309,0.351,0.00,0.00,0.00,0.00,0.00,0.00,0.340,0.00,476
Client  21,0.312,0.355,0.00,0.00,0.333,0.00,0.00,0.00,0.00,0.00,471
Client  22,0.00,0.00,0.326,0.349,0.00,0.00,0.00,0.00,0.00,0.326,513
Client  23,0.298,0.00,0.339,0.363,0.00,0.00,0.00,0.00,0.00,0.00,493
Client  24,0.00,0.00,0.340,0.00,0.320,0.00,0.00,0.00,0.00,0.340,491
Client  25,0.00,0.00,0.00,0.00,0.00,0.367,0.00,0.302,0.00,0.331,504
Client  26,0.00,0.00,0.00,0.00,0.00,0.00,0.378,0.00,0.306,0.316,529
Client  27,0.00,0.00,0.00,0.368,0.320,0.00,0.00,0.312,0.00,0.00,487
Client  28,0.00,0.00,0.00,0.00,0.00,0.360,0.00,0.00,0.315,0.325,514
Client  29,0.00,0.00,0.00,0.328,0.00,0.00,0.366,0.00,0.00,0.306,546
Client  30,0.309,0.00,0.352,0.00,0.00,0.00,0.00,0.00,0.339,0.00,475
Client  31,0.00,0.344,0.00,0.00,0.00,0.00,0.00,0.313,0.00,0.344,486
Client  32,0.00,0.00,0.335,0.359,0.00,0.00,0.00,0.305,0.00,0.00,498
Client  33,0.302,0.00,0.00,0.368,0.00,0.00,0.00,0.00,0.331,0.00,487
Client  34,0.00,0.352,0.00,0.00,0.328,0.00,0.00,0.320,0.00,0.00,475
Client  35,0.00,0.315,0.00,0.337,0.00,0.348,0.00,0.00,0.00,0.00,531
Client  36,0.289,0.00,0.00,0.00,0.00,0.00,0.394,0.00,0.317,0.00,508
Client  37,0.00,0.00,0.00,0.00,0.307,0.00,0.394,0.299,0.00,0.00,508
Client  38,0.00,0.00,0.00,0.00,0.00,0.339,0.366,0.00,0.295,0.00,546
Client  39,0.00,0.00,0.322,0.00,0.00,0.356,0.00,0.00,0.00,0.322,519
Client  40,0.320,0.00,0.00,0.00,0.00,0.00,0.00,0.330,0.350,0.00,460
Client  41,0.00,0.352,0.00,0.00,0.328,0.00,0.00,0.320,0.00,0.00,475
Client  42,0.00,0.00,0.352,0.00,0.328,0.00,0.00,0.320,0.00,0.00,475
Client  43,0.298,0.00,0.00,0.363,0.00,0.00,0.00,0.00,0.00,0.339,493
Client  44,0.313,0.00,0.355,0.00,0.332,0.00,0.00,0.00,0.00,0.00,470
Client  45,0.00,0.331,0.00,0.00,0.00,0.367,0.00,0.302,0.00,0.00,504
Client  46,0.00,0.00,0.00,0.00,0.00,0.00,0.385,0.293,0.00,0.322,519
Client  47,0.00,0.00,0.00,0.00,0.333,0.00,0.00,0.323,0.344,0.00,468
Client  48,0.309,0.352,0.00,0.00,0.00,0.00,0.00,0.00,0.339,0.00,475
Client  49,0.00,0.00,0.337,0.00,0.00,0.00,0.00,0.00,0.325,0.337,495
Client  50,0.298,0.339,0.00,0.363,0.00,0.00,0.00,0.00,0.00,0.00,493
Client  51,0.00,0.344,0.344,0.00,0.00,0.00,0.00,0.311,0.00,0.00,485
Client  52,0.286,0.00,0.325,0.00,0.00,0.00,0.389,0.00,0.00,0.00,514
Client  53,0.00,0.00,0.326,0.350,0.00,0.00,0.00,0.00,0.00,0.324,512
Client  54,0.00,0.00,0.319,0.00,0.298,0.00,0.382,0.00,0.00,0.00,523
Client  55,0.304,0.00,0.00,0.00,0.00,0.383,0.00,0.313,0.00,0.00,483
Client  56,0.00,0.303,0.00,0.00,0.00,0.335,0.362,0.00,0.00,0.00,552
Client  57,0.00,0.00,0.00,0.00,0.308,0.00,0.394,0.298,0.00,0.00,507
Client  58,0.289,0.00,0.00,0.00,0.00,0.00,0.394,0.00,0.317,0.00,508
Client  59,0.00,0.322,0.00,0.00,0.00,0.357,0.00,0.00,0.00,0.320,518
Client  60,0.306,0.347,0.347,0.00,0.00,0.00,0.00,0.00,0.00,0.00,481
Client  61,0.00,0.327,0.00,0.00,0.308,0.365,0.00,0.00,0.00,0.00,507
Client  62,0.316,0.00,0.359,0.00,0.00,0.00,0.00,0.325,0.00,0.00,465
Client  63,0.00,0.00,0.00,0.354,0.00,0.00,0.00,0.00,0.318,0.328,506
Client  64,0.00,0.00,0.00,0.00,0.317,0.376,0.00,0.307,0.00,0.00,492
Client  65,0.295,0.00,0.00,0.00,0.00,0.371,0.00,0.00,0.00,0.333,498
Client  66,0.00,0.00,0.00,0.327,0.00,0.00,0.368,0.00,0.00,0.305,544
Client  67,0.00,0.351,0.00,0.00,0.330,0.00,0.00,0.319,0.00,0.00,473
Client  68,0.00,0.00,0.00,0.00,0.302,0.00,0.387,0.00,0.311,0.00,517
Client  69,0.00,0.00,0.337,0.00,0.00,0.00,0.00,0.00,0.327,0.337,493
Client  70,0.304,0.00,0.00,0.00,0.00,0.383,0.00,0.313,0.00,0.00,483
Client  71,0.00,0.327,0.00,0.00,0.308,0.365,0.00,0.00,0.00,0.00,507
Client  72,0.00,0.00,0.324,0.00,0.00,0.361,0.00,0.00,0.314,0.00,512
Client  73,0.00,0.00,0.00,0.340,0.00,0.353,0.00,0.00,0.307,0.00,524
Client  74,0.00,0.344,0.00,0.00,0.323,0.00,0.00,0.00,0.333,0.00,483
Client  75,0.304,0.00,0.00,0.00,0.00,0.383,0.00,0.313,0.00,0.00,483
Client  76,0.00,0.00,0.00,0.333,0.292,0.00,0.375,0.00,0.00,0.00,534
Client  77,0.317,0.00,0.358,0.00,0.00,0.00,0.00,0.325,0.00,0.00,464
Client  78,0.00,0.00,0.00,0.340,0.00,0.353,0.00,0.00,0.307,0.00,524
Client  79,0.00,0.333,0.333,0.00,0.00,0.00,0.00,0.00,0.00,0.333,498
Client  80,0.306,0.00,0.00,0.370,0.324,0.00,0.00,0.00,0.00,0.00,481
Client  81,0.287,0.324,0.00,0.00,0.00,0.00,0.390,0.00,0.00,0.00,513
Client  82,0.317,0.00,0.358,0.00,0.00,0.00,0.00,0.325,0.00,0.00,464
Client  83,0.00,0.00,0.329,0.352,0.00,0.00,0.00,0.00,0.319,0.00,505
Client  84,0.306,0.00,0.00,0.370,0.324,0.00,0.00,0.00,0.00,0.00,481
Client  85,0.00,0.00,0.00,0.00,0.311,0.369,0.00,0.00,0.321,0.00,502
Client  86,0.00,0.00,0.312,0.00,0.00,0.00,0.376,0.00,0.00,0.312,532
Client  87,0.309,0.00,0.00,0.374,0.00,0.00,0.00,0.317,0.00,0.00,476
Client  88,0.00,0.344,0.00,0.00,0.323,0.00,0.00,0.00,0.333,0.00,483
Client  89,0.00,0.00,0.00,0.327,0.00,0.00,0.368,0.00,0.00,0.305,544
Client  90,0.309,0.00,0.00,0.374,0.00,0.00,0.00,0.317,0.00,0.00,476
Client  91,0.00,0.314,0.00,0.336,0.00,0.350,0.00,0.00,0.00,0.00,529
Client  92,0.313,0.00,0.354,0.00,0.333,0.00,0.00,0.00,0.00,0.00,469
Client  93,0.00,0.00,0.00,0.340,0.00,0.353,0.00,0.00,0.307,0.00,524
Client  94,0.00,0.00,0.00,0.00,0.308,0.00,0.394,0.298,0.00,0.00,507
Client  95,0.00,0.331,0.00,0.00,0.00,0.369,0.00,0.301,0.00,0.00,502
Client  96,0.287,0.00,0.324,0.00,0.00,0.00,0.390,0.00,0.00,0.00,513
Client  97,0.00,0.00,0.347,0.00,0.00,0.00,0.00,0.316,0.337,0.00,478
Client  98,0.00,0.344,0.00,0.00,0.323,0.00,0.00,0.00,0.333,0.00,483
Client  99,0.313,0.00,0.00,0.00,0.333,0.00,0.00,0.00,0.00,0.354,469
0 [0 5 8] [0 5 8] [1 2 3 4 6 7 9]
0 training: Counter({5: 186, 8: 162, 0: 148}) testing iid: Counter({8: 1000, 0: 1000, 5: 1000})
1 [1 5 9] [1 5 9] [0 2 3 4 6 7 8]
1 training: Counter({5: 186, 1: 167, 9: 167}) testing iid: Counter({1: 1000, 9: 1000, 5: 1000})
2 [0 1 2] [0 1 2] [3 4 5 6 7 8 9]
2 training: Counter({1: 167, 2: 167, 0: 148}) testing iid: Counter({0: 1000, 1: 1000, 2: 1000})
3 [3 6 7] [3 6 7] [0 1 2 4 5 8 9]
3 training: Counter({6: 200, 3: 179, 7: 152}) testing iid: Counter({3: 1000, 6: 1000, 7: 1000})
4 [2 4 9] [2 4 9] [0 1 3 5 6 7 8]
4 training: Counter({2: 167, 9: 167, 4: 157}) testing iid: Counter({9: 1000, 4: 1000, 2: 1000})
5 [2 4 5] [2 4 5] [0 1 3 6 7 8 9]
5 training: Counter({5: 186, 2: 167, 4: 157}) testing iid: Counter({5: 1000, 4: 1000, 2: 1000})
6 [2 4 6] [2 4 6] [0 1 3 5 7 8 9]
6 training: Counter({6: 200, 2: 167, 4: 157}) testing iid: Counter({6: 1000, 4: 1000, 2: 1000})
7 [4 7 9] [4 7 9] [0 1 2 3 5 6 8]
7 training: Counter({9: 167, 4: 157, 7: 152}) testing iid: Counter({9: 1000, 7: 1000, 4: 1000})
8 [1 7 8] [1 7 8] [0 2 3 4 5 6 9]
8 training: Counter({1: 167, 8: 162, 7: 152}) testing iid: Counter({8: 1000, 1: 1000, 7: 1000})
9 [0 6 9] [0 6 9] [1 2 3 4 5 7 8]
9 training: Counter({6: 200, 9: 167, 0: 147}) testing iid: Counter({0: 1000, 6: 1000, 9: 1000})
10 [0 7 9] [0 7 9] [1 2 3 4 5 6 8]
10 training: Counter({9: 167, 7: 152, 0: 147}) testing iid: Counter({0: 1000, 9: 1000, 7: 1000})
11 [1 6 9] [1 6 9] [0 2 3 4 5 7 8]
11 training: Counter({6: 200, 1: 167, 9: 167}) testing iid: Counter({6: 1000, 1: 1000, 9: 1000})
12 [0 1 2] [0 1 2] [3 4 5 6 7 8 9]
12 training: Counter({1: 167, 2: 167, 0: 147}) testing iid: Counter({0: 1000, 1: 1000, 2: 1000})
13 [1 3 8] [1 3 8] [0 2 4 5 6 7 9]
13 training: Counter({3: 179, 1: 167, 8: 162}) testing iid: Counter({3: 1000, 8: 1000, 1: 1000})
14 [3 4 8] [3 4 8] [0 1 2 5 6 7 9]
14 training: Counter({3: 179, 8: 162, 4: 157}) testing iid: Counter({3: 1000, 8: 1000, 4: 1000})
15 [5 8 9] [5 8 9] [0 1 2 3 4 6 7]
15 training: Counter({5: 186, 9: 167, 8: 162}) testing iid: Counter({8: 1000, 9: 1000, 5: 1000})
16 [3 6 7] [3 6 7] [0 1 2 4 5 8 9]
16 training: Counter({6: 200, 3: 179, 7: 152}) testing iid: Counter({3: 1000, 6: 1000, 7: 1000})
17 [5 6 7] [5 6 7] [0 1 2 3 4 8 9]
17 training: Counter({6: 200, 5: 186, 7: 152}) testing iid: Counter({6: 1000, 5: 1000, 7: 1000})
18 [1 8 9] [1 8 9] [0 2 3 4 5 6 7]
18 training: Counter({1: 167, 9: 167, 8: 162}) testing iid: Counter({8: 1000, 1: 1000, 9: 1000})
19 [3 4 9] [3 4 9] [0 1 2 5 6 7 8]
19 training: Counter({3: 179, 9: 167, 4: 157}) testing iid: Counter({3: 1000, 9: 1000, 4: 1000})
20 [0 1 8] [0 1 8] [2 3 4 5 6 7 9]
20 training: Counter({1: 167, 8: 162, 0: 147}) testing iid: Counter({8: 1000, 0: 1000, 1: 1000})
21 [0 1 4] [0 1 4] [2 3 5 6 7 8 9]
21 training: Counter({1: 167, 4: 157, 0: 147}) testing iid: Counter({0: 1000, 1: 1000, 4: 1000})
22 [2 3 9] [2 3 9] [0 1 4 5 6 7 8]
22 training: Counter({3: 179, 2: 167, 9: 167}) testing iid: Counter({3: 1000, 9: 1000, 2: 1000})
23 [0 2 3] [0 2 3] [1 4 5 6 7 8 9]
23 training: Counter({3: 179, 2: 167, 0: 147}) testing iid: Counter({3: 1000, 0: 1000, 2: 1000})
24 [2 4 9] [2 4 9] [0 1 3 5 6 7 8]
24 training: Counter({2: 167, 9: 167, 4: 157}) testing iid: Counter({9: 1000, 4: 1000, 2: 1000})
25 [5 7 9] [5 7 9] [0 1 2 3 4 6 8]
25 training: Counter({5: 185, 9: 167, 7: 152}) testing iid: Counter({9: 1000, 5: 1000, 7: 1000})
26 [6 8 9] [6 8 9] [0 1 2 3 4 5 7]
26 training: Counter({6: 200, 9: 167, 8: 162}) testing iid: Counter({8: 1000, 6: 1000, 9: 1000})
27 [3 4 7] [3 4 7] [0 1 2 5 6 8 9]
27 training: Counter({3: 179, 4: 156, 7: 152}) testing iid: Counter({3: 1000, 7: 1000, 4: 1000})
28 [5 8 9] [5 8 9] [0 1 2 3 4 6 7]
28 training: Counter({5: 185, 9: 167, 8: 162}) testing iid: Counter({8: 1000, 9: 1000, 5: 1000})
29 [3 6 9] [3 6 9] [0 1 2 4 5 7 8]
29 training: Counter({6: 200, 3: 179, 9: 167}) testing iid: Counter({3: 1000, 6: 1000, 9: 1000})
30 [0 2 8] [0 2 8] [1 3 4 5 6 7 9]
30 training: Counter({2: 167, 8: 161, 0: 147}) testing iid: Counter({8: 1000, 0: 1000, 2: 1000})
31 [1 7 9] [1 7 9] [0 2 3 4 5 6 8]
31 training: Counter({1: 167, 9: 167, 7: 152}) testing iid: Counter({1: 1000, 9: 1000, 7: 1000})
32 [2 3 7] [2 3 7] [0 1 4 5 6 8 9]
32 training: Counter({3: 179, 2: 167, 7: 152}) testing iid: Counter({3: 1000, 7: 1000, 2: 1000})
33 [0 3 8] [0 3 8] [1 2 4 5 6 7 9]
33 training: Counter({3: 179, 8: 161, 0: 147}) testing iid: Counter({3: 1000, 8: 1000, 0: 1000})
34 [1 4 7] [1 4 7] [0 2 3 5 6 8 9]
34 training: Counter({1: 167, 4: 156, 7: 152}) testing iid: Counter({1: 1000, 7: 1000, 4: 1000})
35 [1 3 5] [1 3 5] [0 2 4 6 7 8 9]
35 training: Counter({5: 185, 3: 179, 1: 167}) testing iid: Counter({3: 1000, 1: 1000, 5: 1000})
36 [0 6 8] [0 6 8] [1 2 3 4 5 7 9]
36 training: Counter({6: 200, 8: 161, 0: 147}) testing iid: Counter({8: 1000, 0: 1000, 6: 1000})
37 [4 6 7] [4 6 7] [0 1 2 3 5 8 9]
37 training: Counter({6: 200, 4: 156, 7: 152}) testing iid: Counter({6: 1000, 7: 1000, 4: 1000})
38 [5 6 8] [5 6 8] [0 1 2 3 4 7 9]
38 training: Counter({6: 200, 5: 185, 8: 161}) testing iid: Counter({8: 1000, 6: 1000, 5: 1000})
39 [2 5 9] [2 5 9] [0 1 3 4 6 7 8]
39 training: Counter({5: 185, 2: 167, 9: 167}) testing iid: Counter({9: 1000, 5: 1000, 2: 1000})
40 [0 7 8] [0 7 8] [1 2 3 4 5 6 9]
40 training: Counter({8: 161, 7: 152, 0: 147}) testing iid: Counter({8: 1000, 0: 1000, 7: 1000})
41 [1 4 7] [1 4 7] [0 2 3 5 6 8 9]
41 training: Counter({1: 167, 4: 156, 7: 152}) testing iid: Counter({1: 1000, 7: 1000, 4: 1000})
42 [2 4 7] [2 4 7] [0 1 3 5 6 8 9]
42 training: Counter({2: 167, 4: 156, 7: 152}) testing iid: Counter({7: 1000, 4: 1000, 2: 1000})
43 [0 3 9] [0 3 9] [1 2 4 5 6 7 8]
43 training: Counter({3: 179, 9: 167, 0: 147}) testing iid: Counter({3: 1000, 0: 1000, 9: 1000})
44 [0 2 4] [0 2 4] [1 3 5 6 7 8 9]
44 training: Counter({2: 167, 4: 156, 0: 147}) testing iid: Counter({0: 1000, 4: 1000, 2: 1000})
45 [1 5 7] [1 5 7] [0 2 3 4 6 8 9]
45 training: Counter({5: 185, 1: 167, 7: 152}) testing iid: Counter({1: 1000, 5: 1000, 7: 1000})
46 [6 7 9] [6 7 9] [0 1 2 3 4 5 8]
46 training: Counter({6: 200, 9: 167, 7: 152}) testing iid: Counter({6: 1000, 9: 1000, 7: 1000})
47 [4 7 8] [4 7 8] [0 1 2 3 5 6 9]
47 training: Counter({8: 161, 4: 156, 7: 151}) testing iid: Counter({8: 1000, 7: 1000, 4: 1000})
48 [0 1 8] [0 1 8] [2 3 4 5 6 7 9]
48 training: Counter({1: 167, 8: 161, 0: 147}) testing iid: Counter({8: 1000, 0: 1000, 1: 1000})
49 [2 8 9] [2 8 9] [0 1 3 4 5 6 7]
49 training: Counter({2: 167, 9: 167, 8: 161}) testing iid: Counter({8: 1000, 9: 1000, 2: 1000})
50 [0 1 3] [0 1 3] [2 4 5 6 7 8 9]
50 training: Counter({3: 179, 1: 167, 0: 147}) testing iid: Counter({3: 1000, 0: 1000, 1: 1000})
51 [1 2 7] [1 2 7] [0 3 4 5 6 8 9]
51 training: Counter({1: 167, 2: 167, 7: 151}) testing iid: Counter({1: 1000, 7: 1000, 2: 1000})
52 [0 2 6] [0 2 6] [1 3 4 5 7 8 9]
52 training: Counter({6: 200, 2: 167, 0: 147}) testing iid: Counter({0: 1000, 6: 1000, 2: 1000})
53 [2 3 9] [2 3 9] [0 1 4 5 6 7 8]
53 training: Counter({3: 179, 2: 167, 9: 166}) testing iid: Counter({3: 1000, 9: 1000, 2: 1000})
54 [2 4 6] [2 4 6] [0 1 3 5 7 8 9]
54 training: Counter({6: 200, 2: 167, 4: 156}) testing iid: Counter({6: 1000, 4: 1000, 2: 1000})
55 [0 5 7] [0 5 7] [1 2 3 4 6 8 9]
55 training: Counter({5: 185, 7: 151, 0: 147}) testing iid: Counter({0: 1000, 5: 1000, 7: 1000})
56 [1 5 6] [1 5 6] [0 2 3 4 7 8 9]
56 training: Counter({6: 200, 5: 185, 1: 167}) testing iid: Counter({6: 1000, 1: 1000, 5: 1000})
57 [4 6 7] [4 6 7] [0 1 2 3 5 8 9]
57 training: Counter({6: 200, 4: 156, 7: 151}) testing iid: Counter({6: 1000, 7: 1000, 4: 1000})
58 [0 6 8] [0 6 8] [1 2 3 4 5 7 9]
58 training: Counter({6: 200, 8: 161, 0: 147}) testing iid: Counter({8: 1000, 0: 1000, 6: 1000})
59 [1 5 9] [1 5 9] [0 2 3 4 6 7 8]
59 training: Counter({5: 185, 1: 167, 9: 166}) testing iid: Counter({1: 1000, 9: 1000, 5: 1000})
60 [0 1 2] [0 1 2] [3 4 5 6 7 8 9]
60 training: Counter({1: 167, 2: 167, 0: 147}) testing iid: Counter({0: 1000, 1: 1000, 2: 1000})
61 [1 4 5] [1 4 5] [0 2 3 6 7 8 9]
61 training: Counter({5: 185, 1: 166, 4: 156}) testing iid: Counter({1: 1000, 5: 1000, 4: 1000})
62 [0 2 7] [0 2 7] [1 3 4 5 6 8 9]
62 training: Counter({2: 167, 7: 151, 0: 147}) testing iid: Counter({0: 1000, 7: 1000, 2: 1000})
63 [3 8 9] [3 8 9] [0 1 2 4 5 6 7]
63 training: Counter({3: 179, 9: 166, 8: 161}) testing iid: Counter({3: 1000, 8: 1000, 9: 1000})
64 [4 5 7] [4 5 7] [0 1 2 3 6 8 9]
64 training: Counter({5: 185, 4: 156, 7: 151}) testing iid: Counter({5: 1000, 7: 1000, 4: 1000})
65 [0 5 9] [0 5 9] [1 2 3 4 6 7 8]
65 training: Counter({5: 185, 9: 166, 0: 147}) testing iid: Counter({0: 1000, 9: 1000, 5: 1000})
66 [3 6 9] [3 6 9] [0 1 2 4 5 7 8]
66 training: Counter({6: 200, 3: 178, 9: 166}) testing iid: Counter({3: 1000, 6: 1000, 9: 1000})
67 [1 4 7] [1 4 7] [0 2 3 5 6 8 9]
67 training: Counter({1: 166, 4: 156, 7: 151}) testing iid: Counter({1: 1000, 7: 1000, 4: 1000})
68 [4 6 8] [4 6 8] [0 1 2 3 5 7 9]
68 training: Counter({6: 200, 8: 161, 4: 156}) testing iid: Counter({8: 1000, 6: 1000, 4: 1000})
69 [2 8 9] [2 8 9] [0 1 3 4 5 6 7]
69 training: Counter({2: 166, 9: 166, 8: 161}) testing iid: Counter({8: 1000, 9: 1000, 2: 1000})
70 [0 5 7] [0 5 7] [1 2 3 4 6 8 9]
70 training: Counter({5: 185, 7: 151, 0: 147}) testing iid: Counter({0: 1000, 5: 1000, 7: 1000})
71 [1 4 5] [1 4 5] [0 2 3 6 7 8 9]
71 training: Counter({5: 185, 1: 166, 4: 156}) testing iid: Counter({1: 1000, 5: 1000, 4: 1000})
72 [2 5 8] [2 5 8] [0 1 3 4 6 7 9]
72 training: Counter({5: 185, 2: 166, 8: 161}) testing iid: Counter({8: 1000, 5: 1000, 2: 1000})
73 [3 5 8] [3 5 8] [0 1 2 4 6 7 9]
73 training: Counter({5: 185, 3: 178, 8: 161}) testing iid: Counter({3: 1000, 8: 1000, 5: 1000})
74 [1 4 8] [1 4 8] [0 2 3 5 6 7 9]
74 training: Counter({1: 166, 8: 161, 4: 156}) testing iid: Counter({8: 1000, 1: 1000, 4: 1000})
75 [0 5 7] [0 5 7] [1 2 3 4 6 8 9]
75 training: Counter({5: 185, 7: 151, 0: 147}) testing iid: Counter({0: 1000, 5: 1000, 7: 1000})
76 [3 4 6] [3 4 6] [0 1 2 5 7 8 9]
76 training: Counter({6: 200, 3: 178, 4: 156}) testing iid: Counter({3: 1000, 6: 1000, 4: 1000})
77 [0 2 7] [0 2 7] [1 3 4 5 6 8 9]
77 training: Counter({2: 166, 7: 151, 0: 147}) testing iid: Counter({0: 1000, 7: 1000, 2: 1000})
78 [3 5 8] [3 5 8] [0 1 2 4 6 7 9]
78 training: Counter({5: 185, 3: 178, 8: 161}) testing iid: Counter({3: 1000, 8: 1000, 5: 1000})
79 [1 2 9] [1 2 9] [0 3 4 5 6 7 8]
79 training: Counter({1: 166, 2: 166, 9: 166}) testing iid: Counter({1: 1000, 9: 1000, 2: 1000})
80 [0 3 4] [0 3 4] [1 2 5 6 7 8 9]
80 training: Counter({3: 178, 4: 156, 0: 147}) testing iid: Counter({3: 1000, 0: 1000, 4: 1000})
81 [0 1 6] [0 1 6] [2 3 4 5 7 8 9]
81 training: Counter({6: 200, 1: 166, 0: 147}) testing iid: Counter({0: 1000, 6: 1000, 1: 1000})
82 [0 2 7] [0 2 7] [1 3 4 5 6 8 9]
82 training: Counter({2: 166, 7: 151, 0: 147}) testing iid: Counter({0: 1000, 7: 1000, 2: 1000})
83 [2 3 8] [2 3 8] [0 1 4 5 6 7 9]
83 training: Counter({3: 178, 2: 166, 8: 161}) testing iid: Counter({3: 1000, 8: 1000, 2: 1000})
84 [0 3 4] [0 3 4] [1 2 5 6 7 8 9]
84 training: Counter({3: 178, 4: 156, 0: 147}) testing iid: Counter({3: 1000, 0: 1000, 4: 1000})
85 [4 5 8] [4 5 8] [0 1 2 3 6 7 9]
85 training: Counter({5: 185, 8: 161, 4: 156}) testing iid: Counter({8: 1000, 5: 1000, 4: 1000})
86 [2 6 9] [2 6 9] [0 1 3 4 5 7 8]
86 training: Counter({6: 200, 2: 166, 9: 166}) testing iid: Counter({6: 1000, 9: 1000, 2: 1000})
87 [0 3 7] [0 3 7] [1 2 4 5 6 8 9]
87 training: Counter({3: 178, 7: 151, 0: 147}) testing iid: Counter({3: 1000, 0: 1000, 7: 1000})
88 [1 4 8] [1 4 8] [0 2 3 5 6 7 9]
88 training: Counter({1: 166, 8: 161, 4: 156}) testing iid: Counter({8: 1000, 1: 1000, 4: 1000})
89 [3 6 9] [3 6 9] [0 1 2 4 5 7 8]
89 training: Counter({6: 200, 3: 178, 9: 166}) testing iid: Counter({3: 1000, 6: 1000, 9: 1000})
90 [0 3 7] [0 3 7] [1 2 4 5 6 8 9]
90 training: Counter({3: 178, 7: 151, 0: 147}) testing iid: Counter({3: 1000, 0: 1000, 7: 1000})
91 [1 3 5] [1 3 5] [0 2 4 6 7 8 9]
91 training: Counter({5: 185, 3: 178, 1: 166}) testing iid: Counter({3: 1000, 1: 1000, 5: 1000})
92 [0 2 4] [0 2 4] [1 3 5 6 7 8 9]
92 training: Counter({2: 166, 4: 156, 0: 147}) testing iid: Counter({0: 1000, 4: 1000, 2: 1000})
93 [3 5 8] [3 5 8] [0 1 2 4 6 7 9]
93 training: Counter({5: 185, 3: 178, 8: 161}) testing iid: Counter({3: 1000, 8: 1000, 5: 1000})
94 [4 6 7] [4 6 7] [0 1 2 3 5 8 9]
94 training: Counter({6: 200, 4: 156, 7: 151}) testing iid: Counter({6: 1000, 7: 1000, 4: 1000})
95 [1 5 7] [1 5 7] [0 2 3 4 6 8 9]
95 training: Counter({5: 185, 1: 166, 7: 151}) testing iid: Counter({1: 1000, 5: 1000, 7: 1000})
96 [0 2 6] [0 2 6] [1 3 4 5 7 8 9]
96 training: Counter({6: 200, 2: 166, 0: 147}) testing iid: Counter({0: 1000, 6: 1000, 2: 1000})
97 [2 7 8] [2 7 8] [0 1 3 4 5 6 9]
97 training: Counter({2: 166, 8: 161, 7: 151}) testing iid: Counter({8: 1000, 7: 1000, 2: 1000})
98 [1 4 8] [1 4 8] [0 2 3 5 6 7 9]
98 training: Counter({1: 166, 8: 161, 4: 156}) testing iid: Counter({8: 1000, 1: 1000, 4: 1000})
99 [0 4 9] [0 4 9] [1 2 3 5 6 7 8]
99 training: Counter({9: 166, 4: 156, 0: 147}) testing iid: Counter({0: 1000, 9: 1000, 4: 1000})
Num_samples of Training set per client: [496, 520, 482, 531, 491, 510, 524, 476, 481, 514, 466, 534, 481, 508, 498, 515, 531, 538, 496, 503, 476, 471, 513, 493, 491, 504, 529, 487, 514, 546, 475, 486, 498, 487, 475, 531, 508, 508, 546, 519, 460, 475, 475, 493, 470, 504, 519, 468, 475, 495, 493, 485, 514, 512, 523, 483, 552, 507, 508, 518, 481, 507, 465, 506, 492, 498, 544, 473, 517, 493, 483, 507, 512, 524, 483, 483, 534, 464, 524, 498, 481, 513, 464, 505, 481, 502, 532, 476, 483, 544, 476, 529, 469, 524, 507, 502, 513, 478, 483, 469]
Total_training_samples: 50000
Global test set: 10000
Finish Generating Samples, distribution saved
MobileNetV2(
  (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (layers): Sequential(
    (0): Block(
      (conv1): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): Block(
      (conv1): Conv2d(16, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=96, bias=False)
      (bn2): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(96, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(16, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (2): Block(
      (conv1): Conv2d(24, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=144, bias=False)
      (bn2): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(144, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (3): Block(
      (conv1): Conv2d(24, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(144, 144, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=144, bias=False)
      (bn2): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(144, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (4): Block(
      (conv1): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
      (bn2): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(192, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (5): Block(
      (conv1): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
      (bn2): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(192, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (6): Block(
      (conv1): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(192, 192, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=192, bias=False)
      (bn2): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(192, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (7): Block(
      (conv1): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
      (bn2): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (8): Block(
      (conv1): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
      (bn2): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (9): Block(
      (conv1): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
      (bn2): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (10): Block(
      (conv1): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
      (bn2): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(384, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(64, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (11): Block(
      (conv1): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)
      (bn2): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (12): Block(
      (conv1): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)
      (bn2): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (13): Block(
      (conv1): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(576, 576, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=576, bias=False)
      (bn2): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(576, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (14): Block(
      (conv1): Conv2d(160, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(960, 960, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=960, bias=False)
      (bn2): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(960, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (15): Block(
      (conv1): Conv2d(160, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(960, 960, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=960, bias=False)
      (bn2): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(960, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (16): Block(
      (conv1): Conv2d(160, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(960, 960, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=960, bias=False)
      (bn2): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(960, 320, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(160, 320, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (conv2): Conv2d(320, 1280, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn2): BatchNorm2d(1280, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (linear): Linear(in_features=1280, out_features=10, bias=True)
)
number of parameters: 2296922
clients initializting...
output size: 10
  0%|          | 0/100 [00:00<?, ?it/s]  1%|          | 1/100 [00:00<00:59,  1.67it/s]  2%|▏         | 2/100 [00:01<00:59,  1.66it/s]  3%|▎         | 3/100 [00:01<00:58,  1.66it/s]  4%|▍         | 4/100 [00:02<00:58,  1.65it/s]  5%|▌         | 5/100 [00:03<00:57,  1.66it/s]  6%|▌         | 6/100 [00:03<00:56,  1.68it/s]  7%|▋         | 7/100 [00:04<00:55,  1.67it/s]  8%|▊         | 8/100 [00:04<00:55,  1.67it/s]  9%|▉         | 9/100 [00:05<00:55,  1.64it/s] 10%|█         | 10/100 [00:06<00:55,  1.63it/s] 11%|█         | 11/100 [00:06<00:54,  1.64it/s] 12%|█▏        | 12/100 [00:07<00:53,  1.64it/s] 13%|█▎        | 13/100 [00:07<00:51,  1.68it/s] 14%|█▍        | 14/100 [00:08<00:51,  1.68it/s] 15%|█▌        | 15/100 [00:09<00:50,  1.67it/s] 16%|█▌        | 16/100 [00:09<00:50,  1.66it/s] 17%|█▋        | 17/100 [00:10<00:50,  1.66it/s] 18%|█▊        | 18/100 [00:10<00:49,  1.65it/s] 19%|█▉        | 19/100 [00:11<00:49,  1.64it/s] 20%|██        | 20/100 [00:12<00:48,  1.64it/s] 21%|██        | 21/100 [00:12<00:48,  1.64it/s] 22%|██▏       | 22/100 [00:13<00:47,  1.65it/s] 23%|██▎       | 23/100 [00:13<00:47,  1.62it/s] 24%|██▍       | 24/100 [00:14<00:46,  1.64it/s] 25%|██▌       | 25/100 [00:15<00:45,  1.66it/s] 26%|██▌       | 26/100 [00:15<00:44,  1.65it/s] 27%|██▋       | 27/100 [00:16<00:44,  1.66it/s] 28%|██▊       | 28/100 [00:16<00:43,  1.67it/s] 29%|██▉       | 29/100 [00:17<00:42,  1.68it/s] 30%|███       | 30/100 [00:18<00:41,  1.68it/s] 31%|███       | 31/100 [00:18<00:41,  1.66it/s] 32%|███▏      | 32/100 [00:19<00:41,  1.65it/s] 33%|███▎      | 33/100 [00:19<00:40,  1.64it/s] 34%|███▍      | 34/100 [00:20<00:40,  1.63it/s] 35%|███▌      | 35/100 [00:24<01:46,  1.64s/it] 36%|███▌      | 36/100 [00:25<01:25,  1.33s/it] 37%|███▋      | 37/100 [00:25<01:10,  1.12s/it] 38%|███▊      | 38/100 [00:26<01:00,  1.03it/s] 39%|███▉      | 39/100 [00:27<00:52,  1.15it/s] 40%|████      | 40/100 [00:27<00:47,  1.26it/s] 41%|████      | 41/100 [00:28<00:43,  1.37it/s] 42%|████▏     | 42/100 [00:28<00:39,  1.46it/s] 43%|████▎     | 43/100 [00:29<00:37,  1.52it/s] 44%|████▍     | 44/100 [00:30<00:35,  1.56it/s] 45%|████▌     | 45/100 [00:30<00:34,  1.59it/s] 46%|████▌     | 46/100 [00:31<00:34,  1.57it/s] 47%|████▋     | 47/100 [00:31<00:33,  1.57it/s] 48%|████▊     | 48/100 [00:32<00:32,  1.58it/s] 49%|████▉     | 49/100 [00:33<00:32,  1.58it/s] 50%|█████     | 50/100 [00:33<00:31,  1.58it/s] 51%|█████     | 51/100 [00:34<00:30,  1.58it/s] 52%|█████▏    | 52/100 [00:35<00:30,  1.58it/s] 53%|█████▎    | 53/100 [00:35<00:29,  1.57it/s] 54%|█████▍    | 54/100 [00:36<00:29,  1.57it/s] 55%|█████▌    | 55/100 [00:37<00:28,  1.59it/s] 56%|█████▌    | 56/100 [00:37<00:27,  1.62it/s] 57%|█████▋    | 57/100 [00:38<00:26,  1.60it/s] 58%|█████▊    | 58/100 [00:38<00:26,  1.61it/s] 59%|█████▉    | 59/100 [00:39<00:25,  1.62it/s] 60%|██████    | 60/100 [00:40<00:24,  1.61it/s] 61%|██████    | 61/100 [00:40<00:24,  1.61it/s] 62%|██████▏   | 62/100 [00:41<00:23,  1.60it/s] 63%|██████▎   | 63/100 [00:41<00:23,  1.60it/s] 64%|██████▍   | 64/100 [00:42<00:22,  1.61it/s] 65%|██████▌   | 65/100 [00:43<00:21,  1.60it/s] 66%|██████▌   | 66/100 [00:43<00:21,  1.61it/s] 67%|██████▋   | 67/100 [00:44<00:20,  1.61it/s] 68%|██████▊   | 68/100 [00:45<00:19,  1.61it/s] 69%|██████▉   | 69/100 [00:45<00:19,  1.60it/s] 70%|███████   | 70/100 [00:46<00:18,  1.60it/s] 71%|███████   | 71/100 [00:46<00:18,  1.60it/s] 72%|███████▏  | 72/100 [00:51<00:46,  1.67s/it] 73%|███████▎  | 73/100 [00:51<00:36,  1.36s/it] 74%|███████▍  | 74/100 [00:52<00:29,  1.14s/it] 75%|███████▌  | 75/100 [00:52<00:24,  1.02it/s] 76%|███████▌  | 76/100 [00:53<00:20,  1.14it/s] 77%|███████▋  | 77/100 [00:54<00:18,  1.25it/s] 78%|███████▊  | 78/100 [00:54<00:16,  1.34it/s] 79%|███████▉  | 79/100 [00:55<00:14,  1.41it/s] 80%|████████  | 80/100 [00:56<00:13,  1.47it/s] 81%|████████  | 81/100 [00:56<00:12,  1.51it/s] 82%|████████▏ | 82/100 [00:57<00:11,  1.52it/s] 83%|████████▎ | 83/100 [00:57<00:11,  1.53it/s] 84%|████████▍ | 84/100 [00:58<00:10,  1.54it/s] 85%|████████▌ | 85/100 [00:59<00:09,  1.55it/s] 86%|████████▌ | 86/100 [00:59<00:08,  1.56it/s] 87%|████████▋ | 87/100 [01:00<00:08,  1.56it/s] 88%|████████▊ | 88/100 [01:01<00:07,  1.57it/s] 89%|████████▉ | 89/100 [01:01<00:07,  1.57it/s] 90%|█████████ | 90/100 [01:02<00:06,  1.56it/s] 91%|█████████ | 91/100 [01:03<00:05,  1.56it/s] 92%|█████████▏| 92/100 [01:03<00:05,  1.59it/s] 93%|█████████▎| 93/100 [01:04<00:04,  1.60it/s] 94%|█████████▍| 94/100 [01:04<00:03,  1.58it/s] 95%|█████████▌| 95/100 [01:05<00:03,  1.42it/s] 96%|█████████▌| 96/100 [01:06<00:02,  1.48it/s] 97%|█████████▋| 97/100 [01:07<00:01,  1.53it/s] 98%|█████████▊| 98/100 [01:07<00:01,  1.56it/s] 99%|█████████▉| 99/100 [01:08<00:00,  1.56it/s]100%|██████████| 100/100 [01:08<00:00,  1.60it/s]100%|██████████| 100/100 [01:08<00:00,  1.45it/s]
Number of users per round / total users: 10  /  100
Finished creating FL server.
=== Training starts: algorithm FedFea ===
-------------Round number:  0  -------------
selected users: [26, 86, 2, 55, 75, 93, 16, 73, 54, 95]
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
all data: 253
Local adapation with distilling: 0.001
training loss: tensor(2.0725) feature loss: tensor(0.5966)
Local adapation with distilling: 0.001
training loss: tensor(2.1535) feature loss: tensor(0.6174)
Local adapation with distilling: 0.001
training loss: tensor(2.2033) feature loss: tensor(0.6166)
Local adapation with distilling: 0.001
training loss: tensor(2.1213) feature loss: tensor(0.6247)
Local adapation with distilling: 0.001
training loss: tensor(2.0619) feature loss: tensor(0.5853)
Local adapation with distilling: 0.001
training loss: tensor(2.1288) feature loss: tensor(0.6251)
Local adapation with distilling: 0.001
training loss: tensor(2.1841) feature loss: tensor(0.6321)
Local adapation with distilling: 0.001
training loss: tensor(2.0539) feature loss: tensor(0.6172)
Local adapation with distilling: 0.001
training loss: tensor(2.3148) feature loss: tensor(0.6393)
Local adapation with distilling: 0.001
training loss: tensor(2.1402) feature loss: tensor(0.6370)
Global Model Acc on global data: 0.1153 length of data: 10000
save a model
-------------Round number:  1  -------------
selected users: [80, 84, 33, 81, 93, 17, 36, 82, 69, 65]
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
all data: 245
Local adapation with distilling: 0.000982
training loss: tensor(1.7252) feature loss: tensor(0.7570)
Local adapation with distilling: 0.000982
training loss: tensor(1.7202) feature loss: tensor(0.7713)
Local adapation with distilling: 0.000982
training loss: tensor(1.6258) feature loss: tensor(0.7480)
Local adapation with distilling: 0.000982
training loss: tensor(1.7619) feature loss: tensor(0.7191)
Local adapation with distilling: 0.000982
training loss: tensor(1.6336) feature loss: tensor(0.6555)
Local adapation with distilling: 0.000982
training loss: tensor(1.6313) feature loss: tensor(0.6315)
Local adapation with distilling: 0.000982
training loss: tensor(1.6186) feature loss: tensor(0.7205)
Local adapation with distilling: 0.000982
training loss: tensor(1.7369) feature loss: tensor(0.7494)
Local adapation with distilling: 0.000982
training loss: tensor(1.7092) feature loss: tensor(0.7287)
Local adapation with distilling: 0.000982
training loss: tensor(1.5869) feature loss: tensor(0.7273)
Global Model Acc on global data: 0.1802 length of data: 10000
save a model
-------------Round number:  2  -------------
selected users: [83, 30, 56, 24, 16, 23, 2, 27, 28, 13]
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([27, 16, 32, 32]) torch.Size([27])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
all data: 247
Local adapation with distilling: 0.000964
training loss: tensor(1.3219) feature loss: tensor(0.6593)
Local adapation with distilling: 0.000964
training loss: tensor(1.4247) feature loss: tensor(0.6571)
Local adapation with distilling: 0.000964
training loss: tensor(1.2896) feature loss: tensor(0.5914)
Local adapation with distilling: 0.000964
training loss: tensor(1.4854) feature loss: tensor(0.6731)
Local adapation with distilling: 0.000964
training loss: tensor(1.4083) feature loss: tensor(0.5843)
Local adapation with distilling: 0.000964
training loss: tensor(1.3684) feature loss: tensor(0.6446)
Local adapation with distilling: 0.000964
training loss: tensor(1.3884) feature loss: tensor(0.7096)
Local adapation with distilling: 0.000964
training loss: tensor(1.4858) feature loss: tensor(0.6433)
Local adapation with distilling: 0.000964
training loss: tensor(1.4943) feature loss: tensor(0.6378)
Local adapation with distilling: 0.000964
training loss: tensor(1.3769) feature loss: tensor(0.6854)
Global Model Acc on global data: 0.2292 length of data: 10000
save a model
-------------Round number:  3  -------------
selected users: [93, 67, 6, 64, 96, 83, 98, 42, 25, 15]
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
all data: 246
Local adapation with distilling: 0.000946
training loss: tensor(1.1882) feature loss: tensor(0.5764)
Local adapation with distilling: 0.000946
training loss: tensor(1.3262) feature loss: tensor(0.6215)
Local adapation with distilling: 0.000946
training loss: tensor(1.3194) feature loss: tensor(0.5640)
Local adapation with distilling: 0.000946
training loss: tensor(1.3538) feature loss: tensor(0.6018)
Local adapation with distilling: 0.000946
training loss: tensor(1.3947) feature loss: tensor(0.5833)
Local adapation with distilling: 0.000946
training loss: tensor(1.1423) feature loss: tensor(0.5564)
Local adapation with distilling: 0.000946
training loss: tensor(1.2532) feature loss: tensor(0.6357)
Local adapation with distilling: 0.000946
training loss: tensor(1.3457) feature loss: tensor(0.5972)
Local adapation with distilling: 0.000946
training loss: tensor(1.2597) feature loss: tensor(0.5910)
Local adapation with distilling: 0.000946
training loss: tensor(1.3215) feature loss: tensor(0.6154)
Global Model Acc on global data: 0.2155 length of data: 10000
-------------Round number:  4  -------------
selected users: [20, 10, 96, 16, 63, 24, 53, 97, 41, 47]
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([28, 16, 32, 32]) torch.Size([28])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
all data: 243
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.3511) feature loss: tensor(0.6916)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.3049) feature loss: tensor(0.7191)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.4391) feature loss: tensor(0.6520)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.1654) feature loss: tensor(0.6092)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.2096) feature loss: tensor(0.6824)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.1612) feature loss: tensor(0.6184)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.1338) feature loss: tensor(0.6646)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.1489) feature loss: tensor(0.6349)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.2748) feature loss: tensor(0.6258)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.1472) feature loss: tensor(0.6477)
Global Model Acc on global data: 0.2147 length of data: 10000
-------------Round number:  5  -------------
selected users: [66, 32, 46, 28, 74, 23, 10, 20, 17, 35]
random features: torch.Size([27, 16, 32, 32]) torch.Size([27])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
all data: 247
Local adapation with distilling: 0.00091
training loss: tensor(1.1539) feature loss: tensor(0.6599)
Local adapation with distilling: 0.00091
training loss: tensor(1.1344) feature loss: tensor(0.6056)
Local adapation with distilling: 0.00091
training loss: tensor(1.2225) feature loss: tensor(0.6229)
Local adapation with distilling: 0.00091
training loss: tensor(1.3941) feature loss: tensor(0.6644)
Local adapation with distilling: 0.00091
training loss: tensor(1.0966) feature loss: tensor(0.6334)
Local adapation with distilling: 0.00091
training loss: tensor(1.1724) feature loss: tensor(0.6802)
Local adapation with distilling: 0.00091
training loss: tensor(1.1467) feature loss: tensor(0.6446)
Local adapation with distilling: 0.00091
training loss: tensor(1.2056) feature loss: tensor(0.6846)
Local adapation with distilling: 0.00091
training loss: tensor(1.1254) feature loss: tensor(0.6489)
Local adapation with distilling: 0.00091
training loss: tensor(1.1469) feature loss: tensor(0.6258)
Global Model Acc on global data: 0.3156 length of data: 10000
save a model
-------------Round number:  6  -------------
selected users: [17, 34, 0, 45, 60, 86, 20, 47, 44, 81]
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
all data: 242
Local adapation with distilling: 0.000892
training loss: tensor(0.9368) feature loss: tensor(0.5481)
Local adapation with distilling: 0.000892
training loss: tensor(1.0295) feature loss: tensor(0.5996)
Local adapation with distilling: 0.000892
training loss: tensor(1.0972) feature loss: tensor(0.6130)
Local adapation with distilling: 0.000892
training loss: tensor(1.0202) feature loss: tensor(0.5321)
Local adapation with distilling: 0.000892
training loss: tensor(1.0696) feature loss: tensor(0.6151)
Local adapation with distilling: 0.000892
training loss: tensor(1.0056) feature loss: tensor(0.5206)
Local adapation with distilling: 0.000892
training loss: tensor(1.0652) feature loss: tensor(0.5774)
Local adapation with distilling: 0.000892
training loss: tensor(0.9612) feature loss: tensor(0.5596)
Local adapation with distilling: 0.000892
training loss: tensor(1.0882) feature loss: tensor(0.5691)
Local adapation with distilling: 0.000892
training loss: tensor(1.5103) feature loss: tensor(0.6085)
Global Model Acc on global data: 0.3716 length of data: 10000
save a model
-------------Round number:  7  -------------
selected users: [37, 26, 78, 91, 49, 15, 93, 71, 86, 22]
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
all data: 254
Local adapation with distilling: 0.000874
training loss: tensor(1.0346) feature loss: tensor(0.5219)
Local adapation with distilling: 0.000874
training loss: tensor(0.9733) feature loss: tensor(0.5804)
Local adapation with distilling: 0.000874
training loss: tensor(1.0160) feature loss: tensor(0.6185)
Local adapation with distilling: 0.000874
training loss: tensor(1.0280) feature loss: tensor(0.5896)
Local adapation with distilling: 0.000874
training loss: tensor(1.0328) feature loss: tensor(0.6155)
Local adapation with distilling: 0.000874
training loss: tensor(1.0620) feature loss: tensor(0.5965)
Local adapation with distilling: 0.000874
training loss: tensor(0.9906) feature loss: tensor(0.6209)
Local adapation with distilling: 0.000874
training loss: tensor(0.9897) feature loss: tensor(0.5197)
Local adapation with distilling: 0.000874
training loss: tensor(0.9273) feature loss: tensor(0.5642)
Local adapation with distilling: 0.000874
training loss: tensor(1.3362) feature loss: tensor(0.5462)
Global Model Acc on global data: 0.36 length of data: 10000
-------------Round number:  8  -------------
selected users: [17, 23, 1, 44, 55, 99, 86, 29, 62, 33]
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([27, 16, 32, 32]) torch.Size([27])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
all data: 246
Local adapation with distilling: 0.000856
training loss: tensor(0.8753) feature loss: tensor(0.5225)
Local adapation with distilling: 0.000856
training loss: tensor(0.9470) feature loss: tensor(0.6361)
Local adapation with distilling: 0.000856
training loss: tensor(0.9502) feature loss: tensor(0.5249)
Local adapation with distilling: 0.000856
training loss: tensor(0.9542) feature loss: tensor(0.6053)
Local adapation with distilling: 0.000856
training loss: tensor(0.9491) feature loss: tensor(0.6103)
Local adapation with distilling: 0.000856
training loss: tensor(1.0205) feature loss: tensor(0.5952)
Local adapation with distilling: 0.000856
training loss: tensor(0.8398) feature loss: tensor(0.5343)
Local adapation with distilling: 0.000856
training loss: tensor(0.9196) feature loss: tensor(0.5355)
Local adapation with distilling: 0.000856
training loss: tensor(1.0005) feature loss: tensor(0.6096)
Local adapation with distilling: 0.000856
training loss: tensor(0.9787) feature loss: tensor(0.5631)
Global Model Acc on global data: 0.4024 length of data: 10000
save a model
-------------Round number:  9  -------------
selected users: [75, 42, 46, 68, 3, 39, 23, 20, 70, 73]
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
all data: 245
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.8793) feature loss: tensor(0.4999)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.9236) feature loss: tensor(0.4945)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.8732) feature loss: tensor(0.4536)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.8973) feature loss: tensor(0.5142)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.9248) feature loss: tensor(0.4772)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.9404) feature loss: tensor(0.4690)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.8479) feature loss: tensor(0.5202)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.9002) feature loss: tensor(0.4922)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.8541) feature loss: tensor(0.5394)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.8823) feature loss: tensor(0.5402)
Global Model Acc on global data: 0.398 length of data: 10000
-------------Round number:  10  -------------
selected users: [19, 14, 43, 37, 66, 3, 79, 41, 38, 68]
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([27, 16, 32, 32]) torch.Size([27])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([27, 16, 32, 32]) torch.Size([27])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
all data: 250
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.8239) feature loss: tensor(0.4999)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.8135) feature loss: tensor(0.4634)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.8460) feature loss: tensor(0.4952)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.8085) feature loss: tensor(0.4179)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.7562) feature loss: tensor(0.4312)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.7912) feature loss: tensor(0.4317)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.9162) feature loss: tensor(0.4645)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.8799) feature loss: tensor(0.4460)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.7553) feature loss: tensor(0.4600)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.7759) feature loss: tensor(0.4691)
Global Model Acc on global data: 0.3709 length of data: 10000
-------------Round number:  11  -------------
selected users: [46, 49, 22, 58, 41, 98, 62, 29, 30, 51]
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([27, 16, 32, 32]) torch.Size([27])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
all data: 243
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.7788) feature loss: tensor(0.4698)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.7798) feature loss: tensor(0.5363)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(1.1473) feature loss: tensor(0.4914)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.7994) feature loss: tensor(0.4981)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.8111) feature loss: tensor(0.4492)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.8228) feature loss: tensor(0.5191)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.8445) feature loss: tensor(0.4913)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.7547) feature loss: tensor(0.4675)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.8707) feature loss: tensor(0.5282)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.7970) feature loss: tensor(0.5245)
Global Model Acc on global data: 0.3945 length of data: 10000
-------------Round number:  12  -------------
selected users: [17, 41, 92, 14, 68, 31, 89, 15, 21, 60]
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([27, 16, 32, 32]) torch.Size([27])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
all data: 244
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.7084) feature loss: tensor(0.3996)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.6836) feature loss: tensor(0.4082)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.8379) feature loss: tensor(0.4541)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.6968) feature loss: tensor(0.4040)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.7077) feature loss: tensor(0.3924)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.9199) feature loss: tensor(0.4190)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.7263) feature loss: tensor(0.3966)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.8304) feature loss: tensor(0.4170)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.7804) feature loss: tensor(0.4426)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.8060) feature loss: tensor(0.4273)
Global Model Acc on global data: 0.4081 length of data: 10000
save a model
-------------Round number:  13  -------------
selected users: [37, 62, 83, 14, 43, 9, 44, 31, 69, 57]
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
all data: 242
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.6623) feature loss: tensor(0.3579)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.7321) feature loss: tensor(0.4397)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.6834) feature loss: tensor(0.4734)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.6410) feature loss: tensor(0.3975)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.7022) feature loss: tensor(0.4163)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(1.0190) feature loss: tensor(0.3882)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.7293) feature loss: tensor(0.3928)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.7826) feature loss: tensor(0.3901)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.7420) feature loss: tensor(0.4193)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.6904) feature loss: tensor(0.3753)
Global Model Acc on global data: 0.4216 length of data: 10000
save a model
-------------Round number:  14  -------------
selected users: [24, 39, 35, 44, 55, 70, 82, 40, 91, 65]
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
all data: 242
Local adapation with distilling: 0.000748
training loss: tensor(0.8498) feature loss: tensor(0.5122)
Local adapation with distilling: 0.000748
training loss: tensor(0.8386) feature loss: tensor(0.5005)
Local adapation with distilling: 0.000748
training loss: tensor(0.9447) feature loss: tensor(0.5329)
Local adapation with distilling: 0.000748
training loss: tensor(0.8311) feature loss: tensor(0.5625)
Local adapation with distilling: 0.000748
training loss: tensor(0.8615) feature loss: tensor(0.5979)
Local adapation with distilling: 0.000748
training loss: tensor(0.8778) feature loss: tensor(0.5483)
Local adapation with distilling: 0.000748
training loss: tensor(0.8699) feature loss: tensor(0.5775)
Local adapation with distilling: 0.000748
training loss: tensor(0.9103) feature loss: tensor(0.5364)
Local adapation with distilling: 0.000748
training loss: tensor(0.8979) feature loss: tensor(0.5537)
Local adapation with distilling: 0.000748
training loss: tensor(0.8244) feature loss: tensor(0.5761)
Global Model Acc on global data: 0.4386 length of data: 10000
save a model
-------------Round number:  15  -------------
selected users: [84, 36, 57, 51, 46, 78, 93, 14, 11, 59]
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
all data: 250
Local adapation with distilling: 0.00073
training loss: tensor(0.7567) feature loss: tensor(0.4468)
Local adapation with distilling: 0.00073
training loss: tensor(0.7206) feature loss: tensor(0.4495)
Local adapation with distilling: 0.00073
training loss: tensor(0.7374) feature loss: tensor(0.4055)
Local adapation with distilling: 0.00073
training loss: tensor(0.7414) feature loss: tensor(0.4157)
Local adapation with distilling: 0.00073
training loss: tensor(0.7431) feature loss: tensor(0.3979)
Local adapation with distilling: 0.00073
training loss: tensor(0.7847) feature loss: tensor(0.4646)
Local adapation with distilling: 0.00073
training loss: tensor(0.7767) feature loss: tensor(0.4888)
Local adapation with distilling: 0.00073
training loss: tensor(0.7095) feature loss: tensor(0.4530)
Local adapation with distilling: 0.00073
training loss: tensor(0.8320) feature loss: tensor(0.4454)
Local adapation with distilling: 0.00073
training loss: tensor(0.8500) feature loss: tensor(0.4185)
Global Model Acc on global data: 0.4641 length of data: 10000
save a model
-------------Round number:  16  -------------
selected users: [7, 25, 71, 42, 47, 29, 63, 88, 50, 9]
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([27, 16, 32, 32]) torch.Size([27])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
all data: 244
Local adapation with distilling: 0.000712
training loss: tensor(0.7638) feature loss: tensor(0.4059)
Local adapation with distilling: 0.000712
training loss: tensor(0.7136) feature loss: tensor(0.3954)
Local adapation with distilling: 0.000712
training loss: tensor(0.6724) feature loss: tensor(0.3633)
Local adapation with distilling: 0.000712
training loss: tensor(0.7371) feature loss: tensor(0.3784)
Local adapation with distilling: 0.000712
training loss: tensor(0.6399) feature loss: tensor(0.3893)
Local adapation with distilling: 0.000712
training loss: tensor(0.6671) feature loss: tensor(0.3892)
Local adapation with distilling: 0.000712
training loss: tensor(0.6736) feature loss: tensor(0.3919)
Local adapation with distilling: 0.000712
training loss: tensor(0.6766) feature loss: tensor(0.3999)
Local adapation with distilling: 0.000712
training loss: tensor(0.7116) feature loss: tensor(0.3924)
Local adapation with distilling: 0.000712
training loss: tensor(1.0813) feature loss: tensor(0.4076)
Global Model Acc on global data: 0.449 length of data: 10000
-------------Round number:  17  -------------
selected users: [71, 28, 9, 4, 73, 34, 94, 92, 47, 37]
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
all data: 244
Local adapation with distilling: 0.000694
training loss: tensor(0.5961) feature loss: tensor(0.3261)
Local adapation with distilling: 0.000694
training loss: tensor(0.7576) feature loss: tensor(0.3566)
Local adapation with distilling: 0.000694
training loss: tensor(1.2313) feature loss: tensor(0.3521)
Local adapation with distilling: 0.000694
training loss: tensor(0.6340) feature loss: tensor(0.3453)
Local adapation with distilling: 0.000694
training loss: tensor(0.7169) feature loss: tensor(0.3779)
Local adapation with distilling: 0.000694
training loss: tensor(0.6301) feature loss: tensor(0.3281)
Local adapation with distilling: 0.000694
training loss: tensor(0.6328) feature loss: tensor(0.3467)
Local adapation with distilling: 0.000694
training loss: tensor(0.7159) feature loss: tensor(0.3330)
Local adapation with distilling: 0.000694
training loss: tensor(0.5720) feature loss: tensor(0.3472)
Local adapation with distilling: 0.000694
training loss: tensor(0.6074) feature loss: tensor(0.3359)
Global Model Acc on global data: 0.4281 length of data: 10000
-------------Round number:  18  -------------
selected users: [53, 47, 43, 54, 33, 48, 0, 12, 44, 91]
random features: torch.Size([28, 16, 32, 32]) torch.Size([28])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
all data: 245
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.7535) feature loss: tensor(0.4709)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.7288) feature loss: tensor(0.4596)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.7755) feature loss: tensor(0.4819)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.8176) feature loss: tensor(0.4024)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.8297) feature loss: tensor(0.4338)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.9749) feature loss: tensor(0.4491)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.8587) feature loss: tensor(0.4477)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.9276) feature loss: tensor(0.4532)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.7982) feature loss: tensor(0.4543)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.7725) feature loss: tensor(0.4152)
Global Model Acc on global data: 0.447 length of data: 10000
-------------Round number:  19  -------------
selected users: [85, 72, 16, 18, 2, 38, 90, 30, 83, 61]
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([28, 16, 32, 32]) torch.Size([28])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([27, 16, 32, 32]) torch.Size([27])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
all data: 250
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.7400) feature loss: tensor(0.4348)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.7674) feature loss: tensor(0.4985)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.8191) feature loss: tensor(0.4141)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.9865) feature loss: tensor(0.4612)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.8105) feature loss: tensor(0.4304)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.7474) feature loss: tensor(0.4745)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.8754) feature loss: tensor(0.4620)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.8711) feature loss: tensor(0.4494)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.8035) feature loss: tensor(0.4431)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.7801) feature loss: tensor(0.4438)
Global Model Acc on global data: 0.4509 length of data: 10000
-------------Round number:  20  -------------
selected users: [70, 74, 2, 44, 56, 48, 12, 36, 0, 49]
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([27, 16, 32, 32]) torch.Size([27])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
all data: 242
Local adapation with distilling: 0.00064
training loss: tensor(0.6887) feature loss: tensor(0.3939)
Local adapation with distilling: 0.00064
training loss: tensor(0.6312) feature loss: tensor(0.3696)
Local adapation with distilling: 0.00064
training loss: tensor(0.6256) feature loss: tensor(0.4496)
Local adapation with distilling: 0.00064
training loss: tensor(0.6656) feature loss: tensor(0.3811)
Local adapation with distilling: 0.00064
training loss: tensor(0.6035) feature loss: tensor(0.3389)
Local adapation with distilling: 0.00064
training loss: tensor(0.6654) feature loss: tensor(0.3696)
Local adapation with distilling: 0.00064
training loss: tensor(0.6791) feature loss: tensor(0.4134)
Local adapation with distilling: 0.00064
training loss: tensor(0.6463) feature loss: tensor(0.4059)
Local adapation with distilling: 0.00064
training loss: tensor(0.6394) feature loss: tensor(0.4438)
Local adapation with distilling: 0.00064
training loss: tensor(0.6693) feature loss: tensor(0.3881)
Global Model Acc on global data: 0.4649 length of data: 10000
save a model
-------------Round number:  21  -------------
selected users: [23, 81, 85, 34, 62, 46, 42, 31, 93, 11]
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
all data: 244
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.7464) feature loss: tensor(0.4064)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(1.0244) feature loss: tensor(0.4213)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.6759) feature loss: tensor(0.3851)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.7511) feature loss: tensor(0.4256)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.7746) feature loss: tensor(0.4376)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.7059) feature loss: tensor(0.4082)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.7914) feature loss: tensor(0.3860)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.8672) feature loss: tensor(0.4392)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.7213) feature loss: tensor(0.4094)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.7463) feature loss: tensor(0.4087)
Global Model Acc on global data: 0.4995 length of data: 10000
save a model
-------------Round number:  22  -------------
selected users: [2, 49, 82, 31, 37, 12, 87, 42, 99, 85]
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
all data: 238
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.5732) feature loss: tensor(0.3235)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.5890) feature loss: tensor(0.3502)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.6846) feature loss: tensor(0.3377)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.6589) feature loss: tensor(0.3286)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.6226) feature loss: tensor(0.3355)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.5939) feature loss: tensor(0.3690)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.6900) feature loss: tensor(0.3638)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.5999) feature loss: tensor(0.3037)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.6319) feature loss: tensor(0.3620)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.5545) feature loss: tensor(0.3302)
Global Model Acc on global data: 0.5007 length of data: 10000
save a model
-------------Round number:  23  -------------
selected users: [26, 80, 82, 68, 77, 37, 3, 55, 20, 17]
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
all data: 245
Local adapation with distilling: 0.000586
training loss: tensor(0.6029) feature loss: tensor(0.3363)
Local adapation with distilling: 0.000586
training loss: tensor(0.6577) feature loss: tensor(0.4016)
Local adapation with distilling: 0.000586
training loss: tensor(0.6075) feature loss: tensor(0.3229)
Local adapation with distilling: 0.000586
training loss: tensor(0.6043) feature loss: tensor(0.3463)
Local adapation with distilling: 0.000586
training loss: tensor(0.6714) feature loss: tensor(0.3480)
Local adapation with distilling: 0.000586
training loss: tensor(0.5506) feature loss: tensor(0.3283)
Local adapation with distilling: 0.000586
training loss: tensor(0.6616) feature loss: tensor(0.3506)
Local adapation with distilling: 0.000586
training loss: tensor(0.6392) feature loss: tensor(0.3896)
Local adapation with distilling: 0.000586
training loss: tensor(0.6790) feature loss: tensor(0.3586)
Local adapation with distilling: 0.000586
training loss: tensor(0.6203) feature loss: tensor(0.3150)
Global Model Acc on global data: 0.5085 length of data: 10000
save a model
-------------Round number:  24  -------------
selected users: [26, 31, 37, 86, 76, 14, 88, 48, 71, 67]
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
all data: 246
Local adapation with distilling: 0.000568
training loss: tensor(0.5478) feature loss: tensor(0.3586)
Local adapation with distilling: 0.000568
training loss: tensor(0.6183) feature loss: tensor(0.3167)
Local adapation with distilling: 0.000568
training loss: tensor(0.5139) feature loss: tensor(0.3086)
Local adapation with distilling: 0.000568
training loss: tensor(0.5929) feature loss: tensor(0.3292)
Local adapation with distilling: 0.000568
training loss: tensor(0.6601) feature loss: tensor(0.3298)
Local adapation with distilling: 0.000568
training loss: tensor(0.5603) feature loss: tensor(0.3520)
Local adapation with distilling: 0.000568
training loss: tensor(0.5825) feature loss: tensor(0.3927)
Local adapation with distilling: 0.000568
training loss: tensor(0.6697) feature loss: tensor(0.3792)
Local adapation with distilling: 0.000568
training loss: tensor(0.5924) feature loss: tensor(0.3072)
Local adapation with distilling: 0.000568
training loss: tensor(0.6259) feature loss: tensor(0.3211)
Global Model Acc on global data: 0.4934 length of data: 10000
-------------Round number:  25  -------------
selected users: [41, 29, 33, 65, 74, 6, 57, 89, 87, 98]
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([27, 16, 32, 32]) torch.Size([27])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([27, 16, 32, 32]) torch.Size([27])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
all data: 247
Local adapation with distilling: 0.00055
training loss: tensor(0.5910) feature loss: tensor(0.3266)
Local adapation with distilling: 0.00055
training loss: tensor(0.6120) feature loss: tensor(0.3510)
Local adapation with distilling: 0.00055
training loss: tensor(0.6486) feature loss: tensor(0.3568)
Local adapation with distilling: 0.00055
training loss: tensor(0.6665) feature loss: tensor(0.3404)
Local adapation with distilling: 0.00055
training loss: tensor(0.5624) feature loss: tensor(0.3300)
Local adapation with distilling: 0.00055
training loss: tensor(0.6593) feature loss: tensor(0.3334)
Local adapation with distilling: 0.00055
training loss: tensor(0.5715) feature loss: tensor(0.3331)
Local adapation with distilling: 0.00055
training loss: tensor(0.6225) feature loss: tensor(0.3166)
Local adapation with distilling: 0.00055
training loss: tensor(0.6626) feature loss: tensor(0.3491)
Local adapation with distilling: 0.00055
training loss: tensor(0.5688) feature loss: tensor(0.3405)
Global Model Acc on global data: 0.4873 length of data: 10000
-------------Round number:  26  -------------
selected users: [8, 69, 84, 41, 25, 5, 63, 95, 33, 70]
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
all data: 243
Local adapation with distilling: 0.000532
training loss: tensor(0.7051) feature loss: tensor(0.3927)
Local adapation with distilling: 0.000532
training loss: tensor(0.7233) feature loss: tensor(0.3831)
Local adapation with distilling: 0.000532
training loss: tensor(0.7156) feature loss: tensor(0.3980)
Local adapation with distilling: 0.000532
training loss: tensor(0.6394) feature loss: tensor(0.3803)
Local adapation with distilling: 0.000532
training loss: tensor(0.7416) feature loss: tensor(0.3468)
Local adapation with distilling: 0.000532
training loss: tensor(0.7549) feature loss: tensor(0.3800)
Local adapation with distilling: 0.000532
training loss: tensor(0.6778) feature loss: tensor(0.3946)
Local adapation with distilling: 0.000532
training loss: tensor(0.7292) feature loss: tensor(0.4108)
Local adapation with distilling: 0.000532
training loss: tensor(0.6859) feature loss: tensor(0.4177)
Local adapation with distilling: 0.000532
training loss: tensor(0.7121) feature loss: tensor(0.3977)
Global Model Acc on global data: 0.5049 length of data: 10000
-------------Round number:  27  -------------
selected users: [89, 68, 43, 50, 40, 95, 27, 85, 22, 44]
random features: torch.Size([27, 16, 32, 32]) torch.Size([27])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
all data: 245
Local adapation with distilling: 0.000514
training loss: tensor(0.6057) feature loss: tensor(0.3309)
Local adapation with distilling: 0.000514
training loss: tensor(0.6468) feature loss: tensor(0.3485)
Local adapation with distilling: 0.000514
training loss: tensor(0.6434) feature loss: tensor(0.3372)
Local adapation with distilling: 0.000514
training loss: tensor(0.6410) feature loss: tensor(0.3516)
Local adapation with distilling: 0.000514
training loss: tensor(0.7257) feature loss: tensor(0.3793)
Local adapation with distilling: 0.000514
training loss: tensor(0.6408) feature loss: tensor(0.3360)
Local adapation with distilling: 0.000514
training loss: tensor(0.7491) feature loss: tensor(0.3362)
Local adapation with distilling: 0.000514
training loss: tensor(0.5937) feature loss: tensor(0.3682)
Local adapation with distilling: 0.000514
training loss: tensor(1.1341) feature loss: tensor(0.3525)
Local adapation with distilling: 0.000514
training loss: tensor(0.6965) feature loss: tensor(0.3698)
Global Model Acc on global data: 0.516 length of data: 10000
save a model
-------------Round number:  28  -------------
selected users: [67, 14, 0, 86, 13, 18, 30, 36, 52, 95]
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
all data: 244
Local adapation with distilling: 0.000496
training loss: tensor(0.5723) feature loss: tensor(0.2837)
Local adapation with distilling: 0.000496
training loss: tensor(0.5277) feature loss: tensor(0.3383)
Local adapation with distilling: 0.000496
training loss: tensor(0.5922) feature loss: tensor(0.3052)
Local adapation with distilling: 0.000496
training loss: tensor(0.5631) feature loss: tensor(0.2938)
Local adapation with distilling: 0.000496
training loss: tensor(0.5498) feature loss: tensor(0.3221)
Local adapation with distilling: 0.000496
training loss: tensor(0.6959) feature loss: tensor(0.2956)
Local adapation with distilling: 0.000496
training loss: tensor(0.6132) feature loss: tensor(0.3248)
Local adapation with distilling: 0.000496
training loss: tensor(0.5338) feature loss: tensor(0.3484)
Local adapation with distilling: 0.000496
training loss: tensor(0.8011) feature loss: tensor(0.3097)
Local adapation with distilling: 0.000496
training loss: tensor(0.5388) feature loss: tensor(0.2713)
Global Model Acc on global data: 0.5233 length of data: 10000
save a model
-------------Round number:  29  -------------
selected users: [73, 8, 10, 7, 19, 71, 92, 25, 38, 12]
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([27, 16, 32, 32]) torch.Size([27])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
all data: 245
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.6679) feature loss: tensor(0.3592)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.6477) feature loss: tensor(0.3689)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.7714) feature loss: tensor(0.4266)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.7534) feature loss: tensor(0.3327)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.6614) feature loss: tensor(0.3434)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.5855) feature loss: tensor(0.3392)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.7520) feature loss: tensor(0.3346)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.6873) feature loss: tensor(0.3680)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.6210) feature loss: tensor(0.3408)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.6637) feature loss: tensor(0.3775)
Global Model Acc on global data: 0.5386 length of data: 10000
save a model
-------------Round number:  30  -------------
selected users: [20, 91, 34, 52, 8, 74, 21, 88, 80, 89]
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([27, 16, 32, 32]) torch.Size([27])
all data: 243
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.5492) feature loss: tensor(0.2546)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.5347) feature loss: tensor(0.2627)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.5171) feature loss: tensor(0.2653)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.7705) feature loss: tensor(0.2733)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.4737) feature loss: tensor(0.2720)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.4475) feature loss: tensor(0.2652)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.4849) feature loss: tensor(0.2590)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.4601) feature loss: tensor(0.2893)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.5101) feature loss: tensor(0.2767)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.4910) feature loss: tensor(0.2364)
Global Model Acc on global data: 0.5198 length of data: 10000
-------------Round number:  31  -------------
selected users: [17, 33, 76, 3, 56, 0, 37, 8, 60, 67]
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([27, 16, 32, 32]) torch.Size([27])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
all data: 249
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.5441) feature loss: tensor(0.2778)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.5095) feature loss: tensor(0.2971)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.5686) feature loss: tensor(0.2748)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.5703) feature loss: tensor(0.2614)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.4863) feature loss: tensor(0.2606)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.5434) feature loss: tensor(0.3010)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.5147) feature loss: tensor(0.2519)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.4678) feature loss: tensor(0.2835)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.5691) feature loss: tensor(0.2974)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.5039) feature loss: tensor(0.2400)
Global Model Acc on global data: 0.5188 length of data: 10000
-------------Round number:  32  -------------
selected users: [22, 39, 85, 97, 55, 33, 80, 13, 27, 96]
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
all data: 244
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(1.5222) feature loss: tensor(0.3316)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.7707) feature loss: tensor(0.3165)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.5765) feature loss: tensor(0.3718)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.6733) feature loss: tensor(0.3853)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.6975) feature loss: tensor(0.3584)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.5764) feature loss: tensor(0.3760)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.6089) feature loss: tensor(0.3804)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.5741) feature loss: tensor(0.3895)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.7045) feature loss: tensor(0.3120)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(1.1723) feature loss: tensor(0.3850)
Global Model Acc on global data: 0.5366 length of data: 10000
-------------Round number:  33  -------------
selected users: [56, 90, 95, 82, 60, 71, 6, 81, 2, 70]
random features: torch.Size([27, 16, 32, 32]) torch.Size([27])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
all data: 246
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.5190) feature loss: tensor(0.3017)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.5880) feature loss: tensor(0.3907)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.5480) feature loss: tensor(0.3370)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.5985) feature loss: tensor(0.3714)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.5894) feature loss: tensor(0.4208)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.5217) feature loss: tensor(0.2917)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.6417) feature loss: tensor(0.3133)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(1.4645) feature loss: tensor(0.3631)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.5764) feature loss: tensor(0.3766)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.5405) feature loss: tensor(0.3720)
Global Model Acc on global data: 0.5355 length of data: 10000
-------------Round number:  34  -------------
selected users: [14, 74, 15, 4, 32, 59, 91, 10, 50, 53]
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([28, 16, 32, 32]) torch.Size([28])
all data: 247
Local adapation with distilling: 0.000388
training loss: tensor(0.5744) feature loss: tensor(0.3885)
Local adapation with distilling: 0.000388
training loss: tensor(0.5895) feature loss: tensor(0.3800)
Local adapation with distilling: 0.000388
training loss: tensor(0.7165) feature loss: tensor(0.3743)
Local adapation with distilling: 0.000388
training loss: tensor(0.7102) feature loss: tensor(0.3305)
Local adapation with distilling: 0.000388
training loss: tensor(0.7485) feature loss: tensor(0.3322)
Local adapation with distilling: 0.000388
training loss: tensor(0.7478) feature loss: tensor(0.3512)
Local adapation with distilling: 0.000388
training loss: tensor(0.5899) feature loss: tensor(0.3257)
Local adapation with distilling: 0.000388
training loss: tensor(0.6468) feature loss: tensor(0.3620)
Local adapation with distilling: 0.000388
training loss: tensor(0.5904) feature loss: tensor(0.3402)
Local adapation with distilling: 0.000388
training loss: tensor(0.6323) feature loss: tensor(0.3459)
Global Model Acc on global data: 0.5589 length of data: 10000
save a model
-------------Round number:  35  -------------
selected users: [40, 71, 98, 27, 70, 31, 10, 24, 51, 35]
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
all data: 241
Local adapation with distilling: 0.00037
training loss: tensor(0.6189) feature loss: tensor(0.3272)
Local adapation with distilling: 0.00037
training loss: tensor(0.4726) feature loss: tensor(0.2535)
Local adapation with distilling: 0.00037
training loss: tensor(0.5134) feature loss: tensor(0.3017)
Local adapation with distilling: 0.00037
training loss: tensor(0.5846) feature loss: tensor(0.2663)
Local adapation with distilling: 0.00037
training loss: tensor(0.5133) feature loss: tensor(0.3113)
Local adapation with distilling: 0.00037
training loss: tensor(0.6171) feature loss: tensor(0.2980)
Local adapation with distilling: 0.00037
training loss: tensor(0.5780) feature loss: tensor(0.3311)
Local adapation with distilling: 0.00037
training loss: tensor(0.5955) feature loss: tensor(0.2743)
Local adapation with distilling: 0.00037
training loss: tensor(0.5401) feature loss: tensor(0.3075)
Local adapation with distilling: 0.00037
training loss: tensor(0.5894) feature loss: tensor(0.2554)
Global Model Acc on global data: 0.5408 length of data: 10000
-------------Round number:  36  -------------
selected users: [59, 42, 2, 27, 28, 75, 58, 68, 52, 74]
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
all data: 244
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.6018) feature loss: tensor(0.3124)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.6158) feature loss: tensor(0.2939)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.5582) feature loss: tensor(0.2948)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.5479) feature loss: tensor(0.2902)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.8954) feature loss: tensor(0.3344)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.5812) feature loss: tensor(0.3179)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.5849) feature loss: tensor(0.3295)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.6524) feature loss: tensor(0.3442)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.8962) feature loss: tensor(0.3453)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.5106) feature loss: tensor(0.3130)
Global Model Acc on global data: 0.566 length of data: 10000
save a model
-------------Round number:  37  -------------
selected users: [61, 49, 86, 78, 5, 91, 81, 82, 89, 18]
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([27, 16, 32, 32]) torch.Size([27])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
all data: 251
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.4893) feature loss: tensor(0.2165)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.5220) feature loss: tensor(0.2860)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.5137) feature loss: tensor(0.2425)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.5396) feature loss: tensor(0.2710)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.5971) feature loss: tensor(0.2235)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.4616) feature loss: tensor(0.2411)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(1.0866) feature loss: tensor(0.2846)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.5738) feature loss: tensor(0.2567)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.5354) feature loss: tensor(0.2480)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.5668) feature loss: tensor(0.2689)
Global Model Acc on global data: 0.5733 length of data: 10000
save a model
-------------Round number:  38  -------------
selected users: [40, 73, 49, 45, 64, 16, 69, 17, 72, 66]
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([28, 16, 32, 32]) torch.Size([28])
random features: torch.Size([27, 16, 32, 32]) torch.Size([27])
all data: 253
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.6155) feature loss: tensor(0.2702)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.5464) feature loss: tensor(0.2963)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.5424) feature loss: tensor(0.3110)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.5610) feature loss: tensor(0.2730)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.7217) feature loss: tensor(0.2746)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.6072) feature loss: tensor(0.2645)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.5511) feature loss: tensor(0.2784)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.5297) feature loss: tensor(0.2471)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.5277) feature loss: tensor(0.2899)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.6371) feature loss: tensor(0.2761)
Global Model Acc on global data: 0.5546 length of data: 10000
-------------Round number:  39  -------------
selected users: [22, 53, 84, 57, 87, 58, 29, 21, 85, 79]
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([28, 16, 32, 32]) torch.Size([28])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([27, 16, 32, 32]) torch.Size([27])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
all data: 249
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(1.0423) feature loss: tensor(0.2925)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.5540) feature loss: tensor(0.2727)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.6425) feature loss: tensor(0.3386)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.6131) feature loss: tensor(0.2655)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.6109) feature loss: tensor(0.3101)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.5257) feature loss: tensor(0.3100)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.5698) feature loss: tensor(0.2828)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.6106) feature loss: tensor(0.2935)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.5417) feature loss: tensor(0.2859)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.6319) feature loss: tensor(0.2918)
Global Model Acc on global data: 0.5769 length of data: 10000
save a model
-------------Round number:  40  -------------
selected users: [79, 75, 63, 15, 38, 11, 40, 45, 39, 62]
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([27, 16, 32, 32]) torch.Size([27])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
all data: 247
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.5178) feature loss: tensor(0.2397)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.5022) feature loss: tensor(0.2707)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.4973) feature loss: tensor(0.2766)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.5900) feature loss: tensor(0.2435)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.4521) feature loss: tensor(0.2727)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.4921) feature loss: tensor(0.2520)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.4949) feature loss: tensor(0.2810)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.4981) feature loss: tensor(0.2321)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.5499) feature loss: tensor(0.2391)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.5861) feature loss: tensor(0.2639)
Global Model Acc on global data: 0.5637 length of data: 10000
-------------Round number:  41  -------------
selected users: [42, 94, 37, 6, 79, 32, 24, 0, 33, 93]
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
all data: 245
Local adapation with distilling: 0.000262
training loss: tensor(0.6732) feature loss: tensor(0.2882)
Local adapation with distilling: 0.000262
training loss: tensor(0.7045) feature loss: tensor(0.2785)
Local adapation with distilling: 0.000262
training loss: tensor(0.5913) feature loss: tensor(0.2708)
Local adapation with distilling: 0.000262
training loss: tensor(0.6370) feature loss: tensor(0.2769)
Local adapation with distilling: 0.000262
training loss: tensor(0.5574) feature loss: tensor(0.2769)
Local adapation with distilling: 0.000262
training loss: tensor(0.6948) feature loss: tensor(0.2923)
Local adapation with distilling: 0.000262
training loss: tensor(0.6295) feature loss: tensor(0.2616)
Local adapation with distilling: 0.000262
training loss: tensor(0.5615) feature loss: tensor(0.3017)
Local adapation with distilling: 0.000262
training loss: tensor(0.5609) feature loss: tensor(0.3055)
Local adapation with distilling: 0.000262
training loss: tensor(0.6161) feature loss: tensor(0.2864)
Global Model Acc on global data: 0.58 length of data: 10000
save a model
-------------Round number:  42  -------------
selected users: [83, 53, 70, 45, 44, 39, 22, 80, 10, 0]
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([28, 16, 32, 32]) torch.Size([28])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
all data: 246
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.5353) feature loss: tensor(0.2860)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.4483) feature loss: tensor(0.2564)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.4978) feature loss: tensor(0.3025)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.5120) feature loss: tensor(0.2268)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.5519) feature loss: tensor(0.2856)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.4886) feature loss: tensor(0.2301)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(1.0016) feature loss: tensor(0.2416)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.5278) feature loss: tensor(0.2999)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.5626) feature loss: tensor(0.2665)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.4692) feature loss: tensor(0.2683)
Global Model Acc on global data: 0.5693 length of data: 10000
-------------Round number:  43  -------------
selected users: [20, 2, 15, 22, 57, 91, 69, 55, 11, 79]
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
all data: 246
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.5526) feature loss: tensor(0.2462)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.4652) feature loss: tensor(0.2156)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.5178) feature loss: tensor(0.2117)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.6141) feature loss: tensor(0.2027)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.5160) feature loss: tensor(0.1945)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.4379) feature loss: tensor(0.2023)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.4602) feature loss: tensor(0.2102)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.4479) feature loss: tensor(0.2333)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.4939) feature loss: tensor(0.2056)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.4307) feature loss: tensor(0.2189)
Global Model Acc on global data: 0.5731 length of data: 10000
-------------Round number:  44  -------------
selected users: [42, 54, 27, 93, 39, 65, 7, 26, 24, 60]
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
all data: 245
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.5736) feature loss: tensor(0.2526)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.6788) feature loss: tensor(0.2247)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.5575) feature loss: tensor(0.2443)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.5457) feature loss: tensor(0.2649)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.4591) feature loss: tensor(0.2353)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.5109) feature loss: tensor(0.2475)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.6116) feature loss: tensor(0.2334)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.4794) feature loss: tensor(0.2826)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.5009) feature loss: tensor(0.2411)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.5364) feature loss: tensor(0.2633)
Global Model Acc on global data: 0.574 length of data: 10000
-------------Round number:  45  -------------
selected users: [0, 1, 62, 76, 37, 99, 78, 38, 2, 84]
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([27, 16, 32, 32]) torch.Size([27])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
all data: 248
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.4425) feature loss: tensor(0.2697)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.5278) feature loss: tensor(0.2185)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.5443) feature loss: tensor(0.2385)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.5882) feature loss: tensor(0.2077)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.4799) feature loss: tensor(0.2101)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.5544) feature loss: tensor(0.2334)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.5053) feature loss: tensor(0.2367)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.4495) feature loss: tensor(0.2384)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.4850) feature loss: tensor(0.2153)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.5574) feature loss: tensor(0.2303)
Global Model Acc on global data: 0.5934 length of data: 10000
save a model
-------------Round number:  46  -------------
selected users: [71, 33, 37, 10, 44, 34, 24, 98, 73, 95]
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
all data: 242
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.4545) feature loss: tensor(0.2245)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.4754) feature loss: tensor(0.2787)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.4378) feature loss: tensor(0.2513)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.5363) feature loss: tensor(0.2721)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.5314) feature loss: tensor(0.2599)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.5419) feature loss: tensor(0.2717)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.4713) feature loss: tensor(0.2526)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.4845) feature loss: tensor(0.3062)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.4970) feature loss: tensor(0.2619)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.4888) feature loss: tensor(0.2360)
Global Model Acc on global data: 0.5979 length of data: 10000
save a model
-------------Round number:  47  -------------
selected users: [17, 90, 94, 86, 63, 5, 38, 14, 40, 47]
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([27, 16, 32, 32]) torch.Size([27])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
all data: 247
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.4853) feature loss: tensor(0.2079)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.5703) feature loss: tensor(0.2293)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.5340) feature loss: tensor(0.2147)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.4996) feature loss: tensor(0.2088)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.4885) feature loss: tensor(0.2346)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.5635) feature loss: tensor(0.1959)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.4394) feature loss: tensor(0.2856)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.4592) feature loss: tensor(0.2782)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.5024) feature loss: tensor(0.2367)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.5360) feature loss: tensor(0.2604)
Global Model Acc on global data: 0.5906 length of data: 10000
-------------Round number:  48  -------------
selected users: [93, 5, 71, 9, 11, 79, 69, 8, 59, 63]
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
all data: 249
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.4748) feature loss: tensor(0.2170)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.4717) feature loss: tensor(0.1786)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.4012) feature loss: tensor(0.1835)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.9163) feature loss: tensor(0.1965)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.4804) feature loss: tensor(0.1936)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.4692) feature loss: tensor(0.1970)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.4544) feature loss: tensor(0.2353)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.4914) feature loss: tensor(0.2139)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.5376) feature loss: tensor(0.1811)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.4306) feature loss: tensor(0.2145)
Global Model Acc on global data: 0.5858 length of data: 10000
-------------Round number:  49  -------------
selected users: [76, 25, 28, 75, 81, 47, 41, 22, 29, 1]
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([27, 16, 32, 32]) torch.Size([27])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
all data: 249
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.5491) feature loss: tensor(0.2021)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.5392) feature loss: tensor(0.1903)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.7085) feature loss: tensor(0.1990)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.5285) feature loss: tensor(0.2051)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(1.0052) feature loss: tensor(0.2360)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.5261) feature loss: tensor(0.2151)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.4973) feature loss: tensor(0.2004)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.9678) feature loss: tensor(0.2008)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.4939) feature loss: tensor(0.1990)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.4871) feature loss: tensor(0.2001)
Global Model Acc on global data: 0.5961 length of data: 10000
-------------Round number:  50  -------------
selected users: [80, 79, 25, 15, 39, 40, 53, 17, 57, 50]
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([28, 16, 32, 32]) torch.Size([28])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
all data: 249
Local adapation with distilling: 0.0001
training loss: tensor(0.5057) feature loss: tensor(0.2325)
Local adapation with distilling: 0.0001
training loss: tensor(0.4186) feature loss: tensor(0.1876)
Local adapation with distilling: 0.0001
training loss: tensor(0.4574) feature loss: tensor(0.1753)
Local adapation with distilling: 0.0001
training loss: tensor(0.4218) feature loss: tensor(0.2039)
Local adapation with distilling: 0.0001
training loss: tensor(0.4184) feature loss: tensor(0.1868)
Local adapation with distilling: 0.0001
training loss: tensor(0.5234) feature loss: tensor(0.2025)
Local adapation with distilling: 0.0001
training loss: tensor(0.4422) feature loss: tensor(0.1867)
Local adapation with distilling: 0.0001
training loss: tensor(0.4157) feature loss: tensor(0.1819)
Local adapation with distilling: 0.0001
training loss: tensor(0.4853) feature loss: tensor(0.1829)
Local adapation with distilling: 0.0001
training loss: tensor(0.5329) feature loss: tensor(0.2087)
Global Model Acc on global data: 0.5938 length of data: 10000
-------------Round number:  51  -------------
selected users: [71, 43, 11, 83, 78, 19, 80, 4, 79, 75]
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
all data: 247
Local adapation with distilling: 0.0001
training loss: tensor(0.4048) feature loss: tensor(0.1848)
Local adapation with distilling: 0.0001
training loss: tensor(0.5333) feature loss: tensor(0.2003)
Local adapation with distilling: 0.0001
training loss: tensor(0.4468) feature loss: tensor(0.1860)
Local adapation with distilling: 0.0001
training loss: tensor(0.5392) feature loss: tensor(0.2262)
Local adapation with distilling: 0.0001
training loss: tensor(0.4928) feature loss: tensor(0.2187)
Local adapation with distilling: 0.0001
training loss: tensor(0.5465) feature loss: tensor(0.2050)
Local adapation with distilling: 0.0001
training loss: tensor(0.4671) feature loss: tensor(0.2469)
Local adapation with distilling: 0.0001
training loss: tensor(0.5655) feature loss: tensor(0.1779)
Local adapation with distilling: 0.0001
training loss: tensor(0.3905) feature loss: tensor(0.1980)
Local adapation with distilling: 0.0001
training loss: tensor(0.4691) feature loss: tensor(0.2230)
Global Model Acc on global data: 0.5949 length of data: 10000
-------------Round number:  52  -------------
selected users: [82, 8, 44, 19, 2, 73, 37, 89, 67, 18]
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([27, 16, 32, 32]) torch.Size([27])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
all data: 244
Local adapation with distilling: 0.0001
training loss: tensor(0.5030) feature loss: tensor(0.2055)
Local adapation with distilling: 0.0001
training loss: tensor(0.4670) feature loss: tensor(0.1928)
Local adapation with distilling: 0.0001
training loss: tensor(0.4936) feature loss: tensor(0.1919)
Local adapation with distilling: 0.0001
training loss: tensor(0.4465) feature loss: tensor(0.1701)
Local adapation with distilling: 0.0001
training loss: tensor(0.4097) feature loss: tensor(0.1833)
Local adapation with distilling: 0.0001
training loss: tensor(0.4275) feature loss: tensor(0.1789)
Local adapation with distilling: 0.0001
training loss: tensor(0.4186) feature loss: tensor(0.1771)
Local adapation with distilling: 0.0001
training loss: tensor(0.4376) feature loss: tensor(0.1748)
Local adapation with distilling: 0.0001
training loss: tensor(0.5219) feature loss: tensor(0.1862)
Local adapation with distilling: 0.0001
training loss: tensor(0.6031) feature loss: tensor(0.1903)
Global Model Acc on global data: 0.6055 length of data: 10000
save a model
-------------Round number:  53  -------------
selected users: [19, 78, 64, 3, 71, 32, 68, 42, 55, 97]
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
all data: 245
Local adapation with distilling: 0.0001
training loss: tensor(0.5272) feature loss: tensor(0.2474)
Local adapation with distilling: 0.0001
training loss: tensor(0.5005) feature loss: tensor(0.2791)
Local adapation with distilling: 0.0001
training loss: tensor(0.7304) feature loss: tensor(0.2616)
Local adapation with distilling: 0.0001
training loss: tensor(0.6354) feature loss: tensor(0.2480)
Local adapation with distilling: 0.0001
training loss: tensor(0.4364) feature loss: tensor(0.2391)
Local adapation with distilling: 0.0001
training loss: tensor(0.6529) feature loss: tensor(0.2574)
Local adapation with distilling: 0.0001
training loss: tensor(0.5646) feature loss: tensor(0.2827)
Local adapation with distilling: 0.0001
training loss: tensor(0.5396) feature loss: tensor(0.2366)
Local adapation with distilling: 0.0001
training loss: tensor(0.5583) feature loss: tensor(0.2959)
Local adapation with distilling: 0.0001
training loss: tensor(0.6326) feature loss: tensor(0.3010)
Global Model Acc on global data: 0.5988 length of data: 10000
-------------Round number:  54  -------------
selected users: [36, 70, 48, 94, 81, 46, 38, 29, 34, 22]
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([27, 16, 32, 32]) torch.Size([27])
random features: torch.Size([27, 16, 32, 32]) torch.Size([27])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
all data: 249
Local adapation with distilling: 0.0001
training loss: tensor(0.4616) feature loss: tensor(0.2054)
Local adapation with distilling: 0.0001
training loss: tensor(0.4117) feature loss: tensor(0.1907)
Local adapation with distilling: 0.0001
training loss: tensor(0.6056) feature loss: tensor(0.1988)
Local adapation with distilling: 0.0001
training loss: tensor(0.4450) feature loss: tensor(0.1735)
Local adapation with distilling: 0.0001
training loss: tensor(1.2062) feature loss: tensor(0.2025)
Local adapation with distilling: 0.0001
training loss: tensor(0.4755) feature loss: tensor(0.1811)
Local adapation with distilling: 0.0001
training loss: tensor(0.3821) feature loss: tensor(0.2085)
Local adapation with distilling: 0.0001
training loss: tensor(0.4220) feature loss: tensor(0.1814)
Local adapation with distilling: 0.0001
training loss: tensor(0.4426) feature loss: tensor(0.1911)
Local adapation with distilling: 0.0001
training loss: tensor(0.7615) feature loss: tensor(0.1759)
Global Model Acc on global data: 0.5976 length of data: 10000
-------------Round number:  55  -------------
selected users: [28, 92, 98, 95, 84, 34, 38, 76, 17, 78]
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([27, 16, 32, 32]) torch.Size([27])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
all data: 249
Local adapation with distilling: 0.0001
training loss: tensor(0.9856) feature loss: tensor(0.2216)
Local adapation with distilling: 0.0001
training loss: tensor(0.6955) feature loss: tensor(0.2168)
Local adapation with distilling: 0.0001
training loss: tensor(0.4529) feature loss: tensor(0.2431)
Local adapation with distilling: 0.0001
training loss: tensor(0.4529) feature loss: tensor(0.2235)
Local adapation with distilling: 0.0001
training loss: tensor(0.5391) feature loss: tensor(0.2268)
Local adapation with distilling: 0.0001
training loss: tensor(0.4593) feature loss: tensor(0.2170)
Local adapation with distilling: 0.0001
training loss: tensor(0.3853) feature loss: tensor(0.2549)
Local adapation with distilling: 0.0001
training loss: tensor(0.4747) feature loss: tensor(0.2072)
Local adapation with distilling: 0.0001
training loss: tensor(0.3893) feature loss: tensor(0.1972)
Local adapation with distilling: 0.0001
training loss: tensor(0.4241) feature loss: tensor(0.2424)
Global Model Acc on global data: 0.597 length of data: 10000
-------------Round number:  56  -------------
selected users: [92, 79, 23, 68, 52, 38, 73, 9, 59, 27]
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([27, 16, 32, 32]) torch.Size([27])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
all data: 248
Local adapation with distilling: 0.0001
training loss: tensor(0.5857) feature loss: tensor(0.2259)
Local adapation with distilling: 0.0001
training loss: tensor(0.4155) feature loss: tensor(0.2012)
Local adapation with distilling: 0.0001
training loss: tensor(0.6053) feature loss: tensor(0.2159)
Local adapation with distilling: 0.0001
training loss: tensor(0.4714) feature loss: tensor(0.2266)
Local adapation with distilling: 0.0001
training loss: tensor(0.6847) feature loss: tensor(0.2050)
Local adapation with distilling: 0.0001
training loss: tensor(0.3653) feature loss: tensor(0.2308)
Local adapation with distilling: 0.0001
training loss: tensor(0.4464) feature loss: tensor(0.2134)
Local adapation with distilling: 0.0001
training loss: tensor(0.7750) feature loss: tensor(0.2091)
Local adapation with distilling: 0.0001
training loss: tensor(0.5686) feature loss: tensor(0.1883)
Local adapation with distilling: 0.0001
training loss: tensor(0.4954) feature loss: tensor(0.1844)
Global Model Acc on global data: 0.593 length of data: 10000
-------------Round number:  57  -------------
selected users: [52, 17, 41, 3, 8, 98, 59, 20, 67, 7]
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
all data: 242
Local adapation with distilling: 0.0001
training loss: tensor(0.7479) feature loss: tensor(0.1846)
Local adapation with distilling: 0.0001
training loss: tensor(0.3428) feature loss: tensor(0.1691)
Local adapation with distilling: 0.0001
training loss: tensor(0.4031) feature loss: tensor(0.1828)
Local adapation with distilling: 0.0001
training loss: tensor(0.4718) feature loss: tensor(0.1635)
Local adapation with distilling: 0.0001
training loss: tensor(0.3798) feature loss: tensor(0.1781)
Local adapation with distilling: 0.0001
training loss: tensor(0.3776) feature loss: tensor(0.1876)
Local adapation with distilling: 0.0001
training loss: tensor(0.5231) feature loss: tensor(0.1661)
Local adapation with distilling: 0.0001
training loss: tensor(0.4820) feature loss: tensor(0.1883)
Local adapation with distilling: 0.0001
training loss: tensor(0.4226) feature loss: tensor(0.1671)
Local adapation with distilling: 0.0001
training loss: tensor(0.5379) feature loss: tensor(0.1773)
Global Model Acc on global data: 0.588 length of data: 10000
-------------Round number:  58  -------------
selected users: [43, 58, 8, 31, 70, 45, 69, 95, 50, 4]
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
all data: 243
Local adapation with distilling: 0.0001
training loss: tensor(0.5556) feature loss: tensor(0.2191)
Local adapation with distilling: 0.0001
training loss: tensor(0.4478) feature loss: tensor(0.2179)
Local adapation with distilling: 0.0001
training loss: tensor(0.4146) feature loss: tensor(0.2258)
Local adapation with distilling: 0.0001
training loss: tensor(0.5450) feature loss: tensor(0.1995)
Local adapation with distilling: 0.0001
training loss: tensor(0.4567) feature loss: tensor(0.2303)
Local adapation with distilling: 0.0001
training loss: tensor(0.4564) feature loss: tensor(0.2103)
Local adapation with distilling: 0.0001
training loss: tensor(0.4851) feature loss: tensor(0.2270)
Local adapation with distilling: 0.0001
training loss: tensor(0.4229) feature loss: tensor(0.2141)
Local adapation with distilling: 0.0001
training loss: tensor(0.5121) feature loss: tensor(0.2209)
Local adapation with distilling: 0.0001
training loss: tensor(0.5619) feature loss: tensor(0.1970)
Global Model Acc on global data: 0.6033 length of data: 10000
-------------Round number:  59  -------------
selected users: [38, 46, 24, 87, 30, 85, 16, 96, 18, 99]
random features: torch.Size([27, 16, 32, 32]) torch.Size([27])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
all data: 245
Local adapation with distilling: 0.0001
training loss: tensor(0.4457) feature loss: tensor(0.2624)
Local adapation with distilling: 0.0001
training loss: tensor(0.5137) feature loss: tensor(0.2151)
Local adapation with distilling: 0.0001
training loss: tensor(0.5370) feature loss: tensor(0.2156)
Local adapation with distilling: 0.0001
training loss: tensor(0.5679) feature loss: tensor(0.2352)
Local adapation with distilling: 0.0001
training loss: tensor(0.6176) feature loss: tensor(0.2396)
Local adapation with distilling: 0.0001
training loss: tensor(0.5347) feature loss: tensor(0.2379)
Local adapation with distilling: 0.0001
training loss: tensor(0.6046) feature loss: tensor(0.2123)
Local adapation with distilling: 0.0001
training loss: tensor(0.7811) feature loss: tensor(0.2455)
Local adapation with distilling: 0.0001
training loss: tensor(0.5900) feature loss: tensor(0.2662)
Local adapation with distilling: 0.0001
training loss: tensor(0.5936) feature loss: tensor(0.2371)
Global Model Acc on global data: 0.6038 length of data: 10000
-------------Round number:  60  -------------
selected users: [88, 4, 79, 14, 55, 3, 19, 28, 94, 25]
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
all data: 246
Local adapation with distilling: 0.0001
training loss: tensor(0.4572) feature loss: tensor(0.2436)
Local adapation with distilling: 0.0001
training loss: tensor(0.4677) feature loss: tensor(0.2288)
Local adapation with distilling: 0.0001
training loss: tensor(0.4078) feature loss: tensor(0.2075)
Local adapation with distilling: 0.0001
training loss: tensor(0.4625) feature loss: tensor(0.2681)
Local adapation with distilling: 0.0001
training loss: tensor(0.4958) feature loss: tensor(0.2262)
Local adapation with distilling: 0.0001
training loss: tensor(0.4601) feature loss: tensor(0.2002)
Local adapation with distilling: 0.0001
training loss: tensor(0.4729) feature loss: tensor(0.2242)
Local adapation with distilling: 0.0001
training loss: tensor(0.7582) feature loss: tensor(0.2198)
Local adapation with distilling: 0.0001
training loss: tensor(0.4684) feature loss: tensor(0.2063)
Local adapation with distilling: 0.0001
training loss: tensor(0.4666) feature loss: tensor(0.2245)
Global Model Acc on global data: 0.6001 length of data: 10000
-------------Round number:  61  -------------
selected users: [83, 1, 55, 9, 31, 28, 96, 29, 86, 63]
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([27, 16, 32, 32]) torch.Size([27])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
all data: 252
Local adapation with distilling: 0.0001
training loss: tensor(0.4795) feature loss: tensor(0.2188)
Local adapation with distilling: 0.0001
training loss: tensor(0.5000) feature loss: tensor(0.1898)
Local adapation with distilling: 0.0001
training loss: tensor(0.4356) feature loss: tensor(0.1981)
Local adapation with distilling: 0.0001
training loss: tensor(0.7529) feature loss: tensor(0.2029)
Local adapation with distilling: 0.0001
training loss: tensor(0.4975) feature loss: tensor(0.1911)
Local adapation with distilling: 0.0001
training loss: tensor(0.6619) feature loss: tensor(0.2155)
Local adapation with distilling: 0.0001
training loss: tensor(0.7972) feature loss: tensor(0.2073)
Local adapation with distilling: 0.0001
training loss: tensor(0.4248) feature loss: tensor(0.1817)
Local adapation with distilling: 0.0001
training loss: tensor(0.4315) feature loss: tensor(0.1883)
Local adapation with distilling: 0.0001
training loss: tensor(0.4239) feature loss: tensor(0.1913)
Global Model Acc on global data: 0.5985 length of data: 10000
-------------Round number:  62  -------------
selected users: [76, 48, 62, 80, 29, 99, 60, 89, 39, 69]
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([27, 16, 32, 32]) torch.Size([27])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([27, 16, 32, 32]) torch.Size([27])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
all data: 246
Local adapation with distilling: 0.0001
training loss: tensor(0.4428) feature loss: tensor(0.1887)
Local adapation with distilling: 0.0001
training loss: tensor(0.5184) feature loss: tensor(0.2153)
Local adapation with distilling: 0.0001
training loss: tensor(0.5364) feature loss: tensor(0.2112)
Local adapation with distilling: 0.0001
training loss: tensor(0.4246) feature loss: tensor(0.2146)
Local adapation with distilling: 0.0001
training loss: tensor(0.3640) feature loss: tensor(0.1980)
Local adapation with distilling: 0.0001
training loss: tensor(0.4590) feature loss: tensor(0.2094)
Local adapation with distilling: 0.0001
training loss: tensor(0.4544) feature loss: tensor(0.1961)
Local adapation with distilling: 0.0001
training loss: tensor(0.3761) feature loss: tensor(0.1943)
Local adapation with distilling: 0.0001
training loss: tensor(0.4095) feature loss: tensor(0.1898)
Local adapation with distilling: 0.0001
training loss: tensor(0.3875) feature loss: tensor(0.2091)
Global Model Acc on global data: 0.5903 length of data: 10000
-------------Round number:  63  -------------
selected users: [64, 59, 63, 2, 80, 20, 18, 48, 72, 51]
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([28, 16, 32, 32]) torch.Size([28])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
all data: 244
Local adapation with distilling: 0.0001
training loss: tensor(0.6500) feature loss: tensor(0.1868)
Local adapation with distilling: 0.0001
training loss: tensor(0.4145) feature loss: tensor(0.1825)
Local adapation with distilling: 0.0001
training loss: tensor(0.3876) feature loss: tensor(0.2018)
Local adapation with distilling: 0.0001
training loss: tensor(0.3807) feature loss: tensor(0.1946)
Local adapation with distilling: 0.0001
training loss: tensor(0.3938) feature loss: tensor(0.2140)
Local adapation with distilling: 0.0001
training loss: tensor(0.4628) feature loss: tensor(0.2035)
Local adapation with distilling: 0.0001
training loss: tensor(0.4824) feature loss: tensor(0.2060)
Local adapation with distilling: 0.0001
training loss: tensor(0.4411) feature loss: tensor(0.2155)
Local adapation with distilling: 0.0001
training loss: tensor(0.4658) feature loss: tensor(0.2185)
Local adapation with distilling: 0.0001
training loss: tensor(0.4836) feature loss: tensor(0.1954)
Global Model Acc on global data: 0.5993 length of data: 10000
-------------Round number:  64  -------------
selected users: [17, 22, 60, 92, 23, 19, 71, 94, 40, 49]
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
all data: 244
Local adapation with distilling: 0.0001
training loss: tensor(0.4143) feature loss: tensor(0.2027)
Local adapation with distilling: 0.0001
training loss: tensor(1.0475) feature loss: tensor(0.2133)
Local adapation with distilling: 0.0001
training loss: tensor(0.4186) feature loss: tensor(0.2363)
Local adapation with distilling: 0.0001
training loss: tensor(0.5509) feature loss: tensor(0.2228)
Local adapation with distilling: 0.0001
training loss: tensor(0.5633) feature loss: tensor(0.2053)
Local adapation with distilling: 0.0001
training loss: tensor(0.4499) feature loss: tensor(0.2126)
Local adapation with distilling: 0.0001
training loss: tensor(0.4165) feature loss: tensor(0.2038)
Local adapation with distilling: 0.0001
training loss: tensor(0.4851) feature loss: tensor(0.2058)
Local adapation with distilling: 0.0001
training loss: tensor(0.4872) feature loss: tensor(0.2444)
Local adapation with distilling: 0.0001
training loss: tensor(0.4512) feature loss: tensor(0.2373)
Global Model Acc on global data: 0.6001 length of data: 10000
-------------Round number:  65  -------------
selected users: [37, 81, 39, 61, 76, 90, 27, 86, 28, 69]
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
all data: 248
Local adapation with distilling: 0.0001
training loss: tensor(0.4082) feature loss: tensor(0.2003)
Local adapation with distilling: 0.0001
training loss: tensor(0.7967) feature loss: tensor(0.2111)
Local adapation with distilling: 0.0001
training loss: tensor(0.4125) feature loss: tensor(0.1960)
Local adapation with distilling: 0.0001
training loss: tensor(0.4826) feature loss: tensor(0.2023)
Local adapation with distilling: 0.0001
training loss: tensor(0.4179) feature loss: tensor(0.1904)
Local adapation with distilling: 0.0001
training loss: tensor(0.4645) feature loss: tensor(0.2129)
Local adapation with distilling: 0.0001
training loss: tensor(0.4646) feature loss: tensor(0.1914)
Local adapation with distilling: 0.0001
training loss: tensor(0.4224) feature loss: tensor(0.1952)
Local adapation with distilling: 0.0001
training loss: tensor(0.7318) feature loss: tensor(0.2305)
Local adapation with distilling: 0.0001
training loss: tensor(0.3922) feature loss: tensor(0.1933)
Global Model Acc on global data: 0.6068 length of data: 10000
save a model
-------------Round number:  66  -------------
selected users: [8, 93, 4, 5, 52, 41, 0, 73, 88, 68]
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
all data: 246
Local adapation with distilling: 0.0001
training loss: tensor(0.4232) feature loss: tensor(0.2614)
Local adapation with distilling: 0.0001
training loss: tensor(0.5041) feature loss: tensor(0.2331)
Local adapation with distilling: 0.0001
training loss: tensor(0.4266) feature loss: tensor(0.2017)
Local adapation with distilling: 0.0001
training loss: tensor(0.5285) feature loss: tensor(0.1943)
Local adapation with distilling: 0.0001
training loss: tensor(0.7097) feature loss: tensor(0.2097)
Local adapation with distilling: 0.0001
training loss: tensor(0.4367) feature loss: tensor(0.2213)
Local adapation with distilling: 0.0001
training loss: tensor(0.4451) feature loss: tensor(0.2386)
Local adapation with distilling: 0.0001
training loss: tensor(0.4705) feature loss: tensor(0.2464)
Local adapation with distilling: 0.0001
training loss: tensor(0.4418) feature loss: tensor(0.2236)
Local adapation with distilling: 0.0001
training loss: tensor(0.4651) feature loss: tensor(0.2339)
Global Model Acc on global data: 0.6005 length of data: 10000
-------------Round number:  67  -------------
selected users: [17, 24, 64, 93, 97, 29, 3, 70, 82, 11]
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([27, 16, 32, 32]) torch.Size([27])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
all data: 249
Local adapation with distilling: 0.0001
training loss: tensor(0.3805) feature loss: tensor(0.2082)
Local adapation with distilling: 0.0001
training loss: tensor(0.4456) feature loss: tensor(0.2117)
Local adapation with distilling: 0.0001
training loss: tensor(0.5884) feature loss: tensor(0.2098)
Local adapation with distilling: 0.0001
training loss: tensor(0.4534) feature loss: tensor(0.2405)
Local adapation with distilling: 0.0001
training loss: tensor(0.5178) feature loss: tensor(0.2515)
Local adapation with distilling: 0.0001
training loss: tensor(0.4234) feature loss: tensor(0.2504)
Local adapation with distilling: 0.0001
training loss: tensor(0.4828) feature loss: tensor(0.2128)
Local adapation with distilling: 0.0001
training loss: tensor(0.4384) feature loss: tensor(0.2443)
Local adapation with distilling: 0.0001
training loss: tensor(0.5212) feature loss: tensor(0.2599)
Local adapation with distilling: 0.0001
training loss: tensor(0.4364) feature loss: tensor(0.2281)
Global Model Acc on global data: 0.607 length of data: 10000
save a model
-------------Round number:  68  -------------
selected users: [29, 30, 16, 5, 38, 71, 76, 94, 99, 95]
random features: torch.Size([27, 16, 32, 32]) torch.Size([27])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([27, 16, 32, 32]) torch.Size([27])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
all data: 252
Local adapation with distilling: 0.0001
training loss: tensor(0.3395) feature loss: tensor(0.1672)
Local adapation with distilling: 0.0001
training loss: tensor(0.4674) feature loss: tensor(0.2033)
Local adapation with distilling: 0.0001
training loss: tensor(0.4442) feature loss: tensor(0.1686)
Local adapation with distilling: 0.0001
training loss: tensor(0.4381) feature loss: tensor(0.1740)
Local adapation with distilling: 0.0001
training loss: tensor(0.3427) feature loss: tensor(0.2098)
Local adapation with distilling: 0.0001
training loss: tensor(0.3303) feature loss: tensor(0.1838)
Local adapation with distilling: 0.0001
training loss: tensor(0.3630) feature loss: tensor(0.1812)
Local adapation with distilling: 0.0001
training loss: tensor(0.3690) feature loss: tensor(0.1821)
Local adapation with distilling: 0.0001
training loss: tensor(0.4208) feature loss: tensor(0.1914)
Local adapation with distilling: 0.0001
training loss: tensor(0.3694) feature loss: tensor(0.1874)
Global Model Acc on global data: 0.6076 length of data: 10000
save a model
-------------Round number:  69  -------------
selected users: [72, 31, 13, 83, 33, 8, 26, 89, 64, 97]
random features: torch.Size([28, 16, 32, 32]) torch.Size([28])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([27, 16, 32, 32]) torch.Size([27])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
all data: 250
Local adapation with distilling: 0.0001
training loss: tensor(0.4192) feature loss: tensor(0.2006)
Local adapation with distilling: 0.0001
training loss: tensor(0.5110) feature loss: tensor(0.1782)
Local adapation with distilling: 0.0001
training loss: tensor(0.4355) feature loss: tensor(0.2237)
Local adapation with distilling: 0.0001
training loss: tensor(0.4305) feature loss: tensor(0.2434)
Local adapation with distilling: 0.0001
training loss: tensor(0.4040) feature loss: tensor(0.2210)
Local adapation with distilling: 0.0001
training loss: tensor(0.3834) feature loss: tensor(0.1911)
Local adapation with distilling: 0.0001
training loss: tensor(0.4033) feature loss: tensor(0.1939)
Local adapation with distilling: 0.0001
training loss: tensor(0.3941) feature loss: tensor(0.1776)
Local adapation with distilling: 0.0001
training loss: tensor(0.4849) feature loss: tensor(0.1764)
Local adapation with distilling: 0.0001
training loss: tensor(0.4419) feature loss: tensor(0.2145)
Global Model Acc on global data: 0.6025 length of data: 10000
-------------Round number:  70  -------------
selected users: [81, 43, 88, 32, 50, 71, 73, 55, 42, 2]
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
all data: 243
Local adapation with distilling: 0.0001
training loss: tensor(0.7938) feature loss: tensor(0.1959)
Local adapation with distilling: 0.0001
training loss: tensor(0.4548) feature loss: tensor(0.2031)
Local adapation with distilling: 0.0001
training loss: tensor(0.3963) feature loss: tensor(0.2258)
Local adapation with distilling: 0.0001
training loss: tensor(0.5306) feature loss: tensor(0.1816)
Local adapation with distilling: 0.0001
training loss: tensor(0.4282) feature loss: tensor(0.2095)
Local adapation with distilling: 0.0001
training loss: tensor(0.3427) feature loss: tensor(0.1907)
Local adapation with distilling: 0.0001
training loss: tensor(0.3895) feature loss: tensor(0.2317)
Local adapation with distilling: 0.0001
training loss: tensor(0.4224) feature loss: tensor(0.2106)
Local adapation with distilling: 0.0001
training loss: tensor(0.4782) feature loss: tensor(0.1785)
Local adapation with distilling: 0.0001
training loss: tensor(0.3836) feature loss: tensor(0.1999)
Global Model Acc on global data: 0.61 length of data: 10000
save a model
-------------Round number:  71  -------------
selected users: [41, 84, 98, 42, 75, 25, 60, 19, 52, 29]
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([27, 16, 32, 32]) torch.Size([27])
all data: 244
Local adapation with distilling: 0.0001
training loss: tensor(0.4236) feature loss: tensor(0.2220)
Local adapation with distilling: 0.0001
training loss: tensor(0.5053) feature loss: tensor(0.2686)
Local adapation with distilling: 0.0001
training loss: tensor(0.4301) feature loss: tensor(0.2419)
Local adapation with distilling: 0.0001
training loss: tensor(0.4545) feature loss: tensor(0.2303)
Local adapation with distilling: 0.0001
training loss: tensor(0.4719) feature loss: tensor(0.2474)
Local adapation with distilling: 0.0001
training loss: tensor(0.4580) feature loss: tensor(0.2105)
Local adapation with distilling: 0.0001
training loss: tensor(0.4282) feature loss: tensor(0.2603)
Local adapation with distilling: 0.0001
training loss: tensor(0.4334) feature loss: tensor(0.2532)
Local adapation with distilling: 0.0001
training loss: tensor(0.6976) feature loss: tensor(0.2467)
Local adapation with distilling: 0.0001
training loss: tensor(0.3794) feature loss: tensor(0.2253)
Global Model Acc on global data: 0.6117 length of data: 10000
save a model
-------------Round number:  72  -------------
selected users: [76, 82, 43, 16, 84, 95, 78, 91, 30, 22]
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
all data: 248
Local adapation with distilling: 0.0001
training loss: tensor(0.3813) feature loss: tensor(0.1887)
Local adapation with distilling: 0.0001
training loss: tensor(0.4401) feature loss: tensor(0.2076)
Local adapation with distilling: 0.0001
training loss: tensor(0.4070) feature loss: tensor(0.2208)
Local adapation with distilling: 0.0001
training loss: tensor(0.4355) feature loss: tensor(0.1901)
Local adapation with distilling: 0.0001
training loss: tensor(0.4294) feature loss: tensor(0.2149)
Local adapation with distilling: 0.0001
training loss: tensor(0.3788) feature loss: tensor(0.2040)
Local adapation with distilling: 0.0001
training loss: tensor(0.4836) feature loss: tensor(0.2667)
Local adapation with distilling: 0.0001
training loss: tensor(0.4211) feature loss: tensor(0.2104)
Local adapation with distilling: 0.0001
training loss: tensor(0.4640) feature loss: tensor(0.2486)
Local adapation with distilling: 0.0001
training loss: tensor(0.6448) feature loss: tensor(0.1975)
Global Model Acc on global data: 0.6039 length of data: 10000
-------------Round number:  73  -------------
selected users: [49, 14, 34, 70, 90, 35, 68, 76, 80, 9]
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
all data: 244
Local adapation with distilling: 0.0001
training loss: tensor(0.4449) feature loss: tensor(0.2331)
Local adapation with distilling: 0.0001
training loss: tensor(0.4072) feature loss: tensor(0.2105)
Local adapation with distilling: 0.0001
training loss: tensor(0.3997) feature loss: tensor(0.1896)
Local adapation with distilling: 0.0001
training loss: tensor(0.4019) feature loss: tensor(0.2022)
Local adapation with distilling: 0.0001
training loss: tensor(0.4124) feature loss: tensor(0.2108)
Local adapation with distilling: 0.0001
training loss: tensor(0.5177) feature loss: tensor(0.2016)
Local adapation with distilling: 0.0001
training loss: tensor(0.4490) feature loss: tensor(0.2302)
Local adapation with distilling: 0.0001
training loss: tensor(0.3535) feature loss: tensor(0.1873)
Local adapation with distilling: 0.0001
training loss: tensor(0.3914) feature loss: tensor(0.2170)
Local adapation with distilling: 0.0001
training loss: tensor(0.8729) feature loss: tensor(0.2165)
Global Model Acc on global data: 0.6041 length of data: 10000
-------------Round number:  74  -------------
selected users: [85, 64, 63, 80, 6, 12, 43, 17, 7, 8]
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
all data: 245
Local adapation with distilling: 0.0001
training loss: tensor(0.3786) feature loss: tensor(0.2102)
Local adapation with distilling: 0.0001
training loss: tensor(0.4345) feature loss: tensor(0.1744)
Local adapation with distilling: 0.0001
training loss: tensor(0.3743) feature loss: tensor(0.1841)
Local adapation with distilling: 0.0001
training loss: tensor(0.3342) feature loss: tensor(0.1932)
Local adapation with distilling: 0.0001
training loss: tensor(0.5128) feature loss: tensor(0.1830)
Local adapation with distilling: 0.0001
training loss: tensor(0.4675) feature loss: tensor(0.1723)
Local adapation with distilling: 0.0001
training loss: tensor(0.3641) feature loss: tensor(0.1727)
Local adapation with distilling: 0.0001
training loss: tensor(0.3324) feature loss: tensor(0.1652)
Local adapation with distilling: 0.0001
training loss: tensor(0.4541) feature loss: tensor(0.1736)
Local adapation with distilling: 0.0001
training loss: tensor(0.3469) feature loss: tensor(0.1896)
Global Model Acc on global data: 0.6159 length of data: 10000
save a model
-------------Round number:  75  -------------
selected users: [36, 7, 6, 45, 56, 54, 22, 37, 53, 68]
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([27, 16, 32, 32]) torch.Size([27])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([28, 16, 32, 32]) torch.Size([28])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
all data: 255
Local adapation with distilling: 0.0001
training loss: tensor(0.4398) feature loss: tensor(0.2399)
Local adapation with distilling: 0.0001
training loss: tensor(0.4661) feature loss: tensor(0.2054)
Local adapation with distilling: 0.0001
training loss: tensor(0.4774) feature loss: tensor(0.2104)
Local adapation with distilling: 0.0001
training loss: tensor(0.4443) feature loss: tensor(0.2123)
Local adapation with distilling: 0.0001
training loss: tensor(0.4400) feature loss: tensor(0.2077)
Local adapation with distilling: 0.0001
training loss: tensor(0.5944) feature loss: tensor(0.2198)
Local adapation with distilling: 0.0001
training loss: tensor(0.5463) feature loss: tensor(0.2003)
Local adapation with distilling: 0.0001
training loss: tensor(0.3798) feature loss: tensor(0.2151)
Local adapation with distilling: 0.0001
training loss: tensor(0.4227) feature loss: tensor(0.2183)
Local adapation with distilling: 0.0001
training loss: tensor(0.4465) feature loss: tensor(0.2448)
Global Model Acc on global data: 0.6107 length of data: 10000
-------------Round number:  76  -------------
selected users: [38, 37, 32, 50, 10, 94, 19, 44, 86, 23]
random features: torch.Size([27, 16, 32, 32]) torch.Size([27])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
all data: 246
Local adapation with distilling: 0.0001
training loss: tensor(0.3714) feature loss: tensor(0.2251)
Local adapation with distilling: 0.0001
training loss: tensor(0.3389) feature loss: tensor(0.1936)
Local adapation with distilling: 0.0001
training loss: tensor(0.4979) feature loss: tensor(0.1851)
Local adapation with distilling: 0.0001
training loss: tensor(0.4016) feature loss: tensor(0.2062)
Local adapation with distilling: 0.0001
training loss: tensor(0.4515) feature loss: tensor(0.2036)
Local adapation with distilling: 0.0001
training loss: tensor(0.3598) feature loss: tensor(0.1766)
Local adapation with distilling: 0.0001
training loss: tensor(0.3635) feature loss: tensor(0.2012)
Local adapation with distilling: 0.0001
training loss: tensor(0.4369) feature loss: tensor(0.2142)
Local adapation with distilling: 0.0001
training loss: tensor(0.3739) feature loss: tensor(0.1982)
Local adapation with distilling: 0.0001
training loss: tensor(0.4619) feature loss: tensor(0.2225)
Global Model Acc on global data: 0.5999 length of data: 10000
-------------Round number:  77  -------------
selected users: [5, 93, 41, 96, 16, 42, 81, 91, 50, 58]
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
all data: 248
Local adapation with distilling: 0.0001
training loss: tensor(0.4934) feature loss: tensor(0.1907)
Local adapation with distilling: 0.0001
training loss: tensor(0.4773) feature loss: tensor(0.2286)
Local adapation with distilling: 0.0001
training loss: tensor(0.4072) feature loss: tensor(0.2011)
Local adapation with distilling: 0.0001
training loss: tensor(0.8322) feature loss: tensor(0.2115)
Local adapation with distilling: 0.0001
training loss: tensor(0.4219) feature loss: tensor(0.1905)
Local adapation with distilling: 0.0001
training loss: tensor(0.4317) feature loss: tensor(0.2047)
Local adapation with distilling: 0.0001
training loss: tensor(0.8594) feature loss: tensor(0.2287)
Local adapation with distilling: 0.0001
training loss: tensor(0.4503) feature loss: tensor(0.2071)
Local adapation with distilling: 0.0001
training loss: tensor(0.4099) feature loss: tensor(0.2145)
Local adapation with distilling: 0.0001
training loss: tensor(0.4280) feature loss: tensor(0.2220)
Global Model Acc on global data: 0.5996 length of data: 10000
-------------Round number:  78  -------------
selected users: [9, 46, 7, 63, 15, 2, 74, 31, 5, 36]
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
all data: 245
Local adapation with distilling: 0.0001
training loss: tensor(0.8968) feature loss: tensor(0.1911)
Local adapation with distilling: 0.0001
training loss: tensor(0.3878) feature loss: tensor(0.1743)
Local adapation with distilling: 0.0001
training loss: tensor(0.4309) feature loss: tensor(0.1709)
Local adapation with distilling: 0.0001
training loss: tensor(0.3776) feature loss: tensor(0.2033)
Local adapation with distilling: 0.0001
training loss: tensor(0.5214) feature loss: tensor(0.1993)
Local adapation with distilling: 0.0001
training loss: tensor(0.3649) feature loss: tensor(0.1799)
Local adapation with distilling: 0.0001
training loss: tensor(0.3994) feature loss: tensor(0.2044)
Local adapation with distilling: 0.0001
training loss: tensor(0.4604) feature loss: tensor(0.1717)
Local adapation with distilling: 0.0001
training loss: tensor(0.4234) feature loss: tensor(0.1727)
Local adapation with distilling: 0.0001
training loss: tensor(0.3810) feature loss: tensor(0.2078)
Global Model Acc on global data: 0.6126 length of data: 10000
-------------Round number:  79  -------------
selected users: [68, 18, 86, 60, 56, 32, 30, 24, 45, 92]
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([27, 16, 32, 32]) torch.Size([27])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
all data: 245
Local adapation with distilling: 0.0001
training loss: tensor(0.4308) feature loss: tensor(0.2149)
Local adapation with distilling: 0.0001
training loss: tensor(0.4406) feature loss: tensor(0.2058)
Local adapation with distilling: 0.0001
training loss: tensor(0.3451) feature loss: tensor(0.1973)
Local adapation with distilling: 0.0001
training loss: tensor(0.3610) feature loss: tensor(0.1952)
Local adapation with distilling: 0.0001
training loss: tensor(0.3712) feature loss: tensor(0.1814)
Local adapation with distilling: 0.0001
training loss: tensor(0.4688) feature loss: tensor(0.1816)
Local adapation with distilling: 0.0001
training loss: tensor(0.3985) feature loss: tensor(0.2056)
Local adapation with distilling: 0.0001
training loss: tensor(0.3792) feature loss: tensor(0.1800)
Local adapation with distilling: 0.0001
training loss: tensor(0.3909) feature loss: tensor(0.1785)
Local adapation with distilling: 0.0001
training loss: tensor(0.4841) feature loss: tensor(0.1981)
Global Model Acc on global data: 0.6069 length of data: 10000
-------------Round number:  80  -------------
selected users: [37, 65, 95, 53, 66, 30, 73, 85, 45, 36]
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([28, 16, 32, 32]) torch.Size([28])
random features: torch.Size([27, 16, 32, 32]) torch.Size([27])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
all data: 253
Local adapation with distilling: 0.0001
training loss: tensor(0.3471) feature loss: tensor(0.1702)
Local adapation with distilling: 0.0001
training loss: tensor(0.4570) feature loss: tensor(0.1948)
Local adapation with distilling: 0.0001
training loss: tensor(0.3695) feature loss: tensor(0.1844)
Local adapation with distilling: 0.0001
training loss: tensor(0.3804) feature loss: tensor(0.1732)
Local adapation with distilling: 0.0001
training loss: tensor(0.4751) feature loss: tensor(0.1752)
Local adapation with distilling: 0.0001
training loss: tensor(0.4044) feature loss: tensor(0.2058)
Local adapation with distilling: 0.0001
training loss: tensor(0.4093) feature loss: tensor(0.2185)
Local adapation with distilling: 0.0001
training loss: tensor(0.3893) feature loss: tensor(0.2108)
Local adapation with distilling: 0.0001
training loss: tensor(0.3631) feature loss: tensor(0.1857)
Local adapation with distilling: 0.0001
training loss: tensor(0.3688) feature loss: tensor(0.1951)
Global Model Acc on global data: 0.6173 length of data: 10000
save a model
-------------Round number:  81  -------------
selected users: [73, 89, 41, 78, 51, 21, 30, 69, 8, 5]
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([27, 16, 32, 32]) torch.Size([27])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
all data: 245
Local adapation with distilling: 0.0001
training loss: tensor(0.3612) feature loss: tensor(0.2038)
Local adapation with distilling: 0.0001
training loss: tensor(0.3533) feature loss: tensor(0.1675)
Local adapation with distilling: 0.0001
training loss: tensor(0.3595) feature loss: tensor(0.1842)
Local adapation with distilling: 0.0001
training loss: tensor(0.4062) feature loss: tensor(0.2059)
Local adapation with distilling: 0.0001
training loss: tensor(0.4074) feature loss: tensor(0.1740)
Local adapation with distilling: 0.0001
training loss: tensor(0.4257) feature loss: tensor(0.1863)
Local adapation with distilling: 0.0001
training loss: tensor(0.3739) feature loss: tensor(0.2059)
Local adapation with distilling: 0.0001
training loss: tensor(0.3769) feature loss: tensor(0.2013)
Local adapation with distilling: 0.0001
training loss: tensor(0.3423) feature loss: tensor(0.1915)
Local adapation with distilling: 0.0001
training loss: tensor(0.3666) feature loss: tensor(0.1665)
Global Model Acc on global data: 0.6142 length of data: 10000
-------------Round number:  82  -------------
selected users: [72, 33, 58, 2, 55, 84, 54, 75, 28, 40]
random features: torch.Size([28, 16, 32, 32]) torch.Size([28])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
all data: 247
Local adapation with distilling: 0.0001
training loss: tensor(0.3978) feature loss: tensor(0.2134)
Local adapation with distilling: 0.0001
training loss: tensor(0.3927) feature loss: tensor(0.2250)
Local adapation with distilling: 0.0001
training loss: tensor(0.3786) feature loss: tensor(0.2379)
Local adapation with distilling: 0.0001
training loss: tensor(0.3645) feature loss: tensor(0.2040)
Local adapation with distilling: 0.0001
training loss: tensor(0.4179) feature loss: tensor(0.2084)
Local adapation with distilling: 0.0001
training loss: tensor(0.4395) feature loss: tensor(0.2166)
Local adapation with distilling: 0.0001
training loss: tensor(0.5346) feature loss: tensor(0.1814)
Local adapation with distilling: 0.0001
training loss: tensor(0.4377) feature loss: tensor(0.2165)
Local adapation with distilling: 0.0001
training loss: tensor(0.8198) feature loss: tensor(0.2038)
Local adapation with distilling: 0.0001
training loss: tensor(0.4346) feature loss: tensor(0.2158)
Global Model Acc on global data: 0.6049 length of data: 10000
-------------Round number:  83  -------------
selected users: [6, 65, 95, 84, 61, 12, 30, 69, 35, 1]
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
all data: 247
Local adapation with distilling: 0.0001
training loss: tensor(0.4995) feature loss: tensor(0.2188)
Local adapation with distilling: 0.0001
training loss: tensor(0.4719) feature loss: tensor(0.2382)
Local adapation with distilling: 0.0001
training loss: tensor(0.3763) feature loss: tensor(0.2294)
Local adapation with distilling: 0.0001
training loss: tensor(0.4398) feature loss: tensor(0.2714)
Local adapation with distilling: 0.0001
training loss: tensor(0.4731) feature loss: tensor(0.2091)
Local adapation with distilling: 0.0001
training loss: tensor(0.4635) feature loss: tensor(0.2401)
Local adapation with distilling: 0.0001
training loss: tensor(0.4029) feature loss: tensor(0.2590)
Local adapation with distilling: 0.0001
training loss: tensor(0.4171) feature loss: tensor(0.2569)
Local adapation with distilling: 0.0001
training loss: tensor(0.5062) feature loss: tensor(0.2174)
Local adapation with distilling: 0.0001
training loss: tensor(0.5267) feature loss: tensor(0.2343)
Global Model Acc on global data: 0.6039 length of data: 10000
-------------Round number:  84  -------------
selected users: [94, 55, 80, 1, 90, 11, 32, 8, 6, 82]
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
all data: 245
Local adapation with distilling: 0.0001
training loss: tensor(0.3821) feature loss: tensor(0.1886)
Local adapation with distilling: 0.0001
training loss: tensor(0.3677) feature loss: tensor(0.2266)
Local adapation with distilling: 0.0001
training loss: tensor(0.3723) feature loss: tensor(0.2307)
Local adapation with distilling: 0.0001
training loss: tensor(0.4108) feature loss: tensor(0.2116)
Local adapation with distilling: 0.0001
training loss: tensor(0.4139) feature loss: tensor(0.2273)
Local adapation with distilling: 0.0001
training loss: tensor(0.3898) feature loss: tensor(0.2181)
Local adapation with distilling: 0.0001
training loss: tensor(0.4433) feature loss: tensor(0.1887)
Local adapation with distilling: 0.0001
training loss: tensor(0.3383) feature loss: tensor(0.2171)
Local adapation with distilling: 0.0001
training loss: tensor(0.4023) feature loss: tensor(0.2084)
Local adapation with distilling: 0.0001
training loss: tensor(0.4030) feature loss: tensor(0.2296)
Global Model Acc on global data: 0.6024 length of data: 10000
-------------Round number:  85  -------------
selected users: [81, 25, 40, 87, 41, 23, 10, 89, 50, 54]
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([27, 16, 32, 32]) torch.Size([27])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
all data: 243
Local adapation with distilling: 0.0001
training loss: tensor(0.6974) feature loss: tensor(0.1940)
Local adapation with distilling: 0.0001
training loss: tensor(0.3954) feature loss: tensor(0.1720)
Local adapation with distilling: 0.0001
training loss: tensor(0.3687) feature loss: tensor(0.1866)
Local adapation with distilling: 0.0001
training loss: tensor(0.3997) feature loss: tensor(0.1840)
Local adapation with distilling: 0.0001
training loss: tensor(0.3314) feature loss: tensor(0.1775)
Local adapation with distilling: 0.0001
training loss: tensor(0.4343) feature loss: tensor(0.1930)
Local adapation with distilling: 0.0001
training loss: tensor(0.3965) feature loss: tensor(0.2074)
Local adapation with distilling: 0.0001
training loss: tensor(0.3379) feature loss: tensor(0.1664)
Local adapation with distilling: 0.0001
training loss: tensor(0.3527) feature loss: tensor(0.1825)
Local adapation with distilling: 0.0001
training loss: tensor(0.4347) feature loss: tensor(0.1653)
Global Model Acc on global data: 0.5999 length of data: 10000
-------------Round number:  86  -------------
selected users: [69, 74, 34, 68, 42, 0, 32, 88, 8, 3]
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
all data: 241
Local adapation with distilling: 0.0001
training loss: tensor(0.3605) feature loss: tensor(0.2219)
Local adapation with distilling: 0.0001
training loss: tensor(0.3939) feature loss: tensor(0.2226)
Local adapation with distilling: 0.0001
training loss: tensor(0.3705) feature loss: tensor(0.1801)
Local adapation with distilling: 0.0001
training loss: tensor(0.3905) feature loss: tensor(0.2021)
Local adapation with distilling: 0.0001
training loss: tensor(0.3790) feature loss: tensor(0.1782)
Local adapation with distilling: 0.0001
training loss: tensor(0.3969) feature loss: tensor(0.2041)
Local adapation with distilling: 0.0001
training loss: tensor(0.3918) feature loss: tensor(0.1815)
Local adapation with distilling: 0.0001
training loss: tensor(0.3765) feature loss: tensor(0.2235)
Local adapation with distilling: 0.0001
training loss: tensor(0.3350) feature loss: tensor(0.2116)
Local adapation with distilling: 0.0001
training loss: tensor(0.4006) feature loss: tensor(0.1708)
Global Model Acc on global data: 0.6014 length of data: 10000
-------------Round number:  87  -------------
selected users: [16, 81, 85, 32, 39, 25, 26, 29, 65, 7]
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([27, 16, 32, 32]) torch.Size([27])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
all data: 250
Local adapation with distilling: 0.0001
training loss: tensor(0.3774) feature loss: tensor(0.1788)
Local adapation with distilling: 0.0001
training loss: tensor(0.6976) feature loss: tensor(0.1928)
Local adapation with distilling: 0.0001
training loss: tensor(0.3665) feature loss: tensor(0.2287)
Local adapation with distilling: 0.0001
training loss: tensor(0.3662) feature loss: tensor(0.1819)
Local adapation with distilling: 0.0001
training loss: tensor(0.4077) feature loss: tensor(0.1803)
Local adapation with distilling: 0.0001
training loss: tensor(0.3773) feature loss: tensor(0.1823)
Local adapation with distilling: 0.0001
training loss: tensor(0.3841) feature loss: tensor(0.2312)
Local adapation with distilling: 0.0001
training loss: tensor(0.3463) feature loss: tensor(0.1882)
Local adapation with distilling: 0.0001
training loss: tensor(0.4021) feature loss: tensor(0.2300)
Local adapation with distilling: 0.0001
training loss: tensor(0.4091) feature loss: tensor(0.1844)
Global Model Acc on global data: 0.62 length of data: 10000
save a model
-------------Round number:  88  -------------
selected users: [95, 53, 43, 84, 2, 74, 55, 31, 54, 97]
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([28, 16, 32, 32]) torch.Size([28])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
all data: 246
Local adapation with distilling: 0.0001
training loss: tensor(0.3309) feature loss: tensor(0.1810)
Local adapation with distilling: 0.0001
training loss: tensor(0.3548) feature loss: tensor(0.1684)
Local adapation with distilling: 0.0001
training loss: tensor(0.3759) feature loss: tensor(0.1918)
Local adapation with distilling: 0.0001
training loss: tensor(0.3783) feature loss: tensor(0.1976)
Local adapation with distilling: 0.0001
training loss: tensor(0.3372) feature loss: tensor(0.1890)
Local adapation with distilling: 0.0001
training loss: tensor(0.3604) feature loss: tensor(0.1932)
Local adapation with distilling: 0.0001
training loss: tensor(0.3583) feature loss: tensor(0.1894)
Local adapation with distilling: 0.0001
training loss: tensor(0.4074) feature loss: tensor(0.1815)
Local adapation with distilling: 0.0001
training loss: tensor(0.4337) feature loss: tensor(0.1674)
Local adapation with distilling: 0.0001
training loss: tensor(0.4072) feature loss: tensor(0.2141)
Global Model Acc on global data: 0.6168 length of data: 10000
-------------Round number:  89  -------------
selected users: [65, 21, 87, 6, 46, 74, 44, 60, 72, 5]
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([28, 16, 32, 32]) torch.Size([28])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
all data: 245
Local adapation with distilling: 0.0001
training loss: tensor(0.3867) feature loss: tensor(0.2145)
Local adapation with distilling: 0.0001
training loss: tensor(0.4034) feature loss: tensor(0.1954)
Local adapation with distilling: 0.0001
training loss: tensor(0.4163) feature loss: tensor(0.1883)
Local adapation with distilling: 0.0001
training loss: tensor(0.4004) feature loss: tensor(0.1793)
Local adapation with distilling: 0.0001
training loss: tensor(0.4044) feature loss: tensor(0.1858)
Local adapation with distilling: 0.0001
training loss: tensor(0.3570) feature loss: tensor(0.2086)
Local adapation with distilling: 0.0001
training loss: tensor(0.4149) feature loss: tensor(0.1826)
Local adapation with distilling: 0.0001
training loss: tensor(0.3671) feature loss: tensor(0.1960)
Local adapation with distilling: 0.0001
training loss: tensor(0.3996) feature loss: tensor(0.2268)
Local adapation with distilling: 0.0001
training loss: tensor(0.3815) feature loss: tensor(0.1726)
Global Model Acc on global data: 0.6158 length of data: 10000
-------------Round number:  90  -------------
selected users: [25, 85, 96, 89, 65, 94, 5, 35, 36, 92]
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([27, 16, 32, 32]) torch.Size([27])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
all data: 250
Local adapation with distilling: 0.0001
training loss: tensor(0.3466) feature loss: tensor(0.1648)
Local adapation with distilling: 0.0001
training loss: tensor(0.3447) feature loss: tensor(0.1972)
Local adapation with distilling: 0.0001
training loss: tensor(0.6297) feature loss: tensor(0.2025)
Local adapation with distilling: 0.0001
training loss: tensor(0.3265) feature loss: tensor(0.1676)
Local adapation with distilling: 0.0001
training loss: tensor(0.3363) feature loss: tensor(0.1847)
Local adapation with distilling: 0.0001
training loss: tensor(0.3461) feature loss: tensor(0.1726)
Local adapation with distilling: 0.0001
training loss: tensor(0.3180) feature loss: tensor(0.1612)
Local adapation with distilling: 0.0001
training loss: tensor(0.4357) feature loss: tensor(0.1748)
Local adapation with distilling: 0.0001
training loss: tensor(0.3524) feature loss: tensor(0.1907)
Local adapation with distilling: 0.0001
training loss: tensor(0.3900) feature loss: tensor(0.1807)
Global Model Acc on global data: 0.6078 length of data: 10000
-------------Round number:  91  -------------
selected users: [75, 25, 3, 52, 78, 54, 59, 26, 62, 97]
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
all data: 249
Local adapation with distilling: 0.0001
training loss: tensor(0.3417) feature loss: tensor(0.1610)
Local adapation with distilling: 0.0001
training loss: tensor(0.2892) feature loss: tensor(0.1422)
Local adapation with distilling: 0.0001
training loss: tensor(0.3395) feature loss: tensor(0.1496)
Local adapation with distilling: 0.0001
training loss: tensor(0.5032) feature loss: tensor(0.1625)
Local adapation with distilling: 0.0001
training loss: tensor(0.3725) feature loss: tensor(0.2019)
Local adapation with distilling: 0.0001
training loss: tensor(0.3366) feature loss: tensor(0.1424)
Local adapation with distilling: 0.0001
training loss: tensor(0.3644) feature loss: tensor(0.1499)
Local adapation with distilling: 0.0001
training loss: tensor(0.3240) feature loss: tensor(0.1753)
Local adapation with distilling: 0.0001
training loss: tensor(0.4009) feature loss: tensor(0.1631)
Local adapation with distilling: 0.0001
training loss: tensor(0.3516) feature loss: tensor(0.1702)
Global Model Acc on global data: 0.5966 length of data: 10000
-------------Round number:  92  -------------
selected users: [25, 99, 73, 61, 66, 36, 23, 83, 77, 6]
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([27, 16, 32, 32]) torch.Size([27])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
all data: 249
Local adapation with distilling: 0.0001
training loss: tensor(0.3463) feature loss: tensor(0.1770)
Local adapation with distilling: 0.0001
training loss: tensor(0.4389) feature loss: tensor(0.1996)
Local adapation with distilling: 0.0001
training loss: tensor(0.4051) feature loss: tensor(0.2220)
Local adapation with distilling: 0.0001
training loss: tensor(0.4242) feature loss: tensor(0.2018)
Local adapation with distilling: 0.0001
training loss: tensor(0.4403) feature loss: tensor(0.2065)
Local adapation with distilling: 0.0001
training loss: tensor(0.3624) feature loss: tensor(0.2384)
Local adapation with distilling: 0.0001
training loss: tensor(0.4415) feature loss: tensor(0.2427)
Local adapation with distilling: 0.0001
training loss: tensor(0.4391) feature loss: tensor(0.2560)
Local adapation with distilling: 0.0001
training loss: tensor(0.5191) feature loss: tensor(0.2005)
Local adapation with distilling: 0.0001
training loss: tensor(0.3714) feature loss: tensor(0.1855)
Global Model Acc on global data: 0.5985 length of data: 10000
-------------Round number:  93  -------------
selected users: [75, 82, 56, 27, 42, 35, 1, 97, 66, 61]
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([27, 16, 32, 32]) torch.Size([27])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([27, 16, 32, 32]) torch.Size([27])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
all data: 248
Local adapation with distilling: 0.0001
training loss: tensor(0.3823) feature loss: tensor(0.2205)
Local adapation with distilling: 0.0001
training loss: tensor(0.4059) feature loss: tensor(0.2328)
Local adapation with distilling: 0.0001
training loss: tensor(0.3631) feature loss: tensor(0.2114)
Local adapation with distilling: 0.0001
training loss: tensor(0.4593) feature loss: tensor(0.2080)
Local adapation with distilling: 0.0001
training loss: tensor(0.4074) feature loss: tensor(0.2032)
Local adapation with distilling: 0.0001
training loss: tensor(0.4300) feature loss: tensor(0.2056)
Local adapation with distilling: 0.0001
training loss: tensor(0.5482) feature loss: tensor(0.2083)
Local adapation with distilling: 0.0001
training loss: tensor(0.4076) feature loss: tensor(0.2392)
Local adapation with distilling: 0.0001
training loss: tensor(0.4118) feature loss: tensor(0.1892)
Local adapation with distilling: 0.0001
training loss: tensor(0.4004) feature loss: tensor(0.2136)
Global Model Acc on global data: 0.6148 length of data: 10000
-------------Round number:  94  -------------
selected users: [13, 73, 5, 18, 99, 48, 23, 4, 35, 17]
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
all data: 246
Local adapation with distilling: 0.0001
training loss: tensor(0.3598) feature loss: tensor(0.1799)
Local adapation with distilling: 0.0001
training loss: tensor(0.2899) feature loss: tensor(0.1539)
Local adapation with distilling: 0.0001
training loss: tensor(0.2870) feature loss: tensor(0.1404)
Local adapation with distilling: 0.0001
training loss: tensor(0.4214) feature loss: tensor(0.1584)
Local adapation with distilling: 0.0001
training loss: tensor(0.3577) feature loss: tensor(0.1562)
Local adapation with distilling: 0.0001
training loss: tensor(0.4151) feature loss: tensor(0.1525)
Local adapation with distilling: 0.0001
training loss: tensor(0.3240) feature loss: tensor(0.1427)
Local adapation with distilling: 0.0001
training loss: tensor(0.3624) feature loss: tensor(0.1336)
Local adapation with distilling: 0.0001
training loss: tensor(0.3067) feature loss: tensor(0.1474)
Local adapation with distilling: 0.0001
training loss: tensor(0.2857) feature loss: tensor(0.1349)
Global Model Acc on global data: 0.62 length of data: 10000
-------------Round number:  95  -------------
selected users: [88, 9, 1, 60, 95, 26, 45, 71, 44, 21]
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
all data: 246
Local adapation with distilling: 0.0001
training loss: tensor(0.3115) feature loss: tensor(0.1702)
Local adapation with distilling: 0.0001
training loss: tensor(0.6521) feature loss: tensor(0.1676)
Local adapation with distilling: 0.0001
training loss: tensor(0.3072) feature loss: tensor(0.1431)
Local adapation with distilling: 0.0001
training loss: tensor(0.3034) feature loss: tensor(0.1514)
Local adapation with distilling: 0.0001
training loss: tensor(0.2561) feature loss: tensor(0.1452)
Local adapation with distilling: 0.0001
training loss: tensor(0.2993) feature loss: tensor(0.1621)
Local adapation with distilling: 0.0001
training loss: tensor(0.2802) feature loss: tensor(0.1409)
Local adapation with distilling: 0.0001
training loss: tensor(0.2558) feature loss: tensor(0.1365)
Local adapation with distilling: 0.0001
training loss: tensor(0.3437) feature loss: tensor(0.1642)
Local adapation with distilling: 0.0001
training loss: tensor(0.3195) feature loss: tensor(0.1545)
Global Model Acc on global data: 0.6083 length of data: 10000
-------------Round number:  96  -------------
selected users: [41, 28, 52, 15, 87, 17, 75, 42, 45, 49]
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
all data: 243
Local adapation with distilling: 0.0001
training loss: tensor(0.3115) feature loss: tensor(0.1515)
Local adapation with distilling: 0.0001
training loss: tensor(0.6226) feature loss: tensor(0.1871)
Local adapation with distilling: 0.0001
training loss: tensor(0.5350) feature loss: tensor(0.1613)
Local adapation with distilling: 0.0001
training loss: tensor(0.6460) feature loss: tensor(0.1708)
Local adapation with distilling: 0.0001
training loss: tensor(0.3792) feature loss: tensor(0.1661)
Local adapation with distilling: 0.0001
training loss: tensor(0.2935) feature loss: tensor(0.1673)
Local adapation with distilling: 0.0001
training loss: tensor(0.3148) feature loss: tensor(0.1651)
Local adapation with distilling: 0.0001
training loss: tensor(0.3139) feature loss: tensor(0.1605)
Local adapation with distilling: 0.0001
training loss: tensor(0.2946) feature loss: tensor(0.1531)
Local adapation with distilling: 0.0001
training loss: tensor(0.3570) feature loss: tensor(0.1928)
Global Model Acc on global data: 0.6133 length of data: 10000
-------------Round number:  97  -------------
selected users: [31, 43, 64, 56, 85, 2, 70, 21, 34, 50]
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([27, 16, 32, 32]) torch.Size([27])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
all data: 242
Local adapation with distilling: 0.0001
training loss: tensor(0.3879) feature loss: tensor(0.1943)
Local adapation with distilling: 0.0001
training loss: tensor(0.4037) feature loss: tensor(0.2221)
Local adapation with distilling: 0.0001
training loss: tensor(0.4357) feature loss: tensor(0.2310)
Local adapation with distilling: 0.0001
training loss: tensor(0.3356) feature loss: tensor(0.2059)
Local adapation with distilling: 0.0001
training loss: tensor(0.3536) feature loss: tensor(0.2543)
Local adapation with distilling: 0.0001
training loss: tensor(0.3459) feature loss: tensor(0.2041)
Local adapation with distilling: 0.0001
training loss: tensor(0.3556) feature loss: tensor(0.2346)
Local adapation with distilling: 0.0001
training loss: tensor(0.3605) feature loss: tensor(0.2273)
Local adapation with distilling: 0.0001
training loss: tensor(0.3501) feature loss: tensor(0.2130)
Local adapation with distilling: 0.0001
training loss: tensor(0.3875) feature loss: tensor(0.2460)
Global Model Acc on global data: 0.6048 length of data: 10000
-------------Round number:  98  -------------
selected users: [11, 48, 97, 14, 22, 36, 99, 47, 33, 81]
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
all data: 241
Local adapation with distilling: 0.0001
training loss: tensor(0.3543) feature loss: tensor(0.1680)
Local adapation with distilling: 0.0001
training loss: tensor(0.3802) feature loss: tensor(0.1815)
Local adapation with distilling: 0.0001
training loss: tensor(0.3779) feature loss: tensor(0.1907)
Local adapation with distilling: 0.0001
training loss: tensor(0.3909) feature loss: tensor(0.2098)
Local adapation with distilling: 0.0001
training loss: tensor(0.7989) feature loss: tensor(0.1734)
Local adapation with distilling: 0.0001
training loss: tensor(0.3287) feature loss: tensor(0.1895)
Local adapation with distilling: 0.0001
training loss: tensor(0.3545) feature loss: tensor(0.1767)
Local adapation with distilling: 0.0001
training loss: tensor(0.4100) feature loss: tensor(0.2070)
Local adapation with distilling: 0.0001
training loss: tensor(0.3706) feature loss: tensor(0.1846)
Local adapation with distilling: 0.0001
training loss: tensor(0.7554) feature loss: tensor(0.1781)
Global Model Acc on global data: 0.622 length of data: 10000
save a model
-------------Round number:  99  -------------
selected users: [14, 34, 30, 78, 16, 15, 91, 38, 10, 85]
random features: torch.Size([24, 16, 32, 32]) torch.Size([24])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
random features: torch.Size([26, 16, 32, 32]) torch.Size([26])
random features: torch.Size([27, 16, 32, 32]) torch.Size([27])
random features: torch.Size([23, 16, 32, 32]) torch.Size([23])
random features: torch.Size([25, 16, 32, 32]) torch.Size([25])
all data: 248
Local adapation with distilling: 0.0001
training loss: tensor(0.3536) feature loss: tensor(0.1909)
Local adapation with distilling: 0.0001
training loss: tensor(0.3312) feature loss: tensor(0.1637)
Local adapation with distilling: 0.0001
training loss: tensor(0.3827) feature loss: tensor(0.1982)
Local adapation with distilling: 0.0001
training loss: tensor(0.3686) feature loss: tensor(0.2127)
Local adapation with distilling: 0.0001
training loss: tensor(0.3736) feature loss: tensor(0.1649)
Local adapation with distilling: 0.0001
training loss: tensor(0.4326) feature loss: tensor(0.1897)
Local adapation with distilling: 0.0001
training loss: tensor(0.3666) feature loss: tensor(0.1666)
Local adapation with distilling: 0.0001
training loss: tensor(0.3301) feature loss: tensor(0.2081)
Local adapation with distilling: 0.0001
training loss: tensor(0.3748) feature loss: tensor(0.1722)
Local adapation with distilling: 0.0001
training loss: tensor(0.3228) feature loss: tensor(0.2179)
Global Model Acc on global data: 0.6197 length of data: 10000
