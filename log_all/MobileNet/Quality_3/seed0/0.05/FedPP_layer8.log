nohup: ignoring input
================================================================================
Summary of training process:
Dataset                : Cifar10
Batch size             : 64
Learing rate           : 0.001
Number of total clients: 100
Split method           : quantity
Split parameter        : 3.0
Clients per round      : 10
Number of global rounds: 100
Number of local rounds : 10
Feature from layer     : 8
Feature percentage     : 0.05
Local training loss    : CE_CE_KL
Loss of beta           : 1.0
Algorithm              : FedFea
Modelname              : MOBNET
Mode                   : training
Seed                   : 0
================================================================================
Files already downloaded and verified
Files already downloaded and verified
Class frequencies:
client,class0,class1,class2,class3,class4,class5,class6,class7,class8,class9,Amount
Client   0,0.298,0.00,0.00,0.00,0.00,0.375,0.00,0.00,0.327,0.00,496
Client   1,0.00,0.321,0.00,0.00,0.00,0.358,0.00,0.00,0.00,0.321,520
Client   2,0.307,0.346,0.346,0.00,0.00,0.00,0.00,0.00,0.00,0.00,482
Client   3,0.00,0.00,0.00,0.337,0.00,0.00,0.377,0.286,0.00,0.00,531
Client   4,0.00,0.00,0.340,0.00,0.320,0.00,0.00,0.00,0.00,0.340,491
Client   5,0.00,0.00,0.327,0.00,0.308,0.365,0.00,0.00,0.00,0.00,510
Client   6,0.00,0.00,0.319,0.00,0.300,0.00,0.382,0.00,0.00,0.00,524
Client   7,0.00,0.00,0.00,0.00,0.330,0.00,0.00,0.319,0.00,0.351,476
Client   8,0.00,0.347,0.00,0.00,0.00,0.00,0.00,0.316,0.337,0.00,481
Client   9,0.286,0.00,0.00,0.00,0.00,0.00,0.389,0.00,0.00,0.325,514
Client  10,0.315,0.00,0.00,0.00,0.00,0.00,0.00,0.326,0.00,0.358,466
Client  11,0.00,0.313,0.00,0.00,0.00,0.00,0.375,0.00,0.00,0.313,534
Client  12,0.306,0.347,0.347,0.00,0.00,0.00,0.00,0.00,0.00,0.00,481
Client  13,0.00,0.329,0.00,0.352,0.00,0.00,0.00,0.00,0.319,0.00,508
Client  14,0.00,0.00,0.00,0.359,0.315,0.00,0.00,0.00,0.325,0.00,498
Client  15,0.00,0.00,0.00,0.00,0.00,0.361,0.00,0.00,0.315,0.324,515
Client  16,0.00,0.00,0.00,0.337,0.00,0.00,0.377,0.286,0.00,0.00,531
Client  17,0.00,0.00,0.00,0.00,0.00,0.346,0.372,0.283,0.00,0.00,538
Client  18,0.00,0.337,0.00,0.00,0.00,0.00,0.00,0.00,0.327,0.337,496
Client  19,0.00,0.00,0.00,0.356,0.312,0.00,0.00,0.00,0.00,0.332,503
Client  20,0.309,0.351,0.00,0.00,0.00,0.00,0.00,0.00,0.340,0.00,476
Client  21,0.312,0.355,0.00,0.00,0.333,0.00,0.00,0.00,0.00,0.00,471
Client  22,0.00,0.00,0.326,0.349,0.00,0.00,0.00,0.00,0.00,0.326,513
Client  23,0.298,0.00,0.339,0.363,0.00,0.00,0.00,0.00,0.00,0.00,493
Client  24,0.00,0.00,0.340,0.00,0.320,0.00,0.00,0.00,0.00,0.340,491
Client  25,0.00,0.00,0.00,0.00,0.00,0.367,0.00,0.302,0.00,0.331,504
Client  26,0.00,0.00,0.00,0.00,0.00,0.00,0.378,0.00,0.306,0.316,529
Client  27,0.00,0.00,0.00,0.368,0.320,0.00,0.00,0.312,0.00,0.00,487
Client  28,0.00,0.00,0.00,0.00,0.00,0.360,0.00,0.00,0.315,0.325,514
Client  29,0.00,0.00,0.00,0.328,0.00,0.00,0.366,0.00,0.00,0.306,546
Client  30,0.309,0.00,0.352,0.00,0.00,0.00,0.00,0.00,0.339,0.00,475
Client  31,0.00,0.344,0.00,0.00,0.00,0.00,0.00,0.313,0.00,0.344,486
Client  32,0.00,0.00,0.335,0.359,0.00,0.00,0.00,0.305,0.00,0.00,498
Client  33,0.302,0.00,0.00,0.368,0.00,0.00,0.00,0.00,0.331,0.00,487
Client  34,0.00,0.352,0.00,0.00,0.328,0.00,0.00,0.320,0.00,0.00,475
Client  35,0.00,0.315,0.00,0.337,0.00,0.348,0.00,0.00,0.00,0.00,531
Client  36,0.289,0.00,0.00,0.00,0.00,0.00,0.394,0.00,0.317,0.00,508
Client  37,0.00,0.00,0.00,0.00,0.307,0.00,0.394,0.299,0.00,0.00,508
Client  38,0.00,0.00,0.00,0.00,0.00,0.339,0.366,0.00,0.295,0.00,546
Client  39,0.00,0.00,0.322,0.00,0.00,0.356,0.00,0.00,0.00,0.322,519
Client  40,0.320,0.00,0.00,0.00,0.00,0.00,0.00,0.330,0.350,0.00,460
Client  41,0.00,0.352,0.00,0.00,0.328,0.00,0.00,0.320,0.00,0.00,475
Client  42,0.00,0.00,0.352,0.00,0.328,0.00,0.00,0.320,0.00,0.00,475
Client  43,0.298,0.00,0.00,0.363,0.00,0.00,0.00,0.00,0.00,0.339,493
Client  44,0.313,0.00,0.355,0.00,0.332,0.00,0.00,0.00,0.00,0.00,470
Client  45,0.00,0.331,0.00,0.00,0.00,0.367,0.00,0.302,0.00,0.00,504
Client  46,0.00,0.00,0.00,0.00,0.00,0.00,0.385,0.293,0.00,0.322,519
Client  47,0.00,0.00,0.00,0.00,0.333,0.00,0.00,0.323,0.344,0.00,468
Client  48,0.309,0.352,0.00,0.00,0.00,0.00,0.00,0.00,0.339,0.00,475
Client  49,0.00,0.00,0.337,0.00,0.00,0.00,0.00,0.00,0.325,0.337,495
Client  50,0.298,0.339,0.00,0.363,0.00,0.00,0.00,0.00,0.00,0.00,493
Client  51,0.00,0.344,0.344,0.00,0.00,0.00,0.00,0.311,0.00,0.00,485
Client  52,0.286,0.00,0.325,0.00,0.00,0.00,0.389,0.00,0.00,0.00,514
Client  53,0.00,0.00,0.326,0.350,0.00,0.00,0.00,0.00,0.00,0.324,512
Client  54,0.00,0.00,0.319,0.00,0.298,0.00,0.382,0.00,0.00,0.00,523
Client  55,0.304,0.00,0.00,0.00,0.00,0.383,0.00,0.313,0.00,0.00,483
Client  56,0.00,0.303,0.00,0.00,0.00,0.335,0.362,0.00,0.00,0.00,552
Client  57,0.00,0.00,0.00,0.00,0.308,0.00,0.394,0.298,0.00,0.00,507
Client  58,0.289,0.00,0.00,0.00,0.00,0.00,0.394,0.00,0.317,0.00,508
Client  59,0.00,0.322,0.00,0.00,0.00,0.357,0.00,0.00,0.00,0.320,518
Client  60,0.306,0.347,0.347,0.00,0.00,0.00,0.00,0.00,0.00,0.00,481
Client  61,0.00,0.327,0.00,0.00,0.308,0.365,0.00,0.00,0.00,0.00,507
Client  62,0.316,0.00,0.359,0.00,0.00,0.00,0.00,0.325,0.00,0.00,465
Client  63,0.00,0.00,0.00,0.354,0.00,0.00,0.00,0.00,0.318,0.328,506
Client  64,0.00,0.00,0.00,0.00,0.317,0.376,0.00,0.307,0.00,0.00,492
Client  65,0.295,0.00,0.00,0.00,0.00,0.371,0.00,0.00,0.00,0.333,498
Client  66,0.00,0.00,0.00,0.327,0.00,0.00,0.368,0.00,0.00,0.305,544
Client  67,0.00,0.351,0.00,0.00,0.330,0.00,0.00,0.319,0.00,0.00,473
Client  68,0.00,0.00,0.00,0.00,0.302,0.00,0.387,0.00,0.311,0.00,517
Client  69,0.00,0.00,0.337,0.00,0.00,0.00,0.00,0.00,0.327,0.337,493
Client  70,0.304,0.00,0.00,0.00,0.00,0.383,0.00,0.313,0.00,0.00,483
Client  71,0.00,0.327,0.00,0.00,0.308,0.365,0.00,0.00,0.00,0.00,507
Client  72,0.00,0.00,0.324,0.00,0.00,0.361,0.00,0.00,0.314,0.00,512
Client  73,0.00,0.00,0.00,0.340,0.00,0.353,0.00,0.00,0.307,0.00,524
Client  74,0.00,0.344,0.00,0.00,0.323,0.00,0.00,0.00,0.333,0.00,483
Client  75,0.304,0.00,0.00,0.00,0.00,0.383,0.00,0.313,0.00,0.00,483
Client  76,0.00,0.00,0.00,0.333,0.292,0.00,0.375,0.00,0.00,0.00,534
Client  77,0.317,0.00,0.358,0.00,0.00,0.00,0.00,0.325,0.00,0.00,464
Client  78,0.00,0.00,0.00,0.340,0.00,0.353,0.00,0.00,0.307,0.00,524
Client  79,0.00,0.333,0.333,0.00,0.00,0.00,0.00,0.00,0.00,0.333,498
Client  80,0.306,0.00,0.00,0.370,0.324,0.00,0.00,0.00,0.00,0.00,481
Client  81,0.287,0.324,0.00,0.00,0.00,0.00,0.390,0.00,0.00,0.00,513
Client  82,0.317,0.00,0.358,0.00,0.00,0.00,0.00,0.325,0.00,0.00,464
Client  83,0.00,0.00,0.329,0.352,0.00,0.00,0.00,0.00,0.319,0.00,505
Client  84,0.306,0.00,0.00,0.370,0.324,0.00,0.00,0.00,0.00,0.00,481
Client  85,0.00,0.00,0.00,0.00,0.311,0.369,0.00,0.00,0.321,0.00,502
Client  86,0.00,0.00,0.312,0.00,0.00,0.00,0.376,0.00,0.00,0.312,532
Client  87,0.309,0.00,0.00,0.374,0.00,0.00,0.00,0.317,0.00,0.00,476
Client  88,0.00,0.344,0.00,0.00,0.323,0.00,0.00,0.00,0.333,0.00,483
Client  89,0.00,0.00,0.00,0.327,0.00,0.00,0.368,0.00,0.00,0.305,544
Client  90,0.309,0.00,0.00,0.374,0.00,0.00,0.00,0.317,0.00,0.00,476
Client  91,0.00,0.314,0.00,0.336,0.00,0.350,0.00,0.00,0.00,0.00,529
Client  92,0.313,0.00,0.354,0.00,0.333,0.00,0.00,0.00,0.00,0.00,469
Client  93,0.00,0.00,0.00,0.340,0.00,0.353,0.00,0.00,0.307,0.00,524
Client  94,0.00,0.00,0.00,0.00,0.308,0.00,0.394,0.298,0.00,0.00,507
Client  95,0.00,0.331,0.00,0.00,0.00,0.369,0.00,0.301,0.00,0.00,502
Client  96,0.287,0.00,0.324,0.00,0.00,0.00,0.390,0.00,0.00,0.00,513
Client  97,0.00,0.00,0.347,0.00,0.00,0.00,0.00,0.316,0.337,0.00,478
Client  98,0.00,0.344,0.00,0.00,0.323,0.00,0.00,0.00,0.333,0.00,483
Client  99,0.313,0.00,0.00,0.00,0.333,0.00,0.00,0.00,0.00,0.354,469
0 [0 5 8] [0 5 8] [1 2 3 4 6 7 9]
0 training: Counter({5: 186, 8: 162, 0: 148}) testing iid: Counter({8: 1000, 0: 1000, 5: 1000})
1 [1 5 9] [1 5 9] [0 2 3 4 6 7 8]
1 training: Counter({5: 186, 1: 167, 9: 167}) testing iid: Counter({1: 1000, 9: 1000, 5: 1000})
2 [0 1 2] [0 1 2] [3 4 5 6 7 8 9]
2 training: Counter({1: 167, 2: 167, 0: 148}) testing iid: Counter({0: 1000, 1: 1000, 2: 1000})
3 [3 6 7] [3 6 7] [0 1 2 4 5 8 9]
3 training: Counter({6: 200, 3: 179, 7: 152}) testing iid: Counter({3: 1000, 6: 1000, 7: 1000})
4 [2 4 9] [2 4 9] [0 1 3 5 6 7 8]
4 training: Counter({2: 167, 9: 167, 4: 157}) testing iid: Counter({9: 1000, 4: 1000, 2: 1000})
5 [2 4 5] [2 4 5] [0 1 3 6 7 8 9]
5 training: Counter({5: 186, 2: 167, 4: 157}) testing iid: Counter({5: 1000, 4: 1000, 2: 1000})
6 [2 4 6] [2 4 6] [0 1 3 5 7 8 9]
6 training: Counter({6: 200, 2: 167, 4: 157}) testing iid: Counter({6: 1000, 4: 1000, 2: 1000})
7 [4 7 9] [4 7 9] [0 1 2 3 5 6 8]
7 training: Counter({9: 167, 4: 157, 7: 152}) testing iid: Counter({9: 1000, 7: 1000, 4: 1000})
8 [1 7 8] [1 7 8] [0 2 3 4 5 6 9]
8 training: Counter({1: 167, 8: 162, 7: 152}) testing iid: Counter({8: 1000, 1: 1000, 7: 1000})
9 [0 6 9] [0 6 9] [1 2 3 4 5 7 8]
9 training: Counter({6: 200, 9: 167, 0: 147}) testing iid: Counter({0: 1000, 6: 1000, 9: 1000})
10 [0 7 9] [0 7 9] [1 2 3 4 5 6 8]
10 training: Counter({9: 167, 7: 152, 0: 147}) testing iid: Counter({0: 1000, 9: 1000, 7: 1000})
11 [1 6 9] [1 6 9] [0 2 3 4 5 7 8]
11 training: Counter({6: 200, 1: 167, 9: 167}) testing iid: Counter({6: 1000, 1: 1000, 9: 1000})
12 [0 1 2] [0 1 2] [3 4 5 6 7 8 9]
12 training: Counter({1: 167, 2: 167, 0: 147}) testing iid: Counter({0: 1000, 1: 1000, 2: 1000})
13 [1 3 8] [1 3 8] [0 2 4 5 6 7 9]
13 training: Counter({3: 179, 1: 167, 8: 162}) testing iid: Counter({3: 1000, 8: 1000, 1: 1000})
14 [3 4 8] [3 4 8] [0 1 2 5 6 7 9]
14 training: Counter({3: 179, 8: 162, 4: 157}) testing iid: Counter({3: 1000, 8: 1000, 4: 1000})
15 [5 8 9] [5 8 9] [0 1 2 3 4 6 7]
15 training: Counter({5: 186, 9: 167, 8: 162}) testing iid: Counter({8: 1000, 9: 1000, 5: 1000})
16 [3 6 7] [3 6 7] [0 1 2 4 5 8 9]
16 training: Counter({6: 200, 3: 179, 7: 152}) testing iid: Counter({3: 1000, 6: 1000, 7: 1000})
17 [5 6 7] [5 6 7] [0 1 2 3 4 8 9]
17 training: Counter({6: 200, 5: 186, 7: 152}) testing iid: Counter({6: 1000, 5: 1000, 7: 1000})
18 [1 8 9] [1 8 9] [0 2 3 4 5 6 7]
18 training: Counter({1: 167, 9: 167, 8: 162}) testing iid: Counter({8: 1000, 1: 1000, 9: 1000})
19 [3 4 9] [3 4 9] [0 1 2 5 6 7 8]
19 training: Counter({3: 179, 9: 167, 4: 157}) testing iid: Counter({3: 1000, 9: 1000, 4: 1000})
20 [0 1 8] [0 1 8] [2 3 4 5 6 7 9]
20 training: Counter({1: 167, 8: 162, 0: 147}) testing iid: Counter({8: 1000, 0: 1000, 1: 1000})
21 [0 1 4] [0 1 4] [2 3 5 6 7 8 9]
21 training: Counter({1: 167, 4: 157, 0: 147}) testing iid: Counter({0: 1000, 1: 1000, 4: 1000})
22 [2 3 9] [2 3 9] [0 1 4 5 6 7 8]
22 training: Counter({3: 179, 2: 167, 9: 167}) testing iid: Counter({3: 1000, 9: 1000, 2: 1000})
23 [0 2 3] [0 2 3] [1 4 5 6 7 8 9]
23 training: Counter({3: 179, 2: 167, 0: 147}) testing iid: Counter({3: 1000, 0: 1000, 2: 1000})
24 [2 4 9] [2 4 9] [0 1 3 5 6 7 8]
24 training: Counter({2: 167, 9: 167, 4: 157}) testing iid: Counter({9: 1000, 4: 1000, 2: 1000})
25 [5 7 9] [5 7 9] [0 1 2 3 4 6 8]
25 training: Counter({5: 185, 9: 167, 7: 152}) testing iid: Counter({9: 1000, 5: 1000, 7: 1000})
26 [6 8 9] [6 8 9] [0 1 2 3 4 5 7]
26 training: Counter({6: 200, 9: 167, 8: 162}) testing iid: Counter({8: 1000, 6: 1000, 9: 1000})
27 [3 4 7] [3 4 7] [0 1 2 5 6 8 9]
27 training: Counter({3: 179, 4: 156, 7: 152}) testing iid: Counter({3: 1000, 7: 1000, 4: 1000})
28 [5 8 9] [5 8 9] [0 1 2 3 4 6 7]
28 training: Counter({5: 185, 9: 167, 8: 162}) testing iid: Counter({8: 1000, 9: 1000, 5: 1000})
29 [3 6 9] [3 6 9] [0 1 2 4 5 7 8]
29 training: Counter({6: 200, 3: 179, 9: 167}) testing iid: Counter({3: 1000, 6: 1000, 9: 1000})
30 [0 2 8] [0 2 8] [1 3 4 5 6 7 9]
30 training: Counter({2: 167, 8: 161, 0: 147}) testing iid: Counter({8: 1000, 0: 1000, 2: 1000})
31 [1 7 9] [1 7 9] [0 2 3 4 5 6 8]
31 training: Counter({1: 167, 9: 167, 7: 152}) testing iid: Counter({1: 1000, 9: 1000, 7: 1000})
32 [2 3 7] [2 3 7] [0 1 4 5 6 8 9]
32 training: Counter({3: 179, 2: 167, 7: 152}) testing iid: Counter({3: 1000, 7: 1000, 2: 1000})
33 [0 3 8] [0 3 8] [1 2 4 5 6 7 9]
33 training: Counter({3: 179, 8: 161, 0: 147}) testing iid: Counter({3: 1000, 8: 1000, 0: 1000})
34 [1 4 7] [1 4 7] [0 2 3 5 6 8 9]
34 training: Counter({1: 167, 4: 156, 7: 152}) testing iid: Counter({1: 1000, 7: 1000, 4: 1000})
35 [1 3 5] [1 3 5] [0 2 4 6 7 8 9]
35 training: Counter({5: 185, 3: 179, 1: 167}) testing iid: Counter({3: 1000, 1: 1000, 5: 1000})
36 [0 6 8] [0 6 8] [1 2 3 4 5 7 9]
36 training: Counter({6: 200, 8: 161, 0: 147}) testing iid: Counter({8: 1000, 0: 1000, 6: 1000})
37 [4 6 7] [4 6 7] [0 1 2 3 5 8 9]
37 training: Counter({6: 200, 4: 156, 7: 152}) testing iid: Counter({6: 1000, 7: 1000, 4: 1000})
38 [5 6 8] [5 6 8] [0 1 2 3 4 7 9]
38 training: Counter({6: 200, 5: 185, 8: 161}) testing iid: Counter({8: 1000, 6: 1000, 5: 1000})
39 [2 5 9] [2 5 9] [0 1 3 4 6 7 8]
39 training: Counter({5: 185, 2: 167, 9: 167}) testing iid: Counter({9: 1000, 5: 1000, 2: 1000})
40 [0 7 8] [0 7 8] [1 2 3 4 5 6 9]
40 training: Counter({8: 161, 7: 152, 0: 147}) testing iid: Counter({8: 1000, 0: 1000, 7: 1000})
41 [1 4 7] [1 4 7] [0 2 3 5 6 8 9]
41 training: Counter({1: 167, 4: 156, 7: 152}) testing iid: Counter({1: 1000, 7: 1000, 4: 1000})
42 [2 4 7] [2 4 7] [0 1 3 5 6 8 9]
42 training: Counter({2: 167, 4: 156, 7: 152}) testing iid: Counter({7: 1000, 4: 1000, 2: 1000})
43 [0 3 9] [0 3 9] [1 2 4 5 6 7 8]
43 training: Counter({3: 179, 9: 167, 0: 147}) testing iid: Counter({3: 1000, 0: 1000, 9: 1000})
44 [0 2 4] [0 2 4] [1 3 5 6 7 8 9]
44 training: Counter({2: 167, 4: 156, 0: 147}) testing iid: Counter({0: 1000, 4: 1000, 2: 1000})
45 [1 5 7] [1 5 7] [0 2 3 4 6 8 9]
45 training: Counter({5: 185, 1: 167, 7: 152}) testing iid: Counter({1: 1000, 5: 1000, 7: 1000})
46 [6 7 9] [6 7 9] [0 1 2 3 4 5 8]
46 training: Counter({6: 200, 9: 167, 7: 152}) testing iid: Counter({6: 1000, 9: 1000, 7: 1000})
47 [4 7 8] [4 7 8] [0 1 2 3 5 6 9]
47 training: Counter({8: 161, 4: 156, 7: 151}) testing iid: Counter({8: 1000, 7: 1000, 4: 1000})
48 [0 1 8] [0 1 8] [2 3 4 5 6 7 9]
48 training: Counter({1: 167, 8: 161, 0: 147}) testing iid: Counter({8: 1000, 0: 1000, 1: 1000})
49 [2 8 9] [2 8 9] [0 1 3 4 5 6 7]
49 training: Counter({2: 167, 9: 167, 8: 161}) testing iid: Counter({8: 1000, 9: 1000, 2: 1000})
50 [0 1 3] [0 1 3] [2 4 5 6 7 8 9]
50 training: Counter({3: 179, 1: 167, 0: 147}) testing iid: Counter({3: 1000, 0: 1000, 1: 1000})
51 [1 2 7] [1 2 7] [0 3 4 5 6 8 9]
51 training: Counter({1: 167, 2: 167, 7: 151}) testing iid: Counter({1: 1000, 7: 1000, 2: 1000})
52 [0 2 6] [0 2 6] [1 3 4 5 7 8 9]
52 training: Counter({6: 200, 2: 167, 0: 147}) testing iid: Counter({0: 1000, 6: 1000, 2: 1000})
53 [2 3 9] [2 3 9] [0 1 4 5 6 7 8]
53 training: Counter({3: 179, 2: 167, 9: 166}) testing iid: Counter({3: 1000, 9: 1000, 2: 1000})
54 [2 4 6] [2 4 6] [0 1 3 5 7 8 9]
54 training: Counter({6: 200, 2: 167, 4: 156}) testing iid: Counter({6: 1000, 4: 1000, 2: 1000})
55 [0 5 7] [0 5 7] [1 2 3 4 6 8 9]
55 training: Counter({5: 185, 7: 151, 0: 147}) testing iid: Counter({0: 1000, 5: 1000, 7: 1000})
56 [1 5 6] [1 5 6] [0 2 3 4 7 8 9]
56 training: Counter({6: 200, 5: 185, 1: 167}) testing iid: Counter({6: 1000, 1: 1000, 5: 1000})
57 [4 6 7] [4 6 7] [0 1 2 3 5 8 9]
57 training: Counter({6: 200, 4: 156, 7: 151}) testing iid: Counter({6: 1000, 7: 1000, 4: 1000})
58 [0 6 8] [0 6 8] [1 2 3 4 5 7 9]
58 training: Counter({6: 200, 8: 161, 0: 147}) testing iid: Counter({8: 1000, 0: 1000, 6: 1000})
59 [1 5 9] [1 5 9] [0 2 3 4 6 7 8]
59 training: Counter({5: 185, 1: 167, 9: 166}) testing iid: Counter({1: 1000, 9: 1000, 5: 1000})
60 [0 1 2] [0 1 2] [3 4 5 6 7 8 9]
60 training: Counter({1: 167, 2: 167, 0: 147}) testing iid: Counter({0: 1000, 1: 1000, 2: 1000})
61 [1 4 5] [1 4 5] [0 2 3 6 7 8 9]
61 training: Counter({5: 185, 1: 166, 4: 156}) testing iid: Counter({1: 1000, 5: 1000, 4: 1000})
62 [0 2 7] [0 2 7] [1 3 4 5 6 8 9]
62 training: Counter({2: 167, 7: 151, 0: 147}) testing iid: Counter({0: 1000, 7: 1000, 2: 1000})
63 [3 8 9] [3 8 9] [0 1 2 4 5 6 7]
63 training: Counter({3: 179, 9: 166, 8: 161}) testing iid: Counter({3: 1000, 8: 1000, 9: 1000})
64 [4 5 7] [4 5 7] [0 1 2 3 6 8 9]
64 training: Counter({5: 185, 4: 156, 7: 151}) testing iid: Counter({5: 1000, 7: 1000, 4: 1000})
65 [0 5 9] [0 5 9] [1 2 3 4 6 7 8]
65 training: Counter({5: 185, 9: 166, 0: 147}) testing iid: Counter({0: 1000, 9: 1000, 5: 1000})
66 [3 6 9] [3 6 9] [0 1 2 4 5 7 8]
66 training: Counter({6: 200, 3: 178, 9: 166}) testing iid: Counter({3: 1000, 6: 1000, 9: 1000})
67 [1 4 7] [1 4 7] [0 2 3 5 6 8 9]
67 training: Counter({1: 166, 4: 156, 7: 151}) testing iid: Counter({1: 1000, 7: 1000, 4: 1000})
68 [4 6 8] [4 6 8] [0 1 2 3 5 7 9]
68 training: Counter({6: 200, 8: 161, 4: 156}) testing iid: Counter({8: 1000, 6: 1000, 4: 1000})
69 [2 8 9] [2 8 9] [0 1 3 4 5 6 7]
69 training: Counter({2: 166, 9: 166, 8: 161}) testing iid: Counter({8: 1000, 9: 1000, 2: 1000})
70 [0 5 7] [0 5 7] [1 2 3 4 6 8 9]
70 training: Counter({5: 185, 7: 151, 0: 147}) testing iid: Counter({0: 1000, 5: 1000, 7: 1000})
71 [1 4 5] [1 4 5] [0 2 3 6 7 8 9]
71 training: Counter({5: 185, 1: 166, 4: 156}) testing iid: Counter({1: 1000, 5: 1000, 4: 1000})
72 [2 5 8] [2 5 8] [0 1 3 4 6 7 9]
72 training: Counter({5: 185, 2: 166, 8: 161}) testing iid: Counter({8: 1000, 5: 1000, 2: 1000})
73 [3 5 8] [3 5 8] [0 1 2 4 6 7 9]
73 training: Counter({5: 185, 3: 178, 8: 161}) testing iid: Counter({3: 1000, 8: 1000, 5: 1000})
74 [1 4 8] [1 4 8] [0 2 3 5 6 7 9]
74 training: Counter({1: 166, 8: 161, 4: 156}) testing iid: Counter({8: 1000, 1: 1000, 4: 1000})
75 [0 5 7] [0 5 7] [1 2 3 4 6 8 9]
75 training: Counter({5: 185, 7: 151, 0: 147}) testing iid: Counter({0: 1000, 5: 1000, 7: 1000})
76 [3 4 6] [3 4 6] [0 1 2 5 7 8 9]
76 training: Counter({6: 200, 3: 178, 4: 156}) testing iid: Counter({3: 1000, 6: 1000, 4: 1000})
77 [0 2 7] [0 2 7] [1 3 4 5 6 8 9]
77 training: Counter({2: 166, 7: 151, 0: 147}) testing iid: Counter({0: 1000, 7: 1000, 2: 1000})
78 [3 5 8] [3 5 8] [0 1 2 4 6 7 9]
78 training: Counter({5: 185, 3: 178, 8: 161}) testing iid: Counter({3: 1000, 8: 1000, 5: 1000})
79 [1 2 9] [1 2 9] [0 3 4 5 6 7 8]
79 training: Counter({1: 166, 2: 166, 9: 166}) testing iid: Counter({1: 1000, 9: 1000, 2: 1000})
80 [0 3 4] [0 3 4] [1 2 5 6 7 8 9]
80 training: Counter({3: 178, 4: 156, 0: 147}) testing iid: Counter({3: 1000, 0: 1000, 4: 1000})
81 [0 1 6] [0 1 6] [2 3 4 5 7 8 9]
81 training: Counter({6: 200, 1: 166, 0: 147}) testing iid: Counter({0: 1000, 6: 1000, 1: 1000})
82 [0 2 7] [0 2 7] [1 3 4 5 6 8 9]
82 training: Counter({2: 166, 7: 151, 0: 147}) testing iid: Counter({0: 1000, 7: 1000, 2: 1000})
83 [2 3 8] [2 3 8] [0 1 4 5 6 7 9]
83 training: Counter({3: 178, 2: 166, 8: 161}) testing iid: Counter({3: 1000, 8: 1000, 2: 1000})
84 [0 3 4] [0 3 4] [1 2 5 6 7 8 9]
84 training: Counter({3: 178, 4: 156, 0: 147}) testing iid: Counter({3: 1000, 0: 1000, 4: 1000})
85 [4 5 8] [4 5 8] [0 1 2 3 6 7 9]
85 training: Counter({5: 185, 8: 161, 4: 156}) testing iid: Counter({8: 1000, 5: 1000, 4: 1000})
86 [2 6 9] [2 6 9] [0 1 3 4 5 7 8]
86 training: Counter({6: 200, 2: 166, 9: 166}) testing iid: Counter({6: 1000, 9: 1000, 2: 1000})
87 [0 3 7] [0 3 7] [1 2 4 5 6 8 9]
87 training: Counter({3: 178, 7: 151, 0: 147}) testing iid: Counter({3: 1000, 0: 1000, 7: 1000})
88 [1 4 8] [1 4 8] [0 2 3 5 6 7 9]
88 training: Counter({1: 166, 8: 161, 4: 156}) testing iid: Counter({8: 1000, 1: 1000, 4: 1000})
89 [3 6 9] [3 6 9] [0 1 2 4 5 7 8]
89 training: Counter({6: 200, 3: 178, 9: 166}) testing iid: Counter({3: 1000, 6: 1000, 9: 1000})
90 [0 3 7] [0 3 7] [1 2 4 5 6 8 9]
90 training: Counter({3: 178, 7: 151, 0: 147}) testing iid: Counter({3: 1000, 0: 1000, 7: 1000})
91 [1 3 5] [1 3 5] [0 2 4 6 7 8 9]
91 training: Counter({5: 185, 3: 178, 1: 166}) testing iid: Counter({3: 1000, 1: 1000, 5: 1000})
92 [0 2 4] [0 2 4] [1 3 5 6 7 8 9]
92 training: Counter({2: 166, 4: 156, 0: 147}) testing iid: Counter({0: 1000, 4: 1000, 2: 1000})
93 [3 5 8] [3 5 8] [0 1 2 4 6 7 9]
93 training: Counter({5: 185, 3: 178, 8: 161}) testing iid: Counter({3: 1000, 8: 1000, 5: 1000})
94 [4 6 7] [4 6 7] [0 1 2 3 5 8 9]
94 training: Counter({6: 200, 4: 156, 7: 151}) testing iid: Counter({6: 1000, 7: 1000, 4: 1000})
95 [1 5 7] [1 5 7] [0 2 3 4 6 8 9]
95 training: Counter({5: 185, 1: 166, 7: 151}) testing iid: Counter({1: 1000, 5: 1000, 7: 1000})
96 [0 2 6] [0 2 6] [1 3 4 5 7 8 9]
96 training: Counter({6: 200, 2: 166, 0: 147}) testing iid: Counter({0: 1000, 6: 1000, 2: 1000})
97 [2 7 8] [2 7 8] [0 1 3 4 5 6 9]
97 training: Counter({2: 166, 8: 161, 7: 151}) testing iid: Counter({8: 1000, 7: 1000, 2: 1000})
98 [1 4 8] [1 4 8] [0 2 3 5 6 7 9]
98 training: Counter({1: 166, 8: 161, 4: 156}) testing iid: Counter({8: 1000, 1: 1000, 4: 1000})
99 [0 4 9] [0 4 9] [1 2 3 5 6 7 8]
99 training: Counter({9: 166, 4: 156, 0: 147}) testing iid: Counter({0: 1000, 9: 1000, 4: 1000})
Num_samples of Training set per client: [496, 520, 482, 531, 491, 510, 524, 476, 481, 514, 466, 534, 481, 508, 498, 515, 531, 538, 496, 503, 476, 471, 513, 493, 491, 504, 529, 487, 514, 546, 475, 486, 498, 487, 475, 531, 508, 508, 546, 519, 460, 475, 475, 493, 470, 504, 519, 468, 475, 495, 493, 485, 514, 512, 523, 483, 552, 507, 508, 518, 481, 507, 465, 506, 492, 498, 544, 473, 517, 493, 483, 507, 512, 524, 483, 483, 534, 464, 524, 498, 481, 513, 464, 505, 481, 502, 532, 476, 483, 544, 476, 529, 469, 524, 507, 502, 513, 478, 483, 469]
Total_training_samples: 50000
Global test set: 10000
Finish Generating Samples, distribution saved
MobileNetV2(
  (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (layers): Sequential(
    (0): Block(
      (conv1): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): Block(
      (conv1): Conv2d(16, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=96, bias=False)
      (bn2): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(96, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(16, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (2): Block(
      (conv1): Conv2d(24, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=144, bias=False)
      (bn2): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(144, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (3): Block(
      (conv1): Conv2d(24, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(144, 144, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=144, bias=False)
      (bn2): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(144, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (4): Block(
      (conv1): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
      (bn2): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(192, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (5): Block(
      (conv1): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
      (bn2): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(192, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (6): Block(
      (conv1): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(192, 192, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=192, bias=False)
      (bn2): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(192, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (7): Block(
      (conv1): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
      (bn2): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (8): Block(
      (conv1): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
      (bn2): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (9): Block(
      (conv1): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
      (bn2): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (10): Block(
      (conv1): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
      (bn2): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(384, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(64, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (11): Block(
      (conv1): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)
      (bn2): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (12): Block(
      (conv1): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)
      (bn2): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (13): Block(
      (conv1): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(576, 576, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=576, bias=False)
      (bn2): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(576, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (14): Block(
      (conv1): Conv2d(160, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(960, 960, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=960, bias=False)
      (bn2): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(960, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (15): Block(
      (conv1): Conv2d(160, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(960, 960, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=960, bias=False)
      (bn2): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(960, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (16): Block(
      (conv1): Conv2d(160, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(960, 960, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=960, bias=False)
      (bn2): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(960, 320, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(160, 320, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (conv2): Conv2d(320, 1280, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn2): BatchNorm2d(1280, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (linear): Linear(in_features=1280, out_features=10, bias=True)
)
number of parameters: 2296922
clients initializting...
output size: 10
  0%|          | 0/100 [00:00<?, ?it/s]  1%|          | 1/100 [00:00<00:57,  1.71it/s]  2%|▏         | 2/100 [00:01<00:58,  1.69it/s]  3%|▎         | 3/100 [00:01<00:58,  1.67it/s]  4%|▍         | 4/100 [00:02<00:58,  1.64it/s]  5%|▌         | 5/100 [00:03<00:57,  1.65it/s]  6%|▌         | 6/100 [00:03<00:56,  1.66it/s]  7%|▋         | 7/100 [00:04<00:56,  1.66it/s]  8%|▊         | 8/100 [00:04<00:55,  1.65it/s]  9%|▉         | 9/100 [00:05<00:55,  1.64it/s] 10%|█         | 10/100 [00:06<00:55,  1.62it/s] 11%|█         | 11/100 [00:06<00:54,  1.64it/s] 12%|█▏        | 12/100 [00:07<00:54,  1.62it/s] 13%|█▎        | 13/100 [00:07<00:54,  1.61it/s] 14%|█▍        | 14/100 [00:08<00:53,  1.60it/s] 15%|█▌        | 15/100 [00:09<00:52,  1.62it/s] 16%|█▌        | 16/100 [00:09<00:51,  1.63it/s] 17%|█▋        | 17/100 [00:10<00:51,  1.62it/s] 18%|█▊        | 18/100 [00:11<00:50,  1.62it/s] 19%|█▉        | 19/100 [00:11<00:49,  1.63it/s] 20%|██        | 20/100 [00:12<00:49,  1.61it/s] 21%|██        | 21/100 [00:12<00:48,  1.62it/s] 22%|██▏       | 22/100 [00:13<00:48,  1.62it/s] 23%|██▎       | 23/100 [00:14<00:47,  1.61it/s] 24%|██▍       | 24/100 [00:14<00:47,  1.62it/s] 25%|██▌       | 25/100 [00:15<00:46,  1.61it/s] 26%|██▌       | 26/100 [00:15<00:45,  1.62it/s] 27%|██▋       | 27/100 [00:16<00:44,  1.62it/s] 28%|██▊       | 28/100 [00:17<00:44,  1.62it/s] 29%|██▉       | 29/100 [00:17<00:43,  1.62it/s] 30%|███       | 30/100 [00:18<00:43,  1.61it/s] 31%|███       | 31/100 [00:19<00:42,  1.63it/s] 32%|███▏      | 32/100 [00:19<00:41,  1.62it/s] 33%|███▎      | 33/100 [00:20<00:41,  1.61it/s] 34%|███▍      | 34/100 [00:20<00:40,  1.62it/s] 35%|███▌      | 35/100 [00:24<01:42,  1.58s/it] 36%|███▌      | 36/100 [00:25<01:22,  1.29s/it] 37%|███▋      | 37/100 [00:25<01:08,  1.08s/it] 38%|███▊      | 38/100 [00:26<00:58,  1.06it/s] 39%|███▉      | 39/100 [00:27<00:51,  1.19it/s] 40%|████      | 40/100 [00:27<00:46,  1.30it/s] 41%|████      | 41/100 [00:28<00:42,  1.37it/s] 42%|████▏     | 42/100 [00:29<00:40,  1.43it/s] 43%|████▎     | 43/100 [00:29<00:38,  1.48it/s] 44%|████▍     | 44/100 [00:30<00:36,  1.52it/s] 45%|████▌     | 45/100 [00:30<00:35,  1.55it/s] 46%|████▌     | 46/100 [00:31<00:34,  1.59it/s] 47%|████▋     | 47/100 [00:32<00:32,  1.62it/s] 48%|████▊     | 48/100 [00:32<00:32,  1.61it/s] 49%|████▉     | 49/100 [00:33<00:32,  1.59it/s] 50%|█████     | 50/100 [00:34<00:31,  1.59it/s] 51%|█████     | 51/100 [00:34<00:30,  1.58it/s] 52%|█████▏    | 52/100 [00:35<00:31,  1.55it/s] 53%|█████▎    | 53/100 [00:35<00:30,  1.54it/s] 54%|█████▍    | 54/100 [00:36<00:30,  1.51it/s] 55%|█████▌    | 55/100 [00:37<00:29,  1.53it/s] 56%|█████▌    | 56/100 [00:37<00:28,  1.55it/s] 57%|█████▋    | 57/100 [00:38<00:27,  1.55it/s] 58%|█████▊    | 58/100 [00:39<00:26,  1.57it/s] 59%|█████▉    | 59/100 [00:39<00:25,  1.60it/s] 60%|██████    | 60/100 [00:40<00:24,  1.61it/s] 61%|██████    | 61/100 [00:41<00:24,  1.62it/s] 62%|██████▏   | 62/100 [00:41<00:23,  1.62it/s] 63%|██████▎   | 63/100 [00:42<00:22,  1.62it/s] 64%|██████▍   | 64/100 [00:42<00:22,  1.63it/s] 65%|██████▌   | 65/100 [00:43<00:21,  1.64it/s] 66%|██████▌   | 66/100 [00:44<00:20,  1.64it/s] 67%|██████▋   | 67/100 [00:44<00:20,  1.63it/s] 68%|██████▊   | 68/100 [00:45<00:19,  1.61it/s] 69%|██████▉   | 69/100 [00:45<00:19,  1.61it/s] 70%|███████   | 70/100 [00:46<00:18,  1.61it/s] 71%|███████   | 71/100 [00:47<00:18,  1.59it/s] 72%|███████▏  | 72/100 [00:51<00:45,  1.63s/it] 73%|███████▎  | 73/100 [00:51<00:35,  1.33s/it] 74%|███████▍  | 74/100 [00:52<00:28,  1.11s/it] 75%|███████▌  | 75/100 [00:53<00:24,  1.04it/s] 76%|███████▌  | 76/100 [00:53<00:20,  1.16it/s] 77%|███████▋  | 77/100 [00:54<00:18,  1.27it/s] 78%|███████▊  | 78/100 [00:54<00:16,  1.36it/s] 79%|███████▉  | 79/100 [00:55<00:14,  1.44it/s] 80%|████████  | 80/100 [00:56<00:13,  1.51it/s] 81%|████████  | 81/100 [00:56<00:12,  1.56it/s] 82%|████████▏ | 82/100 [00:57<00:11,  1.58it/s] 83%|████████▎ | 83/100 [00:57<00:10,  1.63it/s] 84%|████████▍ | 84/100 [00:58<00:09,  1.64it/s] 85%|████████▌ | 85/100 [00:59<00:09,  1.66it/s] 86%|████████▌ | 86/100 [00:59<00:08,  1.66it/s] 87%|████████▋ | 87/100 [01:00<00:07,  1.64it/s] 88%|████████▊ | 88/100 [01:00<00:07,  1.64it/s] 89%|████████▉ | 89/100 [01:01<00:06,  1.62it/s] 90%|█████████ | 90/100 [01:02<00:06,  1.61it/s] 91%|█████████ | 91/100 [01:02<00:05,  1.60it/s] 92%|█████████▏| 92/100 [01:03<00:05,  1.59it/s] 93%|█████████▎| 93/100 [01:04<00:04,  1.58it/s] 94%|█████████▍| 94/100 [01:04<00:03,  1.59it/s] 95%|█████████▌| 95/100 [01:05<00:03,  1.60it/s] 96%|█████████▌| 96/100 [01:05<00:02,  1.62it/s] 97%|█████████▋| 97/100 [01:06<00:01,  1.62it/s] 98%|█████████▊| 98/100 [01:07<00:01,  1.61it/s] 99%|█████████▉| 99/100 [01:07<00:00,  1.60it/s]100%|██████████| 100/100 [01:08<00:00,  1.60it/s]100%|██████████| 100/100 [01:08<00:00,  1.46it/s]
Number of users per round / total users: 10  /  100
Finished creating FL server.
=== Training starts: algorithm FedFea ===
-------------Round number:  0  -------------
selected users: [26, 86, 2, 55, 75, 93, 16, 73, 54, 95]
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
all data: 253
Local adapation with distilling: 0.001
training loss: tensor(1.6893) feature loss: tensor(0.5316)
Local adapation with distilling: 0.001
training loss: tensor(1.7689) feature loss: tensor(0.5579)
Local adapation with distilling: 0.001
training loss: tensor(1.7544) feature loss: tensor(0.5468)
Local adapation with distilling: 0.001
training loss: tensor(1.7865) feature loss: tensor(0.5724)
Local adapation with distilling: 0.001
training loss: tensor(1.7254) feature loss: tensor(0.5655)
Local adapation with distilling: 0.001
training loss: tensor(1.7985) feature loss: tensor(0.5629)
Local adapation with distilling: 0.001
training loss: tensor(1.8484) feature loss: tensor(0.5867)
Local adapation with distilling: 0.001
training loss: tensor(1.7137) feature loss: tensor(0.5571)
Local adapation with distilling: 0.001
training loss: tensor(1.9218) feature loss: tensor(0.5689)
Local adapation with distilling: 0.001
training loss: tensor(1.7187) feature loss: tensor(0.5678)
Global Model Acc on global data: 0.1111 length of data: 10000
save a model
-------------Round number:  1  -------------
selected users: [80, 84, 33, 81, 93, 17, 36, 82, 69, 65]
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
all data: 245
Local adapation with distilling: 0.000982
training loss: tensor(1.4669) feature loss: tensor(0.6214)
Local adapation with distilling: 0.000982
training loss: tensor(1.4585) feature loss: tensor(0.6222)
Local adapation with distilling: 0.000982
training loss: tensor(1.3802) feature loss: tensor(0.6063)
Local adapation with distilling: 0.000982
training loss: tensor(1.5164) feature loss: tensor(0.5955)
Local adapation with distilling: 0.000982
training loss: tensor(1.3817) feature loss: tensor(0.5582)
Local adapation with distilling: 0.000982
training loss: tensor(1.4592) feature loss: tensor(0.5899)
Local adapation with distilling: 0.000982
training loss: tensor(1.3662) feature loss: tensor(0.5882)
Local adapation with distilling: 0.000982
training loss: tensor(1.4770) feature loss: tensor(0.6190)
Local adapation with distilling: 0.000982
training loss: tensor(1.4197) feature loss: tensor(0.6012)
Local adapation with distilling: 0.000982
training loss: tensor(1.3284) feature loss: tensor(0.5926)
Global Model Acc on global data: 0.2038 length of data: 10000
save a model
-------------Round number:  2  -------------
selected users: [83, 30, 56, 24, 16, 23, 2, 27, 28, 13]
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([27, 64, 8, 8]) torch.Size([27])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
all data: 247
Local adapation with distilling: 0.000964
training loss: tensor(1.2172) feature loss: tensor(0.5262)
Local adapation with distilling: 0.000964
training loss: tensor(1.2588) feature loss: tensor(0.5377)
Local adapation with distilling: 0.000964
training loss: tensor(1.1657) feature loss: tensor(0.5185)
Local adapation with distilling: 0.000964
training loss: tensor(1.3264) feature loss: tensor(0.5620)
Local adapation with distilling: 0.000964
training loss: tensor(1.2526) feature loss: tensor(0.5459)
Local adapation with distilling: 0.000964
training loss: tensor(1.2498) feature loss: tensor(0.5440)
Local adapation with distilling: 0.000964
training loss: tensor(1.1890) feature loss: tensor(0.5406)
Local adapation with distilling: 0.000964
training loss: tensor(1.3458) feature loss: tensor(0.6039)
Local adapation with distilling: 0.000964
training loss: tensor(1.3501) feature loss: tensor(0.5372)
Local adapation with distilling: 0.000964
training loss: tensor(1.1919) feature loss: tensor(0.5434)
Global Model Acc on global data: 0.1725 length of data: 10000
-------------Round number:  3  -------------
selected users: [93, 67, 6, 64, 96, 83, 98, 42, 25, 15]
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
all data: 246
Local adapation with distilling: 0.000946
training loss: tensor(1.1174) feature loss: tensor(0.5190)
Local adapation with distilling: 0.000946
training loss: tensor(1.2122) feature loss: tensor(0.5515)
Local adapation with distilling: 0.000946
training loss: tensor(1.2072) feature loss: tensor(0.5248)
Local adapation with distilling: 0.000946
training loss: tensor(1.2417) feature loss: tensor(0.5860)
Local adapation with distilling: 0.000946
training loss: tensor(1.2924) feature loss: tensor(0.5143)
Local adapation with distilling: 0.000946
training loss: tensor(1.0542) feature loss: tensor(0.5034)
Local adapation with distilling: 0.000946
training loss: tensor(1.1756) feature loss: tensor(0.5469)
Local adapation with distilling: 0.000946
training loss: tensor(1.2361) feature loss: tensor(0.5542)
Local adapation with distilling: 0.000946
training loss: tensor(1.1554) feature loss: tensor(0.5735)
Local adapation with distilling: 0.000946
training loss: tensor(1.2396) feature loss: tensor(0.5332)
Global Model Acc on global data: 0.2005 length of data: 10000
-------------Round number:  4  -------------
selected users: [20, 10, 96, 16, 63, 24, 53, 97, 41, 47]
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([28, 64, 8, 8]) torch.Size([28])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
all data: 243
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.2297) feature loss: tensor(0.5637)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.2283) feature loss: tensor(0.5922)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.2918) feature loss: tensor(0.5200)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.1148) feature loss: tensor(0.5293)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.0951) feature loss: tensor(0.5402)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.0587) feature loss: tensor(0.5069)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.0313) feature loss: tensor(0.5174)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.0577) feature loss: tensor(0.5043)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.1070) feature loss: tensor(0.5219)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.0564) feature loss: tensor(0.5205)
Global Model Acc on global data: 0.2103 length of data: 10000
save a model
-------------Round number:  5  -------------
selected users: [66, 32, 46, 28, 74, 23, 10, 20, 17, 35]
random features: torch.Size([27, 64, 8, 8]) torch.Size([27])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
all data: 247
Local adapation with distilling: 0.00091
training loss: tensor(1.0983) feature loss: tensor(0.5605)
Local adapation with distilling: 0.00091
training loss: tensor(1.1234) feature loss: tensor(0.5498)
Local adapation with distilling: 0.00091
training loss: tensor(1.2007) feature loss: tensor(0.5693)
Local adapation with distilling: 0.00091
training loss: tensor(1.3477) feature loss: tensor(0.5436)
Local adapation with distilling: 0.00091
training loss: tensor(1.0538) feature loss: tensor(0.5305)
Local adapation with distilling: 0.00091
training loss: tensor(1.0968) feature loss: tensor(0.5272)
Local adapation with distilling: 0.00091
training loss: tensor(1.1133) feature loss: tensor(0.5631)
Local adapation with distilling: 0.00091
training loss: tensor(1.1656) feature loss: tensor(0.5592)
Local adapation with distilling: 0.00091
training loss: tensor(1.1118) feature loss: tensor(0.5582)
Local adapation with distilling: 0.00091
training loss: tensor(1.1023) feature loss: tensor(0.5433)
Global Model Acc on global data: 0.3369 length of data: 10000
save a model
-------------Round number:  6  -------------
selected users: [17, 34, 0, 45, 60, 86, 20, 47, 44, 81]
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
all data: 242
Local adapation with distilling: 0.000892
training loss: tensor(0.9199) feature loss: tensor(0.4194)
Local adapation with distilling: 0.000892
training loss: tensor(0.9618) feature loss: tensor(0.4198)
Local adapation with distilling: 0.000892
training loss: tensor(0.9594) feature loss: tensor(0.4687)
Local adapation with distilling: 0.000892
training loss: tensor(0.9226) feature loss: tensor(0.4222)
Local adapation with distilling: 0.000892
training loss: tensor(0.9728) feature loss: tensor(0.4405)
Local adapation with distilling: 0.000892
training loss: tensor(0.9527) feature loss: tensor(0.4068)
Local adapation with distilling: 0.000892
training loss: tensor(0.9899) feature loss: tensor(0.4209)
Local adapation with distilling: 0.000892
training loss: tensor(0.8862) feature loss: tensor(0.4199)
Local adapation with distilling: 0.000892
training loss: tensor(0.9833) feature loss: tensor(0.4315)
Local adapation with distilling: 0.000892
training loss: tensor(1.1339) feature loss: tensor(0.4341)
Global Model Acc on global data: 0.3494 length of data: 10000
save a model
-------------Round number:  7  -------------
selected users: [37, 26, 78, 91, 49, 15, 93, 71, 86, 22]
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
all data: 254
Local adapation with distilling: 0.000874
training loss: tensor(0.9961) feature loss: tensor(0.4376)
Local adapation with distilling: 0.000874
training loss: tensor(0.8962) feature loss: tensor(0.4991)
Local adapation with distilling: 0.000874
training loss: tensor(0.9686) feature loss: tensor(0.5160)
Local adapation with distilling: 0.000874
training loss: tensor(0.9325) feature loss: tensor(0.4649)
Local adapation with distilling: 0.000874
training loss: tensor(0.9459) feature loss: tensor(0.5238)
Local adapation with distilling: 0.000874
training loss: tensor(1.0083) feature loss: tensor(0.4851)
Local adapation with distilling: 0.000874
training loss: tensor(0.9413) feature loss: tensor(0.5276)
Local adapation with distilling: 0.000874
training loss: tensor(0.9129) feature loss: tensor(0.4552)
Local adapation with distilling: 0.000874
training loss: tensor(0.8784) feature loss: tensor(0.4612)
Local adapation with distilling: 0.000874
training loss: tensor(1.2252) feature loss: tensor(0.4808)
Global Model Acc on global data: 0.3431 length of data: 10000
-------------Round number:  8  -------------
selected users: [17, 23, 1, 44, 55, 99, 86, 29, 62, 33]
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([27, 64, 8, 8]) torch.Size([27])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
all data: 246
Local adapation with distilling: 0.000856
training loss: tensor(0.8502) feature loss: tensor(0.4286)
Local adapation with distilling: 0.000856
training loss: tensor(0.8962) feature loss: tensor(0.4639)
Local adapation with distilling: 0.000856
training loss: tensor(0.9318) feature loss: tensor(0.4361)
Local adapation with distilling: 0.000856
training loss: tensor(0.9401) feature loss: tensor(0.4546)
Local adapation with distilling: 0.000856
training loss: tensor(0.9103) feature loss: tensor(0.4662)
Local adapation with distilling: 0.000856
training loss: tensor(0.8985) feature loss: tensor(0.4555)
Local adapation with distilling: 0.000856
training loss: tensor(0.7927) feature loss: tensor(0.4348)
Local adapation with distilling: 0.000856
training loss: tensor(0.8542) feature loss: tensor(0.4435)
Local adapation with distilling: 0.000856
training loss: tensor(0.9886) feature loss: tensor(0.4716)
Local adapation with distilling: 0.000856
training loss: tensor(0.8792) feature loss: tensor(0.4669)
Global Model Acc on global data: 0.3421 length of data: 10000
-------------Round number:  9  -------------
selected users: [75, 42, 46, 68, 3, 39, 23, 20, 70, 73]
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
all data: 245
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.8926) feature loss: tensor(0.4282)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(1.0156) feature loss: tensor(0.4077)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.8687) feature loss: tensor(0.4170)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.8720) feature loss: tensor(0.4440)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.9491) feature loss: tensor(0.4082)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.9511) feature loss: tensor(0.4214)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.8189) feature loss: tensor(0.4503)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.9030) feature loss: tensor(0.4680)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.9018) feature loss: tensor(0.4490)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.8864) feature loss: tensor(0.4524)
Global Model Acc on global data: 0.3726 length of data: 10000
save a model
-------------Round number:  10  -------------
selected users: [19, 14, 43, 37, 66, 3, 79, 41, 38, 68]
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([27, 64, 8, 8]) torch.Size([27])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([27, 64, 8, 8]) torch.Size([27])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
all data: 250
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.7798) feature loss: tensor(0.3842)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.7707) feature loss: tensor(0.3854)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.7952) feature loss: tensor(0.3872)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.8231) feature loss: tensor(0.3674)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.7674) feature loss: tensor(0.3784)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.8160) feature loss: tensor(0.3699)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.8626) feature loss: tensor(0.3822)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.8427) feature loss: tensor(0.3844)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.7363) feature loss: tensor(0.3697)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.8100) feature loss: tensor(0.3748)
Global Model Acc on global data: 0.3354 length of data: 10000
-------------Round number:  11  -------------
selected users: [46, 49, 22, 58, 41, 98, 62, 29, 30, 51]
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([27, 64, 8, 8]) torch.Size([27])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
all data: 243
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.8221) feature loss: tensor(0.4244)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.8241) feature loss: tensor(0.4703)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(1.0669) feature loss: tensor(0.4418)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.8039) feature loss: tensor(0.4470)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.8359) feature loss: tensor(0.4385)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.8645) feature loss: tensor(0.4412)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.8888) feature loss: tensor(0.4704)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.7648) feature loss: tensor(0.4161)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.9010) feature loss: tensor(0.4712)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.8889) feature loss: tensor(0.4741)
Global Model Acc on global data: 0.3767 length of data: 10000
save a model
-------------Round number:  12  -------------
selected users: [17, 41, 92, 14, 68, 31, 89, 15, 21, 60]
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([27, 64, 8, 8]) torch.Size([27])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
all data: 244
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.7382) feature loss: tensor(0.3611)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.6981) feature loss: tensor(0.3538)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.8093) feature loss: tensor(0.3692)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.6800) feature loss: tensor(0.3618)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.7107) feature loss: tensor(0.3435)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.8626) feature loss: tensor(0.3681)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.6951) feature loss: tensor(0.3467)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.7717) feature loss: tensor(0.3568)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.7665) feature loss: tensor(0.3849)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.8028) feature loss: tensor(0.3686)
Global Model Acc on global data: 0.3683 length of data: 10000
-------------Round number:  13  -------------
selected users: [37, 62, 83, 14, 43, 9, 44, 31, 69, 57]
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
all data: 242
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.6892) feature loss: tensor(0.3370)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.7184) feature loss: tensor(0.3617)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.7222) feature loss: tensor(0.3620)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.6413) feature loss: tensor(0.3493)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.7063) feature loss: tensor(0.3673)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.8120) feature loss: tensor(0.3792)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.7468) feature loss: tensor(0.3530)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.7564) feature loss: tensor(0.3586)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.6964) feature loss: tensor(0.3615)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.7347) feature loss: tensor(0.3446)
Global Model Acc on global data: 0.3539 length of data: 10000
-------------Round number:  14  -------------
selected users: [24, 39, 35, 44, 55, 70, 82, 40, 91, 65]
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
all data: 242
Local adapation with distilling: 0.000748
training loss: tensor(0.8286) feature loss: tensor(0.4746)
Local adapation with distilling: 0.000748
training loss: tensor(0.9311) feature loss: tensor(0.4928)
Local adapation with distilling: 0.000748
training loss: tensor(0.9303) feature loss: tensor(0.4988)
Local adapation with distilling: 0.000748
training loss: tensor(0.8347) feature loss: tensor(0.4750)
Local adapation with distilling: 0.000748
training loss: tensor(0.8955) feature loss: tensor(0.5004)
Local adapation with distilling: 0.000748
training loss: tensor(0.8745) feature loss: tensor(0.5077)
Local adapation with distilling: 0.000748
training loss: tensor(0.8765) feature loss: tensor(0.5106)
Local adapation with distilling: 0.000748
training loss: tensor(0.8795) feature loss: tensor(0.5232)
Local adapation with distilling: 0.000748
training loss: tensor(0.9363) feature loss: tensor(0.4860)
Local adapation with distilling: 0.000748
training loss: tensor(0.8493) feature loss: tensor(0.5010)
Global Model Acc on global data: 0.3485 length of data: 10000
-------------Round number:  15  -------------
selected users: [84, 36, 57, 51, 46, 78, 93, 14, 11, 59]
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
all data: 250
Local adapation with distilling: 0.00073
training loss: tensor(0.7869) feature loss: tensor(0.4399)
Local adapation with distilling: 0.00073
training loss: tensor(0.7890) feature loss: tensor(0.4618)
Local adapation with distilling: 0.00073
training loss: tensor(0.8185) feature loss: tensor(0.4110)
Local adapation with distilling: 0.00073
training loss: tensor(0.8092) feature loss: tensor(0.4144)
Local adapation with distilling: 0.00073
training loss: tensor(0.7873) feature loss: tensor(0.4142)
Local adapation with distilling: 0.00073
training loss: tensor(0.8670) feature loss: tensor(0.4350)
Local adapation with distilling: 0.00073
training loss: tensor(0.9033) feature loss: tensor(0.4255)
Local adapation with distilling: 0.00073
training loss: tensor(0.7209) feature loss: tensor(0.4253)
Local adapation with distilling: 0.00073
training loss: tensor(0.8713) feature loss: tensor(0.4300)
Local adapation with distilling: 0.00073
training loss: tensor(0.8815) feature loss: tensor(0.4220)
Global Model Acc on global data: 0.3933 length of data: 10000
save a model
-------------Round number:  16  -------------
selected users: [7, 25, 71, 42, 47, 29, 63, 88, 50, 9]
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([27, 64, 8, 8]) torch.Size([27])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
all data: 244
Local adapation with distilling: 0.000712
training loss: tensor(0.7311) feature loss: tensor(0.3672)
Local adapation with distilling: 0.000712
training loss: tensor(0.7299) feature loss: tensor(0.3642)
Local adapation with distilling: 0.000712
training loss: tensor(0.7058) feature loss: tensor(0.3641)
Local adapation with distilling: 0.000712
training loss: tensor(0.7860) feature loss: tensor(0.3636)
Local adapation with distilling: 0.000712
training loss: tensor(0.6778) feature loss: tensor(0.3643)
Local adapation with distilling: 0.000712
training loss: tensor(0.6845) feature loss: tensor(0.3560)
Local adapation with distilling: 0.000712
training loss: tensor(0.6930) feature loss: tensor(0.3699)
Local adapation with distilling: 0.000712
training loss: tensor(0.7030) feature loss: tensor(0.3588)
Local adapation with distilling: 0.000712
training loss: tensor(0.7223) feature loss: tensor(0.4017)
Local adapation with distilling: 0.000712
training loss: tensor(0.9553) feature loss: tensor(0.3635)
Global Model Acc on global data: 0.3781 length of data: 10000
-------------Round number:  17  -------------
selected users: [71, 28, 9, 4, 73, 34, 94, 92, 47, 37]
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
all data: 244
Local adapation with distilling: 0.000694
training loss: tensor(0.6538) feature loss: tensor(0.3316)
Local adapation with distilling: 0.000694
training loss: tensor(0.8856) feature loss: tensor(0.3393)
Local adapation with distilling: 0.000694
training loss: tensor(0.8935) feature loss: tensor(0.3425)
Local adapation with distilling: 0.000694
training loss: tensor(0.6891) feature loss: tensor(0.3387)
Local adapation with distilling: 0.000694
training loss: tensor(0.7516) feature loss: tensor(0.3380)
Local adapation with distilling: 0.000694
training loss: tensor(0.6988) feature loss: tensor(0.3232)
Local adapation with distilling: 0.000694
training loss: tensor(0.7294) feature loss: tensor(0.3225)
Local adapation with distilling: 0.000694
training loss: tensor(0.7445) feature loss: tensor(0.3507)
Local adapation with distilling: 0.000694
training loss: tensor(0.5973) feature loss: tensor(0.3368)
Local adapation with distilling: 0.000694
training loss: tensor(0.6795) feature loss: tensor(0.3215)
Global Model Acc on global data: 0.3516 length of data: 10000
-------------Round number:  18  -------------
selected users: [53, 47, 43, 54, 33, 48, 0, 12, 44, 91]
random features: torch.Size([28, 64, 8, 8]) torch.Size([28])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
all data: 245
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.7463) feature loss: tensor(0.4132)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.6801) feature loss: tensor(0.3907)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.7169) feature loss: tensor(0.4195)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.8503) feature loss: tensor(0.4041)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.7524) feature loss: tensor(0.4327)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.8995) feature loss: tensor(0.4187)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.8068) feature loss: tensor(0.4360)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.8594) feature loss: tensor(0.4236)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.7663) feature loss: tensor(0.4111)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.7758) feature loss: tensor(0.4168)
Global Model Acc on global data: 0.3569 length of data: 10000
-------------Round number:  19  -------------
selected users: [85, 72, 16, 18, 2, 38, 90, 30, 83, 61]
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([28, 64, 8, 8]) torch.Size([28])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([27, 64, 8, 8]) torch.Size([27])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
all data: 250
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.7133) feature loss: tensor(0.4031)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.7509) feature loss: tensor(0.4244)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.8355) feature loss: tensor(0.4270)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.8792) feature loss: tensor(0.4208)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.7815) feature loss: tensor(0.4158)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.7267) feature loss: tensor(0.4250)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.8241) feature loss: tensor(0.4304)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.7777) feature loss: tensor(0.4332)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.7536) feature loss: tensor(0.4170)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.7521) feature loss: tensor(0.3940)
Global Model Acc on global data: 0.3868 length of data: 10000
-------------Round number:  20  -------------
selected users: [70, 74, 2, 44, 56, 48, 12, 36, 0, 49]
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([27, 64, 8, 8]) torch.Size([27])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
all data: 242
Local adapation with distilling: 0.00064
training loss: tensor(0.6627) feature loss: tensor(0.3546)
Local adapation with distilling: 0.00064
training loss: tensor(0.6204) feature loss: tensor(0.3280)
Local adapation with distilling: 0.00064
training loss: tensor(0.5939) feature loss: tensor(0.3448)
Local adapation with distilling: 0.00064
training loss: tensor(0.5989) feature loss: tensor(0.3478)
Local adapation with distilling: 0.00064
training loss: tensor(0.6322) feature loss: tensor(0.3423)
Local adapation with distilling: 0.00064
training loss: tensor(0.6596) feature loss: tensor(0.3348)
Local adapation with distilling: 0.00064
training loss: tensor(0.6347) feature loss: tensor(0.3491)
Local adapation with distilling: 0.00064
training loss: tensor(0.6055) feature loss: tensor(0.3415)
Local adapation with distilling: 0.00064
training loss: tensor(0.5863) feature loss: tensor(0.3468)
Local adapation with distilling: 0.00064
training loss: tensor(0.5997) feature loss: tensor(0.3294)
Global Model Acc on global data: 0.4191 length of data: 10000
save a model
-------------Round number:  21  -------------
selected users: [23, 81, 85, 34, 62, 46, 42, 31, 93, 11]
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
all data: 244
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.7462) feature loss: tensor(0.3684)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.8441) feature loss: tensor(0.3669)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.6365) feature loss: tensor(0.3677)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.7667) feature loss: tensor(0.3545)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.7282) feature loss: tensor(0.3945)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.6877) feature loss: tensor(0.3634)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.7877) feature loss: tensor(0.3607)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.8562) feature loss: tensor(0.3747)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.7024) feature loss: tensor(0.3838)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.7173) feature loss: tensor(0.3632)
Global Model Acc on global data: 0.4555 length of data: 10000
save a model
-------------Round number:  22  -------------
selected users: [2, 49, 82, 31, 37, 12, 87, 42, 99, 85]
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
all data: 238
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.5487) feature loss: tensor(0.3077)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.5534) feature loss: tensor(0.3042)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.6239) feature loss: tensor(0.3086)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.6184) feature loss: tensor(0.3097)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.6226) feature loss: tensor(0.2859)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.5728) feature loss: tensor(0.3013)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.6599) feature loss: tensor(0.3150)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.6087) feature loss: tensor(0.2972)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.5937) feature loss: tensor(0.3006)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.5201) feature loss: tensor(0.2958)
Global Model Acc on global data: 0.4302 length of data: 10000
-------------Round number:  23  -------------
selected users: [26, 80, 82, 68, 77, 37, 3, 55, 20, 17]
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
all data: 245
Local adapation with distilling: 0.000586
training loss: tensor(0.6452) feature loss: tensor(0.3438)
Local adapation with distilling: 0.000586
training loss: tensor(0.7378) feature loss: tensor(0.3495)
Local adapation with distilling: 0.000586
training loss: tensor(0.6413) feature loss: tensor(0.3355)
Local adapation with distilling: 0.000586
training loss: tensor(0.6762) feature loss: tensor(0.3383)
Local adapation with distilling: 0.000586
training loss: tensor(0.7073) feature loss: tensor(0.3346)
Local adapation with distilling: 0.000586
training loss: tensor(0.6473) feature loss: tensor(0.3278)
Local adapation with distilling: 0.000586
training loss: tensor(0.7902) feature loss: tensor(0.3535)
Local adapation with distilling: 0.000586
training loss: tensor(0.7040) feature loss: tensor(0.3535)
Local adapation with distilling: 0.000586
training loss: tensor(0.7244) feature loss: tensor(0.3482)
Local adapation with distilling: 0.000586
training loss: tensor(0.7199) feature loss: tensor(0.3381)
Global Model Acc on global data: 0.4483 length of data: 10000
-------------Round number:  24  -------------
selected users: [26, 31, 37, 86, 76, 14, 88, 48, 71, 67]
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
all data: 246
Local adapation with distilling: 0.000568
training loss: tensor(0.5245) feature loss: tensor(0.2984)
Local adapation with distilling: 0.000568
training loss: tensor(0.6226) feature loss: tensor(0.3101)
Local adapation with distilling: 0.000568
training loss: tensor(0.5251) feature loss: tensor(0.2893)
Local adapation with distilling: 0.000568
training loss: tensor(0.5841) feature loss: tensor(0.2979)
Local adapation with distilling: 0.000568
training loss: tensor(0.6957) feature loss: tensor(0.2986)
Local adapation with distilling: 0.000568
training loss: tensor(0.5648) feature loss: tensor(0.3094)
Local adapation with distilling: 0.000568
training loss: tensor(0.5709) feature loss: tensor(0.3009)
Local adapation with distilling: 0.000568
training loss: tensor(0.6117) feature loss: tensor(0.3076)
Local adapation with distilling: 0.000568
training loss: tensor(0.5841) feature loss: tensor(0.3089)
Local adapation with distilling: 0.000568
training loss: tensor(0.6326) feature loss: tensor(0.3034)
Global Model Acc on global data: 0.4164 length of data: 10000
-------------Round number:  25  -------------
selected users: [41, 29, 33, 65, 74, 6, 57, 89, 87, 98]
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([27, 64, 8, 8]) torch.Size([27])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([27, 64, 8, 8]) torch.Size([27])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
all data: 247
Local adapation with distilling: 0.00055
training loss: tensor(0.6070) feature loss: tensor(0.3158)
Local adapation with distilling: 0.00055
training loss: tensor(0.6263) feature loss: tensor(0.3149)
Local adapation with distilling: 0.00055
training loss: tensor(0.6026) feature loss: tensor(0.3263)
Local adapation with distilling: 0.00055
training loss: tensor(0.6496) feature loss: tensor(0.3311)
Local adapation with distilling: 0.00055
training loss: tensor(0.5806) feature loss: tensor(0.3112)
Local adapation with distilling: 0.00055
training loss: tensor(0.6650) feature loss: tensor(0.3130)
Local adapation with distilling: 0.00055
training loss: tensor(0.6212) feature loss: tensor(0.3007)
Local adapation with distilling: 0.00055
training loss: tensor(0.6436) feature loss: tensor(0.3208)
Local adapation with distilling: 0.00055
training loss: tensor(0.6203) feature loss: tensor(0.3416)
Local adapation with distilling: 0.00055
training loss: tensor(0.5723) feature loss: tensor(0.3120)
Global Model Acc on global data: 0.4049 length of data: 10000
-------------Round number:  26  -------------
selected users: [8, 69, 84, 41, 25, 5, 63, 95, 33, 70]
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
all data: 243
Local adapation with distilling: 0.000532
training loss: tensor(0.6763) feature loss: tensor(0.3750)
Local adapation with distilling: 0.000532
training loss: tensor(0.6801) feature loss: tensor(0.3862)
Local adapation with distilling: 0.000532
training loss: tensor(0.6918) feature loss: tensor(0.3665)
Local adapation with distilling: 0.000532
training loss: tensor(0.6547) feature loss: tensor(0.3576)
Local adapation with distilling: 0.000532
training loss: tensor(0.7516) feature loss: tensor(0.3797)
Local adapation with distilling: 0.000532
training loss: tensor(0.8545) feature loss: tensor(0.3866)
Local adapation with distilling: 0.000532
training loss: tensor(0.6639) feature loss: tensor(0.3753)
Local adapation with distilling: 0.000532
training loss: tensor(0.7507) feature loss: tensor(0.3816)
Local adapation with distilling: 0.000532
training loss: tensor(0.6202) feature loss: tensor(0.3755)
Local adapation with distilling: 0.000532
training loss: tensor(0.6936) feature loss: tensor(0.3949)
Global Model Acc on global data: 0.4141 length of data: 10000
-------------Round number:  27  -------------
selected users: [89, 68, 43, 50, 40, 95, 27, 85, 22, 44]
random features: torch.Size([27, 64, 8, 8]) torch.Size([27])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
all data: 245
Local adapation with distilling: 0.000514
training loss: tensor(0.6390) feature loss: tensor(0.3388)
Local adapation with distilling: 0.000514
training loss: tensor(0.6458) feature loss: tensor(0.3471)
Local adapation with distilling: 0.000514
training loss: tensor(0.6033) feature loss: tensor(0.3491)
Local adapation with distilling: 0.000514
training loss: tensor(0.6592) feature loss: tensor(0.3473)
Local adapation with distilling: 0.000514
training loss: tensor(0.6745) feature loss: tensor(0.3556)
Local adapation with distilling: 0.000514
training loss: tensor(0.6819) feature loss: tensor(0.3381)
Local adapation with distilling: 0.000514
training loss: tensor(0.7615) feature loss: tensor(0.3339)
Local adapation with distilling: 0.000514
training loss: tensor(0.6137) feature loss: tensor(0.3363)
Local adapation with distilling: 0.000514
training loss: tensor(1.0540) feature loss: tensor(0.3565)
Local adapation with distilling: 0.000514
training loss: tensor(0.7034) feature loss: tensor(0.3484)
Global Model Acc on global data: 0.4169 length of data: 10000
-------------Round number:  28  -------------
selected users: [67, 14, 0, 86, 13, 18, 30, 36, 52, 95]
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
all data: 244
Local adapation with distilling: 0.000496
training loss: tensor(0.6143) feature loss: tensor(0.3041)
Local adapation with distilling: 0.000496
training loss: tensor(0.5417) feature loss: tensor(0.3023)
Local adapation with distilling: 0.000496
training loss: tensor(0.6084) feature loss: tensor(0.3071)
Local adapation with distilling: 0.000496
training loss: tensor(0.5988) feature loss: tensor(0.3082)
Local adapation with distilling: 0.000496
training loss: tensor(0.5848) feature loss: tensor(0.3037)
Local adapation with distilling: 0.000496
training loss: tensor(0.6638) feature loss: tensor(0.3081)
Local adapation with distilling: 0.000496
training loss: tensor(0.6378) feature loss: tensor(0.3133)
Local adapation with distilling: 0.000496
training loss: tensor(0.5743) feature loss: tensor(0.3004)
Local adapation with distilling: 0.000496
training loss: tensor(0.8597) feature loss: tensor(0.3250)
Local adapation with distilling: 0.000496
training loss: tensor(0.5802) feature loss: tensor(0.3070)
Global Model Acc on global data: 0.421 length of data: 10000
-------------Round number:  29  -------------
selected users: [73, 8, 10, 7, 19, 71, 92, 25, 38, 12]
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([27, 64, 8, 8]) torch.Size([27])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
all data: 245
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.7476) feature loss: tensor(0.3472)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.6683) feature loss: tensor(0.3416)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.7921) feature loss: tensor(0.3546)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.7906) feature loss: tensor(0.3501)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.6894) feature loss: tensor(0.3359)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.6725) feature loss: tensor(0.3399)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.7659) feature loss: tensor(0.3497)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.7513) feature loss: tensor(0.3560)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.6685) feature loss: tensor(0.3404)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.6841) feature loss: tensor(0.3552)
Global Model Acc on global data: 0.433 length of data: 10000
-------------Round number:  30  -------------
selected users: [20, 91, 34, 52, 8, 74, 21, 88, 80, 89]
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([27, 64, 8, 8]) torch.Size([27])
all data: 243
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.6197) feature loss: tensor(0.2953)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.6569) feature loss: tensor(0.2850)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.6105) feature loss: tensor(0.2777)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.8993) feature loss: tensor(0.2880)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.5411) feature loss: tensor(0.2840)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.5224) feature loss: tensor(0.2801)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.5529) feature loss: tensor(0.2826)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.5221) feature loss: tensor(0.2819)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.6110) feature loss: tensor(0.2934)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.5395) feature loss: tensor(0.2851)
Global Model Acc on global data: 0.382 length of data: 10000
-------------Round number:  31  -------------
selected users: [17, 33, 76, 3, 56, 0, 37, 8, 60, 67]
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([27, 64, 8, 8]) torch.Size([27])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
all data: 249
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.6941) feature loss: tensor(0.3315)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.5675) feature loss: tensor(0.3360)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.6631) feature loss: tensor(0.3276)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.6963) feature loss: tensor(0.3363)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.6199) feature loss: tensor(0.3285)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.5913) feature loss: tensor(0.3316)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.6054) feature loss: tensor(0.3187)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.5285) feature loss: tensor(0.3274)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.6531) feature loss: tensor(0.3431)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.5879) feature loss: tensor(0.3100)
Global Model Acc on global data: 0.4175 length of data: 10000
-------------Round number:  32  -------------
selected users: [22, 39, 85, 97, 55, 33, 80, 13, 27, 96]
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
all data: 244
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(1.3106) feature loss: tensor(0.4037)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.9108) feature loss: tensor(0.4035)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.6620) feature loss: tensor(0.3863)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.8110) feature loss: tensor(0.4096)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.8018) feature loss: tensor(0.4076)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.6603) feature loss: tensor(0.3897)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.7078) feature loss: tensor(0.3862)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.7025) feature loss: tensor(0.3913)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.8666) feature loss: tensor(0.3862)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(1.1438) feature loss: tensor(0.3995)
Global Model Acc on global data: 0.4389 length of data: 10000
-------------Round number:  33  -------------
selected users: [56, 90, 95, 82, 60, 71, 6, 81, 2, 70]
random features: torch.Size([27, 64, 8, 8]) torch.Size([27])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
all data: 246
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.5982) feature loss: tensor(0.3241)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.6861) feature loss: tensor(0.3255)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.6087) feature loss: tensor(0.3314)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.6700) feature loss: tensor(0.3356)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.6212) feature loss: tensor(0.3345)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.6001) feature loss: tensor(0.3215)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.7177) feature loss: tensor(0.3296)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.8819) feature loss: tensor(0.3361)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.6305) feature loss: tensor(0.3318)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.6174) feature loss: tensor(0.3433)
Global Model Acc on global data: 0.4245 length of data: 10000
-------------Round number:  34  -------------
selected users: [14, 74, 15, 4, 32, 59, 91, 10, 50, 53]
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([28, 64, 8, 8]) torch.Size([28])
all data: 247
Local adapation with distilling: 0.000388
training loss: tensor(0.6395) feature loss: tensor(0.3649)
Local adapation with distilling: 0.000388
training loss: tensor(0.6287) feature loss: tensor(0.3592)
Local adapation with distilling: 0.000388
training loss: tensor(1.0261) feature loss: tensor(0.3744)
Local adapation with distilling: 0.000388
training loss: tensor(0.7627) feature loss: tensor(0.3672)
Local adapation with distilling: 0.000388
training loss: tensor(0.8732) feature loss: tensor(0.3683)
Local adapation with distilling: 0.000388
training loss: tensor(0.7852) feature loss: tensor(0.3632)
Local adapation with distilling: 0.000388
training loss: tensor(0.6985) feature loss: tensor(0.3534)
Local adapation with distilling: 0.000388
training loss: tensor(0.7102) feature loss: tensor(0.3649)
Local adapation with distilling: 0.000388
training loss: tensor(0.6676) feature loss: tensor(0.3577)
Local adapation with distilling: 0.000388
training loss: tensor(0.7269) feature loss: tensor(0.3701)
Global Model Acc on global data: 0.457 length of data: 10000
save a model
-------------Round number:  35  -------------
selected users: [40, 71, 98, 27, 70, 31, 10, 24, 51, 35]
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
all data: 241
Local adapation with distilling: 0.00037
training loss: tensor(0.5917) feature loss: tensor(0.2812)
Local adapation with distilling: 0.00037
training loss: tensor(0.5140) feature loss: tensor(0.2693)
Local adapation with distilling: 0.00037
training loss: tensor(0.5167) feature loss: tensor(0.2716)
Local adapation with distilling: 0.00037
training loss: tensor(0.6702) feature loss: tensor(0.2697)
Local adapation with distilling: 0.00037
training loss: tensor(0.5369) feature loss: tensor(0.2779)
Local adapation with distilling: 0.00037
training loss: tensor(0.5692) feature loss: tensor(0.2791)
Local adapation with distilling: 0.00037
training loss: tensor(0.5325) feature loss: tensor(0.2777)
Local adapation with distilling: 0.00037
training loss: tensor(0.6155) feature loss: tensor(0.2735)
Local adapation with distilling: 0.00037
training loss: tensor(0.5847) feature loss: tensor(0.2814)
Local adapation with distilling: 0.00037
training loss: tensor(0.6140) feature loss: tensor(0.2800)
Global Model Acc on global data: 0.4185 length of data: 10000
-------------Round number:  36  -------------
selected users: [59, 42, 2, 27, 28, 75, 58, 68, 52, 74]
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
all data: 244
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.6127) feature loss: tensor(0.2888)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.6814) feature loss: tensor(0.2788)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.5544) feature loss: tensor(0.2862)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.6264) feature loss: tensor(0.2763)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(1.1033) feature loss: tensor(0.2962)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.6155) feature loss: tensor(0.2968)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.6053) feature loss: tensor(0.2989)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.6553) feature loss: tensor(0.2879)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.8873) feature loss: tensor(0.3037)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.4983) feature loss: tensor(0.2817)
Global Model Acc on global data: 0.4448 length of data: 10000
-------------Round number:  37  -------------
selected users: [61, 49, 86, 78, 5, 91, 81, 82, 89, 18]
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([27, 64, 8, 8]) torch.Size([27])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
all data: 251
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.6133) feature loss: tensor(0.2926)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.6158) feature loss: tensor(0.2976)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.6037) feature loss: tensor(0.2999)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.6977) feature loss: tensor(0.3047)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.7514) feature loss: tensor(0.2953)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.6025) feature loss: tensor(0.3007)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.7277) feature loss: tensor(0.3017)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.6375) feature loss: tensor(0.3062)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.6066) feature loss: tensor(0.3002)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.6457) feature loss: tensor(0.2973)
Global Model Acc on global data: 0.4558 length of data: 10000
-------------Round number:  38  -------------
selected users: [40, 73, 49, 45, 64, 16, 69, 17, 72, 66]
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([28, 64, 8, 8]) torch.Size([28])
random features: torch.Size([27, 64, 8, 8]) torch.Size([27])
all data: 253
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.6885) feature loss: tensor(0.3477)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.6879) feature loss: tensor(0.3537)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.6313) feature loss: tensor(0.3310)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.7567) feature loss: tensor(0.3439)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.8875) feature loss: tensor(0.3406)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.8026) feature loss: tensor(0.3535)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.6549) feature loss: tensor(0.3326)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.7281) feature loss: tensor(0.3355)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.6799) feature loss: tensor(0.3343)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.7323) feature loss: tensor(0.3236)
Global Model Acc on global data: 0.4462 length of data: 10000
-------------Round number:  39  -------------
selected users: [22, 53, 84, 57, 87, 58, 29, 21, 85, 79]
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([28, 64, 8, 8]) torch.Size([28])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([27, 64, 8, 8]) torch.Size([27])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
all data: 249
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.9408) feature loss: tensor(0.3083)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.6148) feature loss: tensor(0.3042)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.6793) feature loss: tensor(0.3093)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.6808) feature loss: tensor(0.3009)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.6724) feature loss: tensor(0.3163)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.5961) feature loss: tensor(0.3029)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.6185) feature loss: tensor(0.3038)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.6495) feature loss: tensor(0.3079)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.5786) feature loss: tensor(0.2964)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.6806) feature loss: tensor(0.3066)
Global Model Acc on global data: 0.4401 length of data: 10000
-------------Round number:  40  -------------
selected users: [79, 75, 63, 15, 38, 11, 40, 45, 39, 62]
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([27, 64, 8, 8]) torch.Size([27])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
all data: 247
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.6136) feature loss: tensor(0.3206)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.6545) feature loss: tensor(0.3351)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.5768) feature loss: tensor(0.3154)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.6363) feature loss: tensor(0.3233)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.5673) feature loss: tensor(0.3223)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.6233) feature loss: tensor(0.3159)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.6009) feature loss: tensor(0.3240)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.6487) feature loss: tensor(0.3272)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.7237) feature loss: tensor(0.3264)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.7073) feature loss: tensor(0.3272)
Global Model Acc on global data: 0.4704 length of data: 10000
save a model
-------------Round number:  41  -------------
selected users: [42, 94, 37, 6, 79, 32, 24, 0, 33, 93]
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
all data: 245
Local adapation with distilling: 0.000262
training loss: tensor(0.7448) feature loss: tensor(0.3129)
Local adapation with distilling: 0.000262
training loss: tensor(0.7619) feature loss: tensor(0.2962)
Local adapation with distilling: 0.000262
training loss: tensor(0.6622) feature loss: tensor(0.3005)
Local adapation with distilling: 0.000262
training loss: tensor(0.7086) feature loss: tensor(0.3036)
Local adapation with distilling: 0.000262
training loss: tensor(0.6004) feature loss: tensor(0.2990)
Local adapation with distilling: 0.000262
training loss: tensor(0.7895) feature loss: tensor(0.3066)
Local adapation with distilling: 0.000262
training loss: tensor(0.6797) feature loss: tensor(0.3024)
Local adapation with distilling: 0.000262
training loss: tensor(0.6025) feature loss: tensor(0.3026)
Local adapation with distilling: 0.000262
training loss: tensor(0.5899) feature loss: tensor(0.3140)
Local adapation with distilling: 0.000262
training loss: tensor(0.7121) feature loss: tensor(0.3009)
Global Model Acc on global data: 0.4469 length of data: 10000
-------------Round number:  42  -------------
selected users: [83, 53, 70, 45, 44, 39, 22, 80, 10, 0]
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([28, 64, 8, 8]) torch.Size([28])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
all data: 246
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.6580) feature loss: tensor(0.2864)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.5393) feature loss: tensor(0.2794)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.5718) feature loss: tensor(0.2868)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.6134) feature loss: tensor(0.2739)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.6590) feature loss: tensor(0.2781)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.6509) feature loss: tensor(0.2771)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.8844) feature loss: tensor(0.2790)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.6077) feature loss: tensor(0.2825)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.6016) feature loss: tensor(0.2798)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.5346) feature loss: tensor(0.2801)
Global Model Acc on global data: 0.4221 length of data: 10000
-------------Round number:  43  -------------
selected users: [20, 2, 15, 22, 57, 91, 69, 55, 11, 79]
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
all data: 246
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.6094) feature loss: tensor(0.2847)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.5554) feature loss: tensor(0.2742)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.5993) feature loss: tensor(0.2677)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.7613) feature loss: tensor(0.2555)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.6166) feature loss: tensor(0.2658)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.5854) feature loss: tensor(0.2818)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.5409) feature loss: tensor(0.2625)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.5945) feature loss: tensor(0.2727)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.5783) feature loss: tensor(0.2744)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.5148) feature loss: tensor(0.2656)
Global Model Acc on global data: 0.4417 length of data: 10000
-------------Round number:  44  -------------
selected users: [42, 54, 27, 93, 39, 65, 7, 26, 24, 60]
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
all data: 245
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.6592) feature loss: tensor(0.2638)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.7521) feature loss: tensor(0.2688)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.6901) feature loss: tensor(0.2660)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.6749) feature loss: tensor(0.2692)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.5876) feature loss: tensor(0.2613)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.5865) feature loss: tensor(0.2641)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.6795) feature loss: tensor(0.2606)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.5508) feature loss: tensor(0.2652)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.5748) feature loss: tensor(0.2584)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.6356) feature loss: tensor(0.2726)
Global Model Acc on global data: 0.432 length of data: 10000
-------------Round number:  45  -------------
selected users: [0, 1, 62, 76, 37, 99, 78, 38, 2, 84]
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([27, 64, 8, 8]) torch.Size([27])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
all data: 248
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.5708) feature loss: tensor(0.2883)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.6917) feature loss: tensor(0.2861)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.7209) feature loss: tensor(0.2877)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.7617) feature loss: tensor(0.2814)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.6372) feature loss: tensor(0.2823)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.6476) feature loss: tensor(0.2790)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.7292) feature loss: tensor(0.2977)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.5815) feature loss: tensor(0.2886)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.6298) feature loss: tensor(0.2895)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.6821) feature loss: tensor(0.2905)
Global Model Acc on global data: 0.4487 length of data: 10000
-------------Round number:  46  -------------
selected users: [71, 33, 37, 10, 44, 34, 24, 98, 73, 95]
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
all data: 242
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.5198) feature loss: tensor(0.2570)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.5308) feature loss: tensor(0.2576)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.5185) feature loss: tensor(0.2509)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.5620) feature loss: tensor(0.2622)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.5811) feature loss: tensor(0.2580)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.6120) feature loss: tensor(0.2634)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.5261) feature loss: tensor(0.2558)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.5616) feature loss: tensor(0.2597)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.6392) feature loss: tensor(0.2600)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.6056) feature loss: tensor(0.2609)
Global Model Acc on global data: 0.4447 length of data: 10000
-------------Round number:  47  -------------
selected users: [17, 90, 94, 86, 63, 5, 38, 14, 40, 47]
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([27, 64, 8, 8]) torch.Size([27])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
all data: 247
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.6472) feature loss: tensor(0.2744)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.7392) feature loss: tensor(0.2758)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.7018) feature loss: tensor(0.2636)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.6305) feature loss: tensor(0.2729)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.6205) feature loss: tensor(0.2775)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.7873) feature loss: tensor(0.2607)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.5454) feature loss: tensor(0.2711)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.5846) feature loss: tensor(0.2667)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.5844) feature loss: tensor(0.2661)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.6364) feature loss: tensor(0.2677)
Global Model Acc on global data: 0.4491 length of data: 10000
-------------Round number:  48  -------------
selected users: [93, 5, 71, 9, 11, 79, 69, 8, 59, 63]
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
all data: 249
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.6541) feature loss: tensor(0.2541)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.7010) feature loss: tensor(0.2532)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.5507) feature loss: tensor(0.2545)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.7839) feature loss: tensor(0.2576)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.6340) feature loss: tensor(0.2544)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.6157) feature loss: tensor(0.2570)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.6111) feature loss: tensor(0.2599)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.6551) feature loss: tensor(0.2609)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.7146) feature loss: tensor(0.2644)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.5722) feature loss: tensor(0.2539)
Global Model Acc on global data: 0.4608 length of data: 10000
-------------Round number:  49  -------------
selected users: [76, 25, 28, 75, 81, 47, 41, 22, 29, 1]
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([27, 64, 8, 8]) torch.Size([27])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
all data: 249
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.7829) feature loss: tensor(0.2447)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.7433) feature loss: tensor(0.2496)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.7262) feature loss: tensor(0.2522)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.7529) feature loss: tensor(0.2668)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.8286) feature loss: tensor(0.2566)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.6854) feature loss: tensor(0.2592)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.6930) feature loss: tensor(0.2525)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.9264) feature loss: tensor(0.2498)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.6603) feature loss: tensor(0.2495)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.6484) feature loss: tensor(0.2541)
Global Model Acc on global data: 0.4622 length of data: 10000
-------------Round number:  50  -------------
selected users: [80, 79, 25, 15, 39, 40, 53, 17, 57, 50]
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([28, 64, 8, 8]) torch.Size([28])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
all data: 249
Local adapation with distilling: 0.0001
training loss: tensor(0.6646) feature loss: tensor(0.2358)
Local adapation with distilling: 0.0001
training loss: tensor(0.5358) feature loss: tensor(0.2281)
Local adapation with distilling: 0.0001
training loss: tensor(0.5906) feature loss: tensor(0.2282)
Local adapation with distilling: 0.0001
training loss: tensor(0.5088) feature loss: tensor(0.2298)
Local adapation with distilling: 0.0001
training loss: tensor(0.5467) feature loss: tensor(0.2318)
Local adapation with distilling: 0.0001
training loss: tensor(0.6286) feature loss: tensor(0.2321)
Local adapation with distilling: 0.0001
training loss: tensor(0.5700) feature loss: tensor(0.2361)
Local adapation with distilling: 0.0001
training loss: tensor(0.5737) feature loss: tensor(0.2244)
Local adapation with distilling: 0.0001
training loss: tensor(0.6226) feature loss: tensor(0.2175)
Local adapation with distilling: 0.0001
training loss: tensor(0.6884) feature loss: tensor(0.2395)
Global Model Acc on global data: 0.4488 length of data: 10000
-------------Round number:  51  -------------
selected users: [71, 43, 11, 83, 78, 19, 80, 4, 79, 75]
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
all data: 247
Local adapation with distilling: 0.0001
training loss: tensor(0.5221) feature loss: tensor(0.2388)
Local adapation with distilling: 0.0001
training loss: tensor(0.6296) feature loss: tensor(0.2439)
Local adapation with distilling: 0.0001
training loss: tensor(0.5777) feature loss: tensor(0.2361)
Local adapation with distilling: 0.0001
training loss: tensor(0.7883) feature loss: tensor(0.2490)
Local adapation with distilling: 0.0001
training loss: tensor(0.7028) feature loss: tensor(0.2459)
Local adapation with distilling: 0.0001
training loss: tensor(0.6829) feature loss: tensor(0.2423)
Local adapation with distilling: 0.0001
training loss: tensor(0.6052) feature loss: tensor(0.2457)
Local adapation with distilling: 0.0001
training loss: tensor(0.6718) feature loss: tensor(0.2370)
Local adapation with distilling: 0.0001
training loss: tensor(0.5176) feature loss: tensor(0.2405)
Local adapation with distilling: 0.0001
training loss: tensor(0.6178) feature loss: tensor(0.2356)
Global Model Acc on global data: 0.4494 length of data: 10000
-------------Round number:  52  -------------
selected users: [82, 8, 44, 19, 2, 73, 37, 89, 67, 18]
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([27, 64, 8, 8]) torch.Size([27])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
all data: 244
Local adapation with distilling: 0.0001
training loss: tensor(0.6791) feature loss: tensor(0.2240)
Local adapation with distilling: 0.0001
training loss: tensor(0.5812) feature loss: tensor(0.2271)
Local adapation with distilling: 0.0001
training loss: tensor(0.6061) feature loss: tensor(0.2194)
Local adapation with distilling: 0.0001
training loss: tensor(0.5794) feature loss: tensor(0.2116)
Local adapation with distilling: 0.0001
training loss: tensor(0.5466) feature loss: tensor(0.2247)
Local adapation with distilling: 0.0001
training loss: tensor(0.5695) feature loss: tensor(0.2203)
Local adapation with distilling: 0.0001
training loss: tensor(0.5222) feature loss: tensor(0.2162)
Local adapation with distilling: 0.0001
training loss: tensor(0.5480) feature loss: tensor(0.2202)
Local adapation with distilling: 0.0001
training loss: tensor(0.6153) feature loss: tensor(0.2169)
Local adapation with distilling: 0.0001
training loss: tensor(0.6960) feature loss: tensor(0.2264)
Global Model Acc on global data: 0.4567 length of data: 10000
-------------Round number:  53  -------------
selected users: [19, 78, 64, 3, 71, 32, 68, 42, 55, 97]
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
all data: 245
Local adapation with distilling: 0.0001
training loss: tensor(0.7231) feature loss: tensor(0.2808)
Local adapation with distilling: 0.0001
training loss: tensor(0.7534) feature loss: tensor(0.2900)
Local adapation with distilling: 0.0001
training loss: tensor(0.9638) feature loss: tensor(0.2813)
Local adapation with distilling: 0.0001
training loss: tensor(0.9297) feature loss: tensor(0.2852)
Local adapation with distilling: 0.0001
training loss: tensor(0.6367) feature loss: tensor(0.2854)
Local adapation with distilling: 0.0001
training loss: tensor(0.9382) feature loss: tensor(0.2846)
Local adapation with distilling: 0.0001
training loss: tensor(0.7670) feature loss: tensor(0.2927)
Local adapation with distilling: 0.0001
training loss: tensor(0.7710) feature loss: tensor(0.2800)
Local adapation with distilling: 0.0001
training loss: tensor(0.7778) feature loss: tensor(0.2951)
Local adapation with distilling: 0.0001
training loss: tensor(0.8208) feature loss: tensor(0.2953)
Global Model Acc on global data: 0.4349 length of data: 10000
-------------Round number:  54  -------------
selected users: [36, 70, 48, 94, 81, 46, 38, 29, 34, 22]
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([27, 64, 8, 8]) torch.Size([27])
random features: torch.Size([27, 64, 8, 8]) torch.Size([27])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
all data: 249
Local adapation with distilling: 0.0001
training loss: tensor(0.6844) feature loss: tensor(0.2722)
Local adapation with distilling: 0.0001
training loss: tensor(0.6330) feature loss: tensor(0.2750)
Local adapation with distilling: 0.0001
training loss: tensor(0.8190) feature loss: tensor(0.2691)
Local adapation with distilling: 0.0001
training loss: tensor(0.7081) feature loss: tensor(0.2664)
Local adapation with distilling: 0.0001
training loss: tensor(0.9762) feature loss: tensor(0.2758)
Local adapation with distilling: 0.0001
training loss: tensor(0.7182) feature loss: tensor(0.2748)
Local adapation with distilling: 0.0001
training loss: tensor(0.5679) feature loss: tensor(0.2729)
Local adapation with distilling: 0.0001
training loss: tensor(0.6612) feature loss: tensor(0.2699)
Local adapation with distilling: 0.0001
training loss: tensor(0.6969) feature loss: tensor(0.2598)
Local adapation with distilling: 0.0001
training loss: tensor(0.9518) feature loss: tensor(0.2723)
Global Model Acc on global data: 0.4588 length of data: 10000
-------------Round number:  55  -------------
selected users: [28, 92, 98, 95, 84, 34, 38, 76, 17, 78]
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([27, 64, 8, 8]) torch.Size([27])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
all data: 249
Local adapation with distilling: 0.0001
training loss: tensor(0.9794) feature loss: tensor(0.2485)
Local adapation with distilling: 0.0001
training loss: tensor(0.8345) feature loss: tensor(0.2568)
Local adapation with distilling: 0.0001
training loss: tensor(0.5772) feature loss: tensor(0.2486)
Local adapation with distilling: 0.0001
training loss: tensor(0.6195) feature loss: tensor(0.2426)
Local adapation with distilling: 0.0001
training loss: tensor(0.6558) feature loss: tensor(0.2496)
Local adapation with distilling: 0.0001
training loss: tensor(0.5761) feature loss: tensor(0.2448)
Local adapation with distilling: 0.0001
training loss: tensor(0.4837) feature loss: tensor(0.2425)
Local adapation with distilling: 0.0001
training loss: tensor(0.6390) feature loss: tensor(0.2377)
Local adapation with distilling: 0.0001
training loss: tensor(0.5481) feature loss: tensor(0.2351)
Local adapation with distilling: 0.0001
training loss: tensor(0.5899) feature loss: tensor(0.2490)
Global Model Acc on global data: 0.4643 length of data: 10000
-------------Round number:  56  -------------
selected users: [92, 79, 23, 68, 52, 38, 73, 9, 59, 27]
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([27, 64, 8, 8]) torch.Size([27])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
all data: 248
Local adapation with distilling: 0.0001
training loss: tensor(0.7468) feature loss: tensor(0.2420)
Local adapation with distilling: 0.0001
training loss: tensor(0.5591) feature loss: tensor(0.2396)
Local adapation with distilling: 0.0001
training loss: tensor(0.8849) feature loss: tensor(0.2538)
Local adapation with distilling: 0.0001
training loss: tensor(0.6141) feature loss: tensor(0.2310)
Local adapation with distilling: 0.0001
training loss: tensor(0.9072) feature loss: tensor(0.2518)
Local adapation with distilling: 0.0001
training loss: tensor(0.4653) feature loss: tensor(0.2392)
Local adapation with distilling: 0.0001
training loss: tensor(0.5952) feature loss: tensor(0.2402)
Local adapation with distilling: 0.0001
training loss: tensor(0.6818) feature loss: tensor(0.2447)
Local adapation with distilling: 0.0001
training loss: tensor(0.7384) feature loss: tensor(0.2364)
Local adapation with distilling: 0.0001
training loss: tensor(0.6589) feature loss: tensor(0.2286)
Global Model Acc on global data: 0.4567 length of data: 10000
-------------Round number:  57  -------------
selected users: [52, 17, 41, 3, 8, 98, 59, 20, 67, 7]
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
all data: 242
Local adapation with distilling: 0.0001
training loss: tensor(1.0380) feature loss: tensor(0.2394)
Local adapation with distilling: 0.0001
training loss: tensor(0.5227) feature loss: tensor(0.2352)
Local adapation with distilling: 0.0001
training loss: tensor(0.5990) feature loss: tensor(0.2422)
Local adapation with distilling: 0.0001
training loss: tensor(0.6911) feature loss: tensor(0.2298)
Local adapation with distilling: 0.0001
training loss: tensor(0.5671) feature loss: tensor(0.2363)
Local adapation with distilling: 0.0001
training loss: tensor(0.5411) feature loss: tensor(0.2394)
Local adapation with distilling: 0.0001
training loss: tensor(0.6448) feature loss: tensor(0.2351)
Local adapation with distilling: 0.0001
training loss: tensor(0.6497) feature loss: tensor(0.2333)
Local adapation with distilling: 0.0001
training loss: tensor(0.6044) feature loss: tensor(0.2369)
Local adapation with distilling: 0.0001
training loss: tensor(0.7148) feature loss: tensor(0.2375)
Global Model Acc on global data: 0.4504 length of data: 10000
-------------Round number:  58  -------------
selected users: [43, 58, 8, 31, 70, 45, 69, 95, 50, 4]
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
all data: 243
Local adapation with distilling: 0.0001
training loss: tensor(0.6691) feature loss: tensor(0.2558)
Local adapation with distilling: 0.0001
training loss: tensor(0.6097) feature loss: tensor(0.2467)
Local adapation with distilling: 0.0001
training loss: tensor(0.5175) feature loss: tensor(0.2439)
Local adapation with distilling: 0.0001
training loss: tensor(0.6684) feature loss: tensor(0.2409)
Local adapation with distilling: 0.0001
training loss: tensor(0.6001) feature loss: tensor(0.2495)
Local adapation with distilling: 0.0001
training loss: tensor(0.6242) feature loss: tensor(0.2400)
Local adapation with distilling: 0.0001
training loss: tensor(0.6095) feature loss: tensor(0.2527)
Local adapation with distilling: 0.0001
training loss: tensor(0.5713) feature loss: tensor(0.2375)
Local adapation with distilling: 0.0001
training loss: tensor(0.6599) feature loss: tensor(0.2522)
Local adapation with distilling: 0.0001
training loss: tensor(0.6989) feature loss: tensor(0.2457)
Global Model Acc on global data: 0.4733 length of data: 10000
save a model
-------------Round number:  59  -------------
selected users: [38, 46, 24, 87, 30, 85, 16, 96, 18, 99]
random features: torch.Size([27, 64, 8, 8]) torch.Size([27])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
all data: 245
Local adapation with distilling: 0.0001
training loss: tensor(0.5501) feature loss: tensor(0.2592)
Local adapation with distilling: 0.0001
training loss: tensor(0.6861) feature loss: tensor(0.2512)
Local adapation with distilling: 0.0001
training loss: tensor(0.6728) feature loss: tensor(0.2525)
Local adapation with distilling: 0.0001
training loss: tensor(0.7443) feature loss: tensor(0.2584)
Local adapation with distilling: 0.0001
training loss: tensor(0.8007) feature loss: tensor(0.2596)
Local adapation with distilling: 0.0001
training loss: tensor(0.6702) feature loss: tensor(0.2602)
Local adapation with distilling: 0.0001
training loss: tensor(0.7918) feature loss: tensor(0.2550)
Local adapation with distilling: 0.0001
training loss: tensor(1.0259) feature loss: tensor(0.2663)
Local adapation with distilling: 0.0001
training loss: tensor(0.7162) feature loss: tensor(0.2531)
Local adapation with distilling: 0.0001
training loss: tensor(0.6975) feature loss: tensor(0.2572)
Global Model Acc on global data: 0.47 length of data: 10000
-------------Round number:  60  -------------
selected users: [88, 4, 79, 14, 55, 3, 19, 28, 94, 25]
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
all data: 246
Local adapation with distilling: 0.0001
training loss: tensor(0.5860) feature loss: tensor(0.2336)
Local adapation with distilling: 0.0001
training loss: tensor(0.5624) feature loss: tensor(0.2276)
Local adapation with distilling: 0.0001
training loss: tensor(0.4972) feature loss: tensor(0.2314)
Local adapation with distilling: 0.0001
training loss: tensor(0.5775) feature loss: tensor(0.2374)
Local adapation with distilling: 0.0001
training loss: tensor(0.6247) feature loss: tensor(0.2290)
Local adapation with distilling: 0.0001
training loss: tensor(0.5964) feature loss: tensor(0.2247)
Local adapation with distilling: 0.0001
training loss: tensor(0.6037) feature loss: tensor(0.2377)
Local adapation with distilling: 0.0001
training loss: tensor(0.8095) feature loss: tensor(0.2312)
Local adapation with distilling: 0.0001
training loss: tensor(0.6045) feature loss: tensor(0.2235)
Local adapation with distilling: 0.0001
training loss: tensor(0.5742) feature loss: tensor(0.2239)
Global Model Acc on global data: 0.4507 length of data: 10000
-------------Round number:  61  -------------
selected users: [83, 1, 55, 9, 31, 28, 96, 29, 86, 63]
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([27, 64, 8, 8]) torch.Size([27])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
all data: 252
Local adapation with distilling: 0.0001
training loss: tensor(0.7206) feature loss: tensor(0.2493)
Local adapation with distilling: 0.0001
training loss: tensor(0.6261) feature loss: tensor(0.2380)
Local adapation with distilling: 0.0001
training loss: tensor(0.5943) feature loss: tensor(0.2444)
Local adapation with distilling: 0.0001
training loss: tensor(0.7321) feature loss: tensor(0.2411)
Local adapation with distilling: 0.0001
training loss: tensor(0.6335) feature loss: tensor(0.2372)
Local adapation with distilling: 0.0001
training loss: tensor(0.7761) feature loss: tensor(0.2386)
Local adapation with distilling: 0.0001
training loss: tensor(0.7784) feature loss: tensor(0.2469)
Local adapation with distilling: 0.0001
training loss: tensor(0.5504) feature loss: tensor(0.2359)
Local adapation with distilling: 0.0001
training loss: tensor(0.5671) feature loss: tensor(0.2330)
Local adapation with distilling: 0.0001
training loss: tensor(0.5478) feature loss: tensor(0.2437)
Global Model Acc on global data: 0.4447 length of data: 10000
-------------Round number:  62  -------------
selected users: [76, 48, 62, 80, 29, 99, 60, 89, 39, 69]
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([27, 64, 8, 8]) torch.Size([27])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([27, 64, 8, 8]) torch.Size([27])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
all data: 246
Local adapation with distilling: 0.0001
training loss: tensor(0.6065) feature loss: tensor(0.2288)
Local adapation with distilling: 0.0001
training loss: tensor(0.6366) feature loss: tensor(0.2330)
Local adapation with distilling: 0.0001
training loss: tensor(0.6933) feature loss: tensor(0.2431)
Local adapation with distilling: 0.0001
training loss: tensor(0.5651) feature loss: tensor(0.2344)
Local adapation with distilling: 0.0001
training loss: tensor(0.4796) feature loss: tensor(0.2198)
Local adapation with distilling: 0.0001
training loss: tensor(0.5681) feature loss: tensor(0.2361)
Local adapation with distilling: 0.0001
training loss: tensor(0.6042) feature loss: tensor(0.2331)
Local adapation with distilling: 0.0001
training loss: tensor(0.4976) feature loss: tensor(0.2226)
Local adapation with distilling: 0.0001
training loss: tensor(0.5647) feature loss: tensor(0.2203)
Local adapation with distilling: 0.0001
training loss: tensor(0.4935) feature loss: tensor(0.2268)
Global Model Acc on global data: 0.4288 length of data: 10000
-------------Round number:  63  -------------
selected users: [64, 59, 63, 2, 80, 20, 18, 48, 72, 51]
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([28, 64, 8, 8]) torch.Size([28])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
all data: 244
Local adapation with distilling: 0.0001
training loss: tensor(0.8398) feature loss: tensor(0.2623)
Local adapation with distilling: 0.0001
training loss: tensor(0.6017) feature loss: tensor(0.2544)
Local adapation with distilling: 0.0001
training loss: tensor(0.5286) feature loss: tensor(0.2526)
Local adapation with distilling: 0.0001
training loss: tensor(0.5591) feature loss: tensor(0.2564)
Local adapation with distilling: 0.0001
training loss: tensor(0.5789) feature loss: tensor(0.2547)
Local adapation with distilling: 0.0001
training loss: tensor(0.6190) feature loss: tensor(0.2576)
Local adapation with distilling: 0.0001
training loss: tensor(0.6158) feature loss: tensor(0.2582)
Local adapation with distilling: 0.0001
training loss: tensor(0.5915) feature loss: tensor(0.2578)
Local adapation with distilling: 0.0001
training loss: tensor(0.6784) feature loss: tensor(0.2667)
Local adapation with distilling: 0.0001
training loss: tensor(0.6723) feature loss: tensor(0.2576)
Global Model Acc on global data: 0.4419 length of data: 10000
-------------Round number:  64  -------------
selected users: [17, 22, 60, 92, 23, 19, 71, 94, 40, 49]
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
all data: 244
Local adapation with distilling: 0.0001
training loss: tensor(0.6184) feature loss: tensor(0.2525)
Local adapation with distilling: 0.0001
training loss: tensor(0.8773) feature loss: tensor(0.2501)
Local adapation with distilling: 0.0001
training loss: tensor(0.5782) feature loss: tensor(0.2525)
Local adapation with distilling: 0.0001
training loss: tensor(0.7196) feature loss: tensor(0.2559)
Local adapation with distilling: 0.0001
training loss: tensor(0.7687) feature loss: tensor(0.2543)
Local adapation with distilling: 0.0001
training loss: tensor(0.6290) feature loss: tensor(0.2559)
Local adapation with distilling: 0.0001
training loss: tensor(0.5505) feature loss: tensor(0.2548)
Local adapation with distilling: 0.0001
training loss: tensor(0.7123) feature loss: tensor(0.2543)
Local adapation with distilling: 0.0001
training loss: tensor(0.6091) feature loss: tensor(0.2545)
Local adapation with distilling: 0.0001
training loss: tensor(0.5952) feature loss: tensor(0.2496)
Global Model Acc on global data: 0.4463 length of data: 10000
-------------Round number:  65  -------------
selected users: [37, 81, 39, 61, 76, 90, 27, 86, 28, 69]
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
all data: 248
Local adapation with distilling: 0.0001
training loss: tensor(0.5194) feature loss: tensor(0.2346)
Local adapation with distilling: 0.0001
training loss: tensor(0.7408) feature loss: tensor(0.2398)
Local adapation with distilling: 0.0001
training loss: tensor(0.5304) feature loss: tensor(0.2295)
Local adapation with distilling: 0.0001
training loss: tensor(0.6073) feature loss: tensor(0.2316)
Local adapation with distilling: 0.0001
training loss: tensor(0.5693) feature loss: tensor(0.2357)
Local adapation with distilling: 0.0001
training loss: tensor(0.6632) feature loss: tensor(0.2403)
Local adapation with distilling: 0.0001
training loss: tensor(0.6036) feature loss: tensor(0.2321)
Local adapation with distilling: 0.0001
training loss: tensor(0.4938) feature loss: tensor(0.2325)
Local adapation with distilling: 0.0001
training loss: tensor(0.8152) feature loss: tensor(0.2330)
Local adapation with distilling: 0.0001
training loss: tensor(0.4693) feature loss: tensor(0.2284)
Global Model Acc on global data: 0.4618 length of data: 10000
-------------Round number:  66  -------------
selected users: [8, 93, 4, 5, 52, 41, 0, 73, 88, 68]
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
all data: 246
Local adapation with distilling: 0.0001
training loss: tensor(0.5657) feature loss: tensor(0.2498)
Local adapation with distilling: 0.0001
training loss: tensor(0.6783) feature loss: tensor(0.2533)
Local adapation with distilling: 0.0001
training loss: tensor(0.5760) feature loss: tensor(0.2436)
Local adapation with distilling: 0.0001
training loss: tensor(0.7057) feature loss: tensor(0.2503)
Local adapation with distilling: 0.0001
training loss: tensor(0.7571) feature loss: tensor(0.2513)
Local adapation with distilling: 0.0001
training loss: tensor(0.6035) feature loss: tensor(0.2461)
Local adapation with distilling: 0.0001
training loss: tensor(0.5706) feature loss: tensor(0.2530)
Local adapation with distilling: 0.0001
training loss: tensor(0.6268) feature loss: tensor(0.2562)
Local adapation with distilling: 0.0001
training loss: tensor(0.5875) feature loss: tensor(0.2510)
Local adapation with distilling: 0.0001
training loss: tensor(0.6285) feature loss: tensor(0.2525)
Global Model Acc on global data: 0.446 length of data: 10000
-------------Round number:  67  -------------
selected users: [17, 24, 64, 93, 97, 29, 3, 70, 82, 11]
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([27, 64, 8, 8]) torch.Size([27])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
all data: 249
Local adapation with distilling: 0.0001
training loss: tensor(0.5291) feature loss: tensor(0.2527)
Local adapation with distilling: 0.0001
training loss: tensor(0.5684) feature loss: tensor(0.2511)
Local adapation with distilling: 0.0001
training loss: tensor(0.7248) feature loss: tensor(0.2507)
Local adapation with distilling: 0.0001
training loss: tensor(0.6132) feature loss: tensor(0.2589)
Local adapation with distilling: 0.0001
training loss: tensor(0.6517) feature loss: tensor(0.2579)
Local adapation with distilling: 0.0001
training loss: tensor(0.5323) feature loss: tensor(0.2565)
Local adapation with distilling: 0.0001
training loss: tensor(0.6318) feature loss: tensor(0.2648)
Local adapation with distilling: 0.0001
training loss: tensor(0.5834) feature loss: tensor(0.2688)
Local adapation with distilling: 0.0001
training loss: tensor(0.6586) feature loss: tensor(0.2658)
Local adapation with distilling: 0.0001
training loss: tensor(0.5670) feature loss: tensor(0.2551)
Global Model Acc on global data: 0.4655 length of data: 10000
-------------Round number:  68  -------------
selected users: [29, 30, 16, 5, 38, 71, 76, 94, 99, 95]
random features: torch.Size([27, 64, 8, 8]) torch.Size([27])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([27, 64, 8, 8]) torch.Size([27])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
all data: 252
Local adapation with distilling: 0.0001
training loss: tensor(0.4190) feature loss: tensor(0.2007)
Local adapation with distilling: 0.0001
training loss: tensor(0.5585) feature loss: tensor(0.2080)
Local adapation with distilling: 0.0001
training loss: tensor(0.5818) feature loss: tensor(0.2028)
Local adapation with distilling: 0.0001
training loss: tensor(0.5584) feature loss: tensor(0.2078)
Local adapation with distilling: 0.0001
training loss: tensor(0.3848) feature loss: tensor(0.1989)
Local adapation with distilling: 0.0001
training loss: tensor(0.4168) feature loss: tensor(0.1929)
Local adapation with distilling: 0.0001
training loss: tensor(0.4875) feature loss: tensor(0.1964)
Local adapation with distilling: 0.0001
training loss: tensor(0.4792) feature loss: tensor(0.1930)
Local adapation with distilling: 0.0001
training loss: tensor(0.5055) feature loss: tensor(0.2016)
Local adapation with distilling: 0.0001
training loss: tensor(0.4717) feature loss: tensor(0.2016)
Global Model Acc on global data: 0.4631 length of data: 10000
-------------Round number:  69  -------------
selected users: [72, 31, 13, 83, 33, 8, 26, 89, 64, 97]
random features: torch.Size([28, 64, 8, 8]) torch.Size([28])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([27, 64, 8, 8]) torch.Size([27])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
all data: 250
Local adapation with distilling: 0.0001
training loss: tensor(0.6248) feature loss: tensor(0.2732)
Local adapation with distilling: 0.0001
training loss: tensor(0.7297) feature loss: tensor(0.2555)
Local adapation with distilling: 0.0001
training loss: tensor(0.6964) feature loss: tensor(0.2682)
Local adapation with distilling: 0.0001
training loss: tensor(0.6857) feature loss: tensor(0.2720)
Local adapation with distilling: 0.0001
training loss: tensor(0.6220) feature loss: tensor(0.2639)
Local adapation with distilling: 0.0001
training loss: tensor(0.5822) feature loss: tensor(0.2660)
Local adapation with distilling: 0.0001
training loss: tensor(0.5590) feature loss: tensor(0.2608)
Local adapation with distilling: 0.0001
training loss: tensor(0.5688) feature loss: tensor(0.2565)
Local adapation with distilling: 0.0001
training loss: tensor(0.6939) feature loss: tensor(0.2536)
Local adapation with distilling: 0.0001
training loss: tensor(0.6726) feature loss: tensor(0.2685)
Global Model Acc on global data: 0.4503 length of data: 10000
-------------Round number:  70  -------------
selected users: [81, 43, 88, 32, 50, 71, 73, 55, 42, 2]
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
all data: 243
Local adapation with distilling: 0.0001
training loss: tensor(0.8495) feature loss: tensor(0.2794)
Local adapation with distilling: 0.0001
training loss: tensor(0.6332) feature loss: tensor(0.2817)
Local adapation with distilling: 0.0001
training loss: tensor(0.5739) feature loss: tensor(0.2714)
Local adapation with distilling: 0.0001
training loss: tensor(0.7975) feature loss: tensor(0.2706)
Local adapation with distilling: 0.0001
training loss: tensor(0.6285) feature loss: tensor(0.2801)
Local adapation with distilling: 0.0001
training loss: tensor(0.5245) feature loss: tensor(0.2729)
Local adapation with distilling: 0.0001
training loss: tensor(0.5749) feature loss: tensor(0.2721)
Local adapation with distilling: 0.0001
training loss: tensor(0.6473) feature loss: tensor(0.2865)
Local adapation with distilling: 0.0001
training loss: tensor(0.7015) feature loss: tensor(0.2751)
Local adapation with distilling: 0.0001
training loss: tensor(0.5803) feature loss: tensor(0.2756)
Global Model Acc on global data: 0.475 length of data: 10000
save a model
-------------Round number:  71  -------------
selected users: [41, 84, 98, 42, 75, 25, 60, 19, 52, 29]
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([27, 64, 8, 8]) torch.Size([27])
all data: 244
Local adapation with distilling: 0.0001
training loss: tensor(0.5153) feature loss: tensor(0.2135)
Local adapation with distilling: 0.0001
training loss: tensor(0.5799) feature loss: tensor(0.2236)
Local adapation with distilling: 0.0001
training loss: tensor(0.4907) feature loss: tensor(0.2186)
Local adapation with distilling: 0.0001
training loss: tensor(0.5366) feature loss: tensor(0.2186)
Local adapation with distilling: 0.0001
training loss: tensor(0.5817) feature loss: tensor(0.2258)
Local adapation with distilling: 0.0001
training loss: tensor(0.5488) feature loss: tensor(0.2194)
Local adapation with distilling: 0.0001
training loss: tensor(0.5072) feature loss: tensor(0.2168)
Local adapation with distilling: 0.0001
training loss: tensor(0.5290) feature loss: tensor(0.2186)
Local adapation with distilling: 0.0001
training loss: tensor(0.7514) feature loss: tensor(0.2269)
Local adapation with distilling: 0.0001
training loss: tensor(0.4625) feature loss: tensor(0.2175)
Global Model Acc on global data: 0.4587 length of data: 10000
-------------Round number:  72  -------------
selected users: [76, 82, 43, 16, 84, 95, 78, 91, 30, 22]
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
all data: 248
Local adapation with distilling: 0.0001
training loss: tensor(0.5219) feature loss: tensor(0.2225)
Local adapation with distilling: 0.0001
training loss: tensor(0.5280) feature loss: tensor(0.2272)
Local adapation with distilling: 0.0001
training loss: tensor(0.4988) feature loss: tensor(0.2268)
Local adapation with distilling: 0.0001
training loss: tensor(0.5673) feature loss: tensor(0.2222)
Local adapation with distilling: 0.0001
training loss: tensor(0.5261) feature loss: tensor(0.2305)
Local adapation with distilling: 0.0001
training loss: tensor(0.4924) feature loss: tensor(0.2237)
Local adapation with distilling: 0.0001
training loss: tensor(0.6254) feature loss: tensor(0.2346)
Local adapation with distilling: 0.0001
training loss: tensor(0.5544) feature loss: tensor(0.2264)
Local adapation with distilling: 0.0001
training loss: tensor(0.5668) feature loss: tensor(0.2332)
Local adapation with distilling: 0.0001
training loss: tensor(0.8131) feature loss: tensor(0.2299)
Global Model Acc on global data: 0.4499 length of data: 10000
-------------Round number:  73  -------------
selected users: [49, 14, 34, 70, 90, 35, 68, 76, 80, 9]
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
all data: 244
Local adapation with distilling: 0.0001
training loss: tensor(0.5408) feature loss: tensor(0.2231)
Local adapation with distilling: 0.0001
training loss: tensor(0.4960) feature loss: tensor(0.2220)
Local adapation with distilling: 0.0001
training loss: tensor(0.5374) feature loss: tensor(0.2197)
Local adapation with distilling: 0.0001
training loss: tensor(0.5124) feature loss: tensor(0.2265)
Local adapation with distilling: 0.0001
training loss: tensor(0.5650) feature loss: tensor(0.2216)
Local adapation with distilling: 0.0001
training loss: tensor(0.6705) feature loss: tensor(0.2198)
Local adapation with distilling: 0.0001
training loss: tensor(0.5463) feature loss: tensor(0.2241)
Local adapation with distilling: 0.0001
training loss: tensor(0.4731) feature loss: tensor(0.2166)
Local adapation with distilling: 0.0001
training loss: tensor(0.4873) feature loss: tensor(0.2196)
Local adapation with distilling: 0.0001
training loss: tensor(0.8557) feature loss: tensor(0.2241)
Global Model Acc on global data: 0.4554 length of data: 10000
-------------Round number:  74  -------------
selected users: [85, 64, 63, 80, 6, 12, 43, 17, 7, 8]
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
all data: 245
Local adapation with distilling: 0.0001
training loss: tensor(0.5326) feature loss: tensor(0.2351)
Local adapation with distilling: 0.0001
training loss: tensor(0.6090) feature loss: tensor(0.2324)
Local adapation with distilling: 0.0001
training loss: tensor(0.5105) feature loss: tensor(0.2342)
Local adapation with distilling: 0.0001
training loss: tensor(0.4787) feature loss: tensor(0.2292)
Local adapation with distilling: 0.0001
training loss: tensor(0.7192) feature loss: tensor(0.2365)
Local adapation with distilling: 0.0001
training loss: tensor(0.6554) feature loss: tensor(0.2324)
Local adapation with distilling: 0.0001
training loss: tensor(0.5118) feature loss: tensor(0.2316)
Local adapation with distilling: 0.0001
training loss: tensor(0.5031) feature loss: tensor(0.2329)
Local adapation with distilling: 0.0001
training loss: tensor(0.6472) feature loss: tensor(0.2336)
Local adapation with distilling: 0.0001
training loss: tensor(0.5032) feature loss: tensor(0.2372)
Global Model Acc on global data: 0.4713 length of data: 10000
-------------Round number:  75  -------------
selected users: [36, 7, 6, 45, 56, 54, 22, 37, 53, 68]
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([27, 64, 8, 8]) torch.Size([27])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([28, 64, 8, 8]) torch.Size([28])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
all data: 255
Local adapation with distilling: 0.0001
training loss: tensor(0.5417) feature loss: tensor(0.2283)
Local adapation with distilling: 0.0001
training loss: tensor(0.5642) feature loss: tensor(0.2223)
Local adapation with distilling: 0.0001
training loss: tensor(0.5797) feature loss: tensor(0.2259)
Local adapation with distilling: 0.0001
training loss: tensor(0.5792) feature loss: tensor(0.2232)
Local adapation with distilling: 0.0001
training loss: tensor(0.5622) feature loss: tensor(0.2271)
Local adapation with distilling: 0.0001
training loss: tensor(0.7041) feature loss: tensor(0.2213)
Local adapation with distilling: 0.0001
training loss: tensor(0.8602) feature loss: tensor(0.2289)
Local adapation with distilling: 0.0001
training loss: tensor(0.4786) feature loss: tensor(0.2222)
Local adapation with distilling: 0.0001
training loss: tensor(0.5269) feature loss: tensor(0.2265)
Local adapation with distilling: 0.0001
training loss: tensor(0.5937) feature loss: tensor(0.2218)
Global Model Acc on global data: 0.4631 length of data: 10000
-------------Round number:  76  -------------
selected users: [38, 37, 32, 50, 10, 94, 19, 44, 86, 23]
random features: torch.Size([27, 64, 8, 8]) torch.Size([27])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
all data: 246
Local adapation with distilling: 0.0001
training loss: tensor(0.4469) feature loss: tensor(0.2249)
Local adapation with distilling: 0.0001
training loss: tensor(0.4520) feature loss: tensor(0.2159)
Local adapation with distilling: 0.0001
training loss: tensor(0.6471) feature loss: tensor(0.2206)
Local adapation with distilling: 0.0001
training loss: tensor(0.5414) feature loss: tensor(0.2208)
Local adapation with distilling: 0.0001
training loss: tensor(0.5740) feature loss: tensor(0.2223)
Local adapation with distilling: 0.0001
training loss: tensor(0.5097) feature loss: tensor(0.2092)
Local adapation with distilling: 0.0001
training loss: tensor(0.4957) feature loss: tensor(0.2220)
Local adapation with distilling: 0.0001
training loss: tensor(0.6021) feature loss: tensor(0.2238)
Local adapation with distilling: 0.0001
training loss: tensor(0.4721) feature loss: tensor(0.2188)
Local adapation with distilling: 0.0001
training loss: tensor(0.6357) feature loss: tensor(0.2252)
Global Model Acc on global data: 0.4469 length of data: 10000
-------------Round number:  77  -------------
selected users: [5, 93, 41, 96, 16, 42, 81, 91, 50, 58]
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
all data: 248
Local adapation with distilling: 0.0001
training loss: tensor(0.6529) feature loss: tensor(0.2604)
Local adapation with distilling: 0.0001
training loss: tensor(0.6158) feature loss: tensor(0.2669)
Local adapation with distilling: 0.0001
training loss: tensor(0.5403) feature loss: tensor(0.2549)
Local adapation with distilling: 0.0001
training loss: tensor(0.7546) feature loss: tensor(0.2512)
Local adapation with distilling: 0.0001
training loss: tensor(0.5776) feature loss: tensor(0.2504)
Local adapation with distilling: 0.0001
training loss: tensor(0.5720) feature loss: tensor(0.2510)
Local adapation with distilling: 0.0001
training loss: tensor(0.6748) feature loss: tensor(0.2556)
Local adapation with distilling: 0.0001
training loss: tensor(0.5812) feature loss: tensor(0.2635)
Local adapation with distilling: 0.0001
training loss: tensor(0.5440) feature loss: tensor(0.2586)
Local adapation with distilling: 0.0001
training loss: tensor(0.5619) feature loss: tensor(0.2520)
Global Model Acc on global data: 0.4579 length of data: 10000
-------------Round number:  78  -------------
selected users: [9, 46, 7, 63, 15, 2, 74, 31, 5, 36]
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
all data: 245
Local adapation with distilling: 0.0001
training loss: tensor(0.7879) feature loss: tensor(0.2359)
Local adapation with distilling: 0.0001
training loss: tensor(0.5461) feature loss: tensor(0.2320)
Local adapation with distilling: 0.0001
training loss: tensor(0.5614) feature loss: tensor(0.2300)
Local adapation with distilling: 0.0001
training loss: tensor(0.5043) feature loss: tensor(0.2371)
Local adapation with distilling: 0.0001
training loss: tensor(0.6051) feature loss: tensor(0.2387)
Local adapation with distilling: 0.0001
training loss: tensor(0.5054) feature loss: tensor(0.2231)
Local adapation with distilling: 0.0001
training loss: tensor(0.5466) feature loss: tensor(0.2300)
Local adapation with distilling: 0.0001
training loss: tensor(0.5968) feature loss: tensor(0.2293)
Local adapation with distilling: 0.0001
training loss: tensor(0.5671) feature loss: tensor(0.2286)
Local adapation with distilling: 0.0001
training loss: tensor(0.4885) feature loss: tensor(0.2296)
Global Model Acc on global data: 0.4731 length of data: 10000
-------------Round number:  79  -------------
selected users: [68, 18, 86, 60, 56, 32, 30, 24, 45, 92]
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([27, 64, 8, 8]) torch.Size([27])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
all data: 245
Local adapation with distilling: 0.0001
training loss: tensor(0.4924) feature loss: tensor(0.2095)
Local adapation with distilling: 0.0001
training loss: tensor(0.5373) feature loss: tensor(0.2150)
Local adapation with distilling: 0.0001
training loss: tensor(0.4503) feature loss: tensor(0.2127)
Local adapation with distilling: 0.0001
training loss: tensor(0.4729) feature loss: tensor(0.2159)
Local adapation with distilling: 0.0001
training loss: tensor(0.4880) feature loss: tensor(0.2120)
Local adapation with distilling: 0.0001
training loss: tensor(0.6106) feature loss: tensor(0.2116)
Local adapation with distilling: 0.0001
training loss: tensor(0.5393) feature loss: tensor(0.2120)
Local adapation with distilling: 0.0001
training loss: tensor(0.4947) feature loss: tensor(0.2153)
Local adapation with distilling: 0.0001
training loss: tensor(0.5115) feature loss: tensor(0.2107)
Local adapation with distilling: 0.0001
training loss: tensor(0.6214) feature loss: tensor(0.2204)
Global Model Acc on global data: 0.4763 length of data: 10000
save a model
-------------Round number:  80  -------------
selected users: [37, 65, 95, 53, 66, 30, 73, 85, 45, 36]
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([28, 64, 8, 8]) torch.Size([28])
random features: torch.Size([27, 64, 8, 8]) torch.Size([27])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
all data: 253
Local adapation with distilling: 0.0001
training loss: tensor(0.5030) feature loss: tensor(0.2397)
Local adapation with distilling: 0.0001
training loss: tensor(0.5946) feature loss: tensor(0.2557)
Local adapation with distilling: 0.0001
training loss: tensor(0.5332) feature loss: tensor(0.2408)
Local adapation with distilling: 0.0001
training loss: tensor(0.5368) feature loss: tensor(0.2479)
Local adapation with distilling: 0.0001
training loss: tensor(0.6219) feature loss: tensor(0.2471)
Local adapation with distilling: 0.0001
training loss: tensor(0.5533) feature loss: tensor(0.2397)
Local adapation with distilling: 0.0001
training loss: tensor(0.5497) feature loss: tensor(0.2540)
Local adapation with distilling: 0.0001
training loss: tensor(0.5384) feature loss: tensor(0.2498)
Local adapation with distilling: 0.0001
training loss: tensor(0.5311) feature loss: tensor(0.2422)
Local adapation with distilling: 0.0001
training loss: tensor(0.4924) feature loss: tensor(0.2448)
Global Model Acc on global data: 0.4899 length of data: 10000
save a model
-------------Round number:  81  -------------
selected users: [73, 89, 41, 78, 51, 21, 30, 69, 8, 5]
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([27, 64, 8, 8]) torch.Size([27])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
all data: 245
Local adapation with distilling: 0.0001
training loss: tensor(0.4371) feature loss: tensor(0.2033)
Local adapation with distilling: 0.0001
training loss: tensor(0.4393) feature loss: tensor(0.2017)
Local adapation with distilling: 0.0001
training loss: tensor(0.4468) feature loss: tensor(0.1983)
Local adapation with distilling: 0.0001
training loss: tensor(0.5334) feature loss: tensor(0.2043)
Local adapation with distilling: 0.0001
training loss: tensor(0.5138) feature loss: tensor(0.2042)
Local adapation with distilling: 0.0001
training loss: tensor(0.5442) feature loss: tensor(0.2035)
Local adapation with distilling: 0.0001
training loss: tensor(0.4465) feature loss: tensor(0.1986)
Local adapation with distilling: 0.0001
training loss: tensor(0.4323) feature loss: tensor(0.1985)
Local adapation with distilling: 0.0001
training loss: tensor(0.4132) feature loss: tensor(0.1996)
Local adapation with distilling: 0.0001
training loss: tensor(0.4865) feature loss: tensor(0.2023)
Global Model Acc on global data: 0.4754 length of data: 10000
-------------Round number:  82  -------------
selected users: [72, 33, 58, 2, 55, 84, 54, 75, 28, 40]
random features: torch.Size([28, 64, 8, 8]) torch.Size([28])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
all data: 247
Local adapation with distilling: 0.0001
training loss: tensor(0.5375) feature loss: tensor(0.2370)
Local adapation with distilling: 0.0001
training loss: tensor(0.5114) feature loss: tensor(0.2348)
Local adapation with distilling: 0.0001
training loss: tensor(0.5009) feature loss: tensor(0.2368)
Local adapation with distilling: 0.0001
training loss: tensor(0.4769) feature loss: tensor(0.2331)
Local adapation with distilling: 0.0001
training loss: tensor(0.5467) feature loss: tensor(0.2369)
Local adapation with distilling: 0.0001
training loss: tensor(0.5782) feature loss: tensor(0.2347)
Local adapation with distilling: 0.0001
training loss: tensor(0.6895) feature loss: tensor(0.2246)
Local adapation with distilling: 0.0001
training loss: tensor(0.5605) feature loss: tensor(0.2383)
Local adapation with distilling: 0.0001
training loss: tensor(0.9003) feature loss: tensor(0.2360)
Local adapation with distilling: 0.0001
training loss: tensor(0.5182) feature loss: tensor(0.2347)
Global Model Acc on global data: 0.4472 length of data: 10000
-------------Round number:  83  -------------
selected users: [6, 65, 95, 84, 61, 12, 30, 69, 35, 1]
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
all data: 247
Local adapation with distilling: 0.0001
training loss: tensor(0.6218) feature loss: tensor(0.2395)
Local adapation with distilling: 0.0001
training loss: tensor(0.5384) feature loss: tensor(0.2506)
Local adapation with distilling: 0.0001
training loss: tensor(0.4966) feature loss: tensor(0.2430)
Local adapation with distilling: 0.0001
training loss: tensor(0.5492) feature loss: tensor(0.2461)
Local adapation with distilling: 0.0001
training loss: tensor(0.6023) feature loss: tensor(0.2421)
Local adapation with distilling: 0.0001
training loss: tensor(0.5831) feature loss: tensor(0.2425)
Local adapation with distilling: 0.0001
training loss: tensor(0.5043) feature loss: tensor(0.2327)
Local adapation with distilling: 0.0001
training loss: tensor(0.4980) feature loss: tensor(0.2422)
Local adapation with distilling: 0.0001
training loss: tensor(0.6615) feature loss: tensor(0.2445)
Local adapation with distilling: 0.0001
training loss: tensor(0.6201) feature loss: tensor(0.2446)
Global Model Acc on global data: 0.4662 length of data: 10000
-------------Round number:  84  -------------
selected users: [94, 55, 80, 1, 90, 11, 32, 8, 6, 82]
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
all data: 245
Local adapation with distilling: 0.0001
training loss: tensor(0.5852) feature loss: tensor(0.2410)
Local adapation with distilling: 0.0001
training loss: tensor(0.5218) feature loss: tensor(0.2408)
Local adapation with distilling: 0.0001
training loss: tensor(0.5234) feature loss: tensor(0.2457)
Local adapation with distilling: 0.0001
training loss: tensor(0.5652) feature loss: tensor(0.2333)
Local adapation with distilling: 0.0001
training loss: tensor(0.6133) feature loss: tensor(0.2521)
Local adapation with distilling: 0.0001
training loss: tensor(0.5405) feature loss: tensor(0.2414)
Local adapation with distilling: 0.0001
training loss: tensor(0.6285) feature loss: tensor(0.2433)
Local adapation with distilling: 0.0001
training loss: tensor(0.4769) feature loss: tensor(0.2446)
Local adapation with distilling: 0.0001
training loss: tensor(0.5830) feature loss: tensor(0.2386)
Local adapation with distilling: 0.0001
training loss: tensor(0.5616) feature loss: tensor(0.2427)
Global Model Acc on global data: 0.4499 length of data: 10000
-------------Round number:  85  -------------
selected users: [81, 25, 40, 87, 41, 23, 10, 89, 50, 54]
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([27, 64, 8, 8]) torch.Size([27])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
all data: 243
Local adapation with distilling: 0.0001
training loss: tensor(0.6192) feature loss: tensor(0.2055)
Local adapation with distilling: 0.0001
training loss: tensor(0.4699) feature loss: tensor(0.2012)
Local adapation with distilling: 0.0001
training loss: tensor(0.4213) feature loss: tensor(0.2014)
Local adapation with distilling: 0.0001
training loss: tensor(0.5072) feature loss: tensor(0.2062)
Local adapation with distilling: 0.0001
training loss: tensor(0.4246) feature loss: tensor(0.1976)
Local adapation with distilling: 0.0001
training loss: tensor(0.5388) feature loss: tensor(0.2072)
Local adapation with distilling: 0.0001
training loss: tensor(0.4469) feature loss: tensor(0.2049)
Local adapation with distilling: 0.0001
training loss: tensor(0.4278) feature loss: tensor(0.2007)
Local adapation with distilling: 0.0001
training loss: tensor(0.4435) feature loss: tensor(0.2013)
Local adapation with distilling: 0.0001
training loss: tensor(0.5500) feature loss: tensor(0.1949)
Global Model Acc on global data: 0.4521 length of data: 10000
-------------Round number:  86  -------------
selected users: [69, 74, 34, 68, 42, 0, 32, 88, 8, 3]
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
all data: 241
Local adapation with distilling: 0.0001
training loss: tensor(0.4932) feature loss: tensor(0.2351)
Local adapation with distilling: 0.0001
training loss: tensor(0.5374) feature loss: tensor(0.2443)
Local adapation with distilling: 0.0001
training loss: tensor(0.5252) feature loss: tensor(0.2306)
Local adapation with distilling: 0.0001
training loss: tensor(0.5082) feature loss: tensor(0.2371)
Local adapation with distilling: 0.0001
training loss: tensor(0.5451) feature loss: tensor(0.2314)
Local adapation with distilling: 0.0001
training loss: tensor(0.5298) feature loss: tensor(0.2351)
Local adapation with distilling: 0.0001
training loss: tensor(0.5555) feature loss: tensor(0.2301)
Local adapation with distilling: 0.0001
training loss: tensor(0.5347) feature loss: tensor(0.2415)
Local adapation with distilling: 0.0001
training loss: tensor(0.4515) feature loss: tensor(0.2364)
Local adapation with distilling: 0.0001
training loss: tensor(0.5853) feature loss: tensor(0.2224)
Global Model Acc on global data: 0.4547 length of data: 10000
-------------Round number:  87  -------------
selected users: [16, 81, 85, 32, 39, 25, 26, 29, 65, 7]
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([27, 64, 8, 8]) torch.Size([27])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
all data: 250
Local adapation with distilling: 0.0001
training loss: tensor(0.5826) feature loss: tensor(0.2437)
Local adapation with distilling: 0.0001
training loss: tensor(0.7291) feature loss: tensor(0.2494)
Local adapation with distilling: 0.0001
training loss: tensor(0.5395) feature loss: tensor(0.2513)
Local adapation with distilling: 0.0001
training loss: tensor(0.5547) feature loss: tensor(0.2429)
Local adapation with distilling: 0.0001
training loss: tensor(0.6272) feature loss: tensor(0.2536)
Local adapation with distilling: 0.0001
training loss: tensor(0.5539) feature loss: tensor(0.2487)
Local adapation with distilling: 0.0001
training loss: tensor(0.5319) feature loss: tensor(0.2457)
Local adapation with distilling: 0.0001
training loss: tensor(0.5394) feature loss: tensor(0.2488)
Local adapation with distilling: 0.0001
training loss: tensor(0.5773) feature loss: tensor(0.2650)
Local adapation with distilling: 0.0001
training loss: tensor(0.5889) feature loss: tensor(0.2425)
Global Model Acc on global data: 0.4589 length of data: 10000
-------------Round number:  88  -------------
selected users: [95, 53, 43, 84, 2, 74, 55, 31, 54, 97]
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([28, 64, 8, 8]) torch.Size([28])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
all data: 246
Local adapation with distilling: 0.0001
training loss: tensor(0.5088) feature loss: tensor(0.2499)
Local adapation with distilling: 0.0001
training loss: tensor(0.5207) feature loss: tensor(0.2519)
Local adapation with distilling: 0.0001
training loss: tensor(0.5466) feature loss: tensor(0.2498)
Local adapation with distilling: 0.0001
training loss: tensor(0.5613) feature loss: tensor(0.2544)
Local adapation with distilling: 0.0001
training loss: tensor(0.5297) feature loss: tensor(0.2520)
Local adapation with distilling: 0.0001
training loss: tensor(0.5303) feature loss: tensor(0.2486)
Local adapation with distilling: 0.0001
training loss: tensor(0.5425) feature loss: tensor(0.2542)
Local adapation with distilling: 0.0001
training loss: tensor(0.5913) feature loss: tensor(0.2444)
Local adapation with distilling: 0.0001
training loss: tensor(0.6653) feature loss: tensor(0.2417)
Local adapation with distilling: 0.0001
training loss: tensor(0.6123) feature loss: tensor(0.2496)
Global Model Acc on global data: 0.4766 length of data: 10000
-------------Round number:  89  -------------
selected users: [65, 21, 87, 6, 46, 74, 44, 60, 72, 5]
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([28, 64, 8, 8]) torch.Size([28])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
all data: 245
Local adapation with distilling: 0.0001
training loss: tensor(0.5071) feature loss: tensor(0.2339)
Local adapation with distilling: 0.0001
training loss: tensor(0.5310) feature loss: tensor(0.2312)
Local adapation with distilling: 0.0001
training loss: tensor(0.5617) feature loss: tensor(0.2301)
Local adapation with distilling: 0.0001
training loss: tensor(0.5555) feature loss: tensor(0.2218)
Local adapation with distilling: 0.0001
training loss: tensor(0.6273) feature loss: tensor(0.2223)
Local adapation with distilling: 0.0001
training loss: tensor(0.4679) feature loss: tensor(0.2328)
Local adapation with distilling: 0.0001
training loss: tensor(0.5730) feature loss: tensor(0.2294)
Local adapation with distilling: 0.0001
training loss: tensor(0.4952) feature loss: tensor(0.2298)
Local adapation with distilling: 0.0001
training loss: tensor(0.5360) feature loss: tensor(0.2333)
Local adapation with distilling: 0.0001
training loss: tensor(0.5526) feature loss: tensor(0.2263)
Global Model Acc on global data: 0.4635 length of data: 10000
-------------Round number:  90  -------------
selected users: [25, 85, 96, 89, 65, 94, 5, 35, 36, 92]
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([27, 64, 8, 8]) torch.Size([27])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
all data: 250
Local adapation with distilling: 0.0001
training loss: tensor(0.4808) feature loss: tensor(0.2177)
Local adapation with distilling: 0.0001
training loss: tensor(0.4707) feature loss: tensor(0.2240)
Local adapation with distilling: 0.0001
training loss: tensor(0.7311) feature loss: tensor(0.2293)
Local adapation with distilling: 0.0001
training loss: tensor(0.4652) feature loss: tensor(0.2200)
Local adapation with distilling: 0.0001
training loss: tensor(0.4516) feature loss: tensor(0.2245)
Local adapation with distilling: 0.0001
training loss: tensor(0.5140) feature loss: tensor(0.2157)
Local adapation with distilling: 0.0001
training loss: tensor(0.4881) feature loss: tensor(0.2188)
Local adapation with distilling: 0.0001
training loss: tensor(0.6558) feature loss: tensor(0.2203)
Local adapation with distilling: 0.0001
training loss: tensor(0.4769) feature loss: tensor(0.2241)
Local adapation with distilling: 0.0001
training loss: tensor(0.5408) feature loss: tensor(0.2166)
Global Model Acc on global data: 0.4696 length of data: 10000
-------------Round number:  91  -------------
selected users: [75, 25, 3, 52, 78, 54, 59, 26, 62, 97]
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
all data: 249
Local adapation with distilling: 0.0001
training loss: tensor(0.4774) feature loss: tensor(0.2063)
Local adapation with distilling: 0.0001
training loss: tensor(0.4159) feature loss: tensor(0.2023)
Local adapation with distilling: 0.0001
training loss: tensor(0.5252) feature loss: tensor(0.1987)
Local adapation with distilling: 0.0001
training loss: tensor(0.6794) feature loss: tensor(0.2085)
Local adapation with distilling: 0.0001
training loss: tensor(0.5394) feature loss: tensor(0.2102)
Local adapation with distilling: 0.0001
training loss: tensor(0.5004) feature loss: tensor(0.1947)
Local adapation with distilling: 0.0001
training loss: tensor(0.5379) feature loss: tensor(0.2015)
Local adapation with distilling: 0.0001
training loss: tensor(0.4230) feature loss: tensor(0.2037)
Local adapation with distilling: 0.0001
training loss: tensor(0.5632) feature loss: tensor(0.2115)
Local adapation with distilling: 0.0001
training loss: tensor(0.4938) feature loss: tensor(0.2130)
Global Model Acc on global data: 0.4756 length of data: 10000
-------------Round number:  92  -------------
selected users: [25, 99, 73, 61, 66, 36, 23, 83, 77, 6]
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([27, 64, 8, 8]) torch.Size([27])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
all data: 249
Local adapation with distilling: 0.0001
training loss: tensor(0.4590) feature loss: tensor(0.2135)
Local adapation with distilling: 0.0001
training loss: tensor(0.5631) feature loss: tensor(0.2233)
Local adapation with distilling: 0.0001
training loss: tensor(0.5321) feature loss: tensor(0.2215)
Local adapation with distilling: 0.0001
training loss: tensor(0.5967) feature loss: tensor(0.2217)
Local adapation with distilling: 0.0001
training loss: tensor(0.5701) feature loss: tensor(0.2155)
Local adapation with distilling: 0.0001
training loss: tensor(0.4717) feature loss: tensor(0.2189)
Local adapation with distilling: 0.0001
training loss: tensor(0.5891) feature loss: tensor(0.2244)
Local adapation with distilling: 0.0001
training loss: tensor(0.6057) feature loss: tensor(0.2255)
Local adapation with distilling: 0.0001
training loss: tensor(0.6624) feature loss: tensor(0.2225)
Local adapation with distilling: 0.0001
training loss: tensor(0.5037) feature loss: tensor(0.2102)
Global Model Acc on global data: 0.4698 length of data: 10000
-------------Round number:  93  -------------
selected users: [75, 82, 56, 27, 42, 35, 1, 97, 66, 61]
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([27, 64, 8, 8]) torch.Size([27])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([27, 64, 8, 8]) torch.Size([27])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
all data: 248
Local adapation with distilling: 0.0001
training loss: tensor(0.5088) feature loss: tensor(0.2279)
Local adapation with distilling: 0.0001
training loss: tensor(0.5304) feature loss: tensor(0.2191)
Local adapation with distilling: 0.0001
training loss: tensor(0.5014) feature loss: tensor(0.2258)
Local adapation with distilling: 0.0001
training loss: tensor(0.6106) feature loss: tensor(0.2209)
Local adapation with distilling: 0.0001
training loss: tensor(0.5299) feature loss: tensor(0.2169)
Local adapation with distilling: 0.0001
training loss: tensor(0.5684) feature loss: tensor(0.2280)
Local adapation with distilling: 0.0001
training loss: tensor(0.6139) feature loss: tensor(0.2259)
Local adapation with distilling: 0.0001
training loss: tensor(0.5053) feature loss: tensor(0.2214)
Local adapation with distilling: 0.0001
training loss: tensor(0.5175) feature loss: tensor(0.2212)
Local adapation with distilling: 0.0001
training loss: tensor(0.5243) feature loss: tensor(0.2239)
Global Model Acc on global data: 0.4724 length of data: 10000
-------------Round number:  94  -------------
selected users: [13, 73, 5, 18, 99, 48, 23, 4, 35, 17]
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
all data: 246
Local adapation with distilling: 0.0001
training loss: tensor(0.5390) feature loss: tensor(0.2132)
Local adapation with distilling: 0.0001
training loss: tensor(0.4370) feature loss: tensor(0.2230)
Local adapation with distilling: 0.0001
training loss: tensor(0.4585) feature loss: tensor(0.2134)
Local adapation with distilling: 0.0001
training loss: tensor(0.5743) feature loss: tensor(0.2161)
Local adapation with distilling: 0.0001
training loss: tensor(0.5048) feature loss: tensor(0.2104)
Local adapation with distilling: 0.0001
training loss: tensor(0.5465) feature loss: tensor(0.2090)
Local adapation with distilling: 0.0001
training loss: tensor(0.4986) feature loss: tensor(0.2093)
Local adapation with distilling: 0.0001
training loss: tensor(0.5368) feature loss: tensor(0.2163)
Local adapation with distilling: 0.0001
training loss: tensor(0.4851) feature loss: tensor(0.2091)
Local adapation with distilling: 0.0001
training loss: tensor(0.4712) feature loss: tensor(0.2047)
Global Model Acc on global data: 0.4789 length of data: 10000
-------------Round number:  95  -------------
selected users: [88, 9, 1, 60, 95, 26, 45, 71, 44, 21]
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
all data: 246
Local adapation with distilling: 0.0001
training loss: tensor(0.3943) feature loss: tensor(0.1829)
Local adapation with distilling: 0.0001
training loss: tensor(0.7098) feature loss: tensor(0.1853)
Local adapation with distilling: 0.0001
training loss: tensor(0.3938) feature loss: tensor(0.1816)
Local adapation with distilling: 0.0001
training loss: tensor(0.3881) feature loss: tensor(0.1820)
Local adapation with distilling: 0.0001
training loss: tensor(0.3686) feature loss: tensor(0.1822)
Local adapation with distilling: 0.0001
training loss: tensor(0.3956) feature loss: tensor(0.1817)
Local adapation with distilling: 0.0001
training loss: tensor(0.4108) feature loss: tensor(0.1829)
Local adapation with distilling: 0.0001
training loss: tensor(0.3747) feature loss: tensor(0.1776)
Local adapation with distilling: 0.0001
training loss: tensor(0.4426) feature loss: tensor(0.1866)
Local adapation with distilling: 0.0001
training loss: tensor(0.4101) feature loss: tensor(0.1853)
Global Model Acc on global data: 0.4712 length of data: 10000
-------------Round number:  96  -------------
selected users: [41, 28, 52, 15, 87, 17, 75, 42, 45, 49]
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
all data: 243
Local adapation with distilling: 0.0001
training loss: tensor(0.4499) feature loss: tensor(0.2012)
Local adapation with distilling: 0.0001
training loss: tensor(0.6473) feature loss: tensor(0.2109)
Local adapation with distilling: 0.0001
training loss: tensor(0.7216) feature loss: tensor(0.2135)
Local adapation with distilling: 0.0001
training loss: tensor(0.8031) feature loss: tensor(0.2105)
Local adapation with distilling: 0.0001
training loss: tensor(0.5357) feature loss: tensor(0.2145)
Local adapation with distilling: 0.0001
training loss: tensor(0.4539) feature loss: tensor(0.2107)
Local adapation with distilling: 0.0001
training loss: tensor(0.4655) feature loss: tensor(0.2078)
Local adapation with distilling: 0.0001
training loss: tensor(0.4956) feature loss: tensor(0.2031)
Local adapation with distilling: 0.0001
training loss: tensor(0.4313) feature loss: tensor(0.2054)
Local adapation with distilling: 0.0001
training loss: tensor(0.4951) feature loss: tensor(0.2104)
Global Model Acc on global data: 0.4857 length of data: 10000
-------------Round number:  97  -------------
selected users: [31, 43, 64, 56, 85, 2, 70, 21, 34, 50]
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([27, 64, 8, 8]) torch.Size([27])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
all data: 242
Local adapation with distilling: 0.0001
training loss: tensor(0.4652) feature loss: tensor(0.1947)
Local adapation with distilling: 0.0001
training loss: tensor(0.4531) feature loss: tensor(0.1996)
Local adapation with distilling: 0.0001
training loss: tensor(0.5554) feature loss: tensor(0.1847)
Local adapation with distilling: 0.0001
training loss: tensor(0.4204) feature loss: tensor(0.1916)
Local adapation with distilling: 0.0001
training loss: tensor(0.4219) feature loss: tensor(0.1990)
Local adapation with distilling: 0.0001
training loss: tensor(0.4145) feature loss: tensor(0.1916)
Local adapation with distilling: 0.0001
training loss: tensor(0.4295) feature loss: tensor(0.1948)
Local adapation with distilling: 0.0001
training loss: tensor(0.4224) feature loss: tensor(0.1985)
Local adapation with distilling: 0.0001
training loss: tensor(0.4460) feature loss: tensor(0.1911)
Local adapation with distilling: 0.0001
training loss: tensor(0.4591) feature loss: tensor(0.1999)
Global Model Acc on global data: 0.4677 length of data: 10000
-------------Round number:  98  -------------
selected users: [11, 48, 97, 14, 22, 36, 99, 47, 33, 81]
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
all data: 241
Local adapation with distilling: 0.0001
training loss: tensor(0.4546) feature loss: tensor(0.2090)
Local adapation with distilling: 0.0001
training loss: tensor(0.4811) feature loss: tensor(0.2081)
Local adapation with distilling: 0.0001
training loss: tensor(0.4980) feature loss: tensor(0.2182)
Local adapation with distilling: 0.0001
training loss: tensor(0.5189) feature loss: tensor(0.2180)
Local adapation with distilling: 0.0001
training loss: tensor(0.8713) feature loss: tensor(0.2177)
Local adapation with distilling: 0.0001
training loss: tensor(0.4336) feature loss: tensor(0.2116)
Local adapation with distilling: 0.0001
training loss: tensor(0.4670) feature loss: tensor(0.2151)
Local adapation with distilling: 0.0001
training loss: tensor(0.5426) feature loss: tensor(0.2122)
Local adapation with distilling: 0.0001
training loss: tensor(0.4865) feature loss: tensor(0.2102)
Local adapation with distilling: 0.0001
training loss: tensor(0.6752) feature loss: tensor(0.2140)
Global Model Acc on global data: 0.4575 length of data: 10000
-------------Round number:  99  -------------
selected users: [14, 34, 30, 78, 16, 15, 91, 38, 10, 85]
random features: torch.Size([24, 64, 8, 8]) torch.Size([24])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
random features: torch.Size([26, 64, 8, 8]) torch.Size([26])
random features: torch.Size([27, 64, 8, 8]) torch.Size([27])
random features: torch.Size([23, 64, 8, 8]) torch.Size([23])
random features: torch.Size([25, 64, 8, 8]) torch.Size([25])
all data: 248
Local adapation with distilling: 0.0001
training loss: tensor(0.4935) feature loss: tensor(0.2399)
Local adapation with distilling: 0.0001
training loss: tensor(0.5050) feature loss: tensor(0.2376)
Local adapation with distilling: 0.0001
training loss: tensor(0.5365) feature loss: tensor(0.2357)
Local adapation with distilling: 0.0001
training loss: tensor(0.5595) feature loss: tensor(0.2406)
Local adapation with distilling: 0.0001
training loss: tensor(0.5573) feature loss: tensor(0.2340)
Local adapation with distilling: 0.0001
training loss: tensor(0.5883) feature loss: tensor(0.2454)
Local adapation with distilling: 0.0001
training loss: tensor(0.5649) feature loss: tensor(0.2446)
Local adapation with distilling: 0.0001
training loss: tensor(0.4586) feature loss: tensor(0.2391)
Local adapation with distilling: 0.0001
training loss: tensor(0.5361) feature loss: tensor(0.2456)
Local adapation with distilling: 0.0001
training loss: tensor(0.4705) feature loss: tensor(0.2415)
Global Model Acc on global data: 0.4382 length of data: 10000
