nohup: ignoring input
================================================================================
Summary of training process:
Dataset:                 Cifar10
Batch size:              64
Learing rate :           0.001
personal learning rate : 0.001
Number of total clients: 100
Split parameter        : 3.0
Clients per round      : 10
Number of global rounds: 100
Number of local rounds : 10
Feature from layer     : -1
Feature reduction      : 64
Local training loss    : CE_KL2
Loss of beta           : 1.0
Algorithm              : FedPP
Modelname              : MOBNET
Mode                   : training
================================================================================
Files already downloaded and verified
Files already downloaded and verified
Class frequencies:
client,class0,class1,class2,class3,class4,class5,class6,class7,class8,class9,Amount
Client   0,0.298,0.00,0.00,0.00,0.00,0.375,0.00,0.00,0.327,0.00,496
Client   1,0.00,0.321,0.00,0.00,0.00,0.358,0.00,0.00,0.00,0.321,520
Client   2,0.307,0.346,0.346,0.00,0.00,0.00,0.00,0.00,0.00,0.00,482
Client   3,0.00,0.00,0.00,0.337,0.00,0.00,0.377,0.286,0.00,0.00,531
Client   4,0.00,0.00,0.340,0.00,0.320,0.00,0.00,0.00,0.00,0.340,491
Client   5,0.00,0.00,0.327,0.00,0.308,0.365,0.00,0.00,0.00,0.00,510
Client   6,0.00,0.00,0.319,0.00,0.300,0.00,0.382,0.00,0.00,0.00,524
Client   7,0.00,0.00,0.00,0.00,0.330,0.00,0.00,0.319,0.00,0.351,476
Client   8,0.00,0.347,0.00,0.00,0.00,0.00,0.00,0.316,0.337,0.00,481
Client   9,0.286,0.00,0.00,0.00,0.00,0.00,0.389,0.00,0.00,0.325,514
Client  10,0.315,0.00,0.00,0.00,0.00,0.00,0.00,0.326,0.00,0.358,466
Client  11,0.00,0.313,0.00,0.00,0.00,0.00,0.375,0.00,0.00,0.313,534
Client  12,0.306,0.347,0.347,0.00,0.00,0.00,0.00,0.00,0.00,0.00,481
Client  13,0.00,0.329,0.00,0.352,0.00,0.00,0.00,0.00,0.319,0.00,508
Client  14,0.00,0.00,0.00,0.359,0.315,0.00,0.00,0.00,0.325,0.00,498
Client  15,0.00,0.00,0.00,0.00,0.00,0.361,0.00,0.00,0.315,0.324,515
Client  16,0.00,0.00,0.00,0.337,0.00,0.00,0.377,0.286,0.00,0.00,531
Client  17,0.00,0.00,0.00,0.00,0.00,0.346,0.372,0.283,0.00,0.00,538
Client  18,0.00,0.337,0.00,0.00,0.00,0.00,0.00,0.00,0.327,0.337,496
Client  19,0.00,0.00,0.00,0.356,0.312,0.00,0.00,0.00,0.00,0.332,503
Client  20,0.309,0.351,0.00,0.00,0.00,0.00,0.00,0.00,0.340,0.00,476
Client  21,0.312,0.355,0.00,0.00,0.333,0.00,0.00,0.00,0.00,0.00,471
Client  22,0.00,0.00,0.326,0.349,0.00,0.00,0.00,0.00,0.00,0.326,513
Client  23,0.298,0.00,0.339,0.363,0.00,0.00,0.00,0.00,0.00,0.00,493
Client  24,0.00,0.00,0.340,0.00,0.320,0.00,0.00,0.00,0.00,0.340,491
Client  25,0.00,0.00,0.00,0.00,0.00,0.367,0.00,0.302,0.00,0.331,504
Client  26,0.00,0.00,0.00,0.00,0.00,0.00,0.378,0.00,0.306,0.316,529
Client  27,0.00,0.00,0.00,0.368,0.320,0.00,0.00,0.312,0.00,0.00,487
Client  28,0.00,0.00,0.00,0.00,0.00,0.360,0.00,0.00,0.315,0.325,514
Client  29,0.00,0.00,0.00,0.328,0.00,0.00,0.366,0.00,0.00,0.306,546
Client  30,0.309,0.00,0.352,0.00,0.00,0.00,0.00,0.00,0.339,0.00,475
Client  31,0.00,0.344,0.00,0.00,0.00,0.00,0.00,0.313,0.00,0.344,486
Client  32,0.00,0.00,0.335,0.359,0.00,0.00,0.00,0.305,0.00,0.00,498
Client  33,0.302,0.00,0.00,0.368,0.00,0.00,0.00,0.00,0.331,0.00,487
Client  34,0.00,0.352,0.00,0.00,0.328,0.00,0.00,0.320,0.00,0.00,475
Client  35,0.00,0.315,0.00,0.337,0.00,0.348,0.00,0.00,0.00,0.00,531
Client  36,0.289,0.00,0.00,0.00,0.00,0.00,0.394,0.00,0.317,0.00,508
Client  37,0.00,0.00,0.00,0.00,0.307,0.00,0.394,0.299,0.00,0.00,508
Client  38,0.00,0.00,0.00,0.00,0.00,0.339,0.366,0.00,0.295,0.00,546
Client  39,0.00,0.00,0.322,0.00,0.00,0.356,0.00,0.00,0.00,0.322,519
Client  40,0.320,0.00,0.00,0.00,0.00,0.00,0.00,0.330,0.350,0.00,460
Client  41,0.00,0.352,0.00,0.00,0.328,0.00,0.00,0.320,0.00,0.00,475
Client  42,0.00,0.00,0.352,0.00,0.328,0.00,0.00,0.320,0.00,0.00,475
Client  43,0.298,0.00,0.00,0.363,0.00,0.00,0.00,0.00,0.00,0.339,493
Client  44,0.313,0.00,0.355,0.00,0.332,0.00,0.00,0.00,0.00,0.00,470
Client  45,0.00,0.331,0.00,0.00,0.00,0.367,0.00,0.302,0.00,0.00,504
Client  46,0.00,0.00,0.00,0.00,0.00,0.00,0.385,0.293,0.00,0.322,519
Client  47,0.00,0.00,0.00,0.00,0.333,0.00,0.00,0.323,0.344,0.00,468
Client  48,0.309,0.352,0.00,0.00,0.00,0.00,0.00,0.00,0.339,0.00,475
Client  49,0.00,0.00,0.337,0.00,0.00,0.00,0.00,0.00,0.325,0.337,495
Client  50,0.298,0.339,0.00,0.363,0.00,0.00,0.00,0.00,0.00,0.00,493
Client  51,0.00,0.344,0.344,0.00,0.00,0.00,0.00,0.311,0.00,0.00,485
Client  52,0.286,0.00,0.325,0.00,0.00,0.00,0.389,0.00,0.00,0.00,514
Client  53,0.00,0.00,0.326,0.350,0.00,0.00,0.00,0.00,0.00,0.324,512
Client  54,0.00,0.00,0.319,0.00,0.298,0.00,0.382,0.00,0.00,0.00,523
Client  55,0.304,0.00,0.00,0.00,0.00,0.383,0.00,0.313,0.00,0.00,483
Client  56,0.00,0.303,0.00,0.00,0.00,0.335,0.362,0.00,0.00,0.00,552
Client  57,0.00,0.00,0.00,0.00,0.308,0.00,0.394,0.298,0.00,0.00,507
Client  58,0.289,0.00,0.00,0.00,0.00,0.00,0.394,0.00,0.317,0.00,508
Client  59,0.00,0.322,0.00,0.00,0.00,0.357,0.00,0.00,0.00,0.320,518
Client  60,0.306,0.347,0.347,0.00,0.00,0.00,0.00,0.00,0.00,0.00,481
Client  61,0.00,0.327,0.00,0.00,0.308,0.365,0.00,0.00,0.00,0.00,507
Client  62,0.316,0.00,0.359,0.00,0.00,0.00,0.00,0.325,0.00,0.00,465
Client  63,0.00,0.00,0.00,0.354,0.00,0.00,0.00,0.00,0.318,0.328,506
Client  64,0.00,0.00,0.00,0.00,0.317,0.376,0.00,0.307,0.00,0.00,492
Client  65,0.295,0.00,0.00,0.00,0.00,0.371,0.00,0.00,0.00,0.333,498
Client  66,0.00,0.00,0.00,0.327,0.00,0.00,0.368,0.00,0.00,0.305,544
Client  67,0.00,0.351,0.00,0.00,0.330,0.00,0.00,0.319,0.00,0.00,473
Client  68,0.00,0.00,0.00,0.00,0.302,0.00,0.387,0.00,0.311,0.00,517
Client  69,0.00,0.00,0.337,0.00,0.00,0.00,0.00,0.00,0.327,0.337,493
Client  70,0.304,0.00,0.00,0.00,0.00,0.383,0.00,0.313,0.00,0.00,483
Client  71,0.00,0.327,0.00,0.00,0.308,0.365,0.00,0.00,0.00,0.00,507
Client  72,0.00,0.00,0.324,0.00,0.00,0.361,0.00,0.00,0.314,0.00,512
Client  73,0.00,0.00,0.00,0.340,0.00,0.353,0.00,0.00,0.307,0.00,524
Client  74,0.00,0.344,0.00,0.00,0.323,0.00,0.00,0.00,0.333,0.00,483
Client  75,0.304,0.00,0.00,0.00,0.00,0.383,0.00,0.313,0.00,0.00,483
Client  76,0.00,0.00,0.00,0.333,0.292,0.00,0.375,0.00,0.00,0.00,534
Client  77,0.317,0.00,0.358,0.00,0.00,0.00,0.00,0.325,0.00,0.00,464
Client  78,0.00,0.00,0.00,0.340,0.00,0.353,0.00,0.00,0.307,0.00,524
Client  79,0.00,0.333,0.333,0.00,0.00,0.00,0.00,0.00,0.00,0.333,498
Client  80,0.306,0.00,0.00,0.370,0.324,0.00,0.00,0.00,0.00,0.00,481
Client  81,0.287,0.324,0.00,0.00,0.00,0.00,0.390,0.00,0.00,0.00,513
Client  82,0.317,0.00,0.358,0.00,0.00,0.00,0.00,0.325,0.00,0.00,464
Client  83,0.00,0.00,0.329,0.352,0.00,0.00,0.00,0.00,0.319,0.00,505
Client  84,0.306,0.00,0.00,0.370,0.324,0.00,0.00,0.00,0.00,0.00,481
Client  85,0.00,0.00,0.00,0.00,0.311,0.369,0.00,0.00,0.321,0.00,502
Client  86,0.00,0.00,0.312,0.00,0.00,0.00,0.376,0.00,0.00,0.312,532
Client  87,0.309,0.00,0.00,0.374,0.00,0.00,0.00,0.317,0.00,0.00,476
Client  88,0.00,0.344,0.00,0.00,0.323,0.00,0.00,0.00,0.333,0.00,483
Client  89,0.00,0.00,0.00,0.327,0.00,0.00,0.368,0.00,0.00,0.305,544
Client  90,0.309,0.00,0.00,0.374,0.00,0.00,0.00,0.317,0.00,0.00,476
Client  91,0.00,0.314,0.00,0.336,0.00,0.350,0.00,0.00,0.00,0.00,529
Client  92,0.313,0.00,0.354,0.00,0.333,0.00,0.00,0.00,0.00,0.00,469
Client  93,0.00,0.00,0.00,0.340,0.00,0.353,0.00,0.00,0.307,0.00,524
Client  94,0.00,0.00,0.00,0.00,0.308,0.00,0.394,0.298,0.00,0.00,507
Client  95,0.00,0.331,0.00,0.00,0.00,0.369,0.00,0.301,0.00,0.00,502
Client  96,0.287,0.00,0.324,0.00,0.00,0.00,0.390,0.00,0.00,0.00,513
Client  97,0.00,0.00,0.347,0.00,0.00,0.00,0.00,0.316,0.337,0.00,478
Client  98,0.00,0.344,0.00,0.00,0.323,0.00,0.00,0.00,0.333,0.00,483
Client  99,0.313,0.00,0.00,0.00,0.333,0.00,0.00,0.00,0.00,0.354,469
0 [0 5 8] [0 5 8] [1 2 3 4 6 7 9]
0 training: Counter({5: 186, 8: 162, 0: 148}) testing iid: Counter({8: 1000, 0: 1000, 5: 1000})
1 [1 5 9] [1 5 9] [0 2 3 4 6 7 8]
1 training: Counter({5: 186, 1: 167, 9: 167}) testing iid: Counter({1: 1000, 9: 1000, 5: 1000})
2 [0 1 2] [0 1 2] [3 4 5 6 7 8 9]
2 training: Counter({1: 167, 2: 167, 0: 148}) testing iid: Counter({0: 1000, 1: 1000, 2: 1000})
3 [3 6 7] [3 6 7] [0 1 2 4 5 8 9]
3 training: Counter({6: 200, 3: 179, 7: 152}) testing iid: Counter({3: 1000, 6: 1000, 7: 1000})
4 [2 4 9] [2 4 9] [0 1 3 5 6 7 8]
4 training: Counter({2: 167, 9: 167, 4: 157}) testing iid: Counter({9: 1000, 4: 1000, 2: 1000})
5 [2 4 5] [2 4 5] [0 1 3 6 7 8 9]
5 training: Counter({5: 186, 2: 167, 4: 157}) testing iid: Counter({5: 1000, 4: 1000, 2: 1000})
6 [2 4 6] [2 4 6] [0 1 3 5 7 8 9]
6 training: Counter({6: 200, 2: 167, 4: 157}) testing iid: Counter({6: 1000, 4: 1000, 2: 1000})
7 [4 7 9] [4 7 9] [0 1 2 3 5 6 8]
7 training: Counter({9: 167, 4: 157, 7: 152}) testing iid: Counter({9: 1000, 7: 1000, 4: 1000})
8 [1 7 8] [1 7 8] [0 2 3 4 5 6 9]
8 training: Counter({1: 167, 8: 162, 7: 152}) testing iid: Counter({8: 1000, 1: 1000, 7: 1000})
9 [0 6 9] [0 6 9] [1 2 3 4 5 7 8]
9 training: Counter({6: 200, 9: 167, 0: 147}) testing iid: Counter({0: 1000, 6: 1000, 9: 1000})
10 [0 7 9] [0 7 9] [1 2 3 4 5 6 8]
10 training: Counter({9: 167, 7: 152, 0: 147}) testing iid: Counter({0: 1000, 9: 1000, 7: 1000})
11 [1 6 9] [1 6 9] [0 2 3 4 5 7 8]
11 training: Counter({6: 200, 1: 167, 9: 167}) testing iid: Counter({6: 1000, 1: 1000, 9: 1000})
12 [0 1 2] [0 1 2] [3 4 5 6 7 8 9]
12 training: Counter({1: 167, 2: 167, 0: 147}) testing iid: Counter({0: 1000, 1: 1000, 2: 1000})
13 [1 3 8] [1 3 8] [0 2 4 5 6 7 9]
13 training: Counter({3: 179, 1: 167, 8: 162}) testing iid: Counter({3: 1000, 8: 1000, 1: 1000})
14 [3 4 8] [3 4 8] [0 1 2 5 6 7 9]
14 training: Counter({3: 179, 8: 162, 4: 157}) testing iid: Counter({3: 1000, 8: 1000, 4: 1000})
15 [5 8 9] [5 8 9] [0 1 2 3 4 6 7]
15 training: Counter({5: 186, 9: 167, 8: 162}) testing iid: Counter({8: 1000, 9: 1000, 5: 1000})
16 [3 6 7] [3 6 7] [0 1 2 4 5 8 9]
16 training: Counter({6: 200, 3: 179, 7: 152}) testing iid: Counter({3: 1000, 6: 1000, 7: 1000})
17 [5 6 7] [5 6 7] [0 1 2 3 4 8 9]
17 training: Counter({6: 200, 5: 186, 7: 152}) testing iid: Counter({6: 1000, 5: 1000, 7: 1000})
18 [1 8 9] [1 8 9] [0 2 3 4 5 6 7]
18 training: Counter({1: 167, 9: 167, 8: 162}) testing iid: Counter({8: 1000, 1: 1000, 9: 1000})
19 [3 4 9] [3 4 9] [0 1 2 5 6 7 8]
19 training: Counter({3: 179, 9: 167, 4: 157}) testing iid: Counter({3: 1000, 9: 1000, 4: 1000})
20 [0 1 8] [0 1 8] [2 3 4 5 6 7 9]
20 training: Counter({1: 167, 8: 162, 0: 147}) testing iid: Counter({8: 1000, 0: 1000, 1: 1000})
21 [0 1 4] [0 1 4] [2 3 5 6 7 8 9]
21 training: Counter({1: 167, 4: 157, 0: 147}) testing iid: Counter({0: 1000, 1: 1000, 4: 1000})
22 [2 3 9] [2 3 9] [0 1 4 5 6 7 8]
22 training: Counter({3: 179, 2: 167, 9: 167}) testing iid: Counter({3: 1000, 9: 1000, 2: 1000})
23 [0 2 3] [0 2 3] [1 4 5 6 7 8 9]
23 training: Counter({3: 179, 2: 167, 0: 147}) testing iid: Counter({3: 1000, 0: 1000, 2: 1000})
24 [2 4 9] [2 4 9] [0 1 3 5 6 7 8]
24 training: Counter({2: 167, 9: 167, 4: 157}) testing iid: Counter({9: 1000, 4: 1000, 2: 1000})
25 [5 7 9] [5 7 9] [0 1 2 3 4 6 8]
25 training: Counter({5: 185, 9: 167, 7: 152}) testing iid: Counter({9: 1000, 5: 1000, 7: 1000})
26 [6 8 9] [6 8 9] [0 1 2 3 4 5 7]
26 training: Counter({6: 200, 9: 167, 8: 162}) testing iid: Counter({8: 1000, 6: 1000, 9: 1000})
27 [3 4 7] [3 4 7] [0 1 2 5 6 8 9]
27 training: Counter({3: 179, 4: 156, 7: 152}) testing iid: Counter({3: 1000, 7: 1000, 4: 1000})
28 [5 8 9] [5 8 9] [0 1 2 3 4 6 7]
28 training: Counter({5: 185, 9: 167, 8: 162}) testing iid: Counter({8: 1000, 9: 1000, 5: 1000})
29 [3 6 9] [3 6 9] [0 1 2 4 5 7 8]
29 training: Counter({6: 200, 3: 179, 9: 167}) testing iid: Counter({3: 1000, 6: 1000, 9: 1000})
30 [0 2 8] [0 2 8] [1 3 4 5 6 7 9]
30 training: Counter({2: 167, 8: 161, 0: 147}) testing iid: Counter({8: 1000, 0: 1000, 2: 1000})
31 [1 7 9] [1 7 9] [0 2 3 4 5 6 8]
31 training: Counter({1: 167, 9: 167, 7: 152}) testing iid: Counter({1: 1000, 9: 1000, 7: 1000})
32 [2 3 7] [2 3 7] [0 1 4 5 6 8 9]
32 training: Counter({3: 179, 2: 167, 7: 152}) testing iid: Counter({3: 1000, 7: 1000, 2: 1000})
33 [0 3 8] [0 3 8] [1 2 4 5 6 7 9]
33 training: Counter({3: 179, 8: 161, 0: 147}) testing iid: Counter({3: 1000, 8: 1000, 0: 1000})
34 [1 4 7] [1 4 7] [0 2 3 5 6 8 9]
34 training: Counter({1: 167, 4: 156, 7: 152}) testing iid: Counter({1: 1000, 7: 1000, 4: 1000})
35 [1 3 5] [1 3 5] [0 2 4 6 7 8 9]
35 training: Counter({5: 185, 3: 179, 1: 167}) testing iid: Counter({3: 1000, 1: 1000, 5: 1000})
36 [0 6 8] [0 6 8] [1 2 3 4 5 7 9]
36 training: Counter({6: 200, 8: 161, 0: 147}) testing iid: Counter({8: 1000, 0: 1000, 6: 1000})
37 [4 6 7] [4 6 7] [0 1 2 3 5 8 9]
37 training: Counter({6: 200, 4: 156, 7: 152}) testing iid: Counter({6: 1000, 7: 1000, 4: 1000})
38 [5 6 8] [5 6 8] [0 1 2 3 4 7 9]
38 training: Counter({6: 200, 5: 185, 8: 161}) testing iid: Counter({8: 1000, 6: 1000, 5: 1000})
39 [2 5 9] [2 5 9] [0 1 3 4 6 7 8]
39 training: Counter({5: 185, 2: 167, 9: 167}) testing iid: Counter({9: 1000, 5: 1000, 2: 1000})
40 [0 7 8] [0 7 8] [1 2 3 4 5 6 9]
40 training: Counter({8: 161, 7: 152, 0: 147}) testing iid: Counter({8: 1000, 0: 1000, 7: 1000})
41 [1 4 7] [1 4 7] [0 2 3 5 6 8 9]
41 training: Counter({1: 167, 4: 156, 7: 152}) testing iid: Counter({1: 1000, 7: 1000, 4: 1000})
42 [2 4 7] [2 4 7] [0 1 3 5 6 8 9]
42 training: Counter({2: 167, 4: 156, 7: 152}) testing iid: Counter({7: 1000, 4: 1000, 2: 1000})
43 [0 3 9] [0 3 9] [1 2 4 5 6 7 8]
43 training: Counter({3: 179, 9: 167, 0: 147}) testing iid: Counter({3: 1000, 0: 1000, 9: 1000})
44 [0 2 4] [0 2 4] [1 3 5 6 7 8 9]
44 training: Counter({2: 167, 4: 156, 0: 147}) testing iid: Counter({0: 1000, 4: 1000, 2: 1000})
45 [1 5 7] [1 5 7] [0 2 3 4 6 8 9]
45 training: Counter({5: 185, 1: 167, 7: 152}) testing iid: Counter({1: 1000, 5: 1000, 7: 1000})
46 [6 7 9] [6 7 9] [0 1 2 3 4 5 8]
46 training: Counter({6: 200, 9: 167, 7: 152}) testing iid: Counter({6: 1000, 9: 1000, 7: 1000})
47 [4 7 8] [4 7 8] [0 1 2 3 5 6 9]
47 training: Counter({8: 161, 4: 156, 7: 151}) testing iid: Counter({8: 1000, 7: 1000, 4: 1000})
48 [0 1 8] [0 1 8] [2 3 4 5 6 7 9]
48 training: Counter({1: 167, 8: 161, 0: 147}) testing iid: Counter({8: 1000, 0: 1000, 1: 1000})
49 [2 8 9] [2 8 9] [0 1 3 4 5 6 7]
49 training: Counter({2: 167, 9: 167, 8: 161}) testing iid: Counter({8: 1000, 9: 1000, 2: 1000})
50 [0 1 3] [0 1 3] [2 4 5 6 7 8 9]
50 training: Counter({3: 179, 1: 167, 0: 147}) testing iid: Counter({3: 1000, 0: 1000, 1: 1000})
51 [1 2 7] [1 2 7] [0 3 4 5 6 8 9]
51 training: Counter({1: 167, 2: 167, 7: 151}) testing iid: Counter({1: 1000, 7: 1000, 2: 1000})
52 [0 2 6] [0 2 6] [1 3 4 5 7 8 9]
52 training: Counter({6: 200, 2: 167, 0: 147}) testing iid: Counter({0: 1000, 6: 1000, 2: 1000})
53 [2 3 9] [2 3 9] [0 1 4 5 6 7 8]
53 training: Counter({3: 179, 2: 167, 9: 166}) testing iid: Counter({3: 1000, 9: 1000, 2: 1000})
54 [2 4 6] [2 4 6] [0 1 3 5 7 8 9]
54 training: Counter({6: 200, 2: 167, 4: 156}) testing iid: Counter({6: 1000, 4: 1000, 2: 1000})
55 [0 5 7] [0 5 7] [1 2 3 4 6 8 9]
55 training: Counter({5: 185, 7: 151, 0: 147}) testing iid: Counter({0: 1000, 5: 1000, 7: 1000})
56 [1 5 6] [1 5 6] [0 2 3 4 7 8 9]
56 training: Counter({6: 200, 5: 185, 1: 167}) testing iid: Counter({6: 1000, 1: 1000, 5: 1000})
57 [4 6 7] [4 6 7] [0 1 2 3 5 8 9]
57 training: Counter({6: 200, 4: 156, 7: 151}) testing iid: Counter({6: 1000, 7: 1000, 4: 1000})
58 [0 6 8] [0 6 8] [1 2 3 4 5 7 9]
58 training: Counter({6: 200, 8: 161, 0: 147}) testing iid: Counter({8: 1000, 0: 1000, 6: 1000})
59 [1 5 9] [1 5 9] [0 2 3 4 6 7 8]
59 training: Counter({5: 185, 1: 167, 9: 166}) testing iid: Counter({1: 1000, 9: 1000, 5: 1000})
60 [0 1 2] [0 1 2] [3 4 5 6 7 8 9]
60 training: Counter({1: 167, 2: 167, 0: 147}) testing iid: Counter({0: 1000, 1: 1000, 2: 1000})
61 [1 4 5] [1 4 5] [0 2 3 6 7 8 9]
61 training: Counter({5: 185, 1: 166, 4: 156}) testing iid: Counter({1: 1000, 5: 1000, 4: 1000})
62 [0 2 7] [0 2 7] [1 3 4 5 6 8 9]
62 training: Counter({2: 167, 7: 151, 0: 147}) testing iid: Counter({0: 1000, 7: 1000, 2: 1000})
63 [3 8 9] [3 8 9] [0 1 2 4 5 6 7]
63 training: Counter({3: 179, 9: 166, 8: 161}) testing iid: Counter({3: 1000, 8: 1000, 9: 1000})
64 [4 5 7] [4 5 7] [0 1 2 3 6 8 9]
64 training: Counter({5: 185, 4: 156, 7: 151}) testing iid: Counter({5: 1000, 7: 1000, 4: 1000})
65 [0 5 9] [0 5 9] [1 2 3 4 6 7 8]
65 training: Counter({5: 185, 9: 166, 0: 147}) testing iid: Counter({0: 1000, 9: 1000, 5: 1000})
66 [3 6 9] [3 6 9] [0 1 2 4 5 7 8]
66 training: Counter({6: 200, 3: 178, 9: 166}) testing iid: Counter({3: 1000, 6: 1000, 9: 1000})
67 [1 4 7] [1 4 7] [0 2 3 5 6 8 9]
67 training: Counter({1: 166, 4: 156, 7: 151}) testing iid: Counter({1: 1000, 7: 1000, 4: 1000})
68 [4 6 8] [4 6 8] [0 1 2 3 5 7 9]
68 training: Counter({6: 200, 8: 161, 4: 156}) testing iid: Counter({8: 1000, 6: 1000, 4: 1000})
69 [2 8 9] [2 8 9] [0 1 3 4 5 6 7]
69 training: Counter({2: 166, 9: 166, 8: 161}) testing iid: Counter({8: 1000, 9: 1000, 2: 1000})
70 [0 5 7] [0 5 7] [1 2 3 4 6 8 9]
70 training: Counter({5: 185, 7: 151, 0: 147}) testing iid: Counter({0: 1000, 5: 1000, 7: 1000})
71 [1 4 5] [1 4 5] [0 2 3 6 7 8 9]
71 training: Counter({5: 185, 1: 166, 4: 156}) testing iid: Counter({1: 1000, 5: 1000, 4: 1000})
72 [2 5 8] [2 5 8] [0 1 3 4 6 7 9]
72 training: Counter({5: 185, 2: 166, 8: 161}) testing iid: Counter({8: 1000, 5: 1000, 2: 1000})
73 [3 5 8] [3 5 8] [0 1 2 4 6 7 9]
73 training: Counter({5: 185, 3: 178, 8: 161}) testing iid: Counter({3: 1000, 8: 1000, 5: 1000})
74 [1 4 8] [1 4 8] [0 2 3 5 6 7 9]
74 training: Counter({1: 166, 8: 161, 4: 156}) testing iid: Counter({8: 1000, 1: 1000, 4: 1000})
75 [0 5 7] [0 5 7] [1 2 3 4 6 8 9]
75 training: Counter({5: 185, 7: 151, 0: 147}) testing iid: Counter({0: 1000, 5: 1000, 7: 1000})
76 [3 4 6] [3 4 6] [0 1 2 5 7 8 9]
76 training: Counter({6: 200, 3: 178, 4: 156}) testing iid: Counter({3: 1000, 6: 1000, 4: 1000})
77 [0 2 7] [0 2 7] [1 3 4 5 6 8 9]
77 training: Counter({2: 166, 7: 151, 0: 147}) testing iid: Counter({0: 1000, 7: 1000, 2: 1000})
78 [3 5 8] [3 5 8] [0 1 2 4 6 7 9]
78 training: Counter({5: 185, 3: 178, 8: 161}) testing iid: Counter({3: 1000, 8: 1000, 5: 1000})
79 [1 2 9] [1 2 9] [0 3 4 5 6 7 8]
79 training: Counter({1: 166, 2: 166, 9: 166}) testing iid: Counter({1: 1000, 9: 1000, 2: 1000})
80 [0 3 4] [0 3 4] [1 2 5 6 7 8 9]
80 training: Counter({3: 178, 4: 156, 0: 147}) testing iid: Counter({3: 1000, 0: 1000, 4: 1000})
81 [0 1 6] [0 1 6] [2 3 4 5 7 8 9]
81 training: Counter({6: 200, 1: 166, 0: 147}) testing iid: Counter({0: 1000, 6: 1000, 1: 1000})
82 [0 2 7] [0 2 7] [1 3 4 5 6 8 9]
82 training: Counter({2: 166, 7: 151, 0: 147}) testing iid: Counter({0: 1000, 7: 1000, 2: 1000})
83 [2 3 8] [2 3 8] [0 1 4 5 6 7 9]
83 training: Counter({3: 178, 2: 166, 8: 161}) testing iid: Counter({3: 1000, 8: 1000, 2: 1000})
84 [0 3 4] [0 3 4] [1 2 5 6 7 8 9]
84 training: Counter({3: 178, 4: 156, 0: 147}) testing iid: Counter({3: 1000, 0: 1000, 4: 1000})
85 [4 5 8] [4 5 8] [0 1 2 3 6 7 9]
85 training: Counter({5: 185, 8: 161, 4: 156}) testing iid: Counter({8: 1000, 5: 1000, 4: 1000})
86 [2 6 9] [2 6 9] [0 1 3 4 5 7 8]
86 training: Counter({6: 200, 2: 166, 9: 166}) testing iid: Counter({6: 1000, 9: 1000, 2: 1000})
87 [0 3 7] [0 3 7] [1 2 4 5 6 8 9]
87 training: Counter({3: 178, 7: 151, 0: 147}) testing iid: Counter({3: 1000, 0: 1000, 7: 1000})
88 [1 4 8] [1 4 8] [0 2 3 5 6 7 9]
88 training: Counter({1: 166, 8: 161, 4: 156}) testing iid: Counter({8: 1000, 1: 1000, 4: 1000})
89 [3 6 9] [3 6 9] [0 1 2 4 5 7 8]
89 training: Counter({6: 200, 3: 178, 9: 166}) testing iid: Counter({3: 1000, 6: 1000, 9: 1000})
90 [0 3 7] [0 3 7] [1 2 4 5 6 8 9]
90 training: Counter({3: 178, 7: 151, 0: 147}) testing iid: Counter({3: 1000, 0: 1000, 7: 1000})
91 [1 3 5] [1 3 5] [0 2 4 6 7 8 9]
91 training: Counter({5: 185, 3: 178, 1: 166}) testing iid: Counter({3: 1000, 1: 1000, 5: 1000})
92 [0 2 4] [0 2 4] [1 3 5 6 7 8 9]
92 training: Counter({2: 166, 4: 156, 0: 147}) testing iid: Counter({0: 1000, 4: 1000, 2: 1000})
93 [3 5 8] [3 5 8] [0 1 2 4 6 7 9]
93 training: Counter({5: 185, 3: 178, 8: 161}) testing iid: Counter({3: 1000, 8: 1000, 5: 1000})
94 [4 6 7] [4 6 7] [0 1 2 3 5 8 9]
94 training: Counter({6: 200, 4: 156, 7: 151}) testing iid: Counter({6: 1000, 7: 1000, 4: 1000})
95 [1 5 7] [1 5 7] [0 2 3 4 6 8 9]
95 training: Counter({5: 185, 1: 166, 7: 151}) testing iid: Counter({1: 1000, 5: 1000, 7: 1000})
96 [0 2 6] [0 2 6] [1 3 4 5 7 8 9]
96 training: Counter({6: 200, 2: 166, 0: 147}) testing iid: Counter({0: 1000, 6: 1000, 2: 1000})
97 [2 7 8] [2 7 8] [0 1 3 4 5 6 9]
97 training: Counter({2: 166, 8: 161, 7: 151}) testing iid: Counter({8: 1000, 7: 1000, 2: 1000})
98 [1 4 8] [1 4 8] [0 2 3 5 6 7 9]
98 training: Counter({1: 166, 8: 161, 4: 156}) testing iid: Counter({8: 1000, 1: 1000, 4: 1000})
99 [0 4 9] [0 4 9] [1 2 3 5 6 7 8]
99 training: Counter({9: 166, 4: 156, 0: 147}) testing iid: Counter({0: 1000, 9: 1000, 4: 1000})
Num_samples of Training set per client: [496, 520, 482, 531, 491, 510, 524, 476, 481, 514, 466, 534, 481, 508, 498, 515, 531, 538, 496, 503, 476, 471, 513, 493, 491, 504, 529, 487, 514, 546, 475, 486, 498, 487, 475, 531, 508, 508, 546, 519, 460, 475, 475, 493, 470, 504, 519, 468, 475, 495, 493, 485, 514, 512, 523, 483, 552, 507, 508, 518, 481, 507, 465, 506, 492, 498, 544, 473, 517, 493, 483, 507, 512, 524, 483, 483, 534, 464, 524, 498, 481, 513, 464, 505, 481, 502, 532, 476, 483, 544, 476, 529, 469, 524, 507, 502, 513, 478, 483, 469]
Total_training_samples: 50000
Global test set: 10000
Finish Generating Samples, distribution saved
MobileNetV2(
  (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (layers): Sequential(
    (0): Block(
      (conv1): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): Block(
      (conv1): Conv2d(16, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=96, bias=False)
      (bn2): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(96, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(16, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (2): Block(
      (conv1): Conv2d(24, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=144, bias=False)
      (bn2): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(144, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (3): Block(
      (conv1): Conv2d(24, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(144, 144, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=144, bias=False)
      (bn2): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(144, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (4): Block(
      (conv1): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
      (bn2): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(192, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (5): Block(
      (conv1): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
      (bn2): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(192, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (6): Block(
      (conv1): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(192, 192, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=192, bias=False)
      (bn2): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(192, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (7): Block(
      (conv1): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
      (bn2): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (8): Block(
      (conv1): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
      (bn2): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (9): Block(
      (conv1): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
      (bn2): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (10): Block(
      (conv1): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
      (bn2): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(384, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(64, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (11): Block(
      (conv1): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)
      (bn2): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (12): Block(
      (conv1): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)
      (bn2): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (13): Block(
      (conv1): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(576, 576, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=576, bias=False)
      (bn2): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(576, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (14): Block(
      (conv1): Conv2d(160, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(960, 960, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=960, bias=False)
      (bn2): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(960, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (15): Block(
      (conv1): Conv2d(160, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(960, 960, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=960, bias=False)
      (bn2): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(960, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (16): Block(
      (conv1): Conv2d(160, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(960, 960, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=960, bias=False)
      (bn2): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(960, 320, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(160, 320, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (conv2): Conv2d(320, 1280, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn2): BatchNorm2d(1280, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (linear): Linear(in_features=1280, out_features=10, bias=True)
)
number of parameters: 2296922
clients initializting...
output size: 10
  0%|          | 0/100 [00:00<?, ?it/s]  1%|          | 1/100 [00:00<01:03,  1.57it/s]  2%|▏         | 2/100 [00:01<01:03,  1.56it/s]  3%|▎         | 3/100 [00:01<01:01,  1.57it/s]  4%|▍         | 4/100 [00:05<02:34,  1.61s/it]  5%|▌         | 5/100 [00:06<02:04,  1.31s/it]  6%|▌         | 6/100 [00:07<01:44,  1.11s/it]  7%|▋         | 7/100 [00:07<01:29,  1.04it/s]  8%|▊         | 8/100 [00:08<01:18,  1.17it/s]  9%|▉         | 9/100 [00:08<01:11,  1.27it/s] 10%|█         | 10/100 [00:09<01:06,  1.36it/s] 11%|█         | 11/100 [00:10<01:02,  1.42it/s] 12%|█▏        | 12/100 [00:10<01:00,  1.47it/s] 13%|█▎        | 13/100 [00:11<00:58,  1.49it/s] 14%|█▍        | 14/100 [00:12<00:56,  1.51it/s] 15%|█▌        | 15/100 [00:12<00:54,  1.55it/s] 16%|█▌        | 16/100 [00:13<00:53,  1.57it/s] 17%|█▋        | 17/100 [00:13<00:52,  1.58it/s] 18%|█▊        | 18/100 [00:14<00:51,  1.60it/s] 19%|█▉        | 19/100 [00:15<00:50,  1.59it/s] 20%|██        | 20/100 [00:15<00:50,  1.60it/s] 21%|██        | 21/100 [00:16<00:49,  1.58it/s] 22%|██▏       | 22/100 [00:17<00:48,  1.60it/s] 23%|██▎       | 23/100 [00:17<00:47,  1.61it/s] 24%|██▍       | 24/100 [00:18<00:47,  1.61it/s] 25%|██▌       | 25/100 [00:18<00:46,  1.62it/s] 26%|██▌       | 26/100 [00:19<00:45,  1.62it/s] 27%|██▋       | 27/100 [00:20<00:45,  1.62it/s] 28%|██▊       | 28/100 [00:20<00:44,  1.61it/s] 29%|██▉       | 29/100 [00:21<00:44,  1.61it/s] 30%|███       | 30/100 [00:21<00:43,  1.61it/s] 31%|███       | 31/100 [00:22<00:43,  1.60it/s] 32%|███▏      | 32/100 [00:23<00:42,  1.61it/s] 33%|███▎      | 33/100 [00:23<00:41,  1.61it/s] 34%|███▍      | 34/100 [00:24<00:40,  1.62it/s] 35%|███▌      | 35/100 [00:25<00:40,  1.62it/s] 36%|███▌      | 36/100 [00:25<00:39,  1.61it/s] 37%|███▋      | 37/100 [00:26<00:39,  1.61it/s] 38%|███▊      | 38/100 [00:26<00:38,  1.60it/s] 39%|███▉      | 39/100 [00:30<01:35,  1.57s/it] 40%|████      | 40/100 [00:31<01:17,  1.29s/it] 41%|████      | 41/100 [00:31<01:04,  1.09s/it] 42%|████▏     | 42/100 [00:32<00:54,  1.06it/s] 43%|████▎     | 43/100 [00:33<00:48,  1.19it/s] 44%|████▍     | 44/100 [00:33<00:43,  1.29it/s] 45%|████▌     | 45/100 [00:34<00:39,  1.38it/s] 46%|████▌     | 46/100 [00:35<00:37,  1.45it/s] 47%|████▋     | 47/100 [00:35<00:35,  1.49it/s] 48%|████▊     | 48/100 [00:36<00:34,  1.53it/s] 49%|████▉     | 49/100 [00:36<00:32,  1.55it/s] 50%|█████     | 50/100 [00:37<00:31,  1.57it/s] 51%|█████     | 51/100 [00:38<00:30,  1.59it/s] 52%|█████▏    | 52/100 [00:38<00:29,  1.60it/s] 53%|█████▎    | 53/100 [00:39<00:29,  1.61it/s] 54%|█████▍    | 54/100 [00:39<00:28,  1.61it/s] 55%|█████▌    | 55/100 [00:40<00:28,  1.60it/s] 56%|█████▌    | 56/100 [00:41<00:27,  1.61it/s] 57%|█████▋    | 57/100 [00:41<00:26,  1.60it/s] 58%|█████▊    | 58/100 [00:42<00:26,  1.61it/s] 59%|█████▉    | 59/100 [00:43<00:25,  1.62it/s] 60%|██████    | 60/100 [00:43<00:24,  1.63it/s] 61%|██████    | 61/100 [00:44<00:23,  1.63it/s] 62%|██████▏   | 62/100 [00:44<00:23,  1.64it/s] 63%|██████▎   | 63/100 [00:45<00:22,  1.63it/s] 64%|██████▍   | 64/100 [00:46<00:22,  1.63it/s] 65%|██████▌   | 65/100 [00:46<00:21,  1.62it/s] 66%|██████▌   | 66/100 [00:47<00:20,  1.62it/s] 67%|██████▋   | 67/100 [00:47<00:20,  1.62it/s] 68%|██████▊   | 68/100 [00:48<00:19,  1.63it/s] 69%|██████▉   | 69/100 [00:49<00:18,  1.63it/s] 70%|███████   | 70/100 [00:49<00:18,  1.64it/s] 71%|███████   | 71/100 [00:50<00:17,  1.64it/s] 72%|███████▏  | 72/100 [00:51<00:17,  1.63it/s] 73%|███████▎  | 73/100 [00:51<00:16,  1.63it/s] 74%|███████▍  | 74/100 [00:52<00:16,  1.61it/s] 75%|███████▌  | 75/100 [00:52<00:15,  1.62it/s] 76%|███████▌  | 76/100 [00:56<00:38,  1.60s/it] 77%|███████▋  | 77/100 [00:57<00:30,  1.31s/it] 78%|███████▊  | 78/100 [00:58<00:24,  1.10s/it] 79%|███████▉  | 79/100 [00:58<00:19,  1.05it/s] 80%|████████  | 80/100 [00:59<00:16,  1.18it/s] 81%|████████  | 81/100 [00:59<00:14,  1.29it/s] 82%|████████▏ | 82/100 [01:00<00:13,  1.37it/s] 83%|████████▎ | 83/100 [01:01<00:11,  1.44it/s] 84%|████████▍ | 84/100 [01:01<00:10,  1.48it/s] 85%|████████▌ | 85/100 [01:02<00:09,  1.52it/s] 86%|████████▌ | 86/100 [01:02<00:09,  1.55it/s] 87%|████████▋ | 87/100 [01:03<00:08,  1.57it/s] 88%|████████▊ | 88/100 [01:04<00:07,  1.59it/s] 89%|████████▉ | 89/100 [01:04<00:06,  1.61it/s] 90%|█████████ | 90/100 [01:05<00:06,  1.61it/s] 91%|█████████ | 91/100 [01:06<00:05,  1.61it/s] 92%|█████████▏| 92/100 [01:06<00:04,  1.60it/s] 93%|█████████▎| 93/100 [01:07<00:04,  1.60it/s] 94%|█████████▍| 94/100 [01:07<00:03,  1.59it/s] 95%|█████████▌| 95/100 [01:08<00:03,  1.60it/s] 96%|█████████▌| 96/100 [01:09<00:02,  1.62it/s] 97%|█████████▋| 97/100 [01:09<00:01,  1.62it/s] 98%|█████████▊| 98/100 [01:10<00:01,  1.63it/s] 99%|█████████▉| 99/100 [01:10<00:00,  1.64it/s]100%|██████████| 100/100 [01:11<00:00,  1.63it/s]100%|██████████| 100/100 [01:11<00:00,  1.40it/s]
Number of users per round / total users: 10  /  100
Finished creating FedAvg server.
=== FedPP ===
-------------Round number:  0  -------------
selected users: [26, 86, 2, 55, 75, 93, 16, 73, 54, 95]
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([53, 3, 32, 32]) torch.Size([53])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([53, 3, 32, 32]) torch.Size([53])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 508
Local adapation with distilling: 0.001
training loss: tensor(2.7263) feature loss: tensor(0.5018)
Local adapation with distilling: 0.001
training loss: tensor(2.6274) feature loss: tensor(0.5330)
Local adapation with distilling: 0.001
training loss: tensor(2.7222) feature loss: tensor(0.5059)
Local adapation with distilling: 0.001
training loss: tensor(2.6470) feature loss: tensor(0.5132)
Local adapation with distilling: 0.001
training loss: tensor(2.6566) feature loss: tensor(0.5105)
Local adapation with distilling: 0.001
training loss: tensor(2.6550) feature loss: tensor(0.5143)
Local adapation with distilling: 0.001
training loss: tensor(2.7072) feature loss: tensor(0.5131)
Local adapation with distilling: 0.001
training loss: tensor(2.6715) feature loss: tensor(0.5275)
Local adapation with distilling: 0.001
training loss: tensor(2.8733) feature loss: tensor(0.4903)
Local adapation with distilling: 0.001
training loss: tensor(2.7251) feature loss: tensor(0.5206)
         GM acc on global data: 0.1001 length of data: 10000
-------------Round number:  1  -------------
selected users: [80, 84, 33, 81, 93, 17, 36, 82, 69, 65]
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([53, 3, 32, 32]) torch.Size([53])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([46, 3, 32, 32]) torch.Size([46])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
all data: 494
Local adapation with distilling: 0.000982
training loss: tensor(2.1356) feature loss: tensor(0.6742)
Local adapation with distilling: 0.000982
training loss: tensor(2.2171) feature loss: tensor(0.6730)
Local adapation with distilling: 0.000982
training loss: tensor(2.1199) feature loss: tensor(0.6907)
Local adapation with distilling: 0.000982
training loss: tensor(2.2298) feature loss: tensor(0.6789)
Local adapation with distilling: 0.000982
training loss: tensor(2.1215) feature loss: tensor(0.6021)
Local adapation with distilling: 0.000982
training loss: tensor(2.0556) feature loss: tensor(0.5671)
Local adapation with distilling: 0.000982
training loss: tensor(2.0539) feature loss: tensor(0.6932)
Local adapation with distilling: 0.000982
training loss: tensor(2.2026) feature loss: tensor(0.6615)
Local adapation with distilling: 0.000982
training loss: tensor(2.1938) feature loss: tensor(0.6690)
Local adapation with distilling: 0.000982
training loss: tensor(2.0154) feature loss: tensor(0.6381)
         GM acc on global data: 0.1838 length of data: 10000
-------------Round number:  2  -------------
selected users: [83, 30, 56, 24, 16, 23, 2, 27, 28, 13]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([55, 3, 32, 32]) torch.Size([55])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([53, 3, 32, 32]) torch.Size([53])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.000964
training loss: tensor(1.6951) feature loss: tensor(0.6554)
Local adapation with distilling: 0.000964
training loss: tensor(1.7799) feature loss: tensor(0.6809)
Local adapation with distilling: 0.000964
training loss: tensor(1.6567) feature loss: tensor(0.5604)
Local adapation with distilling: 0.000964
training loss: tensor(1.8309) feature loss: tensor(0.6624)
Local adapation with distilling: 0.000964
training loss: tensor(1.7268) feature loss: tensor(0.5935)
Local adapation with distilling: 0.000964
training loss: tensor(1.7709) feature loss: tensor(0.6865)
Local adapation with distilling: 0.000964
training loss: tensor(1.7309) feature loss: tensor(0.6998)
Local adapation with distilling: 0.000964
training loss: tensor(1.8573) feature loss: tensor(0.6516)
Local adapation with distilling: 0.000964
training loss: tensor(1.7969) feature loss: tensor(0.6561)
Local adapation with distilling: 0.000964
training loss: tensor(1.7303) feature loss: tensor(0.6949)
         GM acc on global data: 0.2576 length of data: 10000
-------------Round number:  3  -------------
selected users: [93, 67, 6, 64, 96, 83, 98, 42, 25, 15]
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
all data: 497
Local adapation with distilling: 0.000946
training loss: tensor(1.5076) feature loss: tensor(0.5769)
Local adapation with distilling: 0.000946
training loss: tensor(1.6162) feature loss: tensor(0.6463)
Local adapation with distilling: 0.000946
training loss: tensor(1.5218) feature loss: tensor(0.5805)
Local adapation with distilling: 0.000946
training loss: tensor(1.5328) feature loss: tensor(0.5907)
Local adapation with distilling: 0.000946
training loss: tensor(1.7912) feature loss: tensor(0.6245)
Local adapation with distilling: 0.000946
training loss: tensor(1.4400) feature loss: tensor(0.5686)
Local adapation with distilling: 0.000946
training loss: tensor(1.4988) feature loss: tensor(0.6292)
Local adapation with distilling: 0.000946
training loss: tensor(1.5876) feature loss: tensor(0.6198)
Local adapation with distilling: 0.000946
training loss: tensor(1.5491) feature loss: tensor(0.6161)
Local adapation with distilling: 0.000946
training loss: tensor(1.6209) feature loss: tensor(0.6280)
         GM acc on global data: 0.2227 length of data: 10000
-------------Round number:  4  -------------
selected users: [20, 10, 96, 16, 63, 24, 53, 97, 41, 47]
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([46, 3, 32, 32]) torch.Size([46])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([53, 3, 32, 32]) torch.Size([53])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([57, 3, 32, 32]) torch.Size([57])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([46, 3, 32, 32]) torch.Size([46])
all data: 493
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.5233) feature loss: tensor(0.6841)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.5213) feature loss: tensor(0.7182)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.7081) feature loss: tensor(0.7158)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.3017) feature loss: tensor(0.5800)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.3632) feature loss: tensor(0.6677)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.2932) feature loss: tensor(0.6069)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.2673) feature loss: tensor(0.6391)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.3475) feature loss: tensor(0.6838)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.4025) feature loss: tensor(0.6169)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.3174) feature loss: tensor(0.6091)
         GM acc on global data: 0.2591 length of data: 10000
-------------Round number:  5  -------------
selected users: [66, 32, 46, 28, 74, 23, 10, 20, 17, 35]
random features: torch.Size([54, 3, 32, 32]) torch.Size([54])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([46, 3, 32, 32]) torch.Size([46])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([53, 3, 32, 32]) torch.Size([53])
random features: torch.Size([53, 3, 32, 32]) torch.Size([53])
all data: 501
Local adapation with distilling: 0.00091
training loss: tensor(1.2727) feature loss: tensor(0.6098)
Local adapation with distilling: 0.00091
training loss: tensor(1.3320) feature loss: tensor(0.5678)
Local adapation with distilling: 0.00091
training loss: tensor(1.3100) feature loss: tensor(0.5933)
Local adapation with distilling: 0.00091
training loss: tensor(1.4642) feature loss: tensor(0.6322)
Local adapation with distilling: 0.00091
training loss: tensor(1.2991) feature loss: tensor(0.5756)
Local adapation with distilling: 0.00091
training loss: tensor(1.3838) feature loss: tensor(0.6815)
Local adapation with distilling: 0.00091
training loss: tensor(1.3787) feature loss: tensor(0.6567)
Local adapation with distilling: 0.00091
training loss: tensor(1.4044) feature loss: tensor(0.6223)
Local adapation with distilling: 0.00091
training loss: tensor(1.2809) feature loss: tensor(0.5686)
Local adapation with distilling: 0.00091
training loss: tensor(1.3453) feature loss: tensor(0.6557)
         GM acc on global data: 0.3498 length of data: 10000
-------------Round number:  6  -------------
selected users: [17, 34, 0, 45, 60, 86, 20, 47, 44, 81]
random features: torch.Size([53, 3, 32, 32]) torch.Size([53])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([53, 3, 32, 32]) torch.Size([53])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([46, 3, 32, 32]) torch.Size([46])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
all data: 491
Local adapation with distilling: 0.000892
training loss: tensor(1.0339) feature loss: tensor(0.4997)
Local adapation with distilling: 0.000892
training loss: tensor(1.1293) feature loss: tensor(0.5150)
Local adapation with distilling: 0.000892
training loss: tensor(1.1422) feature loss: tensor(0.6035)
Local adapation with distilling: 0.000892
training loss: tensor(1.0655) feature loss: tensor(0.4960)
Local adapation with distilling: 0.000892
training loss: tensor(1.1471) feature loss: tensor(0.6403)
Local adapation with distilling: 0.000892
training loss: tensor(1.0923) feature loss: tensor(0.5395)
Local adapation with distilling: 0.000892
training loss: tensor(1.1148) feature loss: tensor(0.5779)
Local adapation with distilling: 0.000892
training loss: tensor(1.0699) feature loss: tensor(0.5576)
Local adapation with distilling: 0.000892
training loss: tensor(1.2652) feature loss: tensor(0.6222)
Local adapation with distilling: 0.000892
training loss: tensor(1.4884) feature loss: tensor(0.6197)
         GM acc on global data: 0.3801 length of data: 10000
-------------Round number:  7  -------------
selected users: [37, 26, 78, 91, 49, 15, 93, 71, 86, 22]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([53, 3, 32, 32]) torch.Size([53])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
all data: 512
Local adapation with distilling: 0.000874
training loss: tensor(1.0532) feature loss: tensor(0.4550)
Local adapation with distilling: 0.000874
training loss: tensor(1.0621) feature loss: tensor(0.5641)
Local adapation with distilling: 0.000874
training loss: tensor(1.0766) feature loss: tensor(0.6016)
Local adapation with distilling: 0.000874
training loss: tensor(1.0665) feature loss: tensor(0.5301)
Local adapation with distilling: 0.000874
training loss: tensor(1.0572) feature loss: tensor(0.5696)
Local adapation with distilling: 0.000874
training loss: tensor(1.1643) feature loss: tensor(0.6018)
Local adapation with distilling: 0.000874
training loss: tensor(1.0447) feature loss: tensor(0.5877)
Local adapation with distilling: 0.000874
training loss: tensor(1.0474) feature loss: tensor(0.5324)
Local adapation with distilling: 0.000874
training loss: tensor(0.9705) feature loss: tensor(0.5200)
Local adapation with distilling: 0.000874
training loss: tensor(1.3321) feature loss: tensor(0.5686)
         GM acc on global data: 0.379 length of data: 10000
-------------Round number:  8  -------------
selected users: [17, 23, 1, 44, 55, 99, 86, 29, 62, 33]
random features: torch.Size([53, 3, 32, 32]) torch.Size([53])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([46, 3, 32, 32]) torch.Size([46])
random features: torch.Size([53, 3, 32, 32]) torch.Size([53])
random features: torch.Size([54, 3, 32, 32]) torch.Size([54])
random features: torch.Size([46, 3, 32, 32]) torch.Size([46])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
all data: 496
Local adapation with distilling: 0.000856
training loss: tensor(0.9175) feature loss: tensor(0.4722)
Local adapation with distilling: 0.000856
training loss: tensor(1.0872) feature loss: tensor(0.6403)
Local adapation with distilling: 0.000856
training loss: tensor(1.0647) feature loss: tensor(0.5152)
Local adapation with distilling: 0.000856
training loss: tensor(1.1229) feature loss: tensor(0.6014)
Local adapation with distilling: 0.000856
training loss: tensor(1.1383) feature loss: tensor(0.6284)
Local adapation with distilling: 0.000856
training loss: tensor(1.0981) feature loss: tensor(0.5965)
Local adapation with distilling: 0.000856
training loss: tensor(0.9139) feature loss: tensor(0.5150)
Local adapation with distilling: 0.000856
training loss: tensor(0.9812) feature loss: tensor(0.4860)
Local adapation with distilling: 0.000856
training loss: tensor(1.1437) feature loss: tensor(0.6462)
Local adapation with distilling: 0.000856
training loss: tensor(1.0995) feature loss: tensor(0.5764)
         GM acc on global data: 0.4344 length of data: 10000
-------------Round number:  9  -------------
selected users: [75, 42, 46, 68, 3, 39, 23, 20, 70, 73]
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([53, 3, 32, 32]) torch.Size([53])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
all data: 497
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.9402) feature loss: tensor(0.4980)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.9695) feature loss: tensor(0.4301)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.8929) feature loss: tensor(0.4311)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.9251) feature loss: tensor(0.4515)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.9897) feature loss: tensor(0.4327)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.9442) feature loss: tensor(0.4338)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.9237) feature loss: tensor(0.5201)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(1.0025) feature loss: tensor(0.4928)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.9608) feature loss: tensor(0.5237)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.9576) feature loss: tensor(0.5224)
         GM acc on global data: 0.4404 length of data: 10000
-------------Round number:  10  -------------
selected users: [19, 14, 43, 37, 66, 3, 79, 41, 38, 68]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([54, 3, 32, 32]) torch.Size([54])
random features: torch.Size([53, 3, 32, 32]) torch.Size([53])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([54, 3, 32, 32]) torch.Size([54])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
all data: 506
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.9003) feature loss: tensor(0.5145)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.8916) feature loss: tensor(0.4835)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.8999) feature loss: tensor(0.4922)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.8700) feature loss: tensor(0.4199)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.8635) feature loss: tensor(0.4968)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.8389) feature loss: tensor(0.4636)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(1.0153) feature loss: tensor(0.4986)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.9109) feature loss: tensor(0.4590)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.8477) feature loss: tensor(0.4693)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.8375) feature loss: tensor(0.4844)
         GM acc on global data: 0.4128 length of data: 10000
-------------Round number:  11  -------------
selected users: [46, 49, 22, 58, 41, 98, 62, 29, 30, 51]
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([46, 3, 32, 32]) torch.Size([46])
random features: torch.Size([54, 3, 32, 32]) torch.Size([54])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
all data: 491
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.8301) feature loss: tensor(0.4602)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.8285) feature loss: tensor(0.5136)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(1.0693) feature loss: tensor(0.4710)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.8548) feature loss: tensor(0.4732)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.8647) feature loss: tensor(0.4323)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.9165) feature loss: tensor(0.4978)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.9166) feature loss: tensor(0.5304)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.8274) feature loss: tensor(0.4358)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.9423) feature loss: tensor(0.5166)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.8905) feature loss: tensor(0.4956)
         GM acc on global data: 0.4369 length of data: 10000
-------------Round number:  12  -------------
selected users: [17, 41, 92, 14, 68, 31, 89, 15, 21, 60]
random features: torch.Size([53, 3, 32, 32]) torch.Size([53])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([46, 3, 32, 32]) torch.Size([46])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([54, 3, 32, 32]) torch.Size([54])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
all data: 494
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.7360) feature loss: tensor(0.3753)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.7142) feature loss: tensor(0.3886)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.8903) feature loss: tensor(0.4542)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.7738) feature loss: tensor(0.4211)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.7589) feature loss: tensor(0.4194)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.8957) feature loss: tensor(0.4173)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.7769) feature loss: tensor(0.3732)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.8935) feature loss: tensor(0.4615)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.8422) feature loss: tensor(0.4550)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.8705) feature loss: tensor(0.4523)
         GM acc on global data: 0.4826 length of data: 10000
-------------Round number:  13  -------------
selected users: [37, 62, 83, 14, 43, 9, 44, 31, 69, 57]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([46, 3, 32, 32]) torch.Size([46])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 489
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.6947) feature loss: tensor(0.3440)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.7464) feature loss: tensor(0.4221)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.7666) feature loss: tensor(0.4124)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.6859) feature loss: tensor(0.4071)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.7269) feature loss: tensor(0.4369)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.8439) feature loss: tensor(0.4139)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.7979) feature loss: tensor(0.4195)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.8020) feature loss: tensor(0.3705)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.7378) feature loss: tensor(0.4203)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.7485) feature loss: tensor(0.3569)
         GM acc on global data: 0.4807 length of data: 10000
-------------Round number:  14  -------------
selected users: [24, 39, 35, 44, 55, 70, 82, 40, 91, 65]
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([53, 3, 32, 32]) torch.Size([53])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([46, 3, 32, 32]) torch.Size([46])
random features: torch.Size([46, 3, 32, 32]) torch.Size([46])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
all data: 489
Local adapation with distilling: 0.000748
training loss: tensor(0.8829) feature loss: tensor(0.4654)
Local adapation with distilling: 0.000748
training loss: tensor(0.9386) feature loss: tensor(0.4870)
Local adapation with distilling: 0.000748
training loss: tensor(0.9724) feature loss: tensor(0.5055)
Local adapation with distilling: 0.000748
training loss: tensor(0.8777) feature loss: tensor(0.5409)
Local adapation with distilling: 0.000748
training loss: tensor(0.8884) feature loss: tensor(0.5841)
Local adapation with distilling: 0.000748
training loss: tensor(0.8698) feature loss: tensor(0.5746)
Local adapation with distilling: 0.000748
training loss: tensor(0.8926) feature loss: tensor(0.5458)
Local adapation with distilling: 0.000748
training loss: tensor(0.9315) feature loss: tensor(0.4988)
Local adapation with distilling: 0.000748
training loss: tensor(0.9185) feature loss: tensor(0.5291)
Local adapation with distilling: 0.000748
training loss: tensor(0.8660) feature loss: tensor(0.5836)
         GM acc on global data: 0.507 length of data: 10000
-------------Round number:  15  -------------
selected users: [84, 36, 57, 51, 46, 78, 93, 14, 11, 59]
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([53, 3, 32, 32]) torch.Size([53])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
all data: 504
Local adapation with distilling: 0.00073
training loss: tensor(0.8392) feature loss: tensor(0.4213)
Local adapation with distilling: 0.00073
training loss: tensor(0.7646) feature loss: tensor(0.4124)
Local adapation with distilling: 0.00073
training loss: tensor(0.7714) feature loss: tensor(0.3768)
Local adapation with distilling: 0.00073
training loss: tensor(0.7551) feature loss: tensor(0.4249)
Local adapation with distilling: 0.00073
training loss: tensor(0.7102) feature loss: tensor(0.3918)
Local adapation with distilling: 0.00073
training loss: tensor(0.7944) feature loss: tensor(0.4310)
Local adapation with distilling: 0.00073
training loss: tensor(0.8454) feature loss: tensor(0.4501)
Local adapation with distilling: 0.00073
training loss: tensor(0.7046) feature loss: tensor(0.4493)
Local adapation with distilling: 0.00073
training loss: tensor(0.8399) feature loss: tensor(0.3995)
Local adapation with distilling: 0.00073
training loss: tensor(0.8614) feature loss: tensor(0.3814)
         GM acc on global data: 0.516 length of data: 10000
-------------Round number:  16  -------------
selected users: [7, 25, 71, 42, 47, 29, 63, 88, 50, 9]
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([46, 3, 32, 32]) torch.Size([46])
random features: torch.Size([54, 3, 32, 32]) torch.Size([54])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
all data: 492
Local adapation with distilling: 0.000712
training loss: tensor(0.7395) feature loss: tensor(0.3686)
Local adapation with distilling: 0.000712
training loss: tensor(0.7343) feature loss: tensor(0.3587)
Local adapation with distilling: 0.000712
training loss: tensor(0.7301) feature loss: tensor(0.3538)
Local adapation with distilling: 0.000712
training loss: tensor(0.7855) feature loss: tensor(0.3561)
Local adapation with distilling: 0.000712
training loss: tensor(0.7046) feature loss: tensor(0.4107)
Local adapation with distilling: 0.000712
training loss: tensor(0.7138) feature loss: tensor(0.3648)
Local adapation with distilling: 0.000712
training loss: tensor(0.7357) feature loss: tensor(0.4150)
Local adapation with distilling: 0.000712
training loss: tensor(0.7551) feature loss: tensor(0.4206)
Local adapation with distilling: 0.000712
training loss: tensor(0.7813) feature loss: tensor(0.4255)
Local adapation with distilling: 0.000712
training loss: tensor(0.9757) feature loss: tensor(0.3903)
         GM acc on global data: 0.5095 length of data: 10000
-------------Round number:  17  -------------
selected users: [71, 28, 9, 4, 73, 34, 94, 92, 47, 37]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([46, 3, 32, 32]) torch.Size([46])
random features: torch.Size([46, 3, 32, 32]) torch.Size([46])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 492
Local adapation with distilling: 0.000694
training loss: tensor(0.5962) feature loss: tensor(0.3148)
Local adapation with distilling: 0.000694
training loss: tensor(0.7718) feature loss: tensor(0.3784)
Local adapation with distilling: 0.000694
training loss: tensor(0.8596) feature loss: tensor(0.3577)
Local adapation with distilling: 0.000694
training loss: tensor(0.7076) feature loss: tensor(0.3160)
Local adapation with distilling: 0.000694
training loss: tensor(0.7526) feature loss: tensor(0.3871)
Local adapation with distilling: 0.000694
training loss: tensor(0.6552) feature loss: tensor(0.3160)
Local adapation with distilling: 0.000694
training loss: tensor(0.6783) feature loss: tensor(0.3163)
Local adapation with distilling: 0.000694
training loss: tensor(0.7618) feature loss: tensor(0.3912)
Local adapation with distilling: 0.000694
training loss: tensor(0.6213) feature loss: tensor(0.3584)
Local adapation with distilling: 0.000694
training loss: tensor(0.6219) feature loss: tensor(0.3138)
         GM acc on global data: 0.4991 length of data: 10000
-------------Round number:  18  -------------
selected users: [53, 47, 43, 54, 33, 48, 0, 12, 44, 91]
random features: torch.Size([57, 3, 32, 32]) torch.Size([57])
random features: torch.Size([46, 3, 32, 32]) torch.Size([46])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
all data: 495
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.7553) feature loss: tensor(0.3918)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.6820) feature loss: tensor(0.4150)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.7070) feature loss: tensor(0.4598)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.7961) feature loss: tensor(0.3597)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.7575) feature loss: tensor(0.4434)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.8326) feature loss: tensor(0.4328)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.7650) feature loss: tensor(0.4066)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.8087) feature loss: tensor(0.4528)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.7447) feature loss: tensor(0.4225)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.7553) feature loss: tensor(0.3781)
         GM acc on global data: 0.5192 length of data: 10000
-------------Round number:  19  -------------
selected users: [85, 72, 16, 18, 2, 38, 90, 30, 83, 61]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([57, 3, 32, 32]) torch.Size([57])
random features: torch.Size([53, 3, 32, 32]) torch.Size([53])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([54, 3, 32, 32]) torch.Size([54])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 505
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.7009) feature loss: tensor(0.3761)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.6876) feature loss: tensor(0.4629)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.7414) feature loss: tensor(0.3415)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.8185) feature loss: tensor(0.3901)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.7673) feature loss: tensor(0.4116)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.6976) feature loss: tensor(0.4469)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.7881) feature loss: tensor(0.4292)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.7580) feature loss: tensor(0.4324)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.7465) feature loss: tensor(0.4436)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.7029) feature loss: tensor(0.3427)
         GM acc on global data: 0.5306 length of data: 10000
-------------Round number:  20  -------------
selected users: [70, 74, 2, 44, 56, 48, 12, 36, 0, 49]
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([55, 3, 32, 32]) torch.Size([55])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
all data: 489
Local adapation with distilling: 0.00064
training loss: tensor(0.6566) feature loss: tensor(0.4035)
Local adapation with distilling: 0.00064
training loss: tensor(0.6212) feature loss: tensor(0.3475)
Local adapation with distilling: 0.00064
training loss: tensor(0.6153) feature loss: tensor(0.3917)
Local adapation with distilling: 0.00064
training loss: tensor(0.6415) feature loss: tensor(0.3654)
Local adapation with distilling: 0.00064
training loss: tensor(0.6057) feature loss: tensor(0.3318)
Local adapation with distilling: 0.00064
training loss: tensor(0.6558) feature loss: tensor(0.3674)
Local adapation with distilling: 0.00064
training loss: tensor(0.6358) feature loss: tensor(0.3844)
Local adapation with distilling: 0.00064
training loss: tensor(0.6018) feature loss: tensor(0.3909)
Local adapation with distilling: 0.00064
training loss: tensor(0.6042) feature loss: tensor(0.3669)
Local adapation with distilling: 0.00064
training loss: tensor(0.6386) feature loss: tensor(0.3922)
         GM acc on global data: 0.5305 length of data: 10000
-------------Round number:  21  -------------
selected users: [23, 81, 85, 34, 62, 46, 42, 31, 93, 11]
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([46, 3, 32, 32]) torch.Size([46])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([53, 3, 32, 32]) torch.Size([53])
all data: 494
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.7241) feature loss: tensor(0.3970)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(1.1683) feature loss: tensor(0.3906)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.6518) feature loss: tensor(0.3576)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.7038) feature loss: tensor(0.3354)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.7120) feature loss: tensor(0.4061)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.6206) feature loss: tensor(0.3563)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.7172) feature loss: tensor(0.3154)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.7867) feature loss: tensor(0.3552)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.7205) feature loss: tensor(0.3811)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.6949) feature loss: tensor(0.3610)
         GM acc on global data: 0.5651 length of data: 10000
-------------Round number:  22  -------------
selected users: [2, 49, 82, 31, 37, 12, 87, 42, 99, 85]
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([46, 3, 32, 32]) torch.Size([46])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([46, 3, 32, 32]) torch.Size([46])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 479
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.5528) feature loss: tensor(0.3307)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.5580) feature loss: tensor(0.3418)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.6093) feature loss: tensor(0.3774)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.5954) feature loss: tensor(0.2836)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.5697) feature loss: tensor(0.2802)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.5719) feature loss: tensor(0.3721)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.6623) feature loss: tensor(0.3779)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.5709) feature loss: tensor(0.3095)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.5793) feature loss: tensor(0.3401)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.5534) feature loss: tensor(0.3480)
         GM acc on global data: 0.5676 length of data: 10000
-------------Round number:  23  -------------
selected users: [26, 80, 82, 68, 77, 37, 3, 55, 20, 17]
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([46, 3, 32, 32]) torch.Size([46])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([46, 3, 32, 32]) torch.Size([46])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([53, 3, 32, 32]) torch.Size([53])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([53, 3, 32, 32]) torch.Size([53])
all data: 494
Local adapation with distilling: 0.000586
training loss: tensor(0.6118) feature loss: tensor(0.3465)
Local adapation with distilling: 0.000586
training loss: tensor(0.6675) feature loss: tensor(0.3803)
Local adapation with distilling: 0.000586
training loss: tensor(0.6317) feature loss: tensor(0.3282)
Local adapation with distilling: 0.000586
training loss: tensor(0.6003) feature loss: tensor(0.3149)
Local adapation with distilling: 0.000586
training loss: tensor(0.6711) feature loss: tensor(0.3490)
Local adapation with distilling: 0.000586
training loss: tensor(0.5590) feature loss: tensor(0.2980)
Local adapation with distilling: 0.000586
training loss: tensor(0.6854) feature loss: tensor(0.3152)
Local adapation with distilling: 0.000586
training loss: tensor(0.6393) feature loss: tensor(0.3656)
Local adapation with distilling: 0.000586
training loss: tensor(0.6723) feature loss: tensor(0.3459)
Local adapation with distilling: 0.000586
training loss: tensor(0.6249) feature loss: tensor(0.3124)
         GM acc on global data: 0.568 length of data: 10000
-------------Round number:  24  -------------
selected users: [26, 31, 37, 86, 76, 14, 88, 48, 71, 67]
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([53, 3, 32, 32]) torch.Size([53])
random features: torch.Size([53, 3, 32, 32]) torch.Size([53])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
all data: 497
Local adapation with distilling: 0.000568
training loss: tensor(0.5131) feature loss: tensor(0.3206)
Local adapation with distilling: 0.000568
training loss: tensor(0.5876) feature loss: tensor(0.3005)
Local adapation with distilling: 0.000568
training loss: tensor(0.4576) feature loss: tensor(0.2662)
Local adapation with distilling: 0.000568
training loss: tensor(0.5606) feature loss: tensor(0.2854)
Local adapation with distilling: 0.000568
training loss: tensor(0.6331) feature loss: tensor(0.2785)
Local adapation with distilling: 0.000568
training loss: tensor(0.5487) feature loss: tensor(0.3299)
Local adapation with distilling: 0.000568
training loss: tensor(0.5360) feature loss: tensor(0.3316)
Local adapation with distilling: 0.000568
training loss: tensor(0.5704) feature loss: tensor(0.3125)
Local adapation with distilling: 0.000568
training loss: tensor(0.5456) feature loss: tensor(0.2759)
Local adapation with distilling: 0.000568
training loss: tensor(0.5773) feature loss: tensor(0.2773)
         GM acc on global data: 0.5598 length of data: 10000
-------------Round number:  25  -------------
selected users: [41, 29, 33, 65, 74, 6, 57, 89, 87, 98]
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([54, 3, 32, 32]) torch.Size([54])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([54, 3, 32, 32]) torch.Size([54])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
all data: 497
Local adapation with distilling: 0.00055
training loss: tensor(0.5394) feature loss: tensor(0.2568)
Local adapation with distilling: 0.00055
training loss: tensor(0.5499) feature loss: tensor(0.2555)
Local adapation with distilling: 0.00055
training loss: tensor(0.6036) feature loss: tensor(0.3170)
Local adapation with distilling: 0.00055
training loss: tensor(0.6118) feature loss: tensor(0.3210)
Local adapation with distilling: 0.00055
training loss: tensor(0.5515) feature loss: tensor(0.3079)
Local adapation with distilling: 0.00055
training loss: tensor(0.6345) feature loss: tensor(0.2750)
Local adapation with distilling: 0.00055
training loss: tensor(0.5354) feature loss: tensor(0.2507)
Local adapation with distilling: 0.00055
training loss: tensor(0.5849) feature loss: tensor(0.2811)
Local adapation with distilling: 0.00055
training loss: tensor(0.6271) feature loss: tensor(0.3176)
Local adapation with distilling: 0.00055
training loss: tensor(0.5703) feature loss: tensor(0.2925)
         GM acc on global data: 0.5544 length of data: 10000
-------------Round number:  26  -------------
selected users: [8, 69, 84, 41, 25, 5, 63, 95, 33, 70]
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
all data: 489
Local adapation with distilling: 0.000532
training loss: tensor(0.6386) feature loss: tensor(0.3726)
Local adapation with distilling: 0.000532
training loss: tensor(0.6707) feature loss: tensor(0.3803)
Local adapation with distilling: 0.000532
training loss: tensor(0.6732) feature loss: tensor(0.3647)
Local adapation with distilling: 0.000532
training loss: tensor(0.5732) feature loss: tensor(0.3036)
Local adapation with distilling: 0.000532
training loss: tensor(0.6885) feature loss: tensor(0.3136)
Local adapation with distilling: 0.000532
training loss: tensor(0.7518) feature loss: tensor(0.3252)
Local adapation with distilling: 0.000532
training loss: tensor(0.6409) feature loss: tensor(0.3448)
Local adapation with distilling: 0.000532
training loss: tensor(0.6874) feature loss: tensor(0.3323)
Local adapation with distilling: 0.000532
training loss: tensor(0.6152) feature loss: tensor(0.3617)
Local adapation with distilling: 0.000532
training loss: tensor(0.6348) feature loss: tensor(0.4052)
         GM acc on global data: 0.5883 length of data: 10000
-------------Round number:  27  -------------
selected users: [89, 68, 43, 50, 40, 95, 27, 85, 22, 44]
random features: torch.Size([54, 3, 32, 32]) torch.Size([54])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([46, 3, 32, 32]) torch.Size([46])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
all data: 495
Local adapation with distilling: 0.000514
training loss: tensor(0.5309) feature loss: tensor(0.2577)
Local adapation with distilling: 0.000514
training loss: tensor(0.5503) feature loss: tensor(0.2837)
Local adapation with distilling: 0.000514
training loss: tensor(0.5322) feature loss: tensor(0.3025)
Local adapation with distilling: 0.000514
training loss: tensor(0.5580) feature loss: tensor(0.2948)
Local adapation with distilling: 0.000514
training loss: tensor(0.5727) feature loss: tensor(0.3032)
Local adapation with distilling: 0.000514
training loss: tensor(0.5405) feature loss: tensor(0.2607)
Local adapation with distilling: 0.000514
training loss: tensor(0.6345) feature loss: tensor(0.2623)
Local adapation with distilling: 0.000514
training loss: tensor(0.5164) feature loss: tensor(0.2942)
Local adapation with distilling: 0.000514
training loss: tensor(0.8536) feature loss: tensor(0.2863)
Local adapation with distilling: 0.000514
training loss: tensor(0.5819) feature loss: tensor(0.2876)
         GM acc on global data: 0.5849 length of data: 10000
-------------Round number:  28  -------------
selected users: [67, 14, 0, 86, 13, 18, 30, 36, 52, 95]
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([53, 3, 32, 32]) torch.Size([53])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 495
Local adapation with distilling: 0.000496
training loss: tensor(0.5214) feature loss: tensor(0.2389)
Local adapation with distilling: 0.000496
training loss: tensor(0.4813) feature loss: tensor(0.2685)
Local adapation with distilling: 0.000496
training loss: tensor(0.5175) feature loss: tensor(0.2701)
Local adapation with distilling: 0.000496
training loss: tensor(0.5091) feature loss: tensor(0.2556)
Local adapation with distilling: 0.000496
training loss: tensor(0.5383) feature loss: tensor(0.2595)
Local adapation with distilling: 0.000496
training loss: tensor(0.5803) feature loss: tensor(0.2748)
Local adapation with distilling: 0.000496
training loss: tensor(0.5467) feature loss: tensor(0.3072)
Local adapation with distilling: 0.000496
training loss: tensor(0.4851) feature loss: tensor(0.2949)
Local adapation with distilling: 0.000496
training loss: tensor(0.8673) feature loss: tensor(0.2879)
Local adapation with distilling: 0.000496
training loss: tensor(0.4872) feature loss: tensor(0.2333)
         GM acc on global data: 0.5991 length of data: 10000
-------------Round number:  29  -------------
selected users: [73, 8, 10, 7, 19, 71, 92, 25, 38, 12]
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([46, 3, 32, 32]) torch.Size([46])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([46, 3, 32, 32]) torch.Size([46])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([54, 3, 32, 32]) torch.Size([54])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
all data: 491
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.6245) feature loss: tensor(0.3294)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.5944) feature loss: tensor(0.3213)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.6521) feature loss: tensor(0.3641)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.6321) feature loss: tensor(0.2734)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.6304) feature loss: tensor(0.2784)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.5456) feature loss: tensor(0.2965)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.6845) feature loss: tensor(0.3284)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.5699) feature loss: tensor(0.2843)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.5753) feature loss: tensor(0.3119)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.5962) feature loss: tensor(0.3369)
         GM acc on global data: 0.6068 length of data: 10000
-------------Round number:  30  -------------
selected users: [20, 91, 34, 52, 8, 74, 21, 88, 80, 89]
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([54, 3, 32, 32]) torch.Size([54])
all data: 490
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.5058) feature loss: tensor(0.2449)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.5153) feature loss: tensor(0.2270)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.4462) feature loss: tensor(0.2284)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.7206) feature loss: tensor(0.2870)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.4646) feature loss: tensor(0.2577)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.4456) feature loss: tensor(0.2823)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.4626) feature loss: tensor(0.2684)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.4417) feature loss: tensor(0.2658)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.4933) feature loss: tensor(0.2965)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.4666) feature loss: tensor(0.2485)
         GM acc on global data: 0.5982 length of data: 10000
-------------Round number:  31  -------------
selected users: [17, 33, 76, 3, 56, 0, 37, 8, 60, 67]
random features: torch.Size([53, 3, 32, 32]) torch.Size([53])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([53, 3, 32, 32]) torch.Size([53])
random features: torch.Size([53, 3, 32, 32]) torch.Size([53])
random features: torch.Size([55, 3, 32, 32]) torch.Size([55])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
all data: 504
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.5165) feature loss: tensor(0.2537)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.4855) feature loss: tensor(0.2720)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.5528) feature loss: tensor(0.2256)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.5371) feature loss: tensor(0.2413)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.5026) feature loss: tensor(0.2317)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.4964) feature loss: tensor(0.2913)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.4582) feature loss: tensor(0.2315)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.4619) feature loss: tensor(0.2837)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.5615) feature loss: tensor(0.2707)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.4853) feature loss: tensor(0.2307)
         GM acc on global data: 0.5853 length of data: 10000
-------------Round number:  32  -------------
selected users: [22, 39, 85, 97, 55, 33, 80, 13, 27, 96]
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
all data: 492
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(1.0406) feature loss: tensor(0.3054)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.6718) feature loss: tensor(0.3096)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.5802) feature loss: tensor(0.3333)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.6541) feature loss: tensor(0.3472)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.6296) feature loss: tensor(0.3105)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.5403) feature loss: tensor(0.3129)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.5782) feature loss: tensor(0.3079)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.5572) feature loss: tensor(0.3200)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.6337) feature loss: tensor(0.2661)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.9075) feature loss: tensor(0.3437)
         GM acc on global data: 0.6108 length of data: 10000
-------------Round number:  33  -------------
selected users: [56, 90, 95, 82, 60, 71, 6, 81, 2, 70]
random features: torch.Size([55, 3, 32, 32]) torch.Size([55])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([46, 3, 32, 32]) torch.Size([46])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
all data: 495
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.4615) feature loss: tensor(0.2608)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.5607) feature loss: tensor(0.3537)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.4659) feature loss: tensor(0.2617)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.5264) feature loss: tensor(0.3633)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.5000) feature loss: tensor(0.3416)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.4581) feature loss: tensor(0.2729)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.5800) feature loss: tensor(0.2745)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.9162) feature loss: tensor(0.3277)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.5102) feature loss: tensor(0.3031)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.4930) feature loss: tensor(0.3252)
         GM acc on global data: 0.5909 length of data: 10000
-------------Round number:  34  -------------
selected users: [14, 74, 15, 4, 32, 59, 91, 10, 50, 53]
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([46, 3, 32, 32]) torch.Size([46])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([57, 3, 32, 32]) torch.Size([57])
all data: 501
Local adapation with distilling: 0.000388
training loss: tensor(0.5908) feature loss: tensor(0.3534)
Local adapation with distilling: 0.000388
training loss: tensor(0.5765) feature loss: tensor(0.3353)
Local adapation with distilling: 0.000388
training loss: tensor(0.6972) feature loss: tensor(0.3814)
Local adapation with distilling: 0.000388
training loss: tensor(0.6707) feature loss: tensor(0.3206)
Local adapation with distilling: 0.000388
training loss: tensor(0.7419) feature loss: tensor(0.3238)
Local adapation with distilling: 0.000388
training loss: tensor(0.7175) feature loss: tensor(0.3146)
Local adapation with distilling: 0.000388
training loss: tensor(0.5835) feature loss: tensor(0.2839)
Local adapation with distilling: 0.000388
training loss: tensor(0.6777) feature loss: tensor(0.3546)
Local adapation with distilling: 0.000388
training loss: tensor(0.5895) feature loss: tensor(0.3191)
Local adapation with distilling: 0.000388
training loss: tensor(0.6393) feature loss: tensor(0.3256)
         GM acc on global data: 0.6137 length of data: 10000
-------------Round number:  35  -------------
selected users: [40, 71, 98, 27, 70, 31, 10, 24, 51, 35]
random features: torch.Size([46, 3, 32, 32]) torch.Size([46])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([46, 3, 32, 32]) torch.Size([46])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([53, 3, 32, 32]) torch.Size([53])
all data: 484
Local adapation with distilling: 0.00037
training loss: tensor(0.5269) feature loss: tensor(0.2568)
Local adapation with distilling: 0.00037
training loss: tensor(0.4296) feature loss: tensor(0.2290)
Local adapation with distilling: 0.00037
training loss: tensor(0.4786) feature loss: tensor(0.2692)
Local adapation with distilling: 0.00037
training loss: tensor(0.4956) feature loss: tensor(0.2043)
Local adapation with distilling: 0.00037
training loss: tensor(0.4682) feature loss: tensor(0.2819)
Local adapation with distilling: 0.00037
training loss: tensor(0.4911) feature loss: tensor(0.2386)
Local adapation with distilling: 0.00037
training loss: tensor(0.4878) feature loss: tensor(0.2873)
Local adapation with distilling: 0.00037
training loss: tensor(0.5543) feature loss: tensor(0.2468)
Local adapation with distilling: 0.00037
training loss: tensor(0.4798) feature loss: tensor(0.2552)
Local adapation with distilling: 0.00037
training loss: tensor(0.5627) feature loss: tensor(0.2241)
         GM acc on global data: 0.6077 length of data: 10000
-------------Round number:  36  -------------
selected users: [59, 42, 2, 27, 28, 75, 58, 68, 52, 74]
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
all data: 493
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.5580) feature loss: tensor(0.2345)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.5521) feature loss: tensor(0.2312)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.5009) feature loss: tensor(0.2488)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.5115) feature loss: tensor(0.2185)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.8152) feature loss: tensor(0.2738)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.5321) feature loss: tensor(0.2574)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.5469) feature loss: tensor(0.2984)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.5408) feature loss: tensor(0.2776)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.6339) feature loss: tensor(0.2615)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.4611) feature loss: tensor(0.2458)
         GM acc on global data: 0.6246 length of data: 10000
-------------Round number:  37  -------------
selected users: [61, 49, 86, 78, 5, 91, 81, 82, 89, 18]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([53, 3, 32, 32]) torch.Size([53])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([46, 3, 32, 32]) torch.Size([46])
random features: torch.Size([54, 3, 32, 32]) torch.Size([54])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
all data: 507
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.5012) feature loss: tensor(0.2428)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.5051) feature loss: tensor(0.2818)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.4743) feature loss: tensor(0.2479)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.5470) feature loss: tensor(0.3003)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.5716) feature loss: tensor(0.2208)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.4580) feature loss: tensor(0.2171)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.8127) feature loss: tensor(0.3000)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.5021) feature loss: tensor(0.2896)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.4781) feature loss: tensor(0.2296)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.5551) feature loss: tensor(0.2603)
         GM acc on global data: 0.6327 length of data: 10000
-------------Round number:  38  -------------
selected users: [40, 73, 49, 45, 64, 16, 69, 17, 72, 66]
random features: torch.Size([46, 3, 32, 32]) torch.Size([46])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([53, 3, 32, 32]) torch.Size([53])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([53, 3, 32, 32]) torch.Size([53])
random features: torch.Size([57, 3, 32, 32]) torch.Size([57])
random features: torch.Size([54, 3, 32, 32]) torch.Size([54])
all data: 512
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.5474) feature loss: tensor(0.2543)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.5459) feature loss: tensor(0.3206)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.4906) feature loss: tensor(0.2751)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.5174) feature loss: tensor(0.2190)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.6551) feature loss: tensor(0.2156)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.5395) feature loss: tensor(0.2292)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.5263) feature loss: tensor(0.2619)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.4846) feature loss: tensor(0.2308)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.4875) feature loss: tensor(0.2711)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.5381) feature loss: tensor(0.2430)
         GM acc on global data: 0.6213 length of data: 10000
-------------Round number:  39  -------------
selected users: [22, 53, 84, 57, 87, 58, 29, 21, 85, 79]
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([57, 3, 32, 32]) torch.Size([57])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([54, 3, 32, 32]) torch.Size([54])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
all data: 503
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.5909) feature loss: tensor(0.2548)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.5088) feature loss: tensor(0.2309)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.5666) feature loss: tensor(0.2977)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.5463) feature loss: tensor(0.2237)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.5506) feature loss: tensor(0.3070)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.5129) feature loss: tensor(0.2829)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.4917) feature loss: tensor(0.2243)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.5568) feature loss: tensor(0.2802)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.5272) feature loss: tensor(0.2727)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.5912) feature loss: tensor(0.2384)
         GM acc on global data: 0.6308 length of data: 10000
-------------Round number:  40  -------------
selected users: [79, 75, 63, 15, 38, 11, 40, 45, 39, 62]
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([54, 3, 32, 32]) torch.Size([54])
random features: torch.Size([53, 3, 32, 32]) torch.Size([53])
random features: torch.Size([46, 3, 32, 32]) torch.Size([46])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([46, 3, 32, 32]) torch.Size([46])
all data: 498
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.4477) feature loss: tensor(0.1989)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.4595) feature loss: tensor(0.2451)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.4749) feature loss: tensor(0.2385)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.5211) feature loss: tensor(0.2465)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.4447) feature loss: tensor(0.2441)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.4837) feature loss: tensor(0.2060)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.4523) feature loss: tensor(0.2381)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.4557) feature loss: tensor(0.2031)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.4621) feature loss: tensor(0.2197)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.5450) feature loss: tensor(0.2495)
         GM acc on global data: 0.6248 length of data: 10000
-------------Round number:  41  -------------
selected users: [42, 94, 37, 6, 79, 32, 24, 0, 33, 93]
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
all data: 495
Local adapation with distilling: 0.000262
training loss: tensor(0.5553) feature loss: tensor(0.2512)
Local adapation with distilling: 0.000262
training loss: tensor(0.5959) feature loss: tensor(0.2227)
Local adapation with distilling: 0.000262
training loss: tensor(0.4900) feature loss: tensor(0.2171)
Local adapation with distilling: 0.000262
training loss: tensor(0.5832) feature loss: tensor(0.2340)
Local adapation with distilling: 0.000262
training loss: tensor(0.4854) feature loss: tensor(0.2424)
Local adapation with distilling: 0.000262
training loss: tensor(0.6203) feature loss: tensor(0.2185)
Local adapation with distilling: 0.000262
training loss: tensor(0.5387) feature loss: tensor(0.2297)
Local adapation with distilling: 0.000262
training loss: tensor(0.5089) feature loss: tensor(0.2540)
Local adapation with distilling: 0.000262
training loss: tensor(0.4919) feature loss: tensor(0.2736)
Local adapation with distilling: 0.000262
training loss: tensor(0.5858) feature loss: tensor(0.2700)
         GM acc on global data: 0.6309 length of data: 10000
-------------Round number:  42  -------------
selected users: [83, 53, 70, 45, 44, 39, 22, 80, 10, 0]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([57, 3, 32, 32]) torch.Size([57])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([46, 3, 32, 32]) torch.Size([46])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
all data: 497
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.4582) feature loss: tensor(0.2193)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.3736) feature loss: tensor(0.1716)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.3919) feature loss: tensor(0.2087)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.4002) feature loss: tensor(0.1834)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.4408) feature loss: tensor(0.2124)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.4060) feature loss: tensor(0.1763)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.6906) feature loss: tensor(0.1719)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.4191) feature loss: tensor(0.2128)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.4264) feature loss: tensor(0.2064)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.3900) feature loss: tensor(0.2122)
         GM acc on global data: 0.6271 length of data: 10000
-------------Round number:  43  -------------
selected users: [20, 2, 15, 22, 57, 91, 69, 55, 11, 79]
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([53, 3, 32, 32]) torch.Size([53])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
all data: 498
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.4853) feature loss: tensor(0.2098)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.4027) feature loss: tensor(0.1979)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.4282) feature loss: tensor(0.2307)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.5790) feature loss: tensor(0.1835)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.4641) feature loss: tensor(0.1778)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.4190) feature loss: tensor(0.1759)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.4314) feature loss: tensor(0.2220)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.4294) feature loss: tensor(0.1955)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.4271) feature loss: tensor(0.1781)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.3944) feature loss: tensor(0.1738)
         GM acc on global data: 0.6302 length of data: 10000
-------------Round number:  44  -------------
selected users: [42, 54, 27, 93, 39, 65, 7, 26, 24, 60]
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
all data: 495
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.4596) feature loss: tensor(0.2020)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.5813) feature loss: tensor(0.2126)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.4757) feature loss: tensor(0.1999)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.5361) feature loss: tensor(0.2681)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.4044) feature loss: tensor(0.2110)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.4730) feature loss: tensor(0.2329)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.5409) feature loss: tensor(0.2353)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.4691) feature loss: tensor(0.2568)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.4682) feature loss: tensor(0.2223)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.4772) feature loss: tensor(0.2412)
         GM acc on global data: 0.6347 length of data: 10000
-------------Round number:  45  -------------
selected users: [0, 1, 62, 76, 37, 99, 78, 38, 2, 84]
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([46, 3, 32, 32]) torch.Size([46])
random features: torch.Size([53, 3, 32, 32]) torch.Size([53])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([46, 3, 32, 32]) torch.Size([46])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([54, 3, 32, 32]) torch.Size([54])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
all data: 498
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.4342) feature loss: tensor(0.2507)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.5218) feature loss: tensor(0.1980)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.5288) feature loss: tensor(0.2432)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.5465) feature loss: tensor(0.2021)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.4250) feature loss: tensor(0.1912)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.5082) feature loss: tensor(0.2305)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.5369) feature loss: tensor(0.2535)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.4578) feature loss: tensor(0.2500)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.4457) feature loss: tensor(0.2284)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.5093) feature loss: tensor(0.2359)
         GM acc on global data: 0.6465 length of data: 10000
-------------Round number:  46  -------------
selected users: [71, 33, 37, 10, 44, 34, 24, 98, 73, 95]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([46, 3, 32, 32]) torch.Size([46])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 487
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.3445) feature loss: tensor(0.1677)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.3595) feature loss: tensor(0.1928)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.3307) feature loss: tensor(0.1562)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.3772) feature loss: tensor(0.1736)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.4107) feature loss: tensor(0.1861)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.4022) feature loss: tensor(0.1568)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.3707) feature loss: tensor(0.1571)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.3962) feature loss: tensor(0.2033)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.4352) feature loss: tensor(0.2144)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.3779) feature loss: tensor(0.1590)
         GM acc on global data: 0.6486 length of data: 10000
-------------Round number:  47  -------------
selected users: [17, 90, 94, 86, 63, 5, 38, 14, 40, 47]
random features: torch.Size([53, 3, 32, 32]) torch.Size([53])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([53, 3, 32, 32]) torch.Size([53])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([54, 3, 32, 32]) torch.Size([54])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([46, 3, 32, 32]) torch.Size([46])
random features: torch.Size([46, 3, 32, 32]) torch.Size([46])
all data: 499
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.3593) feature loss: tensor(0.1496)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.4282) feature loss: tensor(0.1618)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.3976) feature loss: tensor(0.1408)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.3561) feature loss: tensor(0.1486)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.3879) feature loss: tensor(0.1812)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.4448) feature loss: tensor(0.1433)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.3527) feature loss: tensor(0.1834)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.3635) feature loss: tensor(0.1919)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.3705) feature loss: tensor(0.1692)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.4082) feature loss: tensor(0.1886)
         GM acc on global data: 0.6415 length of data: 10000
-------------Round number:  48  -------------
selected users: [93, 5, 71, 9, 11, 79, 69, 8, 59, 63]
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([53, 3, 32, 32]) torch.Size([53])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 504
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.4455) feature loss: tensor(0.1877)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.4361) feature loss: tensor(0.1760)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.3420) feature loss: tensor(0.1656)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.7412) feature loss: tensor(0.1969)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.4081) feature loss: tensor(0.1535)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.3853) feature loss: tensor(0.1615)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.4148) feature loss: tensor(0.2119)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.4250) feature loss: tensor(0.2090)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.6064) feature loss: tensor(0.1526)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.3871) feature loss: tensor(0.1885)
         GM acc on global data: 0.6479 length of data: 10000
-------------Round number:  49  -------------
selected users: [76, 25, 28, 75, 81, 47, 41, 22, 29, 1]
random features: torch.Size([53, 3, 32, 32]) torch.Size([53])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([46, 3, 32, 32]) torch.Size([46])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([54, 3, 32, 32]) torch.Size([54])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
all data: 503
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.4619) feature loss: tensor(0.1567)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.4070) feature loss: tensor(0.1751)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.5988) feature loss: tensor(0.2031)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.4289) feature loss: tensor(0.1991)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.8182) feature loss: tensor(0.1994)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.4137) feature loss: tensor(0.2053)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.4118) feature loss: tensor(0.1635)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.6174) feature loss: tensor(0.1583)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.3904) feature loss: tensor(0.1633)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.4146) feature loss: tensor(0.1792)
         GM acc on global data: 0.6448 length of data: 10000
-------------Round number:  50  -------------
selected users: [80, 79, 25, 15, 39, 40, 53, 17, 57, 50]
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([46, 3, 32, 32]) torch.Size([46])
random features: torch.Size([57, 3, 32, 32]) torch.Size([57])
random features: torch.Size([53, 3, 32, 32]) torch.Size([53])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
all data: 504
Local adapation with distilling: 0.0001
training loss: tensor(0.4064) feature loss: tensor(0.1663)
Local adapation with distilling: 0.0001
training loss: tensor(0.3414) feature loss: tensor(0.1382)
Local adapation with distilling: 0.0001
training loss: tensor(0.3585) feature loss: tensor(0.1373)
Local adapation with distilling: 0.0001
training loss: tensor(0.4208) feature loss: tensor(0.1643)
Local adapation with distilling: 0.0001
training loss: tensor(0.3608) feature loss: tensor(0.1370)
Local adapation with distilling: 0.0001
training loss: tensor(0.3687) feature loss: tensor(0.1574)
Local adapation with distilling: 0.0001
training loss: tensor(0.3629) feature loss: tensor(0.1392)
Local adapation with distilling: 0.0001
training loss: tensor(0.3413) feature loss: tensor(0.1349)
Local adapation with distilling: 0.0001
training loss: tensor(0.3759) feature loss: tensor(0.1281)
Local adapation with distilling: 0.0001
training loss: tensor(0.4377) feature loss: tensor(0.1571)
         GM acc on global data: 0.6471 length of data: 10000
-------------Round number:  51  -------------
selected users: [71, 43, 11, 83, 78, 19, 80, 4, 79, 75]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([53, 3, 32, 32]) torch.Size([53])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
all data: 498
Local adapation with distilling: 0.0001
training loss: tensor(0.3590) feature loss: tensor(0.1637)
Local adapation with distilling: 0.0001
training loss: tensor(0.4489) feature loss: tensor(0.1934)
Local adapation with distilling: 0.0001
training loss: tensor(0.4009) feature loss: tensor(0.1582)
Local adapation with distilling: 0.0001
training loss: tensor(0.5129) feature loss: tensor(0.1928)
Local adapation with distilling: 0.0001
training loss: tensor(0.4576) feature loss: tensor(0.2130)
Local adapation with distilling: 0.0001
training loss: tensor(0.4977) feature loss: tensor(0.1841)
Local adapation with distilling: 0.0001
training loss: tensor(0.4062) feature loss: tensor(0.1925)
Local adapation with distilling: 0.0001
training loss: tensor(0.4956) feature loss: tensor(0.1550)
Local adapation with distilling: 0.0001
training loss: tensor(0.3515) feature loss: tensor(0.1601)
Local adapation with distilling: 0.0001
training loss: tensor(0.4171) feature loss: tensor(0.1844)
         GM acc on global data: 0.6456 length of data: 10000
-------------Round number:  52  -------------
selected users: [82, 8, 44, 19, 2, 73, 37, 89, 67, 18]
random features: torch.Size([46, 3, 32, 32]) torch.Size([46])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([54, 3, 32, 32]) torch.Size([54])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
all data: 491
Local adapation with distilling: 0.0001
training loss: tensor(0.4442) feature loss: tensor(0.1907)
Local adapation with distilling: 0.0001
training loss: tensor(0.3874) feature loss: tensor(0.1739)
Local adapation with distilling: 0.0001
training loss: tensor(0.4297) feature loss: tensor(0.1771)
Local adapation with distilling: 0.0001
training loss: tensor(0.4051) feature loss: tensor(0.1511)
Local adapation with distilling: 0.0001
training loss: tensor(0.3762) feature loss: tensor(0.1831)
Local adapation with distilling: 0.0001
training loss: tensor(0.4072) feature loss: tensor(0.1773)
Local adapation with distilling: 0.0001
training loss: tensor(0.3401) feature loss: tensor(0.1510)
Local adapation with distilling: 0.0001
training loss: tensor(0.3736) feature loss: tensor(0.1540)
Local adapation with distilling: 0.0001
training loss: tensor(0.4254) feature loss: tensor(0.1452)
Local adapation with distilling: 0.0001
training loss: tensor(0.4781) feature loss: tensor(0.1782)
         GM acc on global data: 0.6518 length of data: 10000
-------------Round number:  53  -------------
selected users: [19, 78, 64, 3, 71, 32, 68, 42, 55, 97]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([53, 3, 32, 32]) torch.Size([53])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
all data: 496
Local adapation with distilling: 0.0001
training loss: tensor(0.4651) feature loss: tensor(0.2221)
Local adapation with distilling: 0.0001
training loss: tensor(0.5012) feature loss: tensor(0.2507)
Local adapation with distilling: 0.0001
training loss: tensor(0.6635) feature loss: tensor(0.2318)
Local adapation with distilling: 0.0001
training loss: tensor(0.5699) feature loss: tensor(0.2178)
Local adapation with distilling: 0.0001
training loss: tensor(0.4028) feature loss: tensor(0.2341)
Local adapation with distilling: 0.0001
training loss: tensor(0.6068) feature loss: tensor(0.2487)
Local adapation with distilling: 0.0001
training loss: tensor(0.6066) feature loss: tensor(0.2509)
Local adapation with distilling: 0.0001
training loss: tensor(0.4824) feature loss: tensor(0.2207)
Local adapation with distilling: 0.0001
training loss: tensor(0.5086) feature loss: tensor(0.2345)
Local adapation with distilling: 0.0001
training loss: tensor(0.6279) feature loss: tensor(0.2579)
         GM acc on global data: 0.6451 length of data: 10000
-------------Round number:  54  -------------
selected users: [36, 70, 48, 94, 81, 46, 38, 29, 34, 22]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([54, 3, 32, 32]) torch.Size([54])
random features: torch.Size([54, 3, 32, 32]) torch.Size([54])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
all data: 503
Local adapation with distilling: 0.0001
training loss: tensor(0.3990) feature loss: tensor(0.1815)
Local adapation with distilling: 0.0001
training loss: tensor(0.3569) feature loss: tensor(0.1719)
Local adapation with distilling: 0.0001
training loss: tensor(0.4992) feature loss: tensor(0.1770)
Local adapation with distilling: 0.0001
training loss: tensor(0.3847) feature loss: tensor(0.1531)
Local adapation with distilling: 0.0001
training loss: tensor(0.7433) feature loss: tensor(0.1762)
Local adapation with distilling: 0.0001
training loss: tensor(0.4112) feature loss: tensor(0.1557)
Local adapation with distilling: 0.0001
training loss: tensor(0.3484) feature loss: tensor(0.1869)
Local adapation with distilling: 0.0001
training loss: tensor(0.3384) feature loss: tensor(0.1520)
Local adapation with distilling: 0.0001
training loss: tensor(0.3787) feature loss: tensor(0.1536)
Local adapation with distilling: 0.0001
training loss: tensor(0.5367) feature loss: tensor(0.1485)
         GM acc on global data: 0.6527 length of data: 10000
-------------Round number:  55  -------------
selected users: [28, 92, 98, 95, 84, 34, 38, 76, 17, 78]
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([46, 3, 32, 32]) torch.Size([46])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([54, 3, 32, 32]) torch.Size([54])
random features: torch.Size([53, 3, 32, 32]) torch.Size([53])
random features: torch.Size([53, 3, 32, 32]) torch.Size([53])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
all data: 502
Local adapation with distilling: 0.0001
training loss: tensor(0.5077) feature loss: tensor(0.1715)
Local adapation with distilling: 0.0001
training loss: tensor(0.5281) feature loss: tensor(0.1757)
Local adapation with distilling: 0.0001
training loss: tensor(0.3802) feature loss: tensor(0.1738)
Local adapation with distilling: 0.0001
training loss: tensor(0.3528) feature loss: tensor(0.1467)
Local adapation with distilling: 0.0001
training loss: tensor(0.4004) feature loss: tensor(0.1598)
Local adapation with distilling: 0.0001
training loss: tensor(0.3453) feature loss: tensor(0.1446)
Local adapation with distilling: 0.0001
training loss: tensor(0.3231) feature loss: tensor(0.1767)
Local adapation with distilling: 0.0001
training loss: tensor(0.3935) feature loss: tensor(0.1408)
Local adapation with distilling: 0.0001
training loss: tensor(0.3313) feature loss: tensor(0.1432)
Local adapation with distilling: 0.0001
training loss: tensor(0.3790) feature loss: tensor(0.1810)
         GM acc on global data: 0.6495 length of data: 10000
-------------Round number:  56  -------------
selected users: [92, 79, 23, 68, 52, 38, 73, 9, 59, 27]
random features: torch.Size([46, 3, 32, 32]) torch.Size([46])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([54, 3, 32, 32]) torch.Size([54])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
all data: 502
Local adapation with distilling: 0.0001
training loss: tensor(0.4960) feature loss: tensor(0.1849)
Local adapation with distilling: 0.0001
training loss: tensor(0.3666) feature loss: tensor(0.1566)
Local adapation with distilling: 0.0001
training loss: tensor(0.5910) feature loss: tensor(0.1952)
Local adapation with distilling: 0.0001
training loss: tensor(0.4652) feature loss: tensor(0.1723)
Local adapation with distilling: 0.0001
training loss: tensor(0.6186) feature loss: tensor(0.1891)
Local adapation with distilling: 0.0001
training loss: tensor(0.3384) feature loss: tensor(0.1840)
Local adapation with distilling: 0.0001
training loss: tensor(0.4363) feature loss: tensor(0.1975)
Local adapation with distilling: 0.0001
training loss: tensor(0.8132) feature loss: tensor(0.1844)
Local adapation with distilling: 0.0001
training loss: tensor(0.4673) feature loss: tensor(0.1575)
Local adapation with distilling: 0.0001
training loss: tensor(0.3973) feature loss: tensor(0.1622)
         GM acc on global data: 0.6535 length of data: 10000
-------------Round number:  57  -------------
selected users: [52, 17, 41, 3, 8, 98, 59, 20, 67, 7]
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([53, 3, 32, 32]) torch.Size([53])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([53, 3, 32, 32]) torch.Size([53])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
all data: 492
Local adapation with distilling: 0.0001
training loss: tensor(0.4912) feature loss: tensor(0.1646)
Local adapation with distilling: 0.0001
training loss: tensor(0.2819) feature loss: tensor(0.1436)
Local adapation with distilling: 0.0001
training loss: tensor(0.3183) feature loss: tensor(0.1466)
Local adapation with distilling: 0.0001
training loss: tensor(0.3753) feature loss: tensor(0.1508)
Local adapation with distilling: 0.0001
training loss: tensor(0.3045) feature loss: tensor(0.1667)
Local adapation with distilling: 0.0001
training loss: tensor(0.3143) feature loss: tensor(0.1787)
Local adapation with distilling: 0.0001
training loss: tensor(0.3583) feature loss: tensor(0.1461)
Local adapation with distilling: 0.0001
training loss: tensor(0.4270) feature loss: tensor(0.1669)
Local adapation with distilling: 0.0001
training loss: tensor(0.3234) feature loss: tensor(0.1471)
Local adapation with distilling: 0.0001
training loss: tensor(0.3940) feature loss: tensor(0.1492)
         GM acc on global data: 0.6508 length of data: 10000
-------------Round number:  58  -------------
selected users: [43, 58, 8, 31, 70, 45, 69, 95, 50, 4]
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
all data: 490
Local adapation with distilling: 0.0001
training loss: tensor(0.3841) feature loss: tensor(0.1709)
Local adapation with distilling: 0.0001
training loss: tensor(0.3518) feature loss: tensor(0.1635)
Local adapation with distilling: 0.0001
training loss: tensor(0.3058) feature loss: tensor(0.1741)
Local adapation with distilling: 0.0001
training loss: tensor(0.3685) feature loss: tensor(0.1444)
Local adapation with distilling: 0.0001
training loss: tensor(0.3240) feature loss: tensor(0.1708)
Local adapation with distilling: 0.0001
training loss: tensor(0.3261) feature loss: tensor(0.1461)
Local adapation with distilling: 0.0001
training loss: tensor(0.3722) feature loss: tensor(0.1821)
Local adapation with distilling: 0.0001
training loss: tensor(0.3074) feature loss: tensor(0.1558)
Local adapation with distilling: 0.0001
training loss: tensor(0.3748) feature loss: tensor(0.1663)
Local adapation with distilling: 0.0001
training loss: tensor(0.4348) feature loss: tensor(0.1441)
         GM acc on global data: 0.6578 length of data: 10000
-------------Round number:  59  -------------
selected users: [38, 46, 24, 87, 30, 85, 16, 96, 18, 99]
random features: torch.Size([54, 3, 32, 32]) torch.Size([54])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([53, 3, 32, 32]) torch.Size([53])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([46, 3, 32, 32]) torch.Size([46])
all data: 497
Local adapation with distilling: 0.0001
training loss: tensor(0.3505) feature loss: tensor(0.1733)
Local adapation with distilling: 0.0001
training loss: tensor(0.3678) feature loss: tensor(0.1512)
Local adapation with distilling: 0.0001
training loss: tensor(0.3967) feature loss: tensor(0.1512)
Local adapation with distilling: 0.0001
training loss: tensor(0.4667) feature loss: tensor(0.1583)
Local adapation with distilling: 0.0001
training loss: tensor(0.4984) feature loss: tensor(0.1724)
Local adapation with distilling: 0.0001
training loss: tensor(0.4116) feature loss: tensor(0.1730)
Local adapation with distilling: 0.0001
training loss: tensor(0.4519) feature loss: tensor(0.1450)
Local adapation with distilling: 0.0001
training loss: tensor(0.7771) feature loss: tensor(0.1705)
Local adapation with distilling: 0.0001
training loss: tensor(0.4213) feature loss: tensor(0.1660)
Local adapation with distilling: 0.0001
training loss: tensor(0.4444) feature loss: tensor(0.1629)
         GM acc on global data: 0.6612 length of data: 10000
-------------Round number:  60  -------------
selected users: [88, 4, 79, 14, 55, 3, 19, 28, 94, 25]
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([53, 3, 32, 32]) torch.Size([53])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 497
Local adapation with distilling: 0.0001
training loss: tensor(0.3814) feature loss: tensor(0.1893)
Local adapation with distilling: 0.0001
training loss: tensor(0.3914) feature loss: tensor(0.1766)
Local adapation with distilling: 0.0001
training loss: tensor(0.3222) feature loss: tensor(0.1699)
Local adapation with distilling: 0.0001
training loss: tensor(0.3663) feature loss: tensor(0.1949)
Local adapation with distilling: 0.0001
training loss: tensor(0.3892) feature loss: tensor(0.1704)
Local adapation with distilling: 0.0001
training loss: tensor(0.3775) feature loss: tensor(0.1585)
Local adapation with distilling: 0.0001
training loss: tensor(0.3583) feature loss: tensor(0.1629)
Local adapation with distilling: 0.0001
training loss: tensor(0.6124) feature loss: tensor(0.1920)
Local adapation with distilling: 0.0001
training loss: tensor(0.3708) feature loss: tensor(0.1541)
Local adapation with distilling: 0.0001
training loss: tensor(0.3655) feature loss: tensor(0.1661)
         GM acc on global data: 0.6535 length of data: 10000
-------------Round number:  61  -------------
selected users: [83, 1, 55, 9, 31, 28, 96, 29, 86, 63]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([54, 3, 32, 32]) torch.Size([54])
random features: torch.Size([53, 3, 32, 32]) torch.Size([53])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 508
Local adapation with distilling: 0.0001
training loss: tensor(0.4369) feature loss: tensor(0.1930)
Local adapation with distilling: 0.0001
training loss: tensor(0.3828) feature loss: tensor(0.1584)
Local adapation with distilling: 0.0001
training loss: tensor(0.3555) feature loss: tensor(0.1813)
Local adapation with distilling: 0.0001
training loss: tensor(0.6346) feature loss: tensor(0.1880)
Local adapation with distilling: 0.0001
training loss: tensor(0.3633) feature loss: tensor(0.1476)
Local adapation with distilling: 0.0001
training loss: tensor(0.5706) feature loss: tensor(0.1764)
Local adapation with distilling: 0.0001
training loss: tensor(0.6645) feature loss: tensor(0.1750)
Local adapation with distilling: 0.0001
training loss: tensor(0.3201) feature loss: tensor(0.1582)
Local adapation with distilling: 0.0001
training loss: tensor(0.3470) feature loss: tensor(0.1596)
Local adapation with distilling: 0.0001
training loss: tensor(0.3509) feature loss: tensor(0.1887)
         GM acc on global data: 0.6515 length of data: 10000
-------------Round number:  62  -------------
selected users: [76, 48, 62, 80, 29, 99, 60, 89, 39, 69]
random features: torch.Size([53, 3, 32, 32]) torch.Size([53])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([46, 3, 32, 32]) torch.Size([46])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([54, 3, 32, 32]) torch.Size([54])
random features: torch.Size([46, 3, 32, 32]) torch.Size([46])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([54, 3, 32, 32]) torch.Size([54])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
all data: 496
Local adapation with distilling: 0.0001
training loss: tensor(0.3583) feature loss: tensor(0.1449)
Local adapation with distilling: 0.0001
training loss: tensor(0.4078) feature loss: tensor(0.1716)
Local adapation with distilling: 0.0001
training loss: tensor(0.4022) feature loss: tensor(0.1736)
Local adapation with distilling: 0.0001
training loss: tensor(0.3464) feature loss: tensor(0.1753)
Local adapation with distilling: 0.0001
training loss: tensor(0.2890) feature loss: tensor(0.1485)
Local adapation with distilling: 0.0001
training loss: tensor(0.3709) feature loss: tensor(0.1812)
Local adapation with distilling: 0.0001
training loss: tensor(0.3780) feature loss: tensor(0.1728)
Local adapation with distilling: 0.0001
training loss: tensor(0.2991) feature loss: tensor(0.1407)
Local adapation with distilling: 0.0001
training loss: tensor(0.3265) feature loss: tensor(0.1447)
Local adapation with distilling: 0.0001
training loss: tensor(0.3270) feature loss: tensor(0.1651)
         GM acc on global data: 0.6503 length of data: 10000
-------------Round number:  63  -------------
selected users: [64, 59, 63, 2, 80, 20, 18, 48, 72, 51]
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([57, 3, 32, 32]) torch.Size([57])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
all data: 494
Local adapation with distilling: 0.0001
training loss: tensor(0.5083) feature loss: tensor(0.1578)
Local adapation with distilling: 0.0001
training loss: tensor(0.3217) feature loss: tensor(0.1569)
Local adapation with distilling: 0.0001
training loss: tensor(0.3362) feature loss: tensor(0.1788)
Local adapation with distilling: 0.0001
training loss: tensor(0.3244) feature loss: tensor(0.1651)
Local adapation with distilling: 0.0001
training loss: tensor(0.3340) feature loss: tensor(0.1720)
Local adapation with distilling: 0.0001
training loss: tensor(0.3906) feature loss: tensor(0.1621)
Local adapation with distilling: 0.0001
training loss: tensor(0.3721) feature loss: tensor(0.1727)
Local adapation with distilling: 0.0001
training loss: tensor(0.3872) feature loss: tensor(0.1639)
Local adapation with distilling: 0.0001
training loss: tensor(0.4029) feature loss: tensor(0.1944)
Local adapation with distilling: 0.0001
training loss: tensor(0.4196) feature loss: tensor(0.1594)
         GM acc on global data: 0.6556 length of data: 10000
-------------Round number:  64  -------------
selected users: [17, 22, 60, 92, 23, 19, 71, 94, 40, 49]
random features: torch.Size([53, 3, 32, 32]) torch.Size([53])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([46, 3, 32, 32]) torch.Size([46])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([46, 3, 32, 32]) torch.Size([46])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
all data: 492
Local adapation with distilling: 0.0001
training loss: tensor(0.3112) feature loss: tensor(0.1526)
Local adapation with distilling: 0.0001
training loss: tensor(0.4923) feature loss: tensor(0.1459)
Local adapation with distilling: 0.0001
training loss: tensor(0.3442) feature loss: tensor(0.1675)
Local adapation with distilling: 0.0001
training loss: tensor(0.4017) feature loss: tensor(0.1675)
Local adapation with distilling: 0.0001
training loss: tensor(0.4498) feature loss: tensor(0.1614)
Local adapation with distilling: 0.0001
training loss: tensor(0.3428) feature loss: tensor(0.1581)
Local adapation with distilling: 0.0001
training loss: tensor(0.2998) feature loss: tensor(0.1539)
Local adapation with distilling: 0.0001
training loss: tensor(0.3587) feature loss: tensor(0.1570)
Local adapation with distilling: 0.0001
training loss: tensor(0.3445) feature loss: tensor(0.1802)
Local adapation with distilling: 0.0001
training loss: tensor(0.3611) feature loss: tensor(0.1713)
         GM acc on global data: 0.6557 length of data: 10000
-------------Round number:  65  -------------
selected users: [37, 81, 39, 61, 76, 90, 27, 86, 28, 69]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([53, 3, 32, 32]) torch.Size([53])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([53, 3, 32, 32]) torch.Size([53])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
all data: 503
Local adapation with distilling: 0.0001
training loss: tensor(0.2991) feature loss: tensor(0.1422)
Local adapation with distilling: 0.0001
training loss: tensor(0.7003) feature loss: tensor(0.1635)
Local adapation with distilling: 0.0001
training loss: tensor(0.3236) feature loss: tensor(0.1417)
Local adapation with distilling: 0.0001
training loss: tensor(0.4004) feature loss: tensor(0.1573)
Local adapation with distilling: 0.0001
training loss: tensor(0.3228) feature loss: tensor(0.1482)
Local adapation with distilling: 0.0001
training loss: tensor(0.4063) feature loss: tensor(0.1791)
Local adapation with distilling: 0.0001
training loss: tensor(0.3368) feature loss: tensor(0.1440)
Local adapation with distilling: 0.0001
training loss: tensor(0.3183) feature loss: tensor(0.1551)
Local adapation with distilling: 0.0001
training loss: tensor(0.5202) feature loss: tensor(0.1863)
Local adapation with distilling: 0.0001
training loss: tensor(0.3142) feature loss: tensor(0.1767)
         GM acc on global data: 0.6575 length of data: 10000
-------------Round number:  66  -------------
selected users: [8, 93, 4, 5, 52, 41, 0, 73, 88, 68]
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
all data: 498
Local adapation with distilling: 0.0001
training loss: tensor(0.3082) feature loss: tensor(0.1730)
Local adapation with distilling: 0.0001
training loss: tensor(0.3938) feature loss: tensor(0.1692)
Local adapation with distilling: 0.0001
training loss: tensor(0.3325) feature loss: tensor(0.1398)
Local adapation with distilling: 0.0001
training loss: tensor(0.3845) feature loss: tensor(0.1433)
Local adapation with distilling: 0.0001
training loss: tensor(0.6897) feature loss: tensor(0.1450)
Local adapation with distilling: 0.0001
training loss: tensor(0.3351) feature loss: tensor(0.1443)
Local adapation with distilling: 0.0001
training loss: tensor(0.3149) feature loss: tensor(0.1629)
Local adapation with distilling: 0.0001
training loss: tensor(0.3405) feature loss: tensor(0.1694)
Local adapation with distilling: 0.0001
training loss: tensor(0.3377) feature loss: tensor(0.1649)
Local adapation with distilling: 0.0001
training loss: tensor(0.4289) feature loss: tensor(0.1706)
         GM acc on global data: 0.659 length of data: 10000
-------------Round number:  67  -------------
selected users: [17, 24, 64, 93, 97, 29, 3, 70, 82, 11]
random features: torch.Size([53, 3, 32, 32]) torch.Size([53])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([54, 3, 32, 32]) torch.Size([54])
random features: torch.Size([53, 3, 32, 32]) torch.Size([53])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([46, 3, 32, 32]) torch.Size([46])
random features: torch.Size([53, 3, 32, 32]) torch.Size([53])
all data: 504
Local adapation with distilling: 0.0001
training loss: tensor(0.2551) feature loss: tensor(0.1385)
Local adapation with distilling: 0.0001
training loss: tensor(0.2994) feature loss: tensor(0.1388)
Local adapation with distilling: 0.0001
training loss: tensor(0.3862) feature loss: tensor(0.1396)
Local adapation with distilling: 0.0001
training loss: tensor(0.3081) feature loss: tensor(0.1667)
Local adapation with distilling: 0.0001
training loss: tensor(0.3716) feature loss: tensor(0.1640)
Local adapation with distilling: 0.0001
training loss: tensor(0.2729) feature loss: tensor(0.1447)
Local adapation with distilling: 0.0001
training loss: tensor(0.3069) feature loss: tensor(0.1411)
Local adapation with distilling: 0.0001
training loss: tensor(0.2983) feature loss: tensor(0.1615)
Local adapation with distilling: 0.0001
training loss: tensor(0.3388) feature loss: tensor(0.1557)
Local adapation with distilling: 0.0001
training loss: tensor(0.3071) feature loss: tensor(0.1472)
         GM acc on global data: 0.6573 length of data: 10000
-------------Round number:  68  -------------
selected users: [29, 30, 16, 5, 38, 71, 76, 94, 99, 95]
random features: torch.Size([54, 3, 32, 32]) torch.Size([54])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([53, 3, 32, 32]) torch.Size([53])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([54, 3, 32, 32]) torch.Size([54])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([53, 3, 32, 32]) torch.Size([53])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([46, 3, 32, 32]) torch.Size([46])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 508
Local adapation with distilling: 0.0001
training loss: tensor(0.2793) feature loss: tensor(0.1577)
Local adapation with distilling: 0.0001
training loss: tensor(0.4093) feature loss: tensor(0.1741)
Local adapation with distilling: 0.0001
training loss: tensor(0.3549) feature loss: tensor(0.1507)
Local adapation with distilling: 0.0001
training loss: tensor(0.3522) feature loss: tensor(0.1598)
Local adapation with distilling: 0.0001
training loss: tensor(0.2827) feature loss: tensor(0.1661)
Local adapation with distilling: 0.0001
training loss: tensor(0.2828) feature loss: tensor(0.1496)
Local adapation with distilling: 0.0001
training loss: tensor(0.3112) feature loss: tensor(0.1581)
Local adapation with distilling: 0.0001
training loss: tensor(0.3001) feature loss: tensor(0.1458)
Local adapation with distilling: 0.0001
training loss: tensor(0.3628) feature loss: tensor(0.1815)
Local adapation with distilling: 0.0001
training loss: tensor(0.3020) feature loss: tensor(0.1564)
         GM acc on global data: 0.6555 length of data: 10000
-------------Round number:  69  -------------
selected users: [72, 31, 13, 83, 33, 8, 26, 89, 64, 97]
random features: torch.Size([57, 3, 32, 32]) torch.Size([57])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([54, 3, 32, 32]) torch.Size([54])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
all data: 503
Local adapation with distilling: 0.0001
training loss: tensor(0.3595) feature loss: tensor(0.1707)
Local adapation with distilling: 0.0001
training loss: tensor(0.3594) feature loss: tensor(0.1448)
Local adapation with distilling: 0.0001
training loss: tensor(0.3965) feature loss: tensor(0.1755)
Local adapation with distilling: 0.0001
training loss: tensor(0.3794) feature loss: tensor(0.1771)
Local adapation with distilling: 0.0001
training loss: tensor(0.3374) feature loss: tensor(0.1642)
Local adapation with distilling: 0.0001
training loss: tensor(0.3113) feature loss: tensor(0.1624)
Local adapation with distilling: 0.0001
training loss: tensor(0.3575) feature loss: tensor(0.1680)
Local adapation with distilling: 0.0001
training loss: tensor(0.3128) feature loss: tensor(0.1428)
Local adapation with distilling: 0.0001
training loss: tensor(0.3824) feature loss: tensor(0.1414)
Local adapation with distilling: 0.0001
training loss: tensor(0.3861) feature loss: tensor(0.1761)
         GM acc on global data: 0.6544 length of data: 10000
-------------Round number:  70  -------------
selected users: [81, 43, 88, 32, 50, 71, 73, 55, 42, 2]
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
all data: 491
Local adapation with distilling: 0.0001
training loss: tensor(0.6967) feature loss: tensor(0.1797)
Local adapation with distilling: 0.0001
training loss: tensor(0.3541) feature loss: tensor(0.1741)
Local adapation with distilling: 0.0001
training loss: tensor(0.3316) feature loss: tensor(0.1742)
Local adapation with distilling: 0.0001
training loss: tensor(0.4362) feature loss: tensor(0.1601)
Local adapation with distilling: 0.0001
training loss: tensor(0.3578) feature loss: tensor(0.1670)
Local adapation with distilling: 0.0001
training loss: tensor(0.2780) feature loss: tensor(0.1499)
Local adapation with distilling: 0.0001
training loss: tensor(0.3302) feature loss: tensor(0.1808)
Local adapation with distilling: 0.0001
training loss: tensor(0.3226) feature loss: tensor(0.1793)
Local adapation with distilling: 0.0001
training loss: tensor(0.3376) feature loss: tensor(0.1475)
Local adapation with distilling: 0.0001
training loss: tensor(0.3129) feature loss: tensor(0.1684)
         GM acc on global data: 0.6592 length of data: 10000
-------------Round number:  71  -------------
selected users: [41, 84, 98, 42, 75, 25, 60, 19, 52, 29]
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([54, 3, 32, 32]) torch.Size([54])
all data: 491
Local adapation with distilling: 0.0001
training loss: tensor(0.2921) feature loss: tensor(0.1334)
Local adapation with distilling: 0.0001
training loss: tensor(0.3485) feature loss: tensor(0.1626)
Local adapation with distilling: 0.0001
training loss: tensor(0.3069) feature loss: tensor(0.1535)
Local adapation with distilling: 0.0001
training loss: tensor(0.3055) feature loss: tensor(0.1344)
Local adapation with distilling: 0.0001
training loss: tensor(0.3221) feature loss: tensor(0.1552)
Local adapation with distilling: 0.0001
training loss: tensor(0.3268) feature loss: tensor(0.1472)
Local adapation with distilling: 0.0001
training loss: tensor(0.3184) feature loss: tensor(0.1583)
Local adapation with distilling: 0.0001
training loss: tensor(0.2998) feature loss: tensor(0.1501)
Local adapation with distilling: 0.0001
training loss: tensor(0.5982) feature loss: tensor(0.1698)
Local adapation with distilling: 0.0001
training loss: tensor(0.2592) feature loss: tensor(0.1373)
         GM acc on global data: 0.6655 length of data: 10000
-------------Round number:  72  -------------
selected users: [76, 82, 43, 16, 84, 95, 78, 91, 30, 22]
random features: torch.Size([53, 3, 32, 32]) torch.Size([53])
random features: torch.Size([46, 3, 32, 32]) torch.Size([46])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([53, 3, 32, 32]) torch.Size([53])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
all data: 501
Local adapation with distilling: 0.0001
training loss: tensor(0.2812) feature loss: tensor(0.1336)
Local adapation with distilling: 0.0001
training loss: tensor(0.3090) feature loss: tensor(0.1409)
Local adapation with distilling: 0.0001
training loss: tensor(0.3078) feature loss: tensor(0.1575)
Local adapation with distilling: 0.0001
training loss: tensor(0.3101) feature loss: tensor(0.1348)
Local adapation with distilling: 0.0001
training loss: tensor(0.3325) feature loss: tensor(0.1568)
Local adapation with distilling: 0.0001
training loss: tensor(0.2665) feature loss: tensor(0.1360)
Local adapation with distilling: 0.0001
training loss: tensor(0.3263) feature loss: tensor(0.1750)
Local adapation with distilling: 0.0001
training loss: tensor(0.3101) feature loss: tensor(0.1350)
Local adapation with distilling: 0.0001
training loss: tensor(0.3539) feature loss: tensor(0.1504)
Local adapation with distilling: 0.0001
training loss: tensor(0.5753) feature loss: tensor(0.1345)
         GM acc on global data: 0.66 length of data: 10000
-------------Round number:  73  -------------
selected users: [49, 14, 34, 70, 90, 35, 68, 76, 80, 9]
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([53, 3, 32, 32]) torch.Size([53])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([53, 3, 32, 32]) torch.Size([53])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
all data: 496
Local adapation with distilling: 0.0001
training loss: tensor(0.2994) feature loss: tensor(0.1423)
Local adapation with distilling: 0.0001
training loss: tensor(0.2704) feature loss: tensor(0.1349)
Local adapation with distilling: 0.0001
training loss: tensor(0.2659) feature loss: tensor(0.1134)
Local adapation with distilling: 0.0001
training loss: tensor(0.2566) feature loss: tensor(0.1244)
Local adapation with distilling: 0.0001
training loss: tensor(0.2963) feature loss: tensor(0.1362)
Local adapation with distilling: 0.0001
training loss: tensor(0.3899) feature loss: tensor(0.1128)
Local adapation with distilling: 0.0001
training loss: tensor(0.4021) feature loss: tensor(0.1390)
Local adapation with distilling: 0.0001
training loss: tensor(0.2344) feature loss: tensor(0.1153)
Local adapation with distilling: 0.0001
training loss: tensor(0.2495) feature loss: tensor(0.1322)
Local adapation with distilling: 0.0001
training loss: tensor(0.4121) feature loss: tensor(0.1339)
         GM acc on global data: 0.6558 length of data: 10000
-------------Round number:  74  -------------
selected users: [85, 64, 63, 80, 6, 12, 43, 17, 7, 8]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([53, 3, 32, 32]) torch.Size([53])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
all data: 494
Local adapation with distilling: 0.0001
training loss: tensor(0.3098) feature loss: tensor(0.1624)
Local adapation with distilling: 0.0001
training loss: tensor(0.3284) feature loss: tensor(0.1275)
Local adapation with distilling: 0.0001
training loss: tensor(0.2965) feature loss: tensor(0.1542)
Local adapation with distilling: 0.0001
training loss: tensor(0.2696) feature loss: tensor(0.1441)
Local adapation with distilling: 0.0001
training loss: tensor(0.3950) feature loss: tensor(0.1296)
Local adapation with distilling: 0.0001
training loss: tensor(0.3889) feature loss: tensor(0.1510)
Local adapation with distilling: 0.0001
training loss: tensor(0.2824) feature loss: tensor(0.1390)
Local adapation with distilling: 0.0001
training loss: tensor(0.2648) feature loss: tensor(0.1299)
Local adapation with distilling: 0.0001
training loss: tensor(0.3528) feature loss: tensor(0.1294)
Local adapation with distilling: 0.0001
training loss: tensor(0.2783) feature loss: tensor(0.1496)
         GM acc on global data: 0.6625 length of data: 10000
-------------Round number:  75  -------------
selected users: [36, 7, 6, 45, 56, 54, 22, 37, 53, 68]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([55, 3, 32, 32]) torch.Size([55])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([57, 3, 32, 32]) torch.Size([57])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
all data: 515
Local adapation with distilling: 0.0001
training loss: tensor(0.4155) feature loss: tensor(0.2814)
Local adapation with distilling: 0.0001
training loss: tensor(0.4182) feature loss: tensor(0.2050)
Local adapation with distilling: 0.0001
training loss: tensor(0.4884) feature loss: tensor(0.2621)
Local adapation with distilling: 0.0001
training loss: tensor(0.4241) feature loss: tensor(0.2107)
Local adapation with distilling: 0.0001
training loss: tensor(0.5001) feature loss: tensor(0.3454)
Local adapation with distilling: 0.0001
training loss: tensor(0.6870) feature loss: tensor(0.2895)
Local adapation with distilling: 0.0001
training loss: tensor(0.7607) feature loss: tensor(0.2726)
Local adapation with distilling: 0.0001
training loss: tensor(0.4141) feature loss: tensor(0.2768)
Local adapation with distilling: 0.0001
training loss: tensor(0.4312) feature loss: tensor(0.2072)
Local adapation with distilling: 0.0001
training loss: tensor(0.5049) feature loss: tensor(0.2810)
         GM acc on global data: 0.6595 length of data: 10000
-------------Round number:  76  -------------
selected users: [38, 37, 32, 50, 10, 94, 19, 44, 86, 23]
random features: torch.Size([54, 3, 32, 32]) torch.Size([54])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([46, 3, 32, 32]) torch.Size([46])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([53, 3, 32, 32]) torch.Size([53])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
all data: 497
Local adapation with distilling: 0.0001
training loss: tensor(0.2804) feature loss: tensor(0.1628)
Local adapation with distilling: 0.0001
training loss: tensor(0.2589) feature loss: tensor(0.1404)
Local adapation with distilling: 0.0001
training loss: tensor(0.3872) feature loss: tensor(0.1555)
Local adapation with distilling: 0.0001
training loss: tensor(0.3220) feature loss: tensor(0.1784)
Local adapation with distilling: 0.0001
training loss: tensor(0.3431) feature loss: tensor(0.1713)
Local adapation with distilling: 0.0001
training loss: tensor(0.2853) feature loss: tensor(0.1492)
Local adapation with distilling: 0.0001
training loss: tensor(0.2878) feature loss: tensor(0.1477)
Local adapation with distilling: 0.0001
training loss: tensor(0.3415) feature loss: tensor(0.1691)
Local adapation with distilling: 0.0001
training loss: tensor(0.2781) feature loss: tensor(0.1490)
Local adapation with distilling: 0.0001
training loss: tensor(0.3976) feature loss: tensor(0.1727)
         GM acc on global data: 0.6585 length of data: 10000
-------------Round number:  77  -------------
selected users: [5, 93, 41, 96, 16, 42, 81, 91, 50, 58]
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([53, 3, 32, 32]) torch.Size([53])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 503
Local adapation with distilling: 0.0001
training loss: tensor(0.3402) feature loss: tensor(0.1380)
Local adapation with distilling: 0.0001
training loss: tensor(0.3411) feature loss: tensor(0.1678)
Local adapation with distilling: 0.0001
training loss: tensor(0.2911) feature loss: tensor(0.1380)
Local adapation with distilling: 0.0001
training loss: tensor(0.5888) feature loss: tensor(0.1521)
Local adapation with distilling: 0.0001
training loss: tensor(0.3038) feature loss: tensor(0.1349)
Local adapation with distilling: 0.0001
training loss: tensor(0.2930) feature loss: tensor(0.1340)
Local adapation with distilling: 0.0001
training loss: tensor(0.6524) feature loss: tensor(0.1582)
Local adapation with distilling: 0.0001
training loss: tensor(0.3041) feature loss: tensor(0.1385)
Local adapation with distilling: 0.0001
training loss: tensor(0.2923) feature loss: tensor(0.1569)
Local adapation with distilling: 0.0001
training loss: tensor(0.3133) feature loss: tensor(0.1541)
         GM acc on global data: 0.6624 length of data: 10000
-------------Round number:  78  -------------
selected users: [9, 46, 7, 63, 15, 2, 74, 31, 5, 36]
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 495
Local adapation with distilling: 0.0001
training loss: tensor(0.3941) feature loss: tensor(0.1469)
Local adapation with distilling: 0.0001
training loss: tensor(0.2732) feature loss: tensor(0.1249)
Local adapation with distilling: 0.0001
training loss: tensor(0.2776) feature loss: tensor(0.1279)
Local adapation with distilling: 0.0001
training loss: tensor(0.2686) feature loss: tensor(0.1481)
Local adapation with distilling: 0.0001
training loss: tensor(0.3464) feature loss: tensor(0.1623)
Local adapation with distilling: 0.0001
training loss: tensor(0.2575) feature loss: tensor(0.1293)
Local adapation with distilling: 0.0001
training loss: tensor(0.2910) feature loss: tensor(0.1391)
Local adapation with distilling: 0.0001
training loss: tensor(0.2882) feature loss: tensor(0.1215)
Local adapation with distilling: 0.0001
training loss: tensor(0.2807) feature loss: tensor(0.1280)
Local adapation with distilling: 0.0001
training loss: tensor(0.2734) feature loss: tensor(0.1341)
         GM acc on global data: 0.6642 length of data: 10000
-------------Round number:  79  -------------
selected users: [68, 18, 86, 60, 56, 32, 30, 24, 45, 92]
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([53, 3, 32, 32]) torch.Size([53])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([55, 3, 32, 32]) torch.Size([55])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([46, 3, 32, 32]) torch.Size([46])
all data: 497
Local adapation with distilling: 0.0001
training loss: tensor(0.2816) feature loss: tensor(0.1474)
Local adapation with distilling: 0.0001
training loss: tensor(0.3252) feature loss: tensor(0.1527)
Local adapation with distilling: 0.0001
training loss: tensor(0.2530) feature loss: tensor(0.1297)
Local adapation with distilling: 0.0001
training loss: tensor(0.2877) feature loss: tensor(0.1459)
Local adapation with distilling: 0.0001
training loss: tensor(0.2875) feature loss: tensor(0.1283)
Local adapation with distilling: 0.0001
training loss: tensor(0.3406) feature loss: tensor(0.1303)
Local adapation with distilling: 0.0001
training loss: tensor(0.3227) feature loss: tensor(0.1491)
Local adapation with distilling: 0.0001
training loss: tensor(0.2831) feature loss: tensor(0.1329)
Local adapation with distilling: 0.0001
training loss: tensor(0.2804) feature loss: tensor(0.1344)
Local adapation with distilling: 0.0001
training loss: tensor(0.3390) feature loss: tensor(0.1447)
         GM acc on global data: 0.6601 length of data: 10000
-------------Round number:  80  -------------
selected users: [37, 65, 95, 53, 66, 30, 73, 85, 45, 36]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([57, 3, 32, 32]) torch.Size([57])
random features: torch.Size([54, 3, 32, 32]) torch.Size([54])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 509
Local adapation with distilling: 0.0001
training loss: tensor(0.2605) feature loss: tensor(0.1351)
Local adapation with distilling: 0.0001
training loss: tensor(0.3592) feature loss: tensor(0.1580)
Local adapation with distilling: 0.0001
training loss: tensor(0.2672) feature loss: tensor(0.1369)
Local adapation with distilling: 0.0001
training loss: tensor(0.2888) feature loss: tensor(0.1378)
Local adapation with distilling: 0.0001
training loss: tensor(0.3750) feature loss: tensor(0.1389)
Local adapation with distilling: 0.0001
training loss: tensor(0.3108) feature loss: tensor(0.1486)
Local adapation with distilling: 0.0001
training loss: tensor(0.3146) feature loss: tensor(0.1631)
Local adapation with distilling: 0.0001
training loss: tensor(0.3139) feature loss: tensor(0.1703)
Local adapation with distilling: 0.0001
training loss: tensor(0.2777) feature loss: tensor(0.1354)
Local adapation with distilling: 0.0001
training loss: tensor(0.2942) feature loss: tensor(0.1454)
         GM acc on global data: 0.6657 length of data: 10000
-------------Round number:  81  -------------
selected users: [73, 89, 41, 78, 51, 21, 30, 69, 8, 5]
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([54, 3, 32, 32]) torch.Size([54])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
all data: 495
Local adapation with distilling: 0.0001
training loss: tensor(0.2562) feature loss: tensor(0.1480)
Local adapation with distilling: 0.0001
training loss: tensor(0.2418) feature loss: tensor(0.1164)
Local adapation with distilling: 0.0001
training loss: tensor(0.2412) feature loss: tensor(0.1233)
Local adapation with distilling: 0.0001
training loss: tensor(0.2904) feature loss: tensor(0.1476)
Local adapation with distilling: 0.0001
training loss: tensor(0.3017) feature loss: tensor(0.1199)
Local adapation with distilling: 0.0001
training loss: tensor(0.3119) feature loss: tensor(0.1355)
Local adapation with distilling: 0.0001
training loss: tensor(0.2673) feature loss: tensor(0.1314)
Local adapation with distilling: 0.0001
training loss: tensor(0.2651) feature loss: tensor(0.1336)
Local adapation with distilling: 0.0001
training loss: tensor(0.2367) feature loss: tensor(0.1424)
Local adapation with distilling: 0.0001
training loss: tensor(0.2563) feature loss: tensor(0.1192)
         GM acc on global data: 0.6656 length of data: 10000
-------------Round number:  82  -------------
selected users: [72, 33, 58, 2, 55, 84, 54, 75, 28, 40]
random features: torch.Size([57, 3, 32, 32]) torch.Size([57])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([46, 3, 32, 32]) torch.Size([46])
all data: 496
Local adapation with distilling: 0.0001
training loss: tensor(0.2901) feature loss: tensor(0.1490)
Local adapation with distilling: 0.0001
training loss: tensor(0.2692) feature loss: tensor(0.1408)
Local adapation with distilling: 0.0001
training loss: tensor(0.2760) feature loss: tensor(0.1410)
Local adapation with distilling: 0.0001
training loss: tensor(0.2458) feature loss: tensor(0.1364)
Local adapation with distilling: 0.0001
training loss: tensor(0.2714) feature loss: tensor(0.1369)
Local adapation with distilling: 0.0001
training loss: tensor(0.3096) feature loss: tensor(0.1399)
Local adapation with distilling: 0.0001
training loss: tensor(0.3727) feature loss: tensor(0.1213)
Local adapation with distilling: 0.0001
training loss: tensor(0.2839) feature loss: tensor(0.1451)
Local adapation with distilling: 0.0001
training loss: tensor(0.3685) feature loss: tensor(0.1416)
Local adapation with distilling: 0.0001
training loss: tensor(0.2905) feature loss: tensor(0.1433)
         GM acc on global data: 0.6674 length of data: 10000
-------------Round number:  83  -------------
selected users: [6, 65, 95, 84, 61, 12, 30, 69, 35, 1]
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([53, 3, 32, 32]) torch.Size([53])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
all data: 498
Local adapation with distilling: 0.0001
training loss: tensor(0.3070) feature loss: tensor(0.1406)
Local adapation with distilling: 0.0001
training loss: tensor(0.3108) feature loss: tensor(0.1591)
Local adapation with distilling: 0.0001
training loss: tensor(0.2357) feature loss: tensor(0.1381)
Local adapation with distilling: 0.0001
training loss: tensor(0.2911) feature loss: tensor(0.1669)
Local adapation with distilling: 0.0001
training loss: tensor(0.3034) feature loss: tensor(0.1488)
Local adapation with distilling: 0.0001
training loss: tensor(0.3048) feature loss: tensor(0.1595)
Local adapation with distilling: 0.0001
training loss: tensor(0.2613) feature loss: tensor(0.1511)
Local adapation with distilling: 0.0001
training loss: tensor(0.2681) feature loss: tensor(0.1625)
Local adapation with distilling: 0.0001
training loss: tensor(0.3706) feature loss: tensor(0.1286)
Local adapation with distilling: 0.0001
training loss: tensor(0.3170) feature loss: tensor(0.1382)
         GM acc on global data: 0.6605 length of data: 10000
-------------Round number:  84  -------------
selected users: [94, 55, 80, 1, 90, 11, 32, 8, 6, 82]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([53, 3, 32, 32]) torch.Size([53])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([46, 3, 32, 32]) torch.Size([46])
all data: 493
Local adapation with distilling: 0.0001
training loss: tensor(0.2718) feature loss: tensor(0.1319)
Local adapation with distilling: 0.0001
training loss: tensor(0.2613) feature loss: tensor(0.1548)
Local adapation with distilling: 0.0001
training loss: tensor(0.2658) feature loss: tensor(0.1578)
Local adapation with distilling: 0.0001
training loss: tensor(0.2947) feature loss: tensor(0.1391)
Local adapation with distilling: 0.0001
training loss: tensor(0.3245) feature loss: tensor(0.1668)
Local adapation with distilling: 0.0001
training loss: tensor(0.2791) feature loss: tensor(0.1333)
Local adapation with distilling: 0.0001
training loss: tensor(0.3148) feature loss: tensor(0.1458)
Local adapation with distilling: 0.0001
training loss: tensor(0.2494) feature loss: tensor(0.1616)
Local adapation with distilling: 0.0001
training loss: tensor(0.2909) feature loss: tensor(0.1368)
Local adapation with distilling: 0.0001
training loss: tensor(0.2949) feature loss: tensor(0.1610)
         GM acc on global data: 0.667 length of data: 10000
-------------Round number:  85  -------------
selected users: [81, 25, 40, 87, 41, 23, 10, 89, 50, 54]
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([46, 3, 32, 32]) torch.Size([46])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([46, 3, 32, 32]) torch.Size([46])
random features: torch.Size([54, 3, 32, 32]) torch.Size([54])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
all data: 491
Local adapation with distilling: 0.0001
training loss: tensor(0.6054) feature loss: tensor(0.1640)
Local adapation with distilling: 0.0001
training loss: tensor(0.2896) feature loss: tensor(0.1374)
Local adapation with distilling: 0.0001
training loss: tensor(0.2854) feature loss: tensor(0.1402)
Local adapation with distilling: 0.0001
training loss: tensor(0.3233) feature loss: tensor(0.1631)
Local adapation with distilling: 0.0001
training loss: tensor(0.2610) feature loss: tensor(0.1411)
Local adapation with distilling: 0.0001
training loss: tensor(0.3481) feature loss: tensor(0.1586)
Local adapation with distilling: 0.0001
training loss: tensor(0.3097) feature loss: tensor(0.1548)
Local adapation with distilling: 0.0001
training loss: tensor(0.2547) feature loss: tensor(0.1310)
Local adapation with distilling: 0.0001
training loss: tensor(0.2678) feature loss: tensor(0.1563)
Local adapation with distilling: 0.0001
training loss: tensor(0.3575) feature loss: tensor(0.1305)
         GM acc on global data: 0.6631 length of data: 10000
-------------Round number:  86  -------------
selected users: [69, 74, 34, 68, 42, 0, 32, 88, 8, 3]
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([53, 3, 32, 32]) torch.Size([53])
all data: 489
Local adapation with distilling: 0.0001
training loss: tensor(0.2590) feature loss: tensor(0.1422)
Local adapation with distilling: 0.0001
training loss: tensor(0.2547) feature loss: tensor(0.1571)
Local adapation with distilling: 0.0001
training loss: tensor(0.2440) feature loss: tensor(0.1239)
Local adapation with distilling: 0.0001
training loss: tensor(0.2707) feature loss: tensor(0.1490)
Local adapation with distilling: 0.0001
training loss: tensor(0.2509) feature loss: tensor(0.1263)
Local adapation with distilling: 0.0001
training loss: tensor(0.2653) feature loss: tensor(0.1483)
Local adapation with distilling: 0.0001
training loss: tensor(0.2635) feature loss: tensor(0.1267)
Local adapation with distilling: 0.0001
training loss: tensor(0.2674) feature loss: tensor(0.1591)
Local adapation with distilling: 0.0001
training loss: tensor(0.2317) feature loss: tensor(0.1465)
Local adapation with distilling: 0.0001
training loss: tensor(0.2786) feature loss: tensor(0.1249)
         GM acc on global data: 0.6668 length of data: 10000
-------------Round number:  87  -------------
selected users: [16, 81, 85, 32, 39, 25, 26, 29, 65, 7]
random features: torch.Size([53, 3, 32, 32]) torch.Size([53])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([54, 3, 32, 32]) torch.Size([54])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
all data: 506
Local adapation with distilling: 0.0001
training loss: tensor(0.2567) feature loss: tensor(0.1363)
Local adapation with distilling: 0.0001
training loss: tensor(0.6449) feature loss: tensor(0.1488)
Local adapation with distilling: 0.0001
training loss: tensor(0.2660) feature loss: tensor(0.1680)
Local adapation with distilling: 0.0001
training loss: tensor(0.2531) feature loss: tensor(0.1245)
Local adapation with distilling: 0.0001
training loss: tensor(0.3287) feature loss: tensor(0.1293)
Local adapation with distilling: 0.0001
training loss: tensor(0.2510) feature loss: tensor(0.1294)
Local adapation with distilling: 0.0001
training loss: tensor(0.2851) feature loss: tensor(0.1679)
Local adapation with distilling: 0.0001
training loss: tensor(0.2197) feature loss: tensor(0.1295)
Local adapation with distilling: 0.0001
training loss: tensor(0.2788) feature loss: tensor(0.1513)
Local adapation with distilling: 0.0001
training loss: tensor(0.2690) feature loss: tensor(0.1223)
         GM acc on global data: 0.6686 length of data: 10000
-------------Round number:  88  -------------
selected users: [95, 53, 43, 84, 2, 74, 55, 31, 54, 97]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([57, 3, 32, 32]) torch.Size([57])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
all data: 495
Local adapation with distilling: 0.0001
training loss: tensor(0.2369) feature loss: tensor(0.1346)
Local adapation with distilling: 0.0001
training loss: tensor(0.2631) feature loss: tensor(0.1277)
Local adapation with distilling: 0.0001
training loss: tensor(0.2675) feature loss: tensor(0.1572)
Local adapation with distilling: 0.0001
training loss: tensor(0.2780) feature loss: tensor(0.1567)
Local adapation with distilling: 0.0001
training loss: tensor(0.2511) feature loss: tensor(0.1427)
Local adapation with distilling: 0.0001
training loss: tensor(0.2666) feature loss: tensor(0.1519)
Local adapation with distilling: 0.0001
training loss: tensor(0.2515) feature loss: tensor(0.1506)
Local adapation with distilling: 0.0001
training loss: tensor(0.2651) feature loss: tensor(0.1237)
Local adapation with distilling: 0.0001
training loss: tensor(0.3456) feature loss: tensor(0.1301)
Local adapation with distilling: 0.0001
training loss: tensor(0.3201) feature loss: tensor(0.1624)
         GM acc on global data: 0.668 length of data: 10000
-------------Round number:  89  -------------
selected users: [65, 21, 87, 6, 46, 74, 44, 60, 72, 5]
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([57, 3, 32, 32]) torch.Size([57])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
all data: 497
Local adapation with distilling: 0.0001
training loss: tensor(0.2759) feature loss: tensor(0.1461)
Local adapation with distilling: 0.0001
training loss: tensor(0.3007) feature loss: tensor(0.1312)
Local adapation with distilling: 0.0001
training loss: tensor(0.2980) feature loss: tensor(0.1392)
Local adapation with distilling: 0.0001
training loss: tensor(0.2680) feature loss: tensor(0.1198)
Local adapation with distilling: 0.0001
training loss: tensor(0.2662) feature loss: tensor(0.1265)
Local adapation with distilling: 0.0001
training loss: tensor(0.2450) feature loss: tensor(0.1459)
Local adapation with distilling: 0.0001
training loss: tensor(0.2911) feature loss: tensor(0.1318)
Local adapation with distilling: 0.0001
training loss: tensor(0.2595) feature loss: tensor(0.1415)
Local adapation with distilling: 0.0001
training loss: tensor(0.2745) feature loss: tensor(0.1606)
Local adapation with distilling: 0.0001
training loss: tensor(0.2590) feature loss: tensor(0.1204)
         GM acc on global data: 0.6688 length of data: 10000
-------------Round number:  90  -------------
selected users: [25, 85, 96, 89, 65, 94, 5, 35, 36, 92]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([54, 3, 32, 32]) torch.Size([54])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([53, 3, 32, 32]) torch.Size([53])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([46, 3, 32, 32]) torch.Size([46])
all data: 504
Local adapation with distilling: 0.0001
training loss: tensor(0.2507) feature loss: tensor(0.1286)
Local adapation with distilling: 0.0001
training loss: tensor(0.2574) feature loss: tensor(0.1502)
Local adapation with distilling: 0.0001
training loss: tensor(0.4991) feature loss: tensor(0.1475)
Local adapation with distilling: 0.0001
training loss: tensor(0.2309) feature loss: tensor(0.1283)
Local adapation with distilling: 0.0001
training loss: tensor(0.2469) feature loss: tensor(0.1468)
Local adapation with distilling: 0.0001
training loss: tensor(0.2454) feature loss: tensor(0.1254)
Local adapation with distilling: 0.0001
training loss: tensor(0.2416) feature loss: tensor(0.1299)
Local adapation with distilling: 0.0001
training loss: tensor(0.3510) feature loss: tensor(0.1270)
Local adapation with distilling: 0.0001
training loss: tensor(0.2637) feature loss: tensor(0.1495)
Local adapation with distilling: 0.0001
training loss: tensor(0.3006) feature loss: tensor(0.1618)
         GM acc on global data: 0.667 length of data: 10000
-------------Round number:  91  -------------
selected users: [75, 25, 3, 52, 78, 54, 59, 26, 62, 97]
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([53, 3, 32, 32]) torch.Size([53])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([46, 3, 32, 32]) torch.Size([46])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
all data: 502
Local adapation with distilling: 0.0001
training loss: tensor(0.2758) feature loss: tensor(0.1427)
Local adapation with distilling: 0.0001
training loss: tensor(0.2445) feature loss: tensor(0.1318)
Local adapation with distilling: 0.0001
training loss: tensor(0.2695) feature loss: tensor(0.1260)
Local adapation with distilling: 0.0001
training loss: tensor(0.5650) feature loss: tensor(0.1441)
Local adapation with distilling: 0.0001
training loss: tensor(0.3030) feature loss: tensor(0.1534)
Local adapation with distilling: 0.0001
training loss: tensor(0.2821) feature loss: tensor(0.1305)
Local adapation with distilling: 0.0001
training loss: tensor(0.3241) feature loss: tensor(0.1231)
Local adapation with distilling: 0.0001
training loss: tensor(0.2681) feature loss: tensor(0.1477)
Local adapation with distilling: 0.0001
training loss: tensor(0.3221) feature loss: tensor(0.1486)
Local adapation with distilling: 0.0001
training loss: tensor(0.3088) feature loss: tensor(0.1587)
         GM acc on global data: 0.6629 length of data: 10000
-------------Round number:  92  -------------
selected users: [25, 99, 73, 61, 66, 36, 23, 83, 77, 6]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([46, 3, 32, 32]) torch.Size([46])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([54, 3, 32, 32]) torch.Size([54])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([46, 3, 32, 32]) torch.Size([46])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
all data: 499
Local adapation with distilling: 0.0001
training loss: tensor(0.2543) feature loss: tensor(0.1294)
Local adapation with distilling: 0.0001
training loss: tensor(0.3293) feature loss: tensor(0.1580)
Local adapation with distilling: 0.0001
training loss: tensor(0.2919) feature loss: tensor(0.1633)
Local adapation with distilling: 0.0001
training loss: tensor(0.3211) feature loss: tensor(0.1322)
Local adapation with distilling: 0.0001
training loss: tensor(0.3258) feature loss: tensor(0.1332)
Local adapation with distilling: 0.0001
training loss: tensor(0.2813) feature loss: tensor(0.1438)
Local adapation with distilling: 0.0001
training loss: tensor(0.3327) feature loss: tensor(0.1485)
Local adapation with distilling: 0.0001
training loss: tensor(0.3445) feature loss: tensor(0.1650)
Local adapation with distilling: 0.0001
training loss: tensor(0.4159) feature loss: tensor(0.1475)
Local adapation with distilling: 0.0001
training loss: tensor(0.2888) feature loss: tensor(0.1396)
         GM acc on global data: 0.6632 length of data: 10000
-------------Round number:  93  -------------
selected users: [75, 82, 56, 27, 42, 35, 1, 97, 66, 61]
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([46, 3, 32, 32]) torch.Size([46])
random features: torch.Size([55, 3, 32, 32]) torch.Size([55])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([53, 3, 32, 32]) torch.Size([53])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([54, 3, 32, 32]) torch.Size([54])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.2843) feature loss: tensor(0.1966)
Local adapation with distilling: 0.0001
training loss: tensor(0.2899) feature loss: tensor(0.1934)
Local adapation with distilling: 0.0001
training loss: tensor(0.2770) feature loss: tensor(0.1557)
Local adapation with distilling: 0.0001
training loss: tensor(0.3195) feature loss: tensor(0.1410)
Local adapation with distilling: 0.0001
training loss: tensor(0.2797) feature loss: tensor(0.1517)
Local adapation with distilling: 0.0001
training loss: tensor(0.3228) feature loss: tensor(0.1574)
Local adapation with distilling: 0.0001
training loss: tensor(0.2897) feature loss: tensor(0.1534)
Local adapation with distilling: 0.0001
training loss: tensor(0.3042) feature loss: tensor(0.2084)
Local adapation with distilling: 0.0001
training loss: tensor(0.3065) feature loss: tensor(0.1528)
Local adapation with distilling: 0.0001
training loss: tensor(0.2999) feature loss: tensor(0.1819)
         GM acc on global data: 0.6649 length of data: 10000
-------------Round number:  94  -------------
selected users: [13, 73, 5, 18, 99, 48, 23, 4, 35, 17]
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([46, 3, 32, 32]) torch.Size([46])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([53, 3, 32, 32]) torch.Size([53])
random features: torch.Size([53, 3, 32, 32]) torch.Size([53])
all data: 499
Local adapation with distilling: 0.0001
training loss: tensor(0.3089) feature loss: tensor(0.1465)
Local adapation with distilling: 0.0001
training loss: tensor(0.2432) feature loss: tensor(0.1449)
Local adapation with distilling: 0.0001
training loss: tensor(0.2441) feature loss: tensor(0.1244)
Local adapation with distilling: 0.0001
training loss: tensor(0.3186) feature loss: tensor(0.1336)
Local adapation with distilling: 0.0001
training loss: tensor(0.2835) feature loss: tensor(0.1285)
Local adapation with distilling: 0.0001
training loss: tensor(0.3218) feature loss: tensor(0.1333)
Local adapation with distilling: 0.0001
training loss: tensor(0.2972) feature loss: tensor(0.1355)
Local adapation with distilling: 0.0001
training loss: tensor(0.2895) feature loss: tensor(0.1269)
Local adapation with distilling: 0.0001
training loss: tensor(0.2701) feature loss: tensor(0.1242)
Local adapation with distilling: 0.0001
training loss: tensor(0.2436) feature loss: tensor(0.1232)
         GM acc on global data: 0.6695 length of data: 10000
-------------Round number:  95  -------------
selected users: [88, 9, 1, 60, 95, 26, 45, 71, 44, 21]
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
all data: 495
Local adapation with distilling: 0.0001
training loss: tensor(0.2157) feature loss: tensor(0.1340)
Local adapation with distilling: 0.0001
training loss: tensor(0.4570) feature loss: tensor(0.1388)
Local adapation with distilling: 0.0001
training loss: tensor(0.2069) feature loss: tensor(0.1069)
Local adapation with distilling: 0.0001
training loss: tensor(0.2167) feature loss: tensor(0.1365)
Local adapation with distilling: 0.0001
training loss: tensor(0.1864) feature loss: tensor(0.1048)
Local adapation with distilling: 0.0001
training loss: tensor(0.2261) feature loss: tensor(0.1251)
Local adapation with distilling: 0.0001
training loss: tensor(0.2002) feature loss: tensor(0.1081)
Local adapation with distilling: 0.0001
training loss: tensor(0.1803) feature loss: tensor(0.1073)
Local adapation with distilling: 0.0001
training loss: tensor(0.2348) feature loss: tensor(0.1223)
Local adapation with distilling: 0.0001
training loss: tensor(0.2283) feature loss: tensor(0.1357)
         GM acc on global data: 0.66 length of data: 10000
-------------Round number:  96  -------------
selected users: [41, 28, 52, 15, 87, 17, 75, 42, 45, 49]
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([53, 3, 32, 32]) torch.Size([53])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
all data: 494
Local adapation with distilling: 0.0001
training loss: tensor(0.2064) feature loss: tensor(0.1094)
Local adapation with distilling: 0.0001
training loss: tensor(0.3131) feature loss: tensor(0.1287)
Local adapation with distilling: 0.0001
training loss: tensor(0.5431) feature loss: tensor(0.1217)
Local adapation with distilling: 0.0001
training loss: tensor(0.3175) feature loss: tensor(0.1317)
Local adapation with distilling: 0.0001
training loss: tensor(0.2739) feature loss: tensor(0.1355)
Local adapation with distilling: 0.0001
training loss: tensor(0.1977) feature loss: tensor(0.1087)
Local adapation with distilling: 0.0001
training loss: tensor(0.2138) feature loss: tensor(0.1224)
Local adapation with distilling: 0.0001
training loss: tensor(0.2137) feature loss: tensor(0.1071)
Local adapation with distilling: 0.0001
training loss: tensor(0.1940) feature loss: tensor(0.1076)
Local adapation with distilling: 0.0001
training loss: tensor(0.2491) feature loss: tensor(0.1304)
         GM acc on global data: 0.6631 length of data: 10000
-------------Round number:  97  -------------
selected users: [31, 43, 64, 56, 85, 2, 70, 21, 34, 50]
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([55, 3, 32, 32]) torch.Size([55])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
all data: 490
Local adapation with distilling: 0.0001
training loss: tensor(0.2400) feature loss: tensor(0.1234)
Local adapation with distilling: 0.0001
training loss: tensor(0.2536) feature loss: tensor(0.1420)
Local adapation with distilling: 0.0001
training loss: tensor(0.2791) feature loss: tensor(0.1208)
Local adapation with distilling: 0.0001
training loss: tensor(0.2204) feature loss: tensor(0.1181)
Local adapation with distilling: 0.0001
training loss: tensor(0.2262) feature loss: tensor(0.1367)
Local adapation with distilling: 0.0001
training loss: tensor(0.2239) feature loss: tensor(0.1352)
Local adapation with distilling: 0.0001
training loss: tensor(0.2261) feature loss: tensor(0.1374)
Local adapation with distilling: 0.0001
training loss: tensor(0.2409) feature loss: tensor(0.1362)
Local adapation with distilling: 0.0001
training loss: tensor(0.2188) feature loss: tensor(0.1188)
Local adapation with distilling: 0.0001
training loss: tensor(0.2352) feature loss: tensor(0.1374)
         GM acc on global data: 0.6625 length of data: 10000
-------------Round number:  98  -------------
selected users: [11, 48, 97, 14, 22, 36, 99, 47, 33, 81]
random features: torch.Size([53, 3, 32, 32]) torch.Size([53])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
random features: torch.Size([46, 3, 32, 32]) torch.Size([46])
random features: torch.Size([46, 3, 32, 32]) torch.Size([46])
random features: torch.Size([48, 3, 32, 32]) torch.Size([48])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
all data: 488
Local adapation with distilling: 0.0001
training loss: tensor(0.2507) feature loss: tensor(0.1375)
Local adapation with distilling: 0.0001
training loss: tensor(0.2808) feature loss: tensor(0.1437)
Local adapation with distilling: 0.0001
training loss: tensor(0.2868) feature loss: tensor(0.1596)
Local adapation with distilling: 0.0001
training loss: tensor(0.2891) feature loss: tensor(0.1617)
Local adapation with distilling: 0.0001
training loss: tensor(0.4923) feature loss: tensor(0.1387)
Local adapation with distilling: 0.0001
training loss: tensor(0.2666) feature loss: tensor(0.1546)
Local adapation with distilling: 0.0001
training loss: tensor(0.2715) feature loss: tensor(0.1439)
Local adapation with distilling: 0.0001
training loss: tensor(0.3185) feature loss: tensor(0.1693)
Local adapation with distilling: 0.0001
training loss: tensor(0.2605) feature loss: tensor(0.1532)
Local adapation with distilling: 0.0001
training loss: tensor(0.6448) feature loss: tensor(0.1380)
         GM acc on global data: 0.6716 length of data: 10000
-------------Round number:  99  -------------
selected users: [14, 34, 30, 78, 16, 15, 91, 38, 10, 85]
random features: torch.Size([49, 3, 32, 32]) torch.Size([49])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([47, 3, 32, 32]) torch.Size([47])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([53, 3, 32, 32]) torch.Size([53])
random features: torch.Size([51, 3, 32, 32]) torch.Size([51])
random features: torch.Size([52, 3, 32, 32]) torch.Size([52])
random features: torch.Size([54, 3, 32, 32]) torch.Size([54])
random features: torch.Size([46, 3, 32, 32]) torch.Size([46])
random features: torch.Size([50, 3, 32, 32]) torch.Size([50])
all data: 501
Local adapation with distilling: 0.0001
training loss: tensor(0.2474) feature loss: tensor(0.1501)
Local adapation with distilling: 0.0001
training loss: tensor(0.2322) feature loss: tensor(0.1194)
Local adapation with distilling: 0.0001
training loss: tensor(0.2628) feature loss: tensor(0.1328)
Local adapation with distilling: 0.0001
training loss: tensor(0.2674) feature loss: tensor(0.1476)
Local adapation with distilling: 0.0001
training loss: tensor(0.2535) feature loss: tensor(0.1207)
Local adapation with distilling: 0.0001
training loss: tensor(0.3910) feature loss: tensor(0.1459)
Local adapation with distilling: 0.0001
training loss: tensor(0.2573) feature loss: tensor(0.1288)
Local adapation with distilling: 0.0001
training loss: tensor(0.2399) feature loss: tensor(0.1520)
Local adapation with distilling: 0.0001
training loss: tensor(0.2637) feature loss: tensor(0.1352)
Local adapation with distilling: 0.0001
training loss: tensor(0.2389) feature loss: tensor(0.1503)
         GM acc on global data: 0.6702 length of data: 10000
