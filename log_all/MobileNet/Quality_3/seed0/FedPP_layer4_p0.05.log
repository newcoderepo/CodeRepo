nohup: ignoring input
================================================================================
Summary of training process:
Dataset                : Cifar10
Batch size             : 64
Learing rate           : 0.001
Number of total clients: 100
Split method           : quantity
Split parameter        : 3.0
Clients per round      : 10
Number of global rounds: 100
Number of local rounds : 10
Feature from layer     : 4
Feature percentage     : 0.05
Local training loss    : CE_CE_KL
Loss of beta           : 1.0
Algorithm              : FedFea
Modelname              : MOBNET
Mode                   : training
Seed                   : 0
================================================================================
Files already downloaded and verified
Files already downloaded and verified
Class frequencies:
client,class0,class1,class2,class3,class4,class5,class6,class7,class8,class9,Amount
Client   0,0.298,0.00,0.00,0.00,0.00,0.375,0.00,0.00,0.327,0.00,496
Client   1,0.00,0.321,0.00,0.00,0.00,0.358,0.00,0.00,0.00,0.321,520
Client   2,0.307,0.346,0.346,0.00,0.00,0.00,0.00,0.00,0.00,0.00,482
Client   3,0.00,0.00,0.00,0.337,0.00,0.00,0.377,0.286,0.00,0.00,531
Client   4,0.00,0.00,0.340,0.00,0.320,0.00,0.00,0.00,0.00,0.340,491
Client   5,0.00,0.00,0.327,0.00,0.308,0.365,0.00,0.00,0.00,0.00,510
Client   6,0.00,0.00,0.319,0.00,0.300,0.00,0.382,0.00,0.00,0.00,524
Client   7,0.00,0.00,0.00,0.00,0.330,0.00,0.00,0.319,0.00,0.351,476
Client   8,0.00,0.347,0.00,0.00,0.00,0.00,0.00,0.316,0.337,0.00,481
Client   9,0.286,0.00,0.00,0.00,0.00,0.00,0.389,0.00,0.00,0.325,514
Client  10,0.315,0.00,0.00,0.00,0.00,0.00,0.00,0.326,0.00,0.358,466
Client  11,0.00,0.313,0.00,0.00,0.00,0.00,0.375,0.00,0.00,0.313,534
Client  12,0.306,0.347,0.347,0.00,0.00,0.00,0.00,0.00,0.00,0.00,481
Client  13,0.00,0.329,0.00,0.352,0.00,0.00,0.00,0.00,0.319,0.00,508
Client  14,0.00,0.00,0.00,0.359,0.315,0.00,0.00,0.00,0.325,0.00,498
Client  15,0.00,0.00,0.00,0.00,0.00,0.361,0.00,0.00,0.315,0.324,515
Client  16,0.00,0.00,0.00,0.337,0.00,0.00,0.377,0.286,0.00,0.00,531
Client  17,0.00,0.00,0.00,0.00,0.00,0.346,0.372,0.283,0.00,0.00,538
Client  18,0.00,0.337,0.00,0.00,0.00,0.00,0.00,0.00,0.327,0.337,496
Client  19,0.00,0.00,0.00,0.356,0.312,0.00,0.00,0.00,0.00,0.332,503
Client  20,0.309,0.351,0.00,0.00,0.00,0.00,0.00,0.00,0.340,0.00,476
Client  21,0.312,0.355,0.00,0.00,0.333,0.00,0.00,0.00,0.00,0.00,471
Client  22,0.00,0.00,0.326,0.349,0.00,0.00,0.00,0.00,0.00,0.326,513
Client  23,0.298,0.00,0.339,0.363,0.00,0.00,0.00,0.00,0.00,0.00,493
Client  24,0.00,0.00,0.340,0.00,0.320,0.00,0.00,0.00,0.00,0.340,491
Client  25,0.00,0.00,0.00,0.00,0.00,0.367,0.00,0.302,0.00,0.331,504
Client  26,0.00,0.00,0.00,0.00,0.00,0.00,0.378,0.00,0.306,0.316,529
Client  27,0.00,0.00,0.00,0.368,0.320,0.00,0.00,0.312,0.00,0.00,487
Client  28,0.00,0.00,0.00,0.00,0.00,0.360,0.00,0.00,0.315,0.325,514
Client  29,0.00,0.00,0.00,0.328,0.00,0.00,0.366,0.00,0.00,0.306,546
Client  30,0.309,0.00,0.352,0.00,0.00,0.00,0.00,0.00,0.339,0.00,475
Client  31,0.00,0.344,0.00,0.00,0.00,0.00,0.00,0.313,0.00,0.344,486
Client  32,0.00,0.00,0.335,0.359,0.00,0.00,0.00,0.305,0.00,0.00,498
Client  33,0.302,0.00,0.00,0.368,0.00,0.00,0.00,0.00,0.331,0.00,487
Client  34,0.00,0.352,0.00,0.00,0.328,0.00,0.00,0.320,0.00,0.00,475
Client  35,0.00,0.315,0.00,0.337,0.00,0.348,0.00,0.00,0.00,0.00,531
Client  36,0.289,0.00,0.00,0.00,0.00,0.00,0.394,0.00,0.317,0.00,508
Client  37,0.00,0.00,0.00,0.00,0.307,0.00,0.394,0.299,0.00,0.00,508
Client  38,0.00,0.00,0.00,0.00,0.00,0.339,0.366,0.00,0.295,0.00,546
Client  39,0.00,0.00,0.322,0.00,0.00,0.356,0.00,0.00,0.00,0.322,519
Client  40,0.320,0.00,0.00,0.00,0.00,0.00,0.00,0.330,0.350,0.00,460
Client  41,0.00,0.352,0.00,0.00,0.328,0.00,0.00,0.320,0.00,0.00,475
Client  42,0.00,0.00,0.352,0.00,0.328,0.00,0.00,0.320,0.00,0.00,475
Client  43,0.298,0.00,0.00,0.363,0.00,0.00,0.00,0.00,0.00,0.339,493
Client  44,0.313,0.00,0.355,0.00,0.332,0.00,0.00,0.00,0.00,0.00,470
Client  45,0.00,0.331,0.00,0.00,0.00,0.367,0.00,0.302,0.00,0.00,504
Client  46,0.00,0.00,0.00,0.00,0.00,0.00,0.385,0.293,0.00,0.322,519
Client  47,0.00,0.00,0.00,0.00,0.333,0.00,0.00,0.323,0.344,0.00,468
Client  48,0.309,0.352,0.00,0.00,0.00,0.00,0.00,0.00,0.339,0.00,475
Client  49,0.00,0.00,0.337,0.00,0.00,0.00,0.00,0.00,0.325,0.337,495
Client  50,0.298,0.339,0.00,0.363,0.00,0.00,0.00,0.00,0.00,0.00,493
Client  51,0.00,0.344,0.344,0.00,0.00,0.00,0.00,0.311,0.00,0.00,485
Client  52,0.286,0.00,0.325,0.00,0.00,0.00,0.389,0.00,0.00,0.00,514
Client  53,0.00,0.00,0.326,0.350,0.00,0.00,0.00,0.00,0.00,0.324,512
Client  54,0.00,0.00,0.319,0.00,0.298,0.00,0.382,0.00,0.00,0.00,523
Client  55,0.304,0.00,0.00,0.00,0.00,0.383,0.00,0.313,0.00,0.00,483
Client  56,0.00,0.303,0.00,0.00,0.00,0.335,0.362,0.00,0.00,0.00,552
Client  57,0.00,0.00,0.00,0.00,0.308,0.00,0.394,0.298,0.00,0.00,507
Client  58,0.289,0.00,0.00,0.00,0.00,0.00,0.394,0.00,0.317,0.00,508
Client  59,0.00,0.322,0.00,0.00,0.00,0.357,0.00,0.00,0.00,0.320,518
Client  60,0.306,0.347,0.347,0.00,0.00,0.00,0.00,0.00,0.00,0.00,481
Client  61,0.00,0.327,0.00,0.00,0.308,0.365,0.00,0.00,0.00,0.00,507
Client  62,0.316,0.00,0.359,0.00,0.00,0.00,0.00,0.325,0.00,0.00,465
Client  63,0.00,0.00,0.00,0.354,0.00,0.00,0.00,0.00,0.318,0.328,506
Client  64,0.00,0.00,0.00,0.00,0.317,0.376,0.00,0.307,0.00,0.00,492
Client  65,0.295,0.00,0.00,0.00,0.00,0.371,0.00,0.00,0.00,0.333,498
Client  66,0.00,0.00,0.00,0.327,0.00,0.00,0.368,0.00,0.00,0.305,544
Client  67,0.00,0.351,0.00,0.00,0.330,0.00,0.00,0.319,0.00,0.00,473
Client  68,0.00,0.00,0.00,0.00,0.302,0.00,0.387,0.00,0.311,0.00,517
Client  69,0.00,0.00,0.337,0.00,0.00,0.00,0.00,0.00,0.327,0.337,493
Client  70,0.304,0.00,0.00,0.00,0.00,0.383,0.00,0.313,0.00,0.00,483
Client  71,0.00,0.327,0.00,0.00,0.308,0.365,0.00,0.00,0.00,0.00,507
Client  72,0.00,0.00,0.324,0.00,0.00,0.361,0.00,0.00,0.314,0.00,512
Client  73,0.00,0.00,0.00,0.340,0.00,0.353,0.00,0.00,0.307,0.00,524
Client  74,0.00,0.344,0.00,0.00,0.323,0.00,0.00,0.00,0.333,0.00,483
Client  75,0.304,0.00,0.00,0.00,0.00,0.383,0.00,0.313,0.00,0.00,483
Client  76,0.00,0.00,0.00,0.333,0.292,0.00,0.375,0.00,0.00,0.00,534
Client  77,0.317,0.00,0.358,0.00,0.00,0.00,0.00,0.325,0.00,0.00,464
Client  78,0.00,0.00,0.00,0.340,0.00,0.353,0.00,0.00,0.307,0.00,524
Client  79,0.00,0.333,0.333,0.00,0.00,0.00,0.00,0.00,0.00,0.333,498
Client  80,0.306,0.00,0.00,0.370,0.324,0.00,0.00,0.00,0.00,0.00,481
Client  81,0.287,0.324,0.00,0.00,0.00,0.00,0.390,0.00,0.00,0.00,513
Client  82,0.317,0.00,0.358,0.00,0.00,0.00,0.00,0.325,0.00,0.00,464
Client  83,0.00,0.00,0.329,0.352,0.00,0.00,0.00,0.00,0.319,0.00,505
Client  84,0.306,0.00,0.00,0.370,0.324,0.00,0.00,0.00,0.00,0.00,481
Client  85,0.00,0.00,0.00,0.00,0.311,0.369,0.00,0.00,0.321,0.00,502
Client  86,0.00,0.00,0.312,0.00,0.00,0.00,0.376,0.00,0.00,0.312,532
Client  87,0.309,0.00,0.00,0.374,0.00,0.00,0.00,0.317,0.00,0.00,476
Client  88,0.00,0.344,0.00,0.00,0.323,0.00,0.00,0.00,0.333,0.00,483
Client  89,0.00,0.00,0.00,0.327,0.00,0.00,0.368,0.00,0.00,0.305,544
Client  90,0.309,0.00,0.00,0.374,0.00,0.00,0.00,0.317,0.00,0.00,476
Client  91,0.00,0.314,0.00,0.336,0.00,0.350,0.00,0.00,0.00,0.00,529
Client  92,0.313,0.00,0.354,0.00,0.333,0.00,0.00,0.00,0.00,0.00,469
Client  93,0.00,0.00,0.00,0.340,0.00,0.353,0.00,0.00,0.307,0.00,524
Client  94,0.00,0.00,0.00,0.00,0.308,0.00,0.394,0.298,0.00,0.00,507
Client  95,0.00,0.331,0.00,0.00,0.00,0.369,0.00,0.301,0.00,0.00,502
Client  96,0.287,0.00,0.324,0.00,0.00,0.00,0.390,0.00,0.00,0.00,513
Client  97,0.00,0.00,0.347,0.00,0.00,0.00,0.00,0.316,0.337,0.00,478
Client  98,0.00,0.344,0.00,0.00,0.323,0.00,0.00,0.00,0.333,0.00,483
Client  99,0.313,0.00,0.00,0.00,0.333,0.00,0.00,0.00,0.00,0.354,469
0 [0 5 8] [0 5 8] [1 2 3 4 6 7 9]
0 training: Counter({5: 186, 8: 162, 0: 148}) testing iid: Counter({8: 1000, 0: 1000, 5: 1000})
1 [1 5 9] [1 5 9] [0 2 3 4 6 7 8]
1 training: Counter({5: 186, 1: 167, 9: 167}) testing iid: Counter({1: 1000, 9: 1000, 5: 1000})
2 [0 1 2] [0 1 2] [3 4 5 6 7 8 9]
2 training: Counter({1: 167, 2: 167, 0: 148}) testing iid: Counter({0: 1000, 1: 1000, 2: 1000})
3 [3 6 7] [3 6 7] [0 1 2 4 5 8 9]
3 training: Counter({6: 200, 3: 179, 7: 152}) testing iid: Counter({3: 1000, 6: 1000, 7: 1000})
4 [2 4 9] [2 4 9] [0 1 3 5 6 7 8]
4 training: Counter({2: 167, 9: 167, 4: 157}) testing iid: Counter({9: 1000, 4: 1000, 2: 1000})
5 [2 4 5] [2 4 5] [0 1 3 6 7 8 9]
5 training: Counter({5: 186, 2: 167, 4: 157}) testing iid: Counter({5: 1000, 4: 1000, 2: 1000})
6 [2 4 6] [2 4 6] [0 1 3 5 7 8 9]
6 training: Counter({6: 200, 2: 167, 4: 157}) testing iid: Counter({6: 1000, 4: 1000, 2: 1000})
7 [4 7 9] [4 7 9] [0 1 2 3 5 6 8]
7 training: Counter({9: 167, 4: 157, 7: 152}) testing iid: Counter({9: 1000, 7: 1000, 4: 1000})
8 [1 7 8] [1 7 8] [0 2 3 4 5 6 9]
8 training: Counter({1: 167, 8: 162, 7: 152}) testing iid: Counter({8: 1000, 1: 1000, 7: 1000})
9 [0 6 9] [0 6 9] [1 2 3 4 5 7 8]
9 training: Counter({6: 200, 9: 167, 0: 147}) testing iid: Counter({0: 1000, 6: 1000, 9: 1000})
10 [0 7 9] [0 7 9] [1 2 3 4 5 6 8]
10 training: Counter({9: 167, 7: 152, 0: 147}) testing iid: Counter({0: 1000, 9: 1000, 7: 1000})
11 [1 6 9] [1 6 9] [0 2 3 4 5 7 8]
11 training: Counter({6: 200, 1: 167, 9: 167}) testing iid: Counter({6: 1000, 1: 1000, 9: 1000})
12 [0 1 2] [0 1 2] [3 4 5 6 7 8 9]
12 training: Counter({1: 167, 2: 167, 0: 147}) testing iid: Counter({0: 1000, 1: 1000, 2: 1000})
13 [1 3 8] [1 3 8] [0 2 4 5 6 7 9]
13 training: Counter({3: 179, 1: 167, 8: 162}) testing iid: Counter({3: 1000, 8: 1000, 1: 1000})
14 [3 4 8] [3 4 8] [0 1 2 5 6 7 9]
14 training: Counter({3: 179, 8: 162, 4: 157}) testing iid: Counter({3: 1000, 8: 1000, 4: 1000})
15 [5 8 9] [5 8 9] [0 1 2 3 4 6 7]
15 training: Counter({5: 186, 9: 167, 8: 162}) testing iid: Counter({8: 1000, 9: 1000, 5: 1000})
16 [3 6 7] [3 6 7] [0 1 2 4 5 8 9]
16 training: Counter({6: 200, 3: 179, 7: 152}) testing iid: Counter({3: 1000, 6: 1000, 7: 1000})
17 [5 6 7] [5 6 7] [0 1 2 3 4 8 9]
17 training: Counter({6: 200, 5: 186, 7: 152}) testing iid: Counter({6: 1000, 5: 1000, 7: 1000})
18 [1 8 9] [1 8 9] [0 2 3 4 5 6 7]
18 training: Counter({1: 167, 9: 167, 8: 162}) testing iid: Counter({8: 1000, 1: 1000, 9: 1000})
19 [3 4 9] [3 4 9] [0 1 2 5 6 7 8]
19 training: Counter({3: 179, 9: 167, 4: 157}) testing iid: Counter({3: 1000, 9: 1000, 4: 1000})
20 [0 1 8] [0 1 8] [2 3 4 5 6 7 9]
20 training: Counter({1: 167, 8: 162, 0: 147}) testing iid: Counter({8: 1000, 0: 1000, 1: 1000})
21 [0 1 4] [0 1 4] [2 3 5 6 7 8 9]
21 training: Counter({1: 167, 4: 157, 0: 147}) testing iid: Counter({0: 1000, 1: 1000, 4: 1000})
22 [2 3 9] [2 3 9] [0 1 4 5 6 7 8]
22 training: Counter({3: 179, 2: 167, 9: 167}) testing iid: Counter({3: 1000, 9: 1000, 2: 1000})
23 [0 2 3] [0 2 3] [1 4 5 6 7 8 9]
23 training: Counter({3: 179, 2: 167, 0: 147}) testing iid: Counter({3: 1000, 0: 1000, 2: 1000})
24 [2 4 9] [2 4 9] [0 1 3 5 6 7 8]
24 training: Counter({2: 167, 9: 167, 4: 157}) testing iid: Counter({9: 1000, 4: 1000, 2: 1000})
25 [5 7 9] [5 7 9] [0 1 2 3 4 6 8]
25 training: Counter({5: 185, 9: 167, 7: 152}) testing iid: Counter({9: 1000, 5: 1000, 7: 1000})
26 [6 8 9] [6 8 9] [0 1 2 3 4 5 7]
26 training: Counter({6: 200, 9: 167, 8: 162}) testing iid: Counter({8: 1000, 6: 1000, 9: 1000})
27 [3 4 7] [3 4 7] [0 1 2 5 6 8 9]
27 training: Counter({3: 179, 4: 156, 7: 152}) testing iid: Counter({3: 1000, 7: 1000, 4: 1000})
28 [5 8 9] [5 8 9] [0 1 2 3 4 6 7]
28 training: Counter({5: 185, 9: 167, 8: 162}) testing iid: Counter({8: 1000, 9: 1000, 5: 1000})
29 [3 6 9] [3 6 9] [0 1 2 4 5 7 8]
29 training: Counter({6: 200, 3: 179, 9: 167}) testing iid: Counter({3: 1000, 6: 1000, 9: 1000})
30 [0 2 8] [0 2 8] [1 3 4 5 6 7 9]
30 training: Counter({2: 167, 8: 161, 0: 147}) testing iid: Counter({8: 1000, 0: 1000, 2: 1000})
31 [1 7 9] [1 7 9] [0 2 3 4 5 6 8]
31 training: Counter({1: 167, 9: 167, 7: 152}) testing iid: Counter({1: 1000, 9: 1000, 7: 1000})
32 [2 3 7] [2 3 7] [0 1 4 5 6 8 9]
32 training: Counter({3: 179, 2: 167, 7: 152}) testing iid: Counter({3: 1000, 7: 1000, 2: 1000})
33 [0 3 8] [0 3 8] [1 2 4 5 6 7 9]
33 training: Counter({3: 179, 8: 161, 0: 147}) testing iid: Counter({3: 1000, 8: 1000, 0: 1000})
34 [1 4 7] [1 4 7] [0 2 3 5 6 8 9]
34 training: Counter({1: 167, 4: 156, 7: 152}) testing iid: Counter({1: 1000, 7: 1000, 4: 1000})
35 [1 3 5] [1 3 5] [0 2 4 6 7 8 9]
35 training: Counter({5: 185, 3: 179, 1: 167}) testing iid: Counter({3: 1000, 1: 1000, 5: 1000})
36 [0 6 8] [0 6 8] [1 2 3 4 5 7 9]
36 training: Counter({6: 200, 8: 161, 0: 147}) testing iid: Counter({8: 1000, 0: 1000, 6: 1000})
37 [4 6 7] [4 6 7] [0 1 2 3 5 8 9]
37 training: Counter({6: 200, 4: 156, 7: 152}) testing iid: Counter({6: 1000, 7: 1000, 4: 1000})
38 [5 6 8] [5 6 8] [0 1 2 3 4 7 9]
38 training: Counter({6: 200, 5: 185, 8: 161}) testing iid: Counter({8: 1000, 6: 1000, 5: 1000})
39 [2 5 9] [2 5 9] [0 1 3 4 6 7 8]
39 training: Counter({5: 185, 2: 167, 9: 167}) testing iid: Counter({9: 1000, 5: 1000, 2: 1000})
40 [0 7 8] [0 7 8] [1 2 3 4 5 6 9]
40 training: Counter({8: 161, 7: 152, 0: 147}) testing iid: Counter({8: 1000, 0: 1000, 7: 1000})
41 [1 4 7] [1 4 7] [0 2 3 5 6 8 9]
41 training: Counter({1: 167, 4: 156, 7: 152}) testing iid: Counter({1: 1000, 7: 1000, 4: 1000})
42 [2 4 7] [2 4 7] [0 1 3 5 6 8 9]
42 training: Counter({2: 167, 4: 156, 7: 152}) testing iid: Counter({7: 1000, 4: 1000, 2: 1000})
43 [0 3 9] [0 3 9] [1 2 4 5 6 7 8]
43 training: Counter({3: 179, 9: 167, 0: 147}) testing iid: Counter({3: 1000, 0: 1000, 9: 1000})
44 [0 2 4] [0 2 4] [1 3 5 6 7 8 9]
44 training: Counter({2: 167, 4: 156, 0: 147}) testing iid: Counter({0: 1000, 4: 1000, 2: 1000})
45 [1 5 7] [1 5 7] [0 2 3 4 6 8 9]
45 training: Counter({5: 185, 1: 167, 7: 152}) testing iid: Counter({1: 1000, 5: 1000, 7: 1000})
46 [6 7 9] [6 7 9] [0 1 2 3 4 5 8]
46 training: Counter({6: 200, 9: 167, 7: 152}) testing iid: Counter({6: 1000, 9: 1000, 7: 1000})
47 [4 7 8] [4 7 8] [0 1 2 3 5 6 9]
47 training: Counter({8: 161, 4: 156, 7: 151}) testing iid: Counter({8: 1000, 7: 1000, 4: 1000})
48 [0 1 8] [0 1 8] [2 3 4 5 6 7 9]
48 training: Counter({1: 167, 8: 161, 0: 147}) testing iid: Counter({8: 1000, 0: 1000, 1: 1000})
49 [2 8 9] [2 8 9] [0 1 3 4 5 6 7]
49 training: Counter({2: 167, 9: 167, 8: 161}) testing iid: Counter({8: 1000, 9: 1000, 2: 1000})
50 [0 1 3] [0 1 3] [2 4 5 6 7 8 9]
50 training: Counter({3: 179, 1: 167, 0: 147}) testing iid: Counter({3: 1000, 0: 1000, 1: 1000})
51 [1 2 7] [1 2 7] [0 3 4 5 6 8 9]
51 training: Counter({1: 167, 2: 167, 7: 151}) testing iid: Counter({1: 1000, 7: 1000, 2: 1000})
52 [0 2 6] [0 2 6] [1 3 4 5 7 8 9]
52 training: Counter({6: 200, 2: 167, 0: 147}) testing iid: Counter({0: 1000, 6: 1000, 2: 1000})
53 [2 3 9] [2 3 9] [0 1 4 5 6 7 8]
53 training: Counter({3: 179, 2: 167, 9: 166}) testing iid: Counter({3: 1000, 9: 1000, 2: 1000})
54 [2 4 6] [2 4 6] [0 1 3 5 7 8 9]
54 training: Counter({6: 200, 2: 167, 4: 156}) testing iid: Counter({6: 1000, 4: 1000, 2: 1000})
55 [0 5 7] [0 5 7] [1 2 3 4 6 8 9]
55 training: Counter({5: 185, 7: 151, 0: 147}) testing iid: Counter({0: 1000, 5: 1000, 7: 1000})
56 [1 5 6] [1 5 6] [0 2 3 4 7 8 9]
56 training: Counter({6: 200, 5: 185, 1: 167}) testing iid: Counter({6: 1000, 1: 1000, 5: 1000})
57 [4 6 7] [4 6 7] [0 1 2 3 5 8 9]
57 training: Counter({6: 200, 4: 156, 7: 151}) testing iid: Counter({6: 1000, 7: 1000, 4: 1000})
58 [0 6 8] [0 6 8] [1 2 3 4 5 7 9]
58 training: Counter({6: 200, 8: 161, 0: 147}) testing iid: Counter({8: 1000, 0: 1000, 6: 1000})
59 [1 5 9] [1 5 9] [0 2 3 4 6 7 8]
59 training: Counter({5: 185, 1: 167, 9: 166}) testing iid: Counter({1: 1000, 9: 1000, 5: 1000})
60 [0 1 2] [0 1 2] [3 4 5 6 7 8 9]
60 training: Counter({1: 167, 2: 167, 0: 147}) testing iid: Counter({0: 1000, 1: 1000, 2: 1000})
61 [1 4 5] [1 4 5] [0 2 3 6 7 8 9]
61 training: Counter({5: 185, 1: 166, 4: 156}) testing iid: Counter({1: 1000, 5: 1000, 4: 1000})
62 [0 2 7] [0 2 7] [1 3 4 5 6 8 9]
62 training: Counter({2: 167, 7: 151, 0: 147}) testing iid: Counter({0: 1000, 7: 1000, 2: 1000})
63 [3 8 9] [3 8 9] [0 1 2 4 5 6 7]
63 training: Counter({3: 179, 9: 166, 8: 161}) testing iid: Counter({3: 1000, 8: 1000, 9: 1000})
64 [4 5 7] [4 5 7] [0 1 2 3 6 8 9]
64 training: Counter({5: 185, 4: 156, 7: 151}) testing iid: Counter({5: 1000, 7: 1000, 4: 1000})
65 [0 5 9] [0 5 9] [1 2 3 4 6 7 8]
65 training: Counter({5: 185, 9: 166, 0: 147}) testing iid: Counter({0: 1000, 9: 1000, 5: 1000})
66 [3 6 9] [3 6 9] [0 1 2 4 5 7 8]
66 training: Counter({6: 200, 3: 178, 9: 166}) testing iid: Counter({3: 1000, 6: 1000, 9: 1000})
67 [1 4 7] [1 4 7] [0 2 3 5 6 8 9]
67 training: Counter({1: 166, 4: 156, 7: 151}) testing iid: Counter({1: 1000, 7: 1000, 4: 1000})
68 [4 6 8] [4 6 8] [0 1 2 3 5 7 9]
68 training: Counter({6: 200, 8: 161, 4: 156}) testing iid: Counter({8: 1000, 6: 1000, 4: 1000})
69 [2 8 9] [2 8 9] [0 1 3 4 5 6 7]
69 training: Counter({2: 166, 9: 166, 8: 161}) testing iid: Counter({8: 1000, 9: 1000, 2: 1000})
70 [0 5 7] [0 5 7] [1 2 3 4 6 8 9]
70 training: Counter({5: 185, 7: 151, 0: 147}) testing iid: Counter({0: 1000, 5: 1000, 7: 1000})
71 [1 4 5] [1 4 5] [0 2 3 6 7 8 9]
71 training: Counter({5: 185, 1: 166, 4: 156}) testing iid: Counter({1: 1000, 5: 1000, 4: 1000})
72 [2 5 8] [2 5 8] [0 1 3 4 6 7 9]
72 training: Counter({5: 185, 2: 166, 8: 161}) testing iid: Counter({8: 1000, 5: 1000, 2: 1000})
73 [3 5 8] [3 5 8] [0 1 2 4 6 7 9]
73 training: Counter({5: 185, 3: 178, 8: 161}) testing iid: Counter({3: 1000, 8: 1000, 5: 1000})
74 [1 4 8] [1 4 8] [0 2 3 5 6 7 9]
74 training: Counter({1: 166, 8: 161, 4: 156}) testing iid: Counter({8: 1000, 1: 1000, 4: 1000})
75 [0 5 7] [0 5 7] [1 2 3 4 6 8 9]
75 training: Counter({5: 185, 7: 151, 0: 147}) testing iid: Counter({0: 1000, 5: 1000, 7: 1000})
76 [3 4 6] [3 4 6] [0 1 2 5 7 8 9]
76 training: Counter({6: 200, 3: 178, 4: 156}) testing iid: Counter({3: 1000, 6: 1000, 4: 1000})
77 [0 2 7] [0 2 7] [1 3 4 5 6 8 9]
77 training: Counter({2: 166, 7: 151, 0: 147}) testing iid: Counter({0: 1000, 7: 1000, 2: 1000})
78 [3 5 8] [3 5 8] [0 1 2 4 6 7 9]
78 training: Counter({5: 185, 3: 178, 8: 161}) testing iid: Counter({3: 1000, 8: 1000, 5: 1000})
79 [1 2 9] [1 2 9] [0 3 4 5 6 7 8]
79 training: Counter({1: 166, 2: 166, 9: 166}) testing iid: Counter({1: 1000, 9: 1000, 2: 1000})
80 [0 3 4] [0 3 4] [1 2 5 6 7 8 9]
80 training: Counter({3: 178, 4: 156, 0: 147}) testing iid: Counter({3: 1000, 0: 1000, 4: 1000})
81 [0 1 6] [0 1 6] [2 3 4 5 7 8 9]
81 training: Counter({6: 200, 1: 166, 0: 147}) testing iid: Counter({0: 1000, 6: 1000, 1: 1000})
82 [0 2 7] [0 2 7] [1 3 4 5 6 8 9]
82 training: Counter({2: 166, 7: 151, 0: 147}) testing iid: Counter({0: 1000, 7: 1000, 2: 1000})
83 [2 3 8] [2 3 8] [0 1 4 5 6 7 9]
83 training: Counter({3: 178, 2: 166, 8: 161}) testing iid: Counter({3: 1000, 8: 1000, 2: 1000})
84 [0 3 4] [0 3 4] [1 2 5 6 7 8 9]
84 training: Counter({3: 178, 4: 156, 0: 147}) testing iid: Counter({3: 1000, 0: 1000, 4: 1000})
85 [4 5 8] [4 5 8] [0 1 2 3 6 7 9]
85 training: Counter({5: 185, 8: 161, 4: 156}) testing iid: Counter({8: 1000, 5: 1000, 4: 1000})
86 [2 6 9] [2 6 9] [0 1 3 4 5 7 8]
86 training: Counter({6: 200, 2: 166, 9: 166}) testing iid: Counter({6: 1000, 9: 1000, 2: 1000})
87 [0 3 7] [0 3 7] [1 2 4 5 6 8 9]
87 training: Counter({3: 178, 7: 151, 0: 147}) testing iid: Counter({3: 1000, 0: 1000, 7: 1000})
88 [1 4 8] [1 4 8] [0 2 3 5 6 7 9]
88 training: Counter({1: 166, 8: 161, 4: 156}) testing iid: Counter({8: 1000, 1: 1000, 4: 1000})
89 [3 6 9] [3 6 9] [0 1 2 4 5 7 8]
89 training: Counter({6: 200, 3: 178, 9: 166}) testing iid: Counter({3: 1000, 6: 1000, 9: 1000})
90 [0 3 7] [0 3 7] [1 2 4 5 6 8 9]
90 training: Counter({3: 178, 7: 151, 0: 147}) testing iid: Counter({3: 1000, 0: 1000, 7: 1000})
91 [1 3 5] [1 3 5] [0 2 4 6 7 8 9]
91 training: Counter({5: 185, 3: 178, 1: 166}) testing iid: Counter({3: 1000, 1: 1000, 5: 1000})
92 [0 2 4] [0 2 4] [1 3 5 6 7 8 9]
92 training: Counter({2: 166, 4: 156, 0: 147}) testing iid: Counter({0: 1000, 4: 1000, 2: 1000})
93 [3 5 8] [3 5 8] [0 1 2 4 6 7 9]
93 training: Counter({5: 185, 3: 178, 8: 161}) testing iid: Counter({3: 1000, 8: 1000, 5: 1000})
94 [4 6 7] [4 6 7] [0 1 2 3 5 8 9]
94 training: Counter({6: 200, 4: 156, 7: 151}) testing iid: Counter({6: 1000, 7: 1000, 4: 1000})
95 [1 5 7] [1 5 7] [0 2 3 4 6 8 9]
95 training: Counter({5: 185, 1: 166, 7: 151}) testing iid: Counter({1: 1000, 5: 1000, 7: 1000})
96 [0 2 6] [0 2 6] [1 3 4 5 7 8 9]
96 training: Counter({6: 200, 2: 166, 0: 147}) testing iid: Counter({0: 1000, 6: 1000, 2: 1000})
97 [2 7 8] [2 7 8] [0 1 3 4 5 6 9]
97 training: Counter({2: 166, 8: 161, 7: 151}) testing iid: Counter({8: 1000, 7: 1000, 2: 1000})
98 [1 4 8] [1 4 8] [0 2 3 5 6 7 9]
98 training: Counter({1: 166, 8: 161, 4: 156}) testing iid: Counter({8: 1000, 1: 1000, 4: 1000})
99 [0 4 9] [0 4 9] [1 2 3 5 6 7 8]
99 training: Counter({9: 166, 4: 156, 0: 147}) testing iid: Counter({0: 1000, 9: 1000, 4: 1000})
Num_samples of Training set per client: [496, 520, 482, 531, 491, 510, 524, 476, 481, 514, 466, 534, 481, 508, 498, 515, 531, 538, 496, 503, 476, 471, 513, 493, 491, 504, 529, 487, 514, 546, 475, 486, 498, 487, 475, 531, 508, 508, 546, 519, 460, 475, 475, 493, 470, 504, 519, 468, 475, 495, 493, 485, 514, 512, 523, 483, 552, 507, 508, 518, 481, 507, 465, 506, 492, 498, 544, 473, 517, 493, 483, 507, 512, 524, 483, 483, 534, 464, 524, 498, 481, 513, 464, 505, 481, 502, 532, 476, 483, 544, 476, 529, 469, 524, 507, 502, 513, 478, 483, 469]
Total_training_samples: 50000
Global test set: 10000
Finish Generating Samples, distribution saved
MobileNetV2(
  (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (layers): Sequential(
    (0): Block(
      (conv1): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): Block(
      (conv1): Conv2d(16, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=96, bias=False)
      (bn2): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(96, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(16, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (2): Block(
      (conv1): Conv2d(24, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=144, bias=False)
      (bn2): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(144, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (3): Block(
      (conv1): Conv2d(24, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(144, 144, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=144, bias=False)
      (bn2): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(144, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (4): Block(
      (conv1): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
      (bn2): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(192, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (5): Block(
      (conv1): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
      (bn2): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(192, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (6): Block(
      (conv1): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(192, 192, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=192, bias=False)
      (bn2): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(192, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (7): Block(
      (conv1): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
      (bn2): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (8): Block(
      (conv1): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
      (bn2): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (9): Block(
      (conv1): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
      (bn2): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (10): Block(
      (conv1): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
      (bn2): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(384, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(64, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (11): Block(
      (conv1): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)
      (bn2): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (12): Block(
      (conv1): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)
      (bn2): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (13): Block(
      (conv1): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(576, 576, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=576, bias=False)
      (bn2): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(576, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (14): Block(
      (conv1): Conv2d(160, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(960, 960, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=960, bias=False)
      (bn2): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(960, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (15): Block(
      (conv1): Conv2d(160, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(960, 960, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=960, bias=False)
      (bn2): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(960, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (16): Block(
      (conv1): Conv2d(160, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(960, 960, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=960, bias=False)
      (bn2): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(960, 320, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(160, 320, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (conv2): Conv2d(320, 1280, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn2): BatchNorm2d(1280, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (linear): Linear(in_features=1280, out_features=10, bias=True)
)
number of parameters: 2296922
clients initializting...
output size: 10
  0%|          | 0/100 [00:00<?, ?it/s]  1%|          | 1/100 [00:00<00:57,  1.73it/s]  2%|▏         | 2/100 [00:01<00:57,  1.71it/s]  3%|▎         | 3/100 [00:01<00:57,  1.69it/s]  4%|▍         | 4/100 [00:02<00:56,  1.70it/s]  5%|▌         | 5/100 [00:02<00:56,  1.68it/s]  6%|▌         | 6/100 [00:03<00:55,  1.69it/s]  7%|▋         | 7/100 [00:04<00:55,  1.66it/s]  8%|▊         | 8/100 [00:04<00:54,  1.68it/s]  9%|▉         | 9/100 [00:05<00:54,  1.68it/s] 10%|█         | 10/100 [00:05<00:54,  1.65it/s] 11%|█         | 11/100 [00:06<00:54,  1.64it/s] 12%|█▏        | 12/100 [00:07<00:54,  1.62it/s] 13%|█▎        | 13/100 [00:07<00:53,  1.64it/s] 14%|█▍        | 14/100 [00:08<00:52,  1.64it/s] 15%|█▌        | 15/100 [00:09<00:52,  1.63it/s] 16%|█▌        | 16/100 [00:09<00:52,  1.61it/s] 17%|█▋        | 17/100 [00:10<00:51,  1.62it/s] 18%|█▊        | 18/100 [00:10<00:50,  1.62it/s] 19%|█▉        | 19/100 [00:11<00:49,  1.63it/s] 20%|██        | 20/100 [00:12<00:49,  1.62it/s] 21%|██        | 21/100 [00:12<00:48,  1.65it/s] 22%|██▏       | 22/100 [00:13<00:47,  1.64it/s] 23%|██▎       | 23/100 [00:13<00:46,  1.64it/s] 24%|██▍       | 24/100 [00:14<00:46,  1.64it/s] 25%|██▌       | 25/100 [00:15<00:45,  1.65it/s] 26%|██▌       | 26/100 [00:15<00:44,  1.66it/s] 27%|██▋       | 27/100 [00:16<00:43,  1.66it/s] 28%|██▊       | 28/100 [00:16<00:42,  1.68it/s] 29%|██▉       | 29/100 [00:17<00:42,  1.65it/s] 30%|███       | 30/100 [00:18<00:42,  1.66it/s] 31%|███       | 31/100 [00:18<00:42,  1.64it/s] 32%|███▏      | 32/100 [00:19<00:41,  1.63it/s] 33%|███▎      | 33/100 [00:20<00:41,  1.63it/s] 34%|███▍      | 34/100 [00:20<00:40,  1.63it/s] 35%|███▌      | 35/100 [00:24<01:47,  1.65s/it] 36%|███▌      | 36/100 [00:25<01:25,  1.34s/it] 37%|███▋      | 37/100 [00:25<01:11,  1.13s/it] 38%|███▊      | 38/100 [00:26<01:00,  1.03it/s] 39%|███▉      | 39/100 [00:27<00:52,  1.15it/s] 40%|████      | 40/100 [00:27<00:47,  1.25it/s] 41%|████      | 41/100 [00:28<00:43,  1.34it/s] 42%|████▏     | 42/100 [00:29<00:40,  1.42it/s] 43%|████▎     | 43/100 [00:29<00:38,  1.48it/s] 44%|████▍     | 44/100 [00:30<00:37,  1.50it/s] 45%|████▌     | 45/100 [00:30<00:36,  1.53it/s] 46%|████▌     | 46/100 [00:31<00:35,  1.52it/s] 47%|████▋     | 47/100 [00:32<00:34,  1.54it/s] 48%|████▊     | 48/100 [00:32<00:33,  1.54it/s] 49%|████▉     | 49/100 [00:33<00:33,  1.51it/s] 50%|█████     | 50/100 [00:34<00:33,  1.50it/s] 51%|█████     | 51/100 [00:34<00:32,  1.50it/s] 52%|█████▏    | 52/100 [00:35<00:31,  1.50it/s] 53%|█████▎    | 53/100 [00:36<00:31,  1.50it/s] 54%|█████▍    | 54/100 [00:36<00:30,  1.50it/s] 55%|█████▌    | 55/100 [00:37<00:29,  1.51it/s] 56%|█████▌    | 56/100 [00:38<00:29,  1.51it/s] 57%|█████▋    | 57/100 [00:38<00:28,  1.50it/s] 58%|█████▊    | 58/100 [00:39<00:27,  1.51it/s] 59%|█████▉    | 59/100 [00:40<00:27,  1.50it/s] 60%|██████    | 60/100 [00:40<00:26,  1.48it/s] 61%|██████    | 61/100 [00:41<00:26,  1.48it/s] 62%|██████▏   | 62/100 [00:42<00:25,  1.49it/s] 63%|██████▎   | 63/100 [00:42<00:24,  1.51it/s] 64%|██████▍   | 64/100 [00:43<00:23,  1.55it/s] 65%|██████▌   | 65/100 [00:44<00:22,  1.56it/s] 66%|██████▌   | 66/100 [00:44<00:21,  1.57it/s] 67%|██████▋   | 67/100 [00:45<00:21,  1.57it/s] 68%|██████▊   | 68/100 [00:46<00:20,  1.58it/s] 69%|██████▉   | 69/100 [00:46<00:19,  1.59it/s] 70%|███████   | 70/100 [00:47<00:18,  1.60it/s] 71%|███████   | 71/100 [00:47<00:18,  1.60it/s] 72%|███████▏  | 72/100 [00:51<00:46,  1.64s/it] 73%|███████▎  | 73/100 [00:52<00:35,  1.33s/it] 74%|███████▍  | 74/100 [00:53<00:29,  1.12s/it] 75%|███████▌  | 75/100 [00:53<00:24,  1.04it/s] 76%|███████▌  | 76/100 [00:54<00:20,  1.17it/s] 77%|███████▋  | 77/100 [00:54<00:18,  1.28it/s] 78%|███████▊  | 78/100 [00:55<00:15,  1.38it/s] 79%|███████▉  | 79/100 [00:56<00:14,  1.44it/s] 80%|████████  | 80/100 [00:56<00:13,  1.50it/s] 81%|████████  | 81/100 [00:57<00:12,  1.54it/s] 82%|████████▏ | 82/100 [00:58<00:11,  1.56it/s] 83%|████████▎ | 83/100 [00:58<00:10,  1.57it/s] 84%|████████▍ | 84/100 [00:59<00:10,  1.58it/s] 85%|████████▌ | 85/100 [00:59<00:09,  1.59it/s] 86%|████████▌ | 86/100 [01:00<00:08,  1.59it/s] 87%|████████▋ | 87/100 [01:01<00:08,  1.59it/s] 88%|████████▊ | 88/100 [01:01<00:07,  1.60it/s] 89%|████████▉ | 89/100 [01:02<00:06,  1.61it/s] 90%|█████████ | 90/100 [01:03<00:06,  1.62it/s] 91%|█████████ | 91/100 [01:03<00:05,  1.62it/s] 92%|█████████▏| 92/100 [01:04<00:04,  1.61it/s] 93%|█████████▎| 93/100 [01:04<00:04,  1.61it/s] 94%|█████████▍| 94/100 [01:05<00:03,  1.61it/s] 95%|█████████▌| 95/100 [01:06<00:03,  1.60it/s] 96%|█████████▌| 96/100 [01:06<00:02,  1.59it/s] 97%|█████████▋| 97/100 [01:07<00:01,  1.60it/s] 98%|█████████▊| 98/100 [01:07<00:01,  1.61it/s] 99%|█████████▉| 99/100 [01:08<00:00,  1.60it/s]100%|██████████| 100/100 [01:09<00:00,  1.61it/s]100%|██████████| 100/100 [01:09<00:00,  1.44it/s]
Number of users per round / total users: 10  /  100
Finished creating FL server.
=== Training starts: algorithm FedFea ===
-------------Round number:  0  -------------
selected users: [26, 86, 2, 55, 75, 93, 16, 73, 54, 95]
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
all data: 253
Local adapation with distilling: 0.001
training loss: tensor(1.8680) feature loss: tensor(0.5632)
Local adapation with distilling: 0.001
training loss: tensor(1.9045) feature loss: tensor(0.5984)
Local adapation with distilling: 0.001
training loss: tensor(1.9029) feature loss: tensor(0.5842)
Local adapation with distilling: 0.001
training loss: tensor(1.8734) feature loss: tensor(0.6058)
Local adapation with distilling: 0.001
training loss: tensor(1.8651) feature loss: tensor(0.5942)
Local adapation with distilling: 0.001
training loss: tensor(1.8384) feature loss: tensor(0.5450)
Local adapation with distilling: 0.001
training loss: tensor(1.9803) feature loss: tensor(0.6339)
Local adapation with distilling: 0.001
training loss: tensor(1.8764) feature loss: tensor(0.5985)
Local adapation with distilling: 0.001
training loss: tensor(2.1291) feature loss: tensor(0.6071)
Local adapation with distilling: 0.001
training loss: tensor(1.8665) feature loss: tensor(0.5969)
Global Model Acc on global data: 0.1125 length of data: 10000
save a model
-------------Round number:  1  -------------
selected users: [80, 84, 33, 81, 93, 17, 36, 82, 69, 65]
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
all data: 245
Local adapation with distilling: 0.000982
training loss: tensor(1.5104) feature loss: tensor(0.6659)
Local adapation with distilling: 0.000982
training loss: tensor(1.5541) feature loss: tensor(0.6835)
Local adapation with distilling: 0.000982
training loss: tensor(1.4929) feature loss: tensor(0.6896)
Local adapation with distilling: 0.000982
training loss: tensor(1.5742) feature loss: tensor(0.6477)
Local adapation with distilling: 0.000982
training loss: tensor(1.4887) feature loss: tensor(0.6271)
Local adapation with distilling: 0.000982
training loss: tensor(1.5014) feature loss: tensor(0.6060)
Local adapation with distilling: 0.000982
training loss: tensor(1.4822) feature loss: tensor(0.6661)
Local adapation with distilling: 0.000982
training loss: tensor(1.5908) feature loss: tensor(0.6950)
Local adapation with distilling: 0.000982
training loss: tensor(1.5868) feature loss: tensor(0.7203)
Local adapation with distilling: 0.000982
training loss: tensor(1.4493) feature loss: tensor(0.6788)
Global Model Acc on global data: 0.1785 length of data: 10000
save a model
-------------Round number:  2  -------------
selected users: [83, 30, 56, 24, 16, 23, 2, 27, 28, 13]
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([27, 32, 16, 16]) torch.Size([27])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
all data: 247
Local adapation with distilling: 0.000964
training loss: tensor(1.2692) feature loss: tensor(0.5968)
Local adapation with distilling: 0.000964
training loss: tensor(1.3121) feature loss: tensor(0.5981)
Local adapation with distilling: 0.000964
training loss: tensor(1.2512) feature loss: tensor(0.5576)
Local adapation with distilling: 0.000964
training loss: tensor(1.4133) feature loss: tensor(0.6630)
Local adapation with distilling: 0.000964
training loss: tensor(1.3126) feature loss: tensor(0.5561)
Local adapation with distilling: 0.000964
training loss: tensor(1.3280) feature loss: tensor(0.5965)
Local adapation with distilling: 0.000964
training loss: tensor(1.2727) feature loss: tensor(0.6132)
Local adapation with distilling: 0.000964
training loss: tensor(1.3574) feature loss: tensor(0.5826)
Local adapation with distilling: 0.000964
training loss: tensor(1.4463) feature loss: tensor(0.6082)
Local adapation with distilling: 0.000964
training loss: tensor(1.2537) feature loss: tensor(0.6087)
Global Model Acc on global data: 0.1989 length of data: 10000
save a model
-------------Round number:  3  -------------
selected users: [93, 67, 6, 64, 96, 83, 98, 42, 25, 15]
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
all data: 246
Local adapation with distilling: 0.000946
training loss: tensor(1.1929) feature loss: tensor(0.5486)
Local adapation with distilling: 0.000946
training loss: tensor(1.2759) feature loss: tensor(0.6201)
Local adapation with distilling: 0.000946
training loss: tensor(1.2788) feature loss: tensor(0.5522)
Local adapation with distilling: 0.000946
training loss: tensor(1.2658) feature loss: tensor(0.6045)
Local adapation with distilling: 0.000946
training loss: tensor(1.3307) feature loss: tensor(0.5482)
Local adapation with distilling: 0.000946
training loss: tensor(1.1261) feature loss: tensor(0.5308)
Local adapation with distilling: 0.000946
training loss: tensor(1.2247) feature loss: tensor(0.5892)
Local adapation with distilling: 0.000946
training loss: tensor(1.2753) feature loss: tensor(0.5631)
Local adapation with distilling: 0.000946
training loss: tensor(1.2752) feature loss: tensor(0.6507)
Local adapation with distilling: 0.000946
training loss: tensor(1.3735) feature loss: tensor(0.5918)
Global Model Acc on global data: 0.1938 length of data: 10000
-------------Round number:  4  -------------
selected users: [20, 10, 96, 16, 63, 24, 53, 97, 41, 47]
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([28, 32, 16, 16]) torch.Size([28])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
all data: 243
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.3573) feature loss: tensor(0.6294)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.3592) feature loss: tensor(0.7050)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.3960) feature loss: tensor(0.6177)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.1730) feature loss: tensor(0.5981)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.2669) feature loss: tensor(0.6249)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.1782) feature loss: tensor(0.5919)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.1909) feature loss: tensor(0.6281)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.1275) feature loss: tensor(0.5873)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.2186) feature loss: tensor(0.5973)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.1408) feature loss: tensor(0.5882)
Global Model Acc on global data: 0.2028 length of data: 10000
save a model
-------------Round number:  5  -------------
selected users: [66, 32, 46, 28, 74, 23, 10, 20, 17, 35]
random features: torch.Size([27, 32, 16, 16]) torch.Size([27])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
all data: 247
Local adapation with distilling: 0.00091
training loss: tensor(1.1867) feature loss: tensor(0.6512)
Local adapation with distilling: 0.00091
training loss: tensor(1.2229) feature loss: tensor(0.6335)
Local adapation with distilling: 0.00091
training loss: tensor(1.2648) feature loss: tensor(0.6922)
Local adapation with distilling: 0.00091
training loss: tensor(1.3811) feature loss: tensor(0.6644)
Local adapation with distilling: 0.00091
training loss: tensor(1.1681) feature loss: tensor(0.6080)
Local adapation with distilling: 0.00091
training loss: tensor(1.1874) feature loss: tensor(0.6177)
Local adapation with distilling: 0.00091
training loss: tensor(1.2442) feature loss: tensor(0.7039)
Local adapation with distilling: 0.00091
training loss: tensor(1.2935) feature loss: tensor(0.6468)
Local adapation with distilling: 0.00091
training loss: tensor(1.2041) feature loss: tensor(0.6324)
Local adapation with distilling: 0.00091
training loss: tensor(1.2441) feature loss: tensor(0.6876)
Global Model Acc on global data: 0.3057 length of data: 10000
save a model
-------------Round number:  6  -------------
selected users: [17, 34, 0, 45, 60, 86, 20, 47, 44, 81]
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
all data: 242
Local adapation with distilling: 0.000892
training loss: tensor(0.9686) feature loss: tensor(0.5470)
Local adapation with distilling: 0.000892
training loss: tensor(1.0605) feature loss: tensor(0.5861)
Local adapation with distilling: 0.000892
training loss: tensor(1.1168) feature loss: tensor(0.5746)
Local adapation with distilling: 0.000892
training loss: tensor(1.0658) feature loss: tensor(0.5776)
Local adapation with distilling: 0.000892
training loss: tensor(1.1008) feature loss: tensor(0.5806)
Local adapation with distilling: 0.000892
training loss: tensor(1.0326) feature loss: tensor(0.5481)
Local adapation with distilling: 0.000892
training loss: tensor(1.1231) feature loss: tensor(0.5641)
Local adapation with distilling: 0.000892
training loss: tensor(0.9551) feature loss: tensor(0.5185)
Local adapation with distilling: 0.000892
training loss: tensor(1.0679) feature loss: tensor(0.5369)
Local adapation with distilling: 0.000892
training loss: tensor(1.3540) feature loss: tensor(0.5903)
Global Model Acc on global data: 0.3281 length of data: 10000
save a model
-------------Round number:  7  -------------
selected users: [37, 26, 78, 91, 49, 15, 93, 71, 86, 22]
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
all data: 254
Local adapation with distilling: 0.000874
training loss: tensor(1.0570) feature loss: tensor(0.5209)
Local adapation with distilling: 0.000874
training loss: tensor(1.0072) feature loss: tensor(0.5914)
Local adapation with distilling: 0.000874
training loss: tensor(1.0434) feature loss: tensor(0.6214)
Local adapation with distilling: 0.000874
training loss: tensor(1.0779) feature loss: tensor(0.6049)
Local adapation with distilling: 0.000874
training loss: tensor(1.0478) feature loss: tensor(0.6056)
Local adapation with distilling: 0.000874
training loss: tensor(1.0742) feature loss: tensor(0.6062)
Local adapation with distilling: 0.000874
training loss: tensor(1.0444) feature loss: tensor(0.6081)
Local adapation with distilling: 0.000874
training loss: tensor(0.9981) feature loss: tensor(0.5705)
Local adapation with distilling: 0.000874
training loss: tensor(0.9824) feature loss: tensor(0.5985)
Local adapation with distilling: 0.000874
training loss: tensor(1.3090) feature loss: tensor(0.6734)
Global Model Acc on global data: 0.342 length of data: 10000
save a model
-------------Round number:  8  -------------
selected users: [17, 23, 1, 44, 55, 99, 86, 29, 62, 33]
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([27, 32, 16, 16]) torch.Size([27])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
all data: 246
Local adapation with distilling: 0.000856
training loss: tensor(0.9054) feature loss: tensor(0.5046)
Local adapation with distilling: 0.000856
training loss: tensor(0.9707) feature loss: tensor(0.5259)
Local adapation with distilling: 0.000856
training loss: tensor(1.0369) feature loss: tensor(0.5348)
Local adapation with distilling: 0.000856
training loss: tensor(1.0158) feature loss: tensor(0.5447)
Local adapation with distilling: 0.000856
training loss: tensor(0.9920) feature loss: tensor(0.5924)
Local adapation with distilling: 0.000856
training loss: tensor(1.0138) feature loss: tensor(0.5570)
Local adapation with distilling: 0.000856
training loss: tensor(0.8722) feature loss: tensor(0.5324)
Local adapation with distilling: 0.000856
training loss: tensor(0.9650) feature loss: tensor(0.5371)
Local adapation with distilling: 0.000856
training loss: tensor(1.0258) feature loss: tensor(0.5331)
Local adapation with distilling: 0.000856
training loss: tensor(1.0545) feature loss: tensor(0.5285)
Global Model Acc on global data: 0.3742 length of data: 10000
save a model
-------------Round number:  9  -------------
selected users: [75, 42, 46, 68, 3, 39, 23, 20, 70, 73]
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
all data: 245
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.9031) feature loss: tensor(0.5447)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(1.0085) feature loss: tensor(0.4718)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.8713) feature loss: tensor(0.5198)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.8978) feature loss: tensor(0.4866)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.9631) feature loss: tensor(0.4567)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.9519) feature loss: tensor(0.5275)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.8681) feature loss: tensor(0.4987)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(1.0178) feature loss: tensor(0.4992)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.9213) feature loss: tensor(0.4848)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.9279) feature loss: tensor(0.4941)
Global Model Acc on global data: 0.3836 length of data: 10000
save a model
-------------Round number:  10  -------------
selected users: [19, 14, 43, 37, 66, 3, 79, 41, 38, 68]
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([27, 32, 16, 16]) torch.Size([27])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([27, 32, 16, 16]) torch.Size([27])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
all data: 250
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.8235) feature loss: tensor(0.4928)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.8431) feature loss: tensor(0.4239)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.8467) feature loss: tensor(0.4658)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.8528) feature loss: tensor(0.4203)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.7885) feature loss: tensor(0.5123)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.8339) feature loss: tensor(0.4737)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.9694) feature loss: tensor(0.4495)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.8931) feature loss: tensor(0.5065)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.7744) feature loss: tensor(0.4067)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.8194) feature loss: tensor(0.4375)
Global Model Acc on global data: 0.3543 length of data: 10000
-------------Round number:  11  -------------
selected users: [46, 49, 22, 58, 41, 98, 62, 29, 30, 51]
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([27, 32, 16, 16]) torch.Size([27])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
all data: 243
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.7900) feature loss: tensor(0.4832)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.8254) feature loss: tensor(0.4504)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(1.1308) feature loss: tensor(0.5091)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.8315) feature loss: tensor(0.4662)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.8543) feature loss: tensor(0.4882)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.9029) feature loss: tensor(0.4538)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.8876) feature loss: tensor(0.4979)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.7765) feature loss: tensor(0.4795)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.9427) feature loss: tensor(0.4910)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.8977) feature loss: tensor(0.5452)
Global Model Acc on global data: 0.3679 length of data: 10000
-------------Round number:  12  -------------
selected users: [17, 41, 92, 14, 68, 31, 89, 15, 21, 60]
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([27, 32, 16, 16]) torch.Size([27])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
all data: 244
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.7578) feature loss: tensor(0.3978)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.7201) feature loss: tensor(0.4665)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.8508) feature loss: tensor(0.3999)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.7134) feature loss: tensor(0.4102)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.7418) feature loss: tensor(0.3927)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.9696) feature loss: tensor(0.4485)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.7021) feature loss: tensor(0.4144)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.7532) feature loss: tensor(0.4223)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.8117) feature loss: tensor(0.4473)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.8571) feature loss: tensor(0.4533)
Global Model Acc on global data: 0.3878 length of data: 10000
save a model
-------------Round number:  13  -------------
selected users: [37, 62, 83, 14, 43, 9, 44, 31, 69, 57]
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
all data: 242
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.6744) feature loss: tensor(0.3890)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.7613) feature loss: tensor(0.4313)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.7199) feature loss: tensor(0.4133)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.6258) feature loss: tensor(0.3752)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.7295) feature loss: tensor(0.4534)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.8644) feature loss: tensor(0.4231)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.7425) feature loss: tensor(0.4187)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.8244) feature loss: tensor(0.4501)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.7043) feature loss: tensor(0.4294)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.7389) feature loss: tensor(0.3721)
Global Model Acc on global data: 0.3802 length of data: 10000
-------------Round number:  14  -------------
selected users: [24, 39, 35, 44, 55, 70, 82, 40, 91, 65]
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
all data: 242
Local adapation with distilling: 0.000748
training loss: tensor(0.8755) feature loss: tensor(0.5343)
Local adapation with distilling: 0.000748
training loss: tensor(0.9158) feature loss: tensor(0.5902)
Local adapation with distilling: 0.000748
training loss: tensor(0.9926) feature loss: tensor(0.5627)
Local adapation with distilling: 0.000748
training loss: tensor(0.8474) feature loss: tensor(0.4861)
Local adapation with distilling: 0.000748
training loss: tensor(0.9806) feature loss: tensor(0.5996)
Local adapation with distilling: 0.000748
training loss: tensor(0.9668) feature loss: tensor(0.6210)
Local adapation with distilling: 0.000748
training loss: tensor(0.9349) feature loss: tensor(0.5522)
Local adapation with distilling: 0.000748
training loss: tensor(0.9692) feature loss: tensor(0.5867)
Local adapation with distilling: 0.000748
training loss: tensor(0.9890) feature loss: tensor(0.6464)
Local adapation with distilling: 0.000748
training loss: tensor(0.8997) feature loss: tensor(0.6140)
Global Model Acc on global data: 0.4016 length of data: 10000
save a model
-------------Round number:  15  -------------
selected users: [84, 36, 57, 51, 46, 78, 93, 14, 11, 59]
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
all data: 250
Local adapation with distilling: 0.00073
training loss: tensor(0.8429) feature loss: tensor(0.4450)
Local adapation with distilling: 0.00073
training loss: tensor(0.8307) feature loss: tensor(0.3956)
Local adapation with distilling: 0.00073
training loss: tensor(0.7890) feature loss: tensor(0.4018)
Local adapation with distilling: 0.00073
training loss: tensor(0.7924) feature loss: tensor(0.4358)
Local adapation with distilling: 0.00073
training loss: tensor(0.7453) feature loss: tensor(0.4240)
Local adapation with distilling: 0.00073
training loss: tensor(0.8707) feature loss: tensor(0.4779)
Local adapation with distilling: 0.00073
training loss: tensor(0.8947) feature loss: tensor(0.4215)
Local adapation with distilling: 0.00073
training loss: tensor(0.7129) feature loss: tensor(0.4246)
Local adapation with distilling: 0.00073
training loss: tensor(0.8394) feature loss: tensor(0.4727)
Local adapation with distilling: 0.00073
training loss: tensor(0.8813) feature loss: tensor(0.4471)
Global Model Acc on global data: 0.4279 length of data: 10000
save a model
-------------Round number:  16  -------------
selected users: [7, 25, 71, 42, 47, 29, 63, 88, 50, 9]
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([27, 32, 16, 16]) torch.Size([27])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
all data: 244
Local adapation with distilling: 0.000712
training loss: tensor(0.7164) feature loss: tensor(0.4126)
Local adapation with distilling: 0.000712
training loss: tensor(0.7308) feature loss: tensor(0.4926)
Local adapation with distilling: 0.000712
training loss: tensor(0.6842) feature loss: tensor(0.3913)
Local adapation with distilling: 0.000712
training loss: tensor(0.7905) feature loss: tensor(0.3574)
Local adapation with distilling: 0.000712
training loss: tensor(0.6850) feature loss: tensor(0.3734)
Local adapation with distilling: 0.000712
training loss: tensor(0.6757) feature loss: tensor(0.4010)
Local adapation with distilling: 0.000712
training loss: tensor(0.7029) feature loss: tensor(0.4015)
Local adapation with distilling: 0.000712
training loss: tensor(0.7146) feature loss: tensor(0.4068)
Local adapation with distilling: 0.000712
training loss: tensor(0.7487) feature loss: tensor(0.3949)
Local adapation with distilling: 0.000712
training loss: tensor(0.9095) feature loss: tensor(0.4130)
Global Model Acc on global data: 0.4157 length of data: 10000
-------------Round number:  17  -------------
selected users: [71, 28, 9, 4, 73, 34, 94, 92, 47, 37]
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
all data: 244
Local adapation with distilling: 0.000694
training loss: tensor(0.6252) feature loss: tensor(0.3447)
Local adapation with distilling: 0.000694
training loss: tensor(0.8286) feature loss: tensor(0.3719)
Local adapation with distilling: 0.000694
training loss: tensor(1.0125) feature loss: tensor(0.3565)
Local adapation with distilling: 0.000694
training loss: tensor(0.7094) feature loss: tensor(0.3555)
Local adapation with distilling: 0.000694
training loss: tensor(0.7642) feature loss: tensor(0.3311)
Local adapation with distilling: 0.000694
training loss: tensor(0.6873) feature loss: tensor(0.3585)
Local adapation with distilling: 0.000694
training loss: tensor(0.6924) feature loss: tensor(0.3419)
Local adapation with distilling: 0.000694
training loss: tensor(0.7745) feature loss: tensor(0.3382)
Local adapation with distilling: 0.000694
training loss: tensor(0.6104) feature loss: tensor(0.3253)
Local adapation with distilling: 0.000694
training loss: tensor(0.6575) feature loss: tensor(0.3214)
Global Model Acc on global data: 0.4014 length of data: 10000
-------------Round number:  18  -------------
selected users: [53, 47, 43, 54, 33, 48, 0, 12, 44, 91]
random features: torch.Size([28, 32, 16, 16]) torch.Size([28])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
all data: 245
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.8087) feature loss: tensor(0.4984)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.7263) feature loss: tensor(0.4143)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.8051) feature loss: tensor(0.4815)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.9146) feature loss: tensor(0.4406)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.8518) feature loss: tensor(0.4293)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.9272) feature loss: tensor(0.5116)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.8861) feature loss: tensor(0.4655)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.9577) feature loss: tensor(0.5116)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.8246) feature loss: tensor(0.4501)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.8415) feature loss: tensor(0.4497)
Global Model Acc on global data: 0.4033 length of data: 10000
-------------Round number:  19  -------------
selected users: [85, 72, 16, 18, 2, 38, 90, 30, 83, 61]
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([28, 32, 16, 16]) torch.Size([28])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([27, 32, 16, 16]) torch.Size([27])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
all data: 250
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.7611) feature loss: tensor(0.4184)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.7717) feature loss: tensor(0.4691)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.8901) feature loss: tensor(0.4705)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.9701) feature loss: tensor(0.4623)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.8199) feature loss: tensor(0.5021)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.7574) feature loss: tensor(0.4665)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.8956) feature loss: tensor(0.4347)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.8486) feature loss: tensor(0.4691)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.7991) feature loss: tensor(0.4498)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.7670) feature loss: tensor(0.4824)
Global Model Acc on global data: 0.4172 length of data: 10000
-------------Round number:  20  -------------
selected users: [70, 74, 2, 44, 56, 48, 12, 36, 0, 49]
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([27, 32, 16, 16]) torch.Size([27])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
all data: 242
Local adapation with distilling: 0.00064
training loss: tensor(0.7069) feature loss: tensor(0.3719)
Local adapation with distilling: 0.00064
training loss: tensor(0.6294) feature loss: tensor(0.3773)
Local adapation with distilling: 0.00064
training loss: tensor(0.6176) feature loss: tensor(0.4232)
Local adapation with distilling: 0.00064
training loss: tensor(0.6505) feature loss: tensor(0.3679)
Local adapation with distilling: 0.00064
training loss: tensor(0.6369) feature loss: tensor(0.4314)
Local adapation with distilling: 0.00064
training loss: tensor(0.6942) feature loss: tensor(0.4405)
Local adapation with distilling: 0.00064
training loss: tensor(0.6877) feature loss: tensor(0.4102)
Local adapation with distilling: 0.00064
training loss: tensor(0.6552) feature loss: tensor(0.3626)
Local adapation with distilling: 0.00064
training loss: tensor(0.6280) feature loss: tensor(0.3654)
Local adapation with distilling: 0.00064
training loss: tensor(0.6461) feature loss: tensor(0.3903)
Global Model Acc on global data: 0.4466 length of data: 10000
save a model
-------------Round number:  21  -------------
selected users: [23, 81, 85, 34, 62, 46, 42, 31, 93, 11]
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
all data: 244
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.8214) feature loss: tensor(0.3912)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.9038) feature loss: tensor(0.4244)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.6833) feature loss: tensor(0.3655)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.7607) feature loss: tensor(0.3950)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.8749) feature loss: tensor(0.4008)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.7571) feature loss: tensor(0.4296)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.8526) feature loss: tensor(0.3736)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.8876) feature loss: tensor(0.4382)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.7847) feature loss: tensor(0.3831)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.7517) feature loss: tensor(0.4373)
Global Model Acc on global data: 0.4868 length of data: 10000
save a model
-------------Round number:  22  -------------
selected users: [2, 49, 82, 31, 37, 12, 87, 42, 99, 85]
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
all data: 238
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.5912) feature loss: tensor(0.3511)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.6280) feature loss: tensor(0.3447)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.6896) feature loss: tensor(0.3370)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.6808) feature loss: tensor(0.3892)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.6280) feature loss: tensor(0.3192)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.6378) feature loss: tensor(0.3506)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.7454) feature loss: tensor(0.3320)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.6445) feature loss: tensor(0.3424)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.6441) feature loss: tensor(0.3658)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.5800) feature loss: tensor(0.3091)
Global Model Acc on global data: 0.4743 length of data: 10000
-------------Round number:  23  -------------
selected users: [26, 80, 82, 68, 77, 37, 3, 55, 20, 17]
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
all data: 245
Local adapation with distilling: 0.000586
training loss: tensor(0.6388) feature loss: tensor(0.4000)
Local adapation with distilling: 0.000586
training loss: tensor(0.6891) feature loss: tensor(0.3857)
Local adapation with distilling: 0.000586
training loss: tensor(0.6527) feature loss: tensor(0.4255)
Local adapation with distilling: 0.000586
training loss: tensor(0.6593) feature loss: tensor(0.3734)
Local adapation with distilling: 0.000586
training loss: tensor(0.7524) feature loss: tensor(0.4110)
Local adapation with distilling: 0.000586
training loss: tensor(0.6149) feature loss: tensor(0.3602)
Local adapation with distilling: 0.000586
training loss: tensor(0.7595) feature loss: tensor(0.3449)
Local adapation with distilling: 0.000586
training loss: tensor(0.7479) feature loss: tensor(0.4099)
Local adapation with distilling: 0.000586
training loss: tensor(0.7403) feature loss: tensor(0.4000)
Local adapation with distilling: 0.000586
training loss: tensor(0.6990) feature loss: tensor(0.3734)
Global Model Acc on global data: 0.4789 length of data: 10000
-------------Round number:  24  -------------
selected users: [26, 31, 37, 86, 76, 14, 88, 48, 71, 67]
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
all data: 246
Local adapation with distilling: 0.000568
training loss: tensor(0.5460) feature loss: tensor(0.3291)
Local adapation with distilling: 0.000568
training loss: tensor(0.6430) feature loss: tensor(0.3790)
Local adapation with distilling: 0.000568
training loss: tensor(0.5059) feature loss: tensor(0.3040)
Local adapation with distilling: 0.000568
training loss: tensor(0.5965) feature loss: tensor(0.3299)
Local adapation with distilling: 0.000568
training loss: tensor(0.6745) feature loss: tensor(0.3101)
Local adapation with distilling: 0.000568
training loss: tensor(0.5921) feature loss: tensor(0.3112)
Local adapation with distilling: 0.000568
training loss: tensor(0.5799) feature loss: tensor(0.3582)
Local adapation with distilling: 0.000568
training loss: tensor(0.6524) feature loss: tensor(0.3555)
Local adapation with distilling: 0.000568
training loss: tensor(0.5588) feature loss: tensor(0.3681)
Local adapation with distilling: 0.000568
training loss: tensor(0.6316) feature loss: tensor(0.3497)
Global Model Acc on global data: 0.4476 length of data: 10000
-------------Round number:  25  -------------
selected users: [41, 29, 33, 65, 74, 6, 57, 89, 87, 98]
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([27, 32, 16, 16]) torch.Size([27])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([27, 32, 16, 16]) torch.Size([27])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
all data: 247
Local adapation with distilling: 0.00055
training loss: tensor(0.6041) feature loss: tensor(0.3525)
Local adapation with distilling: 0.00055
training loss: tensor(0.5921) feature loss: tensor(0.3589)
Local adapation with distilling: 0.00055
training loss: tensor(0.6370) feature loss: tensor(0.3463)
Local adapation with distilling: 0.00055
training loss: tensor(0.6653) feature loss: tensor(0.3756)
Local adapation with distilling: 0.00055
training loss: tensor(0.6020) feature loss: tensor(0.3507)
Local adapation with distilling: 0.00055
training loss: tensor(0.6888) feature loss: tensor(0.3161)
Local adapation with distilling: 0.00055
training loss: tensor(0.6388) feature loss: tensor(0.3220)
Local adapation with distilling: 0.00055
training loss: tensor(0.6164) feature loss: tensor(0.3357)
Local adapation with distilling: 0.00055
training loss: tensor(0.6721) feature loss: tensor(0.3294)
Local adapation with distilling: 0.00055
training loss: tensor(0.6050) feature loss: tensor(0.3419)
Global Model Acc on global data: 0.4506 length of data: 10000
-------------Round number:  26  -------------
selected users: [8, 69, 84, 41, 25, 5, 63, 95, 33, 70]
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
all data: 243
Local adapation with distilling: 0.000532
training loss: tensor(0.7608) feature loss: tensor(0.4625)
Local adapation with distilling: 0.000532
training loss: tensor(0.7609) feature loss: tensor(0.4157)
Local adapation with distilling: 0.000532
training loss: tensor(0.7573) feature loss: tensor(0.3651)
Local adapation with distilling: 0.000532
training loss: tensor(0.6865) feature loss: tensor(0.4025)
Local adapation with distilling: 0.000532
training loss: tensor(0.7947) feature loss: tensor(0.4536)
Local adapation with distilling: 0.000532
training loss: tensor(0.8748) feature loss: tensor(0.4104)
Local adapation with distilling: 0.000532
training loss: tensor(0.7020) feature loss: tensor(0.4368)
Local adapation with distilling: 0.000532
training loss: tensor(0.7666) feature loss: tensor(0.4604)
Local adapation with distilling: 0.000532
training loss: tensor(0.6796) feature loss: tensor(0.3972)
Local adapation with distilling: 0.000532
training loss: tensor(0.7930) feature loss: tensor(0.4373)
Global Model Acc on global data: 0.4683 length of data: 10000
-------------Round number:  27  -------------
selected users: [89, 68, 43, 50, 40, 95, 27, 85, 22, 44]
random features: torch.Size([27, 32, 16, 16]) torch.Size([27])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
all data: 245
Local adapation with distilling: 0.000514
training loss: tensor(0.5824) feature loss: tensor(0.3473)
Local adapation with distilling: 0.000514
training loss: tensor(0.6507) feature loss: tensor(0.3185)
Local adapation with distilling: 0.000514
training loss: tensor(0.6111) feature loss: tensor(0.3483)
Local adapation with distilling: 0.000514
training loss: tensor(0.6267) feature loss: tensor(0.3600)
Local adapation with distilling: 0.000514
training loss: tensor(0.7027) feature loss: tensor(0.3439)
Local adapation with distilling: 0.000514
training loss: tensor(0.6570) feature loss: tensor(0.3623)
Local adapation with distilling: 0.000514
training loss: tensor(0.7367) feature loss: tensor(0.3144)
Local adapation with distilling: 0.000514
training loss: tensor(0.5802) feature loss: tensor(0.3160)
Local adapation with distilling: 0.000514
training loss: tensor(1.0776) feature loss: tensor(0.3703)
Local adapation with distilling: 0.000514
training loss: tensor(0.6600) feature loss: tensor(0.3182)
Global Model Acc on global data: 0.4771 length of data: 10000
-------------Round number:  28  -------------
selected users: [67, 14, 0, 86, 13, 18, 30, 36, 52, 95]
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
all data: 244
Local adapation with distilling: 0.000496
training loss: tensor(0.6157) feature loss: tensor(0.3301)
Local adapation with distilling: 0.000496
training loss: tensor(0.5287) feature loss: tensor(0.2881)
Local adapation with distilling: 0.000496
training loss: tensor(0.6288) feature loss: tensor(0.3205)
Local adapation with distilling: 0.000496
training loss: tensor(0.6028) feature loss: tensor(0.3163)
Local adapation with distilling: 0.000496
training loss: tensor(0.5837) feature loss: tensor(0.3234)
Local adapation with distilling: 0.000496
training loss: tensor(0.7302) feature loss: tensor(0.3410)
Local adapation with distilling: 0.000496
training loss: tensor(0.7068) feature loss: tensor(0.3350)
Local adapation with distilling: 0.000496
training loss: tensor(0.6038) feature loss: tensor(0.3145)
Local adapation with distilling: 0.000496
training loss: tensor(0.8848) feature loss: tensor(0.3191)
Local adapation with distilling: 0.000496
training loss: tensor(0.5689) feature loss: tensor(0.3610)
Global Model Acc on global data: 0.4875 length of data: 10000
save a model
-------------Round number:  29  -------------
selected users: [73, 8, 10, 7, 19, 71, 92, 25, 38, 12]
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([27, 32, 16, 16]) torch.Size([27])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
all data: 245
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.6940) feature loss: tensor(0.3310)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.6613) feature loss: tensor(0.3550)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.7587) feature loss: tensor(0.3827)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.7317) feature loss: tensor(0.3458)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.6422) feature loss: tensor(0.3432)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.5980) feature loss: tensor(0.3887)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.7664) feature loss: tensor(0.3251)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.7091) feature loss: tensor(0.3673)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.6138) feature loss: tensor(0.3258)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.6805) feature loss: tensor(0.3862)
Global Model Acc on global data: 0.4884 length of data: 10000
save a model
-------------Round number:  30  -------------
selected users: [20, 91, 34, 52, 8, 74, 21, 88, 80, 89]
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([27, 32, 16, 16]) torch.Size([27])
all data: 243
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.6241) feature loss: tensor(0.2796)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.5681) feature loss: tensor(0.2966)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.5427) feature loss: tensor(0.2834)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.8823) feature loss: tensor(0.2726)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.5407) feature loss: tensor(0.2865)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.5089) feature loss: tensor(0.2840)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.5516) feature loss: tensor(0.2946)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.5189) feature loss: tensor(0.3057)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.5712) feature loss: tensor(0.2639)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.5035) feature loss: tensor(0.2718)
Global Model Acc on global data: 0.461 length of data: 10000
-------------Round number:  31  -------------
selected users: [17, 33, 76, 3, 56, 0, 37, 8, 60, 67]
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([27, 32, 16, 16]) torch.Size([27])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
all data: 249
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.6280) feature loss: tensor(0.3062)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.5318) feature loss: tensor(0.2861)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.6008) feature loss: tensor(0.2723)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.6422) feature loss: tensor(0.2830)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.5547) feature loss: tensor(0.3556)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.5542) feature loss: tensor(0.3007)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.5638) feature loss: tensor(0.2770)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.5105) feature loss: tensor(0.2902)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.6405) feature loss: tensor(0.3605)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.5521) feature loss: tensor(0.3364)
Global Model Acc on global data: 0.4773 length of data: 10000
-------------Round number:  32  -------------
selected users: [22, 39, 85, 97, 55, 33, 80, 13, 27, 96]
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
all data: 244
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(1.4693) feature loss: tensor(0.4149)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.8531) feature loss: tensor(0.4437)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.6542) feature loss: tensor(0.3740)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.8484) feature loss: tensor(0.3883)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.7781) feature loss: tensor(0.3992)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.6530) feature loss: tensor(0.3742)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.6966) feature loss: tensor(0.3465)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.6749) feature loss: tensor(0.3723)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.8039) feature loss: tensor(0.3672)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(1.2163) feature loss: tensor(0.3844)
Global Model Acc on global data: 0.4881 length of data: 10000
-------------Round number:  33  -------------
selected users: [56, 90, 95, 82, 60, 71, 6, 81, 2, 70]
random features: torch.Size([27, 32, 16, 16]) torch.Size([27])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
all data: 246
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.5894) feature loss: tensor(0.3906)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.6980) feature loss: tensor(0.3324)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.6191) feature loss: tensor(0.4310)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.7001) feature loss: tensor(0.3579)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.6599) feature loss: tensor(0.4504)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.6067) feature loss: tensor(0.3614)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.7735) feature loss: tensor(0.3526)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(1.2466) feature loss: tensor(0.3999)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.6398) feature loss: tensor(0.4152)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.6055) feature loss: tensor(0.3388)
Global Model Acc on global data: 0.4983 length of data: 10000
save a model
-------------Round number:  34  -------------
selected users: [14, 74, 15, 4, 32, 59, 91, 10, 50, 53]
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([28, 32, 16, 16]) torch.Size([28])
all data: 247
Local adapation with distilling: 0.000388
training loss: tensor(0.6358) feature loss: tensor(0.3249)
Local adapation with distilling: 0.000388
training loss: tensor(0.6356) feature loss: tensor(0.3646)
Local adapation with distilling: 0.000388
training loss: tensor(0.8773) feature loss: tensor(0.3821)
Local adapation with distilling: 0.000388
training loss: tensor(0.7723) feature loss: tensor(0.3708)
Local adapation with distilling: 0.000388
training loss: tensor(0.8583) feature loss: tensor(0.3439)
Local adapation with distilling: 0.000388
training loss: tensor(0.7434) feature loss: tensor(0.3921)
Local adapation with distilling: 0.000388
training loss: tensor(0.6519) feature loss: tensor(0.3818)
Local adapation with distilling: 0.000388
training loss: tensor(0.8034) feature loss: tensor(0.3749)
Local adapation with distilling: 0.000388
training loss: tensor(0.6618) feature loss: tensor(0.3674)
Local adapation with distilling: 0.000388
training loss: tensor(0.7052) feature loss: tensor(0.3624)
Global Model Acc on global data: 0.5022 length of data: 10000
save a model
-------------Round number:  35  -------------
selected users: [40, 71, 98, 27, 70, 31, 10, 24, 51, 35]
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
all data: 241
Local adapation with distilling: 0.00037
training loss: tensor(0.6165) feature loss: tensor(0.2789)
Local adapation with distilling: 0.00037
training loss: tensor(0.5088) feature loss: tensor(0.3364)
Local adapation with distilling: 0.00037
training loss: tensor(0.5465) feature loss: tensor(0.2965)
Local adapation with distilling: 0.00037
training loss: tensor(0.6155) feature loss: tensor(0.2682)
Local adapation with distilling: 0.00037
training loss: tensor(0.5410) feature loss: tensor(0.2912)
Local adapation with distilling: 0.00037
training loss: tensor(0.6186) feature loss: tensor(0.3104)
Local adapation with distilling: 0.00037
training loss: tensor(0.5921) feature loss: tensor(0.2901)
Local adapation with distilling: 0.00037
training loss: tensor(0.6370) feature loss: tensor(0.2891)
Local adapation with distilling: 0.00037
training loss: tensor(0.5903) feature loss: tensor(0.3693)
Local adapation with distilling: 0.00037
training loss: tensor(0.6190) feature loss: tensor(0.3109)
Global Model Acc on global data: 0.4934 length of data: 10000
-------------Round number:  36  -------------
selected users: [59, 42, 2, 27, 28, 75, 58, 68, 52, 74]
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
all data: 244
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.6229) feature loss: tensor(0.3528)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.6906) feature loss: tensor(0.3032)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.6048) feature loss: tensor(0.3299)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.5963) feature loss: tensor(0.2815)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.8741) feature loss: tensor(0.3335)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.6624) feature loss: tensor(0.3024)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.6498) feature loss: tensor(0.3530)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.7124) feature loss: tensor(0.3223)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.8208) feature loss: tensor(0.3194)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.5531) feature loss: tensor(0.3092)
Global Model Acc on global data: 0.5268 length of data: 10000
save a model
-------------Round number:  37  -------------
selected users: [61, 49, 86, 78, 5, 91, 81, 82, 89, 18]
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([27, 32, 16, 16]) torch.Size([27])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
all data: 251
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.5224) feature loss: tensor(0.2785)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.5534) feature loss: tensor(0.2756)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.5524) feature loss: tensor(0.2585)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.5833) feature loss: tensor(0.2498)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.6484) feature loss: tensor(0.2468)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.5106) feature loss: tensor(0.2730)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.8691) feature loss: tensor(0.2771)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.5507) feature loss: tensor(0.2515)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.5172) feature loss: tensor(0.2578)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.6139) feature loss: tensor(0.2774)
Global Model Acc on global data: 0.5313 length of data: 10000
save a model
-------------Round number:  38  -------------
selected users: [40, 73, 49, 45, 64, 16, 69, 17, 72, 66]
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([28, 32, 16, 16]) torch.Size([28])
random features: torch.Size([27, 32, 16, 16]) torch.Size([27])
all data: 253
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.6168) feature loss: tensor(0.2620)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.5977) feature loss: tensor(0.2646)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.5631) feature loss: tensor(0.2852)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.5958) feature loss: tensor(0.3167)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.7012) feature loss: tensor(0.2608)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.6685) feature loss: tensor(0.2633)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.5782) feature loss: tensor(0.2869)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.5658) feature loss: tensor(0.2664)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.5907) feature loss: tensor(0.2714)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.6014) feature loss: tensor(0.2948)
Global Model Acc on global data: 0.5202 length of data: 10000
-------------Round number:  39  -------------
selected users: [22, 53, 84, 57, 87, 58, 29, 21, 85, 79]
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([28, 32, 16, 16]) torch.Size([28])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([27, 32, 16, 16]) torch.Size([27])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
all data: 249
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.9831) feature loss: tensor(0.3262)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.5722) feature loss: tensor(0.2808)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.6757) feature loss: tensor(0.2817)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.6610) feature loss: tensor(0.2677)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.6517) feature loss: tensor(0.2797)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.5606) feature loss: tensor(0.2673)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.5783) feature loss: tensor(0.3027)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.6226) feature loss: tensor(0.3022)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.5634) feature loss: tensor(0.2692)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.6466) feature loss: tensor(0.3146)
Global Model Acc on global data: 0.5279 length of data: 10000
-------------Round number:  40  -------------
selected users: [79, 75, 63, 15, 38, 11, 40, 45, 39, 62]
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([27, 32, 16, 16]) torch.Size([27])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
all data: 247
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.5535) feature loss: tensor(0.2640)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.5564) feature loss: tensor(0.2605)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.5106) feature loss: tensor(0.2622)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.5479) feature loss: tensor(0.2705)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.4690) feature loss: tensor(0.2563)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.5410) feature loss: tensor(0.2758)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.5248) feature loss: tensor(0.2525)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.5281) feature loss: tensor(0.2749)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.5942) feature loss: tensor(0.2555)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.6932) feature loss: tensor(0.2619)
Global Model Acc on global data: 0.5185 length of data: 10000
-------------Round number:  41  -------------
selected users: [42, 94, 37, 6, 79, 32, 24, 0, 33, 93]
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
all data: 245
Local adapation with distilling: 0.000262
training loss: tensor(0.7030) feature loss: tensor(0.3133)
Local adapation with distilling: 0.000262
training loss: tensor(0.7369) feature loss: tensor(0.3140)
Local adapation with distilling: 0.000262
training loss: tensor(0.6409) feature loss: tensor(0.2960)
Local adapation with distilling: 0.000262
training loss: tensor(0.7309) feature loss: tensor(0.2900)
Local adapation with distilling: 0.000262
training loss: tensor(0.5774) feature loss: tensor(0.3504)
Local adapation with distilling: 0.000262
training loss: tensor(0.7516) feature loss: tensor(0.3032)
Local adapation with distilling: 0.000262
training loss: tensor(0.6491) feature loss: tensor(0.3689)
Local adapation with distilling: 0.000262
training loss: tensor(0.5834) feature loss: tensor(0.2985)
Local adapation with distilling: 0.000262
training loss: tensor(0.5883) feature loss: tensor(0.2852)
Local adapation with distilling: 0.000262
training loss: tensor(0.6850) feature loss: tensor(0.3094)
Global Model Acc on global data: 0.5279 length of data: 10000
-------------Round number:  42  -------------
selected users: [83, 53, 70, 45, 44, 39, 22, 80, 10, 0]
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([28, 32, 16, 16]) torch.Size([28])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
all data: 246
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.5794) feature loss: tensor(0.2566)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.4987) feature loss: tensor(0.2636)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.5073) feature loss: tensor(0.2689)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.5373) feature loss: tensor(0.2820)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.6419) feature loss: tensor(0.2712)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.5564) feature loss: tensor(0.2739)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.8680) feature loss: tensor(0.2838)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.5684) feature loss: tensor(0.2580)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.6023) feature loss: tensor(0.2758)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.5037) feature loss: tensor(0.2649)
Global Model Acc on global data: 0.5077 length of data: 10000
-------------Round number:  43  -------------
selected users: [20, 2, 15, 22, 57, 91, 69, 55, 11, 79]
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
all data: 246
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.6255) feature loss: tensor(0.2568)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.5167) feature loss: tensor(0.2800)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.5444) feature loss: tensor(0.2382)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.6462) feature loss: tensor(0.2460)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.5622) feature loss: tensor(0.2304)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.5041) feature loss: tensor(0.2465)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.5023) feature loss: tensor(0.2356)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.5037) feature loss: tensor(0.2351)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.5373) feature loss: tensor(0.2634)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.4728) feature loss: tensor(0.2626)
Global Model Acc on global data: 0.5288 length of data: 10000
-------------Round number:  44  -------------
selected users: [42, 54, 27, 93, 39, 65, 7, 26, 24, 60]
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
all data: 245
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.6185) feature loss: tensor(0.2586)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.8000) feature loss: tensor(0.2547)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.6397) feature loss: tensor(0.2451)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.6342) feature loss: tensor(0.2465)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.5241) feature loss: tensor(0.2812)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.5513) feature loss: tensor(0.2908)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.6347) feature loss: tensor(0.2794)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.5316) feature loss: tensor(0.2884)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.5600) feature loss: tensor(0.2979)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.6245) feature loss: tensor(0.2821)
Global Model Acc on global data: 0.5198 length of data: 10000
-------------Round number:  45  -------------
selected users: [0, 1, 62, 76, 37, 99, 78, 38, 2, 84]
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([27, 32, 16, 16]) torch.Size([27])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
all data: 248
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.4923) feature loss: tensor(0.2432)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.5978) feature loss: tensor(0.2727)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.6582) feature loss: tensor(0.2385)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.6758) feature loss: tensor(0.2361)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.5298) feature loss: tensor(0.2387)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.5838) feature loss: tensor(0.2526)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.5898) feature loss: tensor(0.2323)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.4875) feature loss: tensor(0.2368)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.5668) feature loss: tensor(0.2843)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.6040) feature loss: tensor(0.2336)
Global Model Acc on global data: 0.5415 length of data: 10000
save a model
-------------Round number:  46  -------------
selected users: [71, 33, 37, 10, 44, 34, 24, 98, 73, 95]
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
all data: 242
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.4595) feature loss: tensor(0.2295)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.4937) feature loss: tensor(0.2118)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.4556) feature loss: tensor(0.2051)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.5375) feature loss: tensor(0.2265)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.5499) feature loss: tensor(0.2065)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.5652) feature loss: tensor(0.2308)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.5101) feature loss: tensor(0.2468)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.5046) feature loss: tensor(0.2251)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.5451) feature loss: tensor(0.2119)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.5013) feature loss: tensor(0.2420)
Global Model Acc on global data: 0.5343 length of data: 10000
-------------Round number:  47  -------------
selected users: [17, 90, 94, 86, 63, 5, 38, 14, 40, 47]
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([27, 32, 16, 16]) torch.Size([27])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
all data: 247
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.5291) feature loss: tensor(0.2475)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.6544) feature loss: tensor(0.2306)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.6003) feature loss: tensor(0.2185)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.5450) feature loss: tensor(0.2627)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.4970) feature loss: tensor(0.2707)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.6411) feature loss: tensor(0.2235)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.4503) feature loss: tensor(0.2521)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.5101) feature loss: tensor(0.2379)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.5065) feature loss: tensor(0.2322)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.5343) feature loss: tensor(0.2506)
Global Model Acc on global data: 0.531 length of data: 10000
-------------Round number:  48  -------------
selected users: [93, 5, 71, 9, 11, 79, 69, 8, 59, 63]
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
all data: 249
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.5730) feature loss: tensor(0.2222)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.5876) feature loss: tensor(0.2211)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.4754) feature loss: tensor(0.2387)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.9086) feature loss: tensor(0.2347)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.5483) feature loss: tensor(0.2463)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.5384) feature loss: tensor(0.2624)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.5343) feature loss: tensor(0.2451)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.5831) feature loss: tensor(0.2331)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.6126) feature loss: tensor(0.2424)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.4863) feature loss: tensor(0.2466)
Global Model Acc on global data: 0.5343 length of data: 10000
-------------Round number:  49  -------------
selected users: [76, 25, 28, 75, 81, 47, 41, 22, 29, 1]
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([27, 32, 16, 16]) torch.Size([27])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
all data: 249
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.6080) feature loss: tensor(0.2053)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.5606) feature loss: tensor(0.2153)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.6907) feature loss: tensor(0.2206)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.5621) feature loss: tensor(0.2186)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.9145) feature loss: tensor(0.2557)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.5189) feature loss: tensor(0.2096)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.5772) feature loss: tensor(0.2306)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.8676) feature loss: tensor(0.2215)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.5315) feature loss: tensor(0.2231)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.5145) feature loss: tensor(0.2171)
Global Model Acc on global data: 0.5486 length of data: 10000
save a model
-------------Round number:  50  -------------
selected users: [80, 79, 25, 15, 39, 40, 53, 17, 57, 50]
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([28, 32, 16, 16]) torch.Size([28])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
all data: 249
Local adapation with distilling: 0.0001
training loss: tensor(0.5922) feature loss: tensor(0.2058)
Local adapation with distilling: 0.0001
training loss: tensor(0.4725) feature loss: tensor(0.2314)
Local adapation with distilling: 0.0001
training loss: tensor(0.5364) feature loss: tensor(0.2202)
Local adapation with distilling: 0.0001
training loss: tensor(0.4650) feature loss: tensor(0.2247)
Local adapation with distilling: 0.0001
training loss: tensor(0.4935) feature loss: tensor(0.2227)
Local adapation with distilling: 0.0001
training loss: tensor(0.6032) feature loss: tensor(0.1992)
Local adapation with distilling: 0.0001
training loss: tensor(0.5239) feature loss: tensor(0.2191)
Local adapation with distilling: 0.0001
training loss: tensor(0.4982) feature loss: tensor(0.1990)
Local adapation with distilling: 0.0001
training loss: tensor(0.5345) feature loss: tensor(0.1937)
Local adapation with distilling: 0.0001
training loss: tensor(0.6723) feature loss: tensor(0.2418)
Global Model Acc on global data: 0.5423 length of data: 10000
-------------Round number:  51  -------------
selected users: [71, 43, 11, 83, 78, 19, 80, 4, 79, 75]
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
all data: 247
Local adapation with distilling: 0.0001
training loss: tensor(0.4695) feature loss: tensor(0.2274)
Local adapation with distilling: 0.0001
training loss: tensor(0.5903) feature loss: tensor(0.2199)
Local adapation with distilling: 0.0001
training loss: tensor(0.5112) feature loss: tensor(0.2179)
Local adapation with distilling: 0.0001
training loss: tensor(0.6102) feature loss: tensor(0.2093)
Local adapation with distilling: 0.0001
training loss: tensor(0.5371) feature loss: tensor(0.2022)
Local adapation with distilling: 0.0001
training loss: tensor(0.6173) feature loss: tensor(0.2319)
Local adapation with distilling: 0.0001
training loss: tensor(0.5336) feature loss: tensor(0.2093)
Local adapation with distilling: 0.0001
training loss: tensor(0.6119) feature loss: tensor(0.2351)
Local adapation with distilling: 0.0001
training loss: tensor(0.4600) feature loss: tensor(0.2193)
Local adapation with distilling: 0.0001
training loss: tensor(0.5348) feature loss: tensor(0.2000)
Global Model Acc on global data: 0.5315 length of data: 10000
-------------Round number:  52  -------------
selected users: [82, 8, 44, 19, 2, 73, 37, 89, 67, 18]
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([27, 32, 16, 16]) torch.Size([27])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
all data: 244
Local adapation with distilling: 0.0001
training loss: tensor(0.5860) feature loss: tensor(0.1955)
Local adapation with distilling: 0.0001
training loss: tensor(0.5296) feature loss: tensor(0.2048)
Local adapation with distilling: 0.0001
training loss: tensor(0.5947) feature loss: tensor(0.1816)
Local adapation with distilling: 0.0001
training loss: tensor(0.5225) feature loss: tensor(0.1926)
Local adapation with distilling: 0.0001
training loss: tensor(0.4979) feature loss: tensor(0.2238)
Local adapation with distilling: 0.0001
training loss: tensor(0.5054) feature loss: tensor(0.1911)
Local adapation with distilling: 0.0001
training loss: tensor(0.4704) feature loss: tensor(0.1970)
Local adapation with distilling: 0.0001
training loss: tensor(0.4693) feature loss: tensor(0.2060)
Local adapation with distilling: 0.0001
training loss: tensor(0.5837) feature loss: tensor(0.2470)
Local adapation with distilling: 0.0001
training loss: tensor(0.6732) feature loss: tensor(0.2145)
Global Model Acc on global data: 0.5484 length of data: 10000
-------------Round number:  53  -------------
selected users: [19, 78, 64, 3, 71, 32, 68, 42, 55, 97]
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
all data: 245
Local adapation with distilling: 0.0001
training loss: tensor(0.5917) feature loss: tensor(0.2974)
Local adapation with distilling: 0.0001
training loss: tensor(0.5647) feature loss: tensor(0.2723)
Local adapation with distilling: 0.0001
training loss: tensor(0.7937) feature loss: tensor(0.2583)
Local adapation with distilling: 0.0001
training loss: tensor(0.7458) feature loss: tensor(0.2818)
Local adapation with distilling: 0.0001
training loss: tensor(0.5279) feature loss: tensor(0.3016)
Local adapation with distilling: 0.0001
training loss: tensor(0.7605) feature loss: tensor(0.2705)
Local adapation with distilling: 0.0001
training loss: tensor(0.6703) feature loss: tensor(0.2839)
Local adapation with distilling: 0.0001
training loss: tensor(0.6219) feature loss: tensor(0.2907)
Local adapation with distilling: 0.0001
training loss: tensor(0.6621) feature loss: tensor(0.2732)
Local adapation with distilling: 0.0001
training loss: tensor(0.7154) feature loss: tensor(0.2885)
Global Model Acc on global data: 0.5353 length of data: 10000
-------------Round number:  54  -------------
selected users: [36, 70, 48, 94, 81, 46, 38, 29, 34, 22]
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([27, 32, 16, 16]) torch.Size([27])
random features: torch.Size([27, 32, 16, 16]) torch.Size([27])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
all data: 249
Local adapation with distilling: 0.0001
training loss: tensor(0.5755) feature loss: tensor(0.2321)
Local adapation with distilling: 0.0001
training loss: tensor(0.5265) feature loss: tensor(0.2269)
Local adapation with distilling: 0.0001
training loss: tensor(0.7728) feature loss: tensor(0.2447)
Local adapation with distilling: 0.0001
training loss: tensor(0.5917) feature loss: tensor(0.2300)
Local adapation with distilling: 0.0001
training loss: tensor(1.3222) feature loss: tensor(0.2531)
Local adapation with distilling: 0.0001
training loss: tensor(0.5662) feature loss: tensor(0.2517)
Local adapation with distilling: 0.0001
training loss: tensor(0.4665) feature loss: tensor(0.2270)
Local adapation with distilling: 0.0001
training loss: tensor(0.5283) feature loss: tensor(0.2446)
Local adapation with distilling: 0.0001
training loss: tensor(0.5787) feature loss: tensor(0.2434)
Local adapation with distilling: 0.0001
training loss: tensor(0.7709) feature loss: tensor(0.2488)
Global Model Acc on global data: 0.5499 length of data: 10000
save a model
-------------Round number:  55  -------------
selected users: [28, 92, 98, 95, 84, 34, 38, 76, 17, 78]
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([27, 32, 16, 16]) torch.Size([27])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
all data: 249
Local adapation with distilling: 0.0001
training loss: tensor(0.8768) feature loss: tensor(0.2183)
Local adapation with distilling: 0.0001
training loss: tensor(0.7916) feature loss: tensor(0.2113)
Local adapation with distilling: 0.0001
training loss: tensor(0.5071) feature loss: tensor(0.2321)
Local adapation with distilling: 0.0001
training loss: tensor(0.5070) feature loss: tensor(0.2409)
Local adapation with distilling: 0.0001
training loss: tensor(0.6036) feature loss: tensor(0.2061)
Local adapation with distilling: 0.0001
training loss: tensor(0.5026) feature loss: tensor(0.2336)
Local adapation with distilling: 0.0001
training loss: tensor(0.4074) feature loss: tensor(0.2140)
Local adapation with distilling: 0.0001
training loss: tensor(0.5416) feature loss: tensor(0.2021)
Local adapation with distilling: 0.0001
training loss: tensor(0.4584) feature loss: tensor(0.1991)
Local adapation with distilling: 0.0001
training loss: tensor(0.4865) feature loss: tensor(0.2188)
Global Model Acc on global data: 0.541 length of data: 10000
-------------Round number:  56  -------------
selected users: [92, 79, 23, 68, 52, 38, 73, 9, 59, 27]
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([27, 32, 16, 16]) torch.Size([27])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
all data: 248
Local adapation with distilling: 0.0001
training loss: tensor(0.7022) feature loss: tensor(0.2128)
Local adapation with distilling: 0.0001
training loss: tensor(0.4630) feature loss: tensor(0.2362)
Local adapation with distilling: 0.0001
training loss: tensor(0.7917) feature loss: tensor(0.2277)
Local adapation with distilling: 0.0001
training loss: tensor(0.4922) feature loss: tensor(0.2218)
Local adapation with distilling: 0.0001
training loss: tensor(0.7837) feature loss: tensor(0.2222)
Local adapation with distilling: 0.0001
training loss: tensor(0.3964) feature loss: tensor(0.2221)
Local adapation with distilling: 0.0001
training loss: tensor(0.4926) feature loss: tensor(0.2233)
Local adapation with distilling: 0.0001
training loss: tensor(0.6860) feature loss: tensor(0.2461)
Local adapation with distilling: 0.0001
training loss: tensor(0.6001) feature loss: tensor(0.2407)
Local adapation with distilling: 0.0001
training loss: tensor(0.5757) feature loss: tensor(0.2096)
Global Model Acc on global data: 0.5458 length of data: 10000
-------------Round number:  57  -------------
selected users: [52, 17, 41, 3, 8, 98, 59, 20, 67, 7]
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
all data: 242
Local adapation with distilling: 0.0001
training loss: tensor(0.9191) feature loss: tensor(0.2088)
Local adapation with distilling: 0.0001
training loss: tensor(0.4201) feature loss: tensor(0.2207)
Local adapation with distilling: 0.0001
training loss: tensor(0.5094) feature loss: tensor(0.2359)
Local adapation with distilling: 0.0001
training loss: tensor(0.5818) feature loss: tensor(0.1982)
Local adapation with distilling: 0.0001
training loss: tensor(0.4628) feature loss: tensor(0.2445)
Local adapation with distilling: 0.0001
training loss: tensor(0.4578) feature loss: tensor(0.2470)
Local adapation with distilling: 0.0001
training loss: tensor(0.5827) feature loss: tensor(0.2236)
Local adapation with distilling: 0.0001
training loss: tensor(0.6187) feature loss: tensor(0.2310)
Local adapation with distilling: 0.0001
training loss: tensor(0.5149) feature loss: tensor(0.2430)
Local adapation with distilling: 0.0001
training loss: tensor(0.5910) feature loss: tensor(0.2213)
Global Model Acc on global data: 0.5488 length of data: 10000
-------------Round number:  58  -------------
selected users: [43, 58, 8, 31, 70, 45, 69, 95, 50, 4]
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
all data: 243
Local adapation with distilling: 0.0001
training loss: tensor(0.5785) feature loss: tensor(0.2299)
Local adapation with distilling: 0.0001
training loss: tensor(0.4817) feature loss: tensor(0.2224)
Local adapation with distilling: 0.0001
training loss: tensor(0.4416) feature loss: tensor(0.2324)
Local adapation with distilling: 0.0001
training loss: tensor(0.5968) feature loss: tensor(0.2364)
Local adapation with distilling: 0.0001
training loss: tensor(0.4901) feature loss: tensor(0.2190)
Local adapation with distilling: 0.0001
training loss: tensor(0.4979) feature loss: tensor(0.2514)
Local adapation with distilling: 0.0001
training loss: tensor(0.5061) feature loss: tensor(0.2361)
Local adapation with distilling: 0.0001
training loss: tensor(0.4904) feature loss: tensor(0.2366)
Local adapation with distilling: 0.0001
training loss: tensor(0.5766) feature loss: tensor(0.2463)
Local adapation with distilling: 0.0001
training loss: tensor(0.5845) feature loss: tensor(0.2388)
Global Model Acc on global data: 0.5601 length of data: 10000
save a model
-------------Round number:  59  -------------
selected users: [38, 46, 24, 87, 30, 85, 16, 96, 18, 99]
random features: torch.Size([27, 32, 16, 16]) torch.Size([27])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
all data: 245
Local adapation with distilling: 0.0001
training loss: tensor(0.4387) feature loss: tensor(0.2495)
Local adapation with distilling: 0.0001
training loss: tensor(0.5569) feature loss: tensor(0.2736)
Local adapation with distilling: 0.0001
training loss: tensor(0.5952) feature loss: tensor(0.2675)
Local adapation with distilling: 0.0001
training loss: tensor(0.6511) feature loss: tensor(0.2370)
Local adapation with distilling: 0.0001
training loss: tensor(0.7325) feature loss: tensor(0.2300)
Local adapation with distilling: 0.0001
training loss: tensor(0.5707) feature loss: tensor(0.2256)
Local adapation with distilling: 0.0001
training loss: tensor(0.7068) feature loss: tensor(0.2302)
Local adapation with distilling: 0.0001
training loss: tensor(0.8784) feature loss: tensor(0.2310)
Local adapation with distilling: 0.0001
training loss: tensor(0.6503) feature loss: tensor(0.2573)
Local adapation with distilling: 0.0001
training loss: tensor(0.6269) feature loss: tensor(0.2629)
Global Model Acc on global data: 0.5521 length of data: 10000
-------------Round number:  60  -------------
selected users: [88, 4, 79, 14, 55, 3, 19, 28, 94, 25]
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
all data: 246
Local adapation with distilling: 0.0001
training loss: tensor(0.5299) feature loss: tensor(0.2458)
Local adapation with distilling: 0.0001
training loss: tensor(0.5039) feature loss: tensor(0.2464)
Local adapation with distilling: 0.0001
training loss: tensor(0.4393) feature loss: tensor(0.2300)
Local adapation with distilling: 0.0001
training loss: tensor(0.5182) feature loss: tensor(0.2147)
Local adapation with distilling: 0.0001
training loss: tensor(0.5315) feature loss: tensor(0.2113)
Local adapation with distilling: 0.0001
training loss: tensor(0.5330) feature loss: tensor(0.2090)
Local adapation with distilling: 0.0001
training loss: tensor(0.5161) feature loss: tensor(0.2542)
Local adapation with distilling: 0.0001
training loss: tensor(0.7182) feature loss: tensor(0.2214)
Local adapation with distilling: 0.0001
training loss: tensor(0.5200) feature loss: tensor(0.2208)
Local adapation with distilling: 0.0001
training loss: tensor(0.5119) feature loss: tensor(0.2314)
Global Model Acc on global data: 0.5507 length of data: 10000
-------------Round number:  61  -------------
selected users: [83, 1, 55, 9, 31, 28, 96, 29, 86, 63]
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([27, 32, 16, 16]) torch.Size([27])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
all data: 252
Local adapation with distilling: 0.0001
training loss: tensor(0.5504) feature loss: tensor(0.2096)
Local adapation with distilling: 0.0001
training loss: tensor(0.5012) feature loss: tensor(0.2410)
Local adapation with distilling: 0.0001
training loss: tensor(0.4774) feature loss: tensor(0.1996)
Local adapation with distilling: 0.0001
training loss: tensor(0.7240) feature loss: tensor(0.2375)
Local adapation with distilling: 0.0001
training loss: tensor(0.5704) feature loss: tensor(0.2295)
Local adapation with distilling: 0.0001
training loss: tensor(0.6698) feature loss: tensor(0.2174)
Local adapation with distilling: 0.0001
training loss: tensor(0.7861) feature loss: tensor(0.2089)
Local adapation with distilling: 0.0001
training loss: tensor(0.4636) feature loss: tensor(0.2250)
Local adapation with distilling: 0.0001
training loss: tensor(0.4910) feature loss: tensor(0.2188)
Local adapation with distilling: 0.0001
training loss: tensor(0.4439) feature loss: tensor(0.2397)
Global Model Acc on global data: 0.5404 length of data: 10000
-------------Round number:  62  -------------
selected users: [76, 48, 62, 80, 29, 99, 60, 89, 39, 69]
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([27, 32, 16, 16]) torch.Size([27])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([27, 32, 16, 16]) torch.Size([27])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
all data: 246
Local adapation with distilling: 0.0001
training loss: tensor(0.4883) feature loss: tensor(0.1962)
Local adapation with distilling: 0.0001
training loss: tensor(0.5908) feature loss: tensor(0.2275)
Local adapation with distilling: 0.0001
training loss: tensor(0.5951) feature loss: tensor(0.1997)
Local adapation with distilling: 0.0001
training loss: tensor(0.4880) feature loss: tensor(0.1965)
Local adapation with distilling: 0.0001
training loss: tensor(0.4183) feature loss: tensor(0.2104)
Local adapation with distilling: 0.0001
training loss: tensor(0.5079) feature loss: tensor(0.2083)
Local adapation with distilling: 0.0001
training loss: tensor(0.5442) feature loss: tensor(0.2299)
Local adapation with distilling: 0.0001
training loss: tensor(0.4249) feature loss: tensor(0.2163)
Local adapation with distilling: 0.0001
training loss: tensor(0.5091) feature loss: tensor(0.2466)
Local adapation with distilling: 0.0001
training loss: tensor(0.4149) feature loss: tensor(0.2164)
Global Model Acc on global data: 0.5299 length of data: 10000
-------------Round number:  63  -------------
selected users: [64, 59, 63, 2, 80, 20, 18, 48, 72, 51]
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([28, 32, 16, 16]) torch.Size([28])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
all data: 244
Local adapation with distilling: 0.0001
training loss: tensor(0.7291) feature loss: tensor(0.2211)
Local adapation with distilling: 0.0001
training loss: tensor(0.5312) feature loss: tensor(0.2356)
Local adapation with distilling: 0.0001
training loss: tensor(0.4474) feature loss: tensor(0.2274)
Local adapation with distilling: 0.0001
training loss: tensor(0.4760) feature loss: tensor(0.2442)
Local adapation with distilling: 0.0001
training loss: tensor(0.4889) feature loss: tensor(0.2171)
Local adapation with distilling: 0.0001
training loss: tensor(0.6014) feature loss: tensor(0.2306)
Local adapation with distilling: 0.0001
training loss: tensor(0.5717) feature loss: tensor(0.2373)
Local adapation with distilling: 0.0001
training loss: tensor(0.5568) feature loss: tensor(0.2450)
Local adapation with distilling: 0.0001
training loss: tensor(0.5537) feature loss: tensor(0.2238)
Local adapation with distilling: 0.0001
training loss: tensor(0.5703) feature loss: tensor(0.2522)
Global Model Acc on global data: 0.538 length of data: 10000
-------------Round number:  64  -------------
selected users: [17, 22, 60, 92, 23, 19, 71, 94, 40, 49]
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
all data: 244
Local adapation with distilling: 0.0001
training loss: tensor(0.4980) feature loss: tensor(0.2316)
Local adapation with distilling: 0.0001
training loss: tensor(0.9051) feature loss: tensor(0.2415)
Local adapation with distilling: 0.0001
training loss: tensor(0.5262) feature loss: tensor(0.2602)
Local adapation with distilling: 0.0001
training loss: tensor(0.6325) feature loss: tensor(0.2242)
Local adapation with distilling: 0.0001
training loss: tensor(0.6727) feature loss: tensor(0.2293)
Local adapation with distilling: 0.0001
training loss: tensor(0.5405) feature loss: tensor(0.2407)
Local adapation with distilling: 0.0001
training loss: tensor(0.4774) feature loss: tensor(0.2333)
Local adapation with distilling: 0.0001
training loss: tensor(0.5701) feature loss: tensor(0.2280)
Local adapation with distilling: 0.0001
training loss: tensor(0.5410) feature loss: tensor(0.2326)
Local adapation with distilling: 0.0001
training loss: tensor(0.5224) feature loss: tensor(0.2459)
Global Model Acc on global data: 0.5423 length of data: 10000
-------------Round number:  65  -------------
selected users: [37, 81, 39, 61, 76, 90, 27, 86, 28, 69]
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
all data: 248
Local adapation with distilling: 0.0001
training loss: tensor(0.4456) feature loss: tensor(0.2079)
Local adapation with distilling: 0.0001
training loss: tensor(0.8098) feature loss: tensor(0.2276)
Local adapation with distilling: 0.0001
training loss: tensor(0.4752) feature loss: tensor(0.2325)
Local adapation with distilling: 0.0001
training loss: tensor(0.5559) feature loss: tensor(0.2256)
Local adapation with distilling: 0.0001
training loss: tensor(0.4890) feature loss: tensor(0.1920)
Local adapation with distilling: 0.0001
training loss: tensor(0.5808) feature loss: tensor(0.2059)
Local adapation with distilling: 0.0001
training loss: tensor(0.5311) feature loss: tensor(0.1963)
Local adapation with distilling: 0.0001
training loss: tensor(0.4608) feature loss: tensor(0.2171)
Local adapation with distilling: 0.0001
training loss: tensor(0.7465) feature loss: tensor(0.2085)
Local adapation with distilling: 0.0001
training loss: tensor(0.4200) feature loss: tensor(0.2065)
Global Model Acc on global data: 0.5489 length of data: 10000
-------------Round number:  66  -------------
selected users: [8, 93, 4, 5, 52, 41, 0, 73, 88, 68]
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
all data: 246
Local adapation with distilling: 0.0001
training loss: tensor(0.4983) feature loss: tensor(0.2403)
Local adapation with distilling: 0.0001
training loss: tensor(0.5882) feature loss: tensor(0.2237)
Local adapation with distilling: 0.0001
training loss: tensor(0.4785) feature loss: tensor(0.2651)
Local adapation with distilling: 0.0001
training loss: tensor(0.6059) feature loss: tensor(0.2252)
Local adapation with distilling: 0.0001
training loss: tensor(0.6963) feature loss: tensor(0.2170)
Local adapation with distilling: 0.0001
training loss: tensor(0.5157) feature loss: tensor(0.2557)
Local adapation with distilling: 0.0001
training loss: tensor(0.5014) feature loss: tensor(0.2341)
Local adapation with distilling: 0.0001
training loss: tensor(0.5299) feature loss: tensor(0.2262)
Local adapation with distilling: 0.0001
training loss: tensor(0.5029) feature loss: tensor(0.2444)
Local adapation with distilling: 0.0001
training loss: tensor(0.5528) feature loss: tensor(0.2398)
Global Model Acc on global data: 0.5399 length of data: 10000
-------------Round number:  67  -------------
selected users: [17, 24, 64, 93, 97, 29, 3, 70, 82, 11]
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([27, 32, 16, 16]) torch.Size([27])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
all data: 249
Local adapation with distilling: 0.0001
training loss: tensor(0.4589) feature loss: tensor(0.2388)
Local adapation with distilling: 0.0001
training loss: tensor(0.5306) feature loss: tensor(0.2840)
Local adapation with distilling: 0.0001
training loss: tensor(0.6143) feature loss: tensor(0.2237)
Local adapation with distilling: 0.0001
training loss: tensor(0.5314) feature loss: tensor(0.2420)
Local adapation with distilling: 0.0001
training loss: tensor(0.5815) feature loss: tensor(0.2282)
Local adapation with distilling: 0.0001
training loss: tensor(0.4986) feature loss: tensor(0.2644)
Local adapation with distilling: 0.0001
training loss: tensor(0.5536) feature loss: tensor(0.2394)
Local adapation with distilling: 0.0001
training loss: tensor(0.4887) feature loss: tensor(0.2572)
Local adapation with distilling: 0.0001
training loss: tensor(0.5889) feature loss: tensor(0.2446)
Local adapation with distilling: 0.0001
training loss: tensor(0.5140) feature loss: tensor(0.2705)
Global Model Acc on global data: 0.5512 length of data: 10000
-------------Round number:  68  -------------
selected users: [29, 30, 16, 5, 38, 71, 76, 94, 99, 95]
random features: torch.Size([27, 32, 16, 16]) torch.Size([27])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([27, 32, 16, 16]) torch.Size([27])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
all data: 252
Local adapation with distilling: 0.0001
training loss: tensor(0.4184) feature loss: tensor(0.2482)
Local adapation with distilling: 0.0001
training loss: tensor(0.6062) feature loss: tensor(0.2208)
Local adapation with distilling: 0.0001
training loss: tensor(0.5642) feature loss: tensor(0.2120)
Local adapation with distilling: 0.0001
training loss: tensor(0.5224) feature loss: tensor(0.2098)
Local adapation with distilling: 0.0001
training loss: tensor(0.3790) feature loss: tensor(0.2281)
Local adapation with distilling: 0.0001
training loss: tensor(0.4086) feature loss: tensor(0.2723)
Local adapation with distilling: 0.0001
training loss: tensor(0.4527) feature loss: tensor(0.2118)
Local adapation with distilling: 0.0001
training loss: tensor(0.4600) feature loss: tensor(0.2092)
Local adapation with distilling: 0.0001
training loss: tensor(0.5021) feature loss: tensor(0.2540)
Local adapation with distilling: 0.0001
training loss: tensor(0.4627) feature loss: tensor(0.2435)
Global Model Acc on global data: 0.5494 length of data: 10000
-------------Round number:  69  -------------
selected users: [72, 31, 13, 83, 33, 8, 26, 89, 64, 97]
random features: torch.Size([28, 32, 16, 16]) torch.Size([28])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([27, 32, 16, 16]) torch.Size([27])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
all data: 250
Local adapation with distilling: 0.0001
training loss: tensor(0.4956) feature loss: tensor(0.2231)
Local adapation with distilling: 0.0001
training loss: tensor(0.5874) feature loss: tensor(0.2295)
Local adapation with distilling: 0.0001
training loss: tensor(0.5669) feature loss: tensor(0.2407)
Local adapation with distilling: 0.0001
training loss: tensor(0.5228) feature loss: tensor(0.2260)
Local adapation with distilling: 0.0001
training loss: tensor(0.5187) feature loss: tensor(0.2221)
Local adapation with distilling: 0.0001
training loss: tensor(0.4722) feature loss: tensor(0.2326)
Local adapation with distilling: 0.0001
training loss: tensor(0.4767) feature loss: tensor(0.2253)
Local adapation with distilling: 0.0001
training loss: tensor(0.4629) feature loss: tensor(0.2492)
Local adapation with distilling: 0.0001
training loss: tensor(0.5330) feature loss: tensor(0.2098)
Local adapation with distilling: 0.0001
training loss: tensor(0.5289) feature loss: tensor(0.2185)
Global Model Acc on global data: 0.5425 length of data: 10000
-------------Round number:  70  -------------
selected users: [81, 43, 88, 32, 50, 71, 73, 55, 42, 2]
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
all data: 243
Local adapation with distilling: 0.0001
training loss: tensor(0.8534) feature loss: tensor(0.2411)
Local adapation with distilling: 0.0001
training loss: tensor(0.5174) feature loss: tensor(0.2282)
Local adapation with distilling: 0.0001
training loss: tensor(0.4802) feature loss: tensor(0.2307)
Local adapation with distilling: 0.0001
training loss: tensor(0.6225) feature loss: tensor(0.2046)
Local adapation with distilling: 0.0001
training loss: tensor(0.5355) feature loss: tensor(0.2382)
Local adapation with distilling: 0.0001
training loss: tensor(0.4143) feature loss: tensor(0.2538)
Local adapation with distilling: 0.0001
training loss: tensor(0.4640) feature loss: tensor(0.2088)
Local adapation with distilling: 0.0001
training loss: tensor(0.4880) feature loss: tensor(0.2133)
Local adapation with distilling: 0.0001
training loss: tensor(0.5385) feature loss: tensor(0.2079)
Local adapation with distilling: 0.0001
training loss: tensor(0.4612) feature loss: tensor(0.2381)
Global Model Acc on global data: 0.5488 length of data: 10000
-------------Round number:  71  -------------
selected users: [41, 84, 98, 42, 75, 25, 60, 19, 52, 29]
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([27, 32, 16, 16]) torch.Size([27])
all data: 244
Local adapation with distilling: 0.0001
training loss: tensor(0.4712) feature loss: tensor(0.2258)
Local adapation with distilling: 0.0001
training loss: tensor(0.5576) feature loss: tensor(0.2212)
Local adapation with distilling: 0.0001
training loss: tensor(0.4798) feature loss: tensor(0.2308)
Local adapation with distilling: 0.0001
training loss: tensor(0.4983) feature loss: tensor(0.2101)
Local adapation with distilling: 0.0001
training loss: tensor(0.5205) feature loss: tensor(0.2300)
Local adapation with distilling: 0.0001
training loss: tensor(0.5133) feature loss: tensor(0.2273)
Local adapation with distilling: 0.0001
training loss: tensor(0.5018) feature loss: tensor(0.2537)
Local adapation with distilling: 0.0001
training loss: tensor(0.4971) feature loss: tensor(0.2571)
Local adapation with distilling: 0.0001
training loss: tensor(0.6992) feature loss: tensor(0.2215)
Local adapation with distilling: 0.0001
training loss: tensor(0.4272) feature loss: tensor(0.2396)
Global Model Acc on global data: 0.56 length of data: 10000
-------------Round number:  72  -------------
selected users: [76, 82, 43, 16, 84, 95, 78, 91, 30, 22]
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
all data: 248
Local adapation with distilling: 0.0001
training loss: tensor(0.4727) feature loss: tensor(0.2082)
Local adapation with distilling: 0.0001
training loss: tensor(0.5076) feature loss: tensor(0.2038)
Local adapation with distilling: 0.0001
training loss: tensor(0.4850) feature loss: tensor(0.2412)
Local adapation with distilling: 0.0001
training loss: tensor(0.5455) feature loss: tensor(0.2097)
Local adapation with distilling: 0.0001
training loss: tensor(0.5056) feature loss: tensor(0.2205)
Local adapation with distilling: 0.0001
training loss: tensor(0.4823) feature loss: tensor(0.2374)
Local adapation with distilling: 0.0001
training loss: tensor(0.5492) feature loss: tensor(0.2301)
Local adapation with distilling: 0.0001
training loss: tensor(0.5254) feature loss: tensor(0.2768)
Local adapation with distilling: 0.0001
training loss: tensor(0.5804) feature loss: tensor(0.2266)
Local adapation with distilling: 0.0001
training loss: tensor(0.7218) feature loss: tensor(0.2566)
Global Model Acc on global data: 0.549 length of data: 10000
-------------Round number:  73  -------------
selected users: [49, 14, 34, 70, 90, 35, 68, 76, 80, 9]
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
all data: 244
Local adapation with distilling: 0.0001
training loss: tensor(0.5139) feature loss: tensor(0.2319)
Local adapation with distilling: 0.0001
training loss: tensor(0.4771) feature loss: tensor(0.2261)
Local adapation with distilling: 0.0001
training loss: tensor(0.5033) feature loss: tensor(0.2483)
Local adapation with distilling: 0.0001
training loss: tensor(0.4643) feature loss: tensor(0.2153)
Local adapation with distilling: 0.0001
training loss: tensor(0.5025) feature loss: tensor(0.2286)
Local adapation with distilling: 0.0001
training loss: tensor(0.6370) feature loss: tensor(0.2458)
Local adapation with distilling: 0.0001
training loss: tensor(0.5173) feature loss: tensor(0.2333)
Local adapation with distilling: 0.0001
training loss: tensor(0.4294) feature loss: tensor(0.2267)
Local adapation with distilling: 0.0001
training loss: tensor(0.4642) feature loss: tensor(0.2203)
Local adapation with distilling: 0.0001
training loss: tensor(0.9968) feature loss: tensor(0.2385)
Global Model Acc on global data: 0.5398 length of data: 10000
-------------Round number:  74  -------------
selected users: [85, 64, 63, 80, 6, 12, 43, 17, 7, 8]
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
all data: 245
Local adapation with distilling: 0.0001
training loss: tensor(0.4883) feature loss: tensor(0.2147)
Local adapation with distilling: 0.0001
training loss: tensor(0.5206) feature loss: tensor(0.1967)
Local adapation with distilling: 0.0001
training loss: tensor(0.4478) feature loss: tensor(0.2241)
Local adapation with distilling: 0.0001
training loss: tensor(0.4168) feature loss: tensor(0.2111)
Local adapation with distilling: 0.0001
training loss: tensor(0.6672) feature loss: tensor(0.2066)
Local adapation with distilling: 0.0001
training loss: tensor(0.5962) feature loss: tensor(0.2349)
Local adapation with distilling: 0.0001
training loss: tensor(0.4558) feature loss: tensor(0.2321)
Local adapation with distilling: 0.0001
training loss: tensor(0.4281) feature loss: tensor(0.2095)
Local adapation with distilling: 0.0001
training loss: tensor(0.5635) feature loss: tensor(0.2297)
Local adapation with distilling: 0.0001
training loss: tensor(0.4397) feature loss: tensor(0.2313)
Global Model Acc on global data: 0.5475 length of data: 10000
-------------Round number:  75  -------------
selected users: [36, 7, 6, 45, 56, 54, 22, 37, 53, 68]
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([27, 32, 16, 16]) torch.Size([27])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([28, 32, 16, 16]) torch.Size([28])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
all data: 255
Local adapation with distilling: 0.0001
training loss: tensor(0.5045) feature loss: tensor(0.2225)
Local adapation with distilling: 0.0001
training loss: tensor(0.5388) feature loss: tensor(0.2278)
Local adapation with distilling: 0.0001
training loss: tensor(0.6013) feature loss: tensor(0.2044)
Local adapation with distilling: 0.0001
training loss: tensor(0.5373) feature loss: tensor(0.2371)
Local adapation with distilling: 0.0001
training loss: tensor(0.5516) feature loss: tensor(0.2547)
Local adapation with distilling: 0.0001
training loss: tensor(0.7160) feature loss: tensor(0.2147)
Local adapation with distilling: 0.0001
training loss: tensor(0.6654) feature loss: tensor(0.2269)
Local adapation with distilling: 0.0001
training loss: tensor(0.4515) feature loss: tensor(0.2194)
Local adapation with distilling: 0.0001
training loss: tensor(0.5089) feature loss: tensor(0.2460)
Local adapation with distilling: 0.0001
training loss: tensor(0.5369) feature loss: tensor(0.2216)
Global Model Acc on global data: 0.5581 length of data: 10000
-------------Round number:  76  -------------
selected users: [38, 37, 32, 50, 10, 94, 19, 44, 86, 23]
random features: torch.Size([27, 32, 16, 16]) torch.Size([27])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
all data: 246
Local adapation with distilling: 0.0001
training loss: tensor(0.4162) feature loss: tensor(0.2213)
Local adapation with distilling: 0.0001
training loss: tensor(0.4196) feature loss: tensor(0.2245)
Local adapation with distilling: 0.0001
training loss: tensor(0.5837) feature loss: tensor(0.2164)
Local adapation with distilling: 0.0001
training loss: tensor(0.5132) feature loss: tensor(0.2533)
Local adapation with distilling: 0.0001
training loss: tensor(0.5600) feature loss: tensor(0.2445)
Local adapation with distilling: 0.0001
training loss: tensor(0.4472) feature loss: tensor(0.2169)
Local adapation with distilling: 0.0001
training loss: tensor(0.4701) feature loss: tensor(0.2401)
Local adapation with distilling: 0.0001
training loss: tensor(0.5718) feature loss: tensor(0.2141)
Local adapation with distilling: 0.0001
training loss: tensor(0.4678) feature loss: tensor(0.2501)
Local adapation with distilling: 0.0001
training loss: tensor(0.5994) feature loss: tensor(0.2349)
Global Model Acc on global data: 0.5393 length of data: 10000
-------------Round number:  77  -------------
selected users: [5, 93, 41, 96, 16, 42, 81, 91, 50, 58]
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
all data: 248
Local adapation with distilling: 0.0001
training loss: tensor(0.5719) feature loss: tensor(0.2173)
Local adapation with distilling: 0.0001
training loss: tensor(0.5372) feature loss: tensor(0.2296)
Local adapation with distilling: 0.0001
training loss: tensor(0.4578) feature loss: tensor(0.2618)
Local adapation with distilling: 0.0001
training loss: tensor(0.7560) feature loss: tensor(0.2166)
Local adapation with distilling: 0.0001
training loss: tensor(0.4930) feature loss: tensor(0.2229)
Local adapation with distilling: 0.0001
training loss: tensor(0.4898) feature loss: tensor(0.2131)
Local adapation with distilling: 0.0001
training loss: tensor(0.7800) feature loss: tensor(0.2476)
Local adapation with distilling: 0.0001
training loss: tensor(0.5153) feature loss: tensor(0.2590)
Local adapation with distilling: 0.0001
training loss: tensor(0.4839) feature loss: tensor(0.2634)
Local adapation with distilling: 0.0001
training loss: tensor(0.4821) feature loss: tensor(0.2209)
Global Model Acc on global data: 0.5351 length of data: 10000
-------------Round number:  78  -------------
selected users: [9, 46, 7, 63, 15, 2, 74, 31, 5, 36]
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
all data: 245
Local adapation with distilling: 0.0001
training loss: tensor(0.8626) feature loss: tensor(0.2178)
Local adapation with distilling: 0.0001
training loss: tensor(0.4343) feature loss: tensor(0.2166)
Local adapation with distilling: 0.0001
training loss: tensor(0.4797) feature loss: tensor(0.2197)
Local adapation with distilling: 0.0001
training loss: tensor(0.4336) feature loss: tensor(0.2183)
Local adapation with distilling: 0.0001
training loss: tensor(0.5621) feature loss: tensor(0.2306)
Local adapation with distilling: 0.0001
training loss: tensor(0.4435) feature loss: tensor(0.2109)
Local adapation with distilling: 0.0001
training loss: tensor(0.4622) feature loss: tensor(0.2149)
Local adapation with distilling: 0.0001
training loss: tensor(0.5103) feature loss: tensor(0.2195)
Local adapation with distilling: 0.0001
training loss: tensor(0.4908) feature loss: tensor(0.2007)
Local adapation with distilling: 0.0001
training loss: tensor(0.4346) feature loss: tensor(0.2015)
Global Model Acc on global data: 0.5549 length of data: 10000
-------------Round number:  79  -------------
selected users: [68, 18, 86, 60, 56, 32, 30, 24, 45, 92]
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([27, 32, 16, 16]) torch.Size([27])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
all data: 245
Local adapation with distilling: 0.0001
training loss: tensor(0.4218) feature loss: tensor(0.2015)
Local adapation with distilling: 0.0001
training loss: tensor(0.4947) feature loss: tensor(0.2065)
Local adapation with distilling: 0.0001
training loss: tensor(0.3980) feature loss: tensor(0.2240)
Local adapation with distilling: 0.0001
training loss: tensor(0.4368) feature loss: tensor(0.2353)
Local adapation with distilling: 0.0001
training loss: tensor(0.4320) feature loss: tensor(0.2065)
Local adapation with distilling: 0.0001
training loss: tensor(0.5180) feature loss: tensor(0.1905)
Local adapation with distilling: 0.0001
training loss: tensor(0.5003) feature loss: tensor(0.2000)
Local adapation with distilling: 0.0001
training loss: tensor(0.4426) feature loss: tensor(0.2175)
Local adapation with distilling: 0.0001
training loss: tensor(0.4423) feature loss: tensor(0.2314)
Local adapation with distilling: 0.0001
training loss: tensor(0.5695) feature loss: tensor(0.1946)
Global Model Acc on global data: 0.5564 length of data: 10000
-------------Round number:  80  -------------
selected users: [37, 65, 95, 53, 66, 30, 73, 85, 45, 36]
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([28, 32, 16, 16]) torch.Size([28])
random features: torch.Size([27, 32, 16, 16]) torch.Size([27])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
all data: 253
Local adapation with distilling: 0.0001
training loss: tensor(0.4090) feature loss: tensor(0.2088)
Local adapation with distilling: 0.0001
training loss: tensor(0.5211) feature loss: tensor(0.2403)
Local adapation with distilling: 0.0001
training loss: tensor(0.4406) feature loss: tensor(0.2492)
Local adapation with distilling: 0.0001
training loss: tensor(0.4802) feature loss: tensor(0.2281)
Local adapation with distilling: 0.0001
training loss: tensor(0.5627) feature loss: tensor(0.2512)
Local adapation with distilling: 0.0001
training loss: tensor(0.4992) feature loss: tensor(0.2231)
Local adapation with distilling: 0.0001
training loss: tensor(0.4781) feature loss: tensor(0.2232)
Local adapation with distilling: 0.0001
training loss: tensor(0.4639) feature loss: tensor(0.2208)
Local adapation with distilling: 0.0001
training loss: tensor(0.4601) feature loss: tensor(0.2403)
Local adapation with distilling: 0.0001
training loss: tensor(0.4379) feature loss: tensor(0.2281)
Global Model Acc on global data: 0.5606 length of data: 10000
save a model
-------------Round number:  81  -------------
selected users: [73, 89, 41, 78, 51, 21, 30, 69, 8, 5]
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([27, 32, 16, 16]) torch.Size([27])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
all data: 245
Local adapation with distilling: 0.0001
training loss: tensor(0.4277) feature loss: tensor(0.2058)
Local adapation with distilling: 0.0001
training loss: tensor(0.4298) feature loss: tensor(0.2412)
Local adapation with distilling: 0.0001
training loss: tensor(0.4324) feature loss: tensor(0.2278)
Local adapation with distilling: 0.0001
training loss: tensor(0.5006) feature loss: tensor(0.2104)
Local adapation with distilling: 0.0001
training loss: tensor(0.5012) feature loss: tensor(0.2415)
Local adapation with distilling: 0.0001
training loss: tensor(0.5227) feature loss: tensor(0.2243)
Local adapation with distilling: 0.0001
training loss: tensor(0.4567) feature loss: tensor(0.2152)
Local adapation with distilling: 0.0001
training loss: tensor(0.4371) feature loss: tensor(0.2126)
Local adapation with distilling: 0.0001
training loss: tensor(0.4122) feature loss: tensor(0.2169)
Local adapation with distilling: 0.0001
training loss: tensor(0.4688) feature loss: tensor(0.2049)
Global Model Acc on global data: 0.5606 length of data: 10000
-------------Round number:  82  -------------
selected users: [72, 33, 58, 2, 55, 84, 54, 75, 28, 40]
random features: torch.Size([28, 32, 16, 16]) torch.Size([28])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
all data: 247
Local adapation with distilling: 0.0001
training loss: tensor(0.4430) feature loss: tensor(0.2001)
Local adapation with distilling: 0.0001
training loss: tensor(0.4378) feature loss: tensor(0.2159)
Local adapation with distilling: 0.0001
training loss: tensor(0.4147) feature loss: tensor(0.2184)
Local adapation with distilling: 0.0001
training loss: tensor(0.3974) feature loss: tensor(0.2501)
Local adapation with distilling: 0.0001
training loss: tensor(0.4376) feature loss: tensor(0.2059)
Local adapation with distilling: 0.0001
training loss: tensor(0.4888) feature loss: tensor(0.2114)
Local adapation with distilling: 0.0001
training loss: tensor(0.6179) feature loss: tensor(0.1983)
Local adapation with distilling: 0.0001
training loss: tensor(0.4612) feature loss: tensor(0.2183)
Local adapation with distilling: 0.0001
training loss: tensor(0.7285) feature loss: tensor(0.2443)
Local adapation with distilling: 0.0001
training loss: tensor(0.4596) feature loss: tensor(0.2296)
Global Model Acc on global data: 0.5375 length of data: 10000
-------------Round number:  83  -------------
selected users: [6, 65, 95, 84, 61, 12, 30, 69, 35, 1]
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
all data: 247
Local adapation with distilling: 0.0001
training loss: tensor(0.5921) feature loss: tensor(0.2127)
Local adapation with distilling: 0.0001
training loss: tensor(0.4798) feature loss: tensor(0.2412)
Local adapation with distilling: 0.0001
training loss: tensor(0.4255) feature loss: tensor(0.2485)
Local adapation with distilling: 0.0001
training loss: tensor(0.4825) feature loss: tensor(0.2150)
Local adapation with distilling: 0.0001
training loss: tensor(0.5221) feature loss: tensor(0.2466)
Local adapation with distilling: 0.0001
training loss: tensor(0.5133) feature loss: tensor(0.2340)
Local adapation with distilling: 0.0001
training loss: tensor(0.4331) feature loss: tensor(0.2160)
Local adapation with distilling: 0.0001
training loss: tensor(0.4409) feature loss: tensor(0.2242)
Local adapation with distilling: 0.0001
training loss: tensor(0.5691) feature loss: tensor(0.2459)
Local adapation with distilling: 0.0001
training loss: tensor(0.5493) feature loss: tensor(0.2468)
Global Model Acc on global data: 0.5453 length of data: 10000
-------------Round number:  84  -------------
selected users: [94, 55, 80, 1, 90, 11, 32, 8, 6, 82]
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
all data: 245
Local adapation with distilling: 0.0001
training loss: tensor(0.4386) feature loss: tensor(0.1993)
Local adapation with distilling: 0.0001
training loss: tensor(0.4046) feature loss: tensor(0.1955)
Local adapation with distilling: 0.0001
training loss: tensor(0.4347) feature loss: tensor(0.1998)
Local adapation with distilling: 0.0001
training loss: tensor(0.4401) feature loss: tensor(0.2215)
Local adapation with distilling: 0.0001
training loss: tensor(0.4795) feature loss: tensor(0.2018)
Local adapation with distilling: 0.0001
training loss: tensor(0.4542) feature loss: tensor(0.2203)
Local adapation with distilling: 0.0001
training loss: tensor(0.4895) feature loss: tensor(0.2040)
Local adapation with distilling: 0.0001
training loss: tensor(0.3918) feature loss: tensor(0.2135)
Local adapation with distilling: 0.0001
training loss: tensor(0.4863) feature loss: tensor(0.2081)
Local adapation with distilling: 0.0001
training loss: tensor(0.4492) feature loss: tensor(0.2049)
Global Model Acc on global data: 0.5464 length of data: 10000
-------------Round number:  85  -------------
selected users: [81, 25, 40, 87, 41, 23, 10, 89, 50, 54]
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([27, 32, 16, 16]) torch.Size([27])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
all data: 243
Local adapation with distilling: 0.0001
training loss: tensor(0.6722) feature loss: tensor(0.2469)
Local adapation with distilling: 0.0001
training loss: tensor(0.4797) feature loss: tensor(0.2346)
Local adapation with distilling: 0.0001
training loss: tensor(0.4402) feature loss: tensor(0.2221)
Local adapation with distilling: 0.0001
training loss: tensor(0.5131) feature loss: tensor(0.2215)
Local adapation with distilling: 0.0001
training loss: tensor(0.4179) feature loss: tensor(0.2313)
Local adapation with distilling: 0.0001
training loss: tensor(0.5473) feature loss: tensor(0.2171)
Local adapation with distilling: 0.0001
training loss: tensor(0.5052) feature loss: tensor(0.2339)
Local adapation with distilling: 0.0001
training loss: tensor(0.4198) feature loss: tensor(0.2332)
Local adapation with distilling: 0.0001
training loss: tensor(0.4474) feature loss: tensor(0.2680)
Local adapation with distilling: 0.0001
training loss: tensor(0.5707) feature loss: tensor(0.2030)
Global Model Acc on global data: 0.5541 length of data: 10000
-------------Round number:  86  -------------
selected users: [69, 74, 34, 68, 42, 0, 32, 88, 8, 3]
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
all data: 241
Local adapation with distilling: 0.0001
training loss: tensor(0.4142) feature loss: tensor(0.2105)
Local adapation with distilling: 0.0001
training loss: tensor(0.4471) feature loss: tensor(0.2222)
Local adapation with distilling: 0.0001
training loss: tensor(0.4561) feature loss: tensor(0.2149)
Local adapation with distilling: 0.0001
training loss: tensor(0.4365) feature loss: tensor(0.2159)
Local adapation with distilling: 0.0001
training loss: tensor(0.4523) feature loss: tensor(0.2087)
Local adapation with distilling: 0.0001
training loss: tensor(0.4648) feature loss: tensor(0.2124)
Local adapation with distilling: 0.0001
training loss: tensor(0.4493) feature loss: tensor(0.1983)
Local adapation with distilling: 0.0001
training loss: tensor(0.4378) feature loss: tensor(0.2340)
Local adapation with distilling: 0.0001
training loss: tensor(0.3874) feature loss: tensor(0.2196)
Local adapation with distilling: 0.0001
training loss: tensor(0.4889) feature loss: tensor(0.1955)
Global Model Acc on global data: 0.5541 length of data: 10000
-------------Round number:  87  -------------
selected users: [16, 81, 85, 32, 39, 25, 26, 29, 65, 7]
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([27, 32, 16, 16]) torch.Size([27])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
all data: 250
Local adapation with distilling: 0.0001
training loss: tensor(0.4355) feature loss: tensor(0.1945)
Local adapation with distilling: 0.0001
training loss: tensor(0.6774) feature loss: tensor(0.2055)
Local adapation with distilling: 0.0001
training loss: tensor(0.4143) feature loss: tensor(0.2029)
Local adapation with distilling: 0.0001
training loss: tensor(0.4049) feature loss: tensor(0.2044)
Local adapation with distilling: 0.0001
training loss: tensor(0.4734) feature loss: tensor(0.2280)
Local adapation with distilling: 0.0001
training loss: tensor(0.4402) feature loss: tensor(0.2208)
Local adapation with distilling: 0.0001
training loss: tensor(0.4437) feature loss: tensor(0.2387)
Local adapation with distilling: 0.0001
training loss: tensor(0.4177) feature loss: tensor(0.2256)
Local adapation with distilling: 0.0001
training loss: tensor(0.4464) feature loss: tensor(0.2226)
Local adapation with distilling: 0.0001
training loss: tensor(0.4718) feature loss: tensor(0.2138)
Global Model Acc on global data: 0.569 length of data: 10000
save a model
-------------Round number:  88  -------------
selected users: [95, 53, 43, 84, 2, 74, 55, 31, 54, 97]
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([28, 32, 16, 16]) torch.Size([28])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
all data: 246
Local adapation with distilling: 0.0001
training loss: tensor(0.3887) feature loss: tensor(0.2125)
Local adapation with distilling: 0.0001
training loss: tensor(0.4159) feature loss: tensor(0.2162)
Local adapation with distilling: 0.0001
training loss: tensor(0.4262) feature loss: tensor(0.2168)
Local adapation with distilling: 0.0001
training loss: tensor(0.4324) feature loss: tensor(0.2016)
Local adapation with distilling: 0.0001
training loss: tensor(0.4093) feature loss: tensor(0.2272)
Local adapation with distilling: 0.0001
training loss: tensor(0.4218) feature loss: tensor(0.2289)
Local adapation with distilling: 0.0001
training loss: tensor(0.4080) feature loss: tensor(0.1929)
Local adapation with distilling: 0.0001
training loss: tensor(0.4658) feature loss: tensor(0.2072)
Local adapation with distilling: 0.0001
training loss: tensor(0.5428) feature loss: tensor(0.1921)
Local adapation with distilling: 0.0001
training loss: tensor(0.4706) feature loss: tensor(0.1958)
Global Model Acc on global data: 0.5598 length of data: 10000
-------------Round number:  89  -------------
selected users: [65, 21, 87, 6, 46, 74, 44, 60, 72, 5]
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([28, 32, 16, 16]) torch.Size([28])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
all data: 245
Local adapation with distilling: 0.0001
training loss: tensor(0.4223) feature loss: tensor(0.2381)
Local adapation with distilling: 0.0001
training loss: tensor(0.4557) feature loss: tensor(0.2474)
Local adapation with distilling: 0.0001
training loss: tensor(0.4878) feature loss: tensor(0.2060)
Local adapation with distilling: 0.0001
training loss: tensor(0.4829) feature loss: tensor(0.1968)
Local adapation with distilling: 0.0001
training loss: tensor(0.4488) feature loss: tensor(0.2235)
Local adapation with distilling: 0.0001
training loss: tensor(0.3907) feature loss: tensor(0.2359)
Local adapation with distilling: 0.0001
training loss: tensor(0.5309) feature loss: tensor(0.2110)
Local adapation with distilling: 0.0001
training loss: tensor(0.4363) feature loss: tensor(0.2379)
Local adapation with distilling: 0.0001
training loss: tensor(0.4491) feature loss: tensor(0.2066)
Local adapation with distilling: 0.0001
training loss: tensor(0.4621) feature loss: tensor(0.1927)
Global Model Acc on global data: 0.5638 length of data: 10000
-------------Round number:  90  -------------
selected users: [25, 85, 96, 89, 65, 94, 5, 35, 36, 92]
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([27, 32, 16, 16]) torch.Size([27])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
all data: 250
Local adapation with distilling: 0.0001
training loss: tensor(0.4016) feature loss: tensor(0.1859)
Local adapation with distilling: 0.0001
training loss: tensor(0.3680) feature loss: tensor(0.2072)
Local adapation with distilling: 0.0001
training loss: tensor(0.6244) feature loss: tensor(0.1878)
Local adapation with distilling: 0.0001
training loss: tensor(0.3657) feature loss: tensor(0.1974)
Local adapation with distilling: 0.0001
training loss: tensor(0.3718) feature loss: tensor(0.2008)
Local adapation with distilling: 0.0001
training loss: tensor(0.3909) feature loss: tensor(0.1942)
Local adapation with distilling: 0.0001
training loss: tensor(0.3719) feature loss: tensor(0.1745)
Local adapation with distilling: 0.0001
training loss: tensor(0.5101) feature loss: tensor(0.2211)
Local adapation with distilling: 0.0001
training loss: tensor(0.3946) feature loss: tensor(0.2040)
Local adapation with distilling: 0.0001
training loss: tensor(0.4482) feature loss: tensor(0.1766)
Global Model Acc on global data: 0.5574 length of data: 10000
-------------Round number:  91  -------------
selected users: [75, 25, 3, 52, 78, 54, 59, 26, 62, 97]
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
all data: 249
Local adapation with distilling: 0.0001
training loss: tensor(0.3932) feature loss: tensor(0.1778)
Local adapation with distilling: 0.0001
training loss: tensor(0.3634) feature loss: tensor(0.1961)
Local adapation with distilling: 0.0001
training loss: tensor(0.4596) feature loss: tensor(0.1775)
Local adapation with distilling: 0.0001
training loss: tensor(0.5457) feature loss: tensor(0.1791)
Local adapation with distilling: 0.0001
training loss: tensor(0.4378) feature loss: tensor(0.1957)
Local adapation with distilling: 0.0001
training loss: tensor(0.4342) feature loss: tensor(0.1779)
Local adapation with distilling: 0.0001
training loss: tensor(0.4934) feature loss: tensor(0.1940)
Local adapation with distilling: 0.0001
training loss: tensor(0.3824) feature loss: tensor(0.2017)
Local adapation with distilling: 0.0001
training loss: tensor(0.4999) feature loss: tensor(0.1793)
Local adapation with distilling: 0.0001
training loss: tensor(0.4179) feature loss: tensor(0.1839)
Global Model Acc on global data: 0.5399 length of data: 10000
-------------Round number:  92  -------------
selected users: [25, 99, 73, 61, 66, 36, 23, 83, 77, 6]
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([27, 32, 16, 16]) torch.Size([27])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
all data: 249
Local adapation with distilling: 0.0001
training loss: tensor(0.4312) feature loss: tensor(0.2429)
Local adapation with distilling: 0.0001
training loss: tensor(0.5235) feature loss: tensor(0.2390)
Local adapation with distilling: 0.0001
training loss: tensor(0.4788) feature loss: tensor(0.2248)
Local adapation with distilling: 0.0001
training loss: tensor(0.5458) feature loss: tensor(0.2440)
Local adapation with distilling: 0.0001
training loss: tensor(0.5314) feature loss: tensor(0.2606)
Local adapation with distilling: 0.0001
training loss: tensor(0.4251) feature loss: tensor(0.2266)
Local adapation with distilling: 0.0001
training loss: tensor(0.5479) feature loss: tensor(0.2103)
Local adapation with distilling: 0.0001
training loss: tensor(0.5388) feature loss: tensor(0.2263)
Local adapation with distilling: 0.0001
training loss: tensor(0.6115) feature loss: tensor(0.2124)
Local adapation with distilling: 0.0001
training loss: tensor(0.4523) feature loss: tensor(0.2219)
Global Model Acc on global data: 0.5342 length of data: 10000
-------------Round number:  93  -------------
selected users: [75, 82, 56, 27, 42, 35, 1, 97, 66, 61]
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([27, 32, 16, 16]) torch.Size([27])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([27, 32, 16, 16]) torch.Size([27])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
all data: 248
Local adapation with distilling: 0.0001
training loss: tensor(0.4695) feature loss: tensor(0.2299)
Local adapation with distilling: 0.0001
training loss: tensor(0.4976) feature loss: tensor(0.2378)
Local adapation with distilling: 0.0001
training loss: tensor(0.4888) feature loss: tensor(0.2659)
Local adapation with distilling: 0.0001
training loss: tensor(0.5920) feature loss: tensor(0.2368)
Local adapation with distilling: 0.0001
training loss: tensor(0.4986) feature loss: tensor(0.2315)
Local adapation with distilling: 0.0001
training loss: tensor(0.5452) feature loss: tensor(0.2785)
Local adapation with distilling: 0.0001
training loss: tensor(0.6123) feature loss: tensor(0.2507)
Local adapation with distilling: 0.0001
training loss: tensor(0.4849) feature loss: tensor(0.2273)
Local adapation with distilling: 0.0001
training loss: tensor(0.5138) feature loss: tensor(0.2645)
Local adapation with distilling: 0.0001
training loss: tensor(0.5137) feature loss: tensor(0.2646)
Global Model Acc on global data: 0.5559 length of data: 10000
-------------Round number:  94  -------------
selected users: [13, 73, 5, 18, 99, 48, 23, 4, 35, 17]
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
all data: 246
Local adapation with distilling: 0.0001
training loss: tensor(0.4699) feature loss: tensor(0.1897)
Local adapation with distilling: 0.0001
training loss: tensor(0.3556) feature loss: tensor(0.1751)
Local adapation with distilling: 0.0001
training loss: tensor(0.3555) feature loss: tensor(0.1640)
Local adapation with distilling: 0.0001
training loss: tensor(0.5162) feature loss: tensor(0.1866)
Local adapation with distilling: 0.0001
training loss: tensor(0.4157) feature loss: tensor(0.1769)
Local adapation with distilling: 0.0001
training loss: tensor(0.5092) feature loss: tensor(0.1838)
Local adapation with distilling: 0.0001
training loss: tensor(0.4157) feature loss: tensor(0.1668)
Local adapation with distilling: 0.0001
training loss: tensor(0.4310) feature loss: tensor(0.1812)
Local adapation with distilling: 0.0001
training loss: tensor(0.3880) feature loss: tensor(0.1883)
Local adapation with distilling: 0.0001
training loss: tensor(0.3570) feature loss: tensor(0.1721)
Global Model Acc on global data: 0.5546 length of data: 10000
-------------Round number:  95  -------------
selected users: [88, 9, 1, 60, 95, 26, 45, 71, 44, 21]
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
all data: 246
Local adapation with distilling: 0.0001
training loss: tensor(0.3889) feature loss: tensor(0.1864)
Local adapation with distilling: 0.0001
training loss: tensor(0.7744) feature loss: tensor(0.1900)
Local adapation with distilling: 0.0001
training loss: tensor(0.3991) feature loss: tensor(0.1945)
Local adapation with distilling: 0.0001
training loss: tensor(0.4079) feature loss: tensor(0.1879)
Local adapation with distilling: 0.0001
training loss: tensor(0.3457) feature loss: tensor(0.1872)
Local adapation with distilling: 0.0001
training loss: tensor(0.3784) feature loss: tensor(0.1822)
Local adapation with distilling: 0.0001
training loss: tensor(0.3745) feature loss: tensor(0.1900)
Local adapation with distilling: 0.0001
training loss: tensor(0.3444) feature loss: tensor(0.1912)
Local adapation with distilling: 0.0001
training loss: tensor(0.4628) feature loss: tensor(0.1683)
Local adapation with distilling: 0.0001
training loss: tensor(0.3974) feature loss: tensor(0.1832)
Global Model Acc on global data: 0.5574 length of data: 10000
-------------Round number:  96  -------------
selected users: [41, 28, 52, 15, 87, 17, 75, 42, 45, 49]
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
all data: 243
Local adapation with distilling: 0.0001
training loss: tensor(0.3498) feature loss: tensor(0.1771)
Local adapation with distilling: 0.0001
training loss: tensor(0.6642) feature loss: tensor(0.1658)
Local adapation with distilling: 0.0001
training loss: tensor(0.6314) feature loss: tensor(0.1602)
Local adapation with distilling: 0.0001
training loss: tensor(0.6559) feature loss: tensor(0.1555)
Local adapation with distilling: 0.0001
training loss: tensor(0.4422) feature loss: tensor(0.1713)
Local adapation with distilling: 0.0001
training loss: tensor(0.3309) feature loss: tensor(0.1613)
Local adapation with distilling: 0.0001
training loss: tensor(0.3344) feature loss: tensor(0.1574)
Local adapation with distilling: 0.0001
training loss: tensor(0.3611) feature loss: tensor(0.1520)
Local adapation with distilling: 0.0001
training loss: tensor(0.3322) feature loss: tensor(0.1754)
Local adapation with distilling: 0.0001
training loss: tensor(0.4066) feature loss: tensor(0.1783)
Global Model Acc on global data: 0.5589 length of data: 10000
-------------Round number:  97  -------------
selected users: [31, 43, 64, 56, 85, 2, 70, 21, 34, 50]
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([27, 32, 16, 16]) torch.Size([27])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
all data: 242
Local adapation with distilling: 0.0001
training loss: tensor(0.4332) feature loss: tensor(0.2206)
Local adapation with distilling: 0.0001
training loss: tensor(0.4320) feature loss: tensor(0.2113)
Local adapation with distilling: 0.0001
training loss: tensor(0.4790) feature loss: tensor(0.1897)
Local adapation with distilling: 0.0001
training loss: tensor(0.3935) feature loss: tensor(0.2288)
Local adapation with distilling: 0.0001
training loss: tensor(0.3771) feature loss: tensor(0.1962)
Local adapation with distilling: 0.0001
training loss: tensor(0.3993) feature loss: tensor(0.2172)
Local adapation with distilling: 0.0001
training loss: tensor(0.3986) feature loss: tensor(0.1923)
Local adapation with distilling: 0.0001
training loss: tensor(0.4011) feature loss: tensor(0.2221)
Local adapation with distilling: 0.0001
training loss: tensor(0.4264) feature loss: tensor(0.2088)
Local adapation with distilling: 0.0001
training loss: tensor(0.4615) feature loss: tensor(0.2421)
Global Model Acc on global data: 0.5513 length of data: 10000
-------------Round number:  98  -------------
selected users: [11, 48, 97, 14, 22, 36, 99, 47, 33, 81]
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
all data: 241
Local adapation with distilling: 0.0001
training loss: tensor(0.4332) feature loss: tensor(0.2159)
Local adapation with distilling: 0.0001
training loss: tensor(0.4663) feature loss: tensor(0.2037)
Local adapation with distilling: 0.0001
training loss: tensor(0.4359) feature loss: tensor(0.1949)
Local adapation with distilling: 0.0001
training loss: tensor(0.4799) feature loss: tensor(0.2215)
Local adapation with distilling: 0.0001
training loss: tensor(0.8682) feature loss: tensor(0.2207)
Local adapation with distilling: 0.0001
training loss: tensor(0.3856) feature loss: tensor(0.2067)
Local adapation with distilling: 0.0001
training loss: tensor(0.4427) feature loss: tensor(0.2080)
Local adapation with distilling: 0.0001
training loss: tensor(0.4713) feature loss: tensor(0.2061)
Local adapation with distilling: 0.0001
training loss: tensor(0.4606) feature loss: tensor(0.2019)
Local adapation with distilling: 0.0001
training loss: tensor(0.7308) feature loss: tensor(0.2242)
Global Model Acc on global data: 0.5631 length of data: 10000
-------------Round number:  99  -------------
selected users: [14, 34, 30, 78, 16, 15, 91, 38, 10, 85]
random features: torch.Size([24, 32, 16, 16]) torch.Size([24])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
random features: torch.Size([26, 32, 16, 16]) torch.Size([26])
random features: torch.Size([27, 32, 16, 16]) torch.Size([27])
random features: torch.Size([23, 32, 16, 16]) torch.Size([23])
random features: torch.Size([25, 32, 16, 16]) torch.Size([25])
all data: 248
Local adapation with distilling: 0.0001
training loss: tensor(0.3974) feature loss: tensor(0.2093)
Local adapation with distilling: 0.0001
training loss: tensor(0.3981) feature loss: tensor(0.2242)
Local adapation with distilling: 0.0001
training loss: tensor(0.4354) feature loss: tensor(0.2311)
Local adapation with distilling: 0.0001
training loss: tensor(0.4199) feature loss: tensor(0.1985)
Local adapation with distilling: 0.0001
training loss: tensor(0.4327) feature loss: tensor(0.2135)
Local adapation with distilling: 0.0001
training loss: tensor(0.4389) feature loss: tensor(0.2351)
Local adapation with distilling: 0.0001
training loss: tensor(0.4504) feature loss: tensor(0.2328)
Local adapation with distilling: 0.0001
training loss: tensor(0.3532) feature loss: tensor(0.1905)
Local adapation with distilling: 0.0001
training loss: tensor(0.4550) feature loss: tensor(0.2266)
Local adapation with distilling: 0.0001
training loss: tensor(0.3565) feature loss: tensor(0.2002)
Global Model Acc on global data: 0.5395 length of data: 10000
