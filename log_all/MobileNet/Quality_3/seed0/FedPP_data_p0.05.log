nohup: ignoring input
================================================================================
Summary of training process:
Dataset                : Cifar10
Batch size             : 64
Learing rate           : 0.001
Number of total clients: 100
Split method           : quantity
Split parameter        : 3.0
Clients per round      : 10
Number of global rounds: 100
Number of local rounds : 10
Feature from layer     : -1
Feature percentage     : 0.05
Local training loss    : CE_CE_KL
Loss of beta           : 1.0
Algorithm              : FedFea
Modelname              : MOBNET
Mode                   : training
Seed                   : 0
================================================================================
Files already downloaded and verified
Files already downloaded and verified
Class frequencies:
client,class0,class1,class2,class3,class4,class5,class6,class7,class8,class9,Amount
Client   0,0.298,0.00,0.00,0.00,0.00,0.375,0.00,0.00,0.327,0.00,496
Client   1,0.00,0.321,0.00,0.00,0.00,0.358,0.00,0.00,0.00,0.321,520
Client   2,0.307,0.346,0.346,0.00,0.00,0.00,0.00,0.00,0.00,0.00,482
Client   3,0.00,0.00,0.00,0.337,0.00,0.00,0.377,0.286,0.00,0.00,531
Client   4,0.00,0.00,0.340,0.00,0.320,0.00,0.00,0.00,0.00,0.340,491
Client   5,0.00,0.00,0.327,0.00,0.308,0.365,0.00,0.00,0.00,0.00,510
Client   6,0.00,0.00,0.319,0.00,0.300,0.00,0.382,0.00,0.00,0.00,524
Client   7,0.00,0.00,0.00,0.00,0.330,0.00,0.00,0.319,0.00,0.351,476
Client   8,0.00,0.347,0.00,0.00,0.00,0.00,0.00,0.316,0.337,0.00,481
Client   9,0.286,0.00,0.00,0.00,0.00,0.00,0.389,0.00,0.00,0.325,514
Client  10,0.315,0.00,0.00,0.00,0.00,0.00,0.00,0.326,0.00,0.358,466
Client  11,0.00,0.313,0.00,0.00,0.00,0.00,0.375,0.00,0.00,0.313,534
Client  12,0.306,0.347,0.347,0.00,0.00,0.00,0.00,0.00,0.00,0.00,481
Client  13,0.00,0.329,0.00,0.352,0.00,0.00,0.00,0.00,0.319,0.00,508
Client  14,0.00,0.00,0.00,0.359,0.315,0.00,0.00,0.00,0.325,0.00,498
Client  15,0.00,0.00,0.00,0.00,0.00,0.361,0.00,0.00,0.315,0.324,515
Client  16,0.00,0.00,0.00,0.337,0.00,0.00,0.377,0.286,0.00,0.00,531
Client  17,0.00,0.00,0.00,0.00,0.00,0.346,0.372,0.283,0.00,0.00,538
Client  18,0.00,0.337,0.00,0.00,0.00,0.00,0.00,0.00,0.327,0.337,496
Client  19,0.00,0.00,0.00,0.356,0.312,0.00,0.00,0.00,0.00,0.332,503
Client  20,0.309,0.351,0.00,0.00,0.00,0.00,0.00,0.00,0.340,0.00,476
Client  21,0.312,0.355,0.00,0.00,0.333,0.00,0.00,0.00,0.00,0.00,471
Client  22,0.00,0.00,0.326,0.349,0.00,0.00,0.00,0.00,0.00,0.326,513
Client  23,0.298,0.00,0.339,0.363,0.00,0.00,0.00,0.00,0.00,0.00,493
Client  24,0.00,0.00,0.340,0.00,0.320,0.00,0.00,0.00,0.00,0.340,491
Client  25,0.00,0.00,0.00,0.00,0.00,0.367,0.00,0.302,0.00,0.331,504
Client  26,0.00,0.00,0.00,0.00,0.00,0.00,0.378,0.00,0.306,0.316,529
Client  27,0.00,0.00,0.00,0.368,0.320,0.00,0.00,0.312,0.00,0.00,487
Client  28,0.00,0.00,0.00,0.00,0.00,0.360,0.00,0.00,0.315,0.325,514
Client  29,0.00,0.00,0.00,0.328,0.00,0.00,0.366,0.00,0.00,0.306,546
Client  30,0.309,0.00,0.352,0.00,0.00,0.00,0.00,0.00,0.339,0.00,475
Client  31,0.00,0.344,0.00,0.00,0.00,0.00,0.00,0.313,0.00,0.344,486
Client  32,0.00,0.00,0.335,0.359,0.00,0.00,0.00,0.305,0.00,0.00,498
Client  33,0.302,0.00,0.00,0.368,0.00,0.00,0.00,0.00,0.331,0.00,487
Client  34,0.00,0.352,0.00,0.00,0.328,0.00,0.00,0.320,0.00,0.00,475
Client  35,0.00,0.315,0.00,0.337,0.00,0.348,0.00,0.00,0.00,0.00,531
Client  36,0.289,0.00,0.00,0.00,0.00,0.00,0.394,0.00,0.317,0.00,508
Client  37,0.00,0.00,0.00,0.00,0.307,0.00,0.394,0.299,0.00,0.00,508
Client  38,0.00,0.00,0.00,0.00,0.00,0.339,0.366,0.00,0.295,0.00,546
Client  39,0.00,0.00,0.322,0.00,0.00,0.356,0.00,0.00,0.00,0.322,519
Client  40,0.320,0.00,0.00,0.00,0.00,0.00,0.00,0.330,0.350,0.00,460
Client  41,0.00,0.352,0.00,0.00,0.328,0.00,0.00,0.320,0.00,0.00,475
Client  42,0.00,0.00,0.352,0.00,0.328,0.00,0.00,0.320,0.00,0.00,475
Client  43,0.298,0.00,0.00,0.363,0.00,0.00,0.00,0.00,0.00,0.339,493
Client  44,0.313,0.00,0.355,0.00,0.332,0.00,0.00,0.00,0.00,0.00,470
Client  45,0.00,0.331,0.00,0.00,0.00,0.367,0.00,0.302,0.00,0.00,504
Client  46,0.00,0.00,0.00,0.00,0.00,0.00,0.385,0.293,0.00,0.322,519
Client  47,0.00,0.00,0.00,0.00,0.333,0.00,0.00,0.323,0.344,0.00,468
Client  48,0.309,0.352,0.00,0.00,0.00,0.00,0.00,0.00,0.339,0.00,475
Client  49,0.00,0.00,0.337,0.00,0.00,0.00,0.00,0.00,0.325,0.337,495
Client  50,0.298,0.339,0.00,0.363,0.00,0.00,0.00,0.00,0.00,0.00,493
Client  51,0.00,0.344,0.344,0.00,0.00,0.00,0.00,0.311,0.00,0.00,485
Client  52,0.286,0.00,0.325,0.00,0.00,0.00,0.389,0.00,0.00,0.00,514
Client  53,0.00,0.00,0.326,0.350,0.00,0.00,0.00,0.00,0.00,0.324,512
Client  54,0.00,0.00,0.319,0.00,0.298,0.00,0.382,0.00,0.00,0.00,523
Client  55,0.304,0.00,0.00,0.00,0.00,0.383,0.00,0.313,0.00,0.00,483
Client  56,0.00,0.303,0.00,0.00,0.00,0.335,0.362,0.00,0.00,0.00,552
Client  57,0.00,0.00,0.00,0.00,0.308,0.00,0.394,0.298,0.00,0.00,507
Client  58,0.289,0.00,0.00,0.00,0.00,0.00,0.394,0.00,0.317,0.00,508
Client  59,0.00,0.322,0.00,0.00,0.00,0.357,0.00,0.00,0.00,0.320,518
Client  60,0.306,0.347,0.347,0.00,0.00,0.00,0.00,0.00,0.00,0.00,481
Client  61,0.00,0.327,0.00,0.00,0.308,0.365,0.00,0.00,0.00,0.00,507
Client  62,0.316,0.00,0.359,0.00,0.00,0.00,0.00,0.325,0.00,0.00,465
Client  63,0.00,0.00,0.00,0.354,0.00,0.00,0.00,0.00,0.318,0.328,506
Client  64,0.00,0.00,0.00,0.00,0.317,0.376,0.00,0.307,0.00,0.00,492
Client  65,0.295,0.00,0.00,0.00,0.00,0.371,0.00,0.00,0.00,0.333,498
Client  66,0.00,0.00,0.00,0.327,0.00,0.00,0.368,0.00,0.00,0.305,544
Client  67,0.00,0.351,0.00,0.00,0.330,0.00,0.00,0.319,0.00,0.00,473
Client  68,0.00,0.00,0.00,0.00,0.302,0.00,0.387,0.00,0.311,0.00,517
Client  69,0.00,0.00,0.337,0.00,0.00,0.00,0.00,0.00,0.327,0.337,493
Client  70,0.304,0.00,0.00,0.00,0.00,0.383,0.00,0.313,0.00,0.00,483
Client  71,0.00,0.327,0.00,0.00,0.308,0.365,0.00,0.00,0.00,0.00,507
Client  72,0.00,0.00,0.324,0.00,0.00,0.361,0.00,0.00,0.314,0.00,512
Client  73,0.00,0.00,0.00,0.340,0.00,0.353,0.00,0.00,0.307,0.00,524
Client  74,0.00,0.344,0.00,0.00,0.323,0.00,0.00,0.00,0.333,0.00,483
Client  75,0.304,0.00,0.00,0.00,0.00,0.383,0.00,0.313,0.00,0.00,483
Client  76,0.00,0.00,0.00,0.333,0.292,0.00,0.375,0.00,0.00,0.00,534
Client  77,0.317,0.00,0.358,0.00,0.00,0.00,0.00,0.325,0.00,0.00,464
Client  78,0.00,0.00,0.00,0.340,0.00,0.353,0.00,0.00,0.307,0.00,524
Client  79,0.00,0.333,0.333,0.00,0.00,0.00,0.00,0.00,0.00,0.333,498
Client  80,0.306,0.00,0.00,0.370,0.324,0.00,0.00,0.00,0.00,0.00,481
Client  81,0.287,0.324,0.00,0.00,0.00,0.00,0.390,0.00,0.00,0.00,513
Client  82,0.317,0.00,0.358,0.00,0.00,0.00,0.00,0.325,0.00,0.00,464
Client  83,0.00,0.00,0.329,0.352,0.00,0.00,0.00,0.00,0.319,0.00,505
Client  84,0.306,0.00,0.00,0.370,0.324,0.00,0.00,0.00,0.00,0.00,481
Client  85,0.00,0.00,0.00,0.00,0.311,0.369,0.00,0.00,0.321,0.00,502
Client  86,0.00,0.00,0.312,0.00,0.00,0.00,0.376,0.00,0.00,0.312,532
Client  87,0.309,0.00,0.00,0.374,0.00,0.00,0.00,0.317,0.00,0.00,476
Client  88,0.00,0.344,0.00,0.00,0.323,0.00,0.00,0.00,0.333,0.00,483
Client  89,0.00,0.00,0.00,0.327,0.00,0.00,0.368,0.00,0.00,0.305,544
Client  90,0.309,0.00,0.00,0.374,0.00,0.00,0.00,0.317,0.00,0.00,476
Client  91,0.00,0.314,0.00,0.336,0.00,0.350,0.00,0.00,0.00,0.00,529
Client  92,0.313,0.00,0.354,0.00,0.333,0.00,0.00,0.00,0.00,0.00,469
Client  93,0.00,0.00,0.00,0.340,0.00,0.353,0.00,0.00,0.307,0.00,524
Client  94,0.00,0.00,0.00,0.00,0.308,0.00,0.394,0.298,0.00,0.00,507
Client  95,0.00,0.331,0.00,0.00,0.00,0.369,0.00,0.301,0.00,0.00,502
Client  96,0.287,0.00,0.324,0.00,0.00,0.00,0.390,0.00,0.00,0.00,513
Client  97,0.00,0.00,0.347,0.00,0.00,0.00,0.00,0.316,0.337,0.00,478
Client  98,0.00,0.344,0.00,0.00,0.323,0.00,0.00,0.00,0.333,0.00,483
Client  99,0.313,0.00,0.00,0.00,0.333,0.00,0.00,0.00,0.00,0.354,469
0 [0 5 8] [0 5 8] [1 2 3 4 6 7 9]
0 training: Counter({5: 186, 8: 162, 0: 148}) testing iid: Counter({8: 1000, 0: 1000, 5: 1000})
1 [1 5 9] [1 5 9] [0 2 3 4 6 7 8]
1 training: Counter({5: 186, 1: 167, 9: 167}) testing iid: Counter({1: 1000, 9: 1000, 5: 1000})
2 [0 1 2] [0 1 2] [3 4 5 6 7 8 9]
2 training: Counter({1: 167, 2: 167, 0: 148}) testing iid: Counter({0: 1000, 1: 1000, 2: 1000})
3 [3 6 7] [3 6 7] [0 1 2 4 5 8 9]
3 training: Counter({6: 200, 3: 179, 7: 152}) testing iid: Counter({3: 1000, 6: 1000, 7: 1000})
4 [2 4 9] [2 4 9] [0 1 3 5 6 7 8]
4 training: Counter({2: 167, 9: 167, 4: 157}) testing iid: Counter({9: 1000, 4: 1000, 2: 1000})
5 [2 4 5] [2 4 5] [0 1 3 6 7 8 9]
5 training: Counter({5: 186, 2: 167, 4: 157}) testing iid: Counter({5: 1000, 4: 1000, 2: 1000})
6 [2 4 6] [2 4 6] [0 1 3 5 7 8 9]
6 training: Counter({6: 200, 2: 167, 4: 157}) testing iid: Counter({6: 1000, 4: 1000, 2: 1000})
7 [4 7 9] [4 7 9] [0 1 2 3 5 6 8]
7 training: Counter({9: 167, 4: 157, 7: 152}) testing iid: Counter({9: 1000, 7: 1000, 4: 1000})
8 [1 7 8] [1 7 8] [0 2 3 4 5 6 9]
8 training: Counter({1: 167, 8: 162, 7: 152}) testing iid: Counter({8: 1000, 1: 1000, 7: 1000})
9 [0 6 9] [0 6 9] [1 2 3 4 5 7 8]
9 training: Counter({6: 200, 9: 167, 0: 147}) testing iid: Counter({0: 1000, 6: 1000, 9: 1000})
10 [0 7 9] [0 7 9] [1 2 3 4 5 6 8]
10 training: Counter({9: 167, 7: 152, 0: 147}) testing iid: Counter({0: 1000, 9: 1000, 7: 1000})
11 [1 6 9] [1 6 9] [0 2 3 4 5 7 8]
11 training: Counter({6: 200, 1: 167, 9: 167}) testing iid: Counter({6: 1000, 1: 1000, 9: 1000})
12 [0 1 2] [0 1 2] [3 4 5 6 7 8 9]
12 training: Counter({1: 167, 2: 167, 0: 147}) testing iid: Counter({0: 1000, 1: 1000, 2: 1000})
13 [1 3 8] [1 3 8] [0 2 4 5 6 7 9]
13 training: Counter({3: 179, 1: 167, 8: 162}) testing iid: Counter({3: 1000, 8: 1000, 1: 1000})
14 [3 4 8] [3 4 8] [0 1 2 5 6 7 9]
14 training: Counter({3: 179, 8: 162, 4: 157}) testing iid: Counter({3: 1000, 8: 1000, 4: 1000})
15 [5 8 9] [5 8 9] [0 1 2 3 4 6 7]
15 training: Counter({5: 186, 9: 167, 8: 162}) testing iid: Counter({8: 1000, 9: 1000, 5: 1000})
16 [3 6 7] [3 6 7] [0 1 2 4 5 8 9]
16 training: Counter({6: 200, 3: 179, 7: 152}) testing iid: Counter({3: 1000, 6: 1000, 7: 1000})
17 [5 6 7] [5 6 7] [0 1 2 3 4 8 9]
17 training: Counter({6: 200, 5: 186, 7: 152}) testing iid: Counter({6: 1000, 5: 1000, 7: 1000})
18 [1 8 9] [1 8 9] [0 2 3 4 5 6 7]
18 training: Counter({1: 167, 9: 167, 8: 162}) testing iid: Counter({8: 1000, 1: 1000, 9: 1000})
19 [3 4 9] [3 4 9] [0 1 2 5 6 7 8]
19 training: Counter({3: 179, 9: 167, 4: 157}) testing iid: Counter({3: 1000, 9: 1000, 4: 1000})
20 [0 1 8] [0 1 8] [2 3 4 5 6 7 9]
20 training: Counter({1: 167, 8: 162, 0: 147}) testing iid: Counter({8: 1000, 0: 1000, 1: 1000})
21 [0 1 4] [0 1 4] [2 3 5 6 7 8 9]
21 training: Counter({1: 167, 4: 157, 0: 147}) testing iid: Counter({0: 1000, 1: 1000, 4: 1000})
22 [2 3 9] [2 3 9] [0 1 4 5 6 7 8]
22 training: Counter({3: 179, 2: 167, 9: 167}) testing iid: Counter({3: 1000, 9: 1000, 2: 1000})
23 [0 2 3] [0 2 3] [1 4 5 6 7 8 9]
23 training: Counter({3: 179, 2: 167, 0: 147}) testing iid: Counter({3: 1000, 0: 1000, 2: 1000})
24 [2 4 9] [2 4 9] [0 1 3 5 6 7 8]
24 training: Counter({2: 167, 9: 167, 4: 157}) testing iid: Counter({9: 1000, 4: 1000, 2: 1000})
25 [5 7 9] [5 7 9] [0 1 2 3 4 6 8]
25 training: Counter({5: 185, 9: 167, 7: 152}) testing iid: Counter({9: 1000, 5: 1000, 7: 1000})
26 [6 8 9] [6 8 9] [0 1 2 3 4 5 7]
26 training: Counter({6: 200, 9: 167, 8: 162}) testing iid: Counter({8: 1000, 6: 1000, 9: 1000})
27 [3 4 7] [3 4 7] [0 1 2 5 6 8 9]
27 training: Counter({3: 179, 4: 156, 7: 152}) testing iid: Counter({3: 1000, 7: 1000, 4: 1000})
28 [5 8 9] [5 8 9] [0 1 2 3 4 6 7]
28 training: Counter({5: 185, 9: 167, 8: 162}) testing iid: Counter({8: 1000, 9: 1000, 5: 1000})
29 [3 6 9] [3 6 9] [0 1 2 4 5 7 8]
29 training: Counter({6: 200, 3: 179, 9: 167}) testing iid: Counter({3: 1000, 6: 1000, 9: 1000})
30 [0 2 8] [0 2 8] [1 3 4 5 6 7 9]
30 training: Counter({2: 167, 8: 161, 0: 147}) testing iid: Counter({8: 1000, 0: 1000, 2: 1000})
31 [1 7 9] [1 7 9] [0 2 3 4 5 6 8]
31 training: Counter({1: 167, 9: 167, 7: 152}) testing iid: Counter({1: 1000, 9: 1000, 7: 1000})
32 [2 3 7] [2 3 7] [0 1 4 5 6 8 9]
32 training: Counter({3: 179, 2: 167, 7: 152}) testing iid: Counter({3: 1000, 7: 1000, 2: 1000})
33 [0 3 8] [0 3 8] [1 2 4 5 6 7 9]
33 training: Counter({3: 179, 8: 161, 0: 147}) testing iid: Counter({3: 1000, 8: 1000, 0: 1000})
34 [1 4 7] [1 4 7] [0 2 3 5 6 8 9]
34 training: Counter({1: 167, 4: 156, 7: 152}) testing iid: Counter({1: 1000, 7: 1000, 4: 1000})
35 [1 3 5] [1 3 5] [0 2 4 6 7 8 9]
35 training: Counter({5: 185, 3: 179, 1: 167}) testing iid: Counter({3: 1000, 1: 1000, 5: 1000})
36 [0 6 8] [0 6 8] [1 2 3 4 5 7 9]
36 training: Counter({6: 200, 8: 161, 0: 147}) testing iid: Counter({8: 1000, 0: 1000, 6: 1000})
37 [4 6 7] [4 6 7] [0 1 2 3 5 8 9]
37 training: Counter({6: 200, 4: 156, 7: 152}) testing iid: Counter({6: 1000, 7: 1000, 4: 1000})
38 [5 6 8] [5 6 8] [0 1 2 3 4 7 9]
38 training: Counter({6: 200, 5: 185, 8: 161}) testing iid: Counter({8: 1000, 6: 1000, 5: 1000})
39 [2 5 9] [2 5 9] [0 1 3 4 6 7 8]
39 training: Counter({5: 185, 2: 167, 9: 167}) testing iid: Counter({9: 1000, 5: 1000, 2: 1000})
40 [0 7 8] [0 7 8] [1 2 3 4 5 6 9]
40 training: Counter({8: 161, 7: 152, 0: 147}) testing iid: Counter({8: 1000, 0: 1000, 7: 1000})
41 [1 4 7] [1 4 7] [0 2 3 5 6 8 9]
41 training: Counter({1: 167, 4: 156, 7: 152}) testing iid: Counter({1: 1000, 7: 1000, 4: 1000})
42 [2 4 7] [2 4 7] [0 1 3 5 6 8 9]
42 training: Counter({2: 167, 4: 156, 7: 152}) testing iid: Counter({7: 1000, 4: 1000, 2: 1000})
43 [0 3 9] [0 3 9] [1 2 4 5 6 7 8]
43 training: Counter({3: 179, 9: 167, 0: 147}) testing iid: Counter({3: 1000, 0: 1000, 9: 1000})
44 [0 2 4] [0 2 4] [1 3 5 6 7 8 9]
44 training: Counter({2: 167, 4: 156, 0: 147}) testing iid: Counter({0: 1000, 4: 1000, 2: 1000})
45 [1 5 7] [1 5 7] [0 2 3 4 6 8 9]
45 training: Counter({5: 185, 1: 167, 7: 152}) testing iid: Counter({1: 1000, 5: 1000, 7: 1000})
46 [6 7 9] [6 7 9] [0 1 2 3 4 5 8]
46 training: Counter({6: 200, 9: 167, 7: 152}) testing iid: Counter({6: 1000, 9: 1000, 7: 1000})
47 [4 7 8] [4 7 8] [0 1 2 3 5 6 9]
47 training: Counter({8: 161, 4: 156, 7: 151}) testing iid: Counter({8: 1000, 7: 1000, 4: 1000})
48 [0 1 8] [0 1 8] [2 3 4 5 6 7 9]
48 training: Counter({1: 167, 8: 161, 0: 147}) testing iid: Counter({8: 1000, 0: 1000, 1: 1000})
49 [2 8 9] [2 8 9] [0 1 3 4 5 6 7]
49 training: Counter({2: 167, 9: 167, 8: 161}) testing iid: Counter({8: 1000, 9: 1000, 2: 1000})
50 [0 1 3] [0 1 3] [2 4 5 6 7 8 9]
50 training: Counter({3: 179, 1: 167, 0: 147}) testing iid: Counter({3: 1000, 0: 1000, 1: 1000})
51 [1 2 7] [1 2 7] [0 3 4 5 6 8 9]
51 training: Counter({1: 167, 2: 167, 7: 151}) testing iid: Counter({1: 1000, 7: 1000, 2: 1000})
52 [0 2 6] [0 2 6] [1 3 4 5 7 8 9]
52 training: Counter({6: 200, 2: 167, 0: 147}) testing iid: Counter({0: 1000, 6: 1000, 2: 1000})
53 [2 3 9] [2 3 9] [0 1 4 5 6 7 8]
53 training: Counter({3: 179, 2: 167, 9: 166}) testing iid: Counter({3: 1000, 9: 1000, 2: 1000})
54 [2 4 6] [2 4 6] [0 1 3 5 7 8 9]
54 training: Counter({6: 200, 2: 167, 4: 156}) testing iid: Counter({6: 1000, 4: 1000, 2: 1000})
55 [0 5 7] [0 5 7] [1 2 3 4 6 8 9]
55 training: Counter({5: 185, 7: 151, 0: 147}) testing iid: Counter({0: 1000, 5: 1000, 7: 1000})
56 [1 5 6] [1 5 6] [0 2 3 4 7 8 9]
56 training: Counter({6: 200, 5: 185, 1: 167}) testing iid: Counter({6: 1000, 1: 1000, 5: 1000})
57 [4 6 7] [4 6 7] [0 1 2 3 5 8 9]
57 training: Counter({6: 200, 4: 156, 7: 151}) testing iid: Counter({6: 1000, 7: 1000, 4: 1000})
58 [0 6 8] [0 6 8] [1 2 3 4 5 7 9]
58 training: Counter({6: 200, 8: 161, 0: 147}) testing iid: Counter({8: 1000, 0: 1000, 6: 1000})
59 [1 5 9] [1 5 9] [0 2 3 4 6 7 8]
59 training: Counter({5: 185, 1: 167, 9: 166}) testing iid: Counter({1: 1000, 9: 1000, 5: 1000})
60 [0 1 2] [0 1 2] [3 4 5 6 7 8 9]
60 training: Counter({1: 167, 2: 167, 0: 147}) testing iid: Counter({0: 1000, 1: 1000, 2: 1000})
61 [1 4 5] [1 4 5] [0 2 3 6 7 8 9]
61 training: Counter({5: 185, 1: 166, 4: 156}) testing iid: Counter({1: 1000, 5: 1000, 4: 1000})
62 [0 2 7] [0 2 7] [1 3 4 5 6 8 9]
62 training: Counter({2: 167, 7: 151, 0: 147}) testing iid: Counter({0: 1000, 7: 1000, 2: 1000})
63 [3 8 9] [3 8 9] [0 1 2 4 5 6 7]
63 training: Counter({3: 179, 9: 166, 8: 161}) testing iid: Counter({3: 1000, 8: 1000, 9: 1000})
64 [4 5 7] [4 5 7] [0 1 2 3 6 8 9]
64 training: Counter({5: 185, 4: 156, 7: 151}) testing iid: Counter({5: 1000, 7: 1000, 4: 1000})
65 [0 5 9] [0 5 9] [1 2 3 4 6 7 8]
65 training: Counter({5: 185, 9: 166, 0: 147}) testing iid: Counter({0: 1000, 9: 1000, 5: 1000})
66 [3 6 9] [3 6 9] [0 1 2 4 5 7 8]
66 training: Counter({6: 200, 3: 178, 9: 166}) testing iid: Counter({3: 1000, 6: 1000, 9: 1000})
67 [1 4 7] [1 4 7] [0 2 3 5 6 8 9]
67 training: Counter({1: 166, 4: 156, 7: 151}) testing iid: Counter({1: 1000, 7: 1000, 4: 1000})
68 [4 6 8] [4 6 8] [0 1 2 3 5 7 9]
68 training: Counter({6: 200, 8: 161, 4: 156}) testing iid: Counter({8: 1000, 6: 1000, 4: 1000})
69 [2 8 9] [2 8 9] [0 1 3 4 5 6 7]
69 training: Counter({2: 166, 9: 166, 8: 161}) testing iid: Counter({8: 1000, 9: 1000, 2: 1000})
70 [0 5 7] [0 5 7] [1 2 3 4 6 8 9]
70 training: Counter({5: 185, 7: 151, 0: 147}) testing iid: Counter({0: 1000, 5: 1000, 7: 1000})
71 [1 4 5] [1 4 5] [0 2 3 6 7 8 9]
71 training: Counter({5: 185, 1: 166, 4: 156}) testing iid: Counter({1: 1000, 5: 1000, 4: 1000})
72 [2 5 8] [2 5 8] [0 1 3 4 6 7 9]
72 training: Counter({5: 185, 2: 166, 8: 161}) testing iid: Counter({8: 1000, 5: 1000, 2: 1000})
73 [3 5 8] [3 5 8] [0 1 2 4 6 7 9]
73 training: Counter({5: 185, 3: 178, 8: 161}) testing iid: Counter({3: 1000, 8: 1000, 5: 1000})
74 [1 4 8] [1 4 8] [0 2 3 5 6 7 9]
74 training: Counter({1: 166, 8: 161, 4: 156}) testing iid: Counter({8: 1000, 1: 1000, 4: 1000})
75 [0 5 7] [0 5 7] [1 2 3 4 6 8 9]
75 training: Counter({5: 185, 7: 151, 0: 147}) testing iid: Counter({0: 1000, 5: 1000, 7: 1000})
76 [3 4 6] [3 4 6] [0 1 2 5 7 8 9]
76 training: Counter({6: 200, 3: 178, 4: 156}) testing iid: Counter({3: 1000, 6: 1000, 4: 1000})
77 [0 2 7] [0 2 7] [1 3 4 5 6 8 9]
77 training: Counter({2: 166, 7: 151, 0: 147}) testing iid: Counter({0: 1000, 7: 1000, 2: 1000})
78 [3 5 8] [3 5 8] [0 1 2 4 6 7 9]
78 training: Counter({5: 185, 3: 178, 8: 161}) testing iid: Counter({3: 1000, 8: 1000, 5: 1000})
79 [1 2 9] [1 2 9] [0 3 4 5 6 7 8]
79 training: Counter({1: 166, 2: 166, 9: 166}) testing iid: Counter({1: 1000, 9: 1000, 2: 1000})
80 [0 3 4] [0 3 4] [1 2 5 6 7 8 9]
80 training: Counter({3: 178, 4: 156, 0: 147}) testing iid: Counter({3: 1000, 0: 1000, 4: 1000})
81 [0 1 6] [0 1 6] [2 3 4 5 7 8 9]
81 training: Counter({6: 200, 1: 166, 0: 147}) testing iid: Counter({0: 1000, 6: 1000, 1: 1000})
82 [0 2 7] [0 2 7] [1 3 4 5 6 8 9]
82 training: Counter({2: 166, 7: 151, 0: 147}) testing iid: Counter({0: 1000, 7: 1000, 2: 1000})
83 [2 3 8] [2 3 8] [0 1 4 5 6 7 9]
83 training: Counter({3: 178, 2: 166, 8: 161}) testing iid: Counter({3: 1000, 8: 1000, 2: 1000})
84 [0 3 4] [0 3 4] [1 2 5 6 7 8 9]
84 training: Counter({3: 178, 4: 156, 0: 147}) testing iid: Counter({3: 1000, 0: 1000, 4: 1000})
85 [4 5 8] [4 5 8] [0 1 2 3 6 7 9]
85 training: Counter({5: 185, 8: 161, 4: 156}) testing iid: Counter({8: 1000, 5: 1000, 4: 1000})
86 [2 6 9] [2 6 9] [0 1 3 4 5 7 8]
86 training: Counter({6: 200, 2: 166, 9: 166}) testing iid: Counter({6: 1000, 9: 1000, 2: 1000})
87 [0 3 7] [0 3 7] [1 2 4 5 6 8 9]
87 training: Counter({3: 178, 7: 151, 0: 147}) testing iid: Counter({3: 1000, 0: 1000, 7: 1000})
88 [1 4 8] [1 4 8] [0 2 3 5 6 7 9]
88 training: Counter({1: 166, 8: 161, 4: 156}) testing iid: Counter({8: 1000, 1: 1000, 4: 1000})
89 [3 6 9] [3 6 9] [0 1 2 4 5 7 8]
89 training: Counter({6: 200, 3: 178, 9: 166}) testing iid: Counter({3: 1000, 6: 1000, 9: 1000})
90 [0 3 7] [0 3 7] [1 2 4 5 6 8 9]
90 training: Counter({3: 178, 7: 151, 0: 147}) testing iid: Counter({3: 1000, 0: 1000, 7: 1000})
91 [1 3 5] [1 3 5] [0 2 4 6 7 8 9]
91 training: Counter({5: 185, 3: 178, 1: 166}) testing iid: Counter({3: 1000, 1: 1000, 5: 1000})
92 [0 2 4] [0 2 4] [1 3 5 6 7 8 9]
92 training: Counter({2: 166, 4: 156, 0: 147}) testing iid: Counter({0: 1000, 4: 1000, 2: 1000})
93 [3 5 8] [3 5 8] [0 1 2 4 6 7 9]
93 training: Counter({5: 185, 3: 178, 8: 161}) testing iid: Counter({3: 1000, 8: 1000, 5: 1000})
94 [4 6 7] [4 6 7] [0 1 2 3 5 8 9]
94 training: Counter({6: 200, 4: 156, 7: 151}) testing iid: Counter({6: 1000, 7: 1000, 4: 1000})
95 [1 5 7] [1 5 7] [0 2 3 4 6 8 9]
95 training: Counter({5: 185, 1: 166, 7: 151}) testing iid: Counter({1: 1000, 5: 1000, 7: 1000})
96 [0 2 6] [0 2 6] [1 3 4 5 7 8 9]
96 training: Counter({6: 200, 2: 166, 0: 147}) testing iid: Counter({0: 1000, 6: 1000, 2: 1000})
97 [2 7 8] [2 7 8] [0 1 3 4 5 6 9]
97 training: Counter({2: 166, 8: 161, 7: 151}) testing iid: Counter({8: 1000, 7: 1000, 2: 1000})
98 [1 4 8] [1 4 8] [0 2 3 5 6 7 9]
98 training: Counter({1: 166, 8: 161, 4: 156}) testing iid: Counter({8: 1000, 1: 1000, 4: 1000})
99 [0 4 9] [0 4 9] [1 2 3 5 6 7 8]
99 training: Counter({9: 166, 4: 156, 0: 147}) testing iid: Counter({0: 1000, 9: 1000, 4: 1000})
Num_samples of Training set per client: [496, 520, 482, 531, 491, 510, 524, 476, 481, 514, 466, 534, 481, 508, 498, 515, 531, 538, 496, 503, 476, 471, 513, 493, 491, 504, 529, 487, 514, 546, 475, 486, 498, 487, 475, 531, 508, 508, 546, 519, 460, 475, 475, 493, 470, 504, 519, 468, 475, 495, 493, 485, 514, 512, 523, 483, 552, 507, 508, 518, 481, 507, 465, 506, 492, 498, 544, 473, 517, 493, 483, 507, 512, 524, 483, 483, 534, 464, 524, 498, 481, 513, 464, 505, 481, 502, 532, 476, 483, 544, 476, 529, 469, 524, 507, 502, 513, 478, 483, 469]
Total_training_samples: 50000
Global test set: 10000
Finish Generating Samples, distribution saved
MobileNetV2(
  (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (layers): Sequential(
    (0): Block(
      (conv1): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): Block(
      (conv1): Conv2d(16, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=96, bias=False)
      (bn2): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(96, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(16, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (2): Block(
      (conv1): Conv2d(24, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=144, bias=False)
      (bn2): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(144, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (3): Block(
      (conv1): Conv2d(24, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(144, 144, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=144, bias=False)
      (bn2): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(144, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (4): Block(
      (conv1): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
      (bn2): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(192, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (5): Block(
      (conv1): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
      (bn2): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(192, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (6): Block(
      (conv1): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(192, 192, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=192, bias=False)
      (bn2): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(192, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (7): Block(
      (conv1): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
      (bn2): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (8): Block(
      (conv1): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
      (bn2): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (9): Block(
      (conv1): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
      (bn2): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (10): Block(
      (conv1): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
      (bn2): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(384, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(64, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (11): Block(
      (conv1): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)
      (bn2): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (12): Block(
      (conv1): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)
      (bn2): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (13): Block(
      (conv1): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(576, 576, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=576, bias=False)
      (bn2): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(576, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (14): Block(
      (conv1): Conv2d(160, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(960, 960, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=960, bias=False)
      (bn2): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(960, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (15): Block(
      (conv1): Conv2d(160, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(960, 960, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=960, bias=False)
      (bn2): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(960, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (16): Block(
      (conv1): Conv2d(160, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(960, 960, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=960, bias=False)
      (bn2): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(960, 320, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(160, 320, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (conv2): Conv2d(320, 1280, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn2): BatchNorm2d(1280, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (linear): Linear(in_features=1280, out_features=10, bias=True)
)
number of parameters: 2296922
clients initializting...
output size: 10
  0%|          | 0/100 [00:00<?, ?it/s]  1%|          | 1/100 [00:00<01:00,  1.64it/s]  2%|▏         | 2/100 [00:01<00:59,  1.65it/s]  3%|▎         | 3/100 [00:01<00:58,  1.66it/s]  4%|▍         | 4/100 [00:02<00:57,  1.66it/s]  5%|▌         | 5/100 [00:03<00:57,  1.66it/s]  6%|▌         | 6/100 [00:03<00:56,  1.65it/s]  7%|▋         | 7/100 [00:04<00:56,  1.63it/s]  8%|▊         | 8/100 [00:04<00:56,  1.64it/s]  9%|▉         | 9/100 [00:05<00:55,  1.64it/s] 10%|█         | 10/100 [00:06<00:54,  1.65it/s] 11%|█         | 11/100 [00:06<00:54,  1.64it/s] 12%|█▏        | 12/100 [00:07<00:53,  1.64it/s] 13%|█▎        | 13/100 [00:07<00:51,  1.67it/s] 14%|█▍        | 14/100 [00:08<00:51,  1.67it/s] 15%|█▌        | 15/100 [00:09<00:50,  1.67it/s] 16%|█▌        | 16/100 [00:09<00:50,  1.67it/s] 17%|█▋        | 17/100 [00:10<00:49,  1.67it/s] 18%|█▊        | 18/100 [00:10<00:49,  1.66it/s] 19%|█▉        | 19/100 [00:11<00:48,  1.66it/s] 20%|██        | 20/100 [00:12<00:48,  1.65it/s] 21%|██        | 21/100 [00:12<00:48,  1.65it/s] 22%|██▏       | 22/100 [00:13<00:47,  1.64it/s] 23%|██▎       | 23/100 [00:13<00:47,  1.63it/s] 24%|██▍       | 24/100 [00:14<00:46,  1.65it/s] 25%|██▌       | 25/100 [00:15<00:45,  1.66it/s] 26%|██▌       | 26/100 [00:15<00:44,  1.66it/s] 27%|██▋       | 27/100 [00:16<00:43,  1.67it/s] 28%|██▊       | 28/100 [00:16<00:43,  1.66it/s] 29%|██▉       | 29/100 [00:17<00:41,  1.69it/s] 30%|███       | 30/100 [00:18<00:40,  1.71it/s] 31%|███       | 31/100 [00:18<00:40,  1.72it/s] 32%|███▏      | 32/100 [00:19<00:39,  1.70it/s] 33%|███▎      | 33/100 [00:19<00:39,  1.69it/s] 34%|███▍      | 34/100 [00:20<00:39,  1.68it/s] 35%|███▌      | 35/100 [00:24<01:41,  1.57s/it] 36%|███▌      | 36/100 [00:24<01:21,  1.27s/it] 37%|███▋      | 37/100 [00:25<01:07,  1.07s/it] 38%|███▊      | 38/100 [00:26<00:57,  1.07it/s] 39%|███▉      | 39/100 [00:26<00:50,  1.20it/s] 40%|████      | 40/100 [00:27<00:45,  1.32it/s] 41%|████      | 41/100 [00:27<00:41,  1.40it/s] 42%|████▏     | 42/100 [00:28<00:39,  1.48it/s] 43%|████▎     | 43/100 [00:29<00:37,  1.51it/s] 44%|████▍     | 44/100 [00:29<00:35,  1.57it/s] 45%|████▌     | 45/100 [00:30<00:34,  1.61it/s] 46%|████▌     | 46/100 [00:30<00:33,  1.63it/s] 47%|████▋     | 47/100 [00:31<00:32,  1.64it/s] 48%|████▊     | 48/100 [00:32<00:31,  1.64it/s] 49%|████▉     | 49/100 [00:32<00:30,  1.66it/s] 50%|█████     | 50/100 [00:33<00:29,  1.67it/s] 51%|█████     | 51/100 [00:33<00:29,  1.69it/s] 52%|█████▏    | 52/100 [00:34<00:28,  1.70it/s] 53%|█████▎    | 53/100 [00:34<00:27,  1.70it/s] 54%|█████▍    | 54/100 [00:35<00:26,  1.71it/s] 55%|█████▌    | 55/100 [00:36<00:26,  1.70it/s] 56%|█████▌    | 56/100 [00:36<00:25,  1.72it/s] 57%|█████▋    | 57/100 [00:37<00:25,  1.70it/s] 58%|█████▊    | 58/100 [00:37<00:24,  1.70it/s] 59%|█████▉    | 59/100 [00:38<00:23,  1.72it/s] 60%|██████    | 60/100 [00:39<00:23,  1.72it/s] 61%|██████    | 61/100 [00:39<00:22,  1.72it/s] 62%|██████▏   | 62/100 [00:40<00:22,  1.72it/s] 63%|██████▎   | 63/100 [00:40<00:21,  1.70it/s] 64%|██████▍   | 64/100 [00:41<00:21,  1.71it/s] 65%|██████▌   | 65/100 [00:42<00:20,  1.68it/s] 66%|██████▌   | 66/100 [00:42<00:20,  1.66it/s] 67%|██████▋   | 67/100 [00:43<00:19,  1.68it/s] 68%|██████▊   | 68/100 [00:43<00:19,  1.67it/s] 69%|██████▉   | 69/100 [00:44<00:18,  1.67it/s] 70%|███████   | 70/100 [00:44<00:17,  1.68it/s] 71%|███████   | 71/100 [00:45<00:17,  1.68it/s] 72%|███████▏  | 72/100 [00:49<00:44,  1.58s/it] 73%|███████▎  | 73/100 [00:50<00:34,  1.29s/it] 74%|███████▍  | 74/100 [00:50<00:28,  1.08s/it] 75%|███████▌  | 75/100 [00:51<00:23,  1.06it/s] 76%|███████▌  | 76/100 [00:51<00:20,  1.18it/s] 77%|███████▋  | 77/100 [00:52<00:17,  1.29it/s] 78%|███████▊  | 78/100 [00:53<00:15,  1.38it/s] 79%|███████▉  | 79/100 [00:53<00:14,  1.45it/s] 80%|████████  | 80/100 [00:54<00:13,  1.52it/s] 81%|████████  | 81/100 [00:54<00:12,  1.56it/s] 82%|████████▏ | 82/100 [00:55<00:11,  1.58it/s] 83%|████████▎ | 83/100 [00:56<00:10,  1.60it/s] 84%|████████▍ | 84/100 [00:56<00:10,  1.60it/s] 85%|████████▌ | 85/100 [00:57<00:09,  1.61it/s] 86%|████████▌ | 86/100 [00:57<00:08,  1.62it/s] 87%|████████▋ | 87/100 [00:58<00:07,  1.63it/s] 88%|████████▊ | 88/100 [00:59<00:07,  1.64it/s] 89%|████████▉ | 89/100 [00:59<00:06,  1.65it/s] 90%|█████████ | 90/100 [01:00<00:06,  1.66it/s] 91%|█████████ | 91/100 [01:00<00:05,  1.67it/s] 92%|█████████▏| 92/100 [01:01<00:04,  1.66it/s] 93%|█████████▎| 93/100 [01:02<00:04,  1.66it/s] 94%|█████████▍| 94/100 [01:02<00:03,  1.65it/s] 95%|█████████▌| 95/100 [01:03<00:03,  1.65it/s] 96%|█████████▌| 96/100 [01:04<00:02,  1.66it/s] 97%|█████████▋| 97/100 [01:04<00:01,  1.65it/s] 98%|█████████▊| 98/100 [01:05<00:01,  1.68it/s] 99%|█████████▉| 99/100 [01:05<00:00,  1.68it/s]100%|██████████| 100/100 [01:06<00:00,  1.68it/s]100%|██████████| 100/100 [01:06<00:00,  1.51it/s]
Number of users per round / total users: 10  /  100
Finished creating FL server.
=== Training starts: algorithm FedFea ===
-------------Round number:  0  -------------
selected users: [26, 86, 2, 55, 75, 93, 16, 73, 54, 95]
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
all data: 253
Local adapation with distilling: 0.001
training loss: tensor(2.2913) feature loss: tensor(0.6135)
Local adapation with distilling: 0.001
training loss: tensor(2.3490) feature loss: tensor(0.6335)
Local adapation with distilling: 0.001
training loss: tensor(2.3521) feature loss: tensor(0.6151)
Local adapation with distilling: 0.001
training loss: tensor(2.2978) feature loss: tensor(0.6199)
Local adapation with distilling: 0.001
training loss: tensor(2.2812) feature loss: tensor(0.6164)
Local adapation with distilling: 0.001
training loss: tensor(2.3316) feature loss: tensor(0.6198)
Local adapation with distilling: 0.001
training loss: tensor(2.2967) feature loss: tensor(0.6259)
Local adapation with distilling: 0.001
training loss: tensor(2.2758) feature loss: tensor(0.6340)
Local adapation with distilling: 0.001
training loss: tensor(2.4677) feature loss: tensor(0.6202)
Local adapation with distilling: 0.001
training loss: tensor(2.2900) feature loss: tensor(0.6278)
Global Model Acc on global data: 0.1034 length of data: 10000
save a model
-------------Round number:  1  -------------
selected users: [80, 84, 33, 81, 93, 17, 36, 82, 69, 65]
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
all data: 245
Local adapation with distilling: 0.000982
training loss: tensor(1.8133) feature loss: tensor(0.7553)
Local adapation with distilling: 0.000982
training loss: tensor(1.8125) feature loss: tensor(0.7451)
Local adapation with distilling: 0.000982
training loss: tensor(1.7217) feature loss: tensor(0.7397)
Local adapation with distilling: 0.000982
training loss: tensor(1.9414) feature loss: tensor(0.7492)
Local adapation with distilling: 0.000982
training loss: tensor(1.7374) feature loss: tensor(0.6580)
Local adapation with distilling: 0.000982
training loss: tensor(1.7149) feature loss: tensor(0.6322)
Local adapation with distilling: 0.000982
training loss: tensor(1.7609) feature loss: tensor(0.7517)
Local adapation with distilling: 0.000982
training loss: tensor(1.8614) feature loss: tensor(0.7499)
Local adapation with distilling: 0.000982
training loss: tensor(1.8095) feature loss: tensor(0.7493)
Local adapation with distilling: 0.000982
training loss: tensor(1.6849) feature loss: tensor(0.7392)
Global Model Acc on global data: 0.2088 length of data: 10000
save a model
-------------Round number:  2  -------------
selected users: [83, 30, 56, 24, 16, 23, 2, 27, 28, 13]
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([27, 3, 32, 32]) torch.Size([27])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
all data: 247
Local adapation with distilling: 0.000964
training loss: tensor(1.3758) feature loss: tensor(0.6549)
Local adapation with distilling: 0.000964
training loss: tensor(1.4515) feature loss: tensor(0.6711)
Local adapation with distilling: 0.000964
training loss: tensor(1.3636) feature loss: tensor(0.6029)
Local adapation with distilling: 0.000964
training loss: tensor(1.5381) feature loss: tensor(0.6645)
Local adapation with distilling: 0.000964
training loss: tensor(1.4200) feature loss: tensor(0.5887)
Local adapation with distilling: 0.000964
training loss: tensor(1.4261) feature loss: tensor(0.6633)
Local adapation with distilling: 0.000964
training loss: tensor(1.4534) feature loss: tensor(0.7073)
Local adapation with distilling: 0.000964
training loss: tensor(1.5239) feature loss: tensor(0.6230)
Local adapation with distilling: 0.000964
training loss: tensor(1.5872) feature loss: tensor(0.6513)
Local adapation with distilling: 0.000964
training loss: tensor(1.4167) feature loss: tensor(0.6857)
Global Model Acc on global data: 0.2263 length of data: 10000
save a model
-------------Round number:  3  -------------
selected users: [93, 67, 6, 64, 96, 83, 98, 42, 25, 15]
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
all data: 246
Local adapation with distilling: 0.000946
training loss: tensor(1.2427) feature loss: tensor(0.6256)
Local adapation with distilling: 0.000946
training loss: tensor(1.2945) feature loss: tensor(0.6609)
Local adapation with distilling: 0.000946
training loss: tensor(1.3061) feature loss: tensor(0.5540)
Local adapation with distilling: 0.000946
training loss: tensor(1.2950) feature loss: tensor(0.6211)
Local adapation with distilling: 0.000946
training loss: tensor(1.4255) feature loss: tensor(0.5971)
Local adapation with distilling: 0.000946
training loss: tensor(1.1714) feature loss: tensor(0.5928)
Local adapation with distilling: 0.000946
training loss: tensor(1.2650) feature loss: tensor(0.6494)
Local adapation with distilling: 0.000946
training loss: tensor(1.2713) feature loss: tensor(0.5852)
Local adapation with distilling: 0.000946
training loss: tensor(1.2682) feature loss: tensor(0.6172)
Local adapation with distilling: 0.000946
training loss: tensor(1.3877) feature loss: tensor(0.6386)
Global Model Acc on global data: 0.2477 length of data: 10000
save a model
-------------Round number:  4  -------------
selected users: [20, 10, 96, 16, 63, 24, 53, 97, 41, 47]
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([28, 3, 32, 32]) torch.Size([28])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
all data: 243
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.3221) feature loss: tensor(0.6460)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.2679) feature loss: tensor(0.6662)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.4254) feature loss: tensor(0.6358)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.1002) feature loss: tensor(0.5465)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.1762) feature loss: tensor(0.6434)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.1269) feature loss: tensor(0.5695)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.1064) feature loss: tensor(0.5914)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.1184) feature loss: tensor(0.5898)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.2103) feature loss: tensor(0.6034)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.1232) feature loss: tensor(0.6081)
Global Model Acc on global data: 0.2728 length of data: 10000
save a model
-------------Round number:  5  -------------
selected users: [66, 32, 46, 28, 74, 23, 10, 20, 17, 35]
random features: torch.Size([27, 3, 32, 32]) torch.Size([27])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
all data: 247
Local adapation with distilling: 0.00091
training loss: tensor(1.0670) feature loss: tensor(0.6115)
Local adapation with distilling: 0.00091
training loss: tensor(1.0915) feature loss: tensor(0.5967)
Local adapation with distilling: 0.00091
training loss: tensor(1.1163) feature loss: tensor(0.5830)
Local adapation with distilling: 0.00091
training loss: tensor(1.2975) feature loss: tensor(0.5891)
Local adapation with distilling: 0.00091
training loss: tensor(1.1152) feature loss: tensor(0.5786)
Local adapation with distilling: 0.00091
training loss: tensor(1.1029) feature loss: tensor(0.6391)
Local adapation with distilling: 0.00091
training loss: tensor(1.0918) feature loss: tensor(0.5981)
Local adapation with distilling: 0.00091
training loss: tensor(1.1777) feature loss: tensor(0.6306)
Local adapation with distilling: 0.00091
training loss: tensor(1.0837) feature loss: tensor(0.5720)
Local adapation with distilling: 0.00091
training loss: tensor(1.1376) feature loss: tensor(0.6393)
Global Model Acc on global data: 0.3486 length of data: 10000
save a model
-------------Round number:  6  -------------
selected users: [17, 34, 0, 45, 60, 86, 20, 47, 44, 81]
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
all data: 242
Local adapation with distilling: 0.000892
training loss: tensor(0.9162) feature loss: tensor(0.5084)
Local adapation with distilling: 0.000892
training loss: tensor(0.9967) feature loss: tensor(0.5696)
Local adapation with distilling: 0.000892
training loss: tensor(1.0289) feature loss: tensor(0.6017)
Local adapation with distilling: 0.000892
training loss: tensor(0.9715) feature loss: tensor(0.5742)
Local adapation with distilling: 0.000892
training loss: tensor(1.0334) feature loss: tensor(0.5854)
Local adapation with distilling: 0.000892
training loss: tensor(0.9244) feature loss: tensor(0.4871)
Local adapation with distilling: 0.000892
training loss: tensor(1.0396) feature loss: tensor(0.5819)
Local adapation with distilling: 0.000892
training loss: tensor(0.8903) feature loss: tensor(0.5275)
Local adapation with distilling: 0.000892
training loss: tensor(1.0496) feature loss: tensor(0.5768)
Local adapation with distilling: 0.000892
training loss: tensor(1.4123) feature loss: tensor(0.5878)
Global Model Acc on global data: 0.381 length of data: 10000
save a model
-------------Round number:  7  -------------
selected users: [37, 26, 78, 91, 49, 15, 93, 71, 86, 22]
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
all data: 254
Local adapation with distilling: 0.000874
training loss: tensor(0.9786) feature loss: tensor(0.4804)
Local adapation with distilling: 0.000874
training loss: tensor(0.9416) feature loss: tensor(0.5732)
Local adapation with distilling: 0.000874
training loss: tensor(1.0108) feature loss: tensor(0.6393)
Local adapation with distilling: 0.000874
training loss: tensor(0.9736) feature loss: tensor(0.5415)
Local adapation with distilling: 0.000874
training loss: tensor(1.0035) feature loss: tensor(0.5617)
Local adapation with distilling: 0.000874
training loss: tensor(1.0143) feature loss: tensor(0.6270)
Local adapation with distilling: 0.000874
training loss: tensor(0.9742) feature loss: tensor(0.5932)
Local adapation with distilling: 0.000874
training loss: tensor(0.9559) feature loss: tensor(0.5210)
Local adapation with distilling: 0.000874
training loss: tensor(0.8928) feature loss: tensor(0.5512)
Local adapation with distilling: 0.000874
training loss: tensor(1.2321) feature loss: tensor(0.5937)
Global Model Acc on global data: 0.382 length of data: 10000
save a model
-------------Round number:  8  -------------
selected users: [17, 23, 1, 44, 55, 99, 86, 29, 62, 33]
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([27, 3, 32, 32]) torch.Size([27])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
all data: 246
Local adapation with distilling: 0.000856
training loss: tensor(0.8602) feature loss: tensor(0.4963)
Local adapation with distilling: 0.000856
training loss: tensor(0.9321) feature loss: tensor(0.6013)
Local adapation with distilling: 0.000856
training loss: tensor(0.9916) feature loss: tensor(0.5257)
Local adapation with distilling: 0.000856
training loss: tensor(0.9659) feature loss: tensor(0.5878)
Local adapation with distilling: 0.000856
training loss: tensor(0.9446) feature loss: tensor(0.5924)
Local adapation with distilling: 0.000856
training loss: tensor(0.9851) feature loss: tensor(0.5832)
Local adapation with distilling: 0.000856
training loss: tensor(0.8365) feature loss: tensor(0.5106)
Local adapation with distilling: 0.000856
training loss: tensor(0.8975) feature loss: tensor(0.5214)
Local adapation with distilling: 0.000856
training loss: tensor(0.9984) feature loss: tensor(0.5902)
Local adapation with distilling: 0.000856
training loss: tensor(0.9938) feature loss: tensor(0.5663)
Global Model Acc on global data: 0.4077 length of data: 10000
save a model
-------------Round number:  9  -------------
selected users: [75, 42, 46, 68, 3, 39, 23, 20, 70, 73]
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
all data: 245
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.9090) feature loss: tensor(0.5430)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.9623) feature loss: tensor(0.4803)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.8129) feature loss: tensor(0.4613)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.8712) feature loss: tensor(0.4583)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.9100) feature loss: tensor(0.4693)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.9195) feature loss: tensor(0.4733)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.8273) feature loss: tensor(0.5282)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.9121) feature loss: tensor(0.5029)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.8631) feature loss: tensor(0.5245)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.8888) feature loss: tensor(0.5485)
Global Model Acc on global data: 0.4213 length of data: 10000
save a model
-------------Round number:  10  -------------
selected users: [19, 14, 43, 37, 66, 3, 79, 41, 38, 68]
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([27, 3, 32, 32]) torch.Size([27])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([27, 3, 32, 32]) torch.Size([27])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
all data: 250
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.8249) feature loss: tensor(0.4561)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.7958) feature loss: tensor(0.5237)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.8245) feature loss: tensor(0.4949)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.8185) feature loss: tensor(0.4482)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.7917) feature loss: tensor(0.4751)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.7770) feature loss: tensor(0.4404)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.9156) feature loss: tensor(0.5014)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.8663) feature loss: tensor(0.4300)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.7891) feature loss: tensor(0.4540)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.8204) feature loss: tensor(0.4741)
Global Model Acc on global data: 0.4145 length of data: 10000
-------------Round number:  11  -------------
selected users: [46, 49, 22, 58, 41, 98, 62, 29, 30, 51]
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([27, 3, 32, 32]) torch.Size([27])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
all data: 243
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.7632) feature loss: tensor(0.4326)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.7604) feature loss: tensor(0.5066)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(1.0146) feature loss: tensor(0.4866)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.7880) feature loss: tensor(0.4710)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.7890) feature loss: tensor(0.4650)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.8462) feature loss: tensor(0.4762)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.8610) feature loss: tensor(0.5294)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.7215) feature loss: tensor(0.4407)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.8797) feature loss: tensor(0.5151)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.8402) feature loss: tensor(0.4798)
Global Model Acc on global data: 0.4276 length of data: 10000
save a model
-------------Round number:  12  -------------
selected users: [17, 41, 92, 14, 68, 31, 89, 15, 21, 60]
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([27, 3, 32, 32]) torch.Size([27])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
all data: 244
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.6703) feature loss: tensor(0.3787)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.6668) feature loss: tensor(0.3884)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.7514) feature loss: tensor(0.4274)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.6751) feature loss: tensor(0.3792)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.6775) feature loss: tensor(0.3918)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.8342) feature loss: tensor(0.3842)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.6743) feature loss: tensor(0.3644)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.6923) feature loss: tensor(0.4281)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.7338) feature loss: tensor(0.4180)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.7914) feature loss: tensor(0.4211)
Global Model Acc on global data: 0.4526 length of data: 10000
save a model
-------------Round number:  13  -------------
selected users: [37, 62, 83, 14, 43, 9, 44, 31, 69, 57]
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
all data: 242
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.6405) feature loss: tensor(0.3405)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.6973) feature loss: tensor(0.4267)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.6859) feature loss: tensor(0.4218)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.6208) feature loss: tensor(0.3992)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.6872) feature loss: tensor(0.4464)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.9159) feature loss: tensor(0.4071)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.7328) feature loss: tensor(0.3895)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.7607) feature loss: tensor(0.3936)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.6890) feature loss: tensor(0.3791)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.6809) feature loss: tensor(0.3797)
Global Model Acc on global data: 0.4493 length of data: 10000
-------------Round number:  14  -------------
selected users: [24, 39, 35, 44, 55, 70, 82, 40, 91, 65]
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
all data: 242
Local adapation with distilling: 0.000748
training loss: tensor(0.8493) feature loss: tensor(0.5213)
Local adapation with distilling: 0.000748
training loss: tensor(0.9117) feature loss: tensor(0.5296)
Local adapation with distilling: 0.000748
training loss: tensor(0.9403) feature loss: tensor(0.5251)
Local adapation with distilling: 0.000748
training loss: tensor(0.8377) feature loss: tensor(0.5520)
Local adapation with distilling: 0.000748
training loss: tensor(0.8486) feature loss: tensor(0.5933)
Local adapation with distilling: 0.000748
training loss: tensor(0.8717) feature loss: tensor(0.5800)
Local adapation with distilling: 0.000748
training loss: tensor(0.8586) feature loss: tensor(0.5149)
Local adapation with distilling: 0.000748
training loss: tensor(0.9241) feature loss: tensor(0.5405)
Local adapation with distilling: 0.000748
training loss: tensor(0.8829) feature loss: tensor(0.5342)
Local adapation with distilling: 0.000748
training loss: tensor(0.8586) feature loss: tensor(0.5954)
Global Model Acc on global data: 0.4722 length of data: 10000
save a model
-------------Round number:  15  -------------
selected users: [84, 36, 57, 51, 46, 78, 93, 14, 11, 59]
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
all data: 250
Local adapation with distilling: 0.00073
training loss: tensor(0.7489) feature loss: tensor(0.3980)
Local adapation with distilling: 0.00073
training loss: tensor(0.7524) feature loss: tensor(0.4460)
Local adapation with distilling: 0.00073
training loss: tensor(0.7012) feature loss: tensor(0.3923)
Local adapation with distilling: 0.00073
training loss: tensor(0.7581) feature loss: tensor(0.4536)
Local adapation with distilling: 0.00073
training loss: tensor(0.6834) feature loss: tensor(0.3994)
Local adapation with distilling: 0.00073
training loss: tensor(0.7582) feature loss: tensor(0.4467)
Local adapation with distilling: 0.00073
training loss: tensor(0.7821) feature loss: tensor(0.3989)
Local adapation with distilling: 0.00073
training loss: tensor(0.6778) feature loss: tensor(0.4594)
Local adapation with distilling: 0.00073
training loss: tensor(0.7974) feature loss: tensor(0.3971)
Local adapation with distilling: 0.00073
training loss: tensor(0.8039) feature loss: tensor(0.3752)
Global Model Acc on global data: 0.4765 length of data: 10000
save a model
-------------Round number:  16  -------------
selected users: [7, 25, 71, 42, 47, 29, 63, 88, 50, 9]
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([27, 3, 32, 32]) torch.Size([27])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
all data: 244
Local adapation with distilling: 0.000712
training loss: tensor(0.6935) feature loss: tensor(0.4021)
Local adapation with distilling: 0.000712
training loss: tensor(0.7361) feature loss: tensor(0.4569)
Local adapation with distilling: 0.000712
training loss: tensor(0.6750) feature loss: tensor(0.3886)
Local adapation with distilling: 0.000712
training loss: tensor(0.7600) feature loss: tensor(0.3944)
Local adapation with distilling: 0.000712
training loss: tensor(0.6661) feature loss: tensor(0.4217)
Local adapation with distilling: 0.000712
training loss: tensor(0.6673) feature loss: tensor(0.3895)
Local adapation with distilling: 0.000712
training loss: tensor(0.6981) feature loss: tensor(0.3874)
Local adapation with distilling: 0.000712
training loss: tensor(0.6908) feature loss: tensor(0.4233)
Local adapation with distilling: 0.000712
training loss: tensor(0.7124) feature loss: tensor(0.4169)
Local adapation with distilling: 0.000712
training loss: tensor(0.8205) feature loss: tensor(0.3923)
Global Model Acc on global data: 0.4788 length of data: 10000
save a model
-------------Round number:  17  -------------
selected users: [71, 28, 9, 4, 73, 34, 94, 92, 47, 37]
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
all data: 244
Local adapation with distilling: 0.000694
training loss: tensor(0.6154) feature loss: tensor(0.3726)
Local adapation with distilling: 0.000694
training loss: tensor(0.7571) feature loss: tensor(0.3990)
Local adapation with distilling: 0.000694
training loss: tensor(0.9278) feature loss: tensor(0.3753)
Local adapation with distilling: 0.000694
training loss: tensor(0.6909) feature loss: tensor(0.3629)
Local adapation with distilling: 0.000694
training loss: tensor(0.7060) feature loss: tensor(0.3983)
Local adapation with distilling: 0.000694
training loss: tensor(0.6930) feature loss: tensor(0.3588)
Local adapation with distilling: 0.000694
training loss: tensor(0.6822) feature loss: tensor(0.3495)
Local adapation with distilling: 0.000694
training loss: tensor(0.7323) feature loss: tensor(0.3740)
Local adapation with distilling: 0.000694
training loss: tensor(0.5910) feature loss: tensor(0.4102)
Local adapation with distilling: 0.000694
training loss: tensor(0.6109) feature loss: tensor(0.3349)
Global Model Acc on global data: 0.4557 length of data: 10000
-------------Round number:  18  -------------
selected users: [53, 47, 43, 54, 33, 48, 0, 12, 44, 91]
random features: torch.Size([28, 3, 32, 32]) torch.Size([28])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
all data: 245
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.7199) feature loss: tensor(0.3948)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.6678) feature loss: tensor(0.4077)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.7285) feature loss: tensor(0.4527)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.7991) feature loss: tensor(0.3958)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.7530) feature loss: tensor(0.4668)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.8487) feature loss: tensor(0.4636)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.7969) feature loss: tensor(0.4313)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.8661) feature loss: tensor(0.5004)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.7614) feature loss: tensor(0.4861)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.7244) feature loss: tensor(0.4382)
Global Model Acc on global data: 0.4755 length of data: 10000
-------------Round number:  19  -------------
selected users: [85, 72, 16, 18, 2, 38, 90, 30, 83, 61]
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([28, 3, 32, 32]) torch.Size([28])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([27, 3, 32, 32]) torch.Size([27])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
all data: 250
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.7166) feature loss: tensor(0.4379)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.7225) feature loss: tensor(0.4334)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.7863) feature loss: tensor(0.4014)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.8683) feature loss: tensor(0.4323)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.7923) feature loss: tensor(0.4216)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.6789) feature loss: tensor(0.4296)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.8198) feature loss: tensor(0.4919)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.8092) feature loss: tensor(0.4347)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.7289) feature loss: tensor(0.4417)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.7695) feature loss: tensor(0.4183)
Global Model Acc on global data: 0.4782 length of data: 10000
-------------Round number:  20  -------------
selected users: [70, 74, 2, 44, 56, 48, 12, 36, 0, 49]
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([27, 3, 32, 32]) torch.Size([27])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
all data: 242
Local adapation with distilling: 0.00064
training loss: tensor(0.6035) feature loss: tensor(0.3388)
Local adapation with distilling: 0.00064
training loss: tensor(0.5661) feature loss: tensor(0.3433)
Local adapation with distilling: 0.00064
training loss: tensor(0.5688) feature loss: tensor(0.3361)
Local adapation with distilling: 0.00064
training loss: tensor(0.6197) feature loss: tensor(0.3455)
Local adapation with distilling: 0.00064
training loss: tensor(0.5884) feature loss: tensor(0.3447)
Local adapation with distilling: 0.00064
training loss: tensor(0.5986) feature loss: tensor(0.3339)
Local adapation with distilling: 0.00064
training loss: tensor(0.6009) feature loss: tensor(0.3398)
Local adapation with distilling: 0.00064
training loss: tensor(0.5820) feature loss: tensor(0.3555)
Local adapation with distilling: 0.00064
training loss: tensor(0.5848) feature loss: tensor(0.3720)
Local adapation with distilling: 0.00064
training loss: tensor(0.5811) feature loss: tensor(0.3566)
Global Model Acc on global data: 0.4768 length of data: 10000
-------------Round number:  21  -------------
selected users: [23, 81, 85, 34, 62, 46, 42, 31, 93, 11]
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
all data: 244
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.7755) feature loss: tensor(0.4429)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.9830) feature loss: tensor(0.4227)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.6832) feature loss: tensor(0.3972)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.7064) feature loss: tensor(0.3972)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.7775) feature loss: tensor(0.4527)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.6616) feature loss: tensor(0.4395)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.7727) feature loss: tensor(0.3851)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.8133) feature loss: tensor(0.3919)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.7118) feature loss: tensor(0.4298)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.7290) feature loss: tensor(0.4076)
Global Model Acc on global data: 0.5049 length of data: 10000
save a model
-------------Round number:  22  -------------
selected users: [2, 49, 82, 31, 37, 12, 87, 42, 99, 85]
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
all data: 238
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.5458) feature loss: tensor(0.3011)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.5779) feature loss: tensor(0.3281)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.5931) feature loss: tensor(0.3282)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.6299) feature loss: tensor(0.3357)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.5669) feature loss: tensor(0.2916)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.5487) feature loss: tensor(0.3511)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.6350) feature loss: tensor(0.3477)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.5683) feature loss: tensor(0.3176)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.6090) feature loss: tensor(0.3365)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.5406) feature loss: tensor(0.3348)
Global Model Acc on global data: 0.5148 length of data: 10000
save a model
-------------Round number:  23  -------------
selected users: [26, 80, 82, 68, 77, 37, 3, 55, 20, 17]
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
all data: 245
Local adapation with distilling: 0.000586
training loss: tensor(0.5784) feature loss: tensor(0.3315)
Local adapation with distilling: 0.000586
training loss: tensor(0.6530) feature loss: tensor(0.3651)
Local adapation with distilling: 0.000586
training loss: tensor(0.5726) feature loss: tensor(0.3168)
Local adapation with distilling: 0.000586
training loss: tensor(0.5711) feature loss: tensor(0.3554)
Local adapation with distilling: 0.000586
training loss: tensor(0.6355) feature loss: tensor(0.3610)
Local adapation with distilling: 0.000586
training loss: tensor(0.5468) feature loss: tensor(0.3102)
Local adapation with distilling: 0.000586
training loss: tensor(0.6388) feature loss: tensor(0.3433)
Local adapation with distilling: 0.000586
training loss: tensor(0.6250) feature loss: tensor(0.3463)
Local adapation with distilling: 0.000586
training loss: tensor(0.6568) feature loss: tensor(0.3456)
Local adapation with distilling: 0.000586
training loss: tensor(0.5652) feature loss: tensor(0.3323)
Global Model Acc on global data: 0.5246 length of data: 10000
save a model
-------------Round number:  24  -------------
selected users: [26, 31, 37, 86, 76, 14, 88, 48, 71, 67]
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
all data: 246
Local adapation with distilling: 0.000568
training loss: tensor(0.5496) feature loss: tensor(0.3151)
Local adapation with distilling: 0.000568
training loss: tensor(0.6381) feature loss: tensor(0.3512)
Local adapation with distilling: 0.000568
training loss: tensor(0.5142) feature loss: tensor(0.3143)
Local adapation with distilling: 0.000568
training loss: tensor(0.6016) feature loss: tensor(0.3296)
Local adapation with distilling: 0.000568
training loss: tensor(0.6498) feature loss: tensor(0.3277)
Local adapation with distilling: 0.000568
training loss: tensor(0.5766) feature loss: tensor(0.3239)
Local adapation with distilling: 0.000568
training loss: tensor(0.5786) feature loss: tensor(0.3557)
Local adapation with distilling: 0.000568
training loss: tensor(0.6651) feature loss: tensor(0.3373)
Local adapation with distilling: 0.000568
training loss: tensor(0.5876) feature loss: tensor(0.3237)
Local adapation with distilling: 0.000568
training loss: tensor(0.6487) feature loss: tensor(0.3283)
Global Model Acc on global data: 0.5104 length of data: 10000
-------------Round number:  25  -------------
selected users: [41, 29, 33, 65, 74, 6, 57, 89, 87, 98]
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([27, 3, 32, 32]) torch.Size([27])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([27, 3, 32, 32]) torch.Size([27])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
all data: 247
Local adapation with distilling: 0.00055
training loss: tensor(0.5852) feature loss: tensor(0.3364)
Local adapation with distilling: 0.00055
training loss: tensor(0.5554) feature loss: tensor(0.3335)
Local adapation with distilling: 0.00055
training loss: tensor(0.6377) feature loss: tensor(0.3634)
Local adapation with distilling: 0.00055
training loss: tensor(0.6225) feature loss: tensor(0.3352)
Local adapation with distilling: 0.00055
training loss: tensor(0.5682) feature loss: tensor(0.3575)
Local adapation with distilling: 0.00055
training loss: tensor(0.6520) feature loss: tensor(0.3296)
Local adapation with distilling: 0.00055
training loss: tensor(0.5683) feature loss: tensor(0.3097)
Local adapation with distilling: 0.00055
training loss: tensor(0.6045) feature loss: tensor(0.3124)
Local adapation with distilling: 0.00055
training loss: tensor(0.6315) feature loss: tensor(0.3990)
Local adapation with distilling: 0.00055
training loss: tensor(0.5600) feature loss: tensor(0.3481)
Global Model Acc on global data: 0.5183 length of data: 10000
-------------Round number:  26  -------------
selected users: [8, 69, 84, 41, 25, 5, 63, 95, 33, 70]
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
all data: 243
Local adapation with distilling: 0.000532
training loss: tensor(0.6376) feature loss: tensor(0.3962)
Local adapation with distilling: 0.000532
training loss: tensor(0.6495) feature loss: tensor(0.3789)
Local adapation with distilling: 0.000532
training loss: tensor(0.6881) feature loss: tensor(0.3639)
Local adapation with distilling: 0.000532
training loss: tensor(0.5700) feature loss: tensor(0.3332)
Local adapation with distilling: 0.000532
training loss: tensor(0.7153) feature loss: tensor(0.3685)
Local adapation with distilling: 0.000532
training loss: tensor(0.7362) feature loss: tensor(0.3340)
Local adapation with distilling: 0.000532
training loss: tensor(0.6413) feature loss: tensor(0.3504)
Local adapation with distilling: 0.000532
training loss: tensor(0.6333) feature loss: tensor(0.3557)
Local adapation with distilling: 0.000532
training loss: tensor(0.6177) feature loss: tensor(0.3865)
Local adapation with distilling: 0.000532
training loss: tensor(0.6485) feature loss: tensor(0.4284)
Global Model Acc on global data: 0.521 length of data: 10000
-------------Round number:  27  -------------
selected users: [89, 68, 43, 50, 40, 95, 27, 85, 22, 44]
random features: torch.Size([27, 3, 32, 32]) torch.Size([27])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
all data: 245
Local adapation with distilling: 0.000514
training loss: tensor(0.5599) feature loss: tensor(0.3116)
Local adapation with distilling: 0.000514
training loss: tensor(0.5603) feature loss: tensor(0.3451)
Local adapation with distilling: 0.000514
training loss: tensor(0.5817) feature loss: tensor(0.3574)
Local adapation with distilling: 0.000514
training loss: tensor(0.5806) feature loss: tensor(0.3219)
Local adapation with distilling: 0.000514
training loss: tensor(0.6527) feature loss: tensor(0.3644)
Local adapation with distilling: 0.000514
training loss: tensor(0.5522) feature loss: tensor(0.2948)
Local adapation with distilling: 0.000514
training loss: tensor(0.6385) feature loss: tensor(0.2881)
Local adapation with distilling: 0.000514
training loss: tensor(0.5336) feature loss: tensor(0.3448)
Local adapation with distilling: 0.000514
training loss: tensor(0.8943) feature loss: tensor(0.3084)
Local adapation with distilling: 0.000514
training loss: tensor(0.6329) feature loss: tensor(0.3379)
Global Model Acc on global data: 0.5283 length of data: 10000
save a model
-------------Round number:  28  -------------
selected users: [67, 14, 0, 86, 13, 18, 30, 36, 52, 95]
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
all data: 244
Local adapation with distilling: 0.000496
training loss: tensor(0.5173) feature loss: tensor(0.2599)
Local adapation with distilling: 0.000496
training loss: tensor(0.4756) feature loss: tensor(0.2538)
Local adapation with distilling: 0.000496
training loss: tensor(0.5434) feature loss: tensor(0.2993)
Local adapation with distilling: 0.000496
training loss: tensor(0.5231) feature loss: tensor(0.2647)
Local adapation with distilling: 0.000496
training loss: tensor(0.4923) feature loss: tensor(0.2717)
Local adapation with distilling: 0.000496
training loss: tensor(0.6080) feature loss: tensor(0.2818)
Local adapation with distilling: 0.000496
training loss: tensor(0.5853) feature loss: tensor(0.3101)
Local adapation with distilling: 0.000496
training loss: tensor(0.4953) feature loss: tensor(0.2914)
Local adapation with distilling: 0.000496
training loss: tensor(0.7224) feature loss: tensor(0.2893)
Local adapation with distilling: 0.000496
training loss: tensor(0.4716) feature loss: tensor(0.2535)
Global Model Acc on global data: 0.5348 length of data: 10000
save a model
-------------Round number:  29  -------------
selected users: [73, 8, 10, 7, 19, 71, 92, 25, 38, 12]
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([27, 3, 32, 32]) torch.Size([27])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
all data: 245
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.6539) feature loss: tensor(0.4200)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.6325) feature loss: tensor(0.3449)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.7210) feature loss: tensor(0.3695)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.6720) feature loss: tensor(0.3226)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.6551) feature loss: tensor(0.3170)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.5847) feature loss: tensor(0.3389)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.7341) feature loss: tensor(0.3880)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.6401) feature loss: tensor(0.3488)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.5816) feature loss: tensor(0.3673)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.6471) feature loss: tensor(0.3430)
Global Model Acc on global data: 0.5421 length of data: 10000
save a model
-------------Round number:  30  -------------
selected users: [20, 91, 34, 52, 8, 74, 21, 88, 80, 89]
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([27, 3, 32, 32]) torch.Size([27])
all data: 243
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.5438) feature loss: tensor(0.2770)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.5045) feature loss: tensor(0.2497)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.4802) feature loss: tensor(0.2439)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.7377) feature loss: tensor(0.2812)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.4876) feature loss: tensor(0.2845)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.4553) feature loss: tensor(0.2564)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.4786) feature loss: tensor(0.2474)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.4780) feature loss: tensor(0.2534)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.5158) feature loss: tensor(0.2694)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.4533) feature loss: tensor(0.2383)
Global Model Acc on global data: 0.5183 length of data: 10000
-------------Round number:  31  -------------
selected users: [17, 33, 76, 3, 56, 0, 37, 8, 60, 67]
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([27, 3, 32, 32]) torch.Size([27])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
all data: 249
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.5389) feature loss: tensor(0.2671)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.5066) feature loss: tensor(0.2705)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.5333) feature loss: tensor(0.2513)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.5410) feature loss: tensor(0.2544)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.5081) feature loss: tensor(0.2597)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.5202) feature loss: tensor(0.2952)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.4900) feature loss: tensor(0.2612)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.4740) feature loss: tensor(0.3037)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.5579) feature loss: tensor(0.3221)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.4743) feature loss: tensor(0.2565)
Global Model Acc on global data: 0.5125 length of data: 10000
-------------Round number:  32  -------------
selected users: [22, 39, 85, 97, 55, 33, 80, 13, 27, 96]
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
all data: 244
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(1.1787) feature loss: tensor(0.3547)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.7717) feature loss: tensor(0.3245)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.6160) feature loss: tensor(0.3582)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.7168) feature loss: tensor(0.3610)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.6837) feature loss: tensor(0.3792)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.6069) feature loss: tensor(0.3973)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.6404) feature loss: tensor(0.3615)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.6038) feature loss: tensor(0.3558)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.7008) feature loss: tensor(0.3158)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(1.1200) feature loss: tensor(0.3501)
Global Model Acc on global data: 0.5399 length of data: 10000
-------------Round number:  33  -------------
selected users: [56, 90, 95, 82, 60, 71, 6, 81, 2, 70]
random features: torch.Size([27, 3, 32, 32]) torch.Size([27])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
all data: 246
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.5178) feature loss: tensor(0.3334)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.6329) feature loss: tensor(0.3355)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.5422) feature loss: tensor(0.3183)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.5858) feature loss: tensor(0.3723)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.5856) feature loss: tensor(0.3746)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.5333) feature loss: tensor(0.3263)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.6358) feature loss: tensor(0.3162)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.9686) feature loss: tensor(0.3738)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.5933) feature loss: tensor(0.3519)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.5607) feature loss: tensor(0.3952)
Global Model Acc on global data: 0.5324 length of data: 10000
-------------Round number:  34  -------------
selected users: [14, 74, 15, 4, 32, 59, 91, 10, 50, 53]
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([28, 3, 32, 32]) torch.Size([28])
all data: 247
Local adapation with distilling: 0.000388
training loss: tensor(0.5840) feature loss: tensor(0.3502)
Local adapation with distilling: 0.000388
training loss: tensor(0.6050) feature loss: tensor(0.4039)
Local adapation with distilling: 0.000388
training loss: tensor(0.7729) feature loss: tensor(0.3593)
Local adapation with distilling: 0.000388
training loss: tensor(0.7075) feature loss: tensor(0.3539)
Local adapation with distilling: 0.000388
training loss: tensor(0.7823) feature loss: tensor(0.3580)
Local adapation with distilling: 0.000388
training loss: tensor(0.6778) feature loss: tensor(0.3447)
Local adapation with distilling: 0.000388
training loss: tensor(0.5890) feature loss: tensor(0.3242)
Local adapation with distilling: 0.000388
training loss: tensor(0.6830) feature loss: tensor(0.3776)
Local adapation with distilling: 0.000388
training loss: tensor(0.6028) feature loss: tensor(0.3697)
Local adapation with distilling: 0.000388
training loss: tensor(0.6561) feature loss: tensor(0.3424)
Global Model Acc on global data: 0.5636 length of data: 10000
save a model
-------------Round number:  35  -------------
selected users: [40, 71, 98, 27, 70, 31, 10, 24, 51, 35]
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
all data: 241
Local adapation with distilling: 0.00037
training loss: tensor(0.5909) feature loss: tensor(0.2991)
Local adapation with distilling: 0.00037
training loss: tensor(0.4495) feature loss: tensor(0.2658)
Local adapation with distilling: 0.00037
training loss: tensor(0.4806) feature loss: tensor(0.2971)
Local adapation with distilling: 0.00037
training loss: tensor(0.5263) feature loss: tensor(0.2645)
Local adapation with distilling: 0.00037
training loss: tensor(0.4801) feature loss: tensor(0.2765)
Local adapation with distilling: 0.00037
training loss: tensor(0.5414) feature loss: tensor(0.2686)
Local adapation with distilling: 0.00037
training loss: tensor(0.5221) feature loss: tensor(0.2795)
Local adapation with distilling: 0.00037
training loss: tensor(0.5821) feature loss: tensor(0.2694)
Local adapation with distilling: 0.00037
training loss: tensor(0.5284) feature loss: tensor(0.2613)
Local adapation with distilling: 0.00037
training loss: tensor(0.5407) feature loss: tensor(0.2393)
Global Model Acc on global data: 0.5455 length of data: 10000
-------------Round number:  36  -------------
selected users: [59, 42, 2, 27, 28, 75, 58, 68, 52, 74]
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
all data: 244
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.5351) feature loss: tensor(0.2720)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.5727) feature loss: tensor(0.3029)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.5292) feature loss: tensor(0.2724)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.5269) feature loss: tensor(0.2580)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.8016) feature loss: tensor(0.3044)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.5699) feature loss: tensor(0.2811)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.5726) feature loss: tensor(0.3292)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.6407) feature loss: tensor(0.2997)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.8024) feature loss: tensor(0.3038)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.4936) feature loss: tensor(0.3195)
Global Model Acc on global data: 0.5808 length of data: 10000
save a model
-------------Round number:  37  -------------
selected users: [61, 49, 86, 78, 5, 91, 81, 82, 89, 18]
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([27, 3, 32, 32]) torch.Size([27])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
all data: 251
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.4691) feature loss: tensor(0.2565)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.5107) feature loss: tensor(0.3077)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.5042) feature loss: tensor(0.2595)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.5261) feature loss: tensor(0.2656)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.5620) feature loss: tensor(0.2438)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.4543) feature loss: tensor(0.2336)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.8179) feature loss: tensor(0.2683)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.5110) feature loss: tensor(0.2600)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.4885) feature loss: tensor(0.2367)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.5562) feature loss: tensor(0.2659)
Global Model Acc on global data: 0.5782 length of data: 10000
-------------Round number:  38  -------------
selected users: [40, 73, 49, 45, 64, 16, 69, 17, 72, 66]
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([28, 3, 32, 32]) torch.Size([28])
random features: torch.Size([27, 3, 32, 32]) torch.Size([27])
all data: 253
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.5716) feature loss: tensor(0.2854)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.5428) feature loss: tensor(0.2976)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.5320) feature loss: tensor(0.2877)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.5346) feature loss: tensor(0.2665)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.6943) feature loss: tensor(0.2442)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.6135) feature loss: tensor(0.2513)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.5368) feature loss: tensor(0.2885)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.5058) feature loss: tensor(0.2533)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.5056) feature loss: tensor(0.3078)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.5668) feature loss: tensor(0.2647)
Global Model Acc on global data: 0.5675 length of data: 10000
-------------Round number:  39  -------------
selected users: [22, 53, 84, 57, 87, 58, 29, 21, 85, 79]
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([28, 3, 32, 32]) torch.Size([28])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([27, 3, 32, 32]) torch.Size([27])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
all data: 249
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.7819) feature loss: tensor(0.2588)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.5216) feature loss: tensor(0.2620)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.6089) feature loss: tensor(0.3165)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.5524) feature loss: tensor(0.2611)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.5771) feature loss: tensor(0.3010)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.5202) feature loss: tensor(0.2954)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.5147) feature loss: tensor(0.2908)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.5813) feature loss: tensor(0.2898)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.5315) feature loss: tensor(0.2865)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.5853) feature loss: tensor(0.2787)
Global Model Acc on global data: 0.5797 length of data: 10000
-------------Round number:  40  -------------
selected users: [79, 75, 63, 15, 38, 11, 40, 45, 39, 62]
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([27, 3, 32, 32]) torch.Size([27])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
all data: 247
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.4603) feature loss: tensor(0.2132)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.4695) feature loss: tensor(0.2102)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.4482) feature loss: tensor(0.2297)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.4462) feature loss: tensor(0.2371)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.3962) feature loss: tensor(0.2192)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.4628) feature loss: tensor(0.1947)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.4593) feature loss: tensor(0.2352)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.4479) feature loss: tensor(0.2070)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.5009) feature loss: tensor(0.2029)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.5403) feature loss: tensor(0.2253)
Global Model Acc on global data: 0.5687 length of data: 10000
-------------Round number:  41  -------------
selected users: [42, 94, 37, 6, 79, 32, 24, 0, 33, 93]
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
all data: 245
Local adapation with distilling: 0.000262
training loss: tensor(0.6339) feature loss: tensor(0.3058)
Local adapation with distilling: 0.000262
training loss: tensor(0.7157) feature loss: tensor(0.2739)
Local adapation with distilling: 0.000262
training loss: tensor(0.5713) feature loss: tensor(0.2716)
Local adapation with distilling: 0.000262
training loss: tensor(0.6402) feature loss: tensor(0.3129)
Local adapation with distilling: 0.000262
training loss: tensor(0.5593) feature loss: tensor(0.2736)
Local adapation with distilling: 0.000262
training loss: tensor(0.6906) feature loss: tensor(0.3114)
Local adapation with distilling: 0.000262
training loss: tensor(0.6350) feature loss: tensor(0.2901)
Local adapation with distilling: 0.000262
training loss: tensor(0.5547) feature loss: tensor(0.3226)
Local adapation with distilling: 0.000262
training loss: tensor(0.5595) feature loss: tensor(0.3317)
Local adapation with distilling: 0.000262
training loss: tensor(0.6134) feature loss: tensor(0.2804)
Global Model Acc on global data: 0.5837 length of data: 10000
save a model
-------------Round number:  42  -------------
selected users: [83, 53, 70, 45, 44, 39, 22, 80, 10, 0]
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([28, 3, 32, 32]) torch.Size([28])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
all data: 246
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.5334) feature loss: tensor(0.3022)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.4351) feature loss: tensor(0.2279)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.4569) feature loss: tensor(0.2317)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.4607) feature loss: tensor(0.2251)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.5303) feature loss: tensor(0.2698)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.4410) feature loss: tensor(0.2181)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.6759) feature loss: tensor(0.2449)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.5040) feature loss: tensor(0.2630)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.5219) feature loss: tensor(0.2594)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.4571) feature loss: tensor(0.2428)
Global Model Acc on global data: 0.5667 length of data: 10000
-------------Round number:  43  -------------
selected users: [20, 2, 15, 22, 57, 91, 69, 55, 11, 79]
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
all data: 246
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.5053) feature loss: tensor(0.2175)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.4345) feature loss: tensor(0.2310)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.4551) feature loss: tensor(0.2009)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.5131) feature loss: tensor(0.1873)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.4642) feature loss: tensor(0.1937)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.4066) feature loss: tensor(0.1872)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.4319) feature loss: tensor(0.2304)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.4334) feature loss: tensor(0.2284)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.4383) feature loss: tensor(0.1954)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.4076) feature loss: tensor(0.2094)
Global Model Acc on global data: 0.5781 length of data: 10000
-------------Round number:  44  -------------
selected users: [42, 54, 27, 93, 39, 65, 7, 26, 24, 60]
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
all data: 245
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.5335) feature loss: tensor(0.2589)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.6825) feature loss: tensor(0.2429)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.5617) feature loss: tensor(0.2475)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.5784) feature loss: tensor(0.2757)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.4520) feature loss: tensor(0.2346)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.4844) feature loss: tensor(0.2459)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.5720) feature loss: tensor(0.2414)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.4813) feature loss: tensor(0.2898)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.5179) feature loss: tensor(0.2562)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.5227) feature loss: tensor(0.2782)
Global Model Acc on global data: 0.5748 length of data: 10000
-------------Round number:  45  -------------
selected users: [0, 1, 62, 76, 37, 99, 78, 38, 2, 84]
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([27, 3, 32, 32]) torch.Size([27])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
all data: 248
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.4483) feature loss: tensor(0.2529)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.5214) feature loss: tensor(0.2145)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.5353) feature loss: tensor(0.2532)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.5810) feature loss: tensor(0.2111)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.4557) feature loss: tensor(0.2048)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.4964) feature loss: tensor(0.2473)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.5361) feature loss: tensor(0.2518)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.4240) feature loss: tensor(0.2404)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.4755) feature loss: tensor(0.2181)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.5102) feature loss: tensor(0.2479)
Global Model Acc on global data: 0.5914 length of data: 10000
save a model
-------------Round number:  46  -------------
selected users: [71, 33, 37, 10, 44, 34, 24, 98, 73, 95]
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
all data: 242
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.3904) feature loss: tensor(0.1996)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.4664) feature loss: tensor(0.2376)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.3858) feature loss: tensor(0.1952)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.4682) feature loss: tensor(0.2020)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.4893) feature loss: tensor(0.2231)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.4842) feature loss: tensor(0.2224)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.4412) feature loss: tensor(0.1929)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.4491) feature loss: tensor(0.2419)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.4956) feature loss: tensor(0.2386)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.4393) feature loss: tensor(0.2077)
Global Model Acc on global data: 0.5996 length of data: 10000
save a model
-------------Round number:  47  -------------
selected users: [17, 90, 94, 86, 63, 5, 38, 14, 40, 47]
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([27, 3, 32, 32]) torch.Size([27])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
all data: 247
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.4321) feature loss: tensor(0.1723)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.5205) feature loss: tensor(0.1886)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.4590) feature loss: tensor(0.1761)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.4499) feature loss: tensor(0.1884)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.4274) feature loss: tensor(0.2127)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.5075) feature loss: tensor(0.1726)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.3782) feature loss: tensor(0.1974)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.4078) feature loss: tensor(0.1903)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.4494) feature loss: tensor(0.1968)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.4375) feature loss: tensor(0.2023)
Global Model Acc on global data: 0.5842 length of data: 10000
-------------Round number:  48  -------------
selected users: [93, 5, 71, 9, 11, 79, 69, 8, 59, 63]
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
all data: 249
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.4534) feature loss: tensor(0.2175)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.4560) feature loss: tensor(0.1936)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.3624) feature loss: tensor(0.1962)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.6914) feature loss: tensor(0.2054)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.4417) feature loss: tensor(0.1925)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.4669) feature loss: tensor(0.1939)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.4538) feature loss: tensor(0.2145)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.4774) feature loss: tensor(0.2159)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.4752) feature loss: tensor(0.1915)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.4148) feature loss: tensor(0.2239)
Global Model Acc on global data: 0.5923 length of data: 10000
-------------Round number:  49  -------------
selected users: [76, 25, 28, 75, 81, 47, 41, 22, 29, 1]
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([27, 3, 32, 32]) torch.Size([27])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
all data: 249
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.6083) feature loss: tensor(0.2221)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.5093) feature loss: tensor(0.2245)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.6146) feature loss: tensor(0.2214)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.5434) feature loss: tensor(0.2206)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.9407) feature loss: tensor(0.2536)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.5360) feature loss: tensor(0.2587)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.5283) feature loss: tensor(0.2196)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.6802) feature loss: tensor(0.2070)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.5118) feature loss: tensor(0.2036)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.4872) feature loss: tensor(0.2166)
Global Model Acc on global data: 0.5978 length of data: 10000
-------------Round number:  50  -------------
selected users: [80, 79, 25, 15, 39, 40, 53, 17, 57, 50]
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([28, 3, 32, 32]) torch.Size([28])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
all data: 249
Local adapation with distilling: 0.0001
training loss: tensor(0.4966) feature loss: tensor(0.2131)
Local adapation with distilling: 0.0001
training loss: tensor(0.4015) feature loss: tensor(0.1761)
Local adapation with distilling: 0.0001
training loss: tensor(0.4108) feature loss: tensor(0.1685)
Local adapation with distilling: 0.0001
training loss: tensor(0.4013) feature loss: tensor(0.2133)
Local adapation with distilling: 0.0001
training loss: tensor(0.3926) feature loss: tensor(0.1791)
Local adapation with distilling: 0.0001
training loss: tensor(0.5150) feature loss: tensor(0.2075)
Local adapation with distilling: 0.0001
training loss: tensor(0.4192) feature loss: tensor(0.1805)
Local adapation with distilling: 0.0001
training loss: tensor(0.4084) feature loss: tensor(0.1761)
Local adapation with distilling: 0.0001
training loss: tensor(0.4375) feature loss: tensor(0.1698)
Local adapation with distilling: 0.0001
training loss: tensor(0.5092) feature loss: tensor(0.2153)
Global Model Acc on global data: 0.5931 length of data: 10000
-------------Round number:  51  -------------
selected users: [71, 43, 11, 83, 78, 19, 80, 4, 79, 75]
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
all data: 247
Local adapation with distilling: 0.0001
training loss: tensor(0.3964) feature loss: tensor(0.1814)
Local adapation with distilling: 0.0001
training loss: tensor(0.5001) feature loss: tensor(0.2033)
Local adapation with distilling: 0.0001
training loss: tensor(0.4307) feature loss: tensor(0.1857)
Local adapation with distilling: 0.0001
training loss: tensor(0.5505) feature loss: tensor(0.2408)
Local adapation with distilling: 0.0001
training loss: tensor(0.5153) feature loss: tensor(0.2279)
Local adapation with distilling: 0.0001
training loss: tensor(0.5393) feature loss: tensor(0.1961)
Local adapation with distilling: 0.0001
training loss: tensor(0.4683) feature loss: tensor(0.2240)
Local adapation with distilling: 0.0001
training loss: tensor(0.5853) feature loss: tensor(0.1847)
Local adapation with distilling: 0.0001
training loss: tensor(0.4068) feature loss: tensor(0.1939)
Local adapation with distilling: 0.0001
training loss: tensor(0.4698) feature loss: tensor(0.2169)
Global Model Acc on global data: 0.5914 length of data: 10000
-------------Round number:  52  -------------
selected users: [82, 8, 44, 19, 2, 73, 37, 89, 67, 18]
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([27, 3, 32, 32]) torch.Size([27])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
all data: 244
Local adapation with distilling: 0.0001
training loss: tensor(0.4995) feature loss: tensor(0.1903)
Local adapation with distilling: 0.0001
training loss: tensor(0.4378) feature loss: tensor(0.1934)
Local adapation with distilling: 0.0001
training loss: tensor(0.4539) feature loss: tensor(0.1750)
Local adapation with distilling: 0.0001
training loss: tensor(0.4106) feature loss: tensor(0.1654)
Local adapation with distilling: 0.0001
training loss: tensor(0.4055) feature loss: tensor(0.1787)
Local adapation with distilling: 0.0001
training loss: tensor(0.4269) feature loss: tensor(0.1981)
Local adapation with distilling: 0.0001
training loss: tensor(0.3609) feature loss: tensor(0.1699)
Local adapation with distilling: 0.0001
training loss: tensor(0.3925) feature loss: tensor(0.1630)
Local adapation with distilling: 0.0001
training loss: tensor(0.4569) feature loss: tensor(0.1783)
Local adapation with distilling: 0.0001
training loss: tensor(0.5034) feature loss: tensor(0.1854)
Global Model Acc on global data: 0.5986 length of data: 10000
-------------Round number:  53  -------------
selected users: [19, 78, 64, 3, 71, 32, 68, 42, 55, 97]
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
all data: 245
Local adapation with distilling: 0.0001
training loss: tensor(0.4965) feature loss: tensor(0.2390)
Local adapation with distilling: 0.0001
training loss: tensor(0.5462) feature loss: tensor(0.2902)
Local adapation with distilling: 0.0001
training loss: tensor(0.7471) feature loss: tensor(0.2647)
Local adapation with distilling: 0.0001
training loss: tensor(0.6270) feature loss: tensor(0.2432)
Local adapation with distilling: 0.0001
training loss: tensor(0.4325) feature loss: tensor(0.2561)
Local adapation with distilling: 0.0001
training loss: tensor(0.6861) feature loss: tensor(0.2492)
Local adapation with distilling: 0.0001
training loss: tensor(0.5557) feature loss: tensor(0.2790)
Local adapation with distilling: 0.0001
training loss: tensor(0.5422) feature loss: tensor(0.2523)
Local adapation with distilling: 0.0001
training loss: tensor(0.5561) feature loss: tensor(0.2853)
Local adapation with distilling: 0.0001
training loss: tensor(0.6014) feature loss: tensor(0.2926)
Global Model Acc on global data: 0.5999 length of data: 10000
save a model
-------------Round number:  54  -------------
selected users: [36, 70, 48, 94, 81, 46, 38, 29, 34, 22]
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([27, 3, 32, 32]) torch.Size([27])
random features: torch.Size([27, 3, 32, 32]) torch.Size([27])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
all data: 249
Local adapation with distilling: 0.0001
training loss: tensor(0.3988) feature loss: tensor(0.1743)
Local adapation with distilling: 0.0001
training loss: tensor(0.3731) feature loss: tensor(0.1781)
Local adapation with distilling: 0.0001
training loss: tensor(0.5282) feature loss: tensor(0.1805)
Local adapation with distilling: 0.0001
training loss: tensor(0.3958) feature loss: tensor(0.1545)
Local adapation with distilling: 0.0001
training loss: tensor(0.8466) feature loss: tensor(0.1771)
Local adapation with distilling: 0.0001
training loss: tensor(0.3959) feature loss: tensor(0.1704)
Local adapation with distilling: 0.0001
training loss: tensor(0.3414) feature loss: tensor(0.1794)
Local adapation with distilling: 0.0001
training loss: tensor(0.3523) feature loss: tensor(0.1626)
Local adapation with distilling: 0.0001
training loss: tensor(0.3908) feature loss: tensor(0.1608)
Local adapation with distilling: 0.0001
training loss: tensor(0.5335) feature loss: tensor(0.1581)
Global Model Acc on global data: 0.5998 length of data: 10000
-------------Round number:  55  -------------
selected users: [28, 92, 98, 95, 84, 34, 38, 76, 17, 78]
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([27, 3, 32, 32]) torch.Size([27])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
all data: 249
Local adapation with distilling: 0.0001
training loss: tensor(0.7701) feature loss: tensor(0.2204)
Local adapation with distilling: 0.0001
training loss: tensor(0.6509) feature loss: tensor(0.2159)
Local adapation with distilling: 0.0001
training loss: tensor(0.4434) feature loss: tensor(0.2283)
Local adapation with distilling: 0.0001
training loss: tensor(0.4414) feature loss: tensor(0.2121)
Local adapation with distilling: 0.0001
training loss: tensor(0.4983) feature loss: tensor(0.2129)
Local adapation with distilling: 0.0001
training loss: tensor(0.4407) feature loss: tensor(0.1953)
Local adapation with distilling: 0.0001
training loss: tensor(0.3785) feature loss: tensor(0.2351)
Local adapation with distilling: 0.0001
training loss: tensor(0.4748) feature loss: tensor(0.1891)
Local adapation with distilling: 0.0001
training loss: tensor(0.4016) feature loss: tensor(0.1933)
Local adapation with distilling: 0.0001
training loss: tensor(0.4700) feature loss: tensor(0.2375)
Global Model Acc on global data: 0.5998 length of data: 10000
-------------Round number:  56  -------------
selected users: [92, 79, 23, 68, 52, 38, 73, 9, 59, 27]
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([27, 3, 32, 32]) torch.Size([27])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
all data: 248
Local adapation with distilling: 0.0001
training loss: tensor(0.5732) feature loss: tensor(0.2344)
Local adapation with distilling: 0.0001
training loss: tensor(0.4050) feature loss: tensor(0.2127)
Local adapation with distilling: 0.0001
training loss: tensor(0.6238) feature loss: tensor(0.2346)
Local adapation with distilling: 0.0001
training loss: tensor(0.4928) feature loss: tensor(0.2441)
Local adapation with distilling: 0.0001
training loss: tensor(0.6621) feature loss: tensor(0.2417)
Local adapation with distilling: 0.0001
training loss: tensor(0.3598) feature loss: tensor(0.2454)
Local adapation with distilling: 0.0001
training loss: tensor(0.4552) feature loss: tensor(0.2446)
Local adapation with distilling: 0.0001
training loss: tensor(0.6593) feature loss: tensor(0.2199)
Local adapation with distilling: 0.0001
training loss: tensor(0.4809) feature loss: tensor(0.1991)
Local adapation with distilling: 0.0001
training loss: tensor(0.4712) feature loss: tensor(0.2003)
Global Model Acc on global data: 0.5952 length of data: 10000
-------------Round number:  57  -------------
selected users: [52, 17, 41, 3, 8, 98, 59, 20, 67, 7]
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
all data: 242
Local adapation with distilling: 0.0001
training loss: tensor(0.7213) feature loss: tensor(0.2035)
Local adapation with distilling: 0.0001
training loss: tensor(0.3461) feature loss: tensor(0.1778)
Local adapation with distilling: 0.0001
training loss: tensor(0.3905) feature loss: tensor(0.1842)
Local adapation with distilling: 0.0001
training loss: tensor(0.4455) feature loss: tensor(0.1702)
Local adapation with distilling: 0.0001
training loss: tensor(0.3768) feature loss: tensor(0.1980)
Local adapation with distilling: 0.0001
training loss: tensor(0.3804) feature loss: tensor(0.2226)
Local adapation with distilling: 0.0001
training loss: tensor(0.4497) feature loss: tensor(0.1802)
Local adapation with distilling: 0.0001
training loss: tensor(0.4727) feature loss: tensor(0.2033)
Local adapation with distilling: 0.0001
training loss: tensor(0.4034) feature loss: tensor(0.1716)
Local adapation with distilling: 0.0001
training loss: tensor(0.4797) feature loss: tensor(0.1825)
Global Model Acc on global data: 0.5896 length of data: 10000
-------------Round number:  58  -------------
selected users: [43, 58, 8, 31, 70, 45, 69, 95, 50, 4]
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
all data: 243
Local adapation with distilling: 0.0001
training loss: tensor(0.4869) feature loss: tensor(0.2055)
Local adapation with distilling: 0.0001
training loss: tensor(0.4048) feature loss: tensor(0.2211)
Local adapation with distilling: 0.0001
training loss: tensor(0.3813) feature loss: tensor(0.2104)
Local adapation with distilling: 0.0001
training loss: tensor(0.4688) feature loss: tensor(0.1888)
Local adapation with distilling: 0.0001
training loss: tensor(0.4180) feature loss: tensor(0.2398)
Local adapation with distilling: 0.0001
training loss: tensor(0.3999) feature loss: tensor(0.1995)
Local adapation with distilling: 0.0001
training loss: tensor(0.4269) feature loss: tensor(0.2324)
Local adapation with distilling: 0.0001
training loss: tensor(0.3790) feature loss: tensor(0.1994)
Local adapation with distilling: 0.0001
training loss: tensor(0.4419) feature loss: tensor(0.2054)
Local adapation with distilling: 0.0001
training loss: tensor(0.5040) feature loss: tensor(0.1915)
Global Model Acc on global data: 0.6032 length of data: 10000
save a model
-------------Round number:  59  -------------
selected users: [38, 46, 24, 87, 30, 85, 16, 96, 18, 99]
random features: torch.Size([27, 3, 32, 32]) torch.Size([27])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
all data: 245
Local adapation with distilling: 0.0001
training loss: tensor(0.3969) feature loss: tensor(0.2173)
Local adapation with distilling: 0.0001
training loss: tensor(0.4347) feature loss: tensor(0.2105)
Local adapation with distilling: 0.0001
training loss: tensor(0.4887) feature loss: tensor(0.2037)
Local adapation with distilling: 0.0001
training loss: tensor(0.5634) feature loss: tensor(0.2311)
Local adapation with distilling: 0.0001
training loss: tensor(0.6052) feature loss: tensor(0.2259)
Local adapation with distilling: 0.0001
training loss: tensor(0.4881) feature loss: tensor(0.2534)
Local adapation with distilling: 0.0001
training loss: tensor(0.5966) feature loss: tensor(0.2007)
Local adapation with distilling: 0.0001
training loss: tensor(0.7560) feature loss: tensor(0.2348)
Local adapation with distilling: 0.0001
training loss: tensor(0.5176) feature loss: tensor(0.2277)
Local adapation with distilling: 0.0001
training loss: tensor(0.5238) feature loss: tensor(0.2149)
Global Model Acc on global data: 0.6006 length of data: 10000
-------------Round number:  60  -------------
selected users: [88, 4, 79, 14, 55, 3, 19, 28, 94, 25]
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
all data: 246
Local adapation with distilling: 0.0001
training loss: tensor(0.4185) feature loss: tensor(0.2268)
Local adapation with distilling: 0.0001
training loss: tensor(0.4254) feature loss: tensor(0.1940)
Local adapation with distilling: 0.0001
training loss: tensor(0.3543) feature loss: tensor(0.2077)
Local adapation with distilling: 0.0001
training loss: tensor(0.4294) feature loss: tensor(0.2378)
Local adapation with distilling: 0.0001
training loss: tensor(0.4295) feature loss: tensor(0.2073)
Local adapation with distilling: 0.0001
training loss: tensor(0.4114) feature loss: tensor(0.1771)
Local adapation with distilling: 0.0001
training loss: tensor(0.4119) feature loss: tensor(0.1972)
Local adapation with distilling: 0.0001
training loss: tensor(0.5837) feature loss: tensor(0.2175)
Local adapation with distilling: 0.0001
training loss: tensor(0.4218) feature loss: tensor(0.1967)
Local adapation with distilling: 0.0001
training loss: tensor(0.3965) feature loss: tensor(0.2070)
Global Model Acc on global data: 0.599 length of data: 10000
-------------Round number:  61  -------------
selected users: [83, 1, 55, 9, 31, 28, 96, 29, 86, 63]
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([27, 3, 32, 32]) torch.Size([27])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
all data: 252
Local adapation with distilling: 0.0001
training loss: tensor(0.5205) feature loss: tensor(0.2619)
Local adapation with distilling: 0.0001
training loss: tensor(0.4299) feature loss: tensor(0.2178)
Local adapation with distilling: 0.0001
training loss: tensor(0.4156) feature loss: tensor(0.2178)
Local adapation with distilling: 0.0001
training loss: tensor(0.5449) feature loss: tensor(0.2271)
Local adapation with distilling: 0.0001
training loss: tensor(0.4488) feature loss: tensor(0.2038)
Local adapation with distilling: 0.0001
training loss: tensor(0.5888) feature loss: tensor(0.2184)
Local adapation with distilling: 0.0001
training loss: tensor(0.7468) feature loss: tensor(0.2264)
Local adapation with distilling: 0.0001
training loss: tensor(0.3808) feature loss: tensor(0.1936)
Local adapation with distilling: 0.0001
training loss: tensor(0.4213) feature loss: tensor(0.1846)
Local adapation with distilling: 0.0001
training loss: tensor(0.4123) feature loss: tensor(0.2310)
Global Model Acc on global data: 0.5906 length of data: 10000
-------------Round number:  62  -------------
selected users: [76, 48, 62, 80, 29, 99, 60, 89, 39, 69]
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([27, 3, 32, 32]) torch.Size([27])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([27, 3, 32, 32]) torch.Size([27])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
all data: 246
Local adapation with distilling: 0.0001
training loss: tensor(0.4335) feature loss: tensor(0.1734)
Local adapation with distilling: 0.0001
training loss: tensor(0.4915) feature loss: tensor(0.2162)
Local adapation with distilling: 0.0001
training loss: tensor(0.4825) feature loss: tensor(0.1944)
Local adapation with distilling: 0.0001
training loss: tensor(0.4060) feature loss: tensor(0.2076)
Local adapation with distilling: 0.0001
training loss: tensor(0.3190) feature loss: tensor(0.1684)
Local adapation with distilling: 0.0001
training loss: tensor(0.3949) feature loss: tensor(0.1969)
Local adapation with distilling: 0.0001
training loss: tensor(0.4445) feature loss: tensor(0.2031)
Local adapation with distilling: 0.0001
training loss: tensor(0.3442) feature loss: tensor(0.1705)
Local adapation with distilling: 0.0001
training loss: tensor(0.3943) feature loss: tensor(0.1690)
Local adapation with distilling: 0.0001
training loss: tensor(0.3500) feature loss: tensor(0.2093)
Global Model Acc on global data: 0.5809 length of data: 10000
-------------Round number:  63  -------------
selected users: [64, 59, 63, 2, 80, 20, 18, 48, 72, 51]
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([28, 3, 32, 32]) torch.Size([28])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
all data: 244
Local adapation with distilling: 0.0001
training loss: tensor(0.6130) feature loss: tensor(0.1968)
Local adapation with distilling: 0.0001
training loss: tensor(0.3860) feature loss: tensor(0.1860)
Local adapation with distilling: 0.0001
training loss: tensor(0.3805) feature loss: tensor(0.2142)
Local adapation with distilling: 0.0001
training loss: tensor(0.3766) feature loss: tensor(0.2112)
Local adapation with distilling: 0.0001
training loss: tensor(0.3873) feature loss: tensor(0.1966)
Local adapation with distilling: 0.0001
training loss: tensor(0.4340) feature loss: tensor(0.2054)
Local adapation with distilling: 0.0001
training loss: tensor(0.4365) feature loss: tensor(0.2153)
Local adapation with distilling: 0.0001
training loss: tensor(0.4404) feature loss: tensor(0.2201)
Local adapation with distilling: 0.0001
training loss: tensor(0.4517) feature loss: tensor(0.2213)
Local adapation with distilling: 0.0001
training loss: tensor(0.4928) feature loss: tensor(0.2002)
Global Model Acc on global data: 0.5924 length of data: 10000
-------------Round number:  64  -------------
selected users: [17, 22, 60, 92, 23, 19, 71, 94, 40, 49]
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
all data: 244
Local adapation with distilling: 0.0001
training loss: tensor(0.3861) feature loss: tensor(0.2043)
Local adapation with distilling: 0.0001
training loss: tensor(0.6203) feature loss: tensor(0.2014)
Local adapation with distilling: 0.0001
training loss: tensor(0.4070) feature loss: tensor(0.2144)
Local adapation with distilling: 0.0001
training loss: tensor(0.4947) feature loss: tensor(0.2071)
Local adapation with distilling: 0.0001
training loss: tensor(0.5335) feature loss: tensor(0.2112)
Local adapation with distilling: 0.0001
training loss: tensor(0.4047) feature loss: tensor(0.2005)
Local adapation with distilling: 0.0001
training loss: tensor(0.3601) feature loss: tensor(0.1990)
Local adapation with distilling: 0.0001
training loss: tensor(0.4503) feature loss: tensor(0.1983)
Local adapation with distilling: 0.0001
training loss: tensor(0.4163) feature loss: tensor(0.2334)
Local adapation with distilling: 0.0001
training loss: tensor(0.4324) feature loss: tensor(0.2300)
Global Model Acc on global data: 0.5953 length of data: 10000
-------------Round number:  65  -------------
selected users: [37, 81, 39, 61, 76, 90, 27, 86, 28, 69]
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
all data: 248
Local adapation with distilling: 0.0001
training loss: tensor(0.3432) feature loss: tensor(0.1759)
Local adapation with distilling: 0.0001
training loss: tensor(0.6453) feature loss: tensor(0.2033)
Local adapation with distilling: 0.0001
training loss: tensor(0.3682) feature loss: tensor(0.1856)
Local adapation with distilling: 0.0001
training loss: tensor(0.4255) feature loss: tensor(0.1868)
Local adapation with distilling: 0.0001
training loss: tensor(0.3932) feature loss: tensor(0.1845)
Local adapation with distilling: 0.0001
training loss: tensor(0.4797) feature loss: tensor(0.2050)
Local adapation with distilling: 0.0001
training loss: tensor(0.4097) feature loss: tensor(0.1823)
Local adapation with distilling: 0.0001
training loss: tensor(0.3763) feature loss: tensor(0.1790)
Local adapation with distilling: 0.0001
training loss: tensor(0.6894) feature loss: tensor(0.2149)
Local adapation with distilling: 0.0001
training loss: tensor(0.3588) feature loss: tensor(0.1930)
Global Model Acc on global data: 0.6008 length of data: 10000
-------------Round number:  66  -------------
selected users: [8, 93, 4, 5, 52, 41, 0, 73, 88, 68]
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
all data: 246
Local adapation with distilling: 0.0001
training loss: tensor(0.4037) feature loss: tensor(0.2354)
Local adapation with distilling: 0.0001
training loss: tensor(0.4599) feature loss: tensor(0.2209)
Local adapation with distilling: 0.0001
training loss: tensor(0.3968) feature loss: tensor(0.1977)
Local adapation with distilling: 0.0001
training loss: tensor(0.4964) feature loss: tensor(0.1877)
Local adapation with distilling: 0.0001
training loss: tensor(0.6114) feature loss: tensor(0.2040)
Local adapation with distilling: 0.0001
training loss: tensor(0.4096) feature loss: tensor(0.1949)
Local adapation with distilling: 0.0001
training loss: tensor(0.4160) feature loss: tensor(0.2305)
Local adapation with distilling: 0.0001
training loss: tensor(0.4538) feature loss: tensor(0.2478)
Local adapation with distilling: 0.0001
training loss: tensor(0.4161) feature loss: tensor(0.2298)
Local adapation with distilling: 0.0001
training loss: tensor(0.4183) feature loss: tensor(0.2417)
Global Model Acc on global data: 0.6005 length of data: 10000
-------------Round number:  67  -------------
selected users: [17, 24, 64, 93, 97, 29, 3, 70, 82, 11]
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([27, 3, 32, 32]) torch.Size([27])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
all data: 249
Local adapation with distilling: 0.0001
training loss: tensor(0.3315) feature loss: tensor(0.1778)
Local adapation with distilling: 0.0001
training loss: tensor(0.3844) feature loss: tensor(0.1912)
Local adapation with distilling: 0.0001
training loss: tensor(0.4812) feature loss: tensor(0.1771)
Local adapation with distilling: 0.0001
training loss: tensor(0.3977) feature loss: tensor(0.2177)
Local adapation with distilling: 0.0001
training loss: tensor(0.4615) feature loss: tensor(0.2091)
Local adapation with distilling: 0.0001
training loss: tensor(0.3516) feature loss: tensor(0.1935)
Local adapation with distilling: 0.0001
training loss: tensor(0.3979) feature loss: tensor(0.1728)
Local adapation with distilling: 0.0001
training loss: tensor(0.3691) feature loss: tensor(0.2136)
Local adapation with distilling: 0.0001
training loss: tensor(0.4752) feature loss: tensor(0.1876)
Local adapation with distilling: 0.0001
training loss: tensor(0.3776) feature loss: tensor(0.1767)
Global Model Acc on global data: 0.6034 length of data: 10000
save a model
-------------Round number:  68  -------------
selected users: [29, 30, 16, 5, 38, 71, 76, 94, 99, 95]
random features: torch.Size([27, 3, 32, 32]) torch.Size([27])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([27, 3, 32, 32]) torch.Size([27])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
all data: 252
Local adapation with distilling: 0.0001
training loss: tensor(0.2959) feature loss: tensor(0.1558)
Local adapation with distilling: 0.0001
training loss: tensor(0.4541) feature loss: tensor(0.1775)
Local adapation with distilling: 0.0001
training loss: tensor(0.4058) feature loss: tensor(0.1657)
Local adapation with distilling: 0.0001
training loss: tensor(0.3977) feature loss: tensor(0.1757)
Local adapation with distilling: 0.0001
training loss: tensor(0.2967) feature loss: tensor(0.1867)
Local adapation with distilling: 0.0001
training loss: tensor(0.2915) feature loss: tensor(0.1622)
Local adapation with distilling: 0.0001
training loss: tensor(0.3544) feature loss: tensor(0.1638)
Local adapation with distilling: 0.0001
training loss: tensor(0.3291) feature loss: tensor(0.1881)
Local adapation with distilling: 0.0001
training loss: tensor(0.3685) feature loss: tensor(0.1878)
Local adapation with distilling: 0.0001
training loss: tensor(0.3198) feature loss: tensor(0.1688)
Global Model Acc on global data: 0.6043 length of data: 10000
save a model
-------------Round number:  69  -------------
selected users: [72, 31, 13, 83, 33, 8, 26, 89, 64, 97]
random features: torch.Size([28, 3, 32, 32]) torch.Size([28])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([27, 3, 32, 32]) torch.Size([27])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
all data: 250
Local adapation with distilling: 0.0001
training loss: tensor(0.4144) feature loss: tensor(0.1920)
Local adapation with distilling: 0.0001
training loss: tensor(0.4376) feature loss: tensor(0.1674)
Local adapation with distilling: 0.0001
training loss: tensor(0.4603) feature loss: tensor(0.1972)
Local adapation with distilling: 0.0001
training loss: tensor(0.4257) feature loss: tensor(0.2111)
Local adapation with distilling: 0.0001
training loss: tensor(0.3969) feature loss: tensor(0.1890)
Local adapation with distilling: 0.0001
training loss: tensor(0.3785) feature loss: tensor(0.1829)
Local adapation with distilling: 0.0001
training loss: tensor(0.3845) feature loss: tensor(0.1966)
Local adapation with distilling: 0.0001
training loss: tensor(0.3465) feature loss: tensor(0.1672)
Local adapation with distilling: 0.0001
training loss: tensor(0.4438) feature loss: tensor(0.1680)
Local adapation with distilling: 0.0001
training loss: tensor(0.4358) feature loss: tensor(0.2030)
Global Model Acc on global data: 0.5997 length of data: 10000
-------------Round number:  70  -------------
selected users: [81, 43, 88, 32, 50, 71, 73, 55, 42, 2]
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
all data: 243
Local adapation with distilling: 0.0001
training loss: tensor(0.6221) feature loss: tensor(0.2042)
Local adapation with distilling: 0.0001
training loss: tensor(0.4327) feature loss: tensor(0.1929)
Local adapation with distilling: 0.0001
training loss: tensor(0.4037) feature loss: tensor(0.2289)
Local adapation with distilling: 0.0001
training loss: tensor(0.4960) feature loss: tensor(0.1946)
Local adapation with distilling: 0.0001
training loss: tensor(0.3960) feature loss: tensor(0.2187)
Local adapation with distilling: 0.0001
training loss: tensor(0.3393) feature loss: tensor(0.1884)
Local adapation with distilling: 0.0001
training loss: tensor(0.3891) feature loss: tensor(0.2254)
Local adapation with distilling: 0.0001
training loss: tensor(0.4008) feature loss: tensor(0.2096)
Local adapation with distilling: 0.0001
training loss: tensor(0.4365) feature loss: tensor(0.2007)
Local adapation with distilling: 0.0001
training loss: tensor(0.3819) feature loss: tensor(0.2049)
Global Model Acc on global data: 0.6044 length of data: 10000
save a model
-------------Round number:  71  -------------
selected users: [41, 84, 98, 42, 75, 25, 60, 19, 52, 29]
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([27, 3, 32, 32]) torch.Size([27])
all data: 244
Local adapation with distilling: 0.0001
training loss: tensor(0.3561) feature loss: tensor(0.2152)
Local adapation with distilling: 0.0001
training loss: tensor(0.4092) feature loss: tensor(0.2241)
Local adapation with distilling: 0.0001
training loss: tensor(0.3691) feature loss: tensor(0.2252)
Local adapation with distilling: 0.0001
training loss: tensor(0.3913) feature loss: tensor(0.2103)
Local adapation with distilling: 0.0001
training loss: tensor(0.4250) feature loss: tensor(0.2106)
Local adapation with distilling: 0.0001
training loss: tensor(0.3940) feature loss: tensor(0.1888)
Local adapation with distilling: 0.0001
training loss: tensor(0.4067) feature loss: tensor(0.2340)
Local adapation with distilling: 0.0001
training loss: tensor(0.3721) feature loss: tensor(0.1980)
Local adapation with distilling: 0.0001
training loss: tensor(0.5928) feature loss: tensor(0.2234)
Local adapation with distilling: 0.0001
training loss: tensor(0.3135) feature loss: tensor(0.1906)
Global Model Acc on global data: 0.612 length of data: 10000
save a model
-------------Round number:  72  -------------
selected users: [76, 82, 43, 16, 84, 95, 78, 91, 30, 22]
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
all data: 248
Local adapation with distilling: 0.0001
training loss: tensor(0.3616) feature loss: tensor(0.1723)
Local adapation with distilling: 0.0001
training loss: tensor(0.4045) feature loss: tensor(0.2092)
Local adapation with distilling: 0.0001
training loss: tensor(0.3703) feature loss: tensor(0.2088)
Local adapation with distilling: 0.0001
training loss: tensor(0.3956) feature loss: tensor(0.1857)
Local adapation with distilling: 0.0001
training loss: tensor(0.3795) feature loss: tensor(0.2076)
Local adapation with distilling: 0.0001
training loss: tensor(0.3356) feature loss: tensor(0.1828)
Local adapation with distilling: 0.0001
training loss: tensor(0.4495) feature loss: tensor(0.2231)
Local adapation with distilling: 0.0001
training loss: tensor(0.3805) feature loss: tensor(0.1791)
Local adapation with distilling: 0.0001
training loss: tensor(0.4513) feature loss: tensor(0.2154)
Local adapation with distilling: 0.0001
training loss: tensor(0.5169) feature loss: tensor(0.1844)
Global Model Acc on global data: 0.6047 length of data: 10000
-------------Round number:  73  -------------
selected users: [49, 14, 34, 70, 90, 35, 68, 76, 80, 9]
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
all data: 244
Local adapation with distilling: 0.0001
training loss: tensor(0.4279) feature loss: tensor(0.2151)
Local adapation with distilling: 0.0001
training loss: tensor(0.3893) feature loss: tensor(0.2264)
Local adapation with distilling: 0.0001
training loss: tensor(0.3858) feature loss: tensor(0.1806)
Local adapation with distilling: 0.0001
training loss: tensor(0.3792) feature loss: tensor(0.1983)
Local adapation with distilling: 0.0001
training loss: tensor(0.4120) feature loss: tensor(0.1947)
Local adapation with distilling: 0.0001
training loss: tensor(0.4892) feature loss: tensor(0.1858)
Local adapation with distilling: 0.0001
training loss: tensor(0.4289) feature loss: tensor(0.2084)
Local adapation with distilling: 0.0001
training loss: tensor(0.3420) feature loss: tensor(0.1790)
Local adapation with distilling: 0.0001
training loss: tensor(0.3620) feature loss: tensor(0.1960)
Local adapation with distilling: 0.0001
training loss: tensor(0.7355) feature loss: tensor(0.1991)
Global Model Acc on global data: 0.5951 length of data: 10000
-------------Round number:  74  -------------
selected users: [85, 64, 63, 80, 6, 12, 43, 17, 7, 8]
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
all data: 245
Local adapation with distilling: 0.0001
training loss: tensor(0.3813) feature loss: tensor(0.2091)
Local adapation with distilling: 0.0001
training loss: tensor(0.4110) feature loss: tensor(0.1672)
Local adapation with distilling: 0.0001
training loss: tensor(0.3634) feature loss: tensor(0.2005)
Local adapation with distilling: 0.0001
training loss: tensor(0.3220) feature loss: tensor(0.1792)
Local adapation with distilling: 0.0001
training loss: tensor(0.5017) feature loss: tensor(0.1852)
Local adapation with distilling: 0.0001
training loss: tensor(0.4730) feature loss: tensor(0.1855)
Local adapation with distilling: 0.0001
training loss: tensor(0.3519) feature loss: tensor(0.1739)
Local adapation with distilling: 0.0001
training loss: tensor(0.3223) feature loss: tensor(0.1683)
Local adapation with distilling: 0.0001
training loss: tensor(0.4332) feature loss: tensor(0.1728)
Local adapation with distilling: 0.0001
training loss: tensor(0.3459) feature loss: tensor(0.1970)
Global Model Acc on global data: 0.5993 length of data: 10000
-------------Round number:  75  -------------
selected users: [36, 7, 6, 45, 56, 54, 22, 37, 53, 68]
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([27, 3, 32, 32]) torch.Size([27])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([28, 3, 32, 32]) torch.Size([28])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
all data: 255
Local adapation with distilling: 0.0001
training loss: tensor(0.3953) feature loss: tensor(0.2096)
Local adapation with distilling: 0.0001
training loss: tensor(0.3998) feature loss: tensor(0.1764)
Local adapation with distilling: 0.0001
training loss: tensor(0.4230) feature loss: tensor(0.1829)
Local adapation with distilling: 0.0001
training loss: tensor(0.3827) feature loss: tensor(0.1912)
Local adapation with distilling: 0.0001
training loss: tensor(0.3986) feature loss: tensor(0.1837)
Local adapation with distilling: 0.0001
training loss: tensor(0.5513) feature loss: tensor(0.1947)
Local adapation with distilling: 0.0001
training loss: tensor(0.4816) feature loss: tensor(0.1871)
Local adapation with distilling: 0.0001
training loss: tensor(0.3217) feature loss: tensor(0.1964)
Local adapation with distilling: 0.0001
training loss: tensor(0.3616) feature loss: tensor(0.1885)
Local adapation with distilling: 0.0001
training loss: tensor(0.4196) feature loss: tensor(0.2021)
Global Model Acc on global data: 0.606 length of data: 10000
-------------Round number:  76  -------------
selected users: [38, 37, 32, 50, 10, 94, 19, 44, 86, 23]
random features: torch.Size([27, 3, 32, 32]) torch.Size([27])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
all data: 246
Local adapation with distilling: 0.0001
training loss: tensor(0.3443) feature loss: tensor(0.2216)
Local adapation with distilling: 0.0001
training loss: tensor(0.3078) feature loss: tensor(0.1799)
Local adapation with distilling: 0.0001
training loss: tensor(0.4512) feature loss: tensor(0.1829)
Local adapation with distilling: 0.0001
training loss: tensor(0.3714) feature loss: tensor(0.2023)
Local adapation with distilling: 0.0001
training loss: tensor(0.4038) feature loss: tensor(0.2013)
Local adapation with distilling: 0.0001
training loss: tensor(0.3359) feature loss: tensor(0.1785)
Local adapation with distilling: 0.0001
training loss: tensor(0.3395) feature loss: tensor(0.1661)
Local adapation with distilling: 0.0001
training loss: tensor(0.4203) feature loss: tensor(0.2214)
Local adapation with distilling: 0.0001
training loss: tensor(0.3475) feature loss: tensor(0.1808)
Local adapation with distilling: 0.0001
training loss: tensor(0.4569) feature loss: tensor(0.2048)
Global Model Acc on global data: 0.5946 length of data: 10000
-------------Round number:  77  -------------
selected users: [5, 93, 41, 96, 16, 42, 81, 91, 50, 58]
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
all data: 248
Local adapation with distilling: 0.0001
training loss: tensor(0.4394) feature loss: tensor(0.1987)
Local adapation with distilling: 0.0001
training loss: tensor(0.4179) feature loss: tensor(0.2137)
Local adapation with distilling: 0.0001
training loss: tensor(0.3549) feature loss: tensor(0.1934)
Local adapation with distilling: 0.0001
training loss: tensor(0.7420) feature loss: tensor(0.2222)
Local adapation with distilling: 0.0001
training loss: tensor(0.3835) feature loss: tensor(0.1843)
Local adapation with distilling: 0.0001
training loss: tensor(0.3823) feature loss: tensor(0.1856)
Local adapation with distilling: 0.0001
training loss: tensor(0.6824) feature loss: tensor(0.1952)
Local adapation with distilling: 0.0001
training loss: tensor(0.3957) feature loss: tensor(0.1937)
Local adapation with distilling: 0.0001
training loss: tensor(0.3717) feature loss: tensor(0.2016)
Local adapation with distilling: 0.0001
training loss: tensor(0.3899) feature loss: tensor(0.2094)
Global Model Acc on global data: 0.6074 length of data: 10000
-------------Round number:  78  -------------
selected users: [9, 46, 7, 63, 15, 2, 74, 31, 5, 36]
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
all data: 245
Local adapation with distilling: 0.0001
training loss: tensor(0.6601) feature loss: tensor(0.1637)
Local adapation with distilling: 0.0001
training loss: tensor(0.3047) feature loss: tensor(0.1523)
Local adapation with distilling: 0.0001
training loss: tensor(0.3512) feature loss: tensor(0.1498)
Local adapation with distilling: 0.0001
training loss: tensor(0.3224) feature loss: tensor(0.1808)
Local adapation with distilling: 0.0001
training loss: tensor(0.3678) feature loss: tensor(0.1710)
Local adapation with distilling: 0.0001
training loss: tensor(0.3195) feature loss: tensor(0.1608)
Local adapation with distilling: 0.0001
training loss: tensor(0.3589) feature loss: tensor(0.1737)
Local adapation with distilling: 0.0001
training loss: tensor(0.3551) feature loss: tensor(0.1526)
Local adapation with distilling: 0.0001
training loss: tensor(0.3477) feature loss: tensor(0.1560)
Local adapation with distilling: 0.0001
training loss: tensor(0.3225) feature loss: tensor(0.1706)
Global Model Acc on global data: 0.6096 length of data: 10000
-------------Round number:  79  -------------
selected users: [68, 18, 86, 60, 56, 32, 30, 24, 45, 92]
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([27, 3, 32, 32]) torch.Size([27])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
all data: 245
Local adapation with distilling: 0.0001
training loss: tensor(0.3392) feature loss: tensor(0.1971)
Local adapation with distilling: 0.0001
training loss: tensor(0.3739) feature loss: tensor(0.2091)
Local adapation with distilling: 0.0001
training loss: tensor(0.3165) feature loss: tensor(0.1642)
Local adapation with distilling: 0.0001
training loss: tensor(0.3462) feature loss: tensor(0.1964)
Local adapation with distilling: 0.0001
training loss: tensor(0.3391) feature loss: tensor(0.1773)
Local adapation with distilling: 0.0001
training loss: tensor(0.4232) feature loss: tensor(0.1656)
Local adapation with distilling: 0.0001
training loss: tensor(0.4059) feature loss: tensor(0.1782)
Local adapation with distilling: 0.0001
training loss: tensor(0.3448) feature loss: tensor(0.1853)
Local adapation with distilling: 0.0001
training loss: tensor(0.3442) feature loss: tensor(0.1773)
Local adapation with distilling: 0.0001
training loss: tensor(0.4433) feature loss: tensor(0.1923)
Global Model Acc on global data: 0.6055 length of data: 10000
-------------Round number:  80  -------------
selected users: [37, 65, 95, 53, 66, 30, 73, 85, 45, 36]
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([28, 3, 32, 32]) torch.Size([28])
random features: torch.Size([27, 3, 32, 32]) torch.Size([27])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
all data: 253
Local adapation with distilling: 0.0001
training loss: tensor(0.3323) feature loss: tensor(0.1756)
Local adapation with distilling: 0.0001
training loss: tensor(0.4341) feature loss: tensor(0.2025)
Local adapation with distilling: 0.0001
training loss: tensor(0.3471) feature loss: tensor(0.1901)
Local adapation with distilling: 0.0001
training loss: tensor(0.3692) feature loss: tensor(0.1827)
Local adapation with distilling: 0.0001
training loss: tensor(0.4449) feature loss: tensor(0.1858)
Local adapation with distilling: 0.0001
training loss: tensor(0.4107) feature loss: tensor(0.2029)
Local adapation with distilling: 0.0001
training loss: tensor(0.4014) feature loss: tensor(0.2143)
Local adapation with distilling: 0.0001
training loss: tensor(0.3926) feature loss: tensor(0.2005)
Local adapation with distilling: 0.0001
training loss: tensor(0.3520) feature loss: tensor(0.1756)
Local adapation with distilling: 0.0001
training loss: tensor(0.3535) feature loss: tensor(0.1964)
Global Model Acc on global data: 0.6141 length of data: 10000
save a model
-------------Round number:  81  -------------
selected users: [73, 89, 41, 78, 51, 21, 30, 69, 8, 5]
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([27, 3, 32, 32]) torch.Size([27])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
all data: 245
Local adapation with distilling: 0.0001
training loss: tensor(0.3234) feature loss: tensor(0.2077)
Local adapation with distilling: 0.0001
training loss: tensor(0.3015) feature loss: tensor(0.1620)
Local adapation with distilling: 0.0001
training loss: tensor(0.3224) feature loss: tensor(0.1650)
Local adapation with distilling: 0.0001
training loss: tensor(0.3904) feature loss: tensor(0.2071)
Local adapation with distilling: 0.0001
training loss: tensor(0.4019) feature loss: tensor(0.1731)
Local adapation with distilling: 0.0001
training loss: tensor(0.3848) feature loss: tensor(0.1902)
Local adapation with distilling: 0.0001
training loss: tensor(0.3467) feature loss: tensor(0.2059)
Local adapation with distilling: 0.0001
training loss: tensor(0.3381) feature loss: tensor(0.2067)
Local adapation with distilling: 0.0001
training loss: tensor(0.3078) feature loss: tensor(0.1912)
Local adapation with distilling: 0.0001
training loss: tensor(0.3421) feature loss: tensor(0.1630)
Global Model Acc on global data: 0.6194 length of data: 10000
save a model
-------------Round number:  82  -------------
selected users: [72, 33, 58, 2, 55, 84, 54, 75, 28, 40]
random features: torch.Size([28, 3, 32, 32]) torch.Size([28])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
all data: 247
Local adapation with distilling: 0.0001
training loss: tensor(0.3584) feature loss: tensor(0.1922)
Local adapation with distilling: 0.0001
training loss: tensor(0.3510) feature loss: tensor(0.1853)
Local adapation with distilling: 0.0001
training loss: tensor(0.3343) feature loss: tensor(0.1945)
Local adapation with distilling: 0.0001
training loss: tensor(0.3118) feature loss: tensor(0.1853)
Local adapation with distilling: 0.0001
training loss: tensor(0.3590) feature loss: tensor(0.1784)
Local adapation with distilling: 0.0001
training loss: tensor(0.3746) feature loss: tensor(0.1793)
Local adapation with distilling: 0.0001
training loss: tensor(0.4946) feature loss: tensor(0.1603)
Local adapation with distilling: 0.0001
training loss: tensor(0.3637) feature loss: tensor(0.1818)
Local adapation with distilling: 0.0001
training loss: tensor(0.5457) feature loss: tensor(0.2001)
Local adapation with distilling: 0.0001
training loss: tensor(0.3647) feature loss: tensor(0.1909)
Global Model Acc on global data: 0.6096 length of data: 10000
-------------Round number:  83  -------------
selected users: [6, 65, 95, 84, 61, 12, 30, 69, 35, 1]
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
all data: 247
Local adapation with distilling: 0.0001
training loss: tensor(0.4235) feature loss: tensor(0.1917)
Local adapation with distilling: 0.0001
training loss: tensor(0.3625) feature loss: tensor(0.2193)
Local adapation with distilling: 0.0001
training loss: tensor(0.2954) feature loss: tensor(0.2077)
Local adapation with distilling: 0.0001
training loss: tensor(0.3569) feature loss: tensor(0.2096)
Local adapation with distilling: 0.0001
training loss: tensor(0.3757) feature loss: tensor(0.2121)
Local adapation with distilling: 0.0001
training loss: tensor(0.3854) feature loss: tensor(0.2230)
Local adapation with distilling: 0.0001
training loss: tensor(0.3293) feature loss: tensor(0.2135)
Local adapation with distilling: 0.0001
training loss: tensor(0.3378) feature loss: tensor(0.2313)
Local adapation with distilling: 0.0001
training loss: tensor(0.4190) feature loss: tensor(0.1838)
Local adapation with distilling: 0.0001
training loss: tensor(0.4014) feature loss: tensor(0.2074)
Global Model Acc on global data: 0.6089 length of data: 10000
-------------Round number:  84  -------------
selected users: [94, 55, 80, 1, 90, 11, 32, 8, 6, 82]
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
all data: 245
Local adapation with distilling: 0.0001
training loss: tensor(0.3426) feature loss: tensor(0.2169)
Local adapation with distilling: 0.0001
training loss: tensor(0.3405) feature loss: tensor(0.2544)
Local adapation with distilling: 0.0001
training loss: tensor(0.3540) feature loss: tensor(0.2426)
Local adapation with distilling: 0.0001
training loss: tensor(0.3629) feature loss: tensor(0.1881)
Local adapation with distilling: 0.0001
training loss: tensor(0.4109) feature loss: tensor(0.2494)
Local adapation with distilling: 0.0001
training loss: tensor(0.3435) feature loss: tensor(0.1902)
Local adapation with distilling: 0.0001
training loss: tensor(0.3958) feature loss: tensor(0.2076)
Local adapation with distilling: 0.0001
training loss: tensor(0.3246) feature loss: tensor(0.2272)
Local adapation with distilling: 0.0001
training loss: tensor(0.3735) feature loss: tensor(0.2072)
Local adapation with distilling: 0.0001
training loss: tensor(0.3902) feature loss: tensor(0.2355)
Global Model Acc on global data: 0.6132 length of data: 10000
-------------Round number:  85  -------------
selected users: [81, 25, 40, 87, 41, 23, 10, 89, 50, 54]
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([27, 3, 32, 32]) torch.Size([27])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
all data: 243
Local adapation with distilling: 0.0001
training loss: tensor(0.5385) feature loss: tensor(0.1687)
Local adapation with distilling: 0.0001
training loss: tensor(0.3374) feature loss: tensor(0.1580)
Local adapation with distilling: 0.0001
training loss: tensor(0.3220) feature loss: tensor(0.1771)
Local adapation with distilling: 0.0001
training loss: tensor(0.3654) feature loss: tensor(0.1889)
Local adapation with distilling: 0.0001
training loss: tensor(0.2880) feature loss: tensor(0.1600)
Local adapation with distilling: 0.0001
training loss: tensor(0.3737) feature loss: tensor(0.1834)
Local adapation with distilling: 0.0001
training loss: tensor(0.3371) feature loss: tensor(0.1795)
Local adapation with distilling: 0.0001
training loss: tensor(0.2839) feature loss: tensor(0.1605)
Local adapation with distilling: 0.0001
training loss: tensor(0.3106) feature loss: tensor(0.1686)
Local adapation with distilling: 0.0001
training loss: tensor(0.3894) feature loss: tensor(0.1547)
Global Model Acc on global data: 0.5964 length of data: 10000
-------------Round number:  86  -------------
selected users: [69, 74, 34, 68, 42, 0, 32, 88, 8, 3]
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
all data: 241
Local adapation with distilling: 0.0001
training loss: tensor(0.3332) feature loss: tensor(0.1950)
Local adapation with distilling: 0.0001
training loss: tensor(0.3643) feature loss: tensor(0.1960)
Local adapation with distilling: 0.0001
training loss: tensor(0.3394) feature loss: tensor(0.1697)
Local adapation with distilling: 0.0001
training loss: tensor(0.3592) feature loss: tensor(0.1922)
Local adapation with distilling: 0.0001
training loss: tensor(0.3466) feature loss: tensor(0.1765)
Local adapation with distilling: 0.0001
training loss: tensor(0.3542) feature loss: tensor(0.1884)
Local adapation with distilling: 0.0001
training loss: tensor(0.3550) feature loss: tensor(0.1736)
Local adapation with distilling: 0.0001
training loss: tensor(0.3589) feature loss: tensor(0.1889)
Local adapation with distilling: 0.0001
training loss: tensor(0.3096) feature loss: tensor(0.1900)
Local adapation with distilling: 0.0001
training loss: tensor(0.3510) feature loss: tensor(0.1631)
Global Model Acc on global data: 0.6109 length of data: 10000
-------------Round number:  87  -------------
selected users: [16, 81, 85, 32, 39, 25, 26, 29, 65, 7]
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([27, 3, 32, 32]) torch.Size([27])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
all data: 250
Local adapation with distilling: 0.0001
training loss: tensor(0.3229) feature loss: tensor(0.1580)
Local adapation with distilling: 0.0001
training loss: tensor(0.5279) feature loss: tensor(0.1593)
Local adapation with distilling: 0.0001
training loss: tensor(0.3319) feature loss: tensor(0.1918)
Local adapation with distilling: 0.0001
training loss: tensor(0.3132) feature loss: tensor(0.1638)
Local adapation with distilling: 0.0001
training loss: tensor(0.3525) feature loss: tensor(0.1647)
Local adapation with distilling: 0.0001
training loss: tensor(0.3221) feature loss: tensor(0.1694)
Local adapation with distilling: 0.0001
training loss: tensor(0.3400) feature loss: tensor(0.1815)
Local adapation with distilling: 0.0001
training loss: tensor(0.2869) feature loss: tensor(0.1550)
Local adapation with distilling: 0.0001
training loss: tensor(0.3509) feature loss: tensor(0.1858)
Local adapation with distilling: 0.0001
training loss: tensor(0.3513) feature loss: tensor(0.1565)
Global Model Acc on global data: 0.6144 length of data: 10000
-------------Round number:  88  -------------
selected users: [95, 53, 43, 84, 2, 74, 55, 31, 54, 97]
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([28, 3, 32, 32]) torch.Size([28])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
all data: 246
Local adapation with distilling: 0.0001
training loss: tensor(0.3039) feature loss: tensor(0.1661)
Local adapation with distilling: 0.0001
training loss: tensor(0.3223) feature loss: tensor(0.1595)
Local adapation with distilling: 0.0001
training loss: tensor(0.3450) feature loss: tensor(0.1685)
Local adapation with distilling: 0.0001
training loss: tensor(0.3402) feature loss: tensor(0.1731)
Local adapation with distilling: 0.0001
training loss: tensor(0.3258) feature loss: tensor(0.1776)
Local adapation with distilling: 0.0001
training loss: tensor(0.3525) feature loss: tensor(0.1958)
Local adapation with distilling: 0.0001
training loss: tensor(0.3391) feature loss: tensor(0.1686)
Local adapation with distilling: 0.0001
training loss: tensor(0.3542) feature loss: tensor(0.1826)
Local adapation with distilling: 0.0001
training loss: tensor(0.4367) feature loss: tensor(0.1627)
Local adapation with distilling: 0.0001
training loss: tensor(0.3913) feature loss: tensor(0.2022)
Global Model Acc on global data: 0.6203 length of data: 10000
save a model
-------------Round number:  89  -------------
selected users: [65, 21, 87, 6, 46, 74, 44, 60, 72, 5]
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([28, 3, 32, 32]) torch.Size([28])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
all data: 245
Local adapation with distilling: 0.0001
training loss: tensor(0.3477) feature loss: tensor(0.1905)
Local adapation with distilling: 0.0001
training loss: tensor(0.3564) feature loss: tensor(0.1863)
Local adapation with distilling: 0.0001
training loss: tensor(0.3896) feature loss: tensor(0.1885)
Local adapation with distilling: 0.0001
training loss: tensor(0.3612) feature loss: tensor(0.1670)
Local adapation with distilling: 0.0001
training loss: tensor(0.3384) feature loss: tensor(0.1702)
Local adapation with distilling: 0.0001
training loss: tensor(0.3282) feature loss: tensor(0.2036)
Local adapation with distilling: 0.0001
training loss: tensor(0.3835) feature loss: tensor(0.1815)
Local adapation with distilling: 0.0001
training loss: tensor(0.3361) feature loss: tensor(0.2035)
Local adapation with distilling: 0.0001
training loss: tensor(0.3680) feature loss: tensor(0.2039)
Local adapation with distilling: 0.0001
training loss: tensor(0.3585) feature loss: tensor(0.1679)
Global Model Acc on global data: 0.6247 length of data: 10000
save a model
-------------Round number:  90  -------------
selected users: [25, 85, 96, 89, 65, 94, 5, 35, 36, 92]
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([27, 3, 32, 32]) torch.Size([27])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
all data: 250
Local adapation with distilling: 0.0001
training loss: tensor(0.3090) feature loss: tensor(0.1721)
Local adapation with distilling: 0.0001
training loss: tensor(0.3300) feature loss: tensor(0.1943)
Local adapation with distilling: 0.0001
training loss: tensor(0.5888) feature loss: tensor(0.2083)
Local adapation with distilling: 0.0001
training loss: tensor(0.2903) feature loss: tensor(0.1803)
Local adapation with distilling: 0.0001
training loss: tensor(0.3187) feature loss: tensor(0.1862)
Local adapation with distilling: 0.0001
training loss: tensor(0.3150) feature loss: tensor(0.1837)
Local adapation with distilling: 0.0001
training loss: tensor(0.3090) feature loss: tensor(0.1680)
Local adapation with distilling: 0.0001
training loss: tensor(0.4201) feature loss: tensor(0.1720)
Local adapation with distilling: 0.0001
training loss: tensor(0.3321) feature loss: tensor(0.2116)
Local adapation with distilling: 0.0001
training loss: tensor(0.3732) feature loss: tensor(0.1903)
Global Model Acc on global data: 0.6172 length of data: 10000
-------------Round number:  91  -------------
selected users: [75, 25, 3, 52, 78, 54, 59, 26, 62, 97]
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
all data: 249
Local adapation with distilling: 0.0001
training loss: tensor(0.2885) feature loss: tensor(0.1452)
Local adapation with distilling: 0.0001
training loss: tensor(0.2531) feature loss: tensor(0.1370)
Local adapation with distilling: 0.0001
training loss: tensor(0.2997) feature loss: tensor(0.1322)
Local adapation with distilling: 0.0001
training loss: tensor(0.4694) feature loss: tensor(0.1449)
Local adapation with distilling: 0.0001
training loss: tensor(0.3338) feature loss: tensor(0.1695)
Local adapation with distilling: 0.0001
training loss: tensor(0.3027) feature loss: tensor(0.1342)
Local adapation with distilling: 0.0001
training loss: tensor(0.2893) feature loss: tensor(0.1309)
Local adapation with distilling: 0.0001
training loss: tensor(0.2870) feature loss: tensor(0.1563)
Local adapation with distilling: 0.0001
training loss: tensor(0.3587) feature loss: tensor(0.1488)
Local adapation with distilling: 0.0001
training loss: tensor(0.3209) feature loss: tensor(0.1623)
Global Model Acc on global data: 0.6027 length of data: 10000
-------------Round number:  92  -------------
selected users: [25, 99, 73, 61, 66, 36, 23, 83, 77, 6]
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([27, 3, 32, 32]) torch.Size([27])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
all data: 249
Local adapation with distilling: 0.0001
training loss: tensor(0.3261) feature loss: tensor(0.1749)
Local adapation with distilling: 0.0001
training loss: tensor(0.4029) feature loss: tensor(0.2008)
Local adapation with distilling: 0.0001
training loss: tensor(0.3779) feature loss: tensor(0.2022)
Local adapation with distilling: 0.0001
training loss: tensor(0.3911) feature loss: tensor(0.1808)
Local adapation with distilling: 0.0001
training loss: tensor(0.4026) feature loss: tensor(0.1781)
Local adapation with distilling: 0.0001
training loss: tensor(0.3564) feature loss: tensor(0.1895)
Local adapation with distilling: 0.0001
training loss: tensor(0.4117) feature loss: tensor(0.1832)
Local adapation with distilling: 0.0001
training loss: tensor(0.4327) feature loss: tensor(0.2180)
Local adapation with distilling: 0.0001
training loss: tensor(0.5018) feature loss: tensor(0.1935)
Local adapation with distilling: 0.0001
training loss: tensor(0.3490) feature loss: tensor(0.1731)
Global Model Acc on global data: 0.6042 length of data: 10000
-------------Round number:  93  -------------
selected users: [75, 82, 56, 27, 42, 35, 1, 97, 66, 61]
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([27, 3, 32, 32]) torch.Size([27])
random features: torch.Size([24, 3, 32, 32]) torch.Size([24])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([26, 3, 32, 32]) torch.Size([26])
random features: torch.Size([23, 3, 32, 32]) torch.Size([23])
random features: torch.Size([27, 3, 32, 32]) torch.Size([27])
random features: torch.Size([25, 3, 32, 32]) torch.Size([25])
all data: 248
Local adapation with distilling: 0.0001
training loss: tensor(0.3381) feature loss: tensor(0.2285)
Local adapation with distilling: 0.0001
