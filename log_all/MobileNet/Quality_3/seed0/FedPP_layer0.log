nohup: ignoring input
================================================================================
Summary of training process:
Dataset:                 Cifar10
Batch size:              64
Learing rate :           0.001
personal learning rate : 0.001
Number of total clients: 100
Split parameter        : 3.0
Clients per round      : 10
Number of global rounds: 100
Number of local rounds : 10
Feature from layer     : 0
Feature reduction      : 64
Local training loss    : CE_KL2
Loss of beta           : 1.0
Algorithm              : FedPP
Modelname              : MOBNET
Mode                   : training
================================================================================
Files already downloaded and verified
Files already downloaded and verified
Class frequencies:
client,class0,class1,class2,class3,class4,class5,class6,class7,class8,class9,Amount
Client   0,0.298,0.00,0.00,0.00,0.00,0.375,0.00,0.00,0.327,0.00,496
Client   1,0.00,0.321,0.00,0.00,0.00,0.358,0.00,0.00,0.00,0.321,520
Client   2,0.307,0.346,0.346,0.00,0.00,0.00,0.00,0.00,0.00,0.00,482
Client   3,0.00,0.00,0.00,0.337,0.00,0.00,0.377,0.286,0.00,0.00,531
Client   4,0.00,0.00,0.340,0.00,0.320,0.00,0.00,0.00,0.00,0.340,491
Client   5,0.00,0.00,0.327,0.00,0.308,0.365,0.00,0.00,0.00,0.00,510
Client   6,0.00,0.00,0.319,0.00,0.300,0.00,0.382,0.00,0.00,0.00,524
Client   7,0.00,0.00,0.00,0.00,0.330,0.00,0.00,0.319,0.00,0.351,476
Client   8,0.00,0.347,0.00,0.00,0.00,0.00,0.00,0.316,0.337,0.00,481
Client   9,0.286,0.00,0.00,0.00,0.00,0.00,0.389,0.00,0.00,0.325,514
Client  10,0.315,0.00,0.00,0.00,0.00,0.00,0.00,0.326,0.00,0.358,466
Client  11,0.00,0.313,0.00,0.00,0.00,0.00,0.375,0.00,0.00,0.313,534
Client  12,0.306,0.347,0.347,0.00,0.00,0.00,0.00,0.00,0.00,0.00,481
Client  13,0.00,0.329,0.00,0.352,0.00,0.00,0.00,0.00,0.319,0.00,508
Client  14,0.00,0.00,0.00,0.359,0.315,0.00,0.00,0.00,0.325,0.00,498
Client  15,0.00,0.00,0.00,0.00,0.00,0.361,0.00,0.00,0.315,0.324,515
Client  16,0.00,0.00,0.00,0.337,0.00,0.00,0.377,0.286,0.00,0.00,531
Client  17,0.00,0.00,0.00,0.00,0.00,0.346,0.372,0.283,0.00,0.00,538
Client  18,0.00,0.337,0.00,0.00,0.00,0.00,0.00,0.00,0.327,0.337,496
Client  19,0.00,0.00,0.00,0.356,0.312,0.00,0.00,0.00,0.00,0.332,503
Client  20,0.309,0.351,0.00,0.00,0.00,0.00,0.00,0.00,0.340,0.00,476
Client  21,0.312,0.355,0.00,0.00,0.333,0.00,0.00,0.00,0.00,0.00,471
Client  22,0.00,0.00,0.326,0.349,0.00,0.00,0.00,0.00,0.00,0.326,513
Client  23,0.298,0.00,0.339,0.363,0.00,0.00,0.00,0.00,0.00,0.00,493
Client  24,0.00,0.00,0.340,0.00,0.320,0.00,0.00,0.00,0.00,0.340,491
Client  25,0.00,0.00,0.00,0.00,0.00,0.367,0.00,0.302,0.00,0.331,504
Client  26,0.00,0.00,0.00,0.00,0.00,0.00,0.378,0.00,0.306,0.316,529
Client  27,0.00,0.00,0.00,0.368,0.320,0.00,0.00,0.312,0.00,0.00,487
Client  28,0.00,0.00,0.00,0.00,0.00,0.360,0.00,0.00,0.315,0.325,514
Client  29,0.00,0.00,0.00,0.328,0.00,0.00,0.366,0.00,0.00,0.306,546
Client  30,0.309,0.00,0.352,0.00,0.00,0.00,0.00,0.00,0.339,0.00,475
Client  31,0.00,0.344,0.00,0.00,0.00,0.00,0.00,0.313,0.00,0.344,486
Client  32,0.00,0.00,0.335,0.359,0.00,0.00,0.00,0.305,0.00,0.00,498
Client  33,0.302,0.00,0.00,0.368,0.00,0.00,0.00,0.00,0.331,0.00,487
Client  34,0.00,0.352,0.00,0.00,0.328,0.00,0.00,0.320,0.00,0.00,475
Client  35,0.00,0.315,0.00,0.337,0.00,0.348,0.00,0.00,0.00,0.00,531
Client  36,0.289,0.00,0.00,0.00,0.00,0.00,0.394,0.00,0.317,0.00,508
Client  37,0.00,0.00,0.00,0.00,0.307,0.00,0.394,0.299,0.00,0.00,508
Client  38,0.00,0.00,0.00,0.00,0.00,0.339,0.366,0.00,0.295,0.00,546
Client  39,0.00,0.00,0.322,0.00,0.00,0.356,0.00,0.00,0.00,0.322,519
Client  40,0.320,0.00,0.00,0.00,0.00,0.00,0.00,0.330,0.350,0.00,460
Client  41,0.00,0.352,0.00,0.00,0.328,0.00,0.00,0.320,0.00,0.00,475
Client  42,0.00,0.00,0.352,0.00,0.328,0.00,0.00,0.320,0.00,0.00,475
Client  43,0.298,0.00,0.00,0.363,0.00,0.00,0.00,0.00,0.00,0.339,493
Client  44,0.313,0.00,0.355,0.00,0.332,0.00,0.00,0.00,0.00,0.00,470
Client  45,0.00,0.331,0.00,0.00,0.00,0.367,0.00,0.302,0.00,0.00,504
Client  46,0.00,0.00,0.00,0.00,0.00,0.00,0.385,0.293,0.00,0.322,519
Client  47,0.00,0.00,0.00,0.00,0.333,0.00,0.00,0.323,0.344,0.00,468
Client  48,0.309,0.352,0.00,0.00,0.00,0.00,0.00,0.00,0.339,0.00,475
Client  49,0.00,0.00,0.337,0.00,0.00,0.00,0.00,0.00,0.325,0.337,495
Client  50,0.298,0.339,0.00,0.363,0.00,0.00,0.00,0.00,0.00,0.00,493
Client  51,0.00,0.344,0.344,0.00,0.00,0.00,0.00,0.311,0.00,0.00,485
Client  52,0.286,0.00,0.325,0.00,0.00,0.00,0.389,0.00,0.00,0.00,514
Client  53,0.00,0.00,0.326,0.350,0.00,0.00,0.00,0.00,0.00,0.324,512
Client  54,0.00,0.00,0.319,0.00,0.298,0.00,0.382,0.00,0.00,0.00,523
Client  55,0.304,0.00,0.00,0.00,0.00,0.383,0.00,0.313,0.00,0.00,483
Client  56,0.00,0.303,0.00,0.00,0.00,0.335,0.362,0.00,0.00,0.00,552
Client  57,0.00,0.00,0.00,0.00,0.308,0.00,0.394,0.298,0.00,0.00,507
Client  58,0.289,0.00,0.00,0.00,0.00,0.00,0.394,0.00,0.317,0.00,508
Client  59,0.00,0.322,0.00,0.00,0.00,0.357,0.00,0.00,0.00,0.320,518
Client  60,0.306,0.347,0.347,0.00,0.00,0.00,0.00,0.00,0.00,0.00,481
Client  61,0.00,0.327,0.00,0.00,0.308,0.365,0.00,0.00,0.00,0.00,507
Client  62,0.316,0.00,0.359,0.00,0.00,0.00,0.00,0.325,0.00,0.00,465
Client  63,0.00,0.00,0.00,0.354,0.00,0.00,0.00,0.00,0.318,0.328,506
Client  64,0.00,0.00,0.00,0.00,0.317,0.376,0.00,0.307,0.00,0.00,492
Client  65,0.295,0.00,0.00,0.00,0.00,0.371,0.00,0.00,0.00,0.333,498
Client  66,0.00,0.00,0.00,0.327,0.00,0.00,0.368,0.00,0.00,0.305,544
Client  67,0.00,0.351,0.00,0.00,0.330,0.00,0.00,0.319,0.00,0.00,473
Client  68,0.00,0.00,0.00,0.00,0.302,0.00,0.387,0.00,0.311,0.00,517
Client  69,0.00,0.00,0.337,0.00,0.00,0.00,0.00,0.00,0.327,0.337,493
Client  70,0.304,0.00,0.00,0.00,0.00,0.383,0.00,0.313,0.00,0.00,483
Client  71,0.00,0.327,0.00,0.00,0.308,0.365,0.00,0.00,0.00,0.00,507
Client  72,0.00,0.00,0.324,0.00,0.00,0.361,0.00,0.00,0.314,0.00,512
Client  73,0.00,0.00,0.00,0.340,0.00,0.353,0.00,0.00,0.307,0.00,524
Client  74,0.00,0.344,0.00,0.00,0.323,0.00,0.00,0.00,0.333,0.00,483
Client  75,0.304,0.00,0.00,0.00,0.00,0.383,0.00,0.313,0.00,0.00,483
Client  76,0.00,0.00,0.00,0.333,0.292,0.00,0.375,0.00,0.00,0.00,534
Client  77,0.317,0.00,0.358,0.00,0.00,0.00,0.00,0.325,0.00,0.00,464
Client  78,0.00,0.00,0.00,0.340,0.00,0.353,0.00,0.00,0.307,0.00,524
Client  79,0.00,0.333,0.333,0.00,0.00,0.00,0.00,0.00,0.00,0.333,498
Client  80,0.306,0.00,0.00,0.370,0.324,0.00,0.00,0.00,0.00,0.00,481
Client  81,0.287,0.324,0.00,0.00,0.00,0.00,0.390,0.00,0.00,0.00,513
Client  82,0.317,0.00,0.358,0.00,0.00,0.00,0.00,0.325,0.00,0.00,464
Client  83,0.00,0.00,0.329,0.352,0.00,0.00,0.00,0.00,0.319,0.00,505
Client  84,0.306,0.00,0.00,0.370,0.324,0.00,0.00,0.00,0.00,0.00,481
Client  85,0.00,0.00,0.00,0.00,0.311,0.369,0.00,0.00,0.321,0.00,502
Client  86,0.00,0.00,0.312,0.00,0.00,0.00,0.376,0.00,0.00,0.312,532
Client  87,0.309,0.00,0.00,0.374,0.00,0.00,0.00,0.317,0.00,0.00,476
Client  88,0.00,0.344,0.00,0.00,0.323,0.00,0.00,0.00,0.333,0.00,483
Client  89,0.00,0.00,0.00,0.327,0.00,0.00,0.368,0.00,0.00,0.305,544
Client  90,0.309,0.00,0.00,0.374,0.00,0.00,0.00,0.317,0.00,0.00,476
Client  91,0.00,0.314,0.00,0.336,0.00,0.350,0.00,0.00,0.00,0.00,529
Client  92,0.313,0.00,0.354,0.00,0.333,0.00,0.00,0.00,0.00,0.00,469
Client  93,0.00,0.00,0.00,0.340,0.00,0.353,0.00,0.00,0.307,0.00,524
Client  94,0.00,0.00,0.00,0.00,0.308,0.00,0.394,0.298,0.00,0.00,507
Client  95,0.00,0.331,0.00,0.00,0.00,0.369,0.00,0.301,0.00,0.00,502
Client  96,0.287,0.00,0.324,0.00,0.00,0.00,0.390,0.00,0.00,0.00,513
Client  97,0.00,0.00,0.347,0.00,0.00,0.00,0.00,0.316,0.337,0.00,478
Client  98,0.00,0.344,0.00,0.00,0.323,0.00,0.00,0.00,0.333,0.00,483
Client  99,0.313,0.00,0.00,0.00,0.333,0.00,0.00,0.00,0.00,0.354,469
0 [0 5 8] [0 5 8] [1 2 3 4 6 7 9]
0 training: Counter({5: 186, 8: 162, 0: 148}) testing iid: Counter({8: 1000, 0: 1000, 5: 1000})
1 [1 5 9] [1 5 9] [0 2 3 4 6 7 8]
1 training: Counter({5: 186, 1: 167, 9: 167}) testing iid: Counter({1: 1000, 9: 1000, 5: 1000})
2 [0 1 2] [0 1 2] [3 4 5 6 7 8 9]
2 training: Counter({1: 167, 2: 167, 0: 148}) testing iid: Counter({0: 1000, 1: 1000, 2: 1000})
3 [3 6 7] [3 6 7] [0 1 2 4 5 8 9]
3 training: Counter({6: 200, 3: 179, 7: 152}) testing iid: Counter({3: 1000, 6: 1000, 7: 1000})
4 [2 4 9] [2 4 9] [0 1 3 5 6 7 8]
4 training: Counter({2: 167, 9: 167, 4: 157}) testing iid: Counter({9: 1000, 4: 1000, 2: 1000})
5 [2 4 5] [2 4 5] [0 1 3 6 7 8 9]
5 training: Counter({5: 186, 2: 167, 4: 157}) testing iid: Counter({5: 1000, 4: 1000, 2: 1000})
6 [2 4 6] [2 4 6] [0 1 3 5 7 8 9]
6 training: Counter({6: 200, 2: 167, 4: 157}) testing iid: Counter({6: 1000, 4: 1000, 2: 1000})
7 [4 7 9] [4 7 9] [0 1 2 3 5 6 8]
7 training: Counter({9: 167, 4: 157, 7: 152}) testing iid: Counter({9: 1000, 7: 1000, 4: 1000})
8 [1 7 8] [1 7 8] [0 2 3 4 5 6 9]
8 training: Counter({1: 167, 8: 162, 7: 152}) testing iid: Counter({8: 1000, 1: 1000, 7: 1000})
9 [0 6 9] [0 6 9] [1 2 3 4 5 7 8]
9 training: Counter({6: 200, 9: 167, 0: 147}) testing iid: Counter({0: 1000, 6: 1000, 9: 1000})
10 [0 7 9] [0 7 9] [1 2 3 4 5 6 8]
10 training: Counter({9: 167, 7: 152, 0: 147}) testing iid: Counter({0: 1000, 9: 1000, 7: 1000})
11 [1 6 9] [1 6 9] [0 2 3 4 5 7 8]
11 training: Counter({6: 200, 1: 167, 9: 167}) testing iid: Counter({6: 1000, 1: 1000, 9: 1000})
12 [0 1 2] [0 1 2] [3 4 5 6 7 8 9]
12 training: Counter({1: 167, 2: 167, 0: 147}) testing iid: Counter({0: 1000, 1: 1000, 2: 1000})
13 [1 3 8] [1 3 8] [0 2 4 5 6 7 9]
13 training: Counter({3: 179, 1: 167, 8: 162}) testing iid: Counter({3: 1000, 8: 1000, 1: 1000})
14 [3 4 8] [3 4 8] [0 1 2 5 6 7 9]
14 training: Counter({3: 179, 8: 162, 4: 157}) testing iid: Counter({3: 1000, 8: 1000, 4: 1000})
15 [5 8 9] [5 8 9] [0 1 2 3 4 6 7]
15 training: Counter({5: 186, 9: 167, 8: 162}) testing iid: Counter({8: 1000, 9: 1000, 5: 1000})
16 [3 6 7] [3 6 7] [0 1 2 4 5 8 9]
16 training: Counter({6: 200, 3: 179, 7: 152}) testing iid: Counter({3: 1000, 6: 1000, 7: 1000})
17 [5 6 7] [5 6 7] [0 1 2 3 4 8 9]
17 training: Counter({6: 200, 5: 186, 7: 152}) testing iid: Counter({6: 1000, 5: 1000, 7: 1000})
18 [1 8 9] [1 8 9] [0 2 3 4 5 6 7]
18 training: Counter({1: 167, 9: 167, 8: 162}) testing iid: Counter({8: 1000, 1: 1000, 9: 1000})
19 [3 4 9] [3 4 9] [0 1 2 5 6 7 8]
19 training: Counter({3: 179, 9: 167, 4: 157}) testing iid: Counter({3: 1000, 9: 1000, 4: 1000})
20 [0 1 8] [0 1 8] [2 3 4 5 6 7 9]
20 training: Counter({1: 167, 8: 162, 0: 147}) testing iid: Counter({8: 1000, 0: 1000, 1: 1000})
21 [0 1 4] [0 1 4] [2 3 5 6 7 8 9]
21 training: Counter({1: 167, 4: 157, 0: 147}) testing iid: Counter({0: 1000, 1: 1000, 4: 1000})
22 [2 3 9] [2 3 9] [0 1 4 5 6 7 8]
22 training: Counter({3: 179, 2: 167, 9: 167}) testing iid: Counter({3: 1000, 9: 1000, 2: 1000})
23 [0 2 3] [0 2 3] [1 4 5 6 7 8 9]
23 training: Counter({3: 179, 2: 167, 0: 147}) testing iid: Counter({3: 1000, 0: 1000, 2: 1000})
24 [2 4 9] [2 4 9] [0 1 3 5 6 7 8]
24 training: Counter({2: 167, 9: 167, 4: 157}) testing iid: Counter({9: 1000, 4: 1000, 2: 1000})
25 [5 7 9] [5 7 9] [0 1 2 3 4 6 8]
25 training: Counter({5: 185, 9: 167, 7: 152}) testing iid: Counter({9: 1000, 5: 1000, 7: 1000})
26 [6 8 9] [6 8 9] [0 1 2 3 4 5 7]
26 training: Counter({6: 200, 9: 167, 8: 162}) testing iid: Counter({8: 1000, 6: 1000, 9: 1000})
27 [3 4 7] [3 4 7] [0 1 2 5 6 8 9]
27 training: Counter({3: 179, 4: 156, 7: 152}) testing iid: Counter({3: 1000, 7: 1000, 4: 1000})
28 [5 8 9] [5 8 9] [0 1 2 3 4 6 7]
28 training: Counter({5: 185, 9: 167, 8: 162}) testing iid: Counter({8: 1000, 9: 1000, 5: 1000})
29 [3 6 9] [3 6 9] [0 1 2 4 5 7 8]
29 training: Counter({6: 200, 3: 179, 9: 167}) testing iid: Counter({3: 1000, 6: 1000, 9: 1000})
30 [0 2 8] [0 2 8] [1 3 4 5 6 7 9]
30 training: Counter({2: 167, 8: 161, 0: 147}) testing iid: Counter({8: 1000, 0: 1000, 2: 1000})
31 [1 7 9] [1 7 9] [0 2 3 4 5 6 8]
31 training: Counter({1: 167, 9: 167, 7: 152}) testing iid: Counter({1: 1000, 9: 1000, 7: 1000})
32 [2 3 7] [2 3 7] [0 1 4 5 6 8 9]
32 training: Counter({3: 179, 2: 167, 7: 152}) testing iid: Counter({3: 1000, 7: 1000, 2: 1000})
33 [0 3 8] [0 3 8] [1 2 4 5 6 7 9]
33 training: Counter({3: 179, 8: 161, 0: 147}) testing iid: Counter({3: 1000, 8: 1000, 0: 1000})
34 [1 4 7] [1 4 7] [0 2 3 5 6 8 9]
34 training: Counter({1: 167, 4: 156, 7: 152}) testing iid: Counter({1: 1000, 7: 1000, 4: 1000})
35 [1 3 5] [1 3 5] [0 2 4 6 7 8 9]
35 training: Counter({5: 185, 3: 179, 1: 167}) testing iid: Counter({3: 1000, 1: 1000, 5: 1000})
36 [0 6 8] [0 6 8] [1 2 3 4 5 7 9]
36 training: Counter({6: 200, 8: 161, 0: 147}) testing iid: Counter({8: 1000, 0: 1000, 6: 1000})
37 [4 6 7] [4 6 7] [0 1 2 3 5 8 9]
37 training: Counter({6: 200, 4: 156, 7: 152}) testing iid: Counter({6: 1000, 7: 1000, 4: 1000})
38 [5 6 8] [5 6 8] [0 1 2 3 4 7 9]
38 training: Counter({6: 200, 5: 185, 8: 161}) testing iid: Counter({8: 1000, 6: 1000, 5: 1000})
39 [2 5 9] [2 5 9] [0 1 3 4 6 7 8]
39 training: Counter({5: 185, 2: 167, 9: 167}) testing iid: Counter({9: 1000, 5: 1000, 2: 1000})
40 [0 7 8] [0 7 8] [1 2 3 4 5 6 9]
40 training: Counter({8: 161, 7: 152, 0: 147}) testing iid: Counter({8: 1000, 0: 1000, 7: 1000})
41 [1 4 7] [1 4 7] [0 2 3 5 6 8 9]
41 training: Counter({1: 167, 4: 156, 7: 152}) testing iid: Counter({1: 1000, 7: 1000, 4: 1000})
42 [2 4 7] [2 4 7] [0 1 3 5 6 8 9]
42 training: Counter({2: 167, 4: 156, 7: 152}) testing iid: Counter({7: 1000, 4: 1000, 2: 1000})
43 [0 3 9] [0 3 9] [1 2 4 5 6 7 8]
43 training: Counter({3: 179, 9: 167, 0: 147}) testing iid: Counter({3: 1000, 0: 1000, 9: 1000})
44 [0 2 4] [0 2 4] [1 3 5 6 7 8 9]
44 training: Counter({2: 167, 4: 156, 0: 147}) testing iid: Counter({0: 1000, 4: 1000, 2: 1000})
45 [1 5 7] [1 5 7] [0 2 3 4 6 8 9]
45 training: Counter({5: 185, 1: 167, 7: 152}) testing iid: Counter({1: 1000, 5: 1000, 7: 1000})
46 [6 7 9] [6 7 9] [0 1 2 3 4 5 8]
46 training: Counter({6: 200, 9: 167, 7: 152}) testing iid: Counter({6: 1000, 9: 1000, 7: 1000})
47 [4 7 8] [4 7 8] [0 1 2 3 5 6 9]
47 training: Counter({8: 161, 4: 156, 7: 151}) testing iid: Counter({8: 1000, 7: 1000, 4: 1000})
48 [0 1 8] [0 1 8] [2 3 4 5 6 7 9]
48 training: Counter({1: 167, 8: 161, 0: 147}) testing iid: Counter({8: 1000, 0: 1000, 1: 1000})
49 [2 8 9] [2 8 9] [0 1 3 4 5 6 7]
49 training: Counter({2: 167, 9: 167, 8: 161}) testing iid: Counter({8: 1000, 9: 1000, 2: 1000})
50 [0 1 3] [0 1 3] [2 4 5 6 7 8 9]
50 training: Counter({3: 179, 1: 167, 0: 147}) testing iid: Counter({3: 1000, 0: 1000, 1: 1000})
51 [1 2 7] [1 2 7] [0 3 4 5 6 8 9]
51 training: Counter({1: 167, 2: 167, 7: 151}) testing iid: Counter({1: 1000, 7: 1000, 2: 1000})
52 [0 2 6] [0 2 6] [1 3 4 5 7 8 9]
52 training: Counter({6: 200, 2: 167, 0: 147}) testing iid: Counter({0: 1000, 6: 1000, 2: 1000})
53 [2 3 9] [2 3 9] [0 1 4 5 6 7 8]
53 training: Counter({3: 179, 2: 167, 9: 166}) testing iid: Counter({3: 1000, 9: 1000, 2: 1000})
54 [2 4 6] [2 4 6] [0 1 3 5 7 8 9]
54 training: Counter({6: 200, 2: 167, 4: 156}) testing iid: Counter({6: 1000, 4: 1000, 2: 1000})
55 [0 5 7] [0 5 7] [1 2 3 4 6 8 9]
55 training: Counter({5: 185, 7: 151, 0: 147}) testing iid: Counter({0: 1000, 5: 1000, 7: 1000})
56 [1 5 6] [1 5 6] [0 2 3 4 7 8 9]
56 training: Counter({6: 200, 5: 185, 1: 167}) testing iid: Counter({6: 1000, 1: 1000, 5: 1000})
57 [4 6 7] [4 6 7] [0 1 2 3 5 8 9]
57 training: Counter({6: 200, 4: 156, 7: 151}) testing iid: Counter({6: 1000, 7: 1000, 4: 1000})
58 [0 6 8] [0 6 8] [1 2 3 4 5 7 9]
58 training: Counter({6: 200, 8: 161, 0: 147}) testing iid: Counter({8: 1000, 0: 1000, 6: 1000})
59 [1 5 9] [1 5 9] [0 2 3 4 6 7 8]
59 training: Counter({5: 185, 1: 167, 9: 166}) testing iid: Counter({1: 1000, 9: 1000, 5: 1000})
60 [0 1 2] [0 1 2] [3 4 5 6 7 8 9]
60 training: Counter({1: 167, 2: 167, 0: 147}) testing iid: Counter({0: 1000, 1: 1000, 2: 1000})
61 [1 4 5] [1 4 5] [0 2 3 6 7 8 9]
61 training: Counter({5: 185, 1: 166, 4: 156}) testing iid: Counter({1: 1000, 5: 1000, 4: 1000})
62 [0 2 7] [0 2 7] [1 3 4 5 6 8 9]
62 training: Counter({2: 167, 7: 151, 0: 147}) testing iid: Counter({0: 1000, 7: 1000, 2: 1000})
63 [3 8 9] [3 8 9] [0 1 2 4 5 6 7]
63 training: Counter({3: 179, 9: 166, 8: 161}) testing iid: Counter({3: 1000, 8: 1000, 9: 1000})
64 [4 5 7] [4 5 7] [0 1 2 3 6 8 9]
64 training: Counter({5: 185, 4: 156, 7: 151}) testing iid: Counter({5: 1000, 7: 1000, 4: 1000})
65 [0 5 9] [0 5 9] [1 2 3 4 6 7 8]
65 training: Counter({5: 185, 9: 166, 0: 147}) testing iid: Counter({0: 1000, 9: 1000, 5: 1000})
66 [3 6 9] [3 6 9] [0 1 2 4 5 7 8]
66 training: Counter({6: 200, 3: 178, 9: 166}) testing iid: Counter({3: 1000, 6: 1000, 9: 1000})
67 [1 4 7] [1 4 7] [0 2 3 5 6 8 9]
67 training: Counter({1: 166, 4: 156, 7: 151}) testing iid: Counter({1: 1000, 7: 1000, 4: 1000})
68 [4 6 8] [4 6 8] [0 1 2 3 5 7 9]
68 training: Counter({6: 200, 8: 161, 4: 156}) testing iid: Counter({8: 1000, 6: 1000, 4: 1000})
69 [2 8 9] [2 8 9] [0 1 3 4 5 6 7]
69 training: Counter({2: 166, 9: 166, 8: 161}) testing iid: Counter({8: 1000, 9: 1000, 2: 1000})
70 [0 5 7] [0 5 7] [1 2 3 4 6 8 9]
70 training: Counter({5: 185, 7: 151, 0: 147}) testing iid: Counter({0: 1000, 5: 1000, 7: 1000})
71 [1 4 5] [1 4 5] [0 2 3 6 7 8 9]
71 training: Counter({5: 185, 1: 166, 4: 156}) testing iid: Counter({1: 1000, 5: 1000, 4: 1000})
72 [2 5 8] [2 5 8] [0 1 3 4 6 7 9]
72 training: Counter({5: 185, 2: 166, 8: 161}) testing iid: Counter({8: 1000, 5: 1000, 2: 1000})
73 [3 5 8] [3 5 8] [0 1 2 4 6 7 9]
73 training: Counter({5: 185, 3: 178, 8: 161}) testing iid: Counter({3: 1000, 8: 1000, 5: 1000})
74 [1 4 8] [1 4 8] [0 2 3 5 6 7 9]
74 training: Counter({1: 166, 8: 161, 4: 156}) testing iid: Counter({8: 1000, 1: 1000, 4: 1000})
75 [0 5 7] [0 5 7] [1 2 3 4 6 8 9]
75 training: Counter({5: 185, 7: 151, 0: 147}) testing iid: Counter({0: 1000, 5: 1000, 7: 1000})
76 [3 4 6] [3 4 6] [0 1 2 5 7 8 9]
76 training: Counter({6: 200, 3: 178, 4: 156}) testing iid: Counter({3: 1000, 6: 1000, 4: 1000})
77 [0 2 7] [0 2 7] [1 3 4 5 6 8 9]
77 training: Counter({2: 166, 7: 151, 0: 147}) testing iid: Counter({0: 1000, 7: 1000, 2: 1000})
78 [3 5 8] [3 5 8] [0 1 2 4 6 7 9]
78 training: Counter({5: 185, 3: 178, 8: 161}) testing iid: Counter({3: 1000, 8: 1000, 5: 1000})
79 [1 2 9] [1 2 9] [0 3 4 5 6 7 8]
79 training: Counter({1: 166, 2: 166, 9: 166}) testing iid: Counter({1: 1000, 9: 1000, 2: 1000})
80 [0 3 4] [0 3 4] [1 2 5 6 7 8 9]
80 training: Counter({3: 178, 4: 156, 0: 147}) testing iid: Counter({3: 1000, 0: 1000, 4: 1000})
81 [0 1 6] [0 1 6] [2 3 4 5 7 8 9]
81 training: Counter({6: 200, 1: 166, 0: 147}) testing iid: Counter({0: 1000, 6: 1000, 1: 1000})
82 [0 2 7] [0 2 7] [1 3 4 5 6 8 9]
82 training: Counter({2: 166, 7: 151, 0: 147}) testing iid: Counter({0: 1000, 7: 1000, 2: 1000})
83 [2 3 8] [2 3 8] [0 1 4 5 6 7 9]
83 training: Counter({3: 178, 2: 166, 8: 161}) testing iid: Counter({3: 1000, 8: 1000, 2: 1000})
84 [0 3 4] [0 3 4] [1 2 5 6 7 8 9]
84 training: Counter({3: 178, 4: 156, 0: 147}) testing iid: Counter({3: 1000, 0: 1000, 4: 1000})
85 [4 5 8] [4 5 8] [0 1 2 3 6 7 9]
85 training: Counter({5: 185, 8: 161, 4: 156}) testing iid: Counter({8: 1000, 5: 1000, 4: 1000})
86 [2 6 9] [2 6 9] [0 1 3 4 5 7 8]
86 training: Counter({6: 200, 2: 166, 9: 166}) testing iid: Counter({6: 1000, 9: 1000, 2: 1000})
87 [0 3 7] [0 3 7] [1 2 4 5 6 8 9]
87 training: Counter({3: 178, 7: 151, 0: 147}) testing iid: Counter({3: 1000, 0: 1000, 7: 1000})
88 [1 4 8] [1 4 8] [0 2 3 5 6 7 9]
88 training: Counter({1: 166, 8: 161, 4: 156}) testing iid: Counter({8: 1000, 1: 1000, 4: 1000})
89 [3 6 9] [3 6 9] [0 1 2 4 5 7 8]
89 training: Counter({6: 200, 3: 178, 9: 166}) testing iid: Counter({3: 1000, 6: 1000, 9: 1000})
90 [0 3 7] [0 3 7] [1 2 4 5 6 8 9]
90 training: Counter({3: 178, 7: 151, 0: 147}) testing iid: Counter({3: 1000, 0: 1000, 7: 1000})
91 [1 3 5] [1 3 5] [0 2 4 6 7 8 9]
91 training: Counter({5: 185, 3: 178, 1: 166}) testing iid: Counter({3: 1000, 1: 1000, 5: 1000})
92 [0 2 4] [0 2 4] [1 3 5 6 7 8 9]
92 training: Counter({2: 166, 4: 156, 0: 147}) testing iid: Counter({0: 1000, 4: 1000, 2: 1000})
93 [3 5 8] [3 5 8] [0 1 2 4 6 7 9]
93 training: Counter({5: 185, 3: 178, 8: 161}) testing iid: Counter({3: 1000, 8: 1000, 5: 1000})
94 [4 6 7] [4 6 7] [0 1 2 3 5 8 9]
94 training: Counter({6: 200, 4: 156, 7: 151}) testing iid: Counter({6: 1000, 7: 1000, 4: 1000})
95 [1 5 7] [1 5 7] [0 2 3 4 6 8 9]
95 training: Counter({5: 185, 1: 166, 7: 151}) testing iid: Counter({1: 1000, 5: 1000, 7: 1000})
96 [0 2 6] [0 2 6] [1 3 4 5 7 8 9]
96 training: Counter({6: 200, 2: 166, 0: 147}) testing iid: Counter({0: 1000, 6: 1000, 2: 1000})
97 [2 7 8] [2 7 8] [0 1 3 4 5 6 9]
97 training: Counter({2: 166, 8: 161, 7: 151}) testing iid: Counter({8: 1000, 7: 1000, 2: 1000})
98 [1 4 8] [1 4 8] [0 2 3 5 6 7 9]
98 training: Counter({1: 166, 8: 161, 4: 156}) testing iid: Counter({8: 1000, 1: 1000, 4: 1000})
99 [0 4 9] [0 4 9] [1 2 3 5 6 7 8]
99 training: Counter({9: 166, 4: 156, 0: 147}) testing iid: Counter({0: 1000, 9: 1000, 4: 1000})
Num_samples of Training set per client: [496, 520, 482, 531, 491, 510, 524, 476, 481, 514, 466, 534, 481, 508, 498, 515, 531, 538, 496, 503, 476, 471, 513, 493, 491, 504, 529, 487, 514, 546, 475, 486, 498, 487, 475, 531, 508, 508, 546, 519, 460, 475, 475, 493, 470, 504, 519, 468, 475, 495, 493, 485, 514, 512, 523, 483, 552, 507, 508, 518, 481, 507, 465, 506, 492, 498, 544, 473, 517, 493, 483, 507, 512, 524, 483, 483, 534, 464, 524, 498, 481, 513, 464, 505, 481, 502, 532, 476, 483, 544, 476, 529, 469, 524, 507, 502, 513, 478, 483, 469]
Total_training_samples: 50000
Global test set: 10000
Finish Generating Samples, distribution saved
MobileNetV2(
  (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (layers): Sequential(
    (0): Block(
      (conv1): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): Block(
      (conv1): Conv2d(16, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=96, bias=False)
      (bn2): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(96, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(16, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (2): Block(
      (conv1): Conv2d(24, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=144, bias=False)
      (bn2): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(144, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (3): Block(
      (conv1): Conv2d(24, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(144, 144, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=144, bias=False)
      (bn2): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(144, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (4): Block(
      (conv1): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
      (bn2): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(192, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (5): Block(
      (conv1): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
      (bn2): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(192, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (6): Block(
      (conv1): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(192, 192, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=192, bias=False)
      (bn2): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(192, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (7): Block(
      (conv1): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
      (bn2): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (8): Block(
      (conv1): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
      (bn2): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (9): Block(
      (conv1): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
      (bn2): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (10): Block(
      (conv1): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
      (bn2): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(384, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(64, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (11): Block(
      (conv1): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)
      (bn2): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (12): Block(
      (conv1): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)
      (bn2): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (13): Block(
      (conv1): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(576, 576, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=576, bias=False)
      (bn2): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(576, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (14): Block(
      (conv1): Conv2d(160, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(960, 960, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=960, bias=False)
      (bn2): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(960, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (15): Block(
      (conv1): Conv2d(160, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(960, 960, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=960, bias=False)
      (bn2): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(960, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (16): Block(
      (conv1): Conv2d(160, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(960, 960, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=960, bias=False)
      (bn2): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(960, 320, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(160, 320, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (conv2): Conv2d(320, 1280, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn2): BatchNorm2d(1280, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (linear): Linear(in_features=1280, out_features=10, bias=True)
)
number of parameters: 2296922
clients initializting...
output size: 10
  0%|          | 0/100 [00:00<?, ?it/s]  1%|          | 1/100 [00:00<01:13,  1.34it/s]  2%|▏         | 2/100 [00:01<01:13,  1.34it/s]  3%|▎         | 3/100 [00:02<01:12,  1.34it/s]  4%|▍         | 4/100 [00:06<02:59,  1.87s/it]  5%|▌         | 5/100 [00:07<02:25,  1.53s/it]  6%|▌         | 6/100 [00:08<02:01,  1.29s/it]  7%|▋         | 7/100 [00:08<01:44,  1.12s/it]  8%|▊         | 8/100 [00:09<01:32,  1.00s/it]  9%|▉         | 9/100 [00:10<01:23,  1.09it/s] 10%|█         | 10/100 [00:11<01:17,  1.16it/s] 11%|█         | 11/100 [00:11<01:12,  1.23it/s] 12%|█▏        | 12/100 [00:12<01:09,  1.27it/s] 13%|█▎        | 13/100 [00:13<01:07,  1.29it/s] 14%|█▍        | 14/100 [00:13<01:05,  1.32it/s] 15%|█▌        | 15/100 [00:14<01:02,  1.35it/s] 16%|█▌        | 16/100 [00:15<01:02,  1.35it/s] 17%|█▋        | 17/100 [00:16<01:00,  1.37it/s] 18%|█▊        | 18/100 [00:16<00:59,  1.39it/s] 19%|█▉        | 19/100 [00:17<00:57,  1.41it/s] 20%|██        | 20/100 [00:18<00:56,  1.42it/s] 21%|██        | 21/100 [00:18<00:55,  1.43it/s] 22%|██▏       | 22/100 [00:19<00:53,  1.45it/s] 23%|██▎       | 23/100 [00:20<00:53,  1.43it/s] 24%|██▍       | 24/100 [00:21<00:53,  1.42it/s] 25%|██▌       | 25/100 [00:21<00:52,  1.42it/s] 26%|██▌       | 26/100 [00:22<00:52,  1.42it/s] 27%|██▋       | 27/100 [00:23<00:51,  1.41it/s] 28%|██▊       | 28/100 [00:23<00:50,  1.42it/s] 29%|██▉       | 29/100 [00:24<00:50,  1.42it/s] 30%|███       | 30/100 [00:25<00:50,  1.40it/s] 31%|███       | 31/100 [00:26<00:50,  1.38it/s] 32%|███▏      | 32/100 [00:26<00:48,  1.39it/s] 33%|███▎      | 33/100 [00:27<00:47,  1.40it/s] 34%|███▍      | 34/100 [00:28<00:46,  1.41it/s] 35%|███▌      | 35/100 [00:28<00:45,  1.41it/s] 36%|███▌      | 36/100 [00:29<00:45,  1.40it/s] 37%|███▋      | 37/100 [00:30<00:46,  1.37it/s] 38%|███▊      | 38/100 [00:31<00:46,  1.34it/s] 39%|███▉      | 39/100 [00:35<01:50,  1.82s/it] 40%|████      | 40/100 [00:36<01:29,  1.49s/it] 41%|████      | 41/100 [00:36<01:14,  1.27s/it] 42%|████▏     | 42/100 [00:37<01:04,  1.11s/it] 43%|████▎     | 43/100 [00:38<00:56,  1.00it/s] 44%|████▍     | 44/100 [00:39<00:52,  1.08it/s] 45%|████▌     | 45/100 [00:39<00:47,  1.15it/s] 46%|████▌     | 46/100 [00:40<00:44,  1.20it/s] 47%|████▋     | 47/100 [00:41<00:42,  1.24it/s] 48%|████▊     | 48/100 [00:42<00:41,  1.26it/s] 49%|████▉     | 49/100 [00:42<00:39,  1.28it/s] 50%|█████     | 50/100 [00:43<00:38,  1.28it/s] 51%|█████     | 51/100 [00:44<00:37,  1.29it/s] 52%|█████▏    | 52/100 [00:45<00:36,  1.31it/s] 53%|█████▎    | 53/100 [00:45<00:35,  1.33it/s] 54%|█████▍    | 54/100 [00:46<00:34,  1.34it/s] 55%|█████▌    | 55/100 [00:47<00:33,  1.34it/s] 56%|█████▌    | 56/100 [00:48<00:32,  1.33it/s] 57%|█████▋    | 57/100 [00:48<00:31,  1.34it/s] 58%|█████▊    | 58/100 [00:49<00:30,  1.36it/s] 59%|█████▉    | 59/100 [00:50<00:29,  1.38it/s] 60%|██████    | 60/100 [00:50<00:28,  1.39it/s] 61%|██████    | 61/100 [00:51<00:27,  1.41it/s] 62%|██████▏   | 62/100 [00:52<00:26,  1.41it/s] 63%|██████▎   | 63/100 [00:53<00:26,  1.40it/s] 64%|██████▍   | 64/100 [00:53<00:25,  1.39it/s] 65%|██████▌   | 65/100 [00:54<00:25,  1.38it/s] 66%|██████▌   | 66/100 [00:55<00:24,  1.37it/s] 67%|██████▋   | 67/100 [00:56<00:24,  1.34it/s] 68%|██████▊   | 68/100 [00:56<00:23,  1.34it/s] 69%|██████▉   | 69/100 [00:57<00:23,  1.33it/s] 70%|███████   | 70/100 [00:58<00:22,  1.33it/s] 71%|███████   | 71/100 [00:59<00:21,  1.33it/s] 72%|███████▏  | 72/100 [00:59<00:20,  1.34it/s] 73%|███████▎  | 73/100 [01:00<00:19,  1.35it/s] 74%|███████▍  | 74/100 [01:01<00:19,  1.36it/s] 75%|███████▌  | 75/100 [01:02<00:18,  1.35it/s] 76%|███████▌  | 76/100 [01:06<00:43,  1.82s/it] 77%|███████▋  | 77/100 [01:07<00:34,  1.50s/it] 78%|███████▊  | 78/100 [01:07<00:28,  1.27s/it] 79%|███████▉  | 79/100 [01:08<00:23,  1.10s/it] 80%|████████  | 80/100 [01:09<00:19,  1.00it/s] 81%|████████  | 81/100 [01:10<00:17,  1.09it/s] 82%|████████▏ | 82/100 [01:10<00:15,  1.16it/s] 83%|████████▎ | 83/100 [01:11<00:13,  1.22it/s] 84%|████████▍ | 84/100 [01:12<00:12,  1.28it/s] 85%|████████▌ | 85/100 [01:12<00:11,  1.32it/s] 86%|████████▌ | 86/100 [01:13<00:10,  1.34it/s] 87%|████████▋ | 87/100 [01:14<00:09,  1.34it/s] 88%|████████▊ | 88/100 [01:15<00:08,  1.36it/s] 89%|████████▉ | 89/100 [01:15<00:07,  1.38it/s] 90%|█████████ | 90/100 [01:16<00:07,  1.37it/s] 91%|█████████ | 91/100 [01:17<00:06,  1.37it/s] 92%|█████████▏| 92/100 [01:17<00:05,  1.39it/s] 93%|█████████▎| 93/100 [01:18<00:05,  1.39it/s] 94%|█████████▍| 94/100 [01:19<00:04,  1.41it/s] 95%|█████████▌| 95/100 [01:20<00:03,  1.40it/s] 96%|█████████▌| 96/100 [01:20<00:02,  1.39it/s] 97%|█████████▋| 97/100 [01:21<00:02,  1.39it/s] 98%|█████████▊| 98/100 [01:22<00:01,  1.39it/s] 99%|█████████▉| 99/100 [01:23<00:00,  1.38it/s]100%|██████████| 100/100 [01:23<00:00,  1.36it/s]100%|██████████| 100/100 [01:23<00:00,  1.19it/s]
Number of users per round / total users: 10  /  100
Finished creating FedAvg server.
=== FedPP ===
-------------Round number:  0  -------------
selected users: [26, 86, 2, 55, 75, 93, 16, 73, 54, 95]
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 508
Local adapation with distilling: 0.001
training loss: tensor(2.4877) feature loss: tensor(0.4818)
Local adapation with distilling: 0.001
training loss: tensor(2.4587) feature loss: tensor(0.4884)
Local adapation with distilling: 0.001
training loss: tensor(2.5420) feature loss: tensor(0.4889)
Local adapation with distilling: 0.001
training loss: tensor(2.4831) feature loss: tensor(0.5066)
Local adapation with distilling: 0.001
training loss: tensor(2.4273) feature loss: tensor(0.5087)
Local adapation with distilling: 0.001
training loss: tensor(2.4617) feature loss: tensor(0.4771)
Local adapation with distilling: 0.001
training loss: tensor(2.5461) feature loss: tensor(0.5378)
Local adapation with distilling: 0.001
training loss: tensor(2.3722) feature loss: tensor(0.5123)
Local adapation with distilling: 0.001
training loss: tensor(2.7267) feature loss: tensor(0.5256)
Local adapation with distilling: 0.001
training loss: tensor(2.5153) feature loss: tensor(0.5199)
         GM acc on global data: 0.1061 length of data: 10000
-------------Round number:  1  -------------
selected users: [80, 84, 33, 81, 93, 17, 36, 82, 69, 65]
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
all data: 494
Local adapation with distilling: 0.000982
training loss: tensor(2.0266) feature loss: tensor(0.6845)
Local adapation with distilling: 0.000982
training loss: tensor(2.0109) feature loss: tensor(0.6939)
Local adapation with distilling: 0.000982
training loss: tensor(1.9090) feature loss: tensor(0.6768)
Local adapation with distilling: 0.000982
training loss: tensor(2.0590) feature loss: tensor(0.6924)
Local adapation with distilling: 0.000982
training loss: tensor(1.9522) feature loss: tensor(0.6246)
Local adapation with distilling: 0.000982
training loss: tensor(1.9748) feature loss: tensor(0.6003)
Local adapation with distilling: 0.000982
training loss: tensor(1.9247) feature loss: tensor(0.6880)
Local adapation with distilling: 0.000982
training loss: tensor(2.0462) feature loss: tensor(0.6553)
Local adapation with distilling: 0.000982
training loss: tensor(1.9942) feature loss: tensor(0.6545)
Local adapation with distilling: 0.000982
training loss: tensor(1.8688) feature loss: tensor(0.6577)
         GM acc on global data: 0.1694 length of data: 10000
-------------Round number:  2  -------------
selected users: [83, 30, 56, 24, 16, 23, 2, 27, 28, 13]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([55, 16, 32, 32]) torch.Size([55])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.000964
training loss: tensor(1.5704) feature loss: tensor(0.6621)
Local adapation with distilling: 0.000964
training loss: tensor(1.6626) feature loss: tensor(0.6668)
Local adapation with distilling: 0.000964
training loss: tensor(1.5558) feature loss: tensor(0.6097)
Local adapation with distilling: 0.000964
training loss: tensor(1.6906) feature loss: tensor(0.6490)
Local adapation with distilling: 0.000964
training loss: tensor(1.6245) feature loss: tensor(0.6011)
Local adapation with distilling: 0.000964
training loss: tensor(1.6214) feature loss: tensor(0.6715)
Local adapation with distilling: 0.000964
training loss: tensor(1.6276) feature loss: tensor(0.6900)
Local adapation with distilling: 0.000964
training loss: tensor(1.7589) feature loss: tensor(0.6745)
Local adapation with distilling: 0.000964
training loss: tensor(1.7058) feature loss: tensor(0.6915)
Local adapation with distilling: 0.000964
training loss: tensor(1.6489) feature loss: tensor(0.7173)
         GM acc on global data: 0.1748 length of data: 10000
-------------Round number:  3  -------------
selected users: [93, 67, 6, 64, 96, 83, 98, 42, 25, 15]
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
all data: 497
Local adapation with distilling: 0.000946
training loss: tensor(1.5129) feature loss: tensor(0.6239)
Local adapation with distilling: 0.000946
training loss: tensor(1.5948) feature loss: tensor(0.6920)
Local adapation with distilling: 0.000946
training loss: tensor(1.4869) feature loss: tensor(0.5724)
Local adapation with distilling: 0.000946
training loss: tensor(1.5339) feature loss: tensor(0.6525)
Local adapation with distilling: 0.000946
training loss: tensor(1.6973) feature loss: tensor(0.6012)
Local adapation with distilling: 0.000946
training loss: tensor(1.4018) feature loss: tensor(0.5923)
Local adapation with distilling: 0.000946
training loss: tensor(1.4830) feature loss: tensor(0.6799)
Local adapation with distilling: 0.000946
training loss: tensor(1.5340) feature loss: tensor(0.5892)
Local adapation with distilling: 0.000946
training loss: tensor(1.5245) feature loss: tensor(0.6243)
Local adapation with distilling: 0.000946
training loss: tensor(1.6020) feature loss: tensor(0.6580)
         GM acc on global data: 0.2159 length of data: 10000
-------------Round number:  4  -------------
selected users: [20, 10, 96, 16, 63, 24, 53, 97, 41, 47]
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([57, 16, 32, 32]) torch.Size([57])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
all data: 493
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.5298) feature loss: tensor(0.6854)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.4691) feature loss: tensor(0.7314)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.6214) feature loss: tensor(0.6685)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.3578) feature loss: tensor(0.6027)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.3384) feature loss: tensor(0.7021)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.2509) feature loss: tensor(0.5940)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.2478) feature loss: tensor(0.6198)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.3297) feature loss: tensor(0.6374)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.3923) feature loss: tensor(0.6250)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.3379) feature loss: tensor(0.6284)
         GM acc on global data: 0.2334 length of data: 10000
-------------Round number:  5  -------------
selected users: [66, 32, 46, 28, 74, 23, 10, 20, 17, 35]
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
all data: 501
Local adapation with distilling: 0.00091
training loss: tensor(1.3040) feature loss: tensor(0.6196)
Local adapation with distilling: 0.00091
training loss: tensor(1.3459) feature loss: tensor(0.6411)
Local adapation with distilling: 0.00091
training loss: tensor(1.3226) feature loss: tensor(0.6131)
Local adapation with distilling: 0.00091
training loss: tensor(1.5311) feature loss: tensor(0.6927)
Local adapation with distilling: 0.00091
training loss: tensor(1.3409) feature loss: tensor(0.6050)
Local adapation with distilling: 0.00091
training loss: tensor(1.3788) feature loss: tensor(0.6834)
Local adapation with distilling: 0.00091
training loss: tensor(1.3704) feature loss: tensor(0.6964)
Local adapation with distilling: 0.00091
training loss: tensor(1.4458) feature loss: tensor(0.6564)
Local adapation with distilling: 0.00091
training loss: tensor(1.3023) feature loss: tensor(0.6375)
Local adapation with distilling: 0.00091
training loss: tensor(1.3710) feature loss: tensor(0.6543)
         GM acc on global data: 0.3407 length of data: 10000
-------------Round number:  6  -------------
selected users: [17, 34, 0, 45, 60, 86, 20, 47, 44, 81]
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
all data: 491
Local adapation with distilling: 0.000892
training loss: tensor(1.0253) feature loss: tensor(0.4822)
Local adapation with distilling: 0.000892
training loss: tensor(1.1302) feature loss: tensor(0.4970)
Local adapation with distilling: 0.000892
training loss: tensor(1.1417) feature loss: tensor(0.6038)
Local adapation with distilling: 0.000892
training loss: tensor(1.1081) feature loss: tensor(0.5394)
Local adapation with distilling: 0.000892
training loss: tensor(1.1609) feature loss: tensor(0.6417)
Local adapation with distilling: 0.000892
training loss: tensor(1.0947) feature loss: tensor(0.4941)
Local adapation with distilling: 0.000892
training loss: tensor(1.1248) feature loss: tensor(0.6004)
Local adapation with distilling: 0.000892
training loss: tensor(1.0845) feature loss: tensor(0.5419)
Local adapation with distilling: 0.000892
training loss: tensor(1.1799) feature loss: tensor(0.5729)
Local adapation with distilling: 0.000892
training loss: tensor(1.4406) feature loss: tensor(0.5913)
         GM acc on global data: 0.3714 length of data: 10000
-------------Round number:  7  -------------
selected users: [37, 26, 78, 91, 49, 15, 93, 71, 86, 22]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
all data: 512
Local adapation with distilling: 0.000874
training loss: tensor(1.0942) feature loss: tensor(0.4839)
Local adapation with distilling: 0.000874
training loss: tensor(1.0449) feature loss: tensor(0.5750)
Local adapation with distilling: 0.000874
training loss: tensor(1.1050) feature loss: tensor(0.6131)
Local adapation with distilling: 0.000874
training loss: tensor(1.1131) feature loss: tensor(0.5472)
Local adapation with distilling: 0.000874
training loss: tensor(1.0555) feature loss: tensor(0.5601)
Local adapation with distilling: 0.000874
training loss: tensor(1.1528) feature loss: tensor(0.6078)
Local adapation with distilling: 0.000874
training loss: tensor(1.0869) feature loss: tensor(0.6009)
Local adapation with distilling: 0.000874
training loss: tensor(1.0408) feature loss: tensor(0.5025)
Local adapation with distilling: 0.000874
training loss: tensor(0.9982) feature loss: tensor(0.5275)
Local adapation with distilling: 0.000874
training loss: tensor(1.3945) feature loss: tensor(0.5926)
         GM acc on global data: 0.3766 length of data: 10000
-------------Round number:  8  -------------
selected users: [17, 23, 1, 44, 55, 99, 86, 29, 62, 33]
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
all data: 496
Local adapation with distilling: 0.000856
training loss: tensor(0.9580) feature loss: tensor(0.4867)
Local adapation with distilling: 0.000856
training loss: tensor(1.0849) feature loss: tensor(0.6322)
Local adapation with distilling: 0.000856
training loss: tensor(1.1174) feature loss: tensor(0.5450)
Local adapation with distilling: 0.000856
training loss: tensor(1.1145) feature loss: tensor(0.5830)
Local adapation with distilling: 0.000856
training loss: tensor(1.1072) feature loss: tensor(0.6417)
Local adapation with distilling: 0.000856
training loss: tensor(1.0971) feature loss: tensor(0.5901)
Local adapation with distilling: 0.000856
training loss: tensor(0.9493) feature loss: tensor(0.4959)
Local adapation with distilling: 0.000856
training loss: tensor(1.0280) feature loss: tensor(0.5231)
Local adapation with distilling: 0.000856
training loss: tensor(1.1427) feature loss: tensor(0.6294)
Local adapation with distilling: 0.000856
training loss: tensor(1.1040) feature loss: tensor(0.5783)
         GM acc on global data: 0.4256 length of data: 10000
-------------Round number:  9  -------------
selected users: [75, 42, 46, 68, 3, 39, 23, 20, 70, 73]
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
all data: 497
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.9562) feature loss: tensor(0.5221)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.9829) feature loss: tensor(0.4313)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.8831) feature loss: tensor(0.4034)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.9800) feature loss: tensor(0.4797)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.9725) feature loss: tensor(0.4275)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.9449) feature loss: tensor(0.4472)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.9232) feature loss: tensor(0.4983)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.9621) feature loss: tensor(0.4960)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.9270) feature loss: tensor(0.4917)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.9517) feature loss: tensor(0.4720)
         GM acc on global data: 0.432 length of data: 10000
-------------Round number:  10  -------------
selected users: [19, 14, 43, 37, 66, 3, 79, 41, 38, 68]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
all data: 506
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.9384) feature loss: tensor(0.5300)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.9209) feature loss: tensor(0.5069)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.9201) feature loss: tensor(0.5006)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.9115) feature loss: tensor(0.4542)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.8968) feature loss: tensor(0.5095)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.8744) feature loss: tensor(0.4374)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(1.0159) feature loss: tensor(0.4913)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.9579) feature loss: tensor(0.4764)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.8829) feature loss: tensor(0.4842)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.9100) feature loss: tensor(0.4816)
         GM acc on global data: 0.4092 length of data: 10000
-------------Round number:  11  -------------
selected users: [46, 49, 22, 58, 41, 98, 62, 29, 30, 51]
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
all data: 491
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.8018) feature loss: tensor(0.4040)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.8152) feature loss: tensor(0.4836)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(1.0809) feature loss: tensor(0.4651)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.8371) feature loss: tensor(0.4692)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.8479) feature loss: tensor(0.4506)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.8560) feature loss: tensor(0.4499)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.8795) feature loss: tensor(0.5090)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.7769) feature loss: tensor(0.4063)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.9357) feature loss: tensor(0.5060)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.8756) feature loss: tensor(0.4420)
         GM acc on global data: 0.4369 length of data: 10000
-------------Round number:  12  -------------
selected users: [17, 41, 92, 14, 68, 31, 89, 15, 21, 60]
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
all data: 494
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.7592) feature loss: tensor(0.3798)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.7413) feature loss: tensor(0.3766)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.9185) feature loss: tensor(0.4543)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.7803) feature loss: tensor(0.4541)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.7583) feature loss: tensor(0.3946)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.9348) feature loss: tensor(0.3856)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.8086) feature loss: tensor(0.3629)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.8752) feature loss: tensor(0.4437)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.8603) feature loss: tensor(0.4309)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.9036) feature loss: tensor(0.4712)
         GM acc on global data: 0.4542 length of data: 10000
-------------Round number:  13  -------------
selected users: [37, 62, 83, 14, 43, 9, 44, 31, 69, 57]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 489
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.7337) feature loss: tensor(0.3545)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.7437) feature loss: tensor(0.3773)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.7818) feature loss: tensor(0.4419)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.6765) feature loss: tensor(0.3582)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.7398) feature loss: tensor(0.4153)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.8854) feature loss: tensor(0.4220)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.7893) feature loss: tensor(0.3864)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.8133) feature loss: tensor(0.3674)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.7421) feature loss: tensor(0.4212)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.7501) feature loss: tensor(0.3650)
         GM acc on global data: 0.4579 length of data: 10000
-------------Round number:  14  -------------
selected users: [24, 39, 35, 44, 55, 70, 82, 40, 91, 65]
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
all data: 489
Local adapation with distilling: 0.000748
training loss: tensor(0.8731) feature loss: tensor(0.4632)
Local adapation with distilling: 0.000748
training loss: tensor(0.9433) feature loss: tensor(0.4859)
Local adapation with distilling: 0.000748
training loss: tensor(0.9925) feature loss: tensor(0.5014)
Local adapation with distilling: 0.000748
training loss: tensor(0.9161) feature loss: tensor(0.5180)
Local adapation with distilling: 0.000748
training loss: tensor(0.8887) feature loss: tensor(0.5372)
Local adapation with distilling: 0.000748
training loss: tensor(0.9088) feature loss: tensor(0.5791)
Local adapation with distilling: 0.000748
training loss: tensor(0.9255) feature loss: tensor(0.5287)
Local adapation with distilling: 0.000748
training loss: tensor(0.9655) feature loss: tensor(0.5186)
Local adapation with distilling: 0.000748
training loss: tensor(0.9981) feature loss: tensor(0.4904)
Local adapation with distilling: 0.000748
training loss: tensor(0.9218) feature loss: tensor(0.5616)
         GM acc on global data: 0.4814 length of data: 10000
-------------Round number:  15  -------------
selected users: [84, 36, 57, 51, 46, 78, 93, 14, 11, 59]
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
all data: 504
Local adapation with distilling: 0.00073
training loss: tensor(0.8158) feature loss: tensor(0.4408)
Local adapation with distilling: 0.00073
training loss: tensor(0.7951) feature loss: tensor(0.4236)
Local adapation with distilling: 0.00073
training loss: tensor(0.7681) feature loss: tensor(0.3868)
Local adapation with distilling: 0.00073
training loss: tensor(0.7736) feature loss: tensor(0.3778)
Local adapation with distilling: 0.00073
training loss: tensor(0.7227) feature loss: tensor(0.3900)
Local adapation with distilling: 0.00073
training loss: tensor(0.8274) feature loss: tensor(0.4577)
Local adapation with distilling: 0.00073
training loss: tensor(0.8608) feature loss: tensor(0.4636)
Local adapation with distilling: 0.00073
training loss: tensor(0.7264) feature loss: tensor(0.4152)
Local adapation with distilling: 0.00073
training loss: tensor(0.8628) feature loss: tensor(0.4029)
Local adapation with distilling: 0.00073
training loss: tensor(0.9381) feature loss: tensor(0.3866)
         GM acc on global data: 0.5045 length of data: 10000
-------------Round number:  16  -------------
selected users: [7, 25, 71, 42, 47, 29, 63, 88, 50, 9]
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
all data: 492
Local adapation with distilling: 0.000712
training loss: tensor(0.7911) feature loss: tensor(0.3578)
Local adapation with distilling: 0.000712
training loss: tensor(0.8136) feature loss: tensor(0.4120)
Local adapation with distilling: 0.000712
training loss: tensor(0.7533) feature loss: tensor(0.3543)
Local adapation with distilling: 0.000712
training loss: tensor(0.8104) feature loss: tensor(0.3814)
Local adapation with distilling: 0.000712
training loss: tensor(0.7461) feature loss: tensor(0.4018)
Local adapation with distilling: 0.000712
training loss: tensor(0.7297) feature loss: tensor(0.3567)
Local adapation with distilling: 0.000712
training loss: tensor(0.7897) feature loss: tensor(0.4099)
Local adapation with distilling: 0.000712
training loss: tensor(0.7752) feature loss: tensor(0.4042)
Local adapation with distilling: 0.000712
training loss: tensor(0.8330) feature loss: tensor(0.4072)
Local adapation with distilling: 0.000712
training loss: tensor(1.0501) feature loss: tensor(0.4045)
         GM acc on global data: 0.4943 length of data: 10000
-------------Round number:  17  -------------
selected users: [71, 28, 9, 4, 73, 34, 94, 92, 47, 37]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 492
Local adapation with distilling: 0.000694
training loss: tensor(0.6500) feature loss: tensor(0.3105)
Local adapation with distilling: 0.000694
training loss: tensor(0.8940) feature loss: tensor(0.3681)
Local adapation with distilling: 0.000694
training loss: tensor(0.8549) feature loss: tensor(0.3488)
Local adapation with distilling: 0.000694
training loss: tensor(0.7097) feature loss: tensor(0.3126)
Local adapation with distilling: 0.000694
training loss: tensor(0.7812) feature loss: tensor(0.3847)
Local adapation with distilling: 0.000694
training loss: tensor(0.6851) feature loss: tensor(0.3283)
Local adapation with distilling: 0.000694
training loss: tensor(0.6862) feature loss: tensor(0.3053)
Local adapation with distilling: 0.000694
training loss: tensor(0.7833) feature loss: tensor(0.3625)
Local adapation with distilling: 0.000694
training loss: tensor(0.6596) feature loss: tensor(0.3487)
Local adapation with distilling: 0.000694
training loss: tensor(0.6500) feature loss: tensor(0.3125)
         GM acc on global data: 0.4965 length of data: 10000
-------------Round number:  18  -------------
selected users: [53, 47, 43, 54, 33, 48, 0, 12, 44, 91]
random features: torch.Size([57, 16, 32, 32]) torch.Size([57])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
all data: 495
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.7439) feature loss: tensor(0.3806)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.7122) feature loss: tensor(0.3887)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.7621) feature loss: tensor(0.4630)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.8216) feature loss: tensor(0.3651)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.7798) feature loss: tensor(0.4332)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.8744) feature loss: tensor(0.4226)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.8089) feature loss: tensor(0.4070)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.8408) feature loss: tensor(0.4302)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.7939) feature loss: tensor(0.4094)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.7554) feature loss: tensor(0.3871)
         GM acc on global data: 0.4874 length of data: 10000
-------------Round number:  19  -------------
selected users: [85, 72, 16, 18, 2, 38, 90, 30, 83, 61]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([57, 16, 32, 32]) torch.Size([57])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 505
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.7232) feature loss: tensor(0.3990)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.7109) feature loss: tensor(0.4228)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.7639) feature loss: tensor(0.3435)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.8424) feature loss: tensor(0.3849)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.7801) feature loss: tensor(0.3773)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.7104) feature loss: tensor(0.4361)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.8119) feature loss: tensor(0.4151)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.7716) feature loss: tensor(0.3961)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.7365) feature loss: tensor(0.4132)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.7268) feature loss: tensor(0.3388)
         GM acc on global data: 0.5131 length of data: 10000
-------------Round number:  20  -------------
selected users: [70, 74, 2, 44, 56, 48, 12, 36, 0, 49]
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([55, 16, 32, 32]) torch.Size([55])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
all data: 489
Local adapation with distilling: 0.00064
training loss: tensor(0.6777) feature loss: tensor(0.3410)
Local adapation with distilling: 0.00064
training loss: tensor(0.6626) feature loss: tensor(0.3585)
Local adapation with distilling: 0.00064
training loss: tensor(0.6472) feature loss: tensor(0.3379)
Local adapation with distilling: 0.00064
training loss: tensor(0.6608) feature loss: tensor(0.3716)
Local adapation with distilling: 0.00064
training loss: tensor(0.6173) feature loss: tensor(0.3224)
Local adapation with distilling: 0.00064
training loss: tensor(0.6605) feature loss: tensor(0.3474)
Local adapation with distilling: 0.00064
training loss: tensor(0.6557) feature loss: tensor(0.3534)
Local adapation with distilling: 0.00064
training loss: tensor(0.6155) feature loss: tensor(0.3553)
Local adapation with distilling: 0.00064
training loss: tensor(0.6289) feature loss: tensor(0.3525)
Local adapation with distilling: 0.00064
training loss: tensor(0.6614) feature loss: tensor(0.3642)
         GM acc on global data: 0.5092 length of data: 10000
-------------Round number:  21  -------------
selected users: [23, 81, 85, 34, 62, 46, 42, 31, 93, 11]
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
all data: 494
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.7511) feature loss: tensor(0.3632)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(1.2672) feature loss: tensor(0.3701)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.6767) feature loss: tensor(0.3414)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.7081) feature loss: tensor(0.3155)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.7203) feature loss: tensor(0.3650)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.6088) feature loss: tensor(0.3187)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.7596) feature loss: tensor(0.3128)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.7782) feature loss: tensor(0.3277)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.7345) feature loss: tensor(0.3646)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.6938) feature loss: tensor(0.3451)
         GM acc on global data: 0.5416 length of data: 10000
-------------Round number:  22  -------------
selected users: [2, 49, 82, 31, 37, 12, 87, 42, 99, 85]
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 479
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.5755) feature loss: tensor(0.3061)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.5839) feature loss: tensor(0.3163)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.6521) feature loss: tensor(0.3596)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.6499) feature loss: tensor(0.3374)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.6252) feature loss: tensor(0.3110)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.6026) feature loss: tensor(0.3397)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.7247) feature loss: tensor(0.3691)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.6381) feature loss: tensor(0.3109)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.6296) feature loss: tensor(0.3026)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.5738) feature loss: tensor(0.3206)
         GM acc on global data: 0.5446 length of data: 10000
-------------Round number:  23  -------------
selected users: [26, 80, 82, 68, 77, 37, 3, 55, 20, 17]
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
all data: 494
Local adapation with distilling: 0.000586
training loss: tensor(0.6502) feature loss: tensor(0.3490)
Local adapation with distilling: 0.000586
training loss: tensor(0.7215) feature loss: tensor(0.3681)
Local adapation with distilling: 0.000586
training loss: tensor(0.6443) feature loss: tensor(0.3430)
Local adapation with distilling: 0.000586
training loss: tensor(0.6399) feature loss: tensor(0.3503)
Local adapation with distilling: 0.000586
training loss: tensor(0.7009) feature loss: tensor(0.3579)
Local adapation with distilling: 0.000586
training loss: tensor(0.5858) feature loss: tensor(0.3022)
Local adapation with distilling: 0.000586
training loss: tensor(0.6638) feature loss: tensor(0.3197)
Local adapation with distilling: 0.000586
training loss: tensor(0.6913) feature loss: tensor(0.3723)
Local adapation with distilling: 0.000586
training loss: tensor(0.6977) feature loss: tensor(0.3538)
Local adapation with distilling: 0.000586
training loss: tensor(0.6650) feature loss: tensor(0.3472)
         GM acc on global data: 0.5478 length of data: 10000
-------------Round number:  24  -------------
selected users: [26, 31, 37, 86, 76, 14, 88, 48, 71, 67]
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
all data: 497
Local adapation with distilling: 0.000568
training loss: tensor(0.5122) feature loss: tensor(0.2901)
Local adapation with distilling: 0.000568
training loss: tensor(0.5939) feature loss: tensor(0.2762)
Local adapation with distilling: 0.000568
training loss: tensor(0.4987) feature loss: tensor(0.2622)
Local adapation with distilling: 0.000568
training loss: tensor(0.6084) feature loss: tensor(0.3039)
Local adapation with distilling: 0.000568
training loss: tensor(0.6705) feature loss: tensor(0.2909)
Local adapation with distilling: 0.000568
training loss: tensor(0.5867) feature loss: tensor(0.3136)
Local adapation with distilling: 0.000568
training loss: tensor(0.5519) feature loss: tensor(0.3138)
Local adapation with distilling: 0.000568
training loss: tensor(0.5996) feature loss: tensor(0.2899)
Local adapation with distilling: 0.000568
training loss: tensor(0.5550) feature loss: tensor(0.2755)
Local adapation with distilling: 0.000568
training loss: tensor(0.5987) feature loss: tensor(0.2790)
         GM acc on global data: 0.5326 length of data: 10000
-------------Round number:  25  -------------
selected users: [41, 29, 33, 65, 74, 6, 57, 89, 87, 98]
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
all data: 497
Local adapation with distilling: 0.00055
training loss: tensor(0.6136) feature loss: tensor(0.2704)
Local adapation with distilling: 0.00055
training loss: tensor(0.5925) feature loss: tensor(0.3128)
Local adapation with distilling: 0.00055
training loss: tensor(0.6212) feature loss: tensor(0.3223)
Local adapation with distilling: 0.00055
training loss: tensor(0.6615) feature loss: tensor(0.3121)
Local adapation with distilling: 0.00055
training loss: tensor(0.5774) feature loss: tensor(0.3051)
Local adapation with distilling: 0.00055
training loss: tensor(0.6552) feature loss: tensor(0.2758)
Local adapation with distilling: 0.00055
training loss: tensor(0.6050) feature loss: tensor(0.2803)
Local adapation with distilling: 0.00055
training loss: tensor(0.6193) feature loss: tensor(0.3028)
Local adapation with distilling: 0.00055
training loss: tensor(0.6657) feature loss: tensor(0.3375)
Local adapation with distilling: 0.00055
training loss: tensor(0.6077) feature loss: tensor(0.2985)
         GM acc on global data: 0.5289 length of data: 10000
-------------Round number:  26  -------------
selected users: [8, 69, 84, 41, 25, 5, 63, 95, 33, 70]
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
all data: 489
Local adapation with distilling: 0.000532
training loss: tensor(0.7013) feature loss: tensor(0.3763)
Local adapation with distilling: 0.000532
training loss: tensor(0.6875) feature loss: tensor(0.3761)
Local adapation with distilling: 0.000532
training loss: tensor(0.7231) feature loss: tensor(0.3395)
Local adapation with distilling: 0.000532
training loss: tensor(0.6111) feature loss: tensor(0.3104)
Local adapation with distilling: 0.000532
training loss: tensor(0.7300) feature loss: tensor(0.3324)
Local adapation with distilling: 0.000532
training loss: tensor(0.7549) feature loss: tensor(0.3645)
Local adapation with distilling: 0.000532
training loss: tensor(0.6839) feature loss: tensor(0.3648)
Local adapation with distilling: 0.000532
training loss: tensor(0.7035) feature loss: tensor(0.3743)
Local adapation with distilling: 0.000532
training loss: tensor(0.6395) feature loss: tensor(0.3404)
Local adapation with distilling: 0.000532
training loss: tensor(0.7120) feature loss: tensor(0.3954)
         GM acc on global data: 0.5621 length of data: 10000
-------------Round number:  27  -------------
selected users: [89, 68, 43, 50, 40, 95, 27, 85, 22, 44]
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
all data: 495
Local adapation with distilling: 0.000514
training loss: tensor(0.5663) feature loss: tensor(0.2751)
Local adapation with distilling: 0.000514
training loss: tensor(0.5643) feature loss: tensor(0.2896)
Local adapation with distilling: 0.000514
training loss: tensor(0.5755) feature loss: tensor(0.3155)
Local adapation with distilling: 0.000514
training loss: tensor(0.6135) feature loss: tensor(0.3206)
Local adapation with distilling: 0.000514
training loss: tensor(0.6036) feature loss: tensor(0.2943)
Local adapation with distilling: 0.000514
training loss: tensor(0.5852) feature loss: tensor(0.2778)
Local adapation with distilling: 0.000514
training loss: tensor(0.6612) feature loss: tensor(0.2855)
Local adapation with distilling: 0.000514
training loss: tensor(0.5604) feature loss: tensor(0.2993)
Local adapation with distilling: 0.000514
training loss: tensor(0.9824) feature loss: tensor(0.3038)
Local adapation with distilling: 0.000514
training loss: tensor(0.6209) feature loss: tensor(0.3114)
         GM acc on global data: 0.5646 length of data: 10000
-------------Round number:  28  -------------
selected users: [67, 14, 0, 86, 13, 18, 30, 36, 52, 95]
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 495
Local adapation with distilling: 0.000496
training loss: tensor(0.5655) feature loss: tensor(0.2561)
Local adapation with distilling: 0.000496
training loss: tensor(0.5537) feature loss: tensor(0.2774)
Local adapation with distilling: 0.000496
training loss: tensor(0.5789) feature loss: tensor(0.2852)
Local adapation with distilling: 0.000496
training loss: tensor(0.5539) feature loss: tensor(0.2624)
Local adapation with distilling: 0.000496
training loss: tensor(0.5932) feature loss: tensor(0.2855)
Local adapation with distilling: 0.000496
training loss: tensor(0.6481) feature loss: tensor(0.3003)
Local adapation with distilling: 0.000496
training loss: tensor(0.5966) feature loss: tensor(0.2930)
Local adapation with distilling: 0.000496
training loss: tensor(0.5347) feature loss: tensor(0.2824)
Local adapation with distilling: 0.000496
training loss: tensor(0.8795) feature loss: tensor(0.3064)
Local adapation with distilling: 0.000496
training loss: tensor(0.5512) feature loss: tensor(0.2574)
         GM acc on global data: 0.576 length of data: 10000
-------------Round number:  29  -------------
selected users: [73, 8, 10, 7, 19, 71, 92, 25, 38, 12]
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
all data: 491
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.6937) feature loss: tensor(0.3160)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.6135) feature loss: tensor(0.3387)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.6653) feature loss: tensor(0.3690)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.6598) feature loss: tensor(0.3030)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.6535) feature loss: tensor(0.2989)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.5943) feature loss: tensor(0.2981)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.7212) feature loss: tensor(0.3476)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.6417) feature loss: tensor(0.3042)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.6217) feature loss: tensor(0.3224)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.6127) feature loss: tensor(0.3290)
         GM acc on global data: 0.5889 length of data: 10000
-------------Round number:  30  -------------
selected users: [20, 91, 34, 52, 8, 74, 21, 88, 80, 89]
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
all data: 490
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.5199) feature loss: tensor(0.2493)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.5834) feature loss: tensor(0.2417)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.5014) feature loss: tensor(0.2523)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.7961) feature loss: tensor(0.2721)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.4807) feature loss: tensor(0.2595)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.4650) feature loss: tensor(0.2553)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.5182) feature loss: tensor(0.2672)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.4590) feature loss: tensor(0.2532)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.5432) feature loss: tensor(0.2811)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.4959) feature loss: tensor(0.2533)
         GM acc on global data: 0.5684 length of data: 10000
-------------Round number:  31  -------------
selected users: [17, 33, 76, 3, 56, 0, 37, 8, 60, 67]
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([55, 16, 32, 32]) torch.Size([55])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
all data: 504
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.5374) feature loss: tensor(0.2563)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.4993) feature loss: tensor(0.2649)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.5947) feature loss: tensor(0.2402)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.5631) feature loss: tensor(0.2639)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.5032) feature loss: tensor(0.2511)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.5086) feature loss: tensor(0.2598)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.5037) feature loss: tensor(0.2356)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.4708) feature loss: tensor(0.2660)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.5699) feature loss: tensor(0.2753)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.5161) feature loss: tensor(0.2389)
         GM acc on global data: 0.5554 length of data: 10000
-------------Round number:  32  -------------
selected users: [22, 39, 85, 97, 55, 33, 80, 13, 27, 96]
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
all data: 492
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(1.1543) feature loss: tensor(0.3331)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.6865) feature loss: tensor(0.3047)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.5831) feature loss: tensor(0.3081)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.6569) feature loss: tensor(0.3212)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.6673) feature loss: tensor(0.3130)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.5557) feature loss: tensor(0.2948)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.6191) feature loss: tensor(0.3236)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.5821) feature loss: tensor(0.3026)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.6977) feature loss: tensor(0.3032)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.9315) feature loss: tensor(0.3189)
         GM acc on global data: 0.5901 length of data: 10000
-------------Round number:  33  -------------
selected users: [56, 90, 95, 82, 60, 71, 6, 81, 2, 70]
random features: torch.Size([55, 16, 32, 32]) torch.Size([55])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
all data: 495
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.4755) feature loss: tensor(0.2631)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.5837) feature loss: tensor(0.2714)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.4985) feature loss: tensor(0.3074)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.5440) feature loss: tensor(0.3790)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.5071) feature loss: tensor(0.3045)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.4910) feature loss: tensor(0.3075)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.6053) feature loss: tensor(0.2727)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.9996) feature loss: tensor(0.2779)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.5219) feature loss: tensor(0.2884)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.5270) feature loss: tensor(0.2936)
         GM acc on global data: 0.5677 length of data: 10000
-------------Round number:  34  -------------
selected users: [14, 74, 15, 4, 32, 59, 91, 10, 50, 53]
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([57, 16, 32, 32]) torch.Size([57])
all data: 501
Local adapation with distilling: 0.000388
training loss: tensor(0.5865) feature loss: tensor(0.3225)
Local adapation with distilling: 0.000388
training loss: tensor(0.5829) feature loss: tensor(0.3061)
Local adapation with distilling: 0.000388
training loss: tensor(0.6895) feature loss: tensor(0.3324)
Local adapation with distilling: 0.000388
training loss: tensor(0.7092) feature loss: tensor(0.3368)
Local adapation with distilling: 0.000388
training loss: tensor(0.7630) feature loss: tensor(0.3279)
Local adapation with distilling: 0.000388
training loss: tensor(0.7608) feature loss: tensor(0.3300)
Local adapation with distilling: 0.000388
training loss: tensor(0.6239) feature loss: tensor(0.3103)
Local adapation with distilling: 0.000388
training loss: tensor(0.7042) feature loss: tensor(0.3659)
Local adapation with distilling: 0.000388
training loss: tensor(0.6231) feature loss: tensor(0.3213)
Local adapation with distilling: 0.000388
training loss: tensor(0.6408) feature loss: tensor(0.3207)
         GM acc on global data: 0.6016 length of data: 10000
-------------Round number:  35  -------------
selected users: [40, 71, 98, 27, 70, 31, 10, 24, 51, 35]
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
all data: 484
Local adapation with distilling: 0.00037
training loss: tensor(0.5486) feature loss: tensor(0.2343)
Local adapation with distilling: 0.00037
training loss: tensor(0.4613) feature loss: tensor(0.2331)
Local adapation with distilling: 0.00037
training loss: tensor(0.4929) feature loss: tensor(0.2319)
Local adapation with distilling: 0.00037
training loss: tensor(0.5549) feature loss: tensor(0.2241)
Local adapation with distilling: 0.00037
training loss: tensor(0.4868) feature loss: tensor(0.2535)
Local adapation with distilling: 0.00037
training loss: tensor(0.5262) feature loss: tensor(0.2560)
Local adapation with distilling: 0.00037
training loss: tensor(0.5161) feature loss: tensor(0.2514)
Local adapation with distilling: 0.00037
training loss: tensor(0.5725) feature loss: tensor(0.2452)
Local adapation with distilling: 0.00037
training loss: tensor(0.5065) feature loss: tensor(0.2401)
Local adapation with distilling: 0.00037
training loss: tensor(0.5607) feature loss: tensor(0.2366)
         GM acc on global data: 0.5942 length of data: 10000
-------------Round number:  36  -------------
selected users: [59, 42, 2, 27, 28, 75, 58, 68, 52, 74]
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
all data: 493
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.5882) feature loss: tensor(0.2570)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.5986) feature loss: tensor(0.2415)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.5220) feature loss: tensor(0.2527)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.5693) feature loss: tensor(0.2222)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.8705) feature loss: tensor(0.2503)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.6027) feature loss: tensor(0.2633)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.5669) feature loss: tensor(0.2473)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.5456) feature loss: tensor(0.2599)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.6669) feature loss: tensor(0.2552)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.4819) feature loss: tensor(0.2384)
         GM acc on global data: 0.6107 length of data: 10000
-------------Round number:  37  -------------
selected users: [61, 49, 86, 78, 5, 91, 81, 82, 89, 18]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
all data: 507
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.5252) feature loss: tensor(0.2299)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.5138) feature loss: tensor(0.2304)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.5206) feature loss: tensor(0.2419)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.5476) feature loss: tensor(0.2303)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.6001) feature loss: tensor(0.2317)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.5031) feature loss: tensor(0.2501)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.8736) feature loss: tensor(0.2300)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.5304) feature loss: tensor(0.2320)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.4960) feature loss: tensor(0.2435)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.5593) feature loss: tensor(0.2463)
         GM acc on global data: 0.6043 length of data: 10000
-------------Round number:  38  -------------
selected users: [40, 73, 49, 45, 64, 16, 69, 17, 72, 66]
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([57, 16, 32, 32]) torch.Size([57])
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
all data: 512
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.5692) feature loss: tensor(0.2419)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.5739) feature loss: tensor(0.2594)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.5194) feature loss: tensor(0.2494)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.5412) feature loss: tensor(0.2470)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.6739) feature loss: tensor(0.2411)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.5801) feature loss: tensor(0.2383)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.5398) feature loss: tensor(0.2456)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.5303) feature loss: tensor(0.2522)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.5150) feature loss: tensor(0.2509)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.5709) feature loss: tensor(0.2423)
         GM acc on global data: 0.5916 length of data: 10000
-------------Round number:  39  -------------
selected users: [22, 53, 84, 57, 87, 58, 29, 21, 85, 79]
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([57, 16, 32, 32]) torch.Size([57])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
all data: 503
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.6449) feature loss: tensor(0.2774)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.5380) feature loss: tensor(0.2442)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.5978) feature loss: tensor(0.2657)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.6149) feature loss: tensor(0.2528)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.6074) feature loss: tensor(0.2805)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.5485) feature loss: tensor(0.2418)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.5403) feature loss: tensor(0.2423)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.6038) feature loss: tensor(0.2587)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.5343) feature loss: tensor(0.2364)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.6361) feature loss: tensor(0.2537)
         GM acc on global data: 0.6087 length of data: 10000
-------------Round number:  40  -------------
selected users: [79, 75, 63, 15, 38, 11, 40, 45, 39, 62]
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
all data: 498
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.5003) feature loss: tensor(0.2241)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.5031) feature loss: tensor(0.2360)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.4953) feature loss: tensor(0.2143)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.5747) feature loss: tensor(0.2203)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.4671) feature loss: tensor(0.2243)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.5208) feature loss: tensor(0.2218)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.4898) feature loss: tensor(0.2206)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.4691) feature loss: tensor(0.2431)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.4891) feature loss: tensor(0.2159)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.5527) feature loss: tensor(0.2271)
         GM acc on global data: 0.5982 length of data: 10000
-------------Round number:  41  -------------
selected users: [42, 94, 37, 6, 79, 32, 24, 0, 33, 93]
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
all data: 495
Local adapation with distilling: 0.000262
training loss: tensor(0.5655) feature loss: tensor(0.2553)
Local adapation with distilling: 0.000262
training loss: tensor(0.6257) feature loss: tensor(0.2395)
Local adapation with distilling: 0.000262
training loss: tensor(0.5419) feature loss: tensor(0.2333)
Local adapation with distilling: 0.000262
training loss: tensor(0.6312) feature loss: tensor(0.2347)
Local adapation with distilling: 0.000262
training loss: tensor(0.5454) feature loss: tensor(0.2444)
Local adapation with distilling: 0.000262
training loss: tensor(0.6498) feature loss: tensor(0.2516)
Local adapation with distilling: 0.000262
training loss: tensor(0.5824) feature loss: tensor(0.2623)
Local adapation with distilling: 0.000262
training loss: tensor(0.5275) feature loss: tensor(0.2296)
Local adapation with distilling: 0.000262
training loss: tensor(0.5095) feature loss: tensor(0.2306)
Local adapation with distilling: 0.000262
training loss: tensor(0.5929) feature loss: tensor(0.2324)
         GM acc on global data: 0.6119 length of data: 10000
-------------Round number:  42  -------------
selected users: [83, 53, 70, 45, 44, 39, 22, 80, 10, 0]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([57, 16, 32, 32]) torch.Size([57])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
all data: 497
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.4969) feature loss: tensor(0.1970)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.4142) feature loss: tensor(0.1922)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.4390) feature loss: tensor(0.1936)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.4292) feature loss: tensor(0.1926)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.4927) feature loss: tensor(0.2031)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.4473) feature loss: tensor(0.1955)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.8943) feature loss: tensor(0.1927)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.4748) feature loss: tensor(0.2087)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.4586) feature loss: tensor(0.1936)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.4203) feature loss: tensor(0.1918)
         GM acc on global data: 0.6017 length of data: 10000
-------------Round number:  43  -------------
selected users: [20, 2, 15, 22, 57, 91, 69, 55, 11, 79]
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
all data: 498
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.5238) feature loss: tensor(0.2071)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.4529) feature loss: tensor(0.2139)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.4395) feature loss: tensor(0.1983)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.7367) feature loss: tensor(0.2022)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.5357) feature loss: tensor(0.2181)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.4472) feature loss: tensor(0.2080)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.4498) feature loss: tensor(0.1934)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.4927) feature loss: tensor(0.2083)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.4806) feature loss: tensor(0.1968)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.4378) feature loss: tensor(0.1911)
         GM acc on global data: 0.6071 length of data: 10000
-------------Round number:  44  -------------
selected users: [42, 54, 27, 93, 39, 65, 7, 26, 24, 60]
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
all data: 495
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.5143) feature loss: tensor(0.1948)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.6362) feature loss: tensor(0.2288)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.5343) feature loss: tensor(0.2008)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.5527) feature loss: tensor(0.2094)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.4528) feature loss: tensor(0.1983)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.4980) feature loss: tensor(0.2226)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.5548) feature loss: tensor(0.2386)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.4697) feature loss: tensor(0.2123)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.4925) feature loss: tensor(0.2002)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.5047) feature loss: tensor(0.2129)
         GM acc on global data: 0.6135 length of data: 10000
-------------Round number:  45  -------------
selected users: [0, 1, 62, 76, 37, 99, 78, 38, 2, 84]
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
all data: 498
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.4768) feature loss: tensor(0.2169)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.5506) feature loss: tensor(0.2162)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.5548) feature loss: tensor(0.2205)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.6159) feature loss: tensor(0.2116)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.4753) feature loss: tensor(0.2029)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.5486) feature loss: tensor(0.2522)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.5968) feature loss: tensor(0.2180)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.4862) feature loss: tensor(0.2162)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.4837) feature loss: tensor(0.2290)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.5577) feature loss: tensor(0.2323)
         GM acc on global data: 0.62 length of data: 10000
-------------Round number:  46  -------------
selected users: [71, 33, 37, 10, 44, 34, 24, 98, 73, 95]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 487
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.4023) feature loss: tensor(0.1813)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.4093) feature loss: tensor(0.1735)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.4061) feature loss: tensor(0.1707)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.4643) feature loss: tensor(0.1763)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.4762) feature loss: tensor(0.1938)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.4938) feature loss: tensor(0.1982)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.4511) feature loss: tensor(0.2039)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.4456) feature loss: tensor(0.2054)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.4987) feature loss: tensor(0.2014)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.4523) feature loss: tensor(0.1904)
         GM acc on global data: 0.6291 length of data: 10000
-------------Round number:  47  -------------
selected users: [17, 90, 94, 86, 63, 5, 38, 14, 40, 47]
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
all data: 499
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.4436) feature loss: tensor(0.1829)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.5265) feature loss: tensor(0.1939)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.4646) feature loss: tensor(0.1621)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.4332) feature loss: tensor(0.1883)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.4568) feature loss: tensor(0.1994)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.5362) feature loss: tensor(0.1748)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.4169) feature loss: tensor(0.1926)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.4423) feature loss: tensor(0.1892)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.4491) feature loss: tensor(0.1828)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.4682) feature loss: tensor(0.1937)
         GM acc on global data: 0.625 length of data: 10000
-------------Round number:  48  -------------
selected users: [93, 5, 71, 9, 11, 79, 69, 8, 59, 63]
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 504
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.4637) feature loss: tensor(0.1829)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.4868) feature loss: tensor(0.1742)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.3853) feature loss: tensor(0.1845)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.7445) feature loss: tensor(0.1742)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.4397) feature loss: tensor(0.1768)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.4218) feature loss: tensor(0.1756)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.4399) feature loss: tensor(0.1857)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.4632) feature loss: tensor(0.1856)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.7584) feature loss: tensor(0.1815)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.4249) feature loss: tensor(0.1822)
         GM acc on global data: 0.6257 length of data: 10000
-------------Round number:  49  -------------
selected users: [76, 25, 28, 75, 81, 47, 41, 22, 29, 1]
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
all data: 503
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.5914) feature loss: tensor(0.1738)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.4938) feature loss: tensor(0.1881)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.7078) feature loss: tensor(0.2011)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.5177) feature loss: tensor(0.2159)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.9764) feature loss: tensor(0.2073)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.4854) feature loss: tensor(0.2009)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.4868) feature loss: tensor(0.2183)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.8063) feature loss: tensor(0.1933)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.4770) feature loss: tensor(0.1825)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.5024) feature loss: tensor(0.2142)
         GM acc on global data: 0.6319 length of data: 10000
-------------Round number:  50  -------------
selected users: [80, 79, 25, 15, 39, 40, 53, 17, 57, 50]
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([57, 16, 32, 32]) torch.Size([57])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
all data: 504
Local adapation with distilling: 0.0001
training loss: tensor(0.4956) feature loss: tensor(0.1820)
Local adapation with distilling: 0.0001
training loss: tensor(0.4200) feature loss: tensor(0.1714)
Local adapation with distilling: 0.0001
training loss: tensor(0.4519) feature loss: tensor(0.1626)
Local adapation with distilling: 0.0001
training loss: tensor(0.4740) feature loss: tensor(0.1754)
Local adapation with distilling: 0.0001
training loss: tensor(0.4338) feature loss: tensor(0.1614)
Local adapation with distilling: 0.0001
training loss: tensor(0.4617) feature loss: tensor(0.1733)
Local adapation with distilling: 0.0001
training loss: tensor(0.4518) feature loss: tensor(0.1683)
Local adapation with distilling: 0.0001
training loss: tensor(0.4165) feature loss: tensor(0.1553)
Local adapation with distilling: 0.0001
training loss: tensor(0.4734) feature loss: tensor(0.1547)
Local adapation with distilling: 0.0001
training loss: tensor(0.5498) feature loss: tensor(0.1745)
         GM acc on global data: 0.6342 length of data: 10000
-------------Round number:  51  -------------
selected users: [71, 43, 11, 83, 78, 19, 80, 4, 79, 75]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
all data: 498
Local adapation with distilling: 0.0001
training loss: tensor(0.4056) feature loss: tensor(0.1589)
Local adapation with distilling: 0.0001
training loss: tensor(0.4838) feature loss: tensor(0.1820)
Local adapation with distilling: 0.0001
training loss: tensor(0.4506) feature loss: tensor(0.1687)
Local adapation with distilling: 0.0001
training loss: tensor(0.5321) feature loss: tensor(0.1779)
Local adapation with distilling: 0.0001
training loss: tensor(0.4966) feature loss: tensor(0.1879)
Local adapation with distilling: 0.0001
training loss: tensor(0.5526) feature loss: tensor(0.1824)
Local adapation with distilling: 0.0001
training loss: tensor(0.4298) feature loss: tensor(0.1764)
Local adapation with distilling: 0.0001
training loss: tensor(0.5195) feature loss: tensor(0.1761)
Local adapation with distilling: 0.0001
training loss: tensor(0.3830) feature loss: tensor(0.1644)
Local adapation with distilling: 0.0001
training loss: tensor(0.4688) feature loss: tensor(0.1848)
         GM acc on global data: 0.6264 length of data: 10000
-------------Round number:  52  -------------
selected users: [82, 8, 44, 19, 2, 73, 37, 89, 67, 18]
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
all data: 491
Local adapation with distilling: 0.0001
training loss: tensor(0.4644) feature loss: tensor(0.1760)
Local adapation with distilling: 0.0001
training loss: tensor(0.4244) feature loss: tensor(0.1802)
Local adapation with distilling: 0.0001
training loss: tensor(0.4842) feature loss: tensor(0.1781)
Local adapation with distilling: 0.0001
training loss: tensor(0.4764) feature loss: tensor(0.1755)
Local adapation with distilling: 0.0001
training loss: tensor(0.4107) feature loss: tensor(0.1745)
Local adapation with distilling: 0.0001
training loss: tensor(0.4516) feature loss: tensor(0.1813)
Local adapation with distilling: 0.0001
training loss: tensor(0.3903) feature loss: tensor(0.1504)
Local adapation with distilling: 0.0001
training loss: tensor(0.4156) feature loss: tensor(0.1575)
Local adapation with distilling: 0.0001
training loss: tensor(0.4932) feature loss: tensor(0.1773)
Local adapation with distilling: 0.0001
training loss: tensor(0.5044) feature loss: tensor(0.1638)
         GM acc on global data: 0.6313 length of data: 10000
-------------Round number:  53  -------------
selected users: [19, 78, 64, 3, 71, 32, 68, 42, 55, 97]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
all data: 496
Local adapation with distilling: 0.0001
training loss: tensor(0.5296) feature loss: tensor(0.2132)
Local adapation with distilling: 0.0001
training loss: tensor(0.5254) feature loss: tensor(0.2056)
Local adapation with distilling: 0.0001
training loss: tensor(0.7447) feature loss: tensor(0.2342)
Local adapation with distilling: 0.0001
training loss: tensor(0.6550) feature loss: tensor(0.1949)
Local adapation with distilling: 0.0001
training loss: tensor(0.4637) feature loss: tensor(0.2186)
Local adapation with distilling: 0.0001
training loss: tensor(0.6420) feature loss: tensor(0.2293)
Local adapation with distilling: 0.0001
training loss: tensor(0.5843) feature loss: tensor(0.2014)
Local adapation with distilling: 0.0001
training loss: tensor(0.5384) feature loss: tensor(0.2112)
Local adapation with distilling: 0.0001
training loss: tensor(0.5628) feature loss: tensor(0.2148)
Local adapation with distilling: 0.0001
training loss: tensor(0.6344) feature loss: tensor(0.2139)
         GM acc on global data: 0.6276 length of data: 10000
-------------Round number:  54  -------------
selected users: [36, 70, 48, 94, 81, 46, 38, 29, 34, 22]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
all data: 503
Local adapation with distilling: 0.0001
training loss: tensor(0.4083) feature loss: tensor(0.1634)
Local adapation with distilling: 0.0001
training loss: tensor(0.4136) feature loss: tensor(0.1828)
Local adapation with distilling: 0.0001
training loss: tensor(0.5123) feature loss: tensor(0.1621)
Local adapation with distilling: 0.0001
training loss: tensor(0.4198) feature loss: tensor(0.1591)
Local adapation with distilling: 0.0001
training loss: tensor(0.7808) feature loss: tensor(0.1791)
Local adapation with distilling: 0.0001
training loss: tensor(0.4602) feature loss: tensor(0.1577)
Local adapation with distilling: 0.0001
training loss: tensor(0.3807) feature loss: tensor(0.1756)
Local adapation with distilling: 0.0001
training loss: tensor(0.3664) feature loss: tensor(0.1617)
Local adapation with distilling: 0.0001
training loss: tensor(0.4310) feature loss: tensor(0.1621)
Local adapation with distilling: 0.0001
training loss: tensor(0.6804) feature loss: tensor(0.1627)
         GM acc on global data: 0.6368 length of data: 10000
-------------Round number:  55  -------------
selected users: [28, 92, 98, 95, 84, 34, 38, 76, 17, 78]
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
all data: 502
Local adapation with distilling: 0.0001
training loss: tensor(0.5319) feature loss: tensor(0.1870)
Local adapation with distilling: 0.0001
training loss: tensor(0.5722) feature loss: tensor(0.1965)
Local adapation with distilling: 0.0001
training loss: tensor(0.4288) feature loss: tensor(0.1792)
Local adapation with distilling: 0.0001
training loss: tensor(0.4052) feature loss: tensor(0.1742)
Local adapation with distilling: 0.0001
training loss: tensor(0.4595) feature loss: tensor(0.1876)
Local adapation with distilling: 0.0001
training loss: tensor(0.4036) feature loss: tensor(0.1554)
Local adapation with distilling: 0.0001
training loss: tensor(0.3733) feature loss: tensor(0.1810)
Local adapation with distilling: 0.0001
training loss: tensor(0.4683) feature loss: tensor(0.1627)
Local adapation with distilling: 0.0001
training loss: tensor(0.3784) feature loss: tensor(0.1606)
Local adapation with distilling: 0.0001
training loss: tensor(0.4296) feature loss: tensor(0.1858)
         GM acc on global data: 0.6337 length of data: 10000
-------------Round number:  56  -------------
selected users: [92, 79, 23, 68, 52, 38, 73, 9, 59, 27]
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
all data: 502
Local adapation with distilling: 0.0001
training loss: tensor(0.5387) feature loss: tensor(0.1935)
Local adapation with distilling: 0.0001
training loss: tensor(0.3927) feature loss: tensor(0.1726)
Local adapation with distilling: 0.0001
training loss: tensor(0.6064) feature loss: tensor(0.1956)
Local adapation with distilling: 0.0001
training loss: tensor(0.4469) feature loss: tensor(0.1754)
Local adapation with distilling: 0.0001
training loss: tensor(0.7480) feature loss: tensor(0.1792)
Local adapation with distilling: 0.0001
training loss: tensor(0.3597) feature loss: tensor(0.1793)
Local adapation with distilling: 0.0001
training loss: tensor(0.4822) feature loss: tensor(0.1922)
Local adapation with distilling: 0.0001
training loss: tensor(0.8946) feature loss: tensor(0.1785)
Local adapation with distilling: 0.0001
training loss: tensor(0.5222) feature loss: tensor(0.1727)
Local adapation with distilling: 0.0001
training loss: tensor(0.4749) feature loss: tensor(0.1538)
         GM acc on global data: 0.6311 length of data: 10000
-------------Round number:  57  -------------
selected users: [52, 17, 41, 3, 8, 98, 59, 20, 67, 7]
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
all data: 492
Local adapation with distilling: 0.0001
training loss: tensor(0.5037) feature loss: tensor(0.1616)
Local adapation with distilling: 0.0001
training loss: tensor(0.3352) feature loss: tensor(0.1569)
Local adapation with distilling: 0.0001
training loss: tensor(0.3951) feature loss: tensor(0.1701)
Local adapation with distilling: 0.0001
training loss: tensor(0.4243) feature loss: tensor(0.1544)
Local adapation with distilling: 0.0001
training loss: tensor(0.3636) feature loss: tensor(0.1899)
Local adapation with distilling: 0.0001
training loss: tensor(0.3640) feature loss: tensor(0.1786)
Local adapation with distilling: 0.0001
training loss: tensor(0.4091) feature loss: tensor(0.1690)
Local adapation with distilling: 0.0001
training loss: tensor(0.4665) feature loss: tensor(0.1626)
Local adapation with distilling: 0.0001
training loss: tensor(0.4017) feature loss: tensor(0.1828)
Local adapation with distilling: 0.0001
training loss: tensor(0.4715) feature loss: tensor(0.1630)
         GM acc on global data: 0.6275 length of data: 10000
-------------Round number:  58  -------------
selected users: [43, 58, 8, 31, 70, 45, 69, 95, 50, 4]
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
all data: 490
Local adapation with distilling: 0.0001
training loss: tensor(0.4569) feature loss: tensor(0.1887)
Local adapation with distilling: 0.0001
training loss: tensor(0.3978) feature loss: tensor(0.1649)
Local adapation with distilling: 0.0001
training loss: tensor(0.3464) feature loss: tensor(0.1680)
Local adapation with distilling: 0.0001
training loss: tensor(0.4511) feature loss: tensor(0.1658)
Local adapation with distilling: 0.0001
training loss: tensor(0.3932) feature loss: tensor(0.1834)
Local adapation with distilling: 0.0001
training loss: tensor(0.3843) feature loss: tensor(0.1678)
Local adapation with distilling: 0.0001
training loss: tensor(0.4360) feature loss: tensor(0.1826)
Local adapation with distilling: 0.0001
training loss: tensor(0.3713) feature loss: tensor(0.1753)
Local adapation with distilling: 0.0001
training loss: tensor(0.4616) feature loss: tensor(0.1760)
Local adapation with distilling: 0.0001
training loss: tensor(0.4723) feature loss: tensor(0.1696)
         GM acc on global data: 0.6354 length of data: 10000
-------------Round number:  59  -------------
selected users: [38, 46, 24, 87, 30, 85, 16, 96, 18, 99]
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
all data: 497
Local adapation with distilling: 0.0001
training loss: tensor(0.3825) feature loss: tensor(0.1775)
Local adapation with distilling: 0.0001
training loss: tensor(0.3974) feature loss: tensor(0.1719)
Local adapation with distilling: 0.0001
training loss: tensor(0.4411) feature loss: tensor(0.1737)
Local adapation with distilling: 0.0001
training loss: tensor(0.5188) feature loss: tensor(0.1995)
Local adapation with distilling: 0.0001
training loss: tensor(0.5751) feature loss: tensor(0.1736)
Local adapation with distilling: 0.0001
training loss: tensor(0.4570) feature loss: tensor(0.1852)
Local adapation with distilling: 0.0001
training loss: tensor(0.5140) feature loss: tensor(0.1573)
Local adapation with distilling: 0.0001
training loss: tensor(0.7490) feature loss: tensor(0.1822)
Local adapation with distilling: 0.0001
training loss: tensor(0.4888) feature loss: tensor(0.1804)
Local adapation with distilling: 0.0001
training loss: tensor(0.4938) feature loss: tensor(0.1957)
         GM acc on global data: 0.6372 length of data: 10000
-------------Round number:  60  -------------
selected users: [88, 4, 79, 14, 55, 3, 19, 28, 94, 25]
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 497
Local adapation with distilling: 0.0001
training loss: tensor(0.4163) feature loss: tensor(0.1761)
Local adapation with distilling: 0.0001
training loss: tensor(0.4238) feature loss: tensor(0.1890)
Local adapation with distilling: 0.0001
training loss: tensor(0.3618) feature loss: tensor(0.1839)
Local adapation with distilling: 0.0001
training loss: tensor(0.4245) feature loss: tensor(0.1929)
Local adapation with distilling: 0.0001
training loss: tensor(0.4472) feature loss: tensor(0.2061)
Local adapation with distilling: 0.0001
training loss: tensor(0.4242) feature loss: tensor(0.1665)
Local adapation with distilling: 0.0001
training loss: tensor(0.4473) feature loss: tensor(0.1932)
Local adapation with distilling: 0.0001
training loss: tensor(0.7239) feature loss: tensor(0.1941)
Local adapation with distilling: 0.0001
training loss: tensor(0.4303) feature loss: tensor(0.1683)
Local adapation with distilling: 0.0001
training loss: tensor(0.4337) feature loss: tensor(0.1692)
         GM acc on global data: 0.635 length of data: 10000
-------------Round number:  61  -------------
selected users: [83, 1, 55, 9, 31, 28, 96, 29, 86, 63]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 508
Local adapation with distilling: 0.0001
training loss: tensor(0.4701) feature loss: tensor(0.1777)
Local adapation with distilling: 0.0001
training loss: tensor(0.4224) feature loss: tensor(0.1609)
Local adapation with distilling: 0.0001
training loss: tensor(0.3889) feature loss: tensor(0.1831)
Local adapation with distilling: 0.0001
training loss: tensor(0.7429) feature loss: tensor(0.1774)
Local adapation with distilling: 0.0001
training loss: tensor(0.4085) feature loss: tensor(0.1620)
Local adapation with distilling: 0.0001
training loss: tensor(0.6254) feature loss: tensor(0.1805)
Local adapation with distilling: 0.0001
training loss: tensor(0.6310) feature loss: tensor(0.1731)
Local adapation with distilling: 0.0001
training loss: tensor(0.3520) feature loss: tensor(0.1574)
Local adapation with distilling: 0.0001
training loss: tensor(0.3747) feature loss: tensor(0.1721)
Local adapation with distilling: 0.0001
training loss: tensor(0.3783) feature loss: tensor(0.1698)
         GM acc on global data: 0.6291 length of data: 10000
-------------Round number:  62  -------------
selected users: [76, 48, 62, 80, 29, 99, 60, 89, 39, 69]
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
all data: 496
Local adapation with distilling: 0.0001
training loss: tensor(0.4316) feature loss: tensor(0.1544)
Local adapation with distilling: 0.0001
training loss: tensor(0.4483) feature loss: tensor(0.1672)
Local adapation with distilling: 0.0001
training loss: tensor(0.4435) feature loss: tensor(0.1816)
Local adapation with distilling: 0.0001
training loss: tensor(0.4027) feature loss: tensor(0.1827)
Local adapation with distilling: 0.0001
training loss: tensor(0.3254) feature loss: tensor(0.1575)
Local adapation with distilling: 0.0001
training loss: tensor(0.4068) feature loss: tensor(0.1959)
Local adapation with distilling: 0.0001
training loss: tensor(0.4343) feature loss: tensor(0.1820)
Local adapation with distilling: 0.0001
training loss: tensor(0.3485) feature loss: tensor(0.1529)
Local adapation with distilling: 0.0001
training loss: tensor(0.3748) feature loss: tensor(0.1626)
Local adapation with distilling: 0.0001
training loss: tensor(0.3645) feature loss: tensor(0.1825)
         GM acc on global data: 0.6285 length of data: 10000
-------------Round number:  63  -------------
selected users: [64, 59, 63, 2, 80, 20, 18, 48, 72, 51]
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([57, 16, 32, 32]) torch.Size([57])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
all data: 494
Local adapation with distilling: 0.0001
training loss: tensor(0.5994) feature loss: tensor(0.1672)
Local adapation with distilling: 0.0001
training loss: tensor(0.3771) feature loss: tensor(0.1662)
Local adapation with distilling: 0.0001
training loss: tensor(0.4052) feature loss: tensor(0.1840)
Local adapation with distilling: 0.0001
training loss: tensor(0.3941) feature loss: tensor(0.1871)
Local adapation with distilling: 0.0001
training loss: tensor(0.4004) feature loss: tensor(0.1802)
Local adapation with distilling: 0.0001
training loss: tensor(0.4448) feature loss: tensor(0.1746)
Local adapation with distilling: 0.0001
training loss: tensor(0.4403) feature loss: tensor(0.1884)
Local adapation with distilling: 0.0001
training loss: tensor(0.4197) feature loss: tensor(0.1693)
Local adapation with distilling: 0.0001
training loss: tensor(0.4505) feature loss: tensor(0.2049)
Local adapation with distilling: 0.0001
training loss: tensor(0.4619) feature loss: tensor(0.1751)
         GM acc on global data: 0.6311 length of data: 10000
-------------Round number:  64  -------------
selected users: [17, 22, 60, 92, 23, 19, 71, 94, 40, 49]
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
all data: 492
Local adapation with distilling: 0.0001
training loss: tensor(0.3646) feature loss: tensor(0.1681)
Local adapation with distilling: 0.0001
training loss: tensor(0.6540) feature loss: tensor(0.1704)
Local adapation with distilling: 0.0001
training loss: tensor(0.3900) feature loss: tensor(0.1766)
Local adapation with distilling: 0.0001
training loss: tensor(0.4736) feature loss: tensor(0.1817)
Local adapation with distilling: 0.0001
training loss: tensor(0.5132) feature loss: tensor(0.1809)
Local adapation with distilling: 0.0001
training loss: tensor(0.3946) feature loss: tensor(0.1653)
Local adapation with distilling: 0.0001
training loss: tensor(0.3636) feature loss: tensor(0.1657)
Local adapation with distilling: 0.0001
training loss: tensor(0.4220) feature loss: tensor(0.1670)
Local adapation with distilling: 0.0001
training loss: tensor(0.4192) feature loss: tensor(0.1800)
Local adapation with distilling: 0.0001
training loss: tensor(0.4006) feature loss: tensor(0.1916)
         GM acc on global data: 0.6325 length of data: 10000
-------------Round number:  65  -------------
selected users: [37, 81, 39, 61, 76, 90, 27, 86, 28, 69]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
all data: 503
Local adapation with distilling: 0.0001
training loss: tensor(0.3682) feature loss: tensor(0.1560)
Local adapation with distilling: 0.0001
training loss: tensor(0.8978) feature loss: tensor(0.1737)
Local adapation with distilling: 0.0001
training loss: tensor(0.3784) feature loss: tensor(0.1768)
Local adapation with distilling: 0.0001
training loss: tensor(0.4592) feature loss: tensor(0.1857)
Local adapation with distilling: 0.0001
training loss: tensor(0.3824) feature loss: tensor(0.1657)
Local adapation with distilling: 0.0001
training loss: tensor(0.4881) feature loss: tensor(0.1857)
Local adapation with distilling: 0.0001
training loss: tensor(0.4317) feature loss: tensor(0.1551)
Local adapation with distilling: 0.0001
training loss: tensor(0.3572) feature loss: tensor(0.1731)
Local adapation with distilling: 0.0001
training loss: tensor(0.6697) feature loss: tensor(0.1761)
Local adapation with distilling: 0.0001
training loss: tensor(0.3644) feature loss: tensor(0.1668)
         GM acc on global data: 0.633 length of data: 10000
-------------Round number:  66  -------------
selected users: [8, 93, 4, 5, 52, 41, 0, 73, 88, 68]
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
all data: 498
Local adapation with distilling: 0.0001
training loss: tensor(0.3684) feature loss: tensor(0.1769)
Local adapation with distilling: 0.0001
training loss: tensor(0.4648) feature loss: tensor(0.1793)
Local adapation with distilling: 0.0001
training loss: tensor(0.3873) feature loss: tensor(0.1557)
Local adapation with distilling: 0.0001
training loss: tensor(0.4583) feature loss: tensor(0.1612)
Local adapation with distilling: 0.0001
training loss: tensor(0.6706) feature loss: tensor(0.1693)
Local adapation with distilling: 0.0001
training loss: tensor(0.4012) feature loss: tensor(0.1606)
Local adapation with distilling: 0.0001
training loss: tensor(0.3800) feature loss: tensor(0.1711)
Local adapation with distilling: 0.0001
training loss: tensor(0.4224) feature loss: tensor(0.1858)
Local adapation with distilling: 0.0001
training loss: tensor(0.3775) feature loss: tensor(0.1696)
Local adapation with distilling: 0.0001
training loss: tensor(0.4677) feature loss: tensor(0.1752)
         GM acc on global data: 0.6333 length of data: 10000
-------------Round number:  67  -------------
selected users: [17, 24, 64, 93, 97, 29, 3, 70, 82, 11]
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
all data: 504
Local adapation with distilling: 0.0001
training loss: tensor(0.2951) feature loss: tensor(0.1420)
Local adapation with distilling: 0.0001
training loss: tensor(0.3502) feature loss: tensor(0.1555)
Local adapation with distilling: 0.0001
training loss: tensor(0.4529) feature loss: tensor(0.1815)
Local adapation with distilling: 0.0001
training loss: tensor(0.3672) feature loss: tensor(0.1552)
Local adapation with distilling: 0.0001
training loss: tensor(0.4103) feature loss: tensor(0.1651)
Local adapation with distilling: 0.0001
training loss: tensor(0.3229) feature loss: tensor(0.1526)
Local adapation with distilling: 0.0001
training loss: tensor(0.3654) feature loss: tensor(0.1488)
Local adapation with distilling: 0.0001
training loss: tensor(0.3474) feature loss: tensor(0.1681)
Local adapation with distilling: 0.0001
training loss: tensor(0.3836) feature loss: tensor(0.1522)
Local adapation with distilling: 0.0001
training loss: tensor(0.3716) feature loss: tensor(0.1905)
         GM acc on global data: 0.6343 length of data: 10000
-------------Round number:  68  -------------
selected users: [29, 30, 16, 5, 38, 71, 76, 94, 99, 95]
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 508
Local adapation with distilling: 0.0001
training loss: tensor(0.3044) feature loss: tensor(0.1500)
Local adapation with distilling: 0.0001
training loss: tensor(0.4560) feature loss: tensor(0.1512)
Local adapation with distilling: 0.0001
training loss: tensor(0.4118) feature loss: tensor(0.1511)
Local adapation with distilling: 0.0001
training loss: tensor(0.3897) feature loss: tensor(0.1689)
Local adapation with distilling: 0.0001
training loss: tensor(0.2985) feature loss: tensor(0.1636)
Local adapation with distilling: 0.0001
training loss: tensor(0.3207) feature loss: tensor(0.1507)
Local adapation with distilling: 0.0001
training loss: tensor(0.3642) feature loss: tensor(0.1624)
Local adapation with distilling: 0.0001
training loss: tensor(0.3455) feature loss: tensor(0.1521)
Local adapation with distilling: 0.0001
training loss: tensor(0.3797) feature loss: tensor(0.1678)
Local adapation with distilling: 0.0001
training loss: tensor(0.3497) feature loss: tensor(0.1559)
         GM acc on global data: 0.6409 length of data: 10000
-------------Round number:  69  -------------
selected users: [72, 31, 13, 83, 33, 8, 26, 89, 64, 97]
random features: torch.Size([57, 16, 32, 32]) torch.Size([57])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
all data: 503
Local adapation with distilling: 0.0001
training loss: tensor(0.3774) feature loss: tensor(0.1729)
Local adapation with distilling: 0.0001
training loss: tensor(0.4313) feature loss: tensor(0.1558)
Local adapation with distilling: 0.0001
training loss: tensor(0.4223) feature loss: tensor(0.1724)
Local adapation with distilling: 0.0001
training loss: tensor(0.4224) feature loss: tensor(0.1763)
Local adapation with distilling: 0.0001
training loss: tensor(0.3811) feature loss: tensor(0.1607)
Local adapation with distilling: 0.0001
training loss: tensor(0.3383) feature loss: tensor(0.1648)
Local adapation with distilling: 0.0001
training loss: tensor(0.3753) feature loss: tensor(0.1668)
Local adapation with distilling: 0.0001
training loss: tensor(0.3560) feature loss: tensor(0.1574)
Local adapation with distilling: 0.0001
training loss: tensor(0.4539) feature loss: tensor(0.1532)
Local adapation with distilling: 0.0001
training loss: tensor(0.4092) feature loss: tensor(0.1707)
         GM acc on global data: 0.6334 length of data: 10000
-------------Round number:  70  -------------
selected users: [81, 43, 88, 32, 50, 71, 73, 55, 42, 2]
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
all data: 491
Local adapation with distilling: 0.0001
training loss: tensor(0.7599) feature loss: tensor(0.1713)
Local adapation with distilling: 0.0001
training loss: tensor(0.4114) feature loss: tensor(0.1759)
Local adapation with distilling: 0.0001
training loss: tensor(0.3539) feature loss: tensor(0.1621)
Local adapation with distilling: 0.0001
training loss: tensor(0.4855) feature loss: tensor(0.1564)
Local adapation with distilling: 0.0001
training loss: tensor(0.4170) feature loss: tensor(0.1799)
Local adapation with distilling: 0.0001
training loss: tensor(0.3184) feature loss: tensor(0.1574)
Local adapation with distilling: 0.0001
training loss: tensor(0.3627) feature loss: tensor(0.1833)
Local adapation with distilling: 0.0001
training loss: tensor(0.3783) feature loss: tensor(0.1772)
Local adapation with distilling: 0.0001
training loss: tensor(0.4014) feature loss: tensor(0.1524)
Local adapation with distilling: 0.0001
training loss: tensor(0.3468) feature loss: tensor(0.1729)
         GM acc on global data: 0.6369 length of data: 10000
-------------Round number:  71  -------------
selected users: [41, 84, 98, 42, 75, 25, 60, 19, 52, 29]
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
all data: 491
Local adapation with distilling: 0.0001
training loss: tensor(0.3766) feature loss: tensor(0.1629)
Local adapation with distilling: 0.0001
training loss: tensor(0.4253) feature loss: tensor(0.1858)
Local adapation with distilling: 0.0001
training loss: tensor(0.3822) feature loss: tensor(0.1718)
Local adapation with distilling: 0.0001
training loss: tensor(0.3895) feature loss: tensor(0.1672)
Local adapation with distilling: 0.0001
training loss: tensor(0.4200) feature loss: tensor(0.1955)
Local adapation with distilling: 0.0001
training loss: tensor(0.4160) feature loss: tensor(0.1640)
Local adapation with distilling: 0.0001
training loss: tensor(0.3769) feature loss: tensor(0.1857)
Local adapation with distilling: 0.0001
training loss: tensor(0.3834) feature loss: tensor(0.1984)
Local adapation with distilling: 0.0001
training loss: tensor(0.6272) feature loss: tensor(0.1732)
Local adapation with distilling: 0.0001
training loss: tensor(0.3208) feature loss: tensor(0.1617)
         GM acc on global data: 0.6435 length of data: 10000
-------------Round number:  72  -------------
selected users: [76, 82, 43, 16, 84, 95, 78, 91, 30, 22]
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
all data: 501
Local adapation with distilling: 0.0001
training loss: tensor(0.3320) feature loss: tensor(0.1419)
Local adapation with distilling: 0.0001
training loss: tensor(0.3501) feature loss: tensor(0.1603)
Local adapation with distilling: 0.0001
training loss: tensor(0.3427) feature loss: tensor(0.1656)
Local adapation with distilling: 0.0001
training loss: tensor(0.3459) feature loss: tensor(0.1369)
Local adapation with distilling: 0.0001
training loss: tensor(0.3590) feature loss: tensor(0.1594)
Local adapation with distilling: 0.0001
training loss: tensor(0.3348) feature loss: tensor(0.1585)
Local adapation with distilling: 0.0001
training loss: tensor(0.3769) feature loss: tensor(0.1651)
Local adapation with distilling: 0.0001
training loss: tensor(0.3782) feature loss: tensor(0.1398)
Local adapation with distilling: 0.0001
training loss: tensor(0.3984) feature loss: tensor(0.1416)
Local adapation with distilling: 0.0001
training loss: tensor(0.8037) feature loss: tensor(0.1492)
         GM acc on global data: 0.6417 length of data: 10000
-------------Round number:  73  -------------
selected users: [49, 14, 34, 70, 90, 35, 68, 76, 80, 9]
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
all data: 496
Local adapation with distilling: 0.0001
training loss: tensor(0.3789) feature loss: tensor(0.1575)
Local adapation with distilling: 0.0001
training loss: tensor(0.3438) feature loss: tensor(0.1501)
Local adapation with distilling: 0.0001
training loss: tensor(0.3660) feature loss: tensor(0.1383)
Local adapation with distilling: 0.0001
training loss: tensor(0.3536) feature loss: tensor(0.1531)
Local adapation with distilling: 0.0001
training loss: tensor(0.3770) feature loss: tensor(0.1547)
Local adapation with distilling: 0.0001
training loss: tensor(0.4878) feature loss: tensor(0.1438)
Local adapation with distilling: 0.0001
training loss: tensor(0.4365) feature loss: tensor(0.1555)
Local adapation with distilling: 0.0001
training loss: tensor(0.3178) feature loss: tensor(0.1456)
Local adapation with distilling: 0.0001
training loss: tensor(0.3257) feature loss: tensor(0.1522)
Local adapation with distilling: 0.0001
training loss: tensor(0.5349) feature loss: tensor(0.1561)
         GM acc on global data: 0.6356 length of data: 10000
-------------Round number:  74  -------------
selected users: [85, 64, 63, 80, 6, 12, 43, 17, 7, 8]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
all data: 494
Local adapation with distilling: 0.0001
training loss: tensor(0.3683) feature loss: tensor(0.1754)
Local adapation with distilling: 0.0001
training loss: tensor(0.4125) feature loss: tensor(0.1602)
Local adapation with distilling: 0.0001
training loss: tensor(0.3658) feature loss: tensor(0.1677)
Local adapation with distilling: 0.0001
training loss: tensor(0.3375) feature loss: tensor(0.1565)
Local adapation with distilling: 0.0001
training loss: tensor(0.5156) feature loss: tensor(0.1644)
Local adapation with distilling: 0.0001
training loss: tensor(0.4532) feature loss: tensor(0.1607)
Local adapation with distilling: 0.0001
training loss: tensor(0.3664) feature loss: tensor(0.1608)
Local adapation with distilling: 0.0001
training loss: tensor(0.3380) feature loss: tensor(0.1525)
Local adapation with distilling: 0.0001
training loss: tensor(0.4431) feature loss: tensor(0.1553)
Local adapation with distilling: 0.0001
training loss: tensor(0.3526) feature loss: tensor(0.1721)
         GM acc on global data: 0.6439 length of data: 10000
-------------Round number:  75  -------------
selected users: [36, 7, 6, 45, 56, 54, 22, 37, 53, 68]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([55, 16, 32, 32]) torch.Size([55])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([57, 16, 32, 32]) torch.Size([57])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
all data: 515
Local adapation with distilling: 0.0001
training loss: tensor(0.4105) feature loss: tensor(0.2591)
Local adapation with distilling: 0.0001
training loss: tensor(0.6205) feature loss: tensor(0.3050)
Local adapation with distilling: 0.0001
training loss: tensor(0.5680) feature loss: tensor(0.2802)
Local adapation with distilling: 0.0001
training loss: tensor(0.5106) feature loss: tensor(0.2372)
Local adapation with distilling: 0.0001
training loss: tensor(0.5868) feature loss: tensor(0.3398)
Local adapation with distilling: 0.0001
training loss: tensor(0.7660) feature loss: tensor(0.2820)
Local adapation with distilling: 0.0001
training loss: tensor(0.9210) feature loss: tensor(0.3416)
Local adapation with distilling: 0.0001
training loss: tensor(0.4852) feature loss: tensor(0.2807)
Local adapation with distilling: 0.0001
training loss: tensor(0.5115) feature loss: tensor(0.2823)
Local adapation with distilling: 0.0001
training loss: tensor(0.5280) feature loss: tensor(0.3208)
         GM acc on global data: 0.6436 length of data: 10000
-------------Round number:  76  -------------
selected users: [38, 37, 32, 50, 10, 94, 19, 44, 86, 23]
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
all data: 497
Local adapation with distilling: 0.0001
training loss: tensor(0.3412) feature loss: tensor(0.1656)
Local adapation with distilling: 0.0001
training loss: tensor(0.3296) feature loss: tensor(0.1680)
Local adapation with distilling: 0.0001
training loss: tensor(0.4643) feature loss: tensor(0.1754)
Local adapation with distilling: 0.0001
training loss: tensor(0.4116) feature loss: tensor(0.1958)
Local adapation with distilling: 0.0001
training loss: tensor(0.4176) feature loss: tensor(0.1808)
Local adapation with distilling: 0.0001
training loss: tensor(0.3593) feature loss: tensor(0.1606)
Local adapation with distilling: 0.0001
training loss: tensor(0.3602) feature loss: tensor(0.1743)
Local adapation with distilling: 0.0001
training loss: tensor(0.4195) feature loss: tensor(0.1710)
Local adapation with distilling: 0.0001
training loss: tensor(0.3477) feature loss: tensor(0.1700)
Local adapation with distilling: 0.0001
training loss: tensor(0.4702) feature loss: tensor(0.1796)
         GM acc on global data: 0.6392 length of data: 10000
-------------Round number:  77  -------------
selected users: [5, 93, 41, 96, 16, 42, 81, 91, 50, 58]
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 503
Local adapation with distilling: 0.0001
training loss: tensor(0.4142) feature loss: tensor(0.1670)
Local adapation with distilling: 0.0001
training loss: tensor(0.4180) feature loss: tensor(0.1802)
Local adapation with distilling: 0.0001
training loss: tensor(0.3574) feature loss: tensor(0.1539)
Local adapation with distilling: 0.0001
training loss: tensor(0.5736) feature loss: tensor(0.1577)
Local adapation with distilling: 0.0001
training loss: tensor(0.3716) feature loss: tensor(0.1554)
Local adapation with distilling: 0.0001
training loss: tensor(0.3646) feature loss: tensor(0.1525)
Local adapation with distilling: 0.0001
training loss: tensor(0.7420) feature loss: tensor(0.1658)
Local adapation with distilling: 0.0001
training loss: tensor(0.3914) feature loss: tensor(0.1612)
Local adapation with distilling: 0.0001
training loss: tensor(0.3553) feature loss: tensor(0.1788)
Local adapation with distilling: 0.0001
training loss: tensor(0.3613) feature loss: tensor(0.1553)
         GM acc on global data: 0.6442 length of data: 10000
-------------Round number:  78  -------------
selected users: [9, 46, 7, 63, 15, 2, 74, 31, 5, 36]
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 495
Local adapation with distilling: 0.0001
training loss: tensor(0.4929) feature loss: tensor(0.1463)
Local adapation with distilling: 0.0001
training loss: tensor(0.3105) feature loss: tensor(0.1363)
Local adapation with distilling: 0.0001
training loss: tensor(0.3383) feature loss: tensor(0.1374)
Local adapation with distilling: 0.0001
training loss: tensor(0.3113) feature loss: tensor(0.1430)
Local adapation with distilling: 0.0001
training loss: tensor(0.4233) feature loss: tensor(0.1555)
Local adapation with distilling: 0.0001
training loss: tensor(0.2917) feature loss: tensor(0.1371)
Local adapation with distilling: 0.0001
training loss: tensor(0.3221) feature loss: tensor(0.1356)
Local adapation with distilling: 0.0001
training loss: tensor(0.3636) feature loss: tensor(0.1347)
Local adapation with distilling: 0.0001
training loss: tensor(0.3433) feature loss: tensor(0.1445)
Local adapation with distilling: 0.0001
training loss: tensor(0.2971) feature loss: tensor(0.1354)
         GM acc on global data: 0.6428 length of data: 10000
-------------Round number:  79  -------------
selected users: [68, 18, 86, 60, 56, 32, 30, 24, 45, 92]
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([55, 16, 32, 32]) torch.Size([55])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
all data: 497
Local adapation with distilling: 0.0001
training loss: tensor(0.3514) feature loss: tensor(0.1544)
Local adapation with distilling: 0.0001
training loss: tensor(0.3847) feature loss: tensor(0.1565)
Local adapation with distilling: 0.0001
training loss: tensor(0.3051) feature loss: tensor(0.1449)
Local adapation with distilling: 0.0001
training loss: tensor(0.3208) feature loss: tensor(0.1645)
Local adapation with distilling: 0.0001
training loss: tensor(0.3383) feature loss: tensor(0.1388)
Local adapation with distilling: 0.0001
training loss: tensor(0.4082) feature loss: tensor(0.1391)
Local adapation with distilling: 0.0001
training loss: tensor(0.3709) feature loss: tensor(0.1433)
Local adapation with distilling: 0.0001
training loss: tensor(0.3550) feature loss: tensor(0.1461)
Local adapation with distilling: 0.0001
training loss: tensor(0.3416) feature loss: tensor(0.1443)
Local adapation with distilling: 0.0001
training loss: tensor(0.3963) feature loss: tensor(0.1590)
         GM acc on global data: 0.6458 length of data: 10000
-------------Round number:  80  -------------
selected users: [37, 65, 95, 53, 66, 30, 73, 85, 45, 36]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([57, 16, 32, 32]) torch.Size([57])
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 509
Local adapation with distilling: 0.0001
training loss: tensor(0.2972) feature loss: tensor(0.1375)
Local adapation with distilling: 0.0001
training loss: tensor(0.3907) feature loss: tensor(0.1636)
Local adapation with distilling: 0.0001
training loss: tensor(0.3099) feature loss: tensor(0.1400)
Local adapation with distilling: 0.0001
training loss: tensor(0.3324) feature loss: tensor(0.1431)
Local adapation with distilling: 0.0001
training loss: tensor(0.3818) feature loss: tensor(0.1387)
Local adapation with distilling: 0.0001
training loss: tensor(0.3364) feature loss: tensor(0.1338)
Local adapation with distilling: 0.0001
training loss: tensor(0.3618) feature loss: tensor(0.1563)
Local adapation with distilling: 0.0001
training loss: tensor(0.3260) feature loss: tensor(0.1490)
Local adapation with distilling: 0.0001
training loss: tensor(0.3095) feature loss: tensor(0.1436)
Local adapation with distilling: 0.0001
training loss: tensor(0.3024) feature loss: tensor(0.1389)
         GM acc on global data: 0.6504 length of data: 10000
-------------Round number:  81  -------------
selected users: [73, 89, 41, 78, 51, 21, 30, 69, 8, 5]
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
all data: 495
Local adapation with distilling: 0.0001
training loss: tensor(0.3172) feature loss: tensor(0.1490)
Local adapation with distilling: 0.0001
training loss: tensor(0.2971) feature loss: tensor(0.1326)
Local adapation with distilling: 0.0001
training loss: tensor(0.2955) feature loss: tensor(0.1367)
Local adapation with distilling: 0.0001
training loss: tensor(0.3527) feature loss: tensor(0.1517)
Local adapation with distilling: 0.0001
training loss: tensor(0.3534) feature loss: tensor(0.1354)
Local adapation with distilling: 0.0001
training loss: tensor(0.3760) feature loss: tensor(0.1391)
Local adapation with distilling: 0.0001
training loss: tensor(0.3177) feature loss: tensor(0.1314)
Local adapation with distilling: 0.0001
training loss: tensor(0.3168) feature loss: tensor(0.1344)
Local adapation with distilling: 0.0001
training loss: tensor(0.2937) feature loss: tensor(0.1429)
Local adapation with distilling: 0.0001
training loss: tensor(0.3209) feature loss: tensor(0.1442)
         GM acc on global data: 0.6477 length of data: 10000
-------------Round number:  82  -------------
selected users: [72, 33, 58, 2, 55, 84, 54, 75, 28, 40]
random features: torch.Size([57, 16, 32, 32]) torch.Size([57])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
all data: 496
Local adapation with distilling: 0.0001
training loss: tensor(0.3565) feature loss: tensor(0.1669)
Local adapation with distilling: 0.0001
training loss: tensor(0.3416) feature loss: tensor(0.1643)
Local adapation with distilling: 0.0001
training loss: tensor(0.3579) feature loss: tensor(0.1655)
Local adapation with distilling: 0.0001
training loss: tensor(0.3264) feature loss: tensor(0.1657)
Local adapation with distilling: 0.0001
training loss: tensor(0.3813) feature loss: tensor(0.1755)
Local adapation with distilling: 0.0001
training loss: tensor(0.3916) feature loss: tensor(0.1757)
Local adapation with distilling: 0.0001
training loss: tensor(0.5041) feature loss: tensor(0.1493)
Local adapation with distilling: 0.0001
training loss: tensor(0.3719) feature loss: tensor(0.1876)
Local adapation with distilling: 0.0001
training loss: tensor(0.5340) feature loss: tensor(0.1709)
Local adapation with distilling: 0.0001
training loss: tensor(0.3786) feature loss: tensor(0.1576)
         GM acc on global data: 0.6359 length of data: 10000
-------------Round number:  83  -------------
selected users: [6, 65, 95, 84, 61, 12, 30, 69, 35, 1]
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
all data: 498
Local adapation with distilling: 0.0001
training loss: tensor(0.4213) feature loss: tensor(0.1569)
Local adapation with distilling: 0.0001
training loss: tensor(0.4231) feature loss: tensor(0.1939)
Local adapation with distilling: 0.0001
training loss: tensor(0.3616) feature loss: tensor(0.1703)
Local adapation with distilling: 0.0001
training loss: tensor(0.3784) feature loss: tensor(0.1826)
Local adapation with distilling: 0.0001
training loss: tensor(0.4060) feature loss: tensor(0.1822)
Local adapation with distilling: 0.0001
training loss: tensor(0.4247) feature loss: tensor(0.1752)
Local adapation with distilling: 0.0001
training loss: tensor(0.3447) feature loss: tensor(0.1719)
Local adapation with distilling: 0.0001
training loss: tensor(0.3580) feature loss: tensor(0.1802)
Local adapation with distilling: 0.0001
training loss: tensor(0.4840) feature loss: tensor(0.1639)
Local adapation with distilling: 0.0001
training loss: tensor(0.4428) feature loss: tensor(0.2017)
         GM acc on global data: 0.6364 length of data: 10000
-------------Round number:  84  -------------
selected users: [94, 55, 80, 1, 90, 11, 32, 8, 6, 82]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
all data: 493
Local adapation with distilling: 0.0001
training loss: tensor(0.3845) feature loss: tensor(0.1572)
Local adapation with distilling: 0.0001
training loss: tensor(0.3721) feature loss: tensor(0.1841)
Local adapation with distilling: 0.0001
training loss: tensor(0.3743) feature loss: tensor(0.1776)
Local adapation with distilling: 0.0001
training loss: tensor(0.4048) feature loss: tensor(0.1815)
Local adapation with distilling: 0.0001
training loss: tensor(0.4315) feature loss: tensor(0.1847)
Local adapation with distilling: 0.0001
training loss: tensor(0.3928) feature loss: tensor(0.1863)
Local adapation with distilling: 0.0001
training loss: tensor(0.4425) feature loss: tensor(0.1834)
Local adapation with distilling: 0.0001
training loss: tensor(0.3507) feature loss: tensor(0.1763)
Local adapation with distilling: 0.0001
training loss: tensor(0.3956) feature loss: tensor(0.1656)
Local adapation with distilling: 0.0001
training loss: tensor(0.3970) feature loss: tensor(0.1814)
         GM acc on global data: 0.6448 length of data: 10000
-------------Round number:  85  -------------
selected users: [81, 25, 40, 87, 41, 23, 10, 89, 50, 54]
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
all data: 491
Local adapation with distilling: 0.0001
training loss: tensor(0.7506) feature loss: tensor(0.1740)
Local adapation with distilling: 0.0001
training loss: tensor(0.3798) feature loss: tensor(0.1591)
Local adapation with distilling: 0.0001
training loss: tensor(0.3626) feature loss: tensor(0.1638)
Local adapation with distilling: 0.0001
training loss: tensor(0.4370) feature loss: tensor(0.1913)
Local adapation with distilling: 0.0001
training loss: tensor(0.3353) feature loss: tensor(0.1658)
Local adapation with distilling: 0.0001
training loss: tensor(0.4141) feature loss: tensor(0.1730)
Local adapation with distilling: 0.0001
training loss: tensor(0.3940) feature loss: tensor(0.1737)
Local adapation with distilling: 0.0001
training loss: tensor(0.3347) feature loss: tensor(0.1662)
Local adapation with distilling: 0.0001
training loss: tensor(0.3474) feature loss: tensor(0.1724)
Local adapation with distilling: 0.0001
training loss: tensor(0.4660) feature loss: tensor(0.1630)
         GM acc on global data: 0.6431 length of data: 10000
-------------Round number:  86  -------------
selected users: [69, 74, 34, 68, 42, 0, 32, 88, 8, 3]
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
all data: 489
Local adapation with distilling: 0.0001
training loss: tensor(0.3245) feature loss: tensor(0.1703)
Local adapation with distilling: 0.0001
training loss: tensor(0.3252) feature loss: tensor(0.1568)
Local adapation with distilling: 0.0001
training loss: tensor(0.3438) feature loss: tensor(0.1559)
Local adapation with distilling: 0.0001
training loss: tensor(0.3270) feature loss: tensor(0.1620)
Local adapation with distilling: 0.0001
training loss: tensor(0.3298) feature loss: tensor(0.1457)
Local adapation with distilling: 0.0001
training loss: tensor(0.3432) feature loss: tensor(0.1660)
Local adapation with distilling: 0.0001
training loss: tensor(0.3467) feature loss: tensor(0.1521)
Local adapation with distilling: 0.0001
training loss: tensor(0.3242) feature loss: tensor(0.1632)
Local adapation with distilling: 0.0001
training loss: tensor(0.2954) feature loss: tensor(0.1621)
Local adapation with distilling: 0.0001
training loss: tensor(0.3771) feature loss: tensor(0.1531)
         GM acc on global data: 0.6482 length of data: 10000
-------------Round number:  87  -------------
selected users: [16, 81, 85, 32, 39, 25, 26, 29, 65, 7]
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
all data: 506
Local adapation with distilling: 0.0001
training loss: tensor(0.3179) feature loss: tensor(0.1347)
Local adapation with distilling: 0.0001
training loss: tensor(0.8311) feature loss: tensor(0.1497)
Local adapation with distilling: 0.0001
training loss: tensor(0.3017) feature loss: tensor(0.1475)
Local adapation with distilling: 0.0001
training loss: tensor(0.3096) feature loss: tensor(0.1510)
Local adapation with distilling: 0.0001
training loss: tensor(0.4046) feature loss: tensor(0.1429)
Local adapation with distilling: 0.0001
training loss: tensor(0.3003) feature loss: tensor(0.1501)
Local adapation with distilling: 0.0001
training loss: tensor(0.3026) feature loss: tensor(0.1432)
Local adapation with distilling: 0.0001
training loss: tensor(0.2799) feature loss: tensor(0.1401)
Local adapation with distilling: 0.0001
training loss: tensor(0.3302) feature loss: tensor(0.1565)
Local adapation with distilling: 0.0001
training loss: tensor(0.3280) feature loss: tensor(0.1326)
         GM acc on global data: 0.6509 length of data: 10000
-------------Round number:  88  -------------
selected users: [95, 53, 43, 84, 2, 74, 55, 31, 54, 97]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([57, 16, 32, 32]) torch.Size([57])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
all data: 495
Local adapation with distilling: 0.0001
training loss: tensor(0.2853) feature loss: tensor(0.1327)
Local adapation with distilling: 0.0001
training loss: tensor(0.3073) feature loss: tensor(0.1372)
Local adapation with distilling: 0.0001
training loss: tensor(0.3221) feature loss: tensor(0.1411)
Local adapation with distilling: 0.0001
training loss: tensor(0.3207) feature loss: tensor(0.1420)
Local adapation with distilling: 0.0001
training loss: tensor(0.2978) feature loss: tensor(0.1427)
Local adapation with distilling: 0.0001
training loss: tensor(0.3042) feature loss: tensor(0.1350)
Local adapation with distilling: 0.0001
training loss: tensor(0.3078) feature loss: tensor(0.1470)
Local adapation with distilling: 0.0001
training loss: tensor(0.3373) feature loss: tensor(0.1356)
Local adapation with distilling: 0.0001
training loss: tensor(0.4018) feature loss: tensor(0.1372)
Local adapation with distilling: 0.0001
training loss: tensor(0.3573) feature loss: tensor(0.1451)
         GM acc on global data: 0.6515 length of data: 10000
-------------Round number:  89  -------------
selected users: [65, 21, 87, 6, 46, 74, 44, 60, 72, 5]
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([57, 16, 32, 32]) torch.Size([57])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
all data: 497
Local adapation with distilling: 0.0001
training loss: tensor(0.3186) feature loss: tensor(0.1456)
Local adapation with distilling: 0.0001
training loss: tensor(0.3370) feature loss: tensor(0.1386)
Local adapation with distilling: 0.0001
training loss: tensor(0.3636) feature loss: tensor(0.1445)
Local adapation with distilling: 0.0001
training loss: tensor(0.3205) feature loss: tensor(0.1278)
Local adapation with distilling: 0.0001
training loss: tensor(0.3019) feature loss: tensor(0.1295)
Local adapation with distilling: 0.0001
training loss: tensor(0.2650) feature loss: tensor(0.1311)
Local adapation with distilling: 0.0001
training loss: tensor(0.3396) feature loss: tensor(0.1435)
Local adapation with distilling: 0.0001
training loss: tensor(0.2864) feature loss: tensor(0.1340)
Local adapation with distilling: 0.0001
training loss: tensor(0.3054) feature loss: tensor(0.1470)
Local adapation with distilling: 0.0001
training loss: tensor(0.3271) feature loss: tensor(0.1327)
         GM acc on global data: 0.6481 length of data: 10000
-------------Round number:  90  -------------
selected users: [25, 85, 96, 89, 65, 94, 5, 35, 36, 92]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
all data: 504
Local adapation with distilling: 0.0001
training loss: tensor(0.3567) feature loss: tensor(0.1741)
Local adapation with distilling: 0.0001
training loss: tensor(0.3138) feature loss: tensor(0.1634)
Local adapation with distilling: 0.0001
training loss: tensor(0.5080) feature loss: tensor(0.1523)
Local adapation with distilling: 0.0001
training loss: tensor(0.3078) feature loss: tensor(0.1473)
Local adapation with distilling: 0.0001
training loss: tensor(0.3215) feature loss: tensor(0.1650)
Local adapation with distilling: 0.0001
training loss: tensor(0.3341) feature loss: tensor(0.1482)
Local adapation with distilling: 0.0001
training loss: tensor(0.3350) feature loss: tensor(0.1580)
Local adapation with distilling: 0.0001
training loss: tensor(0.4420) feature loss: tensor(0.1461)
Local adapation with distilling: 0.0001
training loss: tensor(0.3133) feature loss: tensor(0.1495)
Local adapation with distilling: 0.0001
training loss: tensor(0.3700) feature loss: tensor(0.1625)
         GM acc on global data: 0.6467 length of data: 10000
-------------Round number:  91  -------------
selected users: [75, 25, 3, 52, 78, 54, 59, 26, 62, 97]
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
all data: 502
Local adapation with distilling: 0.0001
training loss: tensor(0.3477) feature loss: tensor(0.1557)
Local adapation with distilling: 0.0001
training loss: tensor(0.3285) feature loss: tensor(0.1693)
Local adapation with distilling: 0.0001
training loss: tensor(0.3415) feature loss: tensor(0.1354)
Local adapation with distilling: 0.0001
training loss: tensor(0.5460) feature loss: tensor(0.1449)
Local adapation with distilling: 0.0001
training loss: tensor(0.4012) feature loss: tensor(0.1668)
Local adapation with distilling: 0.0001
training loss: tensor(0.3591) feature loss: tensor(0.1372)
Local adapation with distilling: 0.0001
training loss: tensor(0.4443) feature loss: tensor(0.1493)
Local adapation with distilling: 0.0001
training loss: tensor(0.3117) feature loss: tensor(0.1510)
Local adapation with distilling: 0.0001
training loss: tensor(0.3898) feature loss: tensor(0.1575)
Local adapation with distilling: 0.0001
training loss: tensor(0.3724) feature loss: tensor(0.1442)
         GM acc on global data: 0.6381 length of data: 10000
-------------Round number:  92  -------------
selected users: [25, 99, 73, 61, 66, 36, 23, 83, 77, 6]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
all data: 499
Local adapation with distilling: 0.0001
training loss: tensor(0.3253) feature loss: tensor(0.1508)
Local adapation with distilling: 0.0001
training loss: tensor(0.4028) feature loss: tensor(0.1594)
Local adapation with distilling: 0.0001
training loss: tensor(0.3760) feature loss: tensor(0.1831)
Local adapation with distilling: 0.0001
training loss: tensor(0.3886) feature loss: tensor(0.1550)
Local adapation with distilling: 0.0001
training loss: tensor(0.3750) feature loss: tensor(0.1489)
Local adapation with distilling: 0.0001
training loss: tensor(0.3132) feature loss: tensor(0.1553)
Local adapation with distilling: 0.0001
training loss: tensor(0.4064) feature loss: tensor(0.1614)
Local adapation with distilling: 0.0001
training loss: tensor(0.4123) feature loss: tensor(0.1730)
Local adapation with distilling: 0.0001
training loss: tensor(0.4702) feature loss: tensor(0.1514)
Local adapation with distilling: 0.0001
training loss: tensor(0.3666) feature loss: tensor(0.1512)
         GM acc on global data: 0.6374 length of data: 10000
-------------Round number:  93  -------------
selected users: [75, 82, 56, 27, 42, 35, 1, 97, 66, 61]
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([55, 16, 32, 32]) torch.Size([55])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.3743) feature loss: tensor(0.1998)
Local adapation with distilling: 0.0001
training loss: tensor(0.3879) feature loss: tensor(0.1768)
Local adapation with distilling: 0.0001
training loss: tensor(0.3937) feature loss: tensor(0.1937)
Local adapation with distilling: 0.0001
training loss: tensor(0.4739) feature loss: tensor(0.1666)
Local adapation with distilling: 0.0001
training loss: tensor(0.3901) feature loss: tensor(0.1889)
Local adapation with distilling: 0.0001
training loss: tensor(0.4421) feature loss: tensor(0.2174)
Local adapation with distilling: 0.0001
training loss: tensor(0.4045) feature loss: tensor(0.1973)
Local adapation with distilling: 0.0001
training loss: tensor(0.3806) feature loss: tensor(0.1798)
Local adapation with distilling: 0.0001
training loss: tensor(0.3908) feature loss: tensor(0.1841)
Local adapation with distilling: 0.0001
training loss: tensor(0.3942) feature loss: tensor(0.2152)
         GM acc on global data: 0.6411 length of data: 10000
-------------Round number:  94  -------------
selected users: [13, 73, 5, 18, 99, 48, 23, 4, 35, 17]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
all data: 499
Local adapation with distilling: 0.0001
training loss: tensor(0.3596) feature loss: tensor(0.1593)
Local adapation with distilling: 0.0001
training loss: tensor(0.3211) feature loss: tensor(0.1626)
Local adapation with distilling: 0.0001
training loss: tensor(0.3148) feature loss: tensor(0.1546)
Local adapation with distilling: 0.0001
training loss: tensor(0.3802) feature loss: tensor(0.1580)
Local adapation with distilling: 0.0001
training loss: tensor(0.3492) feature loss: tensor(0.1637)
Local adapation with distilling: 0.0001
training loss: tensor(0.3665) feature loss: tensor(0.1456)
Local adapation with distilling: 0.0001
training loss: tensor(0.3402) feature loss: tensor(0.1569)
Local adapation with distilling: 0.0001
training loss: tensor(0.3519) feature loss: tensor(0.1456)
Local adapation with distilling: 0.0001
training loss: tensor(0.3366) feature loss: tensor(0.1528)
Local adapation with distilling: 0.0001
training loss: tensor(0.2937) feature loss: tensor(0.1435)
         GM acc on global data: 0.6468 length of data: 10000
-------------Round number:  95  -------------
selected users: [88, 9, 1, 60, 95, 26, 45, 71, 44, 21]
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
all data: 495
Local adapation with distilling: 0.0001
training loss: tensor(0.2575) feature loss: tensor(0.1332)
Local adapation with distilling: 0.0001
training loss: tensor(0.5448) feature loss: tensor(0.1505)
Local adapation with distilling: 0.0001
training loss: tensor(0.2663) feature loss: tensor(0.1391)
Local adapation with distilling: 0.0001
training loss: tensor(0.2593) feature loss: tensor(0.1307)
Local adapation with distilling: 0.0001
training loss: tensor(0.2510) feature loss: tensor(0.1341)
Local adapation with distilling: 0.0001
training loss: tensor(0.2608) feature loss: tensor(0.1321)
Local adapation with distilling: 0.0001
training loss: tensor(0.2613) feature loss: tensor(0.1233)
Local adapation with distilling: 0.0001
training loss: tensor(0.2335) feature loss: tensor(0.1245)
Local adapation with distilling: 0.0001
training loss: tensor(0.2912) feature loss: tensor(0.1407)
Local adapation with distilling: 0.0001
training loss: tensor(0.2776) feature loss: tensor(0.1317)
         GM acc on global data: 0.6406 length of data: 10000
-------------Round number:  96  -------------
selected users: [41, 28, 52, 15, 87, 17, 75, 42, 45, 49]
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
all data: 494
Local adapation with distilling: 0.0001
training loss: tensor(0.2917) feature loss: tensor(0.1420)
Local adapation with distilling: 0.0001
training loss: tensor(0.4585) feature loss: tensor(0.1448)
Local adapation with distilling: 0.0001
training loss: tensor(0.5969) feature loss: tensor(0.1482)
Local adapation with distilling: 0.0001
training loss: tensor(0.5153) feature loss: tensor(0.1558)
Local adapation with distilling: 0.0001
training loss: tensor(0.3737) feature loss: tensor(0.1629)
Local adapation with distilling: 0.0001
training loss: tensor(0.2683) feature loss: tensor(0.1296)
Local adapation with distilling: 0.0001
training loss: tensor(0.2939) feature loss: tensor(0.1586)
Local adapation with distilling: 0.0001
training loss: tensor(0.3092) feature loss: tensor(0.1322)
Local adapation with distilling: 0.0001
training loss: tensor(0.2711) feature loss: tensor(0.1336)
Local adapation with distilling: 0.0001
training loss: tensor(0.3195) feature loss: tensor(0.1506)
         GM acc on global data: 0.6451 length of data: 10000
-------------Round number:  97  -------------
selected users: [31, 43, 64, 56, 85, 2, 70, 21, 34, 50]
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([55, 16, 32, 32]) torch.Size([55])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
all data: 490
Local adapation with distilling: 0.0001
training loss: tensor(0.3426) feature loss: tensor(0.1707)
Local adapation with distilling: 0.0001
training loss: tensor(0.3388) feature loss: tensor(0.1734)
Local adapation with distilling: 0.0001
training loss: tensor(0.3880) feature loss: tensor(0.1503)
Local adapation with distilling: 0.0001
training loss: tensor(0.2971) feature loss: tensor(0.1670)
Local adapation with distilling: 0.0001
training loss: tensor(0.2936) feature loss: tensor(0.1568)
Local adapation with distilling: 0.0001
training loss: tensor(0.3000) feature loss: tensor(0.1705)
Local adapation with distilling: 0.0001
training loss: tensor(0.3101) feature loss: tensor(0.1787)
Local adapation with distilling: 0.0001
training loss: tensor(0.3170) feature loss: tensor(0.1586)
Local adapation with distilling: 0.0001
training loss: tensor(0.3148) feature loss: tensor(0.1747)
Local adapation with distilling: 0.0001
training loss: tensor(0.3329) feature loss: tensor(0.1680)
         GM acc on global data: 0.643 length of data: 10000
-------------Round number:  98  -------------
selected users: [11, 48, 97, 14, 22, 36, 99, 47, 33, 81]
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
all data: 488
Local adapation with distilling: 0.0001
training loss: tensor(0.3263) feature loss: tensor(0.1621)
Local adapation with distilling: 0.0001
training loss: tensor(0.3491) feature loss: tensor(0.1691)
Local adapation with distilling: 0.0001
training loss: tensor(0.3572) feature loss: tensor(0.1919)
Local adapation with distilling: 0.0001
training loss: tensor(0.3797) feature loss: tensor(0.1876)
Local adapation with distilling: 0.0001
training loss: tensor(0.6851) feature loss: tensor(0.1591)
Local adapation with distilling: 0.0001
training loss: tensor(0.3163) feature loss: tensor(0.1643)
Local adapation with distilling: 0.0001
training loss: tensor(0.3383) feature loss: tensor(0.1702)
Local adapation with distilling: 0.0001
training loss: tensor(0.3917) feature loss: tensor(0.1727)
Local adapation with distilling: 0.0001
training loss: tensor(0.3250) feature loss: tensor(0.1743)
Local adapation with distilling: 0.0001
training loss: tensor(0.8067) feature loss: tensor(0.1674)
         GM acc on global data: 0.645 length of data: 10000
-------------Round number:  99  -------------
selected users: [14, 34, 30, 78, 16, 15, 91, 38, 10, 85]
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 501
Local adapation with distilling: 0.0001
training loss: tensor(0.3332) feature loss: tensor(0.1739)
Local adapation with distilling: 0.0001
training loss: tensor(0.3312) feature loss: tensor(0.1543)
Local adapation with distilling: 0.0001
training loss: tensor(0.3642) feature loss: tensor(0.1637)
Local adapation with distilling: 0.0001
training loss: tensor(0.3663) feature loss: tensor(0.1897)
Local adapation with distilling: 0.0001
training loss: tensor(0.3559) feature loss: tensor(0.1426)
Local adapation with distilling: 0.0001
training loss: tensor(0.5271) feature loss: tensor(0.1896)
Local adapation with distilling: 0.0001
training loss: tensor(0.3629) feature loss: tensor(0.1530)
Local adapation with distilling: 0.0001
training loss: tensor(0.3277) feature loss: tensor(0.1854)
Local adapation with distilling: 0.0001
training loss: tensor(0.3901) feature loss: tensor(0.1821)
Local adapation with distilling: 0.0001
training loss: tensor(0.3156) feature loss: tensor(0.1738)
         GM acc on global data: 0.6436 length of data: 10000
