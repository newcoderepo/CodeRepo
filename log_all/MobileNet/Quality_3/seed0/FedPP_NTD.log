nohup: ignoring input
================================================================================
Summary of training process:
Dataset                : Cifar10
Batch size             : 64
Learing rate           : 0.001
Number of total clients: 100
Split method           : quantity
Split parameter        : 3.0
Clients per round      : 10
Number of global rounds: 100
Number of local rounds : 10
Feature from layer     : 0
Feature percentage     : 0.1
Local training loss    : CE_CE_NT
Loss of beta           : 1.0
Algorithm              : FedFea
Modelname              : MOBNET
Mode                   : training
Seed                   : 0
================================================================================
Files already downloaded and verified
Files already downloaded and verified
Class frequencies:
client,class0,class1,class2,class3,class4,class5,class6,class7,class8,class9,Amount
Client   0,0.298,0.00,0.00,0.00,0.00,0.375,0.00,0.00,0.327,0.00,496
Client   1,0.00,0.321,0.00,0.00,0.00,0.358,0.00,0.00,0.00,0.321,520
Client   2,0.307,0.346,0.346,0.00,0.00,0.00,0.00,0.00,0.00,0.00,482
Client   3,0.00,0.00,0.00,0.337,0.00,0.00,0.377,0.286,0.00,0.00,531
Client   4,0.00,0.00,0.340,0.00,0.320,0.00,0.00,0.00,0.00,0.340,491
Client   5,0.00,0.00,0.327,0.00,0.308,0.365,0.00,0.00,0.00,0.00,510
Client   6,0.00,0.00,0.319,0.00,0.300,0.00,0.382,0.00,0.00,0.00,524
Client   7,0.00,0.00,0.00,0.00,0.330,0.00,0.00,0.319,0.00,0.351,476
Client   8,0.00,0.347,0.00,0.00,0.00,0.00,0.00,0.316,0.337,0.00,481
Client   9,0.286,0.00,0.00,0.00,0.00,0.00,0.389,0.00,0.00,0.325,514
Client  10,0.315,0.00,0.00,0.00,0.00,0.00,0.00,0.326,0.00,0.358,466
Client  11,0.00,0.313,0.00,0.00,0.00,0.00,0.375,0.00,0.00,0.313,534
Client  12,0.306,0.347,0.347,0.00,0.00,0.00,0.00,0.00,0.00,0.00,481
Client  13,0.00,0.329,0.00,0.352,0.00,0.00,0.00,0.00,0.319,0.00,508
Client  14,0.00,0.00,0.00,0.359,0.315,0.00,0.00,0.00,0.325,0.00,498
Client  15,0.00,0.00,0.00,0.00,0.00,0.361,0.00,0.00,0.315,0.324,515
Client  16,0.00,0.00,0.00,0.337,0.00,0.00,0.377,0.286,0.00,0.00,531
Client  17,0.00,0.00,0.00,0.00,0.00,0.346,0.372,0.283,0.00,0.00,538
Client  18,0.00,0.337,0.00,0.00,0.00,0.00,0.00,0.00,0.327,0.337,496
Client  19,0.00,0.00,0.00,0.356,0.312,0.00,0.00,0.00,0.00,0.332,503
Client  20,0.309,0.351,0.00,0.00,0.00,0.00,0.00,0.00,0.340,0.00,476
Client  21,0.312,0.355,0.00,0.00,0.333,0.00,0.00,0.00,0.00,0.00,471
Client  22,0.00,0.00,0.326,0.349,0.00,0.00,0.00,0.00,0.00,0.326,513
Client  23,0.298,0.00,0.339,0.363,0.00,0.00,0.00,0.00,0.00,0.00,493
Client  24,0.00,0.00,0.340,0.00,0.320,0.00,0.00,0.00,0.00,0.340,491
Client  25,0.00,0.00,0.00,0.00,0.00,0.367,0.00,0.302,0.00,0.331,504
Client  26,0.00,0.00,0.00,0.00,0.00,0.00,0.378,0.00,0.306,0.316,529
Client  27,0.00,0.00,0.00,0.368,0.320,0.00,0.00,0.312,0.00,0.00,487
Client  28,0.00,0.00,0.00,0.00,0.00,0.360,0.00,0.00,0.315,0.325,514
Client  29,0.00,0.00,0.00,0.328,0.00,0.00,0.366,0.00,0.00,0.306,546
Client  30,0.309,0.00,0.352,0.00,0.00,0.00,0.00,0.00,0.339,0.00,475
Client  31,0.00,0.344,0.00,0.00,0.00,0.00,0.00,0.313,0.00,0.344,486
Client  32,0.00,0.00,0.335,0.359,0.00,0.00,0.00,0.305,0.00,0.00,498
Client  33,0.302,0.00,0.00,0.368,0.00,0.00,0.00,0.00,0.331,0.00,487
Client  34,0.00,0.352,0.00,0.00,0.328,0.00,0.00,0.320,0.00,0.00,475
Client  35,0.00,0.315,0.00,0.337,0.00,0.348,0.00,0.00,0.00,0.00,531
Client  36,0.289,0.00,0.00,0.00,0.00,0.00,0.394,0.00,0.317,0.00,508
Client  37,0.00,0.00,0.00,0.00,0.307,0.00,0.394,0.299,0.00,0.00,508
Client  38,0.00,0.00,0.00,0.00,0.00,0.339,0.366,0.00,0.295,0.00,546
Client  39,0.00,0.00,0.322,0.00,0.00,0.356,0.00,0.00,0.00,0.322,519
Client  40,0.320,0.00,0.00,0.00,0.00,0.00,0.00,0.330,0.350,0.00,460
Client  41,0.00,0.352,0.00,0.00,0.328,0.00,0.00,0.320,0.00,0.00,475
Client  42,0.00,0.00,0.352,0.00,0.328,0.00,0.00,0.320,0.00,0.00,475
Client  43,0.298,0.00,0.00,0.363,0.00,0.00,0.00,0.00,0.00,0.339,493
Client  44,0.313,0.00,0.355,0.00,0.332,0.00,0.00,0.00,0.00,0.00,470
Client  45,0.00,0.331,0.00,0.00,0.00,0.367,0.00,0.302,0.00,0.00,504
Client  46,0.00,0.00,0.00,0.00,0.00,0.00,0.385,0.293,0.00,0.322,519
Client  47,0.00,0.00,0.00,0.00,0.333,0.00,0.00,0.323,0.344,0.00,468
Client  48,0.309,0.352,0.00,0.00,0.00,0.00,0.00,0.00,0.339,0.00,475
Client  49,0.00,0.00,0.337,0.00,0.00,0.00,0.00,0.00,0.325,0.337,495
Client  50,0.298,0.339,0.00,0.363,0.00,0.00,0.00,0.00,0.00,0.00,493
Client  51,0.00,0.344,0.344,0.00,0.00,0.00,0.00,0.311,0.00,0.00,485
Client  52,0.286,0.00,0.325,0.00,0.00,0.00,0.389,0.00,0.00,0.00,514
Client  53,0.00,0.00,0.326,0.350,0.00,0.00,0.00,0.00,0.00,0.324,512
Client  54,0.00,0.00,0.319,0.00,0.298,0.00,0.382,0.00,0.00,0.00,523
Client  55,0.304,0.00,0.00,0.00,0.00,0.383,0.00,0.313,0.00,0.00,483
Client  56,0.00,0.303,0.00,0.00,0.00,0.335,0.362,0.00,0.00,0.00,552
Client  57,0.00,0.00,0.00,0.00,0.308,0.00,0.394,0.298,0.00,0.00,507
Client  58,0.289,0.00,0.00,0.00,0.00,0.00,0.394,0.00,0.317,0.00,508
Client  59,0.00,0.322,0.00,0.00,0.00,0.357,0.00,0.00,0.00,0.320,518
Client  60,0.306,0.347,0.347,0.00,0.00,0.00,0.00,0.00,0.00,0.00,481
Client  61,0.00,0.327,0.00,0.00,0.308,0.365,0.00,0.00,0.00,0.00,507
Client  62,0.316,0.00,0.359,0.00,0.00,0.00,0.00,0.325,0.00,0.00,465
Client  63,0.00,0.00,0.00,0.354,0.00,0.00,0.00,0.00,0.318,0.328,506
Client  64,0.00,0.00,0.00,0.00,0.317,0.376,0.00,0.307,0.00,0.00,492
Client  65,0.295,0.00,0.00,0.00,0.00,0.371,0.00,0.00,0.00,0.333,498
Client  66,0.00,0.00,0.00,0.327,0.00,0.00,0.368,0.00,0.00,0.305,544
Client  67,0.00,0.351,0.00,0.00,0.330,0.00,0.00,0.319,0.00,0.00,473
Client  68,0.00,0.00,0.00,0.00,0.302,0.00,0.387,0.00,0.311,0.00,517
Client  69,0.00,0.00,0.337,0.00,0.00,0.00,0.00,0.00,0.327,0.337,493
Client  70,0.304,0.00,0.00,0.00,0.00,0.383,0.00,0.313,0.00,0.00,483
Client  71,0.00,0.327,0.00,0.00,0.308,0.365,0.00,0.00,0.00,0.00,507
Client  72,0.00,0.00,0.324,0.00,0.00,0.361,0.00,0.00,0.314,0.00,512
Client  73,0.00,0.00,0.00,0.340,0.00,0.353,0.00,0.00,0.307,0.00,524
Client  74,0.00,0.344,0.00,0.00,0.323,0.00,0.00,0.00,0.333,0.00,483
Client  75,0.304,0.00,0.00,0.00,0.00,0.383,0.00,0.313,0.00,0.00,483
Client  76,0.00,0.00,0.00,0.333,0.292,0.00,0.375,0.00,0.00,0.00,534
Client  77,0.317,0.00,0.358,0.00,0.00,0.00,0.00,0.325,0.00,0.00,464
Client  78,0.00,0.00,0.00,0.340,0.00,0.353,0.00,0.00,0.307,0.00,524
Client  79,0.00,0.333,0.333,0.00,0.00,0.00,0.00,0.00,0.00,0.333,498
Client  80,0.306,0.00,0.00,0.370,0.324,0.00,0.00,0.00,0.00,0.00,481
Client  81,0.287,0.324,0.00,0.00,0.00,0.00,0.390,0.00,0.00,0.00,513
Client  82,0.317,0.00,0.358,0.00,0.00,0.00,0.00,0.325,0.00,0.00,464
Client  83,0.00,0.00,0.329,0.352,0.00,0.00,0.00,0.00,0.319,0.00,505
Client  84,0.306,0.00,0.00,0.370,0.324,0.00,0.00,0.00,0.00,0.00,481
Client  85,0.00,0.00,0.00,0.00,0.311,0.369,0.00,0.00,0.321,0.00,502
Client  86,0.00,0.00,0.312,0.00,0.00,0.00,0.376,0.00,0.00,0.312,532
Client  87,0.309,0.00,0.00,0.374,0.00,0.00,0.00,0.317,0.00,0.00,476
Client  88,0.00,0.344,0.00,0.00,0.323,0.00,0.00,0.00,0.333,0.00,483
Client  89,0.00,0.00,0.00,0.327,0.00,0.00,0.368,0.00,0.00,0.305,544
Client  90,0.309,0.00,0.00,0.374,0.00,0.00,0.00,0.317,0.00,0.00,476
Client  91,0.00,0.314,0.00,0.336,0.00,0.350,0.00,0.00,0.00,0.00,529
Client  92,0.313,0.00,0.354,0.00,0.333,0.00,0.00,0.00,0.00,0.00,469
Client  93,0.00,0.00,0.00,0.340,0.00,0.353,0.00,0.00,0.307,0.00,524
Client  94,0.00,0.00,0.00,0.00,0.308,0.00,0.394,0.298,0.00,0.00,507
Client  95,0.00,0.331,0.00,0.00,0.00,0.369,0.00,0.301,0.00,0.00,502
Client  96,0.287,0.00,0.324,0.00,0.00,0.00,0.390,0.00,0.00,0.00,513
Client  97,0.00,0.00,0.347,0.00,0.00,0.00,0.00,0.316,0.337,0.00,478
Client  98,0.00,0.344,0.00,0.00,0.323,0.00,0.00,0.00,0.333,0.00,483
Client  99,0.313,0.00,0.00,0.00,0.333,0.00,0.00,0.00,0.00,0.354,469
0 [0 5 8] [0 5 8] [1 2 3 4 6 7 9]
0 training: Counter({5: 186, 8: 162, 0: 148}) testing iid: Counter({8: 1000, 0: 1000, 5: 1000})
1 [1 5 9] [1 5 9] [0 2 3 4 6 7 8]
1 training: Counter({5: 186, 1: 167, 9: 167}) testing iid: Counter({1: 1000, 9: 1000, 5: 1000})
2 [0 1 2] [0 1 2] [3 4 5 6 7 8 9]
2 training: Counter({1: 167, 2: 167, 0: 148}) testing iid: Counter({0: 1000, 1: 1000, 2: 1000})
3 [3 6 7] [3 6 7] [0 1 2 4 5 8 9]
3 training: Counter({6: 200, 3: 179, 7: 152}) testing iid: Counter({3: 1000, 6: 1000, 7: 1000})
4 [2 4 9] [2 4 9] [0 1 3 5 6 7 8]
4 training: Counter({2: 167, 9: 167, 4: 157}) testing iid: Counter({9: 1000, 4: 1000, 2: 1000})
5 [2 4 5] [2 4 5] [0 1 3 6 7 8 9]
5 training: Counter({5: 186, 2: 167, 4: 157}) testing iid: Counter({5: 1000, 4: 1000, 2: 1000})
6 [2 4 6] [2 4 6] [0 1 3 5 7 8 9]
6 training: Counter({6: 200, 2: 167, 4: 157}) testing iid: Counter({6: 1000, 4: 1000, 2: 1000})
7 [4 7 9] [4 7 9] [0 1 2 3 5 6 8]
7 training: Counter({9: 167, 4: 157, 7: 152}) testing iid: Counter({9: 1000, 7: 1000, 4: 1000})
8 [1 7 8] [1 7 8] [0 2 3 4 5 6 9]
8 training: Counter({1: 167, 8: 162, 7: 152}) testing iid: Counter({8: 1000, 1: 1000, 7: 1000})
9 [0 6 9] [0 6 9] [1 2 3 4 5 7 8]
9 training: Counter({6: 200, 9: 167, 0: 147}) testing iid: Counter({0: 1000, 6: 1000, 9: 1000})
10 [0 7 9] [0 7 9] [1 2 3 4 5 6 8]
10 training: Counter({9: 167, 7: 152, 0: 147}) testing iid: Counter({0: 1000, 9: 1000, 7: 1000})
11 [1 6 9] [1 6 9] [0 2 3 4 5 7 8]
11 training: Counter({6: 200, 1: 167, 9: 167}) testing iid: Counter({6: 1000, 1: 1000, 9: 1000})
12 [0 1 2] [0 1 2] [3 4 5 6 7 8 9]
12 training: Counter({1: 167, 2: 167, 0: 147}) testing iid: Counter({0: 1000, 1: 1000, 2: 1000})
13 [1 3 8] [1 3 8] [0 2 4 5 6 7 9]
13 training: Counter({3: 179, 1: 167, 8: 162}) testing iid: Counter({3: 1000, 8: 1000, 1: 1000})
14 [3 4 8] [3 4 8] [0 1 2 5 6 7 9]
14 training: Counter({3: 179, 8: 162, 4: 157}) testing iid: Counter({3: 1000, 8: 1000, 4: 1000})
15 [5 8 9] [5 8 9] [0 1 2 3 4 6 7]
15 training: Counter({5: 186, 9: 167, 8: 162}) testing iid: Counter({8: 1000, 9: 1000, 5: 1000})
16 [3 6 7] [3 6 7] [0 1 2 4 5 8 9]
16 training: Counter({6: 200, 3: 179, 7: 152}) testing iid: Counter({3: 1000, 6: 1000, 7: 1000})
17 [5 6 7] [5 6 7] [0 1 2 3 4 8 9]
17 training: Counter({6: 200, 5: 186, 7: 152}) testing iid: Counter({6: 1000, 5: 1000, 7: 1000})
18 [1 8 9] [1 8 9] [0 2 3 4 5 6 7]
18 training: Counter({1: 167, 9: 167, 8: 162}) testing iid: Counter({8: 1000, 1: 1000, 9: 1000})
19 [3 4 9] [3 4 9] [0 1 2 5 6 7 8]
19 training: Counter({3: 179, 9: 167, 4: 157}) testing iid: Counter({3: 1000, 9: 1000, 4: 1000})
20 [0 1 8] [0 1 8] [2 3 4 5 6 7 9]
20 training: Counter({1: 167, 8: 162, 0: 147}) testing iid: Counter({8: 1000, 0: 1000, 1: 1000})
21 [0 1 4] [0 1 4] [2 3 5 6 7 8 9]
21 training: Counter({1: 167, 4: 157, 0: 147}) testing iid: Counter({0: 1000, 1: 1000, 4: 1000})
22 [2 3 9] [2 3 9] [0 1 4 5 6 7 8]
22 training: Counter({3: 179, 2: 167, 9: 167}) testing iid: Counter({3: 1000, 9: 1000, 2: 1000})
23 [0 2 3] [0 2 3] [1 4 5 6 7 8 9]
23 training: Counter({3: 179, 2: 167, 0: 147}) testing iid: Counter({3: 1000, 0: 1000, 2: 1000})
24 [2 4 9] [2 4 9] [0 1 3 5 6 7 8]
24 training: Counter({2: 167, 9: 167, 4: 157}) testing iid: Counter({9: 1000, 4: 1000, 2: 1000})
25 [5 7 9] [5 7 9] [0 1 2 3 4 6 8]
25 training: Counter({5: 185, 9: 167, 7: 152}) testing iid: Counter({9: 1000, 5: 1000, 7: 1000})
26 [6 8 9] [6 8 9] [0 1 2 3 4 5 7]
26 training: Counter({6: 200, 9: 167, 8: 162}) testing iid: Counter({8: 1000, 6: 1000, 9: 1000})
27 [3 4 7] [3 4 7] [0 1 2 5 6 8 9]
27 training: Counter({3: 179, 4: 156, 7: 152}) testing iid: Counter({3: 1000, 7: 1000, 4: 1000})
28 [5 8 9] [5 8 9] [0 1 2 3 4 6 7]
28 training: Counter({5: 185, 9: 167, 8: 162}) testing iid: Counter({8: 1000, 9: 1000, 5: 1000})
29 [3 6 9] [3 6 9] [0 1 2 4 5 7 8]
29 training: Counter({6: 200, 3: 179, 9: 167}) testing iid: Counter({3: 1000, 6: 1000, 9: 1000})
30 [0 2 8] [0 2 8] [1 3 4 5 6 7 9]
30 training: Counter({2: 167, 8: 161, 0: 147}) testing iid: Counter({8: 1000, 0: 1000, 2: 1000})
31 [1 7 9] [1 7 9] [0 2 3 4 5 6 8]
31 training: Counter({1: 167, 9: 167, 7: 152}) testing iid: Counter({1: 1000, 9: 1000, 7: 1000})
32 [2 3 7] [2 3 7] [0 1 4 5 6 8 9]
32 training: Counter({3: 179, 2: 167, 7: 152}) testing iid: Counter({3: 1000, 7: 1000, 2: 1000})
33 [0 3 8] [0 3 8] [1 2 4 5 6 7 9]
33 training: Counter({3: 179, 8: 161, 0: 147}) testing iid: Counter({3: 1000, 8: 1000, 0: 1000})
34 [1 4 7] [1 4 7] [0 2 3 5 6 8 9]
34 training: Counter({1: 167, 4: 156, 7: 152}) testing iid: Counter({1: 1000, 7: 1000, 4: 1000})
35 [1 3 5] [1 3 5] [0 2 4 6 7 8 9]
35 training: Counter({5: 185, 3: 179, 1: 167}) testing iid: Counter({3: 1000, 1: 1000, 5: 1000})
36 [0 6 8] [0 6 8] [1 2 3 4 5 7 9]
36 training: Counter({6: 200, 8: 161, 0: 147}) testing iid: Counter({8: 1000, 0: 1000, 6: 1000})
37 [4 6 7] [4 6 7] [0 1 2 3 5 8 9]
37 training: Counter({6: 200, 4: 156, 7: 152}) testing iid: Counter({6: 1000, 7: 1000, 4: 1000})
38 [5 6 8] [5 6 8] [0 1 2 3 4 7 9]
38 training: Counter({6: 200, 5: 185, 8: 161}) testing iid: Counter({8: 1000, 6: 1000, 5: 1000})
39 [2 5 9] [2 5 9] [0 1 3 4 6 7 8]
39 training: Counter({5: 185, 2: 167, 9: 167}) testing iid: Counter({9: 1000, 5: 1000, 2: 1000})
40 [0 7 8] [0 7 8] [1 2 3 4 5 6 9]
40 training: Counter({8: 161, 7: 152, 0: 147}) testing iid: Counter({8: 1000, 0: 1000, 7: 1000})
41 [1 4 7] [1 4 7] [0 2 3 5 6 8 9]
41 training: Counter({1: 167, 4: 156, 7: 152}) testing iid: Counter({1: 1000, 7: 1000, 4: 1000})
42 [2 4 7] [2 4 7] [0 1 3 5 6 8 9]
42 training: Counter({2: 167, 4: 156, 7: 152}) testing iid: Counter({7: 1000, 4: 1000, 2: 1000})
43 [0 3 9] [0 3 9] [1 2 4 5 6 7 8]
43 training: Counter({3: 179, 9: 167, 0: 147}) testing iid: Counter({3: 1000, 0: 1000, 9: 1000})
44 [0 2 4] [0 2 4] [1 3 5 6 7 8 9]
44 training: Counter({2: 167, 4: 156, 0: 147}) testing iid: Counter({0: 1000, 4: 1000, 2: 1000})
45 [1 5 7] [1 5 7] [0 2 3 4 6 8 9]
45 training: Counter({5: 185, 1: 167, 7: 152}) testing iid: Counter({1: 1000, 5: 1000, 7: 1000})
46 [6 7 9] [6 7 9] [0 1 2 3 4 5 8]
46 training: Counter({6: 200, 9: 167, 7: 152}) testing iid: Counter({6: 1000, 9: 1000, 7: 1000})
47 [4 7 8] [4 7 8] [0 1 2 3 5 6 9]
47 training: Counter({8: 161, 4: 156, 7: 151}) testing iid: Counter({8: 1000, 7: 1000, 4: 1000})
48 [0 1 8] [0 1 8] [2 3 4 5 6 7 9]
48 training: Counter({1: 167, 8: 161, 0: 147}) testing iid: Counter({8: 1000, 0: 1000, 1: 1000})
49 [2 8 9] [2 8 9] [0 1 3 4 5 6 7]
49 training: Counter({2: 167, 9: 167, 8: 161}) testing iid: Counter({8: 1000, 9: 1000, 2: 1000})
50 [0 1 3] [0 1 3] [2 4 5 6 7 8 9]
50 training: Counter({3: 179, 1: 167, 0: 147}) testing iid: Counter({3: 1000, 0: 1000, 1: 1000})
51 [1 2 7] [1 2 7] [0 3 4 5 6 8 9]
51 training: Counter({1: 167, 2: 167, 7: 151}) testing iid: Counter({1: 1000, 7: 1000, 2: 1000})
52 [0 2 6] [0 2 6] [1 3 4 5 7 8 9]
52 training: Counter({6: 200, 2: 167, 0: 147}) testing iid: Counter({0: 1000, 6: 1000, 2: 1000})
53 [2 3 9] [2 3 9] [0 1 4 5 6 7 8]
53 training: Counter({3: 179, 2: 167, 9: 166}) testing iid: Counter({3: 1000, 9: 1000, 2: 1000})
54 [2 4 6] [2 4 6] [0 1 3 5 7 8 9]
54 training: Counter({6: 200, 2: 167, 4: 156}) testing iid: Counter({6: 1000, 4: 1000, 2: 1000})
55 [0 5 7] [0 5 7] [1 2 3 4 6 8 9]
55 training: Counter({5: 185, 7: 151, 0: 147}) testing iid: Counter({0: 1000, 5: 1000, 7: 1000})
56 [1 5 6] [1 5 6] [0 2 3 4 7 8 9]
56 training: Counter({6: 200, 5: 185, 1: 167}) testing iid: Counter({6: 1000, 1: 1000, 5: 1000})
57 [4 6 7] [4 6 7] [0 1 2 3 5 8 9]
57 training: Counter({6: 200, 4: 156, 7: 151}) testing iid: Counter({6: 1000, 7: 1000, 4: 1000})
58 [0 6 8] [0 6 8] [1 2 3 4 5 7 9]
58 training: Counter({6: 200, 8: 161, 0: 147}) testing iid: Counter({8: 1000, 0: 1000, 6: 1000})
59 [1 5 9] [1 5 9] [0 2 3 4 6 7 8]
59 training: Counter({5: 185, 1: 167, 9: 166}) testing iid: Counter({1: 1000, 9: 1000, 5: 1000})
60 [0 1 2] [0 1 2] [3 4 5 6 7 8 9]
60 training: Counter({1: 167, 2: 167, 0: 147}) testing iid: Counter({0: 1000, 1: 1000, 2: 1000})
61 [1 4 5] [1 4 5] [0 2 3 6 7 8 9]
61 training: Counter({5: 185, 1: 166, 4: 156}) testing iid: Counter({1: 1000, 5: 1000, 4: 1000})
62 [0 2 7] [0 2 7] [1 3 4 5 6 8 9]
62 training: Counter({2: 167, 7: 151, 0: 147}) testing iid: Counter({0: 1000, 7: 1000, 2: 1000})
63 [3 8 9] [3 8 9] [0 1 2 4 5 6 7]
63 training: Counter({3: 179, 9: 166, 8: 161}) testing iid: Counter({3: 1000, 8: 1000, 9: 1000})
64 [4 5 7] [4 5 7] [0 1 2 3 6 8 9]
64 training: Counter({5: 185, 4: 156, 7: 151}) testing iid: Counter({5: 1000, 7: 1000, 4: 1000})
65 [0 5 9] [0 5 9] [1 2 3 4 6 7 8]
65 training: Counter({5: 185, 9: 166, 0: 147}) testing iid: Counter({0: 1000, 9: 1000, 5: 1000})
66 [3 6 9] [3 6 9] [0 1 2 4 5 7 8]
66 training: Counter({6: 200, 3: 178, 9: 166}) testing iid: Counter({3: 1000, 6: 1000, 9: 1000})
67 [1 4 7] [1 4 7] [0 2 3 5 6 8 9]
67 training: Counter({1: 166, 4: 156, 7: 151}) testing iid: Counter({1: 1000, 7: 1000, 4: 1000})
68 [4 6 8] [4 6 8] [0 1 2 3 5 7 9]
68 training: Counter({6: 200, 8: 161, 4: 156}) testing iid: Counter({8: 1000, 6: 1000, 4: 1000})
69 [2 8 9] [2 8 9] [0 1 3 4 5 6 7]
69 training: Counter({2: 166, 9: 166, 8: 161}) testing iid: Counter({8: 1000, 9: 1000, 2: 1000})
70 [0 5 7] [0 5 7] [1 2 3 4 6 8 9]
70 training: Counter({5: 185, 7: 151, 0: 147}) testing iid: Counter({0: 1000, 5: 1000, 7: 1000})
71 [1 4 5] [1 4 5] [0 2 3 6 7 8 9]
71 training: Counter({5: 185, 1: 166, 4: 156}) testing iid: Counter({1: 1000, 5: 1000, 4: 1000})
72 [2 5 8] [2 5 8] [0 1 3 4 6 7 9]
72 training: Counter({5: 185, 2: 166, 8: 161}) testing iid: Counter({8: 1000, 5: 1000, 2: 1000})
73 [3 5 8] [3 5 8] [0 1 2 4 6 7 9]
73 training: Counter({5: 185, 3: 178, 8: 161}) testing iid: Counter({3: 1000, 8: 1000, 5: 1000})
74 [1 4 8] [1 4 8] [0 2 3 5 6 7 9]
74 training: Counter({1: 166, 8: 161, 4: 156}) testing iid: Counter({8: 1000, 1: 1000, 4: 1000})
75 [0 5 7] [0 5 7] [1 2 3 4 6 8 9]
75 training: Counter({5: 185, 7: 151, 0: 147}) testing iid: Counter({0: 1000, 5: 1000, 7: 1000})
76 [3 4 6] [3 4 6] [0 1 2 5 7 8 9]
76 training: Counter({6: 200, 3: 178, 4: 156}) testing iid: Counter({3: 1000, 6: 1000, 4: 1000})
77 [0 2 7] [0 2 7] [1 3 4 5 6 8 9]
77 training: Counter({2: 166, 7: 151, 0: 147}) testing iid: Counter({0: 1000, 7: 1000, 2: 1000})
78 [3 5 8] [3 5 8] [0 1 2 4 6 7 9]
78 training: Counter({5: 185, 3: 178, 8: 161}) testing iid: Counter({3: 1000, 8: 1000, 5: 1000})
79 [1 2 9] [1 2 9] [0 3 4 5 6 7 8]
79 training: Counter({1: 166, 2: 166, 9: 166}) testing iid: Counter({1: 1000, 9: 1000, 2: 1000})
80 [0 3 4] [0 3 4] [1 2 5 6 7 8 9]
80 training: Counter({3: 178, 4: 156, 0: 147}) testing iid: Counter({3: 1000, 0: 1000, 4: 1000})
81 [0 1 6] [0 1 6] [2 3 4 5 7 8 9]
81 training: Counter({6: 200, 1: 166, 0: 147}) testing iid: Counter({0: 1000, 6: 1000, 1: 1000})
82 [0 2 7] [0 2 7] [1 3 4 5 6 8 9]
82 training: Counter({2: 166, 7: 151, 0: 147}) testing iid: Counter({0: 1000, 7: 1000, 2: 1000})
83 [2 3 8] [2 3 8] [0 1 4 5 6 7 9]
83 training: Counter({3: 178, 2: 166, 8: 161}) testing iid: Counter({3: 1000, 8: 1000, 2: 1000})
84 [0 3 4] [0 3 4] [1 2 5 6 7 8 9]
84 training: Counter({3: 178, 4: 156, 0: 147}) testing iid: Counter({3: 1000, 0: 1000, 4: 1000})
85 [4 5 8] [4 5 8] [0 1 2 3 6 7 9]
85 training: Counter({5: 185, 8: 161, 4: 156}) testing iid: Counter({8: 1000, 5: 1000, 4: 1000})
86 [2 6 9] [2 6 9] [0 1 3 4 5 7 8]
86 training: Counter({6: 200, 2: 166, 9: 166}) testing iid: Counter({6: 1000, 9: 1000, 2: 1000})
87 [0 3 7] [0 3 7] [1 2 4 5 6 8 9]
87 training: Counter({3: 178, 7: 151, 0: 147}) testing iid: Counter({3: 1000, 0: 1000, 7: 1000})
88 [1 4 8] [1 4 8] [0 2 3 5 6 7 9]
88 training: Counter({1: 166, 8: 161, 4: 156}) testing iid: Counter({8: 1000, 1: 1000, 4: 1000})
89 [3 6 9] [3 6 9] [0 1 2 4 5 7 8]
89 training: Counter({6: 200, 3: 178, 9: 166}) testing iid: Counter({3: 1000, 6: 1000, 9: 1000})
90 [0 3 7] [0 3 7] [1 2 4 5 6 8 9]
90 training: Counter({3: 178, 7: 151, 0: 147}) testing iid: Counter({3: 1000, 0: 1000, 7: 1000})
91 [1 3 5] [1 3 5] [0 2 4 6 7 8 9]
91 training: Counter({5: 185, 3: 178, 1: 166}) testing iid: Counter({3: 1000, 1: 1000, 5: 1000})
92 [0 2 4] [0 2 4] [1 3 5 6 7 8 9]
92 training: Counter({2: 166, 4: 156, 0: 147}) testing iid: Counter({0: 1000, 4: 1000, 2: 1000})
93 [3 5 8] [3 5 8] [0 1 2 4 6 7 9]
93 training: Counter({5: 185, 3: 178, 8: 161}) testing iid: Counter({3: 1000, 8: 1000, 5: 1000})
94 [4 6 7] [4 6 7] [0 1 2 3 5 8 9]
94 training: Counter({6: 200, 4: 156, 7: 151}) testing iid: Counter({6: 1000, 7: 1000, 4: 1000})
95 [1 5 7] [1 5 7] [0 2 3 4 6 8 9]
95 training: Counter({5: 185, 1: 166, 7: 151}) testing iid: Counter({1: 1000, 5: 1000, 7: 1000})
96 [0 2 6] [0 2 6] [1 3 4 5 7 8 9]
96 training: Counter({6: 200, 2: 166, 0: 147}) testing iid: Counter({0: 1000, 6: 1000, 2: 1000})
97 [2 7 8] [2 7 8] [0 1 3 4 5 6 9]
97 training: Counter({2: 166, 8: 161, 7: 151}) testing iid: Counter({8: 1000, 7: 1000, 2: 1000})
98 [1 4 8] [1 4 8] [0 2 3 5 6 7 9]
98 training: Counter({1: 166, 8: 161, 4: 156}) testing iid: Counter({8: 1000, 1: 1000, 4: 1000})
99 [0 4 9] [0 4 9] [1 2 3 5 6 7 8]
99 training: Counter({9: 166, 4: 156, 0: 147}) testing iid: Counter({0: 1000, 9: 1000, 4: 1000})
Num_samples of Training set per client: [496, 520, 482, 531, 491, 510, 524, 476, 481, 514, 466, 534, 481, 508, 498, 515, 531, 538, 496, 503, 476, 471, 513, 493, 491, 504, 529, 487, 514, 546, 475, 486, 498, 487, 475, 531, 508, 508, 546, 519, 460, 475, 475, 493, 470, 504, 519, 468, 475, 495, 493, 485, 514, 512, 523, 483, 552, 507, 508, 518, 481, 507, 465, 506, 492, 498, 544, 473, 517, 493, 483, 507, 512, 524, 483, 483, 534, 464, 524, 498, 481, 513, 464, 505, 481, 502, 532, 476, 483, 544, 476, 529, 469, 524, 507, 502, 513, 478, 483, 469]
Total_training_samples: 50000
Global test set: 10000
Finish Generating Samples, distribution saved
MobileNetV2(
  (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (layers): Sequential(
    (0): Block(
      (conv1): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): Block(
      (conv1): Conv2d(16, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=96, bias=False)
      (bn2): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(96, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(16, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (2): Block(
      (conv1): Conv2d(24, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=144, bias=False)
      (bn2): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(144, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (3): Block(
      (conv1): Conv2d(24, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(144, 144, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=144, bias=False)
      (bn2): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(144, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (4): Block(
      (conv1): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
      (bn2): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(192, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (5): Block(
      (conv1): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
      (bn2): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(192, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (6): Block(
      (conv1): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(192, 192, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=192, bias=False)
      (bn2): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(192, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (7): Block(
      (conv1): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
      (bn2): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (8): Block(
      (conv1): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
      (bn2): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (9): Block(
      (conv1): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
      (bn2): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (10): Block(
      (conv1): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
      (bn2): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(384, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(64, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (11): Block(
      (conv1): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)
      (bn2): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (12): Block(
      (conv1): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)
      (bn2): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (13): Block(
      (conv1): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(576, 576, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=576, bias=False)
      (bn2): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(576, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (14): Block(
      (conv1): Conv2d(160, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(960, 960, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=960, bias=False)
      (bn2): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(960, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (15): Block(
      (conv1): Conv2d(160, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(960, 960, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=960, bias=False)
      (bn2): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(960, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (16): Block(
      (conv1): Conv2d(160, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(960, 960, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=960, bias=False)
      (bn2): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(960, 320, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(160, 320, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (conv2): Conv2d(320, 1280, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn2): BatchNorm2d(1280, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (linear): Linear(in_features=1280, out_features=10, bias=True)
)
number of parameters: 2296922
clients initializting...
output size: 10
  0%|          | 0/100 [00:00<?, ?it/s]  1%|          | 1/100 [00:04<06:44,  4.09s/it]  2%|▏         | 2/100 [00:04<05:00,  3.06s/it]  3%|▎         | 3/100 [00:05<03:48,  2.36s/it]  4%|▍         | 4/100 [00:06<03:00,  1.88s/it]  5%|▌         | 5/100 [00:06<02:24,  1.52s/it]  6%|▌         | 6/100 [00:07<02:00,  1.28s/it]  7%|▋         | 7/100 [00:08<01:43,  1.11s/it]  8%|▊         | 8/100 [00:09<01:30,  1.02it/s]  9%|▉         | 9/100 [00:09<01:21,  1.11it/s] 10%|█         | 10/100 [00:10<01:16,  1.18it/s] 11%|█         | 11/100 [00:11<01:12,  1.24it/s] 12%|█▏        | 12/100 [00:11<01:09,  1.26it/s] 13%|█▎        | 13/100 [00:12<01:07,  1.28it/s] 14%|█▍        | 14/100 [00:13<01:06,  1.30it/s] 15%|█▌        | 15/100 [00:14<01:03,  1.33it/s] 16%|█▌        | 16/100 [00:14<01:01,  1.36it/s] 17%|█▋        | 17/100 [00:15<00:59,  1.39it/s] 18%|█▊        | 18/100 [00:16<00:57,  1.42it/s] 19%|█▉        | 19/100 [00:16<00:56,  1.43it/s] 20%|██        | 20/100 [00:17<00:56,  1.43it/s] 21%|██        | 21/100 [00:18<00:55,  1.43it/s] 22%|██▏       | 22/100 [00:18<00:53,  1.45it/s] 23%|██▎       | 23/100 [00:19<00:52,  1.46it/s] 24%|██▍       | 24/100 [00:20<00:52,  1.46it/s] 25%|██▌       | 25/100 [00:21<00:52,  1.43it/s] 26%|██▌       | 26/100 [00:21<00:51,  1.43it/s] 27%|██▋       | 27/100 [00:22<00:51,  1.42it/s] 28%|██▊       | 28/100 [00:23<00:50,  1.42it/s] 29%|██▉       | 29/100 [00:23<00:50,  1.42it/s] 30%|███       | 30/100 [00:24<00:48,  1.44it/s] 31%|███       | 31/100 [00:25<00:48,  1.44it/s] 32%|███▏      | 32/100 [00:25<00:47,  1.43it/s] 33%|███▎      | 33/100 [00:26<00:46,  1.43it/s] 34%|███▍      | 34/100 [00:27<00:45,  1.45it/s] 35%|███▌      | 35/100 [00:28<00:45,  1.44it/s] 36%|███▌      | 36/100 [00:31<01:44,  1.64s/it] 37%|███▋      | 37/100 [00:32<01:25,  1.35s/it] 38%|███▊      | 38/100 [00:33<01:11,  1.16s/it] 39%|███▉      | 39/100 [00:33<01:02,  1.03s/it] 40%|████      | 40/100 [00:34<00:55,  1.08it/s] 41%|████      | 41/100 [00:35<00:49,  1.18it/s] 42%|████▏     | 42/100 [00:36<00:46,  1.25it/s] 43%|████▎     | 43/100 [00:36<00:43,  1.30it/s] 44%|████▍     | 44/100 [00:37<00:42,  1.33it/s] 45%|████▌     | 45/100 [00:38<00:40,  1.35it/s] 46%|████▌     | 46/100 [00:38<00:39,  1.37it/s] 47%|████▋     | 47/100 [00:39<00:38,  1.39it/s] 48%|████▊     | 48/100 [00:40<00:36,  1.43it/s] 49%|████▉     | 49/100 [00:40<00:35,  1.44it/s] 50%|█████     | 50/100 [00:41<00:34,  1.46it/s] 51%|█████     | 51/100 [00:42<00:33,  1.45it/s] 52%|█████▏    | 52/100 [00:42<00:32,  1.46it/s] 53%|█████▎    | 53/100 [00:43<00:32,  1.44it/s] 54%|█████▍    | 54/100 [00:44<00:31,  1.46it/s] 55%|█████▌    | 55/100 [00:44<00:30,  1.46it/s] 56%|█████▌    | 56/100 [00:45<00:29,  1.48it/s] 57%|█████▋    | 57/100 [00:46<00:28,  1.49it/s] 58%|█████▊    | 58/100 [00:46<00:28,  1.49it/s] 59%|█████▉    | 59/100 [00:47<00:27,  1.47it/s] 60%|██████    | 60/100 [00:48<00:27,  1.46it/s] 61%|██████    | 61/100 [00:49<00:26,  1.45it/s] 62%|██████▏   | 62/100 [00:49<00:25,  1.47it/s] 63%|██████▎   | 63/100 [00:50<00:24,  1.49it/s] 64%|██████▍   | 64/100 [00:51<00:24,  1.50it/s] 65%|██████▌   | 65/100 [00:51<00:23,  1.47it/s] 66%|██████▌   | 66/100 [00:52<00:23,  1.46it/s] 67%|██████▋   | 67/100 [00:53<00:22,  1.45it/s] 68%|██████▊   | 68/100 [00:53<00:22,  1.44it/s] 69%|██████▉   | 69/100 [00:54<00:21,  1.47it/s] 70%|███████   | 70/100 [00:55<00:20,  1.49it/s] 71%|███████   | 71/100 [00:55<00:20,  1.45it/s] 72%|███████▏  | 72/100 [00:56<00:19,  1.45it/s] 73%|███████▎  | 73/100 [01:00<00:44,  1.64s/it] 74%|███████▍  | 74/100 [01:01<00:35,  1.35s/it] 75%|███████▌  | 75/100 [01:01<00:28,  1.15s/it] 76%|███████▌  | 76/100 [01:02<00:24,  1.00s/it] 77%|███████▋  | 77/100 [01:03<00:20,  1.11it/s] 78%|███████▊  | 78/100 [01:03<00:18,  1.18it/s] 79%|███████▉  | 79/100 [01:04<00:16,  1.26it/s] 80%|████████  | 80/100 [01:05<00:15,  1.31it/s] 81%|████████  | 81/100 [01:05<00:14,  1.34it/s] 82%|████████▏ | 82/100 [01:06<00:13,  1.36it/s] 83%|████████▎ | 83/100 [01:07<00:12,  1.38it/s] 84%|████████▍ | 84/100 [01:07<00:11,  1.41it/s] 85%|████████▌ | 85/100 [01:08<00:10,  1.42it/s] 86%|████████▌ | 86/100 [01:09<00:09,  1.43it/s] 87%|████████▋ | 87/100 [01:10<00:09,  1.41it/s] 88%|████████▊ | 88/100 [01:10<00:08,  1.40it/s] 89%|████████▉ | 89/100 [01:11<00:07,  1.42it/s] 90%|█████████ | 90/100 [01:12<00:07,  1.42it/s] 91%|█████████ | 91/100 [01:12<00:06,  1.45it/s] 92%|█████████▏| 92/100 [01:13<00:05,  1.45it/s] 93%|█████████▎| 93/100 [01:14<00:04,  1.45it/s] 94%|█████████▍| 94/100 [01:14<00:04,  1.44it/s] 95%|█████████▌| 95/100 [01:15<00:03,  1.45it/s] 96%|█████████▌| 96/100 [01:16<00:02,  1.45it/s] 97%|█████████▋| 97/100 [01:16<00:02,  1.46it/s] 98%|█████████▊| 98/100 [01:17<00:01,  1.45it/s] 99%|█████████▉| 99/100 [01:18<00:00,  1.45it/s]100%|██████████| 100/100 [01:19<00:00,  1.45it/s]100%|██████████| 100/100 [01:19<00:00,  1.27it/s]
Number of users per round / total users: 10  /  100
Finished creating FL server.
=== Training starts: algorithm FedFea ===
-------------Round number:  0  -------------
selected users: [26, 86, 2, 55, 75, 93, 16, 73, 54, 95]
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 508
Local adapation with distilling: 0.001
training loss: tensor(2.1070) feature loss: tensor(0.3950)
Local adapation with distilling: 0.001
training loss: tensor(2.2391) feature loss: tensor(0.3875)
Local adapation with distilling: 0.001
training loss: tensor(2.2280) feature loss: tensor(0.4003)
Local adapation with distilling: 0.001
training loss: tensor(2.2046) feature loss: tensor(0.3602)
Local adapation with distilling: 0.001
training loss: tensor(2.1544) feature loss: tensor(0.3695)
Local adapation with distilling: 0.001
training loss: tensor(2.1255) feature loss: tensor(0.3759)
Local adapation with distilling: 0.001
training loss: tensor(2.2876) feature loss: tensor(0.3691)
Local adapation with distilling: 0.001
training loss: tensor(2.1357) feature loss: tensor(0.3723)
Local adapation with distilling: 0.001
training loss: tensor(2.3719) feature loss: tensor(0.3879)
Local adapation with distilling: 0.001
training loss: tensor(2.2059) feature loss: tensor(0.3804)
Global Model Acc on global data: 0.1019 length of data: 10000
save a model
-------------Round number:  1  -------------
selected users: [80, 84, 33, 81, 93, 17, 36, 82, 69, 65]
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
all data: 494
Local adapation with distilling: 0.000982
training loss: tensor(1.5338) feature loss: tensor(0.4136)
Local adapation with distilling: 0.000982
training loss: tensor(1.5644) feature loss: tensor(0.4211)
Local adapation with distilling: 0.000982
training loss: tensor(1.5620) feature loss: tensor(0.4149)
Local adapation with distilling: 0.000982
training loss: tensor(1.5798) feature loss: tensor(0.4005)
Local adapation with distilling: 0.000982
training loss: tensor(1.4854) feature loss: tensor(0.3670)
Local adapation with distilling: 0.000982
training loss: tensor(1.4868) feature loss: tensor(0.3675)
Local adapation with distilling: 0.000982
training loss: tensor(1.4946) feature loss: tensor(0.4130)
Local adapation with distilling: 0.000982
training loss: tensor(1.6307) feature loss: tensor(0.4207)
Local adapation with distilling: 0.000982
training loss: tensor(1.6430) feature loss: tensor(0.4491)
Local adapation with distilling: 0.000982
training loss: tensor(1.4179) feature loss: tensor(0.3695)
Global Model Acc on global data: 0.1891 length of data: 10000
save a model
-------------Round number:  2  -------------
selected users: [83, 30, 56, 24, 16, 23, 2, 27, 28, 13]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([55, 16, 32, 32]) torch.Size([55])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.000964
training loss: tensor(1.2094) feature loss: tensor(0.4004)
Local adapation with distilling: 0.000964
training loss: tensor(1.3174) feature loss: tensor(0.4172)
Local adapation with distilling: 0.000964
training loss: tensor(1.1586) feature loss: tensor(0.3653)
Local adapation with distilling: 0.000964
training loss: tensor(1.3715) feature loss: tensor(0.4466)
Local adapation with distilling: 0.000964
training loss: tensor(1.2961) feature loss: tensor(0.4049)
Local adapation with distilling: 0.000964
training loss: tensor(1.3050) feature loss: tensor(0.4082)
Local adapation with distilling: 0.000964
training loss: tensor(1.2619) feature loss: tensor(0.4477)
Local adapation with distilling: 0.000964
training loss: tensor(1.4371) feature loss: tensor(0.4465)
Local adapation with distilling: 0.000964
training loss: tensor(1.2851) feature loss: tensor(0.3944)
Local adapation with distilling: 0.000964
training loss: tensor(1.2079) feature loss: tensor(0.4193)
Global Model Acc on global data: 0.2521 length of data: 10000
save a model
-------------Round number:  3  -------------
selected users: [93, 67, 6, 64, 96, 83, 98, 42, 25, 15]
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
all data: 497
Local adapation with distilling: 0.000946
training loss: tensor(1.0913) feature loss: tensor(0.4073)
Local adapation with distilling: 0.000946
training loss: tensor(1.2838) feature loss: tensor(0.4903)
Local adapation with distilling: 0.000946
training loss: tensor(1.1990) feature loss: tensor(0.4221)
Local adapation with distilling: 0.000946
training loss: tensor(1.1885) feature loss: tensor(0.4379)
Local adapation with distilling: 0.000946
training loss: tensor(1.3773) feature loss: tensor(0.4548)
Local adapation with distilling: 0.000946
training loss: tensor(1.0666) feature loss: tensor(0.4077)
Local adapation with distilling: 0.000946
training loss: tensor(1.1061) feature loss: tensor(0.4483)
Local adapation with distilling: 0.000946
training loss: tensor(1.2209) feature loss: tensor(0.4517)
Local adapation with distilling: 0.000946
training loss: tensor(1.2261) feature loss: tensor(0.4898)
Local adapation with distilling: 0.000946
training loss: tensor(1.2368) feature loss: tensor(0.4615)
Global Model Acc on global data: 0.2114 length of data: 10000
-------------Round number:  4  -------------
selected users: [20, 10, 96, 16, 63, 24, 53, 97, 41, 47]
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([57, 16, 32, 32]) torch.Size([57])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
all data: 493
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.2269) feature loss: tensor(0.5000)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.2134) feature loss: tensor(0.4849)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.2833) feature loss: tensor(0.4476)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.0743) feature loss: tensor(0.4481)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.0518) feature loss: tensor(0.4567)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(0.9388) feature loss: tensor(0.3787)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(0.9369) feature loss: tensor(0.4412)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.0356) feature loss: tensor(0.4307)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.0551) feature loss: tensor(0.4120)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.0014) feature loss: tensor(0.3537)
Global Model Acc on global data: 0.2649 length of data: 10000
save a model
-------------Round number:  5  -------------
selected users: [66, 32, 46, 28, 74, 23, 10, 20, 17, 35]
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
all data: 501
Local adapation with distilling: 0.00091
training loss: tensor(0.9900) feature loss: tensor(0.4582)
Local adapation with distilling: 0.00091
training loss: tensor(1.1033) feature loss: tensor(0.4775)
Local adapation with distilling: 0.00091
training loss: tensor(1.0257) feature loss: tensor(0.4765)
Local adapation with distilling: 0.00091
training loss: tensor(1.1546) feature loss: tensor(0.4705)
Local adapation with distilling: 0.00091
training loss: tensor(0.9815) feature loss: tensor(0.4007)
Local adapation with distilling: 0.00091
training loss: tensor(1.0998) feature loss: tensor(0.4762)
Local adapation with distilling: 0.00091
training loss: tensor(1.0489) feature loss: tensor(0.4849)
Local adapation with distilling: 0.00091
training loss: tensor(1.1306) feature loss: tensor(0.4762)
Local adapation with distilling: 0.00091
training loss: tensor(1.0047) feature loss: tensor(0.4545)
Local adapation with distilling: 0.00091
training loss: tensor(1.0316) feature loss: tensor(0.4865)
Global Model Acc on global data: 0.3079 length of data: 10000
save a model
-------------Round number:  6  -------------
selected users: [17, 34, 0, 45, 60, 86, 20, 47, 44, 81]
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
all data: 491
Local adapation with distilling: 0.000892
training loss: tensor(0.7778) feature loss: tensor(0.4154)
Local adapation with distilling: 0.000892
training loss: tensor(0.8360) feature loss: tensor(0.3945)
Local adapation with distilling: 0.000892
training loss: tensor(0.9136) feature loss: tensor(0.4538)
Local adapation with distilling: 0.000892
training loss: tensor(0.9016) feature loss: tensor(0.4683)
Local adapation with distilling: 0.000892
training loss: tensor(0.9423) feature loss: tensor(0.4610)
Local adapation with distilling: 0.000892
training loss: tensor(0.8845) feature loss: tensor(0.4452)
Local adapation with distilling: 0.000892
training loss: tensor(0.9555) feature loss: tensor(0.4453)
Local adapation with distilling: 0.000892
training loss: tensor(0.7908) feature loss: tensor(0.3881)
Local adapation with distilling: 0.000892
training loss: tensor(0.9190) feature loss: tensor(0.4064)
Local adapation with distilling: 0.000892
training loss: tensor(1.1671) feature loss: tensor(0.4333)
Global Model Acc on global data: 0.3561 length of data: 10000
save a model
-------------Round number:  7  -------------
selected users: [37, 26, 78, 91, 49, 15, 93, 71, 86, 22]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
all data: 512
Local adapation with distilling: 0.000874
training loss: tensor(0.8543) feature loss: tensor(0.3716)
Local adapation with distilling: 0.000874
training loss: tensor(0.7587) feature loss: tensor(0.3921)
Local adapation with distilling: 0.000874
training loss: tensor(0.7868) feature loss: tensor(0.4160)
Local adapation with distilling: 0.000874
training loss: tensor(0.8556) feature loss: tensor(0.4115)
Local adapation with distilling: 0.000874
training loss: tensor(0.8334) feature loss: tensor(0.4207)
Local adapation with distilling: 0.000874
training loss: tensor(0.9004) feature loss: tensor(0.3976)
Local adapation with distilling: 0.000874
training loss: tensor(0.8115) feature loss: tensor(0.4117)
Local adapation with distilling: 0.000874
training loss: tensor(0.7582) feature loss: tensor(0.3608)
Local adapation with distilling: 0.000874
training loss: tensor(0.7384) feature loss: tensor(0.3993)
Local adapation with distilling: 0.000874
training loss: tensor(1.1199) feature loss: tensor(0.4324)
Global Model Acc on global data: 0.3721 length of data: 10000
save a model
-------------Round number:  8  -------------
selected users: [17, 23, 1, 44, 55, 99, 86, 29, 62, 33]
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
all data: 496
Local adapation with distilling: 0.000856
training loss: tensor(0.6805) feature loss: tensor(0.3954)
Local adapation with distilling: 0.000856
training loss: tensor(0.8222) feature loss: tensor(0.4419)
Local adapation with distilling: 0.000856
training loss: tensor(0.8375) feature loss: tensor(0.4294)
Local adapation with distilling: 0.000856
training loss: tensor(0.8119) feature loss: tensor(0.3969)
Local adapation with distilling: 0.000856
training loss: tensor(0.8271) feature loss: tensor(0.4411)
Local adapation with distilling: 0.000856
training loss: tensor(0.7854) feature loss: tensor(0.3793)
Local adapation with distilling: 0.000856
training loss: tensor(0.6323) feature loss: tensor(0.4016)
Local adapation with distilling: 0.000856
training loss: tensor(0.7575) feature loss: tensor(0.4185)
Local adapation with distilling: 0.000856
training loss: tensor(0.8758) feature loss: tensor(0.4524)
Local adapation with distilling: 0.000856
training loss: tensor(0.8488) feature loss: tensor(0.4276)
Global Model Acc on global data: 0.409 length of data: 10000
save a model
-------------Round number:  9  -------------
selected users: [75, 42, 46, 68, 3, 39, 23, 20, 70, 73]
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
all data: 497
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.6723) feature loss: tensor(0.3854)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.7527) feature loss: tensor(0.3701)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.6486) feature loss: tensor(0.3721)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.6860) feature loss: tensor(0.3565)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.7442) feature loss: tensor(0.3533)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.7232) feature loss: tensor(0.3827)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.6820) feature loss: tensor(0.4202)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.7162) feature loss: tensor(0.4082)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.6884) feature loss: tensor(0.3893)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.6991) feature loss: tensor(0.3929)
Global Model Acc on global data: 0.4242 length of data: 10000
save a model
-------------Round number:  10  -------------
selected users: [19, 14, 43, 37, 66, 3, 79, 41, 38, 68]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
all data: 506
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.6324) feature loss: tensor(0.3616)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.5939) feature loss: tensor(0.3584)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.6610) feature loss: tensor(0.3878)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.5909) feature loss: tensor(0.3422)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.5654) feature loss: tensor(0.3530)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.5479) feature loss: tensor(0.3468)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.7580) feature loss: tensor(0.4108)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.6590) feature loss: tensor(0.3867)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.5875) feature loss: tensor(0.3643)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.5198) feature loss: tensor(0.3449)
Global Model Acc on global data: 0.4 length of data: 10000
-------------Round number:  11  -------------
selected users: [46, 49, 22, 58, 41, 98, 62, 29, 30, 51]
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
all data: 491
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.5133) feature loss: tensor(0.3063)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.5521) feature loss: tensor(0.3365)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.7479) feature loss: tensor(0.3312)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.5935) feature loss: tensor(0.3329)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.5839) feature loss: tensor(0.3217)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.5947) feature loss: tensor(0.3172)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.6375) feature loss: tensor(0.3583)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.5082) feature loss: tensor(0.3029)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.6881) feature loss: tensor(0.3623)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.6358) feature loss: tensor(0.3552)
Global Model Acc on global data: 0.432 length of data: 10000
save a model
-------------Round number:  12  -------------
selected users: [17, 41, 92, 14, 68, 31, 89, 15, 21, 60]
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
all data: 494
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.4936) feature loss: tensor(0.3174)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.4765) feature loss: tensor(0.3259)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.6842) feature loss: tensor(0.3408)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.5315) feature loss: tensor(0.3273)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.4823) feature loss: tensor(0.3091)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.6806) feature loss: tensor(0.3709)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.5233) feature loss: tensor(0.3129)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.6986) feature loss: tensor(0.3700)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.5426) feature loss: tensor(0.3355)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.6527) feature loss: tensor(0.3691)
Global Model Acc on global data: 0.4377 length of data: 10000
save a model
-------------Round number:  13  -------------
selected users: [37, 62, 83, 14, 43, 9, 44, 31, 69, 57]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 489
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.4725) feature loss: tensor(0.2875)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.5505) feature loss: tensor(0.3300)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.5627) feature loss: tensor(0.3393)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.4606) feature loss: tensor(0.3014)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.5061) feature loss: tensor(0.3335)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.5884) feature loss: tensor(0.3187)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.5533) feature loss: tensor(0.3047)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.5668) feature loss: tensor(0.3134)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.5500) feature loss: tensor(0.3110)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.5390) feature loss: tensor(0.2838)
Global Model Acc on global data: 0.4443 length of data: 10000
save a model
-------------Round number:  14  -------------
selected users: [24, 39, 35, 44, 55, 70, 82, 40, 91, 65]
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
all data: 489
Local adapation with distilling: 0.000748
training loss: tensor(0.5722) feature loss: tensor(0.2931)
Local adapation with distilling: 0.000748
training loss: tensor(0.5784) feature loss: tensor(0.3150)
Local adapation with distilling: 0.000748
training loss: tensor(0.6786) feature loss: tensor(0.3437)
Local adapation with distilling: 0.000748
training loss: tensor(0.5607) feature loss: tensor(0.3218)
Local adapation with distilling: 0.000748
training loss: tensor(0.5762) feature loss: tensor(0.3347)
Local adapation with distilling: 0.000748
training loss: tensor(0.5663) feature loss: tensor(0.3345)
Local adapation with distilling: 0.000748
training loss: tensor(0.6110) feature loss: tensor(0.3339)
Local adapation with distilling: 0.000748
training loss: tensor(0.6452) feature loss: tensor(0.3457)
Local adapation with distilling: 0.000748
training loss: tensor(0.6482) feature loss: tensor(0.3368)
Local adapation with distilling: 0.000748
training loss: tensor(0.5500) feature loss: tensor(0.3287)
Global Model Acc on global data: 0.4417 length of data: 10000
-------------Round number:  15  -------------
selected users: [84, 36, 57, 51, 46, 78, 93, 14, 11, 59]
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
all data: 504
Local adapation with distilling: 0.00073
training loss: tensor(0.6459) feature loss: tensor(0.3658)
Local adapation with distilling: 0.00073
training loss: tensor(0.5482) feature loss: tensor(0.3664)
Local adapation with distilling: 0.00073
training loss: tensor(0.5337) feature loss: tensor(0.3315)
Local adapation with distilling: 0.00073
training loss: tensor(0.5875) feature loss: tensor(0.3746)
Local adapation with distilling: 0.00073
training loss: tensor(0.4838) feature loss: tensor(0.3464)
Local adapation with distilling: 0.00073
training loss: tensor(0.6118) feature loss: tensor(0.3624)
Local adapation with distilling: 0.00073
training loss: tensor(0.6346) feature loss: tensor(0.3756)
Local adapation with distilling: 0.00073
training loss: tensor(0.4879) feature loss: tensor(0.3621)
Local adapation with distilling: 0.00073
training loss: tensor(0.6017) feature loss: tensor(0.3463)
Local adapation with distilling: 0.00073
training loss: tensor(0.6451) feature loss: tensor(0.3574)
Global Model Acc on global data: 0.4848 length of data: 10000
save a model
-------------Round number:  16  -------------
selected users: [7, 25, 71, 42, 47, 29, 63, 88, 50, 9]
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
all data: 492
Local adapation with distilling: 0.000712
training loss: tensor(0.5125) feature loss: tensor(0.2895)
Local adapation with distilling: 0.000712
training loss: tensor(0.5562) feature loss: tensor(0.2984)
Local adapation with distilling: 0.000712
training loss: tensor(0.4880) feature loss: tensor(0.3091)
Local adapation with distilling: 0.000712
training loss: tensor(0.5861) feature loss: tensor(0.3078)
Local adapation with distilling: 0.000712
training loss: tensor(0.4692) feature loss: tensor(0.3097)
Local adapation with distilling: 0.000712
training loss: tensor(0.4532) feature loss: tensor(0.2815)
Local adapation with distilling: 0.000712
training loss: tensor(0.4794) feature loss: tensor(0.3187)
Local adapation with distilling: 0.000712
training loss: tensor(0.5275) feature loss: tensor(0.3141)
Local adapation with distilling: 0.000712
training loss: tensor(0.5624) feature loss: tensor(0.3264)
Local adapation with distilling: 0.000712
training loss: tensor(0.6950) feature loss: tensor(0.3124)
Global Model Acc on global data: 0.4621 length of data: 10000
-------------Round number:  17  -------------
selected users: [71, 28, 9, 4, 73, 34, 94, 92, 47, 37]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 492
Local adapation with distilling: 0.000694
training loss: tensor(0.3998) feature loss: tensor(0.2684)
Local adapation with distilling: 0.000694
training loss: tensor(0.7291) feature loss: tensor(0.3068)
Local adapation with distilling: 0.000694
training loss: tensor(0.6617) feature loss: tensor(0.2911)
Local adapation with distilling: 0.000694
training loss: tensor(0.4774) feature loss: tensor(0.2619)
Local adapation with distilling: 0.000694
training loss: tensor(0.5684) feature loss: tensor(0.3178)
Local adapation with distilling: 0.000694
training loss: tensor(0.4742) feature loss: tensor(0.2721)
Local adapation with distilling: 0.000694
training loss: tensor(0.4707) feature loss: tensor(0.2649)
Local adapation with distilling: 0.000694
training loss: tensor(0.5735) feature loss: tensor(0.2998)
Local adapation with distilling: 0.000694
training loss: tensor(0.4212) feature loss: tensor(0.2821)
Local adapation with distilling: 0.000694
training loss: tensor(0.3984) feature loss: tensor(0.2548)
Global Model Acc on global data: 0.4597 length of data: 10000
-------------Round number:  18  -------------
selected users: [53, 47, 43, 54, 33, 48, 0, 12, 44, 91]
random features: torch.Size([57, 16, 32, 32]) torch.Size([57])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
all data: 495
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.4809) feature loss: tensor(0.2746)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.4514) feature loss: tensor(0.2846)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.4889) feature loss: tensor(0.2979)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.5599) feature loss: tensor(0.2620)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.5412) feature loss: tensor(0.3011)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.6496) feature loss: tensor(0.3112)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.5669) feature loss: tensor(0.2959)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.5768) feature loss: tensor(0.2881)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.4877) feature loss: tensor(0.2767)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.5190) feature loss: tensor(0.2841)
Global Model Acc on global data: 0.4747 length of data: 10000
-------------Round number:  19  -------------
selected users: [85, 72, 16, 18, 2, 38, 90, 30, 83, 61]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([57, 16, 32, 32]) torch.Size([57])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 505
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.4623) feature loss: tensor(0.2735)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.4319) feature loss: tensor(0.2750)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.5385) feature loss: tensor(0.2608)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.6441) feature loss: tensor(0.3242)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.5325) feature loss: tensor(0.2882)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.4552) feature loss: tensor(0.2865)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.5995) feature loss: tensor(0.3142)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.5321) feature loss: tensor(0.2940)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.5027) feature loss: tensor(0.2901)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.4930) feature loss: tensor(0.2648)
Global Model Acc on global data: 0.4989 length of data: 10000
save a model
-------------Round number:  20  -------------
selected users: [70, 74, 2, 44, 56, 48, 12, 36, 0, 49]
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([55, 16, 32, 32]) torch.Size([55])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
all data: 489
Local adapation with distilling: 0.00064
training loss: tensor(0.4808) feature loss: tensor(0.2913)
Local adapation with distilling: 0.00064
training loss: tensor(0.4276) feature loss: tensor(0.2674)
Local adapation with distilling: 0.00064
training loss: tensor(0.4028) feature loss: tensor(0.2693)
Local adapation with distilling: 0.00064
training loss: tensor(0.4227) feature loss: tensor(0.2719)
Local adapation with distilling: 0.00064
training loss: tensor(0.3828) feature loss: tensor(0.2579)
Local adapation with distilling: 0.00064
training loss: tensor(0.4409) feature loss: tensor(0.2835)
Local adapation with distilling: 0.00064
training loss: tensor(0.4121) feature loss: tensor(0.2813)
Local adapation with distilling: 0.00064
training loss: tensor(0.3904) feature loss: tensor(0.2839)
Local adapation with distilling: 0.00064
training loss: tensor(0.4011) feature loss: tensor(0.2745)
Local adapation with distilling: 0.00064
training loss: tensor(0.4570) feature loss: tensor(0.2822)
Global Model Acc on global data: 0.4929 length of data: 10000
-------------Round number:  21  -------------
selected users: [23, 81, 85, 34, 62, 46, 42, 31, 93, 11]
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
all data: 494
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.5262) feature loss: tensor(0.2973)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.9445) feature loss: tensor(0.2738)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.4505) feature loss: tensor(0.2776)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.4616) feature loss: tensor(0.2666)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.5111) feature loss: tensor(0.2799)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.4279) feature loss: tensor(0.2658)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.5434) feature loss: tensor(0.2616)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.5637) feature loss: tensor(0.2783)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.5407) feature loss: tensor(0.3015)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.4737) feature loss: tensor(0.2857)
Global Model Acc on global data: 0.5335 length of data: 10000
save a model
-------------Round number:  22  -------------
selected users: [2, 49, 82, 31, 37, 12, 87, 42, 99, 85]
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 479
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.3431) feature loss: tensor(0.2502)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.3708) feature loss: tensor(0.2597)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.4351) feature loss: tensor(0.2583)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.4168) feature loss: tensor(0.2545)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.3514) feature loss: tensor(0.2384)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.3612) feature loss: tensor(0.2426)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.4679) feature loss: tensor(0.2742)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.3635) feature loss: tensor(0.2293)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.3764) feature loss: tensor(0.2404)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.3548) feature loss: tensor(0.2632)
Global Model Acc on global data: 0.5107 length of data: 10000
-------------Round number:  23  -------------
selected users: [26, 80, 82, 68, 77, 37, 3, 55, 20, 17]
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
all data: 494
Local adapation with distilling: 0.000586
training loss: tensor(0.4003) feature loss: tensor(0.2592)
Local adapation with distilling: 0.000586
training loss: tensor(0.4738) feature loss: tensor(0.2691)
Local adapation with distilling: 0.000586
training loss: tensor(0.4013) feature loss: tensor(0.2442)
Local adapation with distilling: 0.000586
training loss: tensor(0.4220) feature loss: tensor(0.2387)
Local adapation with distilling: 0.000586
training loss: tensor(0.4836) feature loss: tensor(0.2591)
Local adapation with distilling: 0.000586
training loss: tensor(0.3385) feature loss: tensor(0.2270)
Local adapation with distilling: 0.000586
training loss: tensor(0.4607) feature loss: tensor(0.2507)
Local adapation with distilling: 0.000586
training loss: tensor(0.4863) feature loss: tensor(0.2762)
Local adapation with distilling: 0.000586
training loss: tensor(0.4959) feature loss: tensor(0.2850)
Local adapation with distilling: 0.000586
training loss: tensor(0.4555) feature loss: tensor(0.2458)
Global Model Acc on global data: 0.5255 length of data: 10000
-------------Round number:  24  -------------
selected users: [26, 31, 37, 86, 76, 14, 88, 48, 71, 67]
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
all data: 497
Local adapation with distilling: 0.000568
training loss: tensor(0.2974) feature loss: tensor(0.2298)
Local adapation with distilling: 0.000568
training loss: tensor(0.3870) feature loss: tensor(0.2474)
Local adapation with distilling: 0.000568
training loss: tensor(0.2666) feature loss: tensor(0.2262)
Local adapation with distilling: 0.000568
training loss: tensor(0.3816) feature loss: tensor(0.2378)
Local adapation with distilling: 0.000568
training loss: tensor(0.4388) feature loss: tensor(0.2360)
Local adapation with distilling: 0.000568
training loss: tensor(0.3678) feature loss: tensor(0.2500)
Local adapation with distilling: 0.000568
training loss: tensor(0.3383) feature loss: tensor(0.2486)
Local adapation with distilling: 0.000568
training loss: tensor(0.3968) feature loss: tensor(0.2602)
Local adapation with distilling: 0.000568
training loss: tensor(0.3856) feature loss: tensor(0.2448)
Local adapation with distilling: 0.000568
training loss: tensor(0.3966) feature loss: tensor(0.2237)
Global Model Acc on global data: 0.5067 length of data: 10000
-------------Round number:  25  -------------
selected users: [41, 29, 33, 65, 74, 6, 57, 89, 87, 98]
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
all data: 497
Local adapation with distilling: 0.00055
training loss: tensor(0.3831) feature loss: tensor(0.2107)
Local adapation with distilling: 0.00055
training loss: tensor(0.3879) feature loss: tensor(0.2182)
Local adapation with distilling: 0.00055
training loss: tensor(0.4519) feature loss: tensor(0.2650)
Local adapation with distilling: 0.00055
training loss: tensor(0.4841) feature loss: tensor(0.2557)
Local adapation with distilling: 0.00055
training loss: tensor(0.3987) feature loss: tensor(0.2209)
Local adapation with distilling: 0.00055
training loss: tensor(0.4714) feature loss: tensor(0.2063)
Local adapation with distilling: 0.00055
training loss: tensor(0.3596) feature loss: tensor(0.1988)
Local adapation with distilling: 0.00055
training loss: tensor(0.4205) feature loss: tensor(0.2221)
Local adapation with distilling: 0.00055
training loss: tensor(0.4596) feature loss: tensor(0.2538)
Local adapation with distilling: 0.00055
training loss: tensor(0.4011) feature loss: tensor(0.2194)
Global Model Acc on global data: 0.5114 length of data: 10000
-------------Round number:  26  -------------
selected users: [8, 69, 84, 41, 25, 5, 63, 95, 33, 70]
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
all data: 489
Local adapation with distilling: 0.000532
training loss: tensor(0.4519) feature loss: tensor(0.2557)
Local adapation with distilling: 0.000532
training loss: tensor(0.4739) feature loss: tensor(0.2542)
Local adapation with distilling: 0.000532
training loss: tensor(0.4457) feature loss: tensor(0.2369)
Local adapation with distilling: 0.000532
training loss: tensor(0.3574) feature loss: tensor(0.2229)
Local adapation with distilling: 0.000532
training loss: tensor(0.4991) feature loss: tensor(0.2327)
Local adapation with distilling: 0.000532
training loss: tensor(0.5669) feature loss: tensor(0.2355)
Local adapation with distilling: 0.000532
training loss: tensor(0.4351) feature loss: tensor(0.2441)
Local adapation with distilling: 0.000532
training loss: tensor(0.4848) feature loss: tensor(0.2473)
Local adapation with distilling: 0.000532
training loss: tensor(0.4056) feature loss: tensor(0.2441)
Local adapation with distilling: 0.000532
training loss: tensor(0.4173) feature loss: tensor(0.2407)
Global Model Acc on global data: 0.548 length of data: 10000
save a model
-------------Round number:  27  -------------
selected users: [89, 68, 43, 50, 40, 95, 27, 85, 22, 44]
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
all data: 495
Local adapation with distilling: 0.000514
training loss: tensor(0.3598) feature loss: tensor(0.2354)
Local adapation with distilling: 0.000514
training loss: tensor(0.3831) feature loss: tensor(0.2370)
Local adapation with distilling: 0.000514
training loss: tensor(0.3746) feature loss: tensor(0.2592)
Local adapation with distilling: 0.000514
training loss: tensor(0.3910) feature loss: tensor(0.2536)
Local adapation with distilling: 0.000514
training loss: tensor(0.4298) feature loss: tensor(0.2575)
Local adapation with distilling: 0.000514
training loss: tensor(0.3828) feature loss: tensor(0.2519)
Local adapation with distilling: 0.000514
training loss: tensor(0.4738) feature loss: tensor(0.2288)
Local adapation with distilling: 0.000514
training loss: tensor(0.3482) feature loss: tensor(0.2408)
Local adapation with distilling: 0.000514
training loss: tensor(0.7200) feature loss: tensor(0.2488)
Local adapation with distilling: 0.000514
training loss: tensor(0.3965) feature loss: tensor(0.2442)
Global Model Acc on global data: 0.5457 length of data: 10000
-------------Round number:  28  -------------
selected users: [67, 14, 0, 86, 13, 18, 30, 36, 52, 95]
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 495
Local adapation with distilling: 0.000496
training loss: tensor(0.3680) feature loss: tensor(0.2055)
Local adapation with distilling: 0.000496
training loss: tensor(0.3291) feature loss: tensor(0.2082)
Local adapation with distilling: 0.000496
training loss: tensor(0.3825) feature loss: tensor(0.2357)
Local adapation with distilling: 0.000496
training loss: tensor(0.3348) feature loss: tensor(0.2031)
Local adapation with distilling: 0.000496
training loss: tensor(0.3834) feature loss: tensor(0.2185)
Local adapation with distilling: 0.000496
training loss: tensor(0.4663) feature loss: tensor(0.2317)
Local adapation with distilling: 0.000496
training loss: tensor(0.3972) feature loss: tensor(0.2245)
Local adapation with distilling: 0.000496
training loss: tensor(0.3183) feature loss: tensor(0.2254)
Local adapation with distilling: 0.000496
training loss: tensor(0.6615) feature loss: tensor(0.2155)
Local adapation with distilling: 0.000496
training loss: tensor(0.3411) feature loss: tensor(0.2072)
Global Model Acc on global data: 0.5542 length of data: 10000
save a model
-------------Round number:  29  -------------
selected users: [73, 8, 10, 7, 19, 71, 92, 25, 38, 12]
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
all data: 491
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.4771) feature loss: tensor(0.2475)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.4306) feature loss: tensor(0.2470)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.4778) feature loss: tensor(0.2458)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.4723) feature loss: tensor(0.2301)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.4688) feature loss: tensor(0.2309)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.3700) feature loss: tensor(0.2181)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.4843) feature loss: tensor(0.2407)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.4189) feature loss: tensor(0.2287)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.4051) feature loss: tensor(0.2321)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.3986) feature loss: tensor(0.2398)
Global Model Acc on global data: 0.5662 length of data: 10000
save a model
-------------Round number:  30  -------------
selected users: [20, 91, 34, 52, 8, 74, 21, 88, 80, 89]
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
all data: 490
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.3998) feature loss: tensor(0.2250)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.3951) feature loss: tensor(0.2145)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.3099) feature loss: tensor(0.2086)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.5668) feature loss: tensor(0.2314)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.3163) feature loss: tensor(0.2263)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.3058) feature loss: tensor(0.2169)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.3331) feature loss: tensor(0.2145)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.2889) feature loss: tensor(0.2147)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.3674) feature loss: tensor(0.2237)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.3260) feature loss: tensor(0.2183)
Global Model Acc on global data: 0.5393 length of data: 10000
-------------Round number:  31  -------------
selected users: [17, 33, 76, 3, 56, 0, 37, 8, 60, 67]
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([55, 16, 32, 32]) torch.Size([55])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
all data: 504
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.3395) feature loss: tensor(0.1787)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.3255) feature loss: tensor(0.2083)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.3722) feature loss: tensor(0.1759)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.3446) feature loss: tensor(0.1737)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.2900) feature loss: tensor(0.1854)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.3408) feature loss: tensor(0.2224)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.2823) feature loss: tensor(0.1756)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.2718) feature loss: tensor(0.2022)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.3723) feature loss: tensor(0.2001)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.3160) feature loss: tensor(0.1840)
Global Model Acc on global data: 0.5404 length of data: 10000
-------------Round number:  32  -------------
selected users: [22, 39, 85, 97, 55, 33, 80, 13, 27, 96]
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
all data: 492
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.6931) feature loss: tensor(0.2194)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.4679) feature loss: tensor(0.2182)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.3643) feature loss: tensor(0.2184)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.4574) feature loss: tensor(0.2290)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.4377) feature loss: tensor(0.2238)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.3290) feature loss: tensor(0.2115)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.3762) feature loss: tensor(0.2070)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.3593) feature loss: tensor(0.2199)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.4750) feature loss: tensor(0.2028)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.6827) feature loss: tensor(0.2219)
Global Model Acc on global data: 0.5708 length of data: 10000
save a model
-------------Round number:  33  -------------
selected users: [56, 90, 95, 82, 60, 71, 6, 81, 2, 70]
random features: torch.Size([55, 16, 32, 32]) torch.Size([55])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
all data: 495
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.2440) feature loss: tensor(0.1940)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.4114) feature loss: tensor(0.2255)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.2715) feature loss: tensor(0.2069)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.3356) feature loss: tensor(0.2204)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.3020) feature loss: tensor(0.2189)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.2725) feature loss: tensor(0.2030)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.4080) feature loss: tensor(0.2016)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.6833) feature loss: tensor(0.2004)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.3018) feature loss: tensor(0.2135)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.3111) feature loss: tensor(0.2174)
Global Model Acc on global data: 0.5238 length of data: 10000
-------------Round number:  34  -------------
selected users: [14, 74, 15, 4, 32, 59, 91, 10, 50, 53]
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([57, 16, 32, 32]) torch.Size([57])
all data: 501
Local adapation with distilling: 0.000388
training loss: tensor(0.3820) feature loss: tensor(0.2137)
Local adapation with distilling: 0.000388
training loss: tensor(0.3830) feature loss: tensor(0.2164)
Local adapation with distilling: 0.000388
training loss: tensor(0.5047) feature loss: tensor(0.2250)
Local adapation with distilling: 0.000388
training loss: tensor(0.4830) feature loss: tensor(0.2135)
Local adapation with distilling: 0.000388
training loss: tensor(0.5616) feature loss: tensor(0.2174)
Local adapation with distilling: 0.000388
training loss: tensor(0.5135) feature loss: tensor(0.2003)
Local adapation with distilling: 0.000388
training loss: tensor(0.3713) feature loss: tensor(0.2021)
Local adapation with distilling: 0.000388
training loss: tensor(0.4718) feature loss: tensor(0.2307)
Local adapation with distilling: 0.000388
training loss: tensor(0.3951) feature loss: tensor(0.2125)
Local adapation with distilling: 0.000388
training loss: tensor(0.3741) feature loss: tensor(0.1992)
Global Model Acc on global data: 0.5688 length of data: 10000
-------------Round number:  35  -------------
selected users: [40, 71, 98, 27, 70, 31, 10, 24, 51, 35]
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
all data: 484
Local adapation with distilling: 0.00037
training loss: tensor(0.3833) feature loss: tensor(0.1994)
Local adapation with distilling: 0.00037
training loss: tensor(0.2587) feature loss: tensor(0.1829)
Local adapation with distilling: 0.00037
training loss: tensor(0.3213) feature loss: tensor(0.1966)
Local adapation with distilling: 0.00037
training loss: tensor(0.3862) feature loss: tensor(0.1785)
Local adapation with distilling: 0.00037
training loss: tensor(0.2989) feature loss: tensor(0.1982)
Local adapation with distilling: 0.00037
training loss: tensor(0.3026) feature loss: tensor(0.1911)
Local adapation with distilling: 0.00037
training loss: tensor(0.3056) feature loss: tensor(0.1861)
Local adapation with distilling: 0.00037
training loss: tensor(0.3865) feature loss: tensor(0.1901)
Local adapation with distilling: 0.00037
training loss: tensor(0.3473) feature loss: tensor(0.1996)
Local adapation with distilling: 0.00037
training loss: tensor(0.4174) feature loss: tensor(0.1921)
Global Model Acc on global data: 0.5621 length of data: 10000
-------------Round number:  36  -------------
selected users: [59, 42, 2, 27, 28, 75, 58, 68, 52, 74]
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
all data: 493
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.3933) feature loss: tensor(0.1890)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.3963) feature loss: tensor(0.1803)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.3267) feature loss: tensor(0.1948)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.3711) feature loss: tensor(0.1858)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.5460) feature loss: tensor(0.2076)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.3828) feature loss: tensor(0.2003)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.4088) feature loss: tensor(0.2158)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.3631) feature loss: tensor(0.2028)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.4567) feature loss: tensor(0.2046)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.2852) feature loss: tensor(0.1995)
Global Model Acc on global data: 0.5899 length of data: 10000
save a model
-------------Round number:  37  -------------
selected users: [61, 49, 86, 78, 5, 91, 81, 82, 89, 18]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
all data: 507
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.3627) feature loss: tensor(0.1850)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.3328) feature loss: tensor(0.2090)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.3348) feature loss: tensor(0.1835)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.4107) feature loss: tensor(0.2111)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.4287) feature loss: tensor(0.1975)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.3108) feature loss: tensor(0.1892)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.6289) feature loss: tensor(0.2043)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.3537) feature loss: tensor(0.1961)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.3074) feature loss: tensor(0.1966)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.4006) feature loss: tensor(0.2134)
Global Model Acc on global data: 0.579 length of data: 10000
-------------Round number:  38  -------------
selected users: [40, 73, 49, 45, 64, 16, 69, 17, 72, 66]
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([57, 16, 32, 32]) torch.Size([57])
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
all data: 512
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.3943) feature loss: tensor(0.1938)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.3857) feature loss: tensor(0.1899)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.3208) feature loss: tensor(0.1874)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.3622) feature loss: tensor(0.1742)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.5501) feature loss: tensor(0.1774)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.4080) feature loss: tensor(0.1665)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.3689) feature loss: tensor(0.1916)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.3341) feature loss: tensor(0.1653)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.3241) feature loss: tensor(0.1772)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.3839) feature loss: tensor(0.1742)
Global Model Acc on global data: 0.5693 length of data: 10000
-------------Round number:  39  -------------
selected users: [22, 53, 84, 57, 87, 58, 29, 21, 85, 79]
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([57, 16, 32, 32]) torch.Size([57])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
all data: 503
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.4022) feature loss: tensor(0.1894)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.3079) feature loss: tensor(0.1808)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.4265) feature loss: tensor(0.2019)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.4131) feature loss: tensor(0.1871)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.4102) feature loss: tensor(0.1989)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.3518) feature loss: tensor(0.1945)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.3172) feature loss: tensor(0.1772)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.4275) feature loss: tensor(0.2010)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.3644) feature loss: tensor(0.2059)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.4442) feature loss: tensor(0.1935)
Global Model Acc on global data: 0.5842 length of data: 10000
-------------Round number:  40  -------------
selected users: [79, 75, 63, 15, 38, 11, 40, 45, 39, 62]
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
all data: 498
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.3014) feature loss: tensor(0.1605)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.3227) feature loss: tensor(0.1676)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.3037) feature loss: tensor(0.1734)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.4131) feature loss: tensor(0.1673)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.2787) feature loss: tensor(0.1681)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.3627) feature loss: tensor(0.1595)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.3190) feature loss: tensor(0.1761)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.3013) feature loss: tensor(0.1624)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.3120) feature loss: tensor(0.1534)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.4129) feature loss: tensor(0.1752)
Global Model Acc on global data: 0.5804 length of data: 10000
-------------Round number:  41  -------------
selected users: [42, 94, 37, 6, 79, 32, 24, 0, 33, 93]
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
all data: 495
Local adapation with distilling: 0.000262
training loss: tensor(0.4225) feature loss: tensor(0.1783)
Local adapation with distilling: 0.000262
training loss: tensor(0.4866) feature loss: tensor(0.1951)
Local adapation with distilling: 0.000262
training loss: tensor(0.3494) feature loss: tensor(0.1726)
Local adapation with distilling: 0.000262
training loss: tensor(0.4412) feature loss: tensor(0.1800)
Local adapation with distilling: 0.000262
training loss: tensor(0.3203) feature loss: tensor(0.1859)
Local adapation with distilling: 0.000262
training loss: tensor(0.4940) feature loss: tensor(0.1871)
Local adapation with distilling: 0.000262
training loss: tensor(0.4102) feature loss: tensor(0.1850)
Local adapation with distilling: 0.000262
training loss: tensor(0.3632) feature loss: tensor(0.1944)
Local adapation with distilling: 0.000262
training loss: tensor(0.3515) feature loss: tensor(0.2035)
Local adapation with distilling: 0.000262
training loss: tensor(0.4561) feature loss: tensor(0.2098)
Global Model Acc on global data: 0.5988 length of data: 10000
save a model
-------------Round number:  42  -------------
selected users: [83, 53, 70, 45, 44, 39, 22, 80, 10, 0]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([57, 16, 32, 32]) torch.Size([57])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
all data: 497
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.3142) feature loss: tensor(0.1677)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.2267) feature loss: tensor(0.1450)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.2582) feature loss: tensor(0.1635)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.2681) feature loss: tensor(0.1605)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.3000) feature loss: tensor(0.1692)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.2964) feature loss: tensor(0.1511)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.5238) feature loss: tensor(0.1477)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.2948) feature loss: tensor(0.1747)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.2863) feature loss: tensor(0.1655)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.2358) feature loss: tensor(0.1623)
Global Model Acc on global data: 0.5796 length of data: 10000
-------------Round number:  43  -------------
selected users: [20, 2, 15, 22, 57, 91, 69, 55, 11, 79]
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
all data: 498
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.3820) feature loss: tensor(0.1673)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.2557) feature loss: tensor(0.1467)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.3418) feature loss: tensor(0.1608)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.3610) feature loss: tensor(0.1417)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.3429) feature loss: tensor(0.1496)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.2594) feature loss: tensor(0.1451)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.2721) feature loss: tensor(0.1468)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.3089) feature loss: tensor(0.1601)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.3260) feature loss: tensor(0.1458)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.2288) feature loss: tensor(0.1364)
Global Model Acc on global data: 0.5945 length of data: 10000
-------------Round number:  44  -------------
selected users: [42, 54, 27, 93, 39, 65, 7, 26, 24, 60]
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
all data: 495
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.3685) feature loss: tensor(0.1581)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.5137) feature loss: tensor(0.1641)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.3994) feature loss: tensor(0.1629)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.4365) feature loss: tensor(0.1798)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.2611) feature loss: tensor(0.1529)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.3454) feature loss: tensor(0.1828)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.4313) feature loss: tensor(0.1790)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.3371) feature loss: tensor(0.1749)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.3442) feature loss: tensor(0.1621)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.3730) feature loss: tensor(0.1772)
Global Model Acc on global data: 0.5937 length of data: 10000
-------------Round number:  45  -------------
selected users: [0, 1, 62, 76, 37, 99, 78, 38, 2, 84]
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
all data: 498
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.2880) feature loss: tensor(0.1691)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.4174) feature loss: tensor(0.1627)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.4198) feature loss: tensor(0.1718)
Local adapation with distilling: 0.00019000000000000006
