nohup: ignoring input
================================================================================
Summary of training process:
Dataset                : Cifar10
Batch size             : 64
Learing rate           : 0.001
Number of total clients: 100
Split method           : quantity
Split parameter        : 3.0
Clients per round      : 10
Number of global rounds: 100
Number of local rounds : 10
Feature from layer     : 0
Feature percentage     : 0.1
Local training loss    : CE_CE_KL
Loss of beta           : 1.0
Algorithm              : FedFea
Modelname              : MOBNET
Mode                   : training
Seed                   : 0
================================================================================
Files already downloaded and verified
Files already downloaded and verified
Class frequencies:
client,class0,class1,class2,class3,class4,class5,class6,class7,class8,class9,Amount
Client   0,0.298,0.00,0.00,0.00,0.00,0.375,0.00,0.00,0.327,0.00,496
Client   1,0.00,0.321,0.00,0.00,0.00,0.358,0.00,0.00,0.00,0.321,520
Client   2,0.307,0.346,0.346,0.00,0.00,0.00,0.00,0.00,0.00,0.00,482
Client   3,0.00,0.00,0.00,0.337,0.00,0.00,0.377,0.286,0.00,0.00,531
Client   4,0.00,0.00,0.340,0.00,0.320,0.00,0.00,0.00,0.00,0.340,491
Client   5,0.00,0.00,0.327,0.00,0.308,0.365,0.00,0.00,0.00,0.00,510
Client   6,0.00,0.00,0.319,0.00,0.300,0.00,0.382,0.00,0.00,0.00,524
Client   7,0.00,0.00,0.00,0.00,0.330,0.00,0.00,0.319,0.00,0.351,476
Client   8,0.00,0.347,0.00,0.00,0.00,0.00,0.00,0.316,0.337,0.00,481
Client   9,0.286,0.00,0.00,0.00,0.00,0.00,0.389,0.00,0.00,0.325,514
Client  10,0.315,0.00,0.00,0.00,0.00,0.00,0.00,0.326,0.00,0.358,466
Client  11,0.00,0.313,0.00,0.00,0.00,0.00,0.375,0.00,0.00,0.313,534
Client  12,0.306,0.347,0.347,0.00,0.00,0.00,0.00,0.00,0.00,0.00,481
Client  13,0.00,0.329,0.00,0.352,0.00,0.00,0.00,0.00,0.319,0.00,508
Client  14,0.00,0.00,0.00,0.359,0.315,0.00,0.00,0.00,0.325,0.00,498
Client  15,0.00,0.00,0.00,0.00,0.00,0.361,0.00,0.00,0.315,0.324,515
Client  16,0.00,0.00,0.00,0.337,0.00,0.00,0.377,0.286,0.00,0.00,531
Client  17,0.00,0.00,0.00,0.00,0.00,0.346,0.372,0.283,0.00,0.00,538
Client  18,0.00,0.337,0.00,0.00,0.00,0.00,0.00,0.00,0.327,0.337,496
Client  19,0.00,0.00,0.00,0.356,0.312,0.00,0.00,0.00,0.00,0.332,503
Client  20,0.309,0.351,0.00,0.00,0.00,0.00,0.00,0.00,0.340,0.00,476
Client  21,0.312,0.355,0.00,0.00,0.333,0.00,0.00,0.00,0.00,0.00,471
Client  22,0.00,0.00,0.326,0.349,0.00,0.00,0.00,0.00,0.00,0.326,513
Client  23,0.298,0.00,0.339,0.363,0.00,0.00,0.00,0.00,0.00,0.00,493
Client  24,0.00,0.00,0.340,0.00,0.320,0.00,0.00,0.00,0.00,0.340,491
Client  25,0.00,0.00,0.00,0.00,0.00,0.367,0.00,0.302,0.00,0.331,504
Client  26,0.00,0.00,0.00,0.00,0.00,0.00,0.378,0.00,0.306,0.316,529
Client  27,0.00,0.00,0.00,0.368,0.320,0.00,0.00,0.312,0.00,0.00,487
Client  28,0.00,0.00,0.00,0.00,0.00,0.360,0.00,0.00,0.315,0.325,514
Client  29,0.00,0.00,0.00,0.328,0.00,0.00,0.366,0.00,0.00,0.306,546
Client  30,0.309,0.00,0.352,0.00,0.00,0.00,0.00,0.00,0.339,0.00,475
Client  31,0.00,0.344,0.00,0.00,0.00,0.00,0.00,0.313,0.00,0.344,486
Client  32,0.00,0.00,0.335,0.359,0.00,0.00,0.00,0.305,0.00,0.00,498
Client  33,0.302,0.00,0.00,0.368,0.00,0.00,0.00,0.00,0.331,0.00,487
Client  34,0.00,0.352,0.00,0.00,0.328,0.00,0.00,0.320,0.00,0.00,475
Client  35,0.00,0.315,0.00,0.337,0.00,0.348,0.00,0.00,0.00,0.00,531
Client  36,0.289,0.00,0.00,0.00,0.00,0.00,0.394,0.00,0.317,0.00,508
Client  37,0.00,0.00,0.00,0.00,0.307,0.00,0.394,0.299,0.00,0.00,508
Client  38,0.00,0.00,0.00,0.00,0.00,0.339,0.366,0.00,0.295,0.00,546
Client  39,0.00,0.00,0.322,0.00,0.00,0.356,0.00,0.00,0.00,0.322,519
Client  40,0.320,0.00,0.00,0.00,0.00,0.00,0.00,0.330,0.350,0.00,460
Client  41,0.00,0.352,0.00,0.00,0.328,0.00,0.00,0.320,0.00,0.00,475
Client  42,0.00,0.00,0.352,0.00,0.328,0.00,0.00,0.320,0.00,0.00,475
Client  43,0.298,0.00,0.00,0.363,0.00,0.00,0.00,0.00,0.00,0.339,493
Client  44,0.313,0.00,0.355,0.00,0.332,0.00,0.00,0.00,0.00,0.00,470
Client  45,0.00,0.331,0.00,0.00,0.00,0.367,0.00,0.302,0.00,0.00,504
Client  46,0.00,0.00,0.00,0.00,0.00,0.00,0.385,0.293,0.00,0.322,519
Client  47,0.00,0.00,0.00,0.00,0.333,0.00,0.00,0.323,0.344,0.00,468
Client  48,0.309,0.352,0.00,0.00,0.00,0.00,0.00,0.00,0.339,0.00,475
Client  49,0.00,0.00,0.337,0.00,0.00,0.00,0.00,0.00,0.325,0.337,495
Client  50,0.298,0.339,0.00,0.363,0.00,0.00,0.00,0.00,0.00,0.00,493
Client  51,0.00,0.344,0.344,0.00,0.00,0.00,0.00,0.311,0.00,0.00,485
Client  52,0.286,0.00,0.325,0.00,0.00,0.00,0.389,0.00,0.00,0.00,514
Client  53,0.00,0.00,0.326,0.350,0.00,0.00,0.00,0.00,0.00,0.324,512
Client  54,0.00,0.00,0.319,0.00,0.298,0.00,0.382,0.00,0.00,0.00,523
Client  55,0.304,0.00,0.00,0.00,0.00,0.383,0.00,0.313,0.00,0.00,483
Client  56,0.00,0.303,0.00,0.00,0.00,0.335,0.362,0.00,0.00,0.00,552
Client  57,0.00,0.00,0.00,0.00,0.308,0.00,0.394,0.298,0.00,0.00,507
Client  58,0.289,0.00,0.00,0.00,0.00,0.00,0.394,0.00,0.317,0.00,508
Client  59,0.00,0.322,0.00,0.00,0.00,0.357,0.00,0.00,0.00,0.320,518
Client  60,0.306,0.347,0.347,0.00,0.00,0.00,0.00,0.00,0.00,0.00,481
Client  61,0.00,0.327,0.00,0.00,0.308,0.365,0.00,0.00,0.00,0.00,507
Client  62,0.316,0.00,0.359,0.00,0.00,0.00,0.00,0.325,0.00,0.00,465
Client  63,0.00,0.00,0.00,0.354,0.00,0.00,0.00,0.00,0.318,0.328,506
Client  64,0.00,0.00,0.00,0.00,0.317,0.376,0.00,0.307,0.00,0.00,492
Client  65,0.295,0.00,0.00,0.00,0.00,0.371,0.00,0.00,0.00,0.333,498
Client  66,0.00,0.00,0.00,0.327,0.00,0.00,0.368,0.00,0.00,0.305,544
Client  67,0.00,0.351,0.00,0.00,0.330,0.00,0.00,0.319,0.00,0.00,473
Client  68,0.00,0.00,0.00,0.00,0.302,0.00,0.387,0.00,0.311,0.00,517
Client  69,0.00,0.00,0.337,0.00,0.00,0.00,0.00,0.00,0.327,0.337,493
Client  70,0.304,0.00,0.00,0.00,0.00,0.383,0.00,0.313,0.00,0.00,483
Client  71,0.00,0.327,0.00,0.00,0.308,0.365,0.00,0.00,0.00,0.00,507
Client  72,0.00,0.00,0.324,0.00,0.00,0.361,0.00,0.00,0.314,0.00,512
Client  73,0.00,0.00,0.00,0.340,0.00,0.353,0.00,0.00,0.307,0.00,524
Client  74,0.00,0.344,0.00,0.00,0.323,0.00,0.00,0.00,0.333,0.00,483
Client  75,0.304,0.00,0.00,0.00,0.00,0.383,0.00,0.313,0.00,0.00,483
Client  76,0.00,0.00,0.00,0.333,0.292,0.00,0.375,0.00,0.00,0.00,534
Client  77,0.317,0.00,0.358,0.00,0.00,0.00,0.00,0.325,0.00,0.00,464
Client  78,0.00,0.00,0.00,0.340,0.00,0.353,0.00,0.00,0.307,0.00,524
Client  79,0.00,0.333,0.333,0.00,0.00,0.00,0.00,0.00,0.00,0.333,498
Client  80,0.306,0.00,0.00,0.370,0.324,0.00,0.00,0.00,0.00,0.00,481
Client  81,0.287,0.324,0.00,0.00,0.00,0.00,0.390,0.00,0.00,0.00,513
Client  82,0.317,0.00,0.358,0.00,0.00,0.00,0.00,0.325,0.00,0.00,464
Client  83,0.00,0.00,0.329,0.352,0.00,0.00,0.00,0.00,0.319,0.00,505
Client  84,0.306,0.00,0.00,0.370,0.324,0.00,0.00,0.00,0.00,0.00,481
Client  85,0.00,0.00,0.00,0.00,0.311,0.369,0.00,0.00,0.321,0.00,502
Client  86,0.00,0.00,0.312,0.00,0.00,0.00,0.376,0.00,0.00,0.312,532
Client  87,0.309,0.00,0.00,0.374,0.00,0.00,0.00,0.317,0.00,0.00,476
Client  88,0.00,0.344,0.00,0.00,0.323,0.00,0.00,0.00,0.333,0.00,483
Client  89,0.00,0.00,0.00,0.327,0.00,0.00,0.368,0.00,0.00,0.305,544
Client  90,0.309,0.00,0.00,0.374,0.00,0.00,0.00,0.317,0.00,0.00,476
Client  91,0.00,0.314,0.00,0.336,0.00,0.350,0.00,0.00,0.00,0.00,529
Client  92,0.313,0.00,0.354,0.00,0.333,0.00,0.00,0.00,0.00,0.00,469
Client  93,0.00,0.00,0.00,0.340,0.00,0.353,0.00,0.00,0.307,0.00,524
Client  94,0.00,0.00,0.00,0.00,0.308,0.00,0.394,0.298,0.00,0.00,507
Client  95,0.00,0.331,0.00,0.00,0.00,0.369,0.00,0.301,0.00,0.00,502
Client  96,0.287,0.00,0.324,0.00,0.00,0.00,0.390,0.00,0.00,0.00,513
Client  97,0.00,0.00,0.347,0.00,0.00,0.00,0.00,0.316,0.337,0.00,478
Client  98,0.00,0.344,0.00,0.00,0.323,0.00,0.00,0.00,0.333,0.00,483
Client  99,0.313,0.00,0.00,0.00,0.333,0.00,0.00,0.00,0.00,0.354,469
0 [0 5 8] [0 5 8] [1 2 3 4 6 7 9]
0 training: Counter({5: 186, 8: 162, 0: 148}) testing iid: Counter({8: 1000, 0: 1000, 5: 1000})
1 [1 5 9] [1 5 9] [0 2 3 4 6 7 8]
1 training: Counter({5: 186, 1: 167, 9: 167}) testing iid: Counter({1: 1000, 9: 1000, 5: 1000})
2 [0 1 2] [0 1 2] [3 4 5 6 7 8 9]
2 training: Counter({1: 167, 2: 167, 0: 148}) testing iid: Counter({0: 1000, 1: 1000, 2: 1000})
3 [3 6 7] [3 6 7] [0 1 2 4 5 8 9]
3 training: Counter({6: 200, 3: 179, 7: 152}) testing iid: Counter({3: 1000, 6: 1000, 7: 1000})
4 [2 4 9] [2 4 9] [0 1 3 5 6 7 8]
4 training: Counter({2: 167, 9: 167, 4: 157}) testing iid: Counter({9: 1000, 4: 1000, 2: 1000})
5 [2 4 5] [2 4 5] [0 1 3 6 7 8 9]
5 training: Counter({5: 186, 2: 167, 4: 157}) testing iid: Counter({5: 1000, 4: 1000, 2: 1000})
6 [2 4 6] [2 4 6] [0 1 3 5 7 8 9]
6 training: Counter({6: 200, 2: 167, 4: 157}) testing iid: Counter({6: 1000, 4: 1000, 2: 1000})
7 [4 7 9] [4 7 9] [0 1 2 3 5 6 8]
7 training: Counter({9: 167, 4: 157, 7: 152}) testing iid: Counter({9: 1000, 7: 1000, 4: 1000})
8 [1 7 8] [1 7 8] [0 2 3 4 5 6 9]
8 training: Counter({1: 167, 8: 162, 7: 152}) testing iid: Counter({8: 1000, 1: 1000, 7: 1000})
9 [0 6 9] [0 6 9] [1 2 3 4 5 7 8]
9 training: Counter({6: 200, 9: 167, 0: 147}) testing iid: Counter({0: 1000, 6: 1000, 9: 1000})
10 [0 7 9] [0 7 9] [1 2 3 4 5 6 8]
10 training: Counter({9: 167, 7: 152, 0: 147}) testing iid: Counter({0: 1000, 9: 1000, 7: 1000})
11 [1 6 9] [1 6 9] [0 2 3 4 5 7 8]
11 training: Counter({6: 200, 1: 167, 9: 167}) testing iid: Counter({6: 1000, 1: 1000, 9: 1000})
12 [0 1 2] [0 1 2] [3 4 5 6 7 8 9]
12 training: Counter({1: 167, 2: 167, 0: 147}) testing iid: Counter({0: 1000, 1: 1000, 2: 1000})
13 [1 3 8] [1 3 8] [0 2 4 5 6 7 9]
13 training: Counter({3: 179, 1: 167, 8: 162}) testing iid: Counter({3: 1000, 8: 1000, 1: 1000})
14 [3 4 8] [3 4 8] [0 1 2 5 6 7 9]
14 training: Counter({3: 179, 8: 162, 4: 157}) testing iid: Counter({3: 1000, 8: 1000, 4: 1000})
15 [5 8 9] [5 8 9] [0 1 2 3 4 6 7]
15 training: Counter({5: 186, 9: 167, 8: 162}) testing iid: Counter({8: 1000, 9: 1000, 5: 1000})
16 [3 6 7] [3 6 7] [0 1 2 4 5 8 9]
16 training: Counter({6: 200, 3: 179, 7: 152}) testing iid: Counter({3: 1000, 6: 1000, 7: 1000})
17 [5 6 7] [5 6 7] [0 1 2 3 4 8 9]
17 training: Counter({6: 200, 5: 186, 7: 152}) testing iid: Counter({6: 1000, 5: 1000, 7: 1000})
18 [1 8 9] [1 8 9] [0 2 3 4 5 6 7]
18 training: Counter({1: 167, 9: 167, 8: 162}) testing iid: Counter({8: 1000, 1: 1000, 9: 1000})
19 [3 4 9] [3 4 9] [0 1 2 5 6 7 8]
19 training: Counter({3: 179, 9: 167, 4: 157}) testing iid: Counter({3: 1000, 9: 1000, 4: 1000})
20 [0 1 8] [0 1 8] [2 3 4 5 6 7 9]
20 training: Counter({1: 167, 8: 162, 0: 147}) testing iid: Counter({8: 1000, 0: 1000, 1: 1000})
21 [0 1 4] [0 1 4] [2 3 5 6 7 8 9]
21 training: Counter({1: 167, 4: 157, 0: 147}) testing iid: Counter({0: 1000, 1: 1000, 4: 1000})
22 [2 3 9] [2 3 9] [0 1 4 5 6 7 8]
22 training: Counter({3: 179, 2: 167, 9: 167}) testing iid: Counter({3: 1000, 9: 1000, 2: 1000})
23 [0 2 3] [0 2 3] [1 4 5 6 7 8 9]
23 training: Counter({3: 179, 2: 167, 0: 147}) testing iid: Counter({3: 1000, 0: 1000, 2: 1000})
24 [2 4 9] [2 4 9] [0 1 3 5 6 7 8]
24 training: Counter({2: 167, 9: 167, 4: 157}) testing iid: Counter({9: 1000, 4: 1000, 2: 1000})
25 [5 7 9] [5 7 9] [0 1 2 3 4 6 8]
25 training: Counter({5: 185, 9: 167, 7: 152}) testing iid: Counter({9: 1000, 5: 1000, 7: 1000})
26 [6 8 9] [6 8 9] [0 1 2 3 4 5 7]
26 training: Counter({6: 200, 9: 167, 8: 162}) testing iid: Counter({8: 1000, 6: 1000, 9: 1000})
27 [3 4 7] [3 4 7] [0 1 2 5 6 8 9]
27 training: Counter({3: 179, 4: 156, 7: 152}) testing iid: Counter({3: 1000, 7: 1000, 4: 1000})
28 [5 8 9] [5 8 9] [0 1 2 3 4 6 7]
28 training: Counter({5: 185, 9: 167, 8: 162}) testing iid: Counter({8: 1000, 9: 1000, 5: 1000})
29 [3 6 9] [3 6 9] [0 1 2 4 5 7 8]
29 training: Counter({6: 200, 3: 179, 9: 167}) testing iid: Counter({3: 1000, 6: 1000, 9: 1000})
30 [0 2 8] [0 2 8] [1 3 4 5 6 7 9]
30 training: Counter({2: 167, 8: 161, 0: 147}) testing iid: Counter({8: 1000, 0: 1000, 2: 1000})
31 [1 7 9] [1 7 9] [0 2 3 4 5 6 8]
31 training: Counter({1: 167, 9: 167, 7: 152}) testing iid: Counter({1: 1000, 9: 1000, 7: 1000})
32 [2 3 7] [2 3 7] [0 1 4 5 6 8 9]
32 training: Counter({3: 179, 2: 167, 7: 152}) testing iid: Counter({3: 1000, 7: 1000, 2: 1000})
33 [0 3 8] [0 3 8] [1 2 4 5 6 7 9]
33 training: Counter({3: 179, 8: 161, 0: 147}) testing iid: Counter({3: 1000, 8: 1000, 0: 1000})
34 [1 4 7] [1 4 7] [0 2 3 5 6 8 9]
34 training: Counter({1: 167, 4: 156, 7: 152}) testing iid: Counter({1: 1000, 7: 1000, 4: 1000})
35 [1 3 5] [1 3 5] [0 2 4 6 7 8 9]
35 training: Counter({5: 185, 3: 179, 1: 167}) testing iid: Counter({3: 1000, 1: 1000, 5: 1000})
36 [0 6 8] [0 6 8] [1 2 3 4 5 7 9]
36 training: Counter({6: 200, 8: 161, 0: 147}) testing iid: Counter({8: 1000, 0: 1000, 6: 1000})
37 [4 6 7] [4 6 7] [0 1 2 3 5 8 9]
37 training: Counter({6: 200, 4: 156, 7: 152}) testing iid: Counter({6: 1000, 7: 1000, 4: 1000})
38 [5 6 8] [5 6 8] [0 1 2 3 4 7 9]
38 training: Counter({6: 200, 5: 185, 8: 161}) testing iid: Counter({8: 1000, 6: 1000, 5: 1000})
39 [2 5 9] [2 5 9] [0 1 3 4 6 7 8]
39 training: Counter({5: 185, 2: 167, 9: 167}) testing iid: Counter({9: 1000, 5: 1000, 2: 1000})
40 [0 7 8] [0 7 8] [1 2 3 4 5 6 9]
40 training: Counter({8: 161, 7: 152, 0: 147}) testing iid: Counter({8: 1000, 0: 1000, 7: 1000})
41 [1 4 7] [1 4 7] [0 2 3 5 6 8 9]
41 training: Counter({1: 167, 4: 156, 7: 152}) testing iid: Counter({1: 1000, 7: 1000, 4: 1000})
42 [2 4 7] [2 4 7] [0 1 3 5 6 8 9]
42 training: Counter({2: 167, 4: 156, 7: 152}) testing iid: Counter({7: 1000, 4: 1000, 2: 1000})
43 [0 3 9] [0 3 9] [1 2 4 5 6 7 8]
43 training: Counter({3: 179, 9: 167, 0: 147}) testing iid: Counter({3: 1000, 0: 1000, 9: 1000})
44 [0 2 4] [0 2 4] [1 3 5 6 7 8 9]
44 training: Counter({2: 167, 4: 156, 0: 147}) testing iid: Counter({0: 1000, 4: 1000, 2: 1000})
45 [1 5 7] [1 5 7] [0 2 3 4 6 8 9]
45 training: Counter({5: 185, 1: 167, 7: 152}) testing iid: Counter({1: 1000, 5: 1000, 7: 1000})
46 [6 7 9] [6 7 9] [0 1 2 3 4 5 8]
46 training: Counter({6: 200, 9: 167, 7: 152}) testing iid: Counter({6: 1000, 9: 1000, 7: 1000})
47 [4 7 8] [4 7 8] [0 1 2 3 5 6 9]
47 training: Counter({8: 161, 4: 156, 7: 151}) testing iid: Counter({8: 1000, 7: 1000, 4: 1000})
48 [0 1 8] [0 1 8] [2 3 4 5 6 7 9]
48 training: Counter({1: 167, 8: 161, 0: 147}) testing iid: Counter({8: 1000, 0: 1000, 1: 1000})
49 [2 8 9] [2 8 9] [0 1 3 4 5 6 7]
49 training: Counter({2: 167, 9: 167, 8: 161}) testing iid: Counter({8: 1000, 9: 1000, 2: 1000})
50 [0 1 3] [0 1 3] [2 4 5 6 7 8 9]
50 training: Counter({3: 179, 1: 167, 0: 147}) testing iid: Counter({3: 1000, 0: 1000, 1: 1000})
51 [1 2 7] [1 2 7] [0 3 4 5 6 8 9]
51 training: Counter({1: 167, 2: 167, 7: 151}) testing iid: Counter({1: 1000, 7: 1000, 2: 1000})
52 [0 2 6] [0 2 6] [1 3 4 5 7 8 9]
52 training: Counter({6: 200, 2: 167, 0: 147}) testing iid: Counter({0: 1000, 6: 1000, 2: 1000})
53 [2 3 9] [2 3 9] [0 1 4 5 6 7 8]
53 training: Counter({3: 179, 2: 167, 9: 166}) testing iid: Counter({3: 1000, 9: 1000, 2: 1000})
54 [2 4 6] [2 4 6] [0 1 3 5 7 8 9]
54 training: Counter({6: 200, 2: 167, 4: 156}) testing iid: Counter({6: 1000, 4: 1000, 2: 1000})
55 [0 5 7] [0 5 7] [1 2 3 4 6 8 9]
55 training: Counter({5: 185, 7: 151, 0: 147}) testing iid: Counter({0: 1000, 5: 1000, 7: 1000})
56 [1 5 6] [1 5 6] [0 2 3 4 7 8 9]
56 training: Counter({6: 200, 5: 185, 1: 167}) testing iid: Counter({6: 1000, 1: 1000, 5: 1000})
57 [4 6 7] [4 6 7] [0 1 2 3 5 8 9]
57 training: Counter({6: 200, 4: 156, 7: 151}) testing iid: Counter({6: 1000, 7: 1000, 4: 1000})
58 [0 6 8] [0 6 8] [1 2 3 4 5 7 9]
58 training: Counter({6: 200, 8: 161, 0: 147}) testing iid: Counter({8: 1000, 0: 1000, 6: 1000})
59 [1 5 9] [1 5 9] [0 2 3 4 6 7 8]
59 training: Counter({5: 185, 1: 167, 9: 166}) testing iid: Counter({1: 1000, 9: 1000, 5: 1000})
60 [0 1 2] [0 1 2] [3 4 5 6 7 8 9]
60 training: Counter({1: 167, 2: 167, 0: 147}) testing iid: Counter({0: 1000, 1: 1000, 2: 1000})
61 [1 4 5] [1 4 5] [0 2 3 6 7 8 9]
61 training: Counter({5: 185, 1: 166, 4: 156}) testing iid: Counter({1: 1000, 5: 1000, 4: 1000})
62 [0 2 7] [0 2 7] [1 3 4 5 6 8 9]
62 training: Counter({2: 167, 7: 151, 0: 147}) testing iid: Counter({0: 1000, 7: 1000, 2: 1000})
63 [3 8 9] [3 8 9] [0 1 2 4 5 6 7]
63 training: Counter({3: 179, 9: 166, 8: 161}) testing iid: Counter({3: 1000, 8: 1000, 9: 1000})
64 [4 5 7] [4 5 7] [0 1 2 3 6 8 9]
64 training: Counter({5: 185, 4: 156, 7: 151}) testing iid: Counter({5: 1000, 7: 1000, 4: 1000})
65 [0 5 9] [0 5 9] [1 2 3 4 6 7 8]
65 training: Counter({5: 185, 9: 166, 0: 147}) testing iid: Counter({0: 1000, 9: 1000, 5: 1000})
66 [3 6 9] [3 6 9] [0 1 2 4 5 7 8]
66 training: Counter({6: 200, 3: 178, 9: 166}) testing iid: Counter({3: 1000, 6: 1000, 9: 1000})
67 [1 4 7] [1 4 7] [0 2 3 5 6 8 9]
67 training: Counter({1: 166, 4: 156, 7: 151}) testing iid: Counter({1: 1000, 7: 1000, 4: 1000})
68 [4 6 8] [4 6 8] [0 1 2 3 5 7 9]
68 training: Counter({6: 200, 8: 161, 4: 156}) testing iid: Counter({8: 1000, 6: 1000, 4: 1000})
69 [2 8 9] [2 8 9] [0 1 3 4 5 6 7]
69 training: Counter({2: 166, 9: 166, 8: 161}) testing iid: Counter({8: 1000, 9: 1000, 2: 1000})
70 [0 5 7] [0 5 7] [1 2 3 4 6 8 9]
70 training: Counter({5: 185, 7: 151, 0: 147}) testing iid: Counter({0: 1000, 5: 1000, 7: 1000})
71 [1 4 5] [1 4 5] [0 2 3 6 7 8 9]
71 training: Counter({5: 185, 1: 166, 4: 156}) testing iid: Counter({1: 1000, 5: 1000, 4: 1000})
72 [2 5 8] [2 5 8] [0 1 3 4 6 7 9]
72 training: Counter({5: 185, 2: 166, 8: 161}) testing iid: Counter({8: 1000, 5: 1000, 2: 1000})
73 [3 5 8] [3 5 8] [0 1 2 4 6 7 9]
73 training: Counter({5: 185, 3: 178, 8: 161}) testing iid: Counter({3: 1000, 8: 1000, 5: 1000})
74 [1 4 8] [1 4 8] [0 2 3 5 6 7 9]
74 training: Counter({1: 166, 8: 161, 4: 156}) testing iid: Counter({8: 1000, 1: 1000, 4: 1000})
75 [0 5 7] [0 5 7] [1 2 3 4 6 8 9]
75 training: Counter({5: 185, 7: 151, 0: 147}) testing iid: Counter({0: 1000, 5: 1000, 7: 1000})
76 [3 4 6] [3 4 6] [0 1 2 5 7 8 9]
76 training: Counter({6: 200, 3: 178, 4: 156}) testing iid: Counter({3: 1000, 6: 1000, 4: 1000})
77 [0 2 7] [0 2 7] [1 3 4 5 6 8 9]
77 training: Counter({2: 166, 7: 151, 0: 147}) testing iid: Counter({0: 1000, 7: 1000, 2: 1000})
78 [3 5 8] [3 5 8] [0 1 2 4 6 7 9]
78 training: Counter({5: 185, 3: 178, 8: 161}) testing iid: Counter({3: 1000, 8: 1000, 5: 1000})
79 [1 2 9] [1 2 9] [0 3 4 5 6 7 8]
79 training: Counter({1: 166, 2: 166, 9: 166}) testing iid: Counter({1: 1000, 9: 1000, 2: 1000})
80 [0 3 4] [0 3 4] [1 2 5 6 7 8 9]
80 training: Counter({3: 178, 4: 156, 0: 147}) testing iid: Counter({3: 1000, 0: 1000, 4: 1000})
81 [0 1 6] [0 1 6] [2 3 4 5 7 8 9]
81 training: Counter({6: 200, 1: 166, 0: 147}) testing iid: Counter({0: 1000, 6: 1000, 1: 1000})
82 [0 2 7] [0 2 7] [1 3 4 5 6 8 9]
82 training: Counter({2: 166, 7: 151, 0: 147}) testing iid: Counter({0: 1000, 7: 1000, 2: 1000})
83 [2 3 8] [2 3 8] [0 1 4 5 6 7 9]
83 training: Counter({3: 178, 2: 166, 8: 161}) testing iid: Counter({3: 1000, 8: 1000, 2: 1000})
84 [0 3 4] [0 3 4] [1 2 5 6 7 8 9]
84 training: Counter({3: 178, 4: 156, 0: 147}) testing iid: Counter({3: 1000, 0: 1000, 4: 1000})
85 [4 5 8] [4 5 8] [0 1 2 3 6 7 9]
85 training: Counter({5: 185, 8: 161, 4: 156}) testing iid: Counter({8: 1000, 5: 1000, 4: 1000})
86 [2 6 9] [2 6 9] [0 1 3 4 5 7 8]
86 training: Counter({6: 200, 2: 166, 9: 166}) testing iid: Counter({6: 1000, 9: 1000, 2: 1000})
87 [0 3 7] [0 3 7] [1 2 4 5 6 8 9]
87 training: Counter({3: 178, 7: 151, 0: 147}) testing iid: Counter({3: 1000, 0: 1000, 7: 1000})
88 [1 4 8] [1 4 8] [0 2 3 5 6 7 9]
88 training: Counter({1: 166, 8: 161, 4: 156}) testing iid: Counter({8: 1000, 1: 1000, 4: 1000})
89 [3 6 9] [3 6 9] [0 1 2 4 5 7 8]
89 training: Counter({6: 200, 3: 178, 9: 166}) testing iid: Counter({3: 1000, 6: 1000, 9: 1000})
90 [0 3 7] [0 3 7] [1 2 4 5 6 8 9]
90 training: Counter({3: 178, 7: 151, 0: 147}) testing iid: Counter({3: 1000, 0: 1000, 7: 1000})
91 [1 3 5] [1 3 5] [0 2 4 6 7 8 9]
91 training: Counter({5: 185, 3: 178, 1: 166}) testing iid: Counter({3: 1000, 1: 1000, 5: 1000})
92 [0 2 4] [0 2 4] [1 3 5 6 7 8 9]
92 training: Counter({2: 166, 4: 156, 0: 147}) testing iid: Counter({0: 1000, 4: 1000, 2: 1000})
93 [3 5 8] [3 5 8] [0 1 2 4 6 7 9]
93 training: Counter({5: 185, 3: 178, 8: 161}) testing iid: Counter({3: 1000, 8: 1000, 5: 1000})
94 [4 6 7] [4 6 7] [0 1 2 3 5 8 9]
94 training: Counter({6: 200, 4: 156, 7: 151}) testing iid: Counter({6: 1000, 7: 1000, 4: 1000})
95 [1 5 7] [1 5 7] [0 2 3 4 6 8 9]
95 training: Counter({5: 185, 1: 166, 7: 151}) testing iid: Counter({1: 1000, 5: 1000, 7: 1000})
96 [0 2 6] [0 2 6] [1 3 4 5 7 8 9]
96 training: Counter({6: 200, 2: 166, 0: 147}) testing iid: Counter({0: 1000, 6: 1000, 2: 1000})
97 [2 7 8] [2 7 8] [0 1 3 4 5 6 9]
97 training: Counter({2: 166, 8: 161, 7: 151}) testing iid: Counter({8: 1000, 7: 1000, 2: 1000})
98 [1 4 8] [1 4 8] [0 2 3 5 6 7 9]
98 training: Counter({1: 166, 8: 161, 4: 156}) testing iid: Counter({8: 1000, 1: 1000, 4: 1000})
99 [0 4 9] [0 4 9] [1 2 3 5 6 7 8]
99 training: Counter({9: 166, 4: 156, 0: 147}) testing iid: Counter({0: 1000, 9: 1000, 4: 1000})
Num_samples of Training set per client: [496, 520, 482, 531, 491, 510, 524, 476, 481, 514, 466, 534, 481, 508, 498, 515, 531, 538, 496, 503, 476, 471, 513, 493, 491, 504, 529, 487, 514, 546, 475, 486, 498, 487, 475, 531, 508, 508, 546, 519, 460, 475, 475, 493, 470, 504, 519, 468, 475, 495, 493, 485, 514, 512, 523, 483, 552, 507, 508, 518, 481, 507, 465, 506, 492, 498, 544, 473, 517, 493, 483, 507, 512, 524, 483, 483, 534, 464, 524, 498, 481, 513, 464, 505, 481, 502, 532, 476, 483, 544, 476, 529, 469, 524, 507, 502, 513, 478, 483, 469]
Total_training_samples: 50000
Global test set: 10000
Finish Generating Samples, distribution saved
MobileNetV2(
  (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (layers): Sequential(
    (0): Block(
      (conv1): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): Block(
      (conv1): Conv2d(16, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=96, bias=False)
      (bn2): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(96, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(16, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (2): Block(
      (conv1): Conv2d(24, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=144, bias=False)
      (bn2): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(144, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (3): Block(
      (conv1): Conv2d(24, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(144, 144, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=144, bias=False)
      (bn2): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(144, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (4): Block(
      (conv1): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
      (bn2): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(192, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (5): Block(
      (conv1): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
      (bn2): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(192, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (6): Block(
      (conv1): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(192, 192, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=192, bias=False)
      (bn2): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(192, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (7): Block(
      (conv1): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
      (bn2): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (8): Block(
      (conv1): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
      (bn2): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (9): Block(
      (conv1): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
      (bn2): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (10): Block(
      (conv1): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
      (bn2): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(384, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(64, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (11): Block(
      (conv1): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)
      (bn2): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (12): Block(
      (conv1): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)
      (bn2): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (13): Block(
      (conv1): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(576, 576, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=576, bias=False)
      (bn2): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(576, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (14): Block(
      (conv1): Conv2d(160, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(960, 960, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=960, bias=False)
      (bn2): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(960, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (15): Block(
      (conv1): Conv2d(160, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(960, 960, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=960, bias=False)
      (bn2): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(960, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (16): Block(
      (conv1): Conv2d(160, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(960, 960, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=960, bias=False)
      (bn2): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(960, 320, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(160, 320, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (conv2): Conv2d(320, 1280, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn2): BatchNorm2d(1280, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (linear): Linear(in_features=1280, out_features=10, bias=True)
)
number of parameters: 2296922
clients initializting...
output size: 10
  0%|          | 0/100 [00:00<?, ?it/s]  1%|          | 1/100 [00:03<06:33,  3.97s/it]  2%|▏         | 2/100 [00:04<04:52,  2.98s/it]  3%|▎         | 3/100 [00:05<03:41,  2.28s/it]  4%|▍         | 4/100 [00:05<02:52,  1.79s/it]  5%|▌         | 5/100 [00:06<02:17,  1.45s/it]  6%|▌         | 6/100 [00:07<01:53,  1.21s/it]  7%|▋         | 7/100 [00:07<01:37,  1.04s/it]  8%|▊         | 8/100 [00:08<01:25,  1.08it/s]  9%|▉         | 9/100 [00:09<01:17,  1.17it/s] 10%|█         | 10/100 [00:09<01:11,  1.25it/s] 11%|█         | 11/100 [00:10<01:07,  1.33it/s] 12%|█▏        | 12/100 [00:11<01:03,  1.39it/s] 13%|█▎        | 13/100 [00:11<01:00,  1.43it/s] 14%|█▍        | 14/100 [00:12<00:58,  1.47it/s] 15%|█▌        | 15/100 [00:13<00:56,  1.50it/s] 16%|█▌        | 16/100 [00:13<00:55,  1.52it/s] 17%|█▋        | 17/100 [00:14<00:54,  1.52it/s] 18%|█▊        | 18/100 [00:15<00:53,  1.54it/s] 19%|█▉        | 19/100 [00:15<00:52,  1.54it/s] 20%|██        | 20/100 [00:16<00:51,  1.55it/s] 21%|██        | 21/100 [00:16<00:50,  1.55it/s] 22%|██▏       | 22/100 [00:17<00:50,  1.55it/s] 23%|██▎       | 23/100 [00:18<00:49,  1.54it/s] 24%|██▍       | 24/100 [00:18<00:49,  1.55it/s] 25%|██▌       | 25/100 [00:19<00:48,  1.54it/s] 26%|██▌       | 26/100 [00:20<00:48,  1.54it/s] 27%|██▋       | 27/100 [00:20<00:47,  1.53it/s] 28%|██▊       | 28/100 [00:21<00:46,  1.53it/s] 29%|██▉       | 29/100 [00:22<00:46,  1.54it/s] 30%|███       | 30/100 [00:22<00:45,  1.54it/s] 31%|███       | 31/100 [00:23<00:44,  1.55it/s] 32%|███▏      | 32/100 [00:24<00:43,  1.55it/s] 33%|███▎      | 33/100 [00:24<00:43,  1.53it/s] 34%|███▍      | 34/100 [00:25<00:42,  1.54it/s] 35%|███▌      | 35/100 [00:26<00:42,  1.53it/s] 36%|███▌      | 36/100 [00:29<01:41,  1.59s/it] 37%|███▋      | 37/100 [00:30<01:22,  1.30s/it] 38%|███▊      | 38/100 [00:31<01:09,  1.12s/it] 39%|███▉      | 39/100 [00:31<01:00,  1.02it/s] 40%|████      | 40/100 [00:32<00:53,  1.12it/s] 41%|████      | 41/100 [00:33<00:49,  1.20it/s] 42%|████▏     | 42/100 [00:33<00:45,  1.26it/s] 43%|████▎     | 43/100 [00:34<00:42,  1.33it/s] 44%|████▍     | 44/100 [00:35<00:40,  1.38it/s] 45%|████▌     | 45/100 [00:35<00:38,  1.43it/s] 46%|████▌     | 46/100 [00:36<00:36,  1.46it/s] 47%|████▋     | 47/100 [00:37<00:36,  1.47it/s] 48%|████▊     | 48/100 [00:37<00:34,  1.49it/s] 49%|████▉     | 49/100 [00:38<00:33,  1.51it/s] 50%|█████     | 50/100 [00:39<00:33,  1.51it/s] 51%|█████     | 51/100 [00:39<00:32,  1.52it/s] 52%|█████▏    | 52/100 [00:40<00:31,  1.53it/s] 53%|█████▎    | 53/100 [00:41<00:30,  1.53it/s] 54%|█████▍    | 54/100 [00:41<00:29,  1.54it/s] 55%|█████▌    | 55/100 [00:42<00:29,  1.52it/s] 56%|█████▌    | 56/100 [00:43<00:28,  1.53it/s] 57%|█████▋    | 57/100 [00:43<00:28,  1.53it/s] 58%|█████▊    | 58/100 [00:44<00:27,  1.52it/s] 59%|█████▉    | 59/100 [00:45<00:26,  1.52it/s] 60%|██████    | 60/100 [00:45<00:26,  1.53it/s] 61%|██████    | 61/100 [00:46<00:25,  1.54it/s] 62%|██████▏   | 62/100 [00:46<00:24,  1.53it/s] 63%|██████▎   | 63/100 [00:47<00:24,  1.53it/s] 64%|██████▍   | 64/100 [00:48<00:23,  1.53it/s] 65%|██████▌   | 65/100 [00:48<00:22,  1.52it/s] 66%|██████▌   | 66/100 [00:49<00:22,  1.53it/s] 67%|██████▋   | 67/100 [00:50<00:21,  1.51it/s] 68%|██████▊   | 68/100 [00:50<00:21,  1.50it/s] 69%|██████▉   | 69/100 [00:51<00:20,  1.50it/s] 70%|███████   | 70/100 [00:52<00:20,  1.49it/s] 71%|███████   | 71/100 [00:52<00:19,  1.50it/s] 72%|███████▏  | 72/100 [00:53<00:18,  1.51it/s] 73%|███████▎  | 73/100 [00:57<00:44,  1.64s/it] 74%|███████▍  | 74/100 [00:58<00:34,  1.34s/it] 75%|███████▌  | 75/100 [00:58<00:28,  1.13s/it] 76%|███████▌  | 76/100 [00:59<00:23,  1.01it/s] 77%|███████▋  | 77/100 [01:00<00:20,  1.12it/s] 78%|███████▊  | 78/100 [01:00<00:18,  1.22it/s] 79%|███████▉  | 79/100 [01:01<00:16,  1.30it/s] 80%|████████  | 80/100 [01:02<00:14,  1.37it/s] 81%|████████  | 81/100 [01:02<00:13,  1.41it/s] 82%|████████▏ | 82/100 [01:03<00:12,  1.44it/s] 83%|████████▎ | 83/100 [01:04<00:11,  1.45it/s] 84%|████████▍ | 84/100 [01:04<00:10,  1.47it/s] 85%|████████▌ | 85/100 [01:05<00:10,  1.47it/s] 86%|████████▌ | 86/100 [01:06<00:09,  1.48it/s] 87%|████████▋ | 87/100 [01:06<00:08,  1.49it/s] 88%|████████▊ | 88/100 [01:07<00:07,  1.51it/s] 89%|████████▉ | 89/100 [01:08<00:07,  1.51it/s] 90%|█████████ | 90/100 [01:08<00:06,  1.50it/s] 91%|█████████ | 91/100 [01:09<00:05,  1.52it/s] 92%|█████████▏| 92/100 [01:10<00:05,  1.50it/s] 93%|█████████▎| 93/100 [01:10<00:04,  1.49it/s] 94%|█████████▍| 94/100 [01:11<00:04,  1.48it/s] 95%|█████████▌| 95/100 [01:12<00:03,  1.47it/s] 96%|█████████▌| 96/100 [01:12<00:02,  1.46it/s] 97%|█████████▋| 97/100 [01:13<00:02,  1.46it/s] 98%|█████████▊| 98/100 [01:14<00:01,  1.45it/s] 99%|█████████▉| 99/100 [01:14<00:00,  1.46it/s]100%|██████████| 100/100 [01:15<00:00,  1.47it/s]100%|██████████| 100/100 [01:15<00:00,  1.32it/s]
Number of users per round / total users: 10  /  100
Finished creating FL server.
=== Training starts: algorithm FedFea ===
-------------Round number:  0  -------------
selected users: [26, 86, 2, 55, 75, 93, 16, 73, 54, 95]
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 508
Local adapation with distilling: 0.001
training loss: tensor(2.4130) feature loss: tensor(0.4707)
Local adapation with distilling: 0.001
training loss: tensor(2.5097) feature loss: tensor(0.5150)
Local adapation with distilling: 0.001
training loss: tensor(2.5394) feature loss: tensor(0.5038)
Local adapation with distilling: 0.001
training loss: tensor(2.4520) feature loss: tensor(0.5167)
Local adapation with distilling: 0.001
training loss: tensor(2.4528) feature loss: tensor(0.4971)
Local adapation with distilling: 0.001
training loss: tensor(2.4652) feature loss: tensor(0.5098)
Local adapation with distilling: 0.001
training loss: tensor(2.5327) feature loss: tensor(0.5395)
Local adapation with distilling: 0.001
training loss: tensor(2.3662) feature loss: tensor(0.5163)
Local adapation with distilling: 0.001
training loss: tensor(2.6593) feature loss: tensor(0.4932)
Local adapation with distilling: 0.001
training loss: tensor(2.4435) feature loss: tensor(0.4735)
Global Model Acc on global data: 0.1086 length of data: 10000
save a model
-------------Round number:  1  -------------
selected users: [80, 84, 33, 81, 93, 17, 36, 82, 69, 65]
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
all data: 494
Local adapation with distilling: 0.000982
training loss: tensor(2.0218) feature loss: tensor(0.6758)
Local adapation with distilling: 0.000982
training loss: tensor(2.0246) feature loss: tensor(0.6771)
Local adapation with distilling: 0.000982
training loss: tensor(1.9243) feature loss: tensor(0.6954)
Local adapation with distilling: 0.000982
training loss: tensor(2.0321) feature loss: tensor(0.6607)
Local adapation with distilling: 0.000982
training loss: tensor(1.9457) feature loss: tensor(0.6198)
Local adapation with distilling: 0.000982
training loss: tensor(1.9433) feature loss: tensor(0.5838)
Local adapation with distilling: 0.000982
training loss: tensor(1.8691) feature loss: tensor(0.6675)
Local adapation with distilling: 0.000982
training loss: tensor(2.0563) feature loss: tensor(0.6598)
Local adapation with distilling: 0.000982
training loss: tensor(2.0281) feature loss: tensor(0.6589)
Local adapation with distilling: 0.000982
training loss: tensor(1.8547) feature loss: tensor(0.6531)
Global Model Acc on global data: 0.1795 length of data: 10000
save a model
-------------Round number:  2  -------------
selected users: [83, 30, 56, 24, 16, 23, 2, 27, 28, 13]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([55, 16, 32, 32]) torch.Size([55])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.000964
training loss: tensor(1.6010) feature loss: tensor(0.6747)
Local adapation with distilling: 0.000964
training loss: tensor(1.7014) feature loss: tensor(0.7060)
Local adapation with distilling: 0.000964
training loss: tensor(1.5775) feature loss: tensor(0.5934)
Local adapation with distilling: 0.000964
training loss: tensor(1.7179) feature loss: tensor(0.6626)
Local adapation with distilling: 0.000964
training loss: tensor(1.5985) feature loss: tensor(0.6005)
Local adapation with distilling: 0.000964
training loss: tensor(1.6600) feature loss: tensor(0.6712)
Local adapation with distilling: 0.000964
training loss: tensor(1.6556) feature loss: tensor(0.7254)
Local adapation with distilling: 0.000964
training loss: tensor(1.6961) feature loss: tensor(0.6434)
Local adapation with distilling: 0.000964
training loss: tensor(1.6518) feature loss: tensor(0.6682)
Local adapation with distilling: 0.000964
training loss: tensor(1.5846) feature loss: tensor(0.6937)
Global Model Acc on global data: 0.2276 length of data: 10000
save a model
-------------Round number:  3  -------------
selected users: [93, 67, 6, 64, 96, 83, 98, 42, 25, 15]
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
all data: 497
Local adapation with distilling: 0.000946
training loss: tensor(1.4418) feature loss: tensor(0.5803)
Local adapation with distilling: 0.000946
training loss: tensor(1.5676) feature loss: tensor(0.6674)
Local adapation with distilling: 0.000946
training loss: tensor(1.4907) feature loss: tensor(0.5860)
Local adapation with distilling: 0.000946
training loss: tensor(1.5126) feature loss: tensor(0.6202)
Local adapation with distilling: 0.000946
training loss: tensor(1.7124) feature loss: tensor(0.6102)
Local adapation with distilling: 0.000946
training loss: tensor(1.3604) feature loss: tensor(0.5680)
Local adapation with distilling: 0.000946
training loss: tensor(1.4464) feature loss: tensor(0.6358)
Local adapation with distilling: 0.000946
training loss: tensor(1.5324) feature loss: tensor(0.6039)
Local adapation with distilling: 0.000946
training loss: tensor(1.4653) feature loss: tensor(0.6319)
Local adapation with distilling: 0.000946
training loss: tensor(1.5476) feature loss: tensor(0.6244)
Global Model Acc on global data: 0.2108 length of data: 10000
-------------Round number:  4  -------------
selected users: [20, 10, 96, 16, 63, 24, 53, 97, 41, 47]
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([57, 16, 32, 32]) torch.Size([57])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
all data: 493
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.4890) feature loss: tensor(0.6518)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.4576) feature loss: tensor(0.7063)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.6005) feature loss: tensor(0.6678)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.2854) feature loss: tensor(0.5643)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.2927) feature loss: tensor(0.6335)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.2191) feature loss: tensor(0.5748)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.2189) feature loss: tensor(0.6228)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.2912) feature loss: tensor(0.6297)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.3247) feature loss: tensor(0.6004)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.2661) feature loss: tensor(0.5755)
Global Model Acc on global data: 0.2375 length of data: 10000
save a model
-------------Round number:  5  -------------
selected users: [66, 32, 46, 28, 74, 23, 10, 20, 17, 35]
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
all data: 501
Local adapation with distilling: 0.00091
training loss: tensor(1.2471) feature loss: tensor(0.5862)
Local adapation with distilling: 0.00091
training loss: tensor(1.3146) feature loss: tensor(0.5739)
Local adapation with distilling: 0.00091
training loss: tensor(1.3496) feature loss: tensor(0.6268)
Local adapation with distilling: 0.00091
training loss: tensor(1.5485) feature loss: tensor(0.6305)
Local adapation with distilling: 0.00091
training loss: tensor(1.3015) feature loss: tensor(0.5729)
Local adapation with distilling: 0.00091
training loss: tensor(1.3481) feature loss: tensor(0.6444)
Local adapation with distilling: 0.00091
training loss: tensor(1.3304) feature loss: tensor(0.6714)
Local adapation with distilling: 0.00091
training loss: tensor(1.3891) feature loss: tensor(0.6285)
Local adapation with distilling: 0.00091
training loss: tensor(1.2887) feature loss: tensor(0.6018)
Local adapation with distilling: 0.00091
training loss: tensor(1.3565) feature loss: tensor(0.6251)
Global Model Acc on global data: 0.3247 length of data: 10000
save a model
-------------Round number:  6  -------------
selected users: [17, 34, 0, 45, 60, 86, 20, 47, 44, 81]
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
all data: 491
Local adapation with distilling: 0.000892
training loss: tensor(1.0815) feature loss: tensor(0.5391)
Local adapation with distilling: 0.000892
training loss: tensor(1.1459) feature loss: tensor(0.5299)
Local adapation with distilling: 0.000892
training loss: tensor(1.1761) feature loss: tensor(0.6203)
Local adapation with distilling: 0.000892
training loss: tensor(1.1330) feature loss: tensor(0.5435)
Local adapation with distilling: 0.000892
training loss: tensor(1.1866) feature loss: tensor(0.6631)
Local adapation with distilling: 0.000892
training loss: tensor(1.0887) feature loss: tensor(0.4944)
Local adapation with distilling: 0.000892
training loss: tensor(1.1506) feature loss: tensor(0.6007)
Local adapation with distilling: 0.000892
training loss: tensor(1.0687) feature loss: tensor(0.5250)
Local adapation with distilling: 0.000892
training loss: tensor(1.2222) feature loss: tensor(0.6073)
Local adapation with distilling: 0.000892
training loss: tensor(1.4824) feature loss: tensor(0.6102)
Global Model Acc on global data: 0.3447 length of data: 10000
save a model
-------------Round number:  7  -------------
selected users: [37, 26, 78, 91, 49, 15, 93, 71, 86, 22]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
all data: 512
Local adapation with distilling: 0.000874
training loss: tensor(1.0914) feature loss: tensor(0.4558)
Local adapation with distilling: 0.000874
training loss: tensor(1.0716) feature loss: tensor(0.5765)
Local adapation with distilling: 0.000874
training loss: tensor(1.0870) feature loss: tensor(0.5855)
Local adapation with distilling: 0.000874
training loss: tensor(1.1414) feature loss: tensor(0.5732)
Local adapation with distilling: 0.000874
training loss: tensor(1.0825) feature loss: tensor(0.5697)
Local adapation with distilling: 0.000874
training loss: tensor(1.1696) feature loss: tensor(0.5782)
Local adapation with distilling: 0.000874
training loss: tensor(1.0801) feature loss: tensor(0.5837)
Local adapation with distilling: 0.000874
training loss: tensor(1.0808) feature loss: tensor(0.5142)
Local adapation with distilling: 0.000874
training loss: tensor(1.0051) feature loss: tensor(0.5058)
Local adapation with distilling: 0.000874
training loss: tensor(1.3041) feature loss: tensor(0.5573)
Global Model Acc on global data: 0.3538 length of data: 10000
save a model
-------------Round number:  8  -------------
selected users: [17, 23, 1, 44, 55, 99, 86, 29, 62, 33]
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
all data: 496
Local adapation with distilling: 0.000856
training loss: tensor(1.0035) feature loss: tensor(0.5005)
Local adapation with distilling: 0.000856
training loss: tensor(1.1096) feature loss: tensor(0.6188)
Local adapation with distilling: 0.000856
training loss: tensor(1.1242) feature loss: tensor(0.5497)
Local adapation with distilling: 0.000856
training loss: tensor(1.1034) feature loss: tensor(0.5770)
Local adapation with distilling: 0.000856
training loss: tensor(1.1187) feature loss: tensor(0.6041)
Local adapation with distilling: 0.000856
training loss: tensor(1.0955) feature loss: tensor(0.5729)
Local adapation with distilling: 0.000856
training loss: tensor(0.9523) feature loss: tensor(0.5067)
Local adapation with distilling: 0.000856
training loss: tensor(1.0136) feature loss: tensor(0.5067)
Local adapation with distilling: 0.000856
training loss: tensor(1.1761) feature loss: tensor(0.6462)
Local adapation with distilling: 0.000856
training loss: tensor(1.1098) feature loss: tensor(0.5682)
Global Model Acc on global data: 0.412 length of data: 10000
save a model
-------------Round number:  9  -------------
selected users: [75, 42, 46, 68, 3, 39, 23, 20, 70, 73]
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
all data: 497
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.9776) feature loss: tensor(0.5353)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(1.0582) feature loss: tensor(0.4335)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.9742) feature loss: tensor(0.4644)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(1.0091) feature loss: tensor(0.4496)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(1.0434) feature loss: tensor(0.4209)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(1.0249) feature loss: tensor(0.4585)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.9788) feature loss: tensor(0.5283)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(1.0219) feature loss: tensor(0.4877)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.9865) feature loss: tensor(0.5583)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.9974) feature loss: tensor(0.5132)
Global Model Acc on global data: 0.4237 length of data: 10000
save a model
-------------Round number:  10  -------------
selected users: [19, 14, 43, 37, 66, 3, 79, 41, 38, 68]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
all data: 506
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.9217) feature loss: tensor(0.4774)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.9489) feature loss: tensor(0.4963)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.9288) feature loss: tensor(0.5077)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.9047) feature loss: tensor(0.4149)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.8933) feature loss: tensor(0.4808)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.8552) feature loss: tensor(0.4465)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(1.0297) feature loss: tensor(0.4658)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.9792) feature loss: tensor(0.4848)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.8777) feature loss: tensor(0.4754)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.8959) feature loss: tensor(0.4848)
Global Model Acc on global data: 0.4001 length of data: 10000
-------------Round number:  11  -------------
selected users: [46, 49, 22, 58, 41, 98, 62, 29, 30, 51]
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
all data: 491
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.8640) feature loss: tensor(0.4261)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.8265) feature loss: tensor(0.5049)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(1.0237) feature loss: tensor(0.4430)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.8648) feature loss: tensor(0.4636)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.8661) feature loss: tensor(0.4165)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.9431) feature loss: tensor(0.4886)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.9509) feature loss: tensor(0.5383)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.8099) feature loss: tensor(0.4114)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.9540) feature loss: tensor(0.5001)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.9128) feature loss: tensor(0.4730)
Global Model Acc on global data: 0.4263 length of data: 10000
save a model
-------------Round number:  12  -------------
selected users: [17, 41, 92, 14, 68, 31, 89, 15, 21, 60]
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
all data: 494
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.7981) feature loss: tensor(0.4039)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.7746) feature loss: tensor(0.3938)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.9247) feature loss: tensor(0.4597)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.8041) feature loss: tensor(0.4337)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.7680) feature loss: tensor(0.4161)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.9686) feature loss: tensor(0.4023)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.7833) feature loss: tensor(0.3745)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.8963) feature loss: tensor(0.4458)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.8500) feature loss: tensor(0.4549)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.9260) feature loss: tensor(0.4744)
Global Model Acc on global data: 0.4491 length of data: 10000
save a model
-------------Round number:  13  -------------
selected users: [37, 62, 83, 14, 43, 9, 44, 31, 69, 57]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 489
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.7637) feature loss: tensor(0.3573)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.7769) feature loss: tensor(0.4699)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.7786) feature loss: tensor(0.4475)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.7045) feature loss: tensor(0.4084)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.7378) feature loss: tensor(0.4492)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.8596) feature loss: tensor(0.4495)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.8166) feature loss: tensor(0.4496)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.8428) feature loss: tensor(0.4026)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.7739) feature loss: tensor(0.4337)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.7908) feature loss: tensor(0.3897)
Global Model Acc on global data: 0.4404 length of data: 10000
-------------Round number:  14  -------------
selected users: [24, 39, 35, 44, 55, 70, 82, 40, 91, 65]
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
all data: 489
Local adapation with distilling: 0.000748
training loss: tensor(0.8862) feature loss: tensor(0.4724)
Local adapation with distilling: 0.000748
training loss: tensor(0.9497) feature loss: tensor(0.4993)
Local adapation with distilling: 0.000748
training loss: tensor(1.0004) feature loss: tensor(0.4995)
Local adapation with distilling: 0.000748
training loss: tensor(0.8905) feature loss: tensor(0.5556)
Local adapation with distilling: 0.000748
training loss: tensor(0.9472) feature loss: tensor(0.6075)
Local adapation with distilling: 0.000748
training loss: tensor(0.9100) feature loss: tensor(0.6221)
Local adapation with distilling: 0.000748
training loss: tensor(0.9515) feature loss: tensor(0.5310)
Local adapation with distilling: 0.000748
training loss: tensor(0.9585) feature loss: tensor(0.5320)
Local adapation with distilling: 0.000748
training loss: tensor(0.9615) feature loss: tensor(0.5127)
Local adapation with distilling: 0.000748
training loss: tensor(0.9251) feature loss: tensor(0.5818)
Global Model Acc on global data: 0.4671 length of data: 10000
save a model
-------------Round number:  15  -------------
selected users: [84, 36, 57, 51, 46, 78, 93, 14, 11, 59]
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
all data: 504
Local adapation with distilling: 0.00073
training loss: tensor(0.8708) feature loss: tensor(0.4609)
Local adapation with distilling: 0.00073
training loss: tensor(0.8246) feature loss: tensor(0.4331)
Local adapation with distilling: 0.00073
training loss: tensor(0.8272) feature loss: tensor(0.3790)
Local adapation with distilling: 0.00073
training loss: tensor(0.8565) feature loss: tensor(0.4044)
Local adapation with distilling: 0.00073
training loss: tensor(0.7843) feature loss: tensor(0.4414)
Local adapation with distilling: 0.00073
training loss: tensor(0.8527) feature loss: tensor(0.4844)
Local adapation with distilling: 0.00073
training loss: tensor(0.8784) feature loss: tensor(0.4745)
Local adapation with distilling: 0.00073
training loss: tensor(0.7468) feature loss: tensor(0.4552)
Local adapation with distilling: 0.00073
training loss: tensor(0.8759) feature loss: tensor(0.3936)
Local adapation with distilling: 0.00073
training loss: tensor(0.9873) feature loss: tensor(0.3925)
Global Model Acc on global data: 0.4954 length of data: 10000
save a model
-------------Round number:  16  -------------
selected users: [7, 25, 71, 42, 47, 29, 63, 88, 50, 9]
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
all data: 492
Local adapation with distilling: 0.000712
training loss: tensor(0.7990) feature loss: tensor(0.3925)
Local adapation with distilling: 0.000712
training loss: tensor(0.8027) feature loss: tensor(0.3660)
Local adapation with distilling: 0.000712
training loss: tensor(0.7747) feature loss: tensor(0.3800)
Local adapation with distilling: 0.000712
training loss: tensor(0.8506) feature loss: tensor(0.3965)
Local adapation with distilling: 0.000712
training loss: tensor(0.7333) feature loss: tensor(0.4826)
Local adapation with distilling: 0.000712
training loss: tensor(0.7381) feature loss: tensor(0.3970)
Local adapation with distilling: 0.000712
training loss: tensor(0.7567) feature loss: tensor(0.4186)
Local adapation with distilling: 0.000712
training loss: tensor(0.7748) feature loss: tensor(0.4644)
Local adapation with distilling: 0.000712
training loss: tensor(0.8234) feature loss: tensor(0.4169)
Local adapation with distilling: 0.000712
training loss: tensor(1.0049) feature loss: tensor(0.4206)
Global Model Acc on global data: 0.4822 length of data: 10000
-------------Round number:  17  -------------
selected users: [71, 28, 9, 4, 73, 34, 94, 92, 47, 37]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 492
Local adapation with distilling: 0.000694
training loss: tensor(0.6314) feature loss: tensor(0.3422)
Local adapation with distilling: 0.000694
training loss: tensor(0.8700) feature loss: tensor(0.3747)
Local adapation with distilling: 0.000694
training loss: tensor(0.8747) feature loss: tensor(0.3609)
Local adapation with distilling: 0.000694
training loss: tensor(0.7257) feature loss: tensor(0.3206)
Local adapation with distilling: 0.000694
training loss: tensor(0.7932) feature loss: tensor(0.3994)
Local adapation with distilling: 0.000694
training loss: tensor(0.7179) feature loss: tensor(0.3340)
Local adapation with distilling: 0.000694
training loss: tensor(0.7008) feature loss: tensor(0.3235)
Local adapation with distilling: 0.000694
training loss: tensor(0.7838) feature loss: tensor(0.3787)
Local adapation with distilling: 0.000694
training loss: tensor(0.6532) feature loss: tensor(0.3581)
Local adapation with distilling: 0.000694
training loss: tensor(0.6622) feature loss: tensor(0.3290)
Global Model Acc on global data: 0.4744 length of data: 10000
-------------Round number:  18  -------------
selected users: [53, 47, 43, 54, 33, 48, 0, 12, 44, 91]
random features: torch.Size([57, 16, 32, 32]) torch.Size([57])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
all data: 495
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.7826) feature loss: tensor(0.4186)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.7315) feature loss: tensor(0.4091)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.7667) feature loss: tensor(0.4273)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.8516) feature loss: tensor(0.3752)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.8076) feature loss: tensor(0.4543)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.9095) feature loss: tensor(0.4522)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.8425) feature loss: tensor(0.4443)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.9090) feature loss: tensor(0.4626)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.8141) feature loss: tensor(0.4803)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.8001) feature loss: tensor(0.4093)
Global Model Acc on global data: 0.5007 length of data: 10000
save a model
-------------Round number:  19  -------------
selected users: [85, 72, 16, 18, 2, 38, 90, 30, 83, 61]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([57, 16, 32, 32]) torch.Size([57])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 505
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.7329) feature loss: tensor(0.3995)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.7180) feature loss: tensor(0.4598)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.7968) feature loss: tensor(0.3549)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.8917) feature loss: tensor(0.4297)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.7774) feature loss: tensor(0.4076)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.7134) feature loss: tensor(0.4373)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.8315) feature loss: tensor(0.4196)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.7893) feature loss: tensor(0.4283)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.7648) feature loss: tensor(0.4462)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.7407) feature loss: tensor(0.3562)
Global Model Acc on global data: 0.5116 length of data: 10000
save a model
-------------Round number:  20  -------------
selected users: [70, 74, 2, 44, 56, 48, 12, 36, 0, 49]
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([55, 16, 32, 32]) torch.Size([55])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
all data: 489
Local adapation with distilling: 0.00064
training loss: tensor(0.6942) feature loss: tensor(0.3899)
Local adapation with distilling: 0.00064
training loss: tensor(0.6702) feature loss: tensor(0.3748)
Local adapation with distilling: 0.00064
training loss: tensor(0.6621) feature loss: tensor(0.3781)
Local adapation with distilling: 0.00064
training loss: tensor(0.6935) feature loss: tensor(0.4172)
Local adapation with distilling: 0.00064
training loss: tensor(0.6506) feature loss: tensor(0.3702)
Local adapation with distilling: 0.00064
training loss: tensor(0.7064) feature loss: tensor(0.4076)
Local adapation with distilling: 0.00064
training loss: tensor(0.6876) feature loss: tensor(0.4124)
Local adapation with distilling: 0.00064
training loss: tensor(0.6618) feature loss: tensor(0.4059)
Local adapation with distilling: 0.00064
training loss: tensor(0.6534) feature loss: tensor(0.3939)
Local adapation with distilling: 0.00064
training loss: tensor(0.6902) feature loss: tensor(0.3713)
Global Model Acc on global data: 0.5106 length of data: 10000
-------------Round number:  21  -------------
selected users: [23, 81, 85, 34, 62, 46, 42, 31, 93, 11]
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
all data: 494
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.7675) feature loss: tensor(0.4037)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(1.3099) feature loss: tensor(0.4014)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.6885) feature loss: tensor(0.3797)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.7354) feature loss: tensor(0.3674)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.7744) feature loss: tensor(0.4230)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.6696) feature loss: tensor(0.3846)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.8020) feature loss: tensor(0.3400)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.8261) feature loss: tensor(0.3704)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.7439) feature loss: tensor(0.3899)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.7209) feature loss: tensor(0.3650)
Global Model Acc on global data: 0.542 length of data: 10000
save a model
-------------Round number:  22  -------------
selected users: [2, 49, 82, 31, 37, 12, 87, 42, 99, 85]
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 479
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.5767) feature loss: tensor(0.3287)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.6099) feature loss: tensor(0.3593)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.6707) feature loss: tensor(0.3339)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.6579) feature loss: tensor(0.3192)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.6128) feature loss: tensor(0.3119)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.5996) feature loss: tensor(0.3390)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.7309) feature loss: tensor(0.3765)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.6062) feature loss: tensor(0.3049)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.6009) feature loss: tensor(0.3405)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.5838) feature loss: tensor(0.3273)
Global Model Acc on global data: 0.5479 length of data: 10000
save a model
-------------Round number:  23  -------------
selected users: [26, 80, 82, 68, 77, 37, 3, 55, 20, 17]
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
all data: 494
Local adapation with distilling: 0.000586
training loss: tensor(0.6396) feature loss: tensor(0.3860)
Local adapation with distilling: 0.000586
training loss: tensor(0.7228) feature loss: tensor(0.3781)
Local adapation with distilling: 0.000586
training loss: tensor(0.6569) feature loss: tensor(0.3363)
Local adapation with distilling: 0.000586
training loss: tensor(0.6651) feature loss: tensor(0.3512)
Local adapation with distilling: 0.000586
training loss: tensor(0.7080) feature loss: tensor(0.3354)
Local adapation with distilling: 0.000586
training loss: tensor(0.5857) feature loss: tensor(0.3001)
Local adapation with distilling: 0.000586
training loss: tensor(0.7134) feature loss: tensor(0.3269)
Local adapation with distilling: 0.000586
training loss: tensor(0.6810) feature loss: tensor(0.3907)
Local adapation with distilling: 0.000586
training loss: tensor(0.7217) feature loss: tensor(0.3744)
Local adapation with distilling: 0.000586
training loss: tensor(0.6329) feature loss: tensor(0.3093)
Global Model Acc on global data: 0.5488 length of data: 10000
save a model
-------------Round number:  24  -------------
selected users: [26, 31, 37, 86, 76, 14, 88, 48, 71, 67]
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
all data: 497
Local adapation with distilling: 0.000568
training loss: tensor(0.5238) feature loss: tensor(0.3062)
Local adapation with distilling: 0.000568
training loss: tensor(0.5755) feature loss: tensor(0.2826)
Local adapation with distilling: 0.000568
training loss: tensor(0.4849) feature loss: tensor(0.2785)
Local adapation with distilling: 0.000568
training loss: tensor(0.5763) feature loss: tensor(0.2851)
Local adapation with distilling: 0.000568
training loss: tensor(0.6744) feature loss: tensor(0.2987)
Local adapation with distilling: 0.000568
training loss: tensor(0.5696) feature loss: tensor(0.3634)
Local adapation with distilling: 0.000568
training loss: tensor(0.5540) feature loss: tensor(0.3182)
Local adapation with distilling: 0.000568
training loss: tensor(0.6111) feature loss: tensor(0.3288)
Local adapation with distilling: 0.000568
training loss: tensor(0.5557) feature loss: tensor(0.2722)
Local adapation with distilling: 0.000568
training loss: tensor(0.5970) feature loss: tensor(0.2831)
Global Model Acc on global data: 0.5308 length of data: 10000
-------------Round number:  25  -------------
selected users: [41, 29, 33, 65, 74, 6, 57, 89, 87, 98]
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
all data: 497
Local adapation with distilling: 0.00055
training loss: tensor(0.6054) feature loss: tensor(0.2780)
Local adapation with distilling: 0.00055
training loss: tensor(0.5961) feature loss: tensor(0.3027)
Local adapation with distilling: 0.00055
training loss: tensor(0.6494) feature loss: tensor(0.3572)
Local adapation with distilling: 0.00055
training loss: tensor(0.6710) feature loss: tensor(0.3180)
Local adapation with distilling: 0.00055
training loss: tensor(0.5811) feature loss: tensor(0.3179)
Local adapation with distilling: 0.00055
training loss: tensor(0.6814) feature loss: tensor(0.2747)
Local adapation with distilling: 0.00055
training loss: tensor(0.6067) feature loss: tensor(0.2697)
Local adapation with distilling: 0.00055
training loss: tensor(0.6368) feature loss: tensor(0.3208)
Local adapation with distilling: 0.00055
training loss: tensor(0.6720) feature loss: tensor(0.3218)
Local adapation with distilling: 0.00055
training loss: tensor(0.6350) feature loss: tensor(0.3170)
Global Model Acc on global data: 0.5388 length of data: 10000
-------------Round number:  26  -------------
selected users: [8, 69, 84, 41, 25, 5, 63, 95, 33, 70]
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
all data: 489
Local adapation with distilling: 0.000532
training loss: tensor(0.7156) feature loss: tensor(0.3924)
Local adapation with distilling: 0.000532
training loss: tensor(0.7206) feature loss: tensor(0.4213)
Local adapation with distilling: 0.000532
training loss: tensor(0.7181) feature loss: tensor(0.3588)
Local adapation with distilling: 0.000532
training loss: tensor(0.6362) feature loss: tensor(0.3132)
Local adapation with distilling: 0.000532
training loss: tensor(0.7293) feature loss: tensor(0.3304)
Local adapation with distilling: 0.000532
training loss: tensor(0.7609) feature loss: tensor(0.3707)
Local adapation with distilling: 0.000532
training loss: tensor(0.6927) feature loss: tensor(0.4181)
Local adapation with distilling: 0.000532
training loss: tensor(0.7334) feature loss: tensor(0.3729)
Local adapation with distilling: 0.000532
training loss: tensor(0.6740) feature loss: tensor(0.4150)
Local adapation with distilling: 0.000532
training loss: tensor(0.6912) feature loss: tensor(0.4025)
Global Model Acc on global data: 0.5585 length of data: 10000
save a model
-------------Round number:  27  -------------
selected users: [89, 68, 43, 50, 40, 95, 27, 85, 22, 44]
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
all data: 495
Local adapation with distilling: 0.000514
training loss: tensor(0.5536) feature loss: tensor(0.2673)
Local adapation with distilling: 0.000514
training loss: tensor(0.5801) feature loss: tensor(0.3457)
Local adapation with distilling: 0.000514
training loss: tensor(0.5892) feature loss: tensor(0.2909)
Local adapation with distilling: 0.000514
training loss: tensor(0.6164) feature loss: tensor(0.3035)
Local adapation with distilling: 0.000514
training loss: tensor(0.6226) feature loss: tensor(0.3095)
Local adapation with distilling: 0.000514
training loss: tensor(0.5832) feature loss: tensor(0.2742)
Local adapation with distilling: 0.000514
training loss: tensor(0.6828) feature loss: tensor(0.2603)
Local adapation with distilling: 0.000514
training loss: tensor(0.5510) feature loss: tensor(0.2950)
Local adapation with distilling: 0.000514
training loss: tensor(0.9480) feature loss: tensor(0.3005)
Local adapation with distilling: 0.000514
training loss: tensor(0.6343) feature loss: tensor(0.3399)
Global Model Acc on global data: 0.5621 length of data: 10000
save a model
-------------Round number:  28  -------------
selected users: [67, 14, 0, 86, 13, 18, 30, 36, 52, 95]
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 495
Local adapation with distilling: 0.000496
training loss: tensor(0.5550) feature loss: tensor(0.2450)
Local adapation with distilling: 0.000496
training loss: tensor(0.5484) feature loss: tensor(0.3028)
Local adapation with distilling: 0.000496
training loss: tensor(0.5778) feature loss: tensor(0.3122)
Local adapation with distilling: 0.000496
training loss: tensor(0.5404) feature loss: tensor(0.2590)
Local adapation with distilling: 0.000496
training loss: tensor(0.5772) feature loss: tensor(0.2692)
Local adapation with distilling: 0.000496
training loss: tensor(0.6541) feature loss: tensor(0.2889)
Local adapation with distilling: 0.000496
training loss: tensor(0.6140) feature loss: tensor(0.3009)
Local adapation with distilling: 0.000496
training loss: tensor(0.5417) feature loss: tensor(0.2957)
Local adapation with distilling: 0.000496
training loss: tensor(0.9487) feature loss: tensor(0.3015)
Local adapation with distilling: 0.000496
training loss: tensor(0.5257) feature loss: tensor(0.2459)
Global Model Acc on global data: 0.5773 length of data: 10000
save a model
-------------Round number:  29  -------------
selected users: [73, 8, 10, 7, 19, 71, 92, 25, 38, 12]
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
all data: 491
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.6967) feature loss: tensor(0.3702)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.6366) feature loss: tensor(0.3457)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.7083) feature loss: tensor(0.3681)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.6918) feature loss: tensor(0.3143)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.6771) feature loss: tensor(0.2781)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.5899) feature loss: tensor(0.3141)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.7381) feature loss: tensor(0.3732)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.6210) feature loss: tensor(0.3017)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.6074) feature loss: tensor(0.3468)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.6403) feature loss: tensor(0.3564)
Global Model Acc on global data: 0.5829 length of data: 10000
save a model
-------------Round number:  30  -------------
selected users: [20, 91, 34, 52, 8, 74, 21, 88, 80, 89]
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
all data: 490
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.5489) feature loss: tensor(0.2834)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.5690) feature loss: tensor(0.2518)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.5293) feature loss: tensor(0.2540)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.8791) feature loss: tensor(0.2699)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.5077) feature loss: tensor(0.2760)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.4949) feature loss: tensor(0.2603)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.5237) feature loss: tensor(0.2683)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.4781) feature loss: tensor(0.2824)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.5437) feature loss: tensor(0.2827)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.4991) feature loss: tensor(0.2481)
Global Model Acc on global data: 0.56 length of data: 10000
-------------Round number:  31  -------------
selected users: [17, 33, 76, 3, 56, 0, 37, 8, 60, 67]
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([55, 16, 32, 32]) torch.Size([55])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
all data: 504
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.5381) feature loss: tensor(0.2680)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.5398) feature loss: tensor(0.3004)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.5799) feature loss: tensor(0.2440)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.5625) feature loss: tensor(0.2458)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.5458) feature loss: tensor(0.2521)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.5449) feature loss: tensor(0.3203)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.4986) feature loss: tensor(0.2425)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.5083) feature loss: tensor(0.3108)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.5961) feature loss: tensor(0.2934)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.5210) feature loss: tensor(0.2415)
Global Model Acc on global data: 0.5583 length of data: 10000
-------------Round number:  32  -------------
selected users: [22, 39, 85, 97, 55, 33, 80, 13, 27, 96]
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
all data: 492
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(1.1347) feature loss: tensor(0.3108)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.6989) feature loss: tensor(0.3105)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.6139) feature loss: tensor(0.3266)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.6856) feature loss: tensor(0.3482)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.6965) feature loss: tensor(0.3251)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.5829) feature loss: tensor(0.3263)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.6121) feature loss: tensor(0.2970)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.6003) feature loss: tensor(0.3357)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.6718) feature loss: tensor(0.2854)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.9851) feature loss: tensor(0.3420)
Global Model Acc on global data: 0.5809 length of data: 10000
-------------Round number:  33  -------------
selected users: [56, 90, 95, 82, 60, 71, 6, 81, 2, 70]
random features: torch.Size([55, 16, 32, 32]) torch.Size([55])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
all data: 495
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.5090) feature loss: tensor(0.2841)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.5918) feature loss: tensor(0.2821)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.5039) feature loss: tensor(0.2610)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.5673) feature loss: tensor(0.3109)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.5302) feature loss: tensor(0.3125)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.4898) feature loss: tensor(0.2751)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.6286) feature loss: tensor(0.2735)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(1.0270) feature loss: tensor(0.3409)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.5337) feature loss: tensor(0.3068)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.5413) feature loss: tensor(0.3196)
Global Model Acc on global data: 0.554 length of data: 10000
-------------Round number:  34  -------------
selected users: [14, 74, 15, 4, 32, 59, 91, 10, 50, 53]
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([57, 16, 32, 32]) torch.Size([57])
all data: 501
Local adapation with distilling: 0.000388
training loss: tensor(0.6138) feature loss: tensor(0.3480)
Local adapation with distilling: 0.000388
training loss: tensor(0.6172) feature loss: tensor(0.3374)
Local adapation with distilling: 0.000388
training loss: tensor(0.7184) feature loss: tensor(0.3707)
Local adapation with distilling: 0.000388
training loss: tensor(0.7190) feature loss: tensor(0.2988)
Local adapation with distilling: 0.000388
training loss: tensor(0.7674) feature loss: tensor(0.3004)
Local adapation with distilling: 0.000388
training loss: tensor(0.7308) feature loss: tensor(0.3560)
Local adapation with distilling: 0.000388
training loss: tensor(0.6190) feature loss: tensor(0.2936)
Local adapation with distilling: 0.000388
training loss: tensor(0.7273) feature loss: tensor(0.3310)
Local adapation with distilling: 0.000388
training loss: tensor(0.6266) feature loss: tensor(0.2932)
Local adapation with distilling: 0.000388
training loss: tensor(0.6659) feature loss: tensor(0.3016)
Global Model Acc on global data: 0.5915 length of data: 10000
save a model
-------------Round number:  35  -------------
selected users: [40, 71, 98, 27, 70, 31, 10, 24, 51, 35]
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
all data: 484
Local adapation with distilling: 0.00037
training loss: tensor(0.5904) feature loss: tensor(0.3091)
Local adapation with distilling: 0.00037
training loss: tensor(0.4733) feature loss: tensor(0.2620)
Local adapation with distilling: 0.00037
training loss: tensor(0.5508) feature loss: tensor(0.2887)
Local adapation with distilling: 0.00037
training loss: tensor(0.5648) feature loss: tensor(0.2398)
Local adapation with distilling: 0.00037
training loss: tensor(0.5283) feature loss: tensor(0.3057)
Local adapation with distilling: 0.00037
training loss: tensor(0.5795) feature loss: tensor(0.2593)
Local adapation with distilling: 0.00037
training loss: tensor(0.5485) feature loss: tensor(0.2990)
Local adapation with distilling: 0.00037
training loss: tensor(0.6018) feature loss: tensor(0.2330)
Local adapation with distilling: 0.00037
training loss: tensor(0.5552) feature loss: tensor(0.2559)
Local adapation with distilling: 0.00037
training loss: tensor(0.6079) feature loss: tensor(0.2469)
Global Model Acc on global data: 0.5775 length of data: 10000
-------------Round number:  36  -------------
selected users: [59, 42, 2, 27, 28, 75, 58, 68, 52, 74]
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
all data: 493
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.5794) feature loss: tensor(0.2353)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.5953) feature loss: tensor(0.2284)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.5419) feature loss: tensor(0.2603)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.5166) feature loss: tensor(0.2233)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.8600) feature loss: tensor(0.2888)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.5727) feature loss: tensor(0.2766)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.5695) feature loss: tensor(0.2743)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.5568) feature loss: tensor(0.2830)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.6100) feature loss: tensor(0.2746)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.4847) feature loss: tensor(0.2798)
Global Model Acc on global data: 0.6033 length of data: 10000
save a model
-------------Round number:  37  -------------
selected users: [61, 49, 86, 78, 5, 91, 81, 82, 89, 18]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
all data: 507
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.5489) feature loss: tensor(0.2725)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.5615) feature loss: tensor(0.3186)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.5591) feature loss: tensor(0.2521)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.6031) feature loss: tensor(0.3214)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.6201) feature loss: tensor(0.2388)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.5224) feature loss: tensor(0.2618)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.9671) feature loss: tensor(0.2767)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.5685) feature loss: tensor(0.2558)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.5531) feature loss: tensor(0.2489)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.6194) feature loss: tensor(0.2994)
Global Model Acc on global data: 0.6057 length of data: 10000
save a model
-------------Round number:  38  -------------
selected users: [40, 73, 49, 45, 64, 16, 69, 17, 72, 66]
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([57, 16, 32, 32]) torch.Size([57])
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
all data: 512
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.5938) feature loss: tensor(0.2820)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.5876) feature loss: tensor(0.2899)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.5463) feature loss: tensor(0.2967)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.5707) feature loss: tensor(0.2409)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.7037) feature loss: tensor(0.2380)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.6007) feature loss: tensor(0.2388)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.5674) feature loss: tensor(0.2988)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.5257) feature loss: tensor(0.2585)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.5342) feature loss: tensor(0.2948)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.5752) feature loss: tensor(0.2551)
Global Model Acc on global data: 0.5924 length of data: 10000
-------------Round number:  39  -------------
selected users: [22, 53, 84, 57, 87, 58, 29, 21, 85, 79]
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([57, 16, 32, 32]) torch.Size([57])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
all data: 503
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.6183) feature loss: tensor(0.2706)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.5288) feature loss: tensor(0.2714)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.6098) feature loss: tensor(0.3179)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.6080) feature loss: tensor(0.2420)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.6003) feature loss: tensor(0.3222)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.5484) feature loss: tensor(0.2769)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.5273) feature loss: tensor(0.2434)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.6064) feature loss: tensor(0.2858)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.5560) feature loss: tensor(0.2785)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.6282) feature loss: tensor(0.2631)
Global Model Acc on global data: 0.6065 length of data: 10000
save a model
-------------Round number:  40  -------------
selected users: [79, 75, 63, 15, 38, 11, 40, 45, 39, 62]
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
all data: 498
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.4967) feature loss: tensor(0.2206)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.5094) feature loss: tensor(0.2516)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.5208) feature loss: tensor(0.2837)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.6326) feature loss: tensor(0.2628)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.4758) feature loss: tensor(0.2716)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.5377) feature loss: tensor(0.2231)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.4975) feature loss: tensor(0.2564)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.5009) feature loss: tensor(0.2390)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.5309) feature loss: tensor(0.2150)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.6145) feature loss: tensor(0.2413)
Global Model Acc on global data: 0.6022 length of data: 10000
-------------Round number:  41  -------------
selected users: [42, 94, 37, 6, 79, 32, 24, 0, 33, 93]
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
all data: 495
Local adapation with distilling: 0.000262
training loss: tensor(0.5988) feature loss: tensor(0.2432)
Local adapation with distilling: 0.000262
training loss: tensor(0.6309) feature loss: tensor(0.2269)
Local adapation with distilling: 0.000262
training loss: tensor(0.5236) feature loss: tensor(0.2343)
Local adapation with distilling: 0.000262
training loss: tensor(0.6246) feature loss: tensor(0.2602)
Local adapation with distilling: 0.000262
training loss: tensor(0.4977) feature loss: tensor(0.2543)
Local adapation with distilling: 0.000262
training loss: tensor(0.6529) feature loss: tensor(0.2467)
Local adapation with distilling: 0.000262
training loss: tensor(0.5822) feature loss: tensor(0.2326)
Local adapation with distilling: 0.000262
training loss: tensor(0.5575) feature loss: tensor(0.2781)
Local adapation with distilling: 0.000262
training loss: tensor(0.5340) feature loss: tensor(0.2695)
Local adapation with distilling: 0.000262
training loss: tensor(0.6344) feature loss: tensor(0.2997)
Global Model Acc on global data: 0.6069 length of data: 10000
save a model
-------------Round number:  42  -------------
selected users: [83, 53, 70, 45, 44, 39, 22, 80, 10, 0]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([57, 16, 32, 32]) torch.Size([57])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
all data: 497
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.5130) feature loss: tensor(0.2525)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.4193) feature loss: tensor(0.1991)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.4366) feature loss: tensor(0.2065)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.4425) feature loss: tensor(0.1994)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.5216) feature loss: tensor(0.2607)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.4795) feature loss: tensor(0.1917)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.7735) feature loss: tensor(0.2003)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.4794) feature loss: tensor(0.2513)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.4886) feature loss: tensor(0.2480)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.4500) feature loss: tensor(0.2237)
Global Model Acc on global data: 0.6014 length of data: 10000
-------------Round number:  43  -------------
selected users: [20, 2, 15, 22, 57, 91, 69, 55, 11, 79]
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
all data: 498
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.5447) feature loss: tensor(0.2312)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.4634) feature loss: tensor(0.2133)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.4681) feature loss: tensor(0.2276)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.6422) feature loss: tensor(0.2082)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.4957) feature loss: tensor(0.1936)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.4651) feature loss: tensor(0.1958)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.4614) feature loss: tensor(0.2599)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.4974) feature loss: tensor(0.2231)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.4854) feature loss: tensor(0.1961)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.4265) feature loss: tensor(0.2005)
Global Model Acc on global data: 0.6144 length of data: 10000
save a model
-------------Round number:  44  -------------
selected users: [42, 54, 27, 93, 39, 65, 7, 26, 24, 60]
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
all data: 495
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.5396) feature loss: tensor(0.2297)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.6610) feature loss: tensor(0.2231)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.5611) feature loss: tensor(0.2113)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.5851) feature loss: tensor(0.2920)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.4753) feature loss: tensor(0.2432)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.5346) feature loss: tensor(0.2784)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.5965) feature loss: tensor(0.2448)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.5198) feature loss: tensor(0.2742)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.5280) feature loss: tensor(0.2134)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.5380) feature loss: tensor(0.2606)
Global Model Acc on global data: 0.6217 length of data: 10000
save a model
-------------Round number:  45  -------------
selected users: [0, 1, 62, 76, 37, 99, 78, 38, 2, 84]
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
all data: 498
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.4928) feature loss: tensor(0.2821)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.5619) feature loss: tensor(0.2416)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.5697) feature loss: tensor(0.2307)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.5868) feature loss: tensor(0.2072)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.4783) feature loss: tensor(0.2058)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.5517) feature loss: tensor(0.2469)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.5770) feature loss: tensor(0.2766)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.4942) feature loss: tensor(0.2703)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.5001) feature loss: tensor(0.2577)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.5373) feature loss: tensor(0.2775)
Global Model Acc on global data: 0.6248 length of data: 10000
save a model
-------------Round number:  46  -------------
selected users: [71, 33, 37, 10, 44, 34, 24, 98, 73, 95]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 487
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.3679) feature loss: tensor(0.1611)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.3956) feature loss: tensor(0.1839)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.3548) feature loss: tensor(0.1546)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.4015) feature loss: tensor(0.1895)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.4480) feature loss: tensor(0.1974)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.4630) feature loss: tensor(0.1744)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.3870) feature loss: tensor(0.1675)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.4367) feature loss: tensor(0.2245)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.4851) feature loss: tensor(0.2164)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.4136) feature loss: tensor(0.1650)
Global Model Acc on global data: 0.6285 length of data: 10000
save a model
-------------Round number:  47  -------------
selected users: [17, 90, 94, 86, 63, 5, 38, 14, 40, 47]
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
all data: 499
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.4285) feature loss: tensor(0.1741)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.5145) feature loss: tensor(0.1722)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.4725) feature loss: tensor(0.1596)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.4330) feature loss: tensor(0.1716)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.4618) feature loss: tensor(0.1978)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.5073) feature loss: tensor(0.1618)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.4051) feature loss: tensor(0.2185)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.4447) feature loss: tensor(0.2150)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.4197) feature loss: tensor(0.1916)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.4663) feature loss: tensor(0.2247)
Global Model Acc on global data: 0.623 length of data: 10000
-------------Round number:  48  -------------
selected users: [93, 5, 71, 9, 11, 79, 69, 8, 59, 63]
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 504
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.4706) feature loss: tensor(0.1968)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.4669) feature loss: tensor(0.1595)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.3572) feature loss: tensor(0.1709)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.7239) feature loss: tensor(0.1792)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.4246) feature loss: tensor(0.1646)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.3818) feature loss: tensor(0.1705)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.4352) feature loss: tensor(0.2004)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.4428) feature loss: tensor(0.1859)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.6645) feature loss: tensor(0.1612)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.4181) feature loss: tensor(0.1970)
Global Model Acc on global data: 0.6158 length of data: 10000
-------------Round number:  49  -------------
selected users: [76, 25, 28, 75, 81, 47, 41, 22, 29, 1]
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
all data: 503
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.5677) feature loss: tensor(0.1807)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.4908) feature loss: tensor(0.2005)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.6934) feature loss: tensor(0.2360)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.5192) feature loss: tensor(0.2351)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(1.0005) feature loss: tensor(0.2263)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.5092) feature loss: tensor(0.2336)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.4885) feature loss: tensor(0.1977)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.7315) feature loss: tensor(0.1905)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.4942) feature loss: tensor(0.2028)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.4716) feature loss: tensor(0.2315)
Global Model Acc on global data: 0.6204 length of data: 10000
-------------Round number:  50  -------------
selected users: [80, 79, 25, 15, 39, 40, 53, 17, 57, 50]
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([57, 16, 32, 32]) torch.Size([57])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
all data: 504
Local adapation with distilling: 0.0001
training loss: tensor(0.5169) feature loss: tensor(0.2049)
Local adapation with distilling: 0.0001
training loss: tensor(0.4018) feature loss: tensor(0.1651)
Local adapation with distilling: 0.0001
training loss: tensor(0.4317) feature loss: tensor(0.1612)
Local adapation with distilling: 0.0001
training loss: tensor(0.5073) feature loss: tensor(0.1897)
Local adapation with distilling: 0.0001
training loss: tensor(0.4185) feature loss: tensor(0.1686)
Local adapation with distilling: 0.0001
training loss: tensor(0.4773) feature loss: tensor(0.1941)
Local adapation with distilling: 0.0001
training loss: tensor(0.4194) feature loss: tensor(0.1638)
Local adapation with distilling: 0.0001
training loss: tensor(0.4098) feature loss: tensor(0.1604)
Local adapation with distilling: 0.0001
training loss: tensor(0.4524) feature loss: tensor(0.1502)
Local adapation with distilling: 0.0001
training loss: tensor(0.5664) feature loss: tensor(0.1841)
Global Model Acc on global data: 0.6243 length of data: 10000
-------------Round number:  51  -------------
selected users: [71, 43, 11, 83, 78, 19, 80, 4, 79, 75]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
all data: 498
Local adapation with distilling: 0.0001
training loss: tensor(0.4248) feature loss: tensor(0.1798)
Local adapation with distilling: 0.0001
training loss: tensor(0.5254) feature loss: tensor(0.2068)
Local adapation with distilling: 0.0001
training loss: tensor(0.4729) feature loss: tensor(0.1699)
Local adapation with distilling: 0.0001
training loss: tensor(0.5929) feature loss: tensor(0.2419)
Local adapation with distilling: 0.0001
training loss: tensor(0.5350) feature loss: tensor(0.2203)
Local adapation with distilling: 0.0001
training loss: tensor(0.5764) feature loss: tensor(0.1887)
Local adapation with distilling: 0.0001
training loss: tensor(0.4809) feature loss: tensor(0.1996)
Local adapation with distilling: 0.0001
training loss: tensor(0.5812) feature loss: tensor(0.1754)
Local adapation with distilling: 0.0001
training loss: tensor(0.4153) feature loss: tensor(0.1947)
Local adapation with distilling: 0.0001
training loss: tensor(0.4872) feature loss: tensor(0.1877)
Global Model Acc on global data: 0.6216 length of data: 10000
-------------Round number:  52  -------------
selected users: [82, 8, 44, 19, 2, 73, 37, 89, 67, 18]
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
all data: 491
Local adapation with distilling: 0.0001
training loss: tensor(0.5635) feature loss: tensor(0.2081)
Local adapation with distilling: 0.0001
training loss: tensor(0.4938) feature loss: tensor(0.2231)
Local adapation with distilling: 0.0001
training loss: tensor(0.5513) feature loss: tensor(0.2115)
Local adapation with distilling: 0.0001
training loss: tensor(0.4950) feature loss: tensor(0.1843)
Local adapation with distilling: 0.0001
training loss: tensor(0.4559) feature loss: tensor(0.2205)
Local adapation with distilling: 0.0001
training loss: tensor(0.5134) feature loss: tensor(0.2136)
Local adapation with distilling: 0.0001
training loss: tensor(0.4176) feature loss: tensor(0.1792)
Local adapation with distilling: 0.0001
training loss: tensor(0.4451) feature loss: tensor(0.1866)
Local adapation with distilling: 0.0001
training loss: tensor(0.5435) feature loss: tensor(0.1954)
Local adapation with distilling: 0.0001
training loss: tensor(0.6168) feature loss: tensor(0.2355)
Global Model Acc on global data: 0.6289 length of data: 10000
save a model
-------------Round number:  53  -------------
selected users: [19, 78, 64, 3, 71, 32, 68, 42, 55, 97]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
all data: 496
Local adapation with distilling: 0.0001
training loss: tensor(0.5321) feature loss: tensor(0.2023)
Local adapation with distilling: 0.0001
training loss: tensor(0.5530) feature loss: tensor(0.2645)
Local adapation with distilling: 0.0001
training loss: tensor(0.7194) feature loss: tensor(0.2226)
Local adapation with distilling: 0.0001
training loss: tensor(0.6435) feature loss: tensor(0.2118)
Local adapation with distilling: 0.0001
training loss: tensor(0.4592) feature loss: tensor(0.2170)
Local adapation with distilling: 0.0001
training loss: tensor(0.7286) feature loss: tensor(0.2416)
Local adapation with distilling: 0.0001
training loss: tensor(0.6834) feature loss: tensor(0.2638)
Local adapation with distilling: 0.0001
training loss: tensor(0.5606) feature loss: tensor(0.2389)
Local adapation with distilling: 0.0001
training loss: tensor(0.5644) feature loss: tensor(0.2624)
Local adapation with distilling: 0.0001
training loss: tensor(0.6780) feature loss: tensor(0.2627)
Global Model Acc on global data: 0.628 length of data: 10000
-------------Round number:  54  -------------
selected users: [36, 70, 48, 94, 81, 46, 38, 29, 34, 22]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
all data: 503
Local adapation with distilling: 0.0001
training loss: tensor(0.4210) feature loss: tensor(0.1843)
Local adapation with distilling: 0.0001
training loss: tensor(0.3880) feature loss: tensor(0.1743)
Local adapation with distilling: 0.0001
training loss: tensor(0.5571) feature loss: tensor(0.1752)
Local adapation with distilling: 0.0001
training loss: tensor(0.4004) feature loss: tensor(0.1553)
Local adapation with distilling: 0.0001
training loss: tensor(0.8709) feature loss: tensor(0.1729)
Local adapation with distilling: 0.0001
training loss: tensor(0.4711) feature loss: tensor(0.1583)
Local adapation with distilling: 0.0001
training loss: tensor(0.3711) feature loss: tensor(0.1884)
Local adapation with distilling: 0.0001
training loss: tensor(0.3602) feature loss: tensor(0.1575)
Local adapation with distilling: 0.0001
training loss: tensor(0.4067) feature loss: tensor(0.1582)
Local adapation with distilling: 0.0001
training loss: tensor(0.6088) feature loss: tensor(0.1561)
Global Model Acc on global data: 0.6266 length of data: 10000
-------------Round number:  55  -------------
selected users: [28, 92, 98, 95, 84, 34, 38, 76, 17, 78]
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
all data: 502
Local adapation with distilling: 0.0001
training loss: tensor(0.5009) feature loss: tensor(0.1639)
Local adapation with distilling: 0.0001
training loss: tensor(0.6041) feature loss: tensor(0.1556)
Local adapation with distilling: 0.0001
training loss: tensor(0.4122) feature loss: tensor(0.1729)
Local adapation with distilling: 0.0001
training loss: tensor(0.3810) feature loss: tensor(0.1470)
Local adapation with distilling: 0.0001
training loss: tensor(0.4333) feature loss: tensor(0.1488)
Local adapation with distilling: 0.0001
training loss: tensor(0.3717) feature loss: tensor(0.1445)
Local adapation with distilling: 0.0001
training loss: tensor(0.3415) feature loss: tensor(0.1776)
Local adapation with distilling: 0.0001
training loss: tensor(0.4231) feature loss: tensor(0.1416)
Local adapation with distilling: 0.0001
training loss: tensor(0.3489) feature loss: tensor(0.1449)
Local adapation with distilling: 0.0001
training loss: tensor(0.4051) feature loss: tensor(0.1709)
Global Model Acc on global data: 0.6246 length of data: 10000
-------------Round number:  56  -------------
selected users: [92, 79, 23, 68, 52, 38, 73, 9, 59, 27]
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
all data: 502
Local adapation with distilling: 0.0001
training loss: tensor(0.5797) feature loss: tensor(0.2031)
Local adapation with distilling: 0.0001
training loss: tensor(0.4200) feature loss: tensor(0.1830)
Local adapation with distilling: 0.0001
training loss: tensor(0.6639) feature loss: tensor(0.2191)
Local adapation with distilling: 0.0001
training loss: tensor(0.4981) feature loss: tensor(0.1957)
Local adapation with distilling: 0.0001
training loss: tensor(0.8642) feature loss: tensor(0.1996)
Local adapation with distilling: 0.0001
training loss: tensor(0.3735) feature loss: tensor(0.2017)
Local adapation with distilling: 0.0001
training loss: tensor(0.4914) feature loss: tensor(0.2134)
Local adapation with distilling: 0.0001
training loss: tensor(0.9500) feature loss: tensor(0.2020)
Local adapation with distilling: 0.0001
training loss: tensor(0.5244) feature loss: tensor(0.1893)
Local adapation with distilling: 0.0001
training loss: tensor(0.4702) feature loss: tensor(0.1684)
Global Model Acc on global data: 0.6221 length of data: 10000
-------------Round number:  57  -------------
selected users: [52, 17, 41, 3, 8, 98, 59, 20, 67, 7]
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
all data: 492
Local adapation with distilling: 0.0001
training loss: tensor(0.5421) feature loss: tensor(0.1781)
Local adapation with distilling: 0.0001
training loss: tensor(0.3490) feature loss: tensor(0.1787)
Local adapation with distilling: 0.0001
training loss: tensor(0.3714) feature loss: tensor(0.1695)
Local adapation with distilling: 0.0001
training loss: tensor(0.4475) feature loss: tensor(0.1679)
Local adapation with distilling: 0.0001
training loss: tensor(0.3779) feature loss: tensor(0.2152)
Local adapation with distilling: 0.0001
training loss: tensor(0.3754) feature loss: tensor(0.2085)
Local adapation with distilling: 0.0001
training loss: tensor(0.3962) feature loss: tensor(0.1866)
Local adapation with distilling: 0.0001
training loss: tensor(0.4855) feature loss: tensor(0.1988)
Local adapation with distilling: 0.0001
training loss: tensor(0.3975) feature loss: tensor(0.1826)
Local adapation with distilling: 0.0001
training loss: tensor(0.4805) feature loss: tensor(0.1895)
Global Model Acc on global data: 0.6244 length of data: 10000
-------------Round number:  58  -------------
selected users: [43, 58, 8, 31, 70, 45, 69, 95, 50, 4]
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
all data: 490
Local adapation with distilling: 0.0001
training loss: tensor(0.4592) feature loss: tensor(0.2063)
Local adapation with distilling: 0.0001
training loss: tensor(0.4394) feature loss: tensor(0.1968)
Local adapation with distilling: 0.0001
training loss: tensor(0.3645) feature loss: tensor(0.2141)
Local adapation with distilling: 0.0001
training loss: tensor(0.4595) feature loss: tensor(0.1714)
Local adapation with distilling: 0.0001
training loss: tensor(0.3929) feature loss: tensor(0.1890)
Local adapation with distilling: 0.0001
training loss: tensor(0.3889) feature loss: tensor(0.1772)
Local adapation with distilling: 0.0001
training loss: tensor(0.4593) feature loss: tensor(0.2121)
Local adapation with distilling: 0.0001
training loss: tensor(0.3687) feature loss: tensor(0.1766)
Local adapation with distilling: 0.0001
training loss: tensor(0.4546) feature loss: tensor(0.1918)
Local adapation with distilling: 0.0001
training loss: tensor(0.5125) feature loss: tensor(0.1672)
Global Model Acc on global data: 0.6331 length of data: 10000
save a model
-------------Round number:  59  -------------
selected users: [38, 46, 24, 87, 30, 85, 16, 96, 18, 99]
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
all data: 497
Local adapation with distilling: 0.0001
training loss: tensor(0.3848) feature loss: tensor(0.1943)
Local adapation with distilling: 0.0001
training loss: tensor(0.4245) feature loss: tensor(0.1696)
Local adapation with distilling: 0.0001
training loss: tensor(0.4331) feature loss: tensor(0.1734)
Local adapation with distilling: 0.0001
training loss: tensor(0.5086) feature loss: tensor(0.1798)
Local adapation with distilling: 0.0001
training loss: tensor(0.5792) feature loss: tensor(0.1998)
Local adapation with distilling: 0.0001
training loss: tensor(0.4692) feature loss: tensor(0.1885)
Local adapation with distilling: 0.0001
training loss: tensor(0.5149) feature loss: tensor(0.1613)
Local adapation with distilling: 0.0001
training loss: tensor(0.7607) feature loss: tensor(0.1777)
Local adapation with distilling: 0.0001
training loss: tensor(0.5150) feature loss: tensor(0.1878)
Local adapation with distilling: 0.0001
training loss: tensor(0.4922) feature loss: tensor(0.1790)
Global Model Acc on global data: 0.6341 length of data: 10000
save a model
-------------Round number:  60  -------------
selected users: [88, 4, 79, 14, 55, 3, 19, 28, 94, 25]
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 497
Local adapation with distilling: 0.0001
training loss: tensor(0.4375) feature loss: tensor(0.2224)
Local adapation with distilling: 0.0001
training loss: tensor(0.4313) feature loss: tensor(0.2062)
Local adapation with distilling: 0.0001
training loss: tensor(0.3669) feature loss: tensor(0.1977)
Local adapation with distilling: 0.0001
training loss: tensor(0.4589) feature loss: tensor(0.2293)
Local adapation with distilling: 0.0001
training loss: tensor(0.4497) feature loss: tensor(0.1777)
Local adapation with distilling: 0.0001
training loss: tensor(0.4219) feature loss: tensor(0.1881)
Local adapation with distilling: 0.0001
training loss: tensor(0.4248) feature loss: tensor(0.1850)
Local adapation with distilling: 0.0001
training loss: tensor(0.7405) feature loss: tensor(0.2193)
Local adapation with distilling: 0.0001
training loss: tensor(0.4203) feature loss: tensor(0.1796)
Local adapation with distilling: 0.0001
training loss: tensor(0.4305) feature loss: tensor(0.1904)
Global Model Acc on global data: 0.6348 length of data: 10000
save a model
-------------Round number:  61  -------------
selected users: [83, 1, 55, 9, 31, 28, 96, 29, 86, 63]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 508
Local adapation with distilling: 0.0001
training loss: tensor(0.5168) feature loss: tensor(0.2209)
Local adapation with distilling: 0.0001
training loss: tensor(0.4154) feature loss: tensor(0.1812)
Local adapation with distilling: 0.0001
training loss: tensor(0.4112) feature loss: tensor(0.2082)
Local adapation with distilling: 0.0001
training loss: tensor(0.7062) feature loss: tensor(0.1968)
Local adapation with distilling: 0.0001
training loss: tensor(0.4316) feature loss: tensor(0.1732)
Local adapation with distilling: 0.0001
training loss: tensor(0.6640) feature loss: tensor(0.2049)
Local adapation with distilling: 0.0001
training loss: tensor(0.7045) feature loss: tensor(0.1978)
Local adapation with distilling: 0.0001
training loss: tensor(0.3776) feature loss: tensor(0.1652)
Local adapation with distilling: 0.0001
training loss: tensor(0.3979) feature loss: tensor(0.1772)
Local adapation with distilling: 0.0001
training loss: tensor(0.4155) feature loss: tensor(0.2011)
Global Model Acc on global data: 0.6281 length of data: 10000
-------------Round number:  62  -------------
selected users: [76, 48, 62, 80, 29, 99, 60, 89, 39, 69]
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
all data: 496
Local adapation with distilling: 0.0001
training loss: tensor(0.4295) feature loss: tensor(0.1756)
Local adapation with distilling: 0.0001
training loss: tensor(0.4852) feature loss: tensor(0.2020)
Local adapation with distilling: 0.0001
training loss: tensor(0.4985) feature loss: tensor(0.1966)
Local adapation with distilling: 0.0001
training loss: tensor(0.4218) feature loss: tensor(0.1904)
Local adapation with distilling: 0.0001
training loss: tensor(0.3407) feature loss: tensor(0.1733)
Local adapation with distilling: 0.0001
training loss: tensor(0.4324) feature loss: tensor(0.1869)
Local adapation with distilling: 0.0001
training loss: tensor(0.4347) feature loss: tensor(0.1925)
Local adapation with distilling: 0.0001
training loss: tensor(0.3694) feature loss: tensor(0.1653)
Local adapation with distilling: 0.0001
training loss: tensor(0.4396) feature loss: tensor(0.1776)
Local adapation with distilling: 0.0001
training loss: tensor(0.3996) feature loss: tensor(0.2033)
Global Model Acc on global data: 0.6262 length of data: 10000
-------------Round number:  63  -------------
selected users: [64, 59, 63, 2, 80, 20, 18, 48, 72, 51]
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([57, 16, 32, 32]) torch.Size([57])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
all data: 494
Local adapation with distilling: 0.0001
training loss: tensor(0.5934) feature loss: tensor(0.1768)
Local adapation with distilling: 0.0001
training loss: tensor(0.3972) feature loss: tensor(0.1882)
Local adapation with distilling: 0.0001
training loss: tensor(0.4028) feature loss: tensor(0.1970)
Local adapation with distilling: 0.0001
training loss: tensor(0.4046) feature loss: tensor(0.1912)
Local adapation with distilling: 0.0001
training loss: tensor(0.4137) feature loss: tensor(0.1796)
Local adapation with distilling: 0.0001
training loss: tensor(0.4629) feature loss: tensor(0.1830)
Local adapation with distilling: 0.0001
training loss: tensor(0.4618) feature loss: tensor(0.1886)
Local adapation with distilling: 0.0001
training loss: tensor(0.4507) feature loss: tensor(0.1863)
Local adapation with distilling: 0.0001
training loss: tensor(0.4946) feature loss: tensor(0.2216)
Local adapation with distilling: 0.0001
training loss: tensor(0.5056) feature loss: tensor(0.1755)
Global Model Acc on global data: 0.6282 length of data: 10000
-------------Round number:  64  -------------
selected users: [17, 22, 60, 92, 23, 19, 71, 94, 40, 49]
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
all data: 492
Local adapation with distilling: 0.0001
training loss: tensor(0.3835) feature loss: tensor(0.1698)
Local adapation with distilling: 0.0001
training loss: tensor(0.5982) feature loss: tensor(0.1735)
Local adapation with distilling: 0.0001
training loss: tensor(0.4121) feature loss: tensor(0.2038)
Local adapation with distilling: 0.0001
training loss: tensor(0.5319) feature loss: tensor(0.1982)
Local adapation with distilling: 0.0001
training loss: tensor(0.5324) feature loss: tensor(0.1846)
Local adapation with distilling: 0.0001
training loss: tensor(0.4265) feature loss: tensor(0.1756)
Local adapation with distilling: 0.0001
training loss: tensor(0.3707) feature loss: tensor(0.1684)
Local adapation with distilling: 0.0001
training loss: tensor(0.4362) feature loss: tensor(0.1726)
Local adapation with distilling: 0.0001
training loss: tensor(0.4497) feature loss: tensor(0.2134)
Local adapation with distilling: 0.0001
training loss: tensor(0.4444) feature loss: tensor(0.2029)
Global Model Acc on global data: 0.6348 length of data: 10000
-------------Round number:  65  -------------
selected users: [37, 81, 39, 61, 76, 90, 27, 86, 28, 69]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
all data: 503
Local adapation with distilling: 0.0001
training loss: tensor(0.3800) feature loss: tensor(0.1796)
Local adapation with distilling: 0.0001
training loss: tensor(0.8210) feature loss: tensor(0.2017)
Local adapation with distilling: 0.0001
training loss: tensor(0.3769) feature loss: tensor(0.1871)
Local adapation with distilling: 0.0001
training loss: tensor(0.4626) feature loss: tensor(0.1742)
Local adapation with distilling: 0.0001
training loss: tensor(0.3963) feature loss: tensor(0.1911)
Local adapation with distilling: 0.0001
training loss: tensor(0.4899) feature loss: tensor(0.2035)
Local adapation with distilling: 0.0001
training loss: tensor(0.4346) feature loss: tensor(0.1786)
Local adapation with distilling: 0.0001
training loss: tensor(0.3814) feature loss: tensor(0.1815)
Local adapation with distilling: 0.0001
training loss: tensor(0.6531) feature loss: tensor(0.2214)
Local adapation with distilling: 0.0001
training loss: tensor(0.3993) feature loss: tensor(0.2193)
Global Model Acc on global data: 0.6384 length of data: 10000
save a model
-------------Round number:  66  -------------
selected users: [8, 93, 4, 5, 52, 41, 0, 73, 88, 68]
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
all data: 498
Local adapation with distilling: 0.0001
training loss: tensor(0.3659) feature loss: tensor(0.1906)
Local adapation with distilling: 0.0001
training loss: tensor(0.4597) feature loss: tensor(0.1839)
Local adapation with distilling: 0.0001
training loss: tensor(0.3908) feature loss: tensor(0.1548)
Local adapation with distilling: 0.0001
training loss: tensor(0.4405) feature loss: tensor(0.1675)
Local adapation with distilling: 0.0001
training loss: tensor(0.7802) feature loss: tensor(0.1686)
Local adapation with distilling: 0.0001
training loss: tensor(0.3855) feature loss: tensor(0.1655)
Local adapation with distilling: 0.0001
training loss: tensor(0.3886) feature loss: tensor(0.1897)
Local adapation with distilling: 0.0001
training loss: tensor(0.4020) feature loss: tensor(0.1918)
Local adapation with distilling: 0.0001
training loss: tensor(0.3986) feature loss: tensor(0.1856)
Local adapation with distilling: 0.0001
training loss: tensor(0.4494) feature loss: tensor(0.1827)
Global Model Acc on global data: 0.6345 length of data: 10000
-------------Round number:  67  -------------
selected users: [17, 24, 64, 93, 97, 29, 3, 70, 82, 11]
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
all data: 504
Local adapation with distilling: 0.0001
training loss: tensor(0.2962) feature loss: tensor(0.1684)
Local adapation with distilling: 0.0001
training loss: tensor(0.3480) feature loss: tensor(0.1764)
Local adapation with distilling: 0.0001
training loss: tensor(0.4448) feature loss: tensor(0.1603)
Local adapation with distilling: 0.0001
training loss: tensor(0.3691) feature loss: tensor(0.1957)
Local adapation with distilling: 0.0001
training loss: tensor(0.4149) feature loss: tensor(0.2068)
Local adapation with distilling: 0.0001
training loss: tensor(0.3134) feature loss: tensor(0.1843)
Local adapation with distilling: 0.0001
training loss: tensor(0.3668) feature loss: tensor(0.1691)
Local adapation with distilling: 0.0001
training loss: tensor(0.3538) feature loss: tensor(0.2060)
Local adapation with distilling: 0.0001
training loss: tensor(0.4099) feature loss: tensor(0.1860)
Local adapation with distilling: 0.0001
training loss: tensor(0.3561) feature loss: tensor(0.1714)
Global Model Acc on global data: 0.6369 length of data: 10000
-------------Round number:  68  -------------
selected users: [29, 30, 16, 5, 38, 71, 76, 94, 99, 95]
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 508
Local adapation with distilling: 0.0001
training loss: tensor(0.3276) feature loss: tensor(0.1910)
Local adapation with distilling: 0.0001
training loss: tensor(0.4926) feature loss: tensor(0.2089)
Local adapation with distilling: 0.0001
training loss: tensor(0.4226) feature loss: tensor(0.1692)
Local adapation with distilling: 0.0001
training loss: tensor(0.4012) feature loss: tensor(0.1609)
Local adapation with distilling: 0.0001
training loss: tensor(0.3224) feature loss: tensor(0.1967)
Local adapation with distilling: 0.0001
training loss: tensor(0.3202) feature loss: tensor(0.1651)
Local adapation with distilling: 0.0001
training loss: tensor(0.3563) feature loss: tensor(0.1840)
Local adapation with distilling: 0.0001
training loss: tensor(0.3471) feature loss: tensor(0.1648)
Local adapation with distilling: 0.0001
training loss: tensor(0.4245) feature loss: tensor(0.1918)
Local adapation with distilling: 0.0001
training loss: tensor(0.3537) feature loss: tensor(0.1805)
Global Model Acc on global data: 0.6357 length of data: 10000
-------------Round number:  69  -------------
selected users: [72, 31, 13, 83, 33, 8, 26, 89, 64, 97]
random features: torch.Size([57, 16, 32, 32]) torch.Size([57])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
all data: 503
Local adapation with distilling: 0.0001
training loss: tensor(0.4129) feature loss: tensor(0.1836)
Local adapation with distilling: 0.0001
training loss: tensor(0.4342) feature loss: tensor(0.1582)
Local adapation with distilling: 0.0001
training loss: tensor(0.4429) feature loss: tensor(0.1823)
Local adapation with distilling: 0.0001
training loss: tensor(0.4345) feature loss: tensor(0.1839)
Local adapation with distilling: 0.0001
training loss: tensor(0.3919) feature loss: tensor(0.1764)
Local adapation with distilling: 0.0001
training loss: tensor(0.3613) feature loss: tensor(0.1814)
Local adapation with distilling: 0.0001
training loss: tensor(0.4238) feature loss: tensor(0.1790)
Local adapation with distilling: 0.0001
training loss: tensor(0.3593) feature loss: tensor(0.1598)
Local adapation with distilling: 0.0001
training loss: tensor(0.4253) feature loss: tensor(0.1534)
Local adapation with distilling: 0.0001
training loss: tensor(0.4294) feature loss: tensor(0.1794)
Global Model Acc on global data: 0.6302 length of data: 10000
-------------Round number:  70  -------------
selected users: [81, 43, 88, 32, 50, 71, 73, 55, 42, 2]
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
all data: 491
Local adapation with distilling: 0.0001
training loss: tensor(0.8631) feature loss: tensor(0.2378)
Local adapation with distilling: 0.0001
training loss: tensor(0.4676) feature loss: tensor(0.2253)
Local adapation with distilling: 0.0001
training loss: tensor(0.4279) feature loss: tensor(0.2379)
Local adapation with distilling: 0.0001
training loss: tensor(0.5613) feature loss: tensor(0.1943)
Local adapation with distilling: 0.0001
training loss: tensor(0.4713) feature loss: tensor(0.2169)
Local adapation with distilling: 0.0001
training loss: tensor(0.3656) feature loss: tensor(0.1895)
Local adapation with distilling: 0.0001
training loss: tensor(0.4283) feature loss: tensor(0.2414)
Local adapation with distilling: 0.0001
training loss: tensor(0.4131) feature loss: tensor(0.2306)
Local adapation with distilling: 0.0001
training loss: tensor(0.4716) feature loss: tensor(0.1844)
Local adapation with distilling: 0.0001
training loss: tensor(0.4056) feature loss: tensor(0.2294)
Global Model Acc on global data: 0.6343 length of data: 10000
-------------Round number:  71  -------------
selected users: [41, 84, 98, 42, 75, 25, 60, 19, 52, 29]
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
all data: 491
Local adapation with distilling: 0.0001
training loss: tensor(0.3825) feature loss: tensor(0.1842)
Local adapation with distilling: 0.0001
training loss: tensor(0.4534) feature loss: tensor(0.2140)
Local adapation with distilling: 0.0001
training loss: tensor(0.4023) feature loss: tensor(0.2090)
Local adapation with distilling: 0.0001
training loss: tensor(0.4124) feature loss: tensor(0.1687)
Local adapation with distilling: 0.0001
training loss: tensor(0.4430) feature loss: tensor(0.2226)
Local adapation with distilling: 0.0001
training loss: tensor(0.4388) feature loss: tensor(0.1888)
Local adapation with distilling: 0.0001
training loss: tensor(0.3961) feature loss: tensor(0.1983)
Local adapation with distilling: 0.0001
training loss: tensor(0.3987) feature loss: tensor(0.1992)
Local adapation with distilling: 0.0001
training loss: tensor(0.6942) feature loss: tensor(0.2049)
Local adapation with distilling: 0.0001
training loss: tensor(0.3435) feature loss: tensor(0.1741)
Global Model Acc on global data: 0.6395 length of data: 10000
save a model
-------------Round number:  72  -------------
selected users: [76, 82, 43, 16, 84, 95, 78, 91, 30, 22]
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
all data: 501
Local adapation with distilling: 0.0001
training loss: tensor(0.3319) feature loss: tensor(0.1614)
Local adapation with distilling: 0.0001
training loss: tensor(0.3899) feature loss: tensor(0.1897)
Local adapation with distilling: 0.0001
training loss: tensor(0.3616) feature loss: tensor(0.1821)
Local adapation with distilling: 0.0001
training loss: tensor(0.3773) feature loss: tensor(0.1661)
Local adapation with distilling: 0.0001
training loss: tensor(0.3873) feature loss: tensor(0.1798)
Local adapation with distilling: 0.0001
training loss: tensor(0.3404) feature loss: tensor(0.1713)
Local adapation with distilling: 0.0001
training loss: tensor(0.3940) feature loss: tensor(0.1838)
Local adapation with distilling: 0.0001
training loss: tensor(0.3859) feature loss: tensor(0.1597)
Local adapation with distilling: 0.0001
training loss: tensor(0.4314) feature loss: tensor(0.1890)
Local adapation with distilling: 0.0001
training loss: tensor(0.6908) feature loss: tensor(0.1582)
Global Model Acc on global data: 0.6328 length of data: 10000
-------------Round number:  73  -------------
selected users: [49, 14, 34, 70, 90, 35, 68, 76, 80, 9]
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
all data: 496
Local adapation with distilling: 0.0001
training loss: tensor(0.4103) feature loss: tensor(0.2030)
Local adapation with distilling: 0.0001
training loss: tensor(0.3811) feature loss: tensor(0.1875)
Local adapation with distilling: 0.0001
training loss: tensor(0.3766) feature loss: tensor(0.1554)
Local adapation with distilling: 0.0001
training loss: tensor(0.3641) feature loss: tensor(0.1712)
Local adapation with distilling: 0.0001
training loss: tensor(0.4051) feature loss: tensor(0.1687)
Local adapation with distilling: 0.0001
training loss: tensor(0.5166) feature loss: tensor(0.1626)
Local adapation with distilling: 0.0001
training loss: tensor(0.4810) feature loss: tensor(0.1901)
Local adapation with distilling: 0.0001
training loss: tensor(0.3205) feature loss: tensor(0.1575)
Local adapation with distilling: 0.0001
training loss: tensor(0.3535) feature loss: tensor(0.1718)
Local adapation with distilling: 0.0001
training loss: tensor(0.5882) feature loss: tensor(0.1747)
Global Model Acc on global data: 0.628 length of data: 10000
-------------Round number:  74  -------------
selected users: [85, 64, 63, 80, 6, 12, 43, 17, 7, 8]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
all data: 494
Local adapation with distilling: 0.0001
training loss: tensor(0.3643) feature loss: tensor(0.1945)
Local adapation with distilling: 0.0001
training loss: tensor(0.3669) feature loss: tensor(0.1446)
Local adapation with distilling: 0.0001
training loss: tensor(0.3473) feature loss: tensor(0.1682)
Local adapation with distilling: 0.0001
training loss: tensor(0.3170) feature loss: tensor(0.1534)
Local adapation with distilling: 0.0001
training loss: tensor(0.4908) feature loss: tensor(0.1474)
Local adapation with distilling: 0.0001
training loss: tensor(0.4466) feature loss: tensor(0.1528)
Local adapation with distilling: 0.0001
training loss: tensor(0.3321) feature loss: tensor(0.1537)
Local adapation with distilling: 0.0001
training loss: tensor(0.3060) feature loss: tensor(0.1450)
Local adapation with distilling: 0.0001
training loss: tensor(0.4141) feature loss: tensor(0.1476)
Local adapation with distilling: 0.0001
training loss: tensor(0.3255) feature loss: tensor(0.1652)
Global Model Acc on global data: 0.6337 length of data: 10000
-------------Round number:  75  -------------
selected users: [36, 7, 6, 45, 56, 54, 22, 37, 53, 68]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([55, 16, 32, 32]) torch.Size([55])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([57, 16, 32, 32]) torch.Size([57])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
all data: 515
Local adapation with distilling: 0.0001
training loss: tensor(0.4965) feature loss: tensor(0.2754)
Local adapation with distilling: 0.0001
training loss: tensor(0.5365) feature loss: tensor(0.2731)
Local adapation with distilling: 0.0001
training loss: tensor(0.5286) feature loss: tensor(0.2719)
Local adapation with distilling: 0.0001
training loss: tensor(0.5374) feature loss: tensor(0.2478)
Local adapation with distilling: 0.0001
training loss: tensor(0.5669) feature loss: tensor(0.3308)
Local adapation with distilling: 0.0001
training loss: tensor(0.7522) feature loss: tensor(0.3055)
Local adapation with distilling: 0.0001
training loss: tensor(0.8095) feature loss: tensor(0.3178)
Local adapation with distilling: 0.0001
training loss: tensor(0.4650) feature loss: tensor(0.3595)
Local adapation with distilling: 0.0001
training loss: tensor(0.4637) feature loss: tensor(0.2807)
Local adapation with distilling: 0.0001
training loss: tensor(0.5958) feature loss: tensor(0.3536)
Global Model Acc on global data: 0.6342 length of data: 10000
-------------Round number:  76  -------------
selected users: [38, 37, 32, 50, 10, 94, 19, 44, 86, 23]
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
all data: 497
Local adapation with distilling: 0.0001
training loss: tensor(0.3513) feature loss: tensor(0.1981)
Local adapation with distilling: 0.0001
training loss: tensor(0.3173) feature loss: tensor(0.1844)
Local adapation with distilling: 0.0001
training loss: tensor(0.4687) feature loss: tensor(0.1976)
Local adapation with distilling: 0.0001
training loss: tensor(0.4041) feature loss: tensor(0.2088)
Local adapation with distilling: 0.0001
training loss: tensor(0.4210) feature loss: tensor(0.2272)
Local adapation with distilling: 0.0001
training loss: tensor(0.3471) feature loss: tensor(0.1793)
Local adapation with distilling: 0.0001
training loss: tensor(0.3580) feature loss: tensor(0.1871)
Local adapation with distilling: 0.0001
training loss: tensor(0.4624) feature loss: tensor(0.2036)
Local adapation with distilling: 0.0001
training loss: tensor(0.3420) feature loss: tensor(0.1883)
Local adapation with distilling: 0.0001
training loss: tensor(0.4738) feature loss: tensor(0.2115)
Global Model Acc on global data: 0.6283 length of data: 10000
-------------Round number:  77  -------------
selected users: [5, 93, 41, 96, 16, 42, 81, 91, 50, 58]
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 503
Local adapation with distilling: 0.0001
training loss: tensor(0.3977) feature loss: tensor(0.1640)
Local adapation with distilling: 0.0001
training loss: tensor(0.4069) feature loss: tensor(0.1927)
Local adapation with distilling: 0.0001
training loss: tensor(0.3405) feature loss: tensor(0.1682)
Local adapation with distilling: 0.0001
training loss: tensor(0.6533) feature loss: tensor(0.1814)
Local adapation with distilling: 0.0001
training loss: tensor(0.3665) feature loss: tensor(0.1551)
Local adapation with distilling: 0.0001
training loss: tensor(0.3635) feature loss: tensor(0.1622)
Local adapation with distilling: 0.0001
training loss: tensor(0.7244) feature loss: tensor(0.1771)
Local adapation with distilling: 0.0001
training loss: tensor(0.3816) feature loss: tensor(0.1679)
Local adapation with distilling: 0.0001
training loss: tensor(0.3485) feature loss: tensor(0.1791)
Local adapation with distilling: 0.0001
training loss: tensor(0.3732) feature loss: tensor(0.1931)
Global Model Acc on global data: 0.6324 length of data: 10000
-------------Round number:  78  -------------
selected users: [9, 46, 7, 63, 15, 2, 74, 31, 5, 36]
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 495
Local adapation with distilling: 0.0001
training loss: tensor(0.5515) feature loss: tensor(0.1630)
Local adapation with distilling: 0.0001
training loss: tensor(0.3444) feature loss: tensor(0.1523)
Local adapation with distilling: 0.0001
training loss: tensor(0.3698) feature loss: tensor(0.1509)
Local adapation with distilling: 0.0001
training loss: tensor(0.3491) feature loss: tensor(0.1840)
Local adapation with distilling: 0.0001
training loss: tensor(0.4470) feature loss: tensor(0.1884)
Local adapation with distilling: 0.0001
training loss: tensor(0.3252) feature loss: tensor(0.1541)
Local adapation with distilling: 0.0001
training loss: tensor(0.3951) feature loss: tensor(0.1720)
Local adapation with distilling: 0.0001
training loss: tensor(0.3785) feature loss: tensor(0.1501)
Local adapation with distilling: 0.0001
training loss: tensor(0.3480) feature loss: tensor(0.1519)
Local adapation with distilling: 0.0001
training loss: tensor(0.3398) feature loss: tensor(0.1611)
Global Model Acc on global data: 0.6345 length of data: 10000
-------------Round number:  79  -------------
selected users: [68, 18, 86, 60, 56, 32, 30, 24, 45, 92]
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([55, 16, 32, 32]) torch.Size([55])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
all data: 497
Local adapation with distilling: 0.0001
training loss: tensor(0.3463) feature loss: tensor(0.1751)
Local adapation with distilling: 0.0001
training loss: tensor(0.3955) feature loss: tensor(0.1807)
Local adapation with distilling: 0.0001
training loss: tensor(0.3139) feature loss: tensor(0.1572)
Local adapation with distilling: 0.0001
training loss: tensor(0.3269) feature loss: tensor(0.1740)
Local adapation with distilling: 0.0001
training loss: tensor(0.3456) feature loss: tensor(0.1501)
Local adapation with distilling: 0.0001
training loss: tensor(0.4263) feature loss: tensor(0.1558)
Local adapation with distilling: 0.0001
training loss: tensor(0.3953) feature loss: tensor(0.1794)
Local adapation with distilling: 0.0001
training loss: tensor(0.3409) feature loss: tensor(0.1606)
Local adapation with distilling: 0.0001
training loss: tensor(0.3371) feature loss: tensor(0.1558)
Local adapation with distilling: 0.0001
training loss: tensor(0.4204) feature loss: tensor(0.1744)
Global Model Acc on global data: 0.6321 length of data: 10000
-------------Round number:  80  -------------
selected users: [37, 65, 95, 53, 66, 30, 73, 85, 45, 36]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([57, 16, 32, 32]) torch.Size([57])
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 509
Local adapation with distilling: 0.0001
training loss: tensor(0.3304) feature loss: tensor(0.1507)
Local adapation with distilling: 0.0001
training loss: tensor(0.4076) feature loss: tensor(0.1622)
Local adapation with distilling: 0.0001
training loss: tensor(0.3376) feature loss: tensor(0.1604)
Local adapation with distilling: 0.0001
training loss: tensor(0.3524) feature loss: tensor(0.1608)
Local adapation with distilling: 0.0001
training loss: tensor(0.4271) feature loss: tensor(0.1531)
Local adapation with distilling: 0.0001
training loss: tensor(0.3805) feature loss: tensor(0.1979)
Local adapation with distilling: 0.0001
training loss: tensor(0.3983) feature loss: tensor(0.1872)
Local adapation with distilling: 0.0001
training loss: tensor(0.3748) feature loss: tensor(0.1903)
Local adapation with distilling: 0.0001
training loss: tensor(0.3385) feature loss: tensor(0.1578)
Local adapation with distilling: 0.0001
training loss: tensor(0.3475) feature loss: tensor(0.1699)
Global Model Acc on global data: 0.6389 length of data: 10000
-------------Round number:  81  -------------
selected users: [73, 89, 41, 78, 51, 21, 30, 69, 8, 5]
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
all data: 495
Local adapation with distilling: 0.0001
training loss: tensor(0.2990) feature loss: tensor(0.1567)
Local adapation with distilling: 0.0001
training loss: tensor(0.2820) feature loss: tensor(0.1307)
Local adapation with distilling: 0.0001
training loss: tensor(0.2842) feature loss: tensor(0.1304)
Local adapation with distilling: 0.0001
training loss: tensor(0.3403) feature loss: tensor(0.1539)
Local adapation with distilling: 0.0001
training loss: tensor(0.3622) feature loss: tensor(0.1272)
Local adapation with distilling: 0.0001
training loss: tensor(0.3482) feature loss: tensor(0.1492)
Local adapation with distilling: 0.0001
training loss: tensor(0.3122) feature loss: tensor(0.1476)
Local adapation with distilling: 0.0001
training loss: tensor(0.3090) feature loss: tensor(0.1484)
Local adapation with distilling: 0.0001
training loss: tensor(0.2796) feature loss: tensor(0.1514)
Local adapation with distilling: 0.0001
training loss: tensor(0.2948) feature loss: tensor(0.1315)
Global Model Acc on global data: 0.6394 length of data: 10000
-------------Round number:  82  -------------
selected users: [72, 33, 58, 2, 55, 84, 54, 75, 28, 40]
random features: torch.Size([57, 16, 32, 32]) torch.Size([57])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
all data: 496
Local adapation with distilling: 0.0001
training loss: tensor(0.3810) feature loss: tensor(0.1796)
Local adapation with distilling: 0.0001
training loss: tensor(0.3646) feature loss: tensor(0.1981)
Local adapation with distilling: 0.0001
training loss: tensor(0.3681) feature loss: tensor(0.1891)
Local adapation with distilling: 0.0001
training loss: tensor(0.3368) feature loss: tensor(0.1725)
Local adapation with distilling: 0.0001
training loss: tensor(0.3663) feature loss: tensor(0.1683)
Local adapation with distilling: 0.0001
training loss: tensor(0.4015) feature loss: tensor(0.1712)
Local adapation with distilling: 0.0001
training loss: tensor(0.5224) feature loss: tensor(0.1508)
Local adapation with distilling: 0.0001
training loss: tensor(0.3941) feature loss: tensor(0.1886)
Local adapation with distilling: 0.0001
training loss: tensor(0.4858) feature loss: tensor(0.1776)
Local adapation with distilling: 0.0001
training loss: tensor(0.3999) feature loss: tensor(0.1867)
Global Model Acc on global data: 0.6332 length of data: 10000
-------------Round number:  83  -------------
selected users: [6, 65, 95, 84, 61, 12, 30, 69, 35, 1]
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
all data: 498
Local adapation with distilling: 0.0001
training loss: tensor(0.4039) feature loss: tensor(0.1612)
Local adapation with distilling: 0.0001
training loss: tensor(0.3822) feature loss: tensor(0.1868)
Local adapation with distilling: 0.0001
training loss: tensor(0.3207) feature loss: tensor(0.1560)
Local adapation with distilling: 0.0001
training loss: tensor(0.3803) feature loss: tensor(0.1910)
Local adapation with distilling: 0.0001
training loss: tensor(0.3765) feature loss: tensor(0.1723)
Local adapation with distilling: 0.0001
training loss: tensor(0.4140) feature loss: tensor(0.1798)
Local adapation with distilling: 0.0001
training loss: tensor(0.3321) feature loss: tensor(0.1894)
Local adapation with distilling: 0.0001
training loss: tensor(0.3462) feature loss: tensor(0.1928)
Local adapation with distilling: 0.0001
training loss: tensor(0.4683) feature loss: tensor(0.1672)
Local adapation with distilling: 0.0001
training loss: tensor(0.3970) feature loss: tensor(0.1720)
Global Model Acc on global data: 0.6354 length of data: 10000
-------------Round number:  84  -------------
selected users: [94, 55, 80, 1, 90, 11, 32, 8, 6, 82]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
all data: 493
Local adapation with distilling: 0.0001
training loss: tensor(0.3292) feature loss: tensor(0.1651)
Local adapation with distilling: 0.0001
training loss: tensor(0.3357) feature loss: tensor(0.1885)
Local adapation with distilling: 0.0001
training loss: tensor(0.3484) feature loss: tensor(0.2012)
Local adapation with distilling: 0.0001
training loss: tensor(0.3632) feature loss: tensor(0.1713)
Local adapation with distilling: 0.0001
training loss: tensor(0.4030) feature loss: tensor(0.2120)
Local adapation with distilling: 0.0001
training loss: tensor(0.3361) feature loss: tensor(0.1675)
Local adapation with distilling: 0.0001
training loss: tensor(0.4132) feature loss: tensor(0.1666)
Local adapation with distilling: 0.0001
training loss: tensor(0.3183) feature loss: tensor(0.1818)
Local adapation with distilling: 0.0001
training loss: tensor(0.3733) feature loss: tensor(0.1687)
Local adapation with distilling: 0.0001
training loss: tensor(0.3880) feature loss: tensor(0.2135)
Global Model Acc on global data: 0.6408 length of data: 10000
save a model
-------------Round number:  85  -------------
selected users: [81, 25, 40, 87, 41, 23, 10, 89, 50, 54]
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
all data: 491
Local adapation with distilling: 0.0001
training loss: tensor(0.7239) feature loss: tensor(0.2031)
Local adapation with distilling: 0.0001
training loss: tensor(0.3947) feature loss: tensor(0.1748)
Local adapation with distilling: 0.0001
training loss: tensor(0.3725) feature loss: tensor(0.2030)
Local adapation with distilling: 0.0001
training loss: tensor(0.4345) feature loss: tensor(0.2141)
Local adapation with distilling: 0.0001
training loss: tensor(0.3495) feature loss: tensor(0.1909)
Local adapation with distilling: 0.0001
training loss: tensor(0.4543) feature loss: tensor(0.2138)
Local adapation with distilling: 0.0001
training loss: tensor(0.4197) feature loss: tensor(0.1951)
Local adapation with distilling: 0.0001
training loss: tensor(0.3343) feature loss: tensor(0.1789)
Local adapation with distilling: 0.0001
training loss: tensor(0.3580) feature loss: tensor(0.2080)
Local adapation with distilling: 0.0001
training loss: tensor(0.4419) feature loss: tensor(0.1660)
Global Model Acc on global data: 0.6369 length of data: 10000
-------------Round number:  86  -------------
selected users: [69, 74, 34, 68, 42, 0, 32, 88, 8, 3]
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
all data: 489
Local adapation with distilling: 0.0001
training loss: tensor(0.3268) feature loss: tensor(0.1771)
Local adapation with distilling: 0.0001
training loss: tensor(0.3375) feature loss: tensor(0.1754)
Local adapation with distilling: 0.0001
training loss: tensor(0.3188) feature loss: tensor(0.1530)
Local adapation with distilling: 0.0001
training loss: tensor(0.3594) feature loss: tensor(0.1797)
Local adapation with distilling: 0.0001
training loss: tensor(0.3371) feature loss: tensor(0.1571)
Local adapation with distilling: 0.0001
training loss: tensor(0.3563) feature loss: tensor(0.1656)
Local adapation with distilling: 0.0001
training loss: tensor(0.3447) feature loss: tensor(0.1477)
Local adapation with distilling: 0.0001
training loss: tensor(0.3411) feature loss: tensor(0.1760)
Local adapation with distilling: 0.0001
training loss: tensor(0.2963) feature loss: tensor(0.1658)
Local adapation with distilling: 0.0001
training loss: tensor(0.3658) feature loss: tensor(0.1457)
Global Model Acc on global data: 0.642 length of data: 10000
save a model
-------------Round number:  87  -------------
selected users: [16, 81, 85, 32, 39, 25, 26, 29, 65, 7]
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
all data: 506
Local adapation with distilling: 0.0001
training loss: tensor(0.3349) feature loss: tensor(0.1631)
Local adapation with distilling: 0.0001
training loss: tensor(0.7946) feature loss: tensor(0.1916)
Local adapation with distilling: 0.0001
training loss: tensor(0.3535) feature loss: tensor(0.2180)
Local adapation with distilling: 0.0001
training loss: tensor(0.3310) feature loss: tensor(0.1692)
Local adapation with distilling: 0.0001
training loss: tensor(0.3938) feature loss: tensor(0.1880)
Local adapation with distilling: 0.0001
training loss: tensor(0.3394) feature loss: tensor(0.1683)
Local adapation with distilling: 0.0001
training loss: tensor(0.3669) feature loss: tensor(0.2091)
Local adapation with distilling: 0.0001
training loss: tensor(0.2963) feature loss: tensor(0.1605)
Local adapation with distilling: 0.0001
training loss: tensor(0.3614) feature loss: tensor(0.2021)
Local adapation with distilling: 0.0001
training loss: tensor(0.3452) feature loss: tensor(0.1651)
Global Model Acc on global data: 0.6445 length of data: 10000
save a model
-------------Round number:  88  -------------
selected users: [95, 53, 43, 84, 2, 74, 55, 31, 54, 97]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([57, 16, 32, 32]) torch.Size([57])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
all data: 495
Local adapation with distilling: 0.0001
training loss: tensor(0.3072) feature loss: tensor(0.1683)
Local adapation with distilling: 0.0001
training loss: tensor(0.3206) feature loss: tensor(0.1586)
Local adapation with distilling: 0.0001
training loss: tensor(0.3414) feature loss: tensor(0.1780)
Local adapation with distilling: 0.0001
training loss: tensor(0.3601) feature loss: tensor(0.1938)
Local adapation with distilling: 0.0001
training loss: tensor(0.3248) feature loss: tensor(0.1948)
Local adapation with distilling: 0.0001
training loss: tensor(0.3418) feature loss: tensor(0.2012)
Local adapation with distilling: 0.0001
training loss: tensor(0.3158) feature loss: tensor(0.1791)
Local adapation with distilling: 0.0001
training loss: tensor(0.3445) feature loss: tensor(0.1617)
Local adapation with distilling: 0.0001
training loss: tensor(0.4188) feature loss: tensor(0.1616)
Local adapation with distilling: 0.0001
training loss: tensor(0.3987) feature loss: tensor(0.1891)
Global Model Acc on global data: 0.6444 length of data: 10000
-------------Round number:  89  -------------
selected users: [65, 21, 87, 6, 46, 74, 44, 60, 72, 5]
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([57, 16, 32, 32]) torch.Size([57])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
all data: 497
Local adapation with distilling: 0.0001
training loss: tensor(0.3343) feature loss: tensor(0.1800)
Local adapation with distilling: 0.0001
training loss: tensor(0.3494) feature loss: tensor(0.1571)
Local adapation with distilling: 0.0001
training loss: tensor(0.3682) feature loss: tensor(0.1723)
Local adapation with distilling: 0.0001
training loss: tensor(0.3321) feature loss: tensor(0.1414)
Local adapation with distilling: 0.0001
training loss: tensor(0.3428) feature loss: tensor(0.1479)
Local adapation with distilling: 0.0001
training loss: tensor(0.3181) feature loss: tensor(0.1674)
Local adapation with distilling: 0.0001
training loss: tensor(0.3986) feature loss: tensor(0.1712)
Local adapation with distilling: 0.0001
training loss: tensor(0.3030) feature loss: tensor(0.1668)
Local adapation with distilling: 0.0001
training loss: tensor(0.3481) feature loss: tensor(0.1792)
Local adapation with distilling: 0.0001
training loss: tensor(0.3270) feature loss: tensor(0.1467)
Global Model Acc on global data: 0.6479 length of data: 10000
save a model
-------------Round number:  90  -------------
selected users: [25, 85, 96, 89, 65, 94, 5, 35, 36, 92]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
all data: 504
Local adapation with distilling: 0.0001
training loss: tensor(0.3351) feature loss: tensor(0.1605)
Local adapation with distilling: 0.0001
training loss: tensor(0.3383) feature loss: tensor(0.1922)
Local adapation with distilling: 0.0001
training loss: tensor(0.5374) feature loss: tensor(0.1729)
Local adapation with distilling: 0.0001
training loss: tensor(0.2951) feature loss: tensor(0.1696)
Local adapation with distilling: 0.0001
training loss: tensor(0.3153) feature loss: tensor(0.1649)
Local adapation with distilling: 0.0001
training loss: tensor(0.3146) feature loss: tensor(0.1571)
Local adapation with distilling: 0.0001
training loss: tensor(0.3123) feature loss: tensor(0.1547)
Local adapation with distilling: 0.0001
training loss: tensor(0.4232) feature loss: tensor(0.1699)
Local adapation with distilling: 0.0001
training loss: tensor(0.3361) feature loss: tensor(0.1807)
Local adapation with distilling: 0.0001
training loss: tensor(0.4018) feature loss: tensor(0.1848)
Global Model Acc on global data: 0.6402 length of data: 10000
-------------Round number:  91  -------------
selected users: [75, 25, 3, 52, 78, 54, 59, 26, 62, 97]
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
all data: 502
Local adapation with distilling: 0.0001
training loss: tensor(0.3387) feature loss: tensor(0.1722)
Local adapation with distilling: 0.0001
training loss: tensor(0.2943) feature loss: tensor(0.1462)
Local adapation with distilling: 0.0001
training loss: tensor(0.3371) feature loss: tensor(0.1385)
Local adapation with distilling: 0.0001
training loss: tensor(0.5977) feature loss: tensor(0.1583)
Local adapation with distilling: 0.0001
training loss: tensor(0.3547) feature loss: tensor(0.1768)
Local adapation with distilling: 0.0001
training loss: tensor(0.3337) feature loss: tensor(0.1395)
Local adapation with distilling: 0.0001
training loss: tensor(0.4103) feature loss: tensor(0.1462)
Local adapation with distilling: 0.0001
training loss: tensor(0.3216) feature loss: tensor(0.1735)
Local adapation with distilling: 0.0001
training loss: tensor(0.3909) feature loss: tensor(0.1700)
Local adapation with distilling: 0.0001
training loss: tensor(0.3682) feature loss: tensor(0.1727)
Global Model Acc on global data: 0.6385 length of data: 10000
-------------Round number:  92  -------------
selected users: [25, 99, 73, 61, 66, 36, 23, 83, 77, 6]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
all data: 499
Local adapation with distilling: 0.0001
training loss: tensor(0.3021) feature loss: tensor(0.1433)
Local adapation with distilling: 0.0001
training loss: tensor(0.3892) feature loss: tensor(0.1652)
Local adapation with distilling: 0.0001
training loss: tensor(0.3587) feature loss: tensor(0.1864)
Local adapation with distilling: 0.0001
training loss: tensor(0.3554) feature loss: tensor(0.1422)
Local adapation with distilling: 0.0001
training loss: tensor(0.3707) feature loss: tensor(0.1480)
Local adapation with distilling: 0.0001
training loss: tensor(0.3220) feature loss: tensor(0.1644)
Local adapation with distilling: 0.0001
training loss: tensor(0.3868) feature loss: tensor(0.1623)
Local adapation with distilling: 0.0001
training loss: tensor(0.4024) feature loss: tensor(0.1882)
Local adapation with distilling: 0.0001
training loss: tensor(0.4801) feature loss: tensor(0.1690)
Local adapation with distilling: 0.0001
training loss: tensor(0.3513) feature loss: tensor(0.1427)
Global Model Acc on global data: 0.6434 length of data: 10000
-------------Round number:  93  -------------
selected users: [75, 82, 56, 27, 42, 35, 1, 97, 66, 61]
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([55, 16, 32, 32]) torch.Size([55])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.3782) feature loss: tensor(0.2312)
Local adapation with distilling: 0.0001
training loss: tensor(0.3814) feature loss: tensor(0.2562)
Local adapation with distilling: 0.0001
training loss: tensor(0.3598) feature loss: tensor(0.2145)
Local adapation with distilling: 0.0001
training loss: tensor(0.4360) feature loss: tensor(0.1983)
Local adapation with distilling: 0.0001
training loss: tensor(0.3784) feature loss: tensor(0.1978)
Local adapation with distilling: 0.0001
training loss: tensor(0.4196) feature loss: tensor(0.2127)
Local adapation with distilling: 0.0001
training loss: tensor(0.3847) feature loss: tensor(0.2137)
Local adapation with distilling: 0.0001
training loss: tensor(0.3889) feature loss: tensor(0.2513)
Local adapation with distilling: 0.0001
training loss: tensor(0.3802) feature loss: tensor(0.2149)
Local adapation with distilling: 0.0001
training loss: tensor(0.3695) feature loss: tensor(0.2336)
Global Model Acc on global data: 0.6456 length of data: 10000
-------------Round number:  94  -------------
selected users: [13, 73, 5, 18, 99, 48, 23, 4, 35, 17]
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
all data: 499
Local adapation with distilling: 0.0001
training loss: tensor(0.3631) feature loss: tensor(0.1703)
Local adapation with distilling: 0.0001
training loss: tensor(0.3123) feature loss: tensor(0.1685)
Local adapation with distilling: 0.0001
training loss: tensor(0.2973) feature loss: tensor(0.1400)
Local adapation with distilling: 0.0001
training loss: tensor(0.4059) feature loss: tensor(0.1503)
Local adapation with distilling: 0.0001
training loss: tensor(0.3305) feature loss: tensor(0.1505)
Local adapation with distilling: 0.0001
training loss: tensor(0.3840) feature loss: tensor(0.1539)
Local adapation with distilling: 0.0001
training loss: tensor(0.3458) feature loss: tensor(0.1577)
Local adapation with distilling: 0.0001
training loss: tensor(0.3583) feature loss: tensor(0.1435)
Local adapation with distilling: 0.0001
training loss: tensor(0.3242) feature loss: tensor(0.1456)
Local adapation with distilling: 0.0001
training loss: tensor(0.2923) feature loss: tensor(0.1409)
Global Model Acc on global data: 0.6461 length of data: 10000
-------------Round number:  95  -------------
selected users: [88, 9, 1, 60, 95, 26, 45, 71, 44, 21]
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
all data: 495
Local adapation with distilling: 0.0001
training loss: tensor(0.2683) feature loss: tensor(0.1507)
Local adapation with distilling: 0.0001
training loss: tensor(0.5302) feature loss: tensor(0.1550)
Local adapation with distilling: 0.0001
training loss: tensor(0.2531) feature loss: tensor(0.1286)
Local adapation with distilling: 0.0001
training loss: tensor(0.2563) feature loss: tensor(0.1445)
Local adapation with distilling: 0.0001
training loss: tensor(0.2324) feature loss: tensor(0.1230)
Local adapation with distilling: 0.0001
training loss: tensor(0.2657) feature loss: tensor(0.1589)
Local adapation with distilling: 0.0001
training loss: tensor(0.2500) feature loss: tensor(0.1217)
Local adapation with distilling: 0.0001
training loss: tensor(0.2263) feature loss: tensor(0.1303)
Local adapation with distilling: 0.0001
training loss: tensor(0.3047) feature loss: tensor(0.1445)
Local adapation with distilling: 0.0001
training loss: tensor(0.2655) feature loss: tensor(0.1492)
Global Model Acc on global data: 0.6388 length of data: 10000
-------------Round number:  96  -------------
selected users: [41, 28, 52, 15, 87, 17, 75, 42, 45, 49]
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
all data: 494
Local adapation with distilling: 0.0001
training loss: tensor(0.2736) feature loss: tensor(0.1334)
Local adapation with distilling: 0.0001
training loss: tensor(0.4019) feature loss: tensor(0.1662)
Local adapation with distilling: 0.0001
training loss: tensor(0.5829) feature loss: tensor(0.1624)
Local adapation with distilling: 0.0001
training loss: tensor(0.4630) feature loss: tensor(0.1628)
Local adapation with distilling: 0.0001
training loss: tensor(0.3457) feature loss: tensor(0.1580)
Local adapation with distilling: 0.0001
training loss: tensor(0.2529) feature loss: tensor(0.1303)
Local adapation with distilling: 0.0001
training loss: tensor(0.2971) feature loss: tensor(0.1706)
Local adapation with distilling: 0.0001
training loss: tensor(0.2921) feature loss: tensor(0.1301)
Local adapation with distilling: 0.0001
training loss: tensor(0.2564) feature loss: tensor(0.1331)
Local adapation with distilling: 0.0001
training loss: tensor(0.3184) feature loss: tensor(0.1813)
Global Model Acc on global data: 0.6411 length of data: 10000
-------------Round number:  97  -------------
selected users: [31, 43, 64, 56, 85, 2, 70, 21, 34, 50]
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([55, 16, 32, 32]) torch.Size([55])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
all data: 490
Local adapation with distilling: 0.0001
training loss: tensor(0.3090) feature loss: tensor(0.1444)
Local adapation with distilling: 0.0001
training loss: tensor(0.3181) feature loss: tensor(0.1781)
Local adapation with distilling: 0.0001
training loss: tensor(0.3297) feature loss: tensor(0.1570)
Local adapation with distilling: 0.0001
training loss: tensor(0.2739) feature loss: tensor(0.1532)
Local adapation with distilling: 0.0001
training loss: tensor(0.2918) feature loss: tensor(0.1892)
Local adapation with distilling: 0.0001
training loss: tensor(0.2774) feature loss: tensor(0.1777)
Local adapation with distilling: 0.0001
training loss: tensor(0.2847) feature loss: tensor(0.1758)
Local adapation with distilling: 0.0001
training loss: tensor(0.2859) feature loss: tensor(0.1687)
Local adapation with distilling: 0.0001
training loss: tensor(0.2794) feature loss: tensor(0.1656)
Local adapation with distilling: 0.0001
training loss: tensor(0.3093) feature loss: tensor(0.1731)
Global Model Acc on global data: 0.6401 length of data: 10000
-------------Round number:  98  -------------
selected users: [11, 48, 97, 14, 22, 36, 99, 47, 33, 81]
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([48, 16, 32, 32]) torch.Size([48])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
all data: 488
Local adapation with distilling: 0.0001
training loss: tensor(0.3149) feature loss: tensor(0.1580)
Local adapation with distilling: 0.0001
training loss: tensor(0.3370) feature loss: tensor(0.1691)
Local adapation with distilling: 0.0001
training loss: tensor(0.3516) feature loss: tensor(0.1839)
Local adapation with distilling: 0.0001
training loss: tensor(0.3710) feature loss: tensor(0.1932)
Local adapation with distilling: 0.0001
training loss: tensor(0.5955) feature loss: tensor(0.1591)
Local adapation with distilling: 0.0001
training loss: tensor(0.3202) feature loss: tensor(0.1803)
Local adapation with distilling: 0.0001
training loss: tensor(0.3357) feature loss: tensor(0.1622)
Local adapation with distilling: 0.0001
training loss: tensor(0.3846) feature loss: tensor(0.1859)
Local adapation with distilling: 0.0001
training loss: tensor(0.3330) feature loss: tensor(0.1781)
Local adapation with distilling: 0.0001
training loss: tensor(0.7493) feature loss: tensor(0.1630)
Global Model Acc on global data: 0.6497 length of data: 10000
save a model
-------------Round number:  99  -------------
selected users: [14, 34, 30, 78, 16, 15, 91, 38, 10, 85]
random features: torch.Size([49, 16, 32, 32]) torch.Size([49])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([47, 16, 32, 32]) torch.Size([47])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([53, 16, 32, 32]) torch.Size([53])
random features: torch.Size([51, 16, 32, 32]) torch.Size([51])
random features: torch.Size([52, 16, 32, 32]) torch.Size([52])
random features: torch.Size([54, 16, 32, 32]) torch.Size([54])
random features: torch.Size([46, 16, 32, 32]) torch.Size([46])
random features: torch.Size([50, 16, 32, 32]) torch.Size([50])
all data: 501
Local adapation with distilling: 0.0001
training loss: tensor(0.3127) feature loss: tensor(0.1562)
Local adapation with distilling: 0.0001
training loss: tensor(0.2809) feature loss: tensor(0.1309)
Local adapation with distilling: 0.0001
training loss: tensor(0.3139) feature loss: tensor(0.1485)
Local adapation with distilling: 0.0001
training loss: tensor(0.3159) feature loss: tensor(0.1621)
Local adapation with distilling: 0.0001
training loss: tensor(0.3034) feature loss: tensor(0.1352)
Local adapation with distilling: 0.0001
training loss: tensor(0.4589) feature loss: tensor(0.1592)
Local adapation with distilling: 0.0001
training loss: tensor(0.3220) feature loss: tensor(0.1389)
Local adapation with distilling: 0.0001
training loss: tensor(0.2844) feature loss: tensor(0.1585)
Local adapation with distilling: 0.0001
training loss: tensor(0.3202) feature loss: tensor(0.1452)
Local adapation with distilling: 0.0001
training loss: tensor(0.2760) feature loss: tensor(0.1566)
Global Model Acc on global data: 0.6411 length of data: 10000
