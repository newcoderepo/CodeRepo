nohup: ignoring input
================================================================================
Summary of training process:
Dataset                : Cifar10
Batch size             : 64
Learing rate           : 0.001
Number of total clients: 100
Split method           : quantity
Split parameter        : 3.0
Clients per round      : 10
Number of global rounds: 100
Number of local rounds : 10
Feature from layer     : 12
Feature percentage     : 0.1
Local training loss    : CE_CE_KL
Loss of beta           : 1.0
Algorithm              : FedFea
Modelname              : MOBNET
Mode                   : training
Seed                   : 0
================================================================================
Files already downloaded and verified
Files already downloaded and verified
Class frequencies:
client,class0,class1,class2,class3,class4,class5,class6,class7,class8,class9,Amount
Client   0,0.298,0.00,0.00,0.00,0.00,0.375,0.00,0.00,0.327,0.00,496
Client   1,0.00,0.321,0.00,0.00,0.00,0.358,0.00,0.00,0.00,0.321,520
Client   2,0.307,0.346,0.346,0.00,0.00,0.00,0.00,0.00,0.00,0.00,482
Client   3,0.00,0.00,0.00,0.337,0.00,0.00,0.377,0.286,0.00,0.00,531
Client   4,0.00,0.00,0.340,0.00,0.320,0.00,0.00,0.00,0.00,0.340,491
Client   5,0.00,0.00,0.327,0.00,0.308,0.365,0.00,0.00,0.00,0.00,510
Client   6,0.00,0.00,0.319,0.00,0.300,0.00,0.382,0.00,0.00,0.00,524
Client   7,0.00,0.00,0.00,0.00,0.330,0.00,0.00,0.319,0.00,0.351,476
Client   8,0.00,0.347,0.00,0.00,0.00,0.00,0.00,0.316,0.337,0.00,481
Client   9,0.286,0.00,0.00,0.00,0.00,0.00,0.389,0.00,0.00,0.325,514
Client  10,0.315,0.00,0.00,0.00,0.00,0.00,0.00,0.326,0.00,0.358,466
Client  11,0.00,0.313,0.00,0.00,0.00,0.00,0.375,0.00,0.00,0.313,534
Client  12,0.306,0.347,0.347,0.00,0.00,0.00,0.00,0.00,0.00,0.00,481
Client  13,0.00,0.329,0.00,0.352,0.00,0.00,0.00,0.00,0.319,0.00,508
Client  14,0.00,0.00,0.00,0.359,0.315,0.00,0.00,0.00,0.325,0.00,498
Client  15,0.00,0.00,0.00,0.00,0.00,0.361,0.00,0.00,0.315,0.324,515
Client  16,0.00,0.00,0.00,0.337,0.00,0.00,0.377,0.286,0.00,0.00,531
Client  17,0.00,0.00,0.00,0.00,0.00,0.346,0.372,0.283,0.00,0.00,538
Client  18,0.00,0.337,0.00,0.00,0.00,0.00,0.00,0.00,0.327,0.337,496
Client  19,0.00,0.00,0.00,0.356,0.312,0.00,0.00,0.00,0.00,0.332,503
Client  20,0.309,0.351,0.00,0.00,0.00,0.00,0.00,0.00,0.340,0.00,476
Client  21,0.312,0.355,0.00,0.00,0.333,0.00,0.00,0.00,0.00,0.00,471
Client  22,0.00,0.00,0.326,0.349,0.00,0.00,0.00,0.00,0.00,0.326,513
Client  23,0.298,0.00,0.339,0.363,0.00,0.00,0.00,0.00,0.00,0.00,493
Client  24,0.00,0.00,0.340,0.00,0.320,0.00,0.00,0.00,0.00,0.340,491
Client  25,0.00,0.00,0.00,0.00,0.00,0.367,0.00,0.302,0.00,0.331,504
Client  26,0.00,0.00,0.00,0.00,0.00,0.00,0.378,0.00,0.306,0.316,529
Client  27,0.00,0.00,0.00,0.368,0.320,0.00,0.00,0.312,0.00,0.00,487
Client  28,0.00,0.00,0.00,0.00,0.00,0.360,0.00,0.00,0.315,0.325,514
Client  29,0.00,0.00,0.00,0.328,0.00,0.00,0.366,0.00,0.00,0.306,546
Client  30,0.309,0.00,0.352,0.00,0.00,0.00,0.00,0.00,0.339,0.00,475
Client  31,0.00,0.344,0.00,0.00,0.00,0.00,0.00,0.313,0.00,0.344,486
Client  32,0.00,0.00,0.335,0.359,0.00,0.00,0.00,0.305,0.00,0.00,498
Client  33,0.302,0.00,0.00,0.368,0.00,0.00,0.00,0.00,0.331,0.00,487
Client  34,0.00,0.352,0.00,0.00,0.328,0.00,0.00,0.320,0.00,0.00,475
Client  35,0.00,0.315,0.00,0.337,0.00,0.348,0.00,0.00,0.00,0.00,531
Client  36,0.289,0.00,0.00,0.00,0.00,0.00,0.394,0.00,0.317,0.00,508
Client  37,0.00,0.00,0.00,0.00,0.307,0.00,0.394,0.299,0.00,0.00,508
Client  38,0.00,0.00,0.00,0.00,0.00,0.339,0.366,0.00,0.295,0.00,546
Client  39,0.00,0.00,0.322,0.00,0.00,0.356,0.00,0.00,0.00,0.322,519
Client  40,0.320,0.00,0.00,0.00,0.00,0.00,0.00,0.330,0.350,0.00,460
Client  41,0.00,0.352,0.00,0.00,0.328,0.00,0.00,0.320,0.00,0.00,475
Client  42,0.00,0.00,0.352,0.00,0.328,0.00,0.00,0.320,0.00,0.00,475
Client  43,0.298,0.00,0.00,0.363,0.00,0.00,0.00,0.00,0.00,0.339,493
Client  44,0.313,0.00,0.355,0.00,0.332,0.00,0.00,0.00,0.00,0.00,470
Client  45,0.00,0.331,0.00,0.00,0.00,0.367,0.00,0.302,0.00,0.00,504
Client  46,0.00,0.00,0.00,0.00,0.00,0.00,0.385,0.293,0.00,0.322,519
Client  47,0.00,0.00,0.00,0.00,0.333,0.00,0.00,0.323,0.344,0.00,468
Client  48,0.309,0.352,0.00,0.00,0.00,0.00,0.00,0.00,0.339,0.00,475
Client  49,0.00,0.00,0.337,0.00,0.00,0.00,0.00,0.00,0.325,0.337,495
Client  50,0.298,0.339,0.00,0.363,0.00,0.00,0.00,0.00,0.00,0.00,493
Client  51,0.00,0.344,0.344,0.00,0.00,0.00,0.00,0.311,0.00,0.00,485
Client  52,0.286,0.00,0.325,0.00,0.00,0.00,0.389,0.00,0.00,0.00,514
Client  53,0.00,0.00,0.326,0.350,0.00,0.00,0.00,0.00,0.00,0.324,512
Client  54,0.00,0.00,0.319,0.00,0.298,0.00,0.382,0.00,0.00,0.00,523
Client  55,0.304,0.00,0.00,0.00,0.00,0.383,0.00,0.313,0.00,0.00,483
Client  56,0.00,0.303,0.00,0.00,0.00,0.335,0.362,0.00,0.00,0.00,552
Client  57,0.00,0.00,0.00,0.00,0.308,0.00,0.394,0.298,0.00,0.00,507
Client  58,0.289,0.00,0.00,0.00,0.00,0.00,0.394,0.00,0.317,0.00,508
Client  59,0.00,0.322,0.00,0.00,0.00,0.357,0.00,0.00,0.00,0.320,518
Client  60,0.306,0.347,0.347,0.00,0.00,0.00,0.00,0.00,0.00,0.00,481
Client  61,0.00,0.327,0.00,0.00,0.308,0.365,0.00,0.00,0.00,0.00,507
Client  62,0.316,0.00,0.359,0.00,0.00,0.00,0.00,0.325,0.00,0.00,465
Client  63,0.00,0.00,0.00,0.354,0.00,0.00,0.00,0.00,0.318,0.328,506
Client  64,0.00,0.00,0.00,0.00,0.317,0.376,0.00,0.307,0.00,0.00,492
Client  65,0.295,0.00,0.00,0.00,0.00,0.371,0.00,0.00,0.00,0.333,498
Client  66,0.00,0.00,0.00,0.327,0.00,0.00,0.368,0.00,0.00,0.305,544
Client  67,0.00,0.351,0.00,0.00,0.330,0.00,0.00,0.319,0.00,0.00,473
Client  68,0.00,0.00,0.00,0.00,0.302,0.00,0.387,0.00,0.311,0.00,517
Client  69,0.00,0.00,0.337,0.00,0.00,0.00,0.00,0.00,0.327,0.337,493
Client  70,0.304,0.00,0.00,0.00,0.00,0.383,0.00,0.313,0.00,0.00,483
Client  71,0.00,0.327,0.00,0.00,0.308,0.365,0.00,0.00,0.00,0.00,507
Client  72,0.00,0.00,0.324,0.00,0.00,0.361,0.00,0.00,0.314,0.00,512
Client  73,0.00,0.00,0.00,0.340,0.00,0.353,0.00,0.00,0.307,0.00,524
Client  74,0.00,0.344,0.00,0.00,0.323,0.00,0.00,0.00,0.333,0.00,483
Client  75,0.304,0.00,0.00,0.00,0.00,0.383,0.00,0.313,0.00,0.00,483
Client  76,0.00,0.00,0.00,0.333,0.292,0.00,0.375,0.00,0.00,0.00,534
Client  77,0.317,0.00,0.358,0.00,0.00,0.00,0.00,0.325,0.00,0.00,464
Client  78,0.00,0.00,0.00,0.340,0.00,0.353,0.00,0.00,0.307,0.00,524
Client  79,0.00,0.333,0.333,0.00,0.00,0.00,0.00,0.00,0.00,0.333,498
Client  80,0.306,0.00,0.00,0.370,0.324,0.00,0.00,0.00,0.00,0.00,481
Client  81,0.287,0.324,0.00,0.00,0.00,0.00,0.390,0.00,0.00,0.00,513
Client  82,0.317,0.00,0.358,0.00,0.00,0.00,0.00,0.325,0.00,0.00,464
Client  83,0.00,0.00,0.329,0.352,0.00,0.00,0.00,0.00,0.319,0.00,505
Client  84,0.306,0.00,0.00,0.370,0.324,0.00,0.00,0.00,0.00,0.00,481
Client  85,0.00,0.00,0.00,0.00,0.311,0.369,0.00,0.00,0.321,0.00,502
Client  86,0.00,0.00,0.312,0.00,0.00,0.00,0.376,0.00,0.00,0.312,532
Client  87,0.309,0.00,0.00,0.374,0.00,0.00,0.00,0.317,0.00,0.00,476
Client  88,0.00,0.344,0.00,0.00,0.323,0.00,0.00,0.00,0.333,0.00,483
Client  89,0.00,0.00,0.00,0.327,0.00,0.00,0.368,0.00,0.00,0.305,544
Client  90,0.309,0.00,0.00,0.374,0.00,0.00,0.00,0.317,0.00,0.00,476
Client  91,0.00,0.314,0.00,0.336,0.00,0.350,0.00,0.00,0.00,0.00,529
Client  92,0.313,0.00,0.354,0.00,0.333,0.00,0.00,0.00,0.00,0.00,469
Client  93,0.00,0.00,0.00,0.340,0.00,0.353,0.00,0.00,0.307,0.00,524
Client  94,0.00,0.00,0.00,0.00,0.308,0.00,0.394,0.298,0.00,0.00,507
Client  95,0.00,0.331,0.00,0.00,0.00,0.369,0.00,0.301,0.00,0.00,502
Client  96,0.287,0.00,0.324,0.00,0.00,0.00,0.390,0.00,0.00,0.00,513
Client  97,0.00,0.00,0.347,0.00,0.00,0.00,0.00,0.316,0.337,0.00,478
Client  98,0.00,0.344,0.00,0.00,0.323,0.00,0.00,0.00,0.333,0.00,483
Client  99,0.313,0.00,0.00,0.00,0.333,0.00,0.00,0.00,0.00,0.354,469
0 [0 5 8] [0 5 8] [1 2 3 4 6 7 9]
0 training: Counter({5: 186, 8: 162, 0: 148}) testing iid: Counter({8: 1000, 0: 1000, 5: 1000})
1 [1 5 9] [1 5 9] [0 2 3 4 6 7 8]
1 training: Counter({5: 186, 1: 167, 9: 167}) testing iid: Counter({1: 1000, 9: 1000, 5: 1000})
2 [0 1 2] [0 1 2] [3 4 5 6 7 8 9]
2 training: Counter({1: 167, 2: 167, 0: 148}) testing iid: Counter({0: 1000, 1: 1000, 2: 1000})
3 [3 6 7] [3 6 7] [0 1 2 4 5 8 9]
3 training: Counter({6: 200, 3: 179, 7: 152}) testing iid: Counter({3: 1000, 6: 1000, 7: 1000})
4 [2 4 9] [2 4 9] [0 1 3 5 6 7 8]
4 training: Counter({2: 167, 9: 167, 4: 157}) testing iid: Counter({9: 1000, 4: 1000, 2: 1000})
5 [2 4 5] [2 4 5] [0 1 3 6 7 8 9]
5 training: Counter({5: 186, 2: 167, 4: 157}) testing iid: Counter({5: 1000, 4: 1000, 2: 1000})
6 [2 4 6] [2 4 6] [0 1 3 5 7 8 9]
6 training: Counter({6: 200, 2: 167, 4: 157}) testing iid: Counter({6: 1000, 4: 1000, 2: 1000})
7 [4 7 9] [4 7 9] [0 1 2 3 5 6 8]
7 training: Counter({9: 167, 4: 157, 7: 152}) testing iid: Counter({9: 1000, 7: 1000, 4: 1000})
8 [1 7 8] [1 7 8] [0 2 3 4 5 6 9]
8 training: Counter({1: 167, 8: 162, 7: 152}) testing iid: Counter({8: 1000, 1: 1000, 7: 1000})
9 [0 6 9] [0 6 9] [1 2 3 4 5 7 8]
9 training: Counter({6: 200, 9: 167, 0: 147}) testing iid: Counter({0: 1000, 6: 1000, 9: 1000})
10 [0 7 9] [0 7 9] [1 2 3 4 5 6 8]
10 training: Counter({9: 167, 7: 152, 0: 147}) testing iid: Counter({0: 1000, 9: 1000, 7: 1000})
11 [1 6 9] [1 6 9] [0 2 3 4 5 7 8]
11 training: Counter({6: 200, 1: 167, 9: 167}) testing iid: Counter({6: 1000, 1: 1000, 9: 1000})
12 [0 1 2] [0 1 2] [3 4 5 6 7 8 9]
12 training: Counter({1: 167, 2: 167, 0: 147}) testing iid: Counter({0: 1000, 1: 1000, 2: 1000})
13 [1 3 8] [1 3 8] [0 2 4 5 6 7 9]
13 training: Counter({3: 179, 1: 167, 8: 162}) testing iid: Counter({3: 1000, 8: 1000, 1: 1000})
14 [3 4 8] [3 4 8] [0 1 2 5 6 7 9]
14 training: Counter({3: 179, 8: 162, 4: 157}) testing iid: Counter({3: 1000, 8: 1000, 4: 1000})
15 [5 8 9] [5 8 9] [0 1 2 3 4 6 7]
15 training: Counter({5: 186, 9: 167, 8: 162}) testing iid: Counter({8: 1000, 9: 1000, 5: 1000})
16 [3 6 7] [3 6 7] [0 1 2 4 5 8 9]
16 training: Counter({6: 200, 3: 179, 7: 152}) testing iid: Counter({3: 1000, 6: 1000, 7: 1000})
17 [5 6 7] [5 6 7] [0 1 2 3 4 8 9]
17 training: Counter({6: 200, 5: 186, 7: 152}) testing iid: Counter({6: 1000, 5: 1000, 7: 1000})
18 [1 8 9] [1 8 9] [0 2 3 4 5 6 7]
18 training: Counter({1: 167, 9: 167, 8: 162}) testing iid: Counter({8: 1000, 1: 1000, 9: 1000})
19 [3 4 9] [3 4 9] [0 1 2 5 6 7 8]
19 training: Counter({3: 179, 9: 167, 4: 157}) testing iid: Counter({3: 1000, 9: 1000, 4: 1000})
20 [0 1 8] [0 1 8] [2 3 4 5 6 7 9]
20 training: Counter({1: 167, 8: 162, 0: 147}) testing iid: Counter({8: 1000, 0: 1000, 1: 1000})
21 [0 1 4] [0 1 4] [2 3 5 6 7 8 9]
21 training: Counter({1: 167, 4: 157, 0: 147}) testing iid: Counter({0: 1000, 1: 1000, 4: 1000})
22 [2 3 9] [2 3 9] [0 1 4 5 6 7 8]
22 training: Counter({3: 179, 2: 167, 9: 167}) testing iid: Counter({3: 1000, 9: 1000, 2: 1000})
23 [0 2 3] [0 2 3] [1 4 5 6 7 8 9]
23 training: Counter({3: 179, 2: 167, 0: 147}) testing iid: Counter({3: 1000, 0: 1000, 2: 1000})
24 [2 4 9] [2 4 9] [0 1 3 5 6 7 8]
24 training: Counter({2: 167, 9: 167, 4: 157}) testing iid: Counter({9: 1000, 4: 1000, 2: 1000})
25 [5 7 9] [5 7 9] [0 1 2 3 4 6 8]
25 training: Counter({5: 185, 9: 167, 7: 152}) testing iid: Counter({9: 1000, 5: 1000, 7: 1000})
26 [6 8 9] [6 8 9] [0 1 2 3 4 5 7]
26 training: Counter({6: 200, 9: 167, 8: 162}) testing iid: Counter({8: 1000, 6: 1000, 9: 1000})
27 [3 4 7] [3 4 7] [0 1 2 5 6 8 9]
27 training: Counter({3: 179, 4: 156, 7: 152}) testing iid: Counter({3: 1000, 7: 1000, 4: 1000})
28 [5 8 9] [5 8 9] [0 1 2 3 4 6 7]
28 training: Counter({5: 185, 9: 167, 8: 162}) testing iid: Counter({8: 1000, 9: 1000, 5: 1000})
29 [3 6 9] [3 6 9] [0 1 2 4 5 7 8]
29 training: Counter({6: 200, 3: 179, 9: 167}) testing iid: Counter({3: 1000, 6: 1000, 9: 1000})
30 [0 2 8] [0 2 8] [1 3 4 5 6 7 9]
30 training: Counter({2: 167, 8: 161, 0: 147}) testing iid: Counter({8: 1000, 0: 1000, 2: 1000})
31 [1 7 9] [1 7 9] [0 2 3 4 5 6 8]
31 training: Counter({1: 167, 9: 167, 7: 152}) testing iid: Counter({1: 1000, 9: 1000, 7: 1000})
32 [2 3 7] [2 3 7] [0 1 4 5 6 8 9]
32 training: Counter({3: 179, 2: 167, 7: 152}) testing iid: Counter({3: 1000, 7: 1000, 2: 1000})
33 [0 3 8] [0 3 8] [1 2 4 5 6 7 9]
33 training: Counter({3: 179, 8: 161, 0: 147}) testing iid: Counter({3: 1000, 8: 1000, 0: 1000})
34 [1 4 7] [1 4 7] [0 2 3 5 6 8 9]
34 training: Counter({1: 167, 4: 156, 7: 152}) testing iid: Counter({1: 1000, 7: 1000, 4: 1000})
35 [1 3 5] [1 3 5] [0 2 4 6 7 8 9]
35 training: Counter({5: 185, 3: 179, 1: 167}) testing iid: Counter({3: 1000, 1: 1000, 5: 1000})
36 [0 6 8] [0 6 8] [1 2 3 4 5 7 9]
36 training: Counter({6: 200, 8: 161, 0: 147}) testing iid: Counter({8: 1000, 0: 1000, 6: 1000})
37 [4 6 7] [4 6 7] [0 1 2 3 5 8 9]
37 training: Counter({6: 200, 4: 156, 7: 152}) testing iid: Counter({6: 1000, 7: 1000, 4: 1000})
38 [5 6 8] [5 6 8] [0 1 2 3 4 7 9]
38 training: Counter({6: 200, 5: 185, 8: 161}) testing iid: Counter({8: 1000, 6: 1000, 5: 1000})
39 [2 5 9] [2 5 9] [0 1 3 4 6 7 8]
39 training: Counter({5: 185, 2: 167, 9: 167}) testing iid: Counter({9: 1000, 5: 1000, 2: 1000})
40 [0 7 8] [0 7 8] [1 2 3 4 5 6 9]
40 training: Counter({8: 161, 7: 152, 0: 147}) testing iid: Counter({8: 1000, 0: 1000, 7: 1000})
41 [1 4 7] [1 4 7] [0 2 3 5 6 8 9]
41 training: Counter({1: 167, 4: 156, 7: 152}) testing iid: Counter({1: 1000, 7: 1000, 4: 1000})
42 [2 4 7] [2 4 7] [0 1 3 5 6 8 9]
42 training: Counter({2: 167, 4: 156, 7: 152}) testing iid: Counter({7: 1000, 4: 1000, 2: 1000})
43 [0 3 9] [0 3 9] [1 2 4 5 6 7 8]
43 training: Counter({3: 179, 9: 167, 0: 147}) testing iid: Counter({3: 1000, 0: 1000, 9: 1000})
44 [0 2 4] [0 2 4] [1 3 5 6 7 8 9]
44 training: Counter({2: 167, 4: 156, 0: 147}) testing iid: Counter({0: 1000, 4: 1000, 2: 1000})
45 [1 5 7] [1 5 7] [0 2 3 4 6 8 9]
45 training: Counter({5: 185, 1: 167, 7: 152}) testing iid: Counter({1: 1000, 5: 1000, 7: 1000})
46 [6 7 9] [6 7 9] [0 1 2 3 4 5 8]
46 training: Counter({6: 200, 9: 167, 7: 152}) testing iid: Counter({6: 1000, 9: 1000, 7: 1000})
47 [4 7 8] [4 7 8] [0 1 2 3 5 6 9]
47 training: Counter({8: 161, 4: 156, 7: 151}) testing iid: Counter({8: 1000, 7: 1000, 4: 1000})
48 [0 1 8] [0 1 8] [2 3 4 5 6 7 9]
48 training: Counter({1: 167, 8: 161, 0: 147}) testing iid: Counter({8: 1000, 0: 1000, 1: 1000})
49 [2 8 9] [2 8 9] [0 1 3 4 5 6 7]
49 training: Counter({2: 167, 9: 167, 8: 161}) testing iid: Counter({8: 1000, 9: 1000, 2: 1000})
50 [0 1 3] [0 1 3] [2 4 5 6 7 8 9]
50 training: Counter({3: 179, 1: 167, 0: 147}) testing iid: Counter({3: 1000, 0: 1000, 1: 1000})
51 [1 2 7] [1 2 7] [0 3 4 5 6 8 9]
51 training: Counter({1: 167, 2: 167, 7: 151}) testing iid: Counter({1: 1000, 7: 1000, 2: 1000})
52 [0 2 6] [0 2 6] [1 3 4 5 7 8 9]
52 training: Counter({6: 200, 2: 167, 0: 147}) testing iid: Counter({0: 1000, 6: 1000, 2: 1000})
53 [2 3 9] [2 3 9] [0 1 4 5 6 7 8]
53 training: Counter({3: 179, 2: 167, 9: 166}) testing iid: Counter({3: 1000, 9: 1000, 2: 1000})
54 [2 4 6] [2 4 6] [0 1 3 5 7 8 9]
54 training: Counter({6: 200, 2: 167, 4: 156}) testing iid: Counter({6: 1000, 4: 1000, 2: 1000})
55 [0 5 7] [0 5 7] [1 2 3 4 6 8 9]
55 training: Counter({5: 185, 7: 151, 0: 147}) testing iid: Counter({0: 1000, 5: 1000, 7: 1000})
56 [1 5 6] [1 5 6] [0 2 3 4 7 8 9]
56 training: Counter({6: 200, 5: 185, 1: 167}) testing iid: Counter({6: 1000, 1: 1000, 5: 1000})
57 [4 6 7] [4 6 7] [0 1 2 3 5 8 9]
57 training: Counter({6: 200, 4: 156, 7: 151}) testing iid: Counter({6: 1000, 7: 1000, 4: 1000})
58 [0 6 8] [0 6 8] [1 2 3 4 5 7 9]
58 training: Counter({6: 200, 8: 161, 0: 147}) testing iid: Counter({8: 1000, 0: 1000, 6: 1000})
59 [1 5 9] [1 5 9] [0 2 3 4 6 7 8]
59 training: Counter({5: 185, 1: 167, 9: 166}) testing iid: Counter({1: 1000, 9: 1000, 5: 1000})
60 [0 1 2] [0 1 2] [3 4 5 6 7 8 9]
60 training: Counter({1: 167, 2: 167, 0: 147}) testing iid: Counter({0: 1000, 1: 1000, 2: 1000})
61 [1 4 5] [1 4 5] [0 2 3 6 7 8 9]
61 training: Counter({5: 185, 1: 166, 4: 156}) testing iid: Counter({1: 1000, 5: 1000, 4: 1000})
62 [0 2 7] [0 2 7] [1 3 4 5 6 8 9]
62 training: Counter({2: 167, 7: 151, 0: 147}) testing iid: Counter({0: 1000, 7: 1000, 2: 1000})
63 [3 8 9] [3 8 9] [0 1 2 4 5 6 7]
63 training: Counter({3: 179, 9: 166, 8: 161}) testing iid: Counter({3: 1000, 8: 1000, 9: 1000})
64 [4 5 7] [4 5 7] [0 1 2 3 6 8 9]
64 training: Counter({5: 185, 4: 156, 7: 151}) testing iid: Counter({5: 1000, 7: 1000, 4: 1000})
65 [0 5 9] [0 5 9] [1 2 3 4 6 7 8]
65 training: Counter({5: 185, 9: 166, 0: 147}) testing iid: Counter({0: 1000, 9: 1000, 5: 1000})
66 [3 6 9] [3 6 9] [0 1 2 4 5 7 8]
66 training: Counter({6: 200, 3: 178, 9: 166}) testing iid: Counter({3: 1000, 6: 1000, 9: 1000})
67 [1 4 7] [1 4 7] [0 2 3 5 6 8 9]
67 training: Counter({1: 166, 4: 156, 7: 151}) testing iid: Counter({1: 1000, 7: 1000, 4: 1000})
68 [4 6 8] [4 6 8] [0 1 2 3 5 7 9]
68 training: Counter({6: 200, 8: 161, 4: 156}) testing iid: Counter({8: 1000, 6: 1000, 4: 1000})
69 [2 8 9] [2 8 9] [0 1 3 4 5 6 7]
69 training: Counter({2: 166, 9: 166, 8: 161}) testing iid: Counter({8: 1000, 9: 1000, 2: 1000})
70 [0 5 7] [0 5 7] [1 2 3 4 6 8 9]
70 training: Counter({5: 185, 7: 151, 0: 147}) testing iid: Counter({0: 1000, 5: 1000, 7: 1000})
71 [1 4 5] [1 4 5] [0 2 3 6 7 8 9]
71 training: Counter({5: 185, 1: 166, 4: 156}) testing iid: Counter({1: 1000, 5: 1000, 4: 1000})
72 [2 5 8] [2 5 8] [0 1 3 4 6 7 9]
72 training: Counter({5: 185, 2: 166, 8: 161}) testing iid: Counter({8: 1000, 5: 1000, 2: 1000})
73 [3 5 8] [3 5 8] [0 1 2 4 6 7 9]
73 training: Counter({5: 185, 3: 178, 8: 161}) testing iid: Counter({3: 1000, 8: 1000, 5: 1000})
74 [1 4 8] [1 4 8] [0 2 3 5 6 7 9]
74 training: Counter({1: 166, 8: 161, 4: 156}) testing iid: Counter({8: 1000, 1: 1000, 4: 1000})
75 [0 5 7] [0 5 7] [1 2 3 4 6 8 9]
75 training: Counter({5: 185, 7: 151, 0: 147}) testing iid: Counter({0: 1000, 5: 1000, 7: 1000})
76 [3 4 6] [3 4 6] [0 1 2 5 7 8 9]
76 training: Counter({6: 200, 3: 178, 4: 156}) testing iid: Counter({3: 1000, 6: 1000, 4: 1000})
77 [0 2 7] [0 2 7] [1 3 4 5 6 8 9]
77 training: Counter({2: 166, 7: 151, 0: 147}) testing iid: Counter({0: 1000, 7: 1000, 2: 1000})
78 [3 5 8] [3 5 8] [0 1 2 4 6 7 9]
78 training: Counter({5: 185, 3: 178, 8: 161}) testing iid: Counter({3: 1000, 8: 1000, 5: 1000})
79 [1 2 9] [1 2 9] [0 3 4 5 6 7 8]
79 training: Counter({1: 166, 2: 166, 9: 166}) testing iid: Counter({1: 1000, 9: 1000, 2: 1000})
80 [0 3 4] [0 3 4] [1 2 5 6 7 8 9]
80 training: Counter({3: 178, 4: 156, 0: 147}) testing iid: Counter({3: 1000, 0: 1000, 4: 1000})
81 [0 1 6] [0 1 6] [2 3 4 5 7 8 9]
81 training: Counter({6: 200, 1: 166, 0: 147}) testing iid: Counter({0: 1000, 6: 1000, 1: 1000})
82 [0 2 7] [0 2 7] [1 3 4 5 6 8 9]
82 training: Counter({2: 166, 7: 151, 0: 147}) testing iid: Counter({0: 1000, 7: 1000, 2: 1000})
83 [2 3 8] [2 3 8] [0 1 4 5 6 7 9]
83 training: Counter({3: 178, 2: 166, 8: 161}) testing iid: Counter({3: 1000, 8: 1000, 2: 1000})
84 [0 3 4] [0 3 4] [1 2 5 6 7 8 9]
84 training: Counter({3: 178, 4: 156, 0: 147}) testing iid: Counter({3: 1000, 0: 1000, 4: 1000})
85 [4 5 8] [4 5 8] [0 1 2 3 6 7 9]
85 training: Counter({5: 185, 8: 161, 4: 156}) testing iid: Counter({8: 1000, 5: 1000, 4: 1000})
86 [2 6 9] [2 6 9] [0 1 3 4 5 7 8]
86 training: Counter({6: 200, 2: 166, 9: 166}) testing iid: Counter({6: 1000, 9: 1000, 2: 1000})
87 [0 3 7] [0 3 7] [1 2 4 5 6 8 9]
87 training: Counter({3: 178, 7: 151, 0: 147}) testing iid: Counter({3: 1000, 0: 1000, 7: 1000})
88 [1 4 8] [1 4 8] [0 2 3 5 6 7 9]
88 training: Counter({1: 166, 8: 161, 4: 156}) testing iid: Counter({8: 1000, 1: 1000, 4: 1000})
89 [3 6 9] [3 6 9] [0 1 2 4 5 7 8]
89 training: Counter({6: 200, 3: 178, 9: 166}) testing iid: Counter({3: 1000, 6: 1000, 9: 1000})
90 [0 3 7] [0 3 7] [1 2 4 5 6 8 9]
90 training: Counter({3: 178, 7: 151, 0: 147}) testing iid: Counter({3: 1000, 0: 1000, 7: 1000})
91 [1 3 5] [1 3 5] [0 2 4 6 7 8 9]
91 training: Counter({5: 185, 3: 178, 1: 166}) testing iid: Counter({3: 1000, 1: 1000, 5: 1000})
92 [0 2 4] [0 2 4] [1 3 5 6 7 8 9]
92 training: Counter({2: 166, 4: 156, 0: 147}) testing iid: Counter({0: 1000, 4: 1000, 2: 1000})
93 [3 5 8] [3 5 8] [0 1 2 4 6 7 9]
93 training: Counter({5: 185, 3: 178, 8: 161}) testing iid: Counter({3: 1000, 8: 1000, 5: 1000})
94 [4 6 7] [4 6 7] [0 1 2 3 5 8 9]
94 training: Counter({6: 200, 4: 156, 7: 151}) testing iid: Counter({6: 1000, 7: 1000, 4: 1000})
95 [1 5 7] [1 5 7] [0 2 3 4 6 8 9]
95 training: Counter({5: 185, 1: 166, 7: 151}) testing iid: Counter({1: 1000, 5: 1000, 7: 1000})
96 [0 2 6] [0 2 6] [1 3 4 5 7 8 9]
96 training: Counter({6: 200, 2: 166, 0: 147}) testing iid: Counter({0: 1000, 6: 1000, 2: 1000})
97 [2 7 8] [2 7 8] [0 1 3 4 5 6 9]
97 training: Counter({2: 166, 8: 161, 7: 151}) testing iid: Counter({8: 1000, 7: 1000, 2: 1000})
98 [1 4 8] [1 4 8] [0 2 3 5 6 7 9]
98 training: Counter({1: 166, 8: 161, 4: 156}) testing iid: Counter({8: 1000, 1: 1000, 4: 1000})
99 [0 4 9] [0 4 9] [1 2 3 5 6 7 8]
99 training: Counter({9: 166, 4: 156, 0: 147}) testing iid: Counter({0: 1000, 9: 1000, 4: 1000})
Num_samples of Training set per client: [496, 520, 482, 531, 491, 510, 524, 476, 481, 514, 466, 534, 481, 508, 498, 515, 531, 538, 496, 503, 476, 471, 513, 493, 491, 504, 529, 487, 514, 546, 475, 486, 498, 487, 475, 531, 508, 508, 546, 519, 460, 475, 475, 493, 470, 504, 519, 468, 475, 495, 493, 485, 514, 512, 523, 483, 552, 507, 508, 518, 481, 507, 465, 506, 492, 498, 544, 473, 517, 493, 483, 507, 512, 524, 483, 483, 534, 464, 524, 498, 481, 513, 464, 505, 481, 502, 532, 476, 483, 544, 476, 529, 469, 524, 507, 502, 513, 478, 483, 469]
Total_training_samples: 50000
Global test set: 10000
Finish Generating Samples, distribution saved
MobileNetV2(
  (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (layers): Sequential(
    (0): Block(
      (conv1): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): Block(
      (conv1): Conv2d(16, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=96, bias=False)
      (bn2): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(96, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(16, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (2): Block(
      (conv1): Conv2d(24, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(144, 144, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=144, bias=False)
      (bn2): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(144, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (3): Block(
      (conv1): Conv2d(24, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(144, 144, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=144, bias=False)
      (bn2): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(144, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (4): Block(
      (conv1): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
      (bn2): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(192, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (5): Block(
      (conv1): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
      (bn2): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(192, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (6): Block(
      (conv1): Conv2d(32, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(192, 192, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=192, bias=False)
      (bn2): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(192, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (7): Block(
      (conv1): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
      (bn2): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (8): Block(
      (conv1): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
      (bn2): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (9): Block(
      (conv1): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
      (bn2): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (10): Block(
      (conv1): Conv2d(64, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
      (bn2): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(384, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(64, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (11): Block(
      (conv1): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)
      (bn2): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (12): Block(
      (conv1): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(576, 576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=576, bias=False)
      (bn2): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(576, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (13): Block(
      (conv1): Conv2d(96, 576, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(576, 576, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=576, bias=False)
      (bn2): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(576, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (14): Block(
      (conv1): Conv2d(160, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(960, 960, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=960, bias=False)
      (bn2): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(960, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (15): Block(
      (conv1): Conv2d(160, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(960, 960, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=960, bias=False)
      (bn2): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(960, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential()
    )
    (16): Block(
      (conv1): Conv2d(160, 960, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv2): Conv2d(960, 960, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=960, bias=False)
      (bn2): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (conv3): Conv2d(960, 320, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn3): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (shortcut): Sequential(
        (0): Conv2d(160, 320, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (conv2): Conv2d(320, 1280, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn2): BatchNorm2d(1280, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (linear): Linear(in_features=1280, out_features=10, bias=True)
)
number of parameters: 2296922
clients initializting...
output size: 10
  0%|          | 0/100 [00:00<?, ?it/s]  1%|          | 1/100 [00:00<01:02,  1.59it/s]  2%|▏         | 2/100 [00:01<01:01,  1.59it/s]  3%|▎         | 3/100 [00:01<01:00,  1.59it/s]  4%|▍         | 4/100 [00:02<01:00,  1.59it/s]  5%|▌         | 5/100 [00:03<00:59,  1.59it/s]  6%|▌         | 6/100 [00:03<00:59,  1.58it/s]  7%|▋         | 7/100 [00:04<00:58,  1.59it/s]  8%|▊         | 8/100 [00:05<00:57,  1.60it/s]  9%|▉         | 9/100 [00:05<00:56,  1.60it/s] 10%|█         | 10/100 [00:06<00:55,  1.62it/s] 11%|█         | 11/100 [00:06<00:54,  1.64it/s] 12%|█▏        | 12/100 [00:07<00:53,  1.66it/s] 13%|█▎        | 13/100 [00:08<00:52,  1.67it/s] 14%|█▍        | 14/100 [00:08<00:51,  1.66it/s] 15%|█▌        | 15/100 [00:09<00:51,  1.64it/s] 16%|█▌        | 16/100 [00:09<00:51,  1.64it/s] 17%|█▋        | 17/100 [00:10<00:50,  1.63it/s] 18%|█▊        | 18/100 [00:11<00:50,  1.64it/s] 19%|█▉        | 19/100 [00:11<00:49,  1.65it/s] 20%|██        | 20/100 [00:12<00:48,  1.64it/s] 21%|██        | 21/100 [00:12<00:47,  1.65it/s] 22%|██▏       | 22/100 [00:13<00:47,  1.65it/s] 23%|██▎       | 23/100 [00:14<00:46,  1.65it/s] 24%|██▍       | 24/100 [00:14<00:45,  1.66it/s] 25%|██▌       | 25/100 [00:15<00:45,  1.66it/s] 26%|██▌       | 26/100 [00:15<00:44,  1.67it/s] 27%|██▋       | 27/100 [00:16<00:43,  1.67it/s] 28%|██▊       | 28/100 [00:20<01:53,  1.58s/it] 29%|██▉       | 29/100 [00:20<01:31,  1.28s/it] 30%|███       | 30/100 [00:21<01:15,  1.08s/it] 31%|███       | 31/100 [00:22<01:04,  1.07it/s] 32%|███▏      | 32/100 [00:22<00:56,  1.20it/s] 33%|███▎      | 33/100 [00:23<00:50,  1.32it/s] 34%|███▍      | 34/100 [00:23<00:46,  1.41it/s] 35%|███▌      | 35/100 [00:24<00:44,  1.48it/s] 36%|███▌      | 36/100 [00:25<00:41,  1.53it/s] 37%|███▋      | 37/100 [00:25<00:39,  1.58it/s] 38%|███▊      | 38/100 [00:26<00:38,  1.61it/s] 39%|███▉      | 39/100 [00:26<00:37,  1.63it/s] 40%|████      | 40/100 [00:27<00:36,  1.63it/s] 41%|████      | 41/100 [00:28<00:35,  1.65it/s] 42%|████▏     | 42/100 [00:28<00:35,  1.65it/s] 43%|████▎     | 43/100 [00:29<00:34,  1.67it/s] 44%|████▍     | 44/100 [00:29<00:33,  1.68it/s] 45%|████▌     | 45/100 [00:30<00:32,  1.68it/s] 46%|████▌     | 46/100 [00:31<00:32,  1.69it/s] 47%|████▋     | 47/100 [00:31<00:31,  1.66it/s] 48%|████▊     | 48/100 [00:32<00:31,  1.64it/s] 49%|████▉     | 49/100 [00:32<00:31,  1.61it/s] 50%|█████     | 50/100 [00:33<00:31,  1.61it/s] 51%|█████     | 51/100 [00:34<00:30,  1.61it/s] 52%|█████▏    | 52/100 [00:34<00:29,  1.60it/s] 53%|█████▎    | 53/100 [00:35<00:29,  1.61it/s] 54%|█████▍    | 54/100 [00:36<00:28,  1.62it/s] 55%|█████▌    | 55/100 [00:36<00:27,  1.64it/s] 56%|█████▌    | 56/100 [00:37<00:26,  1.63it/s] 57%|█████▋    | 57/100 [00:37<00:26,  1.63it/s] 58%|█████▊    | 58/100 [00:38<00:25,  1.65it/s] 59%|█████▉    | 59/100 [00:39<00:25,  1.64it/s] 60%|██████    | 60/100 [00:39<00:24,  1.64it/s] 61%|██████    | 61/100 [00:40<00:23,  1.66it/s] 62%|██████▏   | 62/100 [00:40<00:22,  1.68it/s] 63%|██████▎   | 63/100 [00:41<00:22,  1.67it/s] 64%|██████▍   | 64/100 [00:45<00:57,  1.59s/it] 65%|██████▌   | 65/100 [00:46<00:45,  1.30s/it] 66%|██████▌   | 66/100 [00:46<00:37,  1.09s/it] 67%|██████▋   | 67/100 [00:47<00:31,  1.06it/s] 68%|██████▊   | 68/100 [00:47<00:26,  1.19it/s] 69%|██████▉   | 69/100 [00:48<00:23,  1.31it/s] 70%|███████   | 70/100 [00:49<00:21,  1.40it/s] 71%|███████   | 71/100 [00:49<00:19,  1.48it/s] 72%|███████▏  | 72/100 [00:50<00:18,  1.53it/s] 73%|███████▎  | 73/100 [00:50<00:17,  1.56it/s] 74%|███████▍  | 74/100 [00:51<00:16,  1.58it/s] 75%|███████▌  | 75/100 [00:52<00:15,  1.58it/s] 76%|███████▌  | 76/100 [00:52<00:15,  1.59it/s] 77%|███████▋  | 77/100 [00:53<00:14,  1.60it/s] 78%|███████▊  | 78/100 [00:53<00:13,  1.62it/s] 79%|███████▉  | 79/100 [00:54<00:12,  1.64it/s] 80%|████████  | 80/100 [00:55<00:12,  1.63it/s] 81%|████████  | 81/100 [00:55<00:11,  1.65it/s] 82%|████████▏ | 82/100 [00:56<00:10,  1.65it/s] 83%|████████▎ | 83/100 [00:56<00:10,  1.67it/s] 84%|████████▍ | 84/100 [00:57<00:09,  1.70it/s] 85%|████████▌ | 85/100 [00:58<00:08,  1.72it/s] 86%|████████▌ | 86/100 [00:58<00:08,  1.71it/s] 87%|████████▋ | 87/100 [00:59<00:07,  1.70it/s] 88%|████████▊ | 88/100 [00:59<00:07,  1.68it/s] 89%|████████▉ | 89/100 [01:00<00:06,  1.64it/s] 90%|█████████ | 90/100 [01:01<00:06,  1.62it/s] 91%|█████████ | 91/100 [01:01<00:05,  1.60it/s] 92%|█████████▏| 92/100 [01:02<00:05,  1.59it/s] 93%|█████████▎| 93/100 [01:02<00:04,  1.59it/s] 94%|█████████▍| 94/100 [01:03<00:03,  1.59it/s] 95%|█████████▌| 95/100 [01:04<00:03,  1.58it/s] 96%|█████████▌| 96/100 [01:04<00:02,  1.60it/s] 97%|█████████▋| 97/100 [01:05<00:01,  1.59it/s] 98%|█████████▊| 98/100 [01:06<00:01,  1.63it/s] 99%|█████████▉| 99/100 [01:06<00:00,  1.62it/s]100%|██████████| 100/100 [01:07<00:00,  1.62it/s]100%|██████████| 100/100 [01:07<00:00,  1.49it/s]
Number of users per round / total users: 10  /  100
Finished creating FL server.
=== Training starts: algorithm FedFea ===
-------------Round number:  0  -------------
selected users: [26, 86, 2, 55, 75, 93, 16, 73, 54, 95]
random features: torch.Size([52, 96, 8, 8]) torch.Size([52])
random features: torch.Size([53, 96, 8, 8]) torch.Size([53])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([52, 96, 8, 8]) torch.Size([52])
random features: torch.Size([53, 96, 8, 8]) torch.Size([53])
random features: torch.Size([52, 96, 8, 8]) torch.Size([52])
random features: torch.Size([52, 96, 8, 8]) torch.Size([52])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
all data: 508
Local adapation with distilling: 0.001
training loss: tensor(1.7125) feature loss: tensor(0.4520)
Local adapation with distilling: 0.001
training loss: tensor(1.8611) feature loss: tensor(0.4636)
Local adapation with distilling: 0.001
training loss: tensor(1.8836) feature loss: tensor(0.4490)
Local adapation with distilling: 0.001
training loss: tensor(1.9205) feature loss: tensor(0.4717)
Local adapation with distilling: 0.001
training loss: tensor(1.9095) feature loss: tensor(0.4674)
Local adapation with distilling: 0.001
training loss: tensor(1.9348) feature loss: tensor(0.4741)
Local adapation with distilling: 0.001
training loss: tensor(1.9856) feature loss: tensor(0.4985)
Local adapation with distilling: 0.001
training loss: tensor(1.8239) feature loss: tensor(0.4639)
Local adapation with distilling: 0.001
training loss: tensor(2.1167) feature loss: tensor(0.4814)
Local adapation with distilling: 0.001
training loss: tensor(1.8480) feature loss: tensor(0.4647)
Global Model Acc on global data: 0.1101 length of data: 10000
save a model
-------------Round number:  1  -------------
selected users: [80, 84, 33, 81, 93, 17, 36, 82, 69, 65]
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
random features: torch.Size([52, 96, 8, 8]) torch.Size([52])
random features: torch.Size([53, 96, 8, 8]) torch.Size([53])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([46, 96, 8, 8]) torch.Size([46])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
all data: 494
Local adapation with distilling: 0.000982
training loss: tensor(1.5104) feature loss: tensor(0.5226)
Local adapation with distilling: 0.000982
training loss: tensor(1.5266) feature loss: tensor(0.5350)
Local adapation with distilling: 0.000982
training loss: tensor(1.4752) feature loss: tensor(0.5260)
Local adapation with distilling: 0.000982
training loss: tensor(1.5908) feature loss: tensor(0.5198)
Local adapation with distilling: 0.000982
training loss: tensor(1.4715) feature loss: tensor(0.5004)
Local adapation with distilling: 0.000982
training loss: tensor(1.5074) feature loss: tensor(0.5119)
Local adapation with distilling: 0.000982
training loss: tensor(1.4180) feature loss: tensor(0.5116)
Local adapation with distilling: 0.000982
training loss: tensor(1.6000) feature loss: tensor(0.5280)
Local adapation with distilling: 0.000982
training loss: tensor(1.5090) feature loss: tensor(0.5133)
Local adapation with distilling: 0.000982
training loss: tensor(1.4358) feature loss: tensor(0.5080)
Global Model Acc on global data: 0.2187 length of data: 10000
save a model
-------------Round number:  2  -------------
selected users: [83, 30, 56, 24, 16, 23, 2, 27, 28, 13]
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
random features: torch.Size([55, 96, 8, 8]) torch.Size([55])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([53, 96, 8, 8]) torch.Size([53])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.000964
training loss: tensor(1.3263) feature loss: tensor(0.4837)
Local adapation with distilling: 0.000964
training loss: tensor(1.3516) feature loss: tensor(0.4892)
Local adapation with distilling: 0.000964
training loss: tensor(1.2748) feature loss: tensor(0.4701)
Local adapation with distilling: 0.000964
training loss: tensor(1.3753) feature loss: tensor(0.4865)
Local adapation with distilling: 0.000964
training loss: tensor(1.3983) feature loss: tensor(0.5044)
Local adapation with distilling: 0.000964
training loss: tensor(1.3862) feature loss: tensor(0.4898)
Local adapation with distilling: 0.000964
training loss: tensor(1.3561) feature loss: tensor(0.4919)
Local adapation with distilling: 0.000964
training loss: tensor(1.4809) feature loss: tensor(0.5195)
Local adapation with distilling: 0.000964
training loss: tensor(1.5228) feature loss: tensor(0.4935)
Local adapation with distilling: 0.000964
training loss: tensor(1.3502) feature loss: tensor(0.4808)
Global Model Acc on global data: 0.1806 length of data: 10000
-------------Round number:  3  -------------
selected users: [93, 67, 6, 64, 96, 83, 98, 42, 25, 15]
random features: torch.Size([52, 96, 8, 8]) torch.Size([52])
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
random features: torch.Size([52, 96, 8, 8]) torch.Size([52])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
all data: 497
Local adapation with distilling: 0.000946
training loss: tensor(1.2000) feature loss: tensor(0.4948)
Local adapation with distilling: 0.000946
training loss: tensor(1.3284) feature loss: tensor(0.5103)
Local adapation with distilling: 0.000946
training loss: tensor(1.3121) feature loss: tensor(0.4950)
Local adapation with distilling: 0.000946
training loss: tensor(1.3563) feature loss: tensor(0.5352)
Local adapation with distilling: 0.000946
training loss: tensor(1.4983) feature loss: tensor(0.4808)
Local adapation with distilling: 0.000946
training loss: tensor(1.1916) feature loss: tensor(0.4594)
Local adapation with distilling: 0.000946
training loss: tensor(1.2286) feature loss: tensor(0.5017)
Local adapation with distilling: 0.000946
training loss: tensor(1.3651) feature loss: tensor(0.5053)
Local adapation with distilling: 0.000946
training loss: tensor(1.2448) feature loss: tensor(0.5086)
Local adapation with distilling: 0.000946
training loss: tensor(1.4143) feature loss: tensor(0.4841)
Global Model Acc on global data: 0.2049 length of data: 10000
-------------Round number:  4  -------------
selected users: [20, 10, 96, 16, 63, 24, 53, 97, 41, 47]
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
random features: torch.Size([46, 96, 8, 8]) torch.Size([46])
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
random features: torch.Size([53, 96, 8, 8]) torch.Size([53])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([57, 96, 8, 8]) torch.Size([57])
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
random features: torch.Size([46, 96, 8, 8]) torch.Size([46])
all data: 493
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.3583) feature loss: tensor(0.5116)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.3160) feature loss: tensor(0.4988)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.3690) feature loss: tensor(0.4781)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.2557) feature loss: tensor(0.4974)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.1717) feature loss: tensor(0.4777)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.1583) feature loss: tensor(0.4676)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.1246) feature loss: tensor(0.4929)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.1616) feature loss: tensor(0.4822)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.2153) feature loss: tensor(0.4842)
Local adapation with distilling: 0.0009280000000000001
training loss: tensor(1.1765) feature loss: tensor(0.4774)
Global Model Acc on global data: 0.2278 length of data: 10000
save a model
-------------Round number:  5  -------------
selected users: [66, 32, 46, 28, 74, 23, 10, 20, 17, 35]
random features: torch.Size([54, 96, 8, 8]) torch.Size([54])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([46, 96, 8, 8]) torch.Size([46])
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
random features: torch.Size([53, 96, 8, 8]) torch.Size([53])
random features: torch.Size([53, 96, 8, 8]) torch.Size([53])
all data: 501
Local adapation with distilling: 0.00091
training loss: tensor(1.1293) feature loss: tensor(0.5021)
Local adapation with distilling: 0.00091
training loss: tensor(1.2328) feature loss: tensor(0.4957)
Local adapation with distilling: 0.00091
training loss: tensor(1.1912) feature loss: tensor(0.5020)
Local adapation with distilling: 0.00091
training loss: tensor(1.2079) feature loss: tensor(0.5091)
Local adapation with distilling: 0.00091
training loss: tensor(1.1557) feature loss: tensor(0.4937)
Local adapation with distilling: 0.00091
training loss: tensor(1.1474) feature loss: tensor(0.4911)
Local adapation with distilling: 0.00091
training loss: tensor(1.1555) feature loss: tensor(0.5062)
Local adapation with distilling: 0.00091
training loss: tensor(1.2572) feature loss: tensor(0.5102)
Local adapation with distilling: 0.00091
training loss: tensor(1.2081) feature loss: tensor(0.5236)
Local adapation with distilling: 0.00091
training loss: tensor(1.1628) feature loss: tensor(0.5160)
Global Model Acc on global data: 0.319 length of data: 10000
save a model
-------------Round number:  6  -------------
selected users: [17, 34, 0, 45, 60, 86, 20, 47, 44, 81]
random features: torch.Size([53, 96, 8, 8]) torch.Size([53])
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([53, 96, 8, 8]) torch.Size([53])
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
random features: torch.Size([46, 96, 8, 8]) torch.Size([46])
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
all data: 491
Local adapation with distilling: 0.000892
training loss: tensor(1.0908) feature loss: tensor(0.4735)
Local adapation with distilling: 0.000892
training loss: tensor(1.1200) feature loss: tensor(0.4798)
Local adapation with distilling: 0.000892
training loss: tensor(1.1772) feature loss: tensor(0.4878)
Local adapation with distilling: 0.000892
training loss: tensor(1.0815) feature loss: tensor(0.4831)
Local adapation with distilling: 0.000892
training loss: tensor(1.1238) feature loss: tensor(0.4842)
Local adapation with distilling: 0.000892
training loss: tensor(1.0333) feature loss: tensor(0.4708)
Local adapation with distilling: 0.000892
training loss: tensor(1.1142) feature loss: tensor(0.4787)
Local adapation with distilling: 0.000892
training loss: tensor(1.0745) feature loss: tensor(0.4713)
Local adapation with distilling: 0.000892
training loss: tensor(1.1499) feature loss: tensor(0.4787)
Local adapation with distilling: 0.000892
training loss: tensor(1.3275) feature loss: tensor(0.4815)
Global Model Acc on global data: 0.3749 length of data: 10000
save a model
-------------Round number:  7  -------------
selected users: [37, 26, 78, 91, 49, 15, 93, 71, 86, 22]
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([52, 96, 8, 8]) torch.Size([52])
random features: torch.Size([52, 96, 8, 8]) torch.Size([52])
random features: torch.Size([52, 96, 8, 8]) torch.Size([52])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
random features: torch.Size([52, 96, 8, 8]) torch.Size([52])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([53, 96, 8, 8]) torch.Size([53])
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
all data: 512
Local adapation with distilling: 0.000874
training loss: tensor(1.0835) feature loss: tensor(0.3745)
Local adapation with distilling: 0.000874
training loss: tensor(0.8995) feature loss: tensor(0.3859)
Local adapation with distilling: 0.000874
training loss: tensor(0.9772) feature loss: tensor(0.3937)
Local adapation with distilling: 0.000874
training loss: tensor(0.9928) feature loss: tensor(0.3873)
Local adapation with distilling: 0.000874
training loss: tensor(0.9878) feature loss: tensor(0.3810)
Local adapation with distilling: 0.000874
training loss: tensor(1.0044) feature loss: tensor(0.3951)
Local adapation with distilling: 0.000874
training loss: tensor(0.9909) feature loss: tensor(0.3921)
Local adapation with distilling: 0.000874
training loss: tensor(0.9763) feature loss: tensor(0.3742)
Local adapation with distilling: 0.000874
training loss: tensor(0.9221) feature loss: tensor(0.3764)
Local adapation with distilling: 0.000874
training loss: tensor(1.0978) feature loss: tensor(0.3966)
Global Model Acc on global data: 0.3407 length of data: 10000
-------------Round number:  8  -------------
selected users: [17, 23, 1, 44, 55, 99, 86, 29, 62, 33]
random features: torch.Size([53, 96, 8, 8]) torch.Size([53])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([52, 96, 8, 8]) torch.Size([52])
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([46, 96, 8, 8]) torch.Size([46])
random features: torch.Size([53, 96, 8, 8]) torch.Size([53])
random features: torch.Size([54, 96, 8, 8]) torch.Size([54])
random features: torch.Size([46, 96, 8, 8]) torch.Size([46])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
all data: 496
Local adapation with distilling: 0.000856
training loss: tensor(0.9135) feature loss: tensor(0.4066)
Local adapation with distilling: 0.000856
training loss: tensor(0.9856) feature loss: tensor(0.4121)
Local adapation with distilling: 0.000856
training loss: tensor(0.9517) feature loss: tensor(0.3989)
Local adapation with distilling: 0.000856
training loss: tensor(1.0077) feature loss: tensor(0.4131)
Local adapation with distilling: 0.000856
training loss: tensor(1.0130) feature loss: tensor(0.4188)
Local adapation with distilling: 0.000856
training loss: tensor(0.9909) feature loss: tensor(0.4176)
Local adapation with distilling: 0.000856
training loss: tensor(0.8500) feature loss: tensor(0.4039)
Local adapation with distilling: 0.000856
training loss: tensor(0.9144) feature loss: tensor(0.4044)
Local adapation with distilling: 0.000856
training loss: tensor(1.0386) feature loss: tensor(0.4416)
Local adapation with distilling: 0.000856
training loss: tensor(1.0020) feature loss: tensor(0.4026)
Global Model Acc on global data: 0.3579 length of data: 10000
-------------Round number:  9  -------------
selected users: [75, 42, 46, 68, 3, 39, 23, 20, 70, 73]
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
random features: torch.Size([53, 96, 8, 8]) torch.Size([53])
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([52, 96, 8, 8]) torch.Size([52])
all data: 497
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.9175) feature loss: tensor(0.3685)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.9580) feature loss: tensor(0.3666)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.8494) feature loss: tensor(0.3643)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.8735) feature loss: tensor(0.3725)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.9568) feature loss: tensor(0.3793)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.9032) feature loss: tensor(0.3594)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.8858) feature loss: tensor(0.3592)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.9752) feature loss: tensor(0.3759)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.9087) feature loss: tensor(0.3705)
Local adapation with distilling: 0.0008380000000000001
training loss: tensor(0.8955) feature loss: tensor(0.3668)
Global Model Acc on global data: 0.3813 length of data: 10000
save a model
-------------Round number:  10  -------------
selected users: [19, 14, 43, 37, 66, 3, 79, 41, 38, 68]
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([54, 96, 8, 8]) torch.Size([54])
random features: torch.Size([53, 96, 8, 8]) torch.Size([53])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
random features: torch.Size([54, 96, 8, 8]) torch.Size([54])
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
all data: 506
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.8697) feature loss: tensor(0.3677)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.8511) feature loss: tensor(0.3668)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.8797) feature loss: tensor(0.3657)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.8920) feature loss: tensor(0.3607)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.8336) feature loss: tensor(0.3683)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.8955) feature loss: tensor(0.3641)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.9222) feature loss: tensor(0.3544)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.9089) feature loss: tensor(0.3693)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.8308) feature loss: tensor(0.3643)
Local adapation with distilling: 0.0008200000000000001
training loss: tensor(0.8834) feature loss: tensor(0.3657)
Global Model Acc on global data: 0.344 length of data: 10000
-------------Round number:  11  -------------
selected users: [46, 49, 22, 58, 41, 98, 62, 29, 30, 51]
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([46, 96, 8, 8]) torch.Size([46])
random features: torch.Size([54, 96, 8, 8]) torch.Size([54])
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
all data: 491
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.8148) feature loss: tensor(0.3720)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.8697) feature loss: tensor(0.3914)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(1.0013) feature loss: tensor(0.3850)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.8544) feature loss: tensor(0.3889)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.8513) feature loss: tensor(0.3783)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.8561) feature loss: tensor(0.3798)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.9013) feature loss: tensor(0.4120)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.8249) feature loss: tensor(0.3716)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.9615) feature loss: tensor(0.4055)
Local adapation with distilling: 0.0008020000000000001
training loss: tensor(0.9180) feature loss: tensor(0.4007)
Global Model Acc on global data: 0.3563 length of data: 10000
-------------Round number:  12  -------------
selected users: [17, 41, 92, 14, 68, 31, 89, 15, 21, 60]
random features: torch.Size([53, 96, 8, 8]) torch.Size([53])
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
random features: torch.Size([46, 96, 8, 8]) torch.Size([46])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([54, 96, 8, 8]) torch.Size([54])
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
all data: 494
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.8159) feature loss: tensor(0.3520)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.7812) feature loss: tensor(0.3450)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.9055) feature loss: tensor(0.3577)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.7631) feature loss: tensor(0.3531)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.7911) feature loss: tensor(0.3485)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.9104) feature loss: tensor(0.3567)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.7957) feature loss: tensor(0.3502)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(1.0391) feature loss: tensor(0.3596)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.8444) feature loss: tensor(0.3575)
Local adapation with distilling: 0.0007840000000000001
training loss: tensor(0.8617) feature loss: tensor(0.3643)
Global Model Acc on global data: 0.3478 length of data: 10000
-------------Round number:  13  -------------
selected users: [37, 62, 83, 14, 43, 9, 44, 31, 69, 57]
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([46, 96, 8, 8]) torch.Size([46])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
all data: 489
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.8071) feature loss: tensor(0.3557)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.8341) feature loss: tensor(0.3798)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.8192) feature loss: tensor(0.3688)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.7302) feature loss: tensor(0.3575)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.7990) feature loss: tensor(0.3695)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(1.1706) feature loss: tensor(0.3664)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.8459) feature loss: tensor(0.3612)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.7997) feature loss: tensor(0.3698)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.7910) feature loss: tensor(0.3768)
Local adapation with distilling: 0.0007660000000000001
training loss: tensor(0.8413) feature loss: tensor(0.3515)
Global Model Acc on global data: 0.3529 length of data: 10000
-------------Round number:  14  -------------
selected users: [24, 39, 35, 44, 55, 70, 82, 40, 91, 65]
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
random features: torch.Size([53, 96, 8, 8]) torch.Size([53])
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([46, 96, 8, 8]) torch.Size([46])
random features: torch.Size([46, 96, 8, 8]) torch.Size([46])
random features: torch.Size([52, 96, 8, 8]) torch.Size([52])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
all data: 489
Local adapation with distilling: 0.000748
training loss: tensor(0.9020) feature loss: tensor(0.4451)
Local adapation with distilling: 0.000748
training loss: tensor(0.9576) feature loss: tensor(0.4635)
Local adapation with distilling: 0.000748
training loss: tensor(0.9944) feature loss: tensor(0.4694)
Local adapation with distilling: 0.000748
training loss: tensor(0.8900) feature loss: tensor(0.4518)
Local adapation with distilling: 0.000748
training loss: tensor(1.0051) feature loss: tensor(0.4798)
Local adapation with distilling: 0.000748
training loss: tensor(0.9861) feature loss: tensor(0.4776)
Local adapation with distilling: 0.000748
training loss: tensor(0.9404) feature loss: tensor(0.4724)
Local adapation with distilling: 0.000748
training loss: tensor(1.0485) feature loss: tensor(0.4770)
Local adapation with distilling: 0.000748
training loss: tensor(0.9953) feature loss: tensor(0.4656)
Local adapation with distilling: 0.000748
training loss: tensor(0.9252) feature loss: tensor(0.4650)
Global Model Acc on global data: 0.3467 length of data: 10000
-------------Round number:  15  -------------
selected users: [84, 36, 57, 51, 46, 78, 93, 14, 11, 59]
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
random features: torch.Size([52, 96, 8, 8]) torch.Size([52])
random features: torch.Size([52, 96, 8, 8]) torch.Size([52])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([53, 96, 8, 8]) torch.Size([53])
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
all data: 504
Local adapation with distilling: 0.00073
training loss: tensor(0.9272) feature loss: tensor(0.4308)
Local adapation with distilling: 0.00073
training loss: tensor(0.9077) feature loss: tensor(0.4331)
Local adapation with distilling: 0.00073
training loss: tensor(0.8793) feature loss: tensor(0.4229)
Local adapation with distilling: 0.00073
training loss: tensor(0.9058) feature loss: tensor(0.4199)
Local adapation with distilling: 0.00073
training loss: tensor(0.8518) feature loss: tensor(0.4273)
Local adapation with distilling: 0.00073
training loss: tensor(0.9693) feature loss: tensor(0.4256)
Local adapation with distilling: 0.00073
training loss: tensor(0.9620) feature loss: tensor(0.4339)
Local adapation with distilling: 0.00073
training loss: tensor(0.8314) feature loss: tensor(0.4162)
Local adapation with distilling: 0.00073
training loss: tensor(0.9271) feature loss: tensor(0.4262)
Local adapation with distilling: 0.00073
training loss: tensor(0.9409) feature loss: tensor(0.4161)
Global Model Acc on global data: 0.401 length of data: 10000
save a model
-------------Round number:  16  -------------
selected users: [7, 25, 71, 42, 47, 29, 63, 88, 50, 9]
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
random features: torch.Size([46, 96, 8, 8]) torch.Size([46])
random features: torch.Size([54, 96, 8, 8]) torch.Size([54])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
all data: 492
Local adapation with distilling: 0.000712
training loss: tensor(0.8146) feature loss: tensor(0.3309)
Local adapation with distilling: 0.000712
training loss: tensor(0.7919) feature loss: tensor(0.3382)
Local adapation with distilling: 0.000712
training loss: tensor(0.7690) feature loss: tensor(0.3259)
Local adapation with distilling: 0.000712
training loss: tensor(0.8894) feature loss: tensor(0.3351)
Local adapation with distilling: 0.000712
training loss: tensor(0.7681) feature loss: tensor(0.3335)
Local adapation with distilling: 0.000712
training loss: tensor(0.7520) feature loss: tensor(0.3335)
Local adapation with distilling: 0.000712
training loss: tensor(0.7731) feature loss: tensor(0.3382)
Local adapation with distilling: 0.000712
training loss: tensor(0.7920) feature loss: tensor(0.3340)
Local adapation with distilling: 0.000712
training loss: tensor(0.8098) feature loss: tensor(0.3501)
Local adapation with distilling: 0.000712
training loss: tensor(0.8937) feature loss: tensor(0.3502)
Global Model Acc on global data: 0.3446 length of data: 10000
-------------Round number:  17  -------------
selected users: [71, 28, 9, 4, 73, 34, 94, 92, 47, 37]
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([52, 96, 8, 8]) torch.Size([52])
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([46, 96, 8, 8]) torch.Size([46])
random features: torch.Size([46, 96, 8, 8]) torch.Size([46])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
all data: 492
Local adapation with distilling: 0.000694
training loss: tensor(0.7179) feature loss: tensor(0.3250)
Local adapation with distilling: 0.000694
training loss: tensor(0.9375) feature loss: tensor(0.3464)
Local adapation with distilling: 0.000694
training loss: tensor(0.9926) feature loss: tensor(0.3389)
Local adapation with distilling: 0.000694
training loss: tensor(0.8036) feature loss: tensor(0.3296)
Local adapation with distilling: 0.000694
training loss: tensor(0.8331) feature loss: tensor(0.3359)
Local adapation with distilling: 0.000694
training loss: tensor(0.7643) feature loss: tensor(0.3339)
Local adapation with distilling: 0.000694
training loss: tensor(0.8000) feature loss: tensor(0.3256)
Local adapation with distilling: 0.000694
training loss: tensor(0.8409) feature loss: tensor(0.3419)
Local adapation with distilling: 0.000694
training loss: tensor(0.7300) feature loss: tensor(0.3286)
Local adapation with distilling: 0.000694
training loss: tensor(0.7452) feature loss: tensor(0.3251)
Global Model Acc on global data: 0.3516 length of data: 10000
-------------Round number:  18  -------------
selected users: [53, 47, 43, 54, 33, 48, 0, 12, 44, 91]
random features: torch.Size([57, 96, 8, 8]) torch.Size([57])
random features: torch.Size([46, 96, 8, 8]) torch.Size([46])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([52, 96, 8, 8]) torch.Size([52])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
random features: torch.Size([52, 96, 8, 8]) torch.Size([52])
all data: 495
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.8614) feature loss: tensor(0.4288)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.7694) feature loss: tensor(0.4114)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.8595) feature loss: tensor(0.4230)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.9096) feature loss: tensor(0.4163)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.9168) feature loss: tensor(0.4283)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(1.0115) feature loss: tensor(0.4341)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.9208) feature loss: tensor(0.4239)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.9431) feature loss: tensor(0.4397)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.8470) feature loss: tensor(0.4235)
Local adapation with distilling: 0.0006760000000000001
training loss: tensor(0.8570) feature loss: tensor(0.4228)
Global Model Acc on global data: 0.3489 length of data: 10000
-------------Round number:  19  -------------
selected users: [85, 72, 16, 18, 2, 38, 90, 30, 83, 61]
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([57, 96, 8, 8]) torch.Size([57])
random features: torch.Size([53, 96, 8, 8]) torch.Size([53])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([54, 96, 8, 8]) torch.Size([54])
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
all data: 505
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.8238) feature loss: tensor(0.3752)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.8314) feature loss: tensor(0.3909)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.9512) feature loss: tensor(0.3859)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.9084) feature loss: tensor(0.4009)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.8640) feature loss: tensor(0.3816)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.7844) feature loss: tensor(0.3922)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.9610) feature loss: tensor(0.3959)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.8870) feature loss: tensor(0.3973)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.8599) feature loss: tensor(0.3786)
Local adapation with distilling: 0.0006580000000000001
training loss: tensor(0.8119) feature loss: tensor(0.3726)
Global Model Acc on global data: 0.3379 length of data: 10000
-------------Round number:  20  -------------
selected users: [70, 74, 2, 44, 56, 48, 12, 36, 0, 49]
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
random features: torch.Size([55, 96, 8, 8]) torch.Size([55])
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
all data: 489
Local adapation with distilling: 0.00064
training loss: tensor(0.7490) feature loss: tensor(0.3602)
Local adapation with distilling: 0.00064
training loss: tensor(0.6815) feature loss: tensor(0.3402)
Local adapation with distilling: 0.00064
training loss: tensor(0.6743) feature loss: tensor(0.3543)
Local adapation with distilling: 0.00064
training loss: tensor(0.6899) feature loss: tensor(0.3472)
Local adapation with distilling: 0.00064
training loss: tensor(0.7163) feature loss: tensor(0.3515)
Local adapation with distilling: 0.00064
training loss: tensor(0.7437) feature loss: tensor(0.3516)
Local adapation with distilling: 0.00064
training loss: tensor(0.7062) feature loss: tensor(0.3587)
Local adapation with distilling: 0.00064
training loss: tensor(0.6893) feature loss: tensor(0.3493)
Local adapation with distilling: 0.00064
training loss: tensor(0.6810) feature loss: tensor(0.3519)
Local adapation with distilling: 0.00064
training loss: tensor(0.6984) feature loss: tensor(0.3496)
Global Model Acc on global data: 0.3811 length of data: 10000
-------------Round number:  21  -------------
selected users: [23, 81, 85, 34, 62, 46, 42, 31, 93, 11]
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
random features: torch.Size([46, 96, 8, 8]) torch.Size([46])
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([52, 96, 8, 8]) torch.Size([52])
random features: torch.Size([53, 96, 8, 8]) torch.Size([53])
all data: 494
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.9034) feature loss: tensor(0.3625)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(1.0707) feature loss: tensor(0.3565)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.7390) feature loss: tensor(0.3460)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.8192) feature loss: tensor(0.3449)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.8691) feature loss: tensor(0.3618)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.8236) feature loss: tensor(0.3608)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.8934) feature loss: tensor(0.3384)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.8901) feature loss: tensor(0.3568)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.8036) feature loss: tensor(0.3584)
Local adapation with distilling: 0.0006220000000000002
training loss: tensor(0.8051) feature loss: tensor(0.3505)
Global Model Acc on global data: 0.4247 length of data: 10000
save a model
-------------Round number:  22  -------------
selected users: [2, 49, 82, 31, 37, 12, 87, 42, 99, 85]
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([46, 96, 8, 8]) torch.Size([46])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
random features: torch.Size([46, 96, 8, 8]) torch.Size([46])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
all data: 479
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.6384) feature loss: tensor(0.3086)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.6815) feature loss: tensor(0.3093)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.7380) feature loss: tensor(0.3088)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.6983) feature loss: tensor(0.2988)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.7046) feature loss: tensor(0.2999)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.6533) feature loss: tensor(0.3083)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.8143) feature loss: tensor(0.3184)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.7091) feature loss: tensor(0.2950)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.7261) feature loss: tensor(0.3017)
Local adapation with distilling: 0.0006040000000000002
training loss: tensor(0.6425) feature loss: tensor(0.2980)
Global Model Acc on global data: 0.3634 length of data: 10000
-------------Round number:  23  -------------
selected users: [26, 80, 82, 68, 77, 37, 3, 55, 20, 17]
random features: torch.Size([52, 96, 8, 8]) torch.Size([52])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([46, 96, 8, 8]) torch.Size([46])
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
random features: torch.Size([46, 96, 8, 8]) torch.Size([46])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([53, 96, 8, 8]) torch.Size([53])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
random features: torch.Size([53, 96, 8, 8]) torch.Size([53])
all data: 494
Local adapation with distilling: 0.000586
training loss: tensor(0.7265) feature loss: tensor(0.3607)
Local adapation with distilling: 0.000586
training loss: tensor(0.8106) feature loss: tensor(0.3535)
Local adapation with distilling: 0.000586
training loss: tensor(0.7316) feature loss: tensor(0.3496)
Local adapation with distilling: 0.000586
training loss: tensor(0.7390) feature loss: tensor(0.3548)
Local adapation with distilling: 0.000586
training loss: tensor(0.7938) feature loss: tensor(0.3499)
Local adapation with distilling: 0.000586
training loss: tensor(0.7024) feature loss: tensor(0.3441)
Local adapation with distilling: 0.000586
training loss: tensor(0.8501) feature loss: tensor(0.3681)
Local adapation with distilling: 0.000586
training loss: tensor(0.7659) feature loss: tensor(0.3602)
Local adapation with distilling: 0.000586
training loss: tensor(0.8115) feature loss: tensor(0.3692)
Local adapation with distilling: 0.000586
training loss: tensor(0.7728) feature loss: tensor(0.3610)
Global Model Acc on global data: 0.3793 length of data: 10000
-------------Round number:  24  -------------
selected users: [26, 31, 37, 86, 76, 14, 88, 48, 71, 67]
random features: torch.Size([52, 96, 8, 8]) torch.Size([52])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([53, 96, 8, 8]) torch.Size([53])
random features: torch.Size([53, 96, 8, 8]) torch.Size([53])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
all data: 497
Local adapation with distilling: 0.000568
training loss: tensor(0.6384) feature loss: tensor(0.3076)
Local adapation with distilling: 0.000568
training loss: tensor(0.6922) feature loss: tensor(0.3120)
Local adapation with distilling: 0.000568
training loss: tensor(0.5957) feature loss: tensor(0.2989)
Local adapation with distilling: 0.000568
training loss: tensor(0.7010) feature loss: tensor(0.3130)
Local adapation with distilling: 0.000568
training loss: tensor(0.7909) feature loss: tensor(0.3142)
Local adapation with distilling: 0.000568
training loss: tensor(0.6749) feature loss: tensor(0.3087)
Local adapation with distilling: 0.000568
training loss: tensor(0.6558) feature loss: tensor(0.3086)
Local adapation with distilling: 0.000568
training loss: tensor(0.7227) feature loss: tensor(0.3186)
Local adapation with distilling: 0.000568
training loss: tensor(0.6813) feature loss: tensor(0.3101)
Local adapation with distilling: 0.000568
training loss: tensor(0.6807) feature loss: tensor(0.3005)
Global Model Acc on global data: 0.3747 length of data: 10000
-------------Round number:  25  -------------
selected users: [41, 29, 33, 65, 74, 6, 57, 89, 87, 98]
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
random features: torch.Size([54, 96, 8, 8]) torch.Size([54])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([52, 96, 8, 8]) torch.Size([52])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([54, 96, 8, 8]) torch.Size([54])
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
all data: 497
Local adapation with distilling: 0.00055
training loss: tensor(0.6356) feature loss: tensor(0.3017)
Local adapation with distilling: 0.00055
training loss: tensor(0.7048) feature loss: tensor(0.3063)
Local adapation with distilling: 0.00055
training loss: tensor(0.7226) feature loss: tensor(0.3174)
Local adapation with distilling: 0.00055
training loss: tensor(0.7055) feature loss: tensor(0.3159)
Local adapation with distilling: 0.00055
training loss: tensor(0.6261) feature loss: tensor(0.3042)
Local adapation with distilling: 0.00055
training loss: tensor(0.7435) feature loss: tensor(0.3125)
Local adapation with distilling: 0.00055
training loss: tensor(0.6472) feature loss: tensor(0.3081)
Local adapation with distilling: 0.00055
training loss: tensor(0.6938) feature loss: tensor(0.3075)
Local adapation with distilling: 0.00055
training loss: tensor(0.7345) feature loss: tensor(0.3244)
Local adapation with distilling: 0.00055
training loss: tensor(0.6317) feature loss: tensor(0.3069)
Global Model Acc on global data: 0.3746 length of data: 10000
-------------Round number:  26  -------------
selected users: [8, 69, 84, 41, 25, 5, 63, 95, 33, 70]
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
all data: 489
Local adapation with distilling: 0.000532
training loss: tensor(0.8535) feature loss: tensor(0.3874)
Local adapation with distilling: 0.000532
training loss: tensor(0.8711) feature loss: tensor(0.3977)
Local adapation with distilling: 0.000532
training loss: tensor(0.8883) feature loss: tensor(0.3799)
Local adapation with distilling: 0.000532
training loss: tensor(0.7714) feature loss: tensor(0.3765)
Local adapation with distilling: 0.000532
training loss: tensor(0.9139) feature loss: tensor(0.3905)
Local adapation with distilling: 0.000532
training loss: tensor(1.0255) feature loss: tensor(0.3907)
Local adapation with distilling: 0.000532
training loss: tensor(0.8099) feature loss: tensor(0.3762)
Local adapation with distilling: 0.000532
training loss: tensor(0.8930) feature loss: tensor(0.3950)
Local adapation with distilling: 0.000532
training loss: tensor(0.8222) feature loss: tensor(0.3909)
Local adapation with distilling: 0.000532
training loss: tensor(0.8455) feature loss: tensor(0.3941)
Global Model Acc on global data: 0.3914 length of data: 10000
-------------Round number:  27  -------------
selected users: [89, 68, 43, 50, 40, 95, 27, 85, 22, 44]
random features: torch.Size([54, 96, 8, 8]) torch.Size([54])
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([46, 96, 8, 8]) torch.Size([46])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
all data: 495
Local adapation with distilling: 0.000514
training loss: tensor(0.7274) feature loss: tensor(0.3435)
Local adapation with distilling: 0.000514
training loss: tensor(0.7214) feature loss: tensor(0.3328)
Local adapation with distilling: 0.000514
training loss: tensor(0.7487) feature loss: tensor(0.3405)
Local adapation with distilling: 0.000514
training loss: tensor(0.7969) feature loss: tensor(0.3413)
Local adapation with distilling: 0.000514
training loss: tensor(0.8280) feature loss: tensor(0.3363)
Local adapation with distilling: 0.000514
training loss: tensor(0.7102) feature loss: tensor(0.3249)
Local adapation with distilling: 0.000514
training loss: tensor(0.8686) feature loss: tensor(0.3279)
Local adapation with distilling: 0.000514
training loss: tensor(0.7033) feature loss: tensor(0.3267)
Local adapation with distilling: 0.000514
training loss: tensor(1.3220) feature loss: tensor(0.3404)
Local adapation with distilling: 0.000514
training loss: tensor(0.8423) feature loss: tensor(0.3295)
Global Model Acc on global data: 0.4096 length of data: 10000
-------------Round number:  28  -------------
selected users: [67, 14, 0, 86, 13, 18, 30, 36, 52, 95]
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([53, 96, 8, 8]) torch.Size([53])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
all data: 495
Local adapation with distilling: 0.000496
training loss: tensor(0.7113) feature loss: tensor(0.3148)
Local adapation with distilling: 0.000496
training loss: tensor(0.6631) feature loss: tensor(0.3120)
Local adapation with distilling: 0.000496
training loss: tensor(0.7315) feature loss: tensor(0.3245)
Local adapation with distilling: 0.000496
training loss: tensor(0.7380) feature loss: tensor(0.3158)
Local adapation with distilling: 0.000496
training loss: tensor(0.7157) feature loss: tensor(0.3130)
Local adapation with distilling: 0.000496
training loss: tensor(0.8179) feature loss: tensor(0.3211)
Local adapation with distilling: 0.000496
training loss: tensor(0.8310) feature loss: tensor(0.3221)
Local adapation with distilling: 0.000496
training loss: tensor(0.7328) feature loss: tensor(0.3203)
Local adapation with distilling: 0.000496
training loss: tensor(1.0427) feature loss: tensor(0.3458)
Local adapation with distilling: 0.000496
training loss: tensor(0.6360) feature loss: tensor(0.3190)
Global Model Acc on global data: 0.4301 length of data: 10000
save a model
-------------Round number:  29  -------------
selected users: [73, 8, 10, 7, 19, 71, 92, 25, 38, 12]
random features: torch.Size([52, 96, 8, 8]) torch.Size([52])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([46, 96, 8, 8]) torch.Size([46])
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([46, 96, 8, 8]) torch.Size([46])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([54, 96, 8, 8]) torch.Size([54])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
all data: 491
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.7727) feature loss: tensor(0.3185)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.7301) feature loss: tensor(0.3333)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.8048) feature loss: tensor(0.3368)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.7986) feature loss: tensor(0.3395)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.7870) feature loss: tensor(0.3317)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.7012) feature loss: tensor(0.3287)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.8918) feature loss: tensor(0.3404)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.7614) feature loss: tensor(0.3313)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.7208) feature loss: tensor(0.3317)
Local adapation with distilling: 0.0004780000000000001
training loss: tensor(0.7819) feature loss: tensor(0.3218)
Global Model Acc on global data: 0.4252 length of data: 10000
-------------Round number:  30  -------------
selected users: [20, 91, 34, 52, 8, 74, 21, 88, 80, 89]
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
random features: torch.Size([52, 96, 8, 8]) torch.Size([52])
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([54, 96, 8, 8]) torch.Size([54])
all data: 490
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.6856) feature loss: tensor(0.2825)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.6407) feature loss: tensor(0.2921)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.6049) feature loss: tensor(0.2743)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.7837) feature loss: tensor(0.2950)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.5689) feature loss: tensor(0.2839)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.5756) feature loss: tensor(0.2764)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.6184) feature loss: tensor(0.2833)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.5935) feature loss: tensor(0.2818)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.6650) feature loss: tensor(0.2903)
Local adapation with distilling: 0.00046000000000000007
training loss: tensor(0.5819) feature loss: tensor(0.2860)
Global Model Acc on global data: 0.3376 length of data: 10000
-------------Round number:  31  -------------
selected users: [17, 33, 76, 3, 56, 0, 37, 8, 60, 67]
random features: torch.Size([53, 96, 8, 8]) torch.Size([53])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([53, 96, 8, 8]) torch.Size([53])
random features: torch.Size([53, 96, 8, 8]) torch.Size([53])
random features: torch.Size([55, 96, 8, 8]) torch.Size([55])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
all data: 504
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.7096) feature loss: tensor(0.3448)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.6809) feature loss: tensor(0.3401)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.7582) feature loss: tensor(0.3424)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.7338) feature loss: tensor(0.3523)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.6663) feature loss: tensor(0.3462)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.6923) feature loss: tensor(0.3470)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.6685) feature loss: tensor(0.3343)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.6043) feature loss: tensor(0.3400)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.7419) feature loss: tensor(0.3454)
Local adapation with distilling: 0.00044200000000000006
training loss: tensor(0.6517) feature loss: tensor(0.3316)
Global Model Acc on global data: 0.4188 length of data: 10000
-------------Round number:  32  -------------
selected users: [22, 39, 85, 97, 55, 33, 80, 13, 27, 96]
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
all data: 492
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(1.4297) feature loss: tensor(0.3772)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.9949) feature loss: tensor(0.3798)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.7544) feature loss: tensor(0.3628)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.8854) feature loss: tensor(0.3720)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.8436) feature loss: tensor(0.3681)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.7600) feature loss: tensor(0.3621)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.7994) feature loss: tensor(0.3642)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.7621) feature loss: tensor(0.3602)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(0.8696) feature loss: tensor(0.3675)
Local adapation with distilling: 0.00042400000000000006
training loss: tensor(1.2946) feature loss: tensor(0.3671)
Global Model Acc on global data: 0.3791 length of data: 10000
-------------Round number:  33  -------------
selected users: [56, 90, 95, 82, 60, 71, 6, 81, 2, 70]
random features: torch.Size([55, 96, 8, 8]) torch.Size([55])
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([46, 96, 8, 8]) torch.Size([46])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([52, 96, 8, 8]) torch.Size([52])
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
all data: 495
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.6643) feature loss: tensor(0.3466)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.7609) feature loss: tensor(0.3382)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.6664) feature loss: tensor(0.3388)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.7302) feature loss: tensor(0.3470)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.6976) feature loss: tensor(0.3463)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.6700) feature loss: tensor(0.3357)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.8018) feature loss: tensor(0.3470)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.9375) feature loss: tensor(0.3497)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.6845) feature loss: tensor(0.3440)
Local adapation with distilling: 0.00040600000000000006
training loss: tensor(0.6766) feature loss: tensor(0.3455)
Global Model Acc on global data: 0.3938 length of data: 10000
-------------Round number:  34  -------------
selected users: [14, 74, 15, 4, 32, 59, 91, 10, 50, 53]
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
random features: torch.Size([52, 96, 8, 8]) torch.Size([52])
random features: torch.Size([46, 96, 8, 8]) torch.Size([46])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([57, 96, 8, 8]) torch.Size([57])
all data: 501
Local adapation with distilling: 0.000388
training loss: tensor(0.8040) feature loss: tensor(0.3954)
Local adapation with distilling: 0.000388
training loss: tensor(0.7684) feature loss: tensor(0.3852)
Local adapation with distilling: 0.000388
training loss: tensor(0.9572) feature loss: tensor(0.3986)
Local adapation with distilling: 0.000388
training loss: tensor(0.9255) feature loss: tensor(0.3965)
Local adapation with distilling: 0.000388
training loss: tensor(0.9977) feature loss: tensor(0.4063)
Local adapation with distilling: 0.000388
training loss: tensor(0.9389) feature loss: tensor(0.3961)
Local adapation with distilling: 0.000388
training loss: tensor(0.7878) feature loss: tensor(0.3971)
Local adapation with distilling: 0.000388
training loss: tensor(0.8785) feature loss: tensor(0.3880)
Local adapation with distilling: 0.000388
training loss: tensor(0.7858) feature loss: tensor(0.3943)
Local adapation with distilling: 0.000388
training loss: tensor(0.8433) feature loss: tensor(0.4125)
Global Model Acc on global data: 0.399 length of data: 10000
-------------Round number:  35  -------------
selected users: [40, 71, 98, 27, 70, 31, 10, 24, 51, 35]
random features: torch.Size([46, 96, 8, 8]) torch.Size([46])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([46, 96, 8, 8]) torch.Size([46])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([53, 96, 8, 8]) torch.Size([53])
all data: 484
Local adapation with distilling: 0.00037
training loss: tensor(0.7246) feature loss: tensor(0.2916)
Local adapation with distilling: 0.00037
training loss: tensor(0.5728) feature loss: tensor(0.2804)
Local adapation with distilling: 0.00037
training loss: tensor(0.6268) feature loss: tensor(0.2825)
Local adapation with distilling: 0.00037
training loss: tensor(0.6891) feature loss: tensor(0.2774)
Local adapation with distilling: 0.00037
training loss: tensor(0.6035) feature loss: tensor(0.2847)
Local adapation with distilling: 0.00037
training loss: tensor(0.6646) feature loss: tensor(0.2811)
Local adapation with distilling: 0.00037
training loss: tensor(0.6306) feature loss: tensor(0.2809)
Local adapation with distilling: 0.00037
training loss: tensor(0.7051) feature loss: tensor(0.2796)
Local adapation with distilling: 0.00037
training loss: tensor(0.6745) feature loss: tensor(0.2939)
Local adapation with distilling: 0.00037
training loss: tensor(0.6999) feature loss: tensor(0.2794)
Global Model Acc on global data: 0.3754 length of data: 10000
-------------Round number:  36  -------------
selected users: [59, 42, 2, 27, 28, 75, 58, 68, 52, 74]
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
all data: 493
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.6841) feature loss: tensor(0.3128)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.7941) feature loss: tensor(0.2970)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.6713) feature loss: tensor(0.3156)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.6783) feature loss: tensor(0.3006)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.7022) feature loss: tensor(0.3126)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.7309) feature loss: tensor(0.3096)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.7318) feature loss: tensor(0.3137)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.7671) feature loss: tensor(0.3079)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(1.0440) feature loss: tensor(0.3230)
Local adapation with distilling: 0.0003520000000000001
training loss: tensor(0.6154) feature loss: tensor(0.3009)
Global Model Acc on global data: 0.413 length of data: 10000
-------------Round number:  37  -------------
selected users: [61, 49, 86, 78, 5, 91, 81, 82, 89, 18]
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([53, 96, 8, 8]) torch.Size([53])
random features: torch.Size([52, 96, 8, 8]) torch.Size([52])
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
random features: torch.Size([52, 96, 8, 8]) torch.Size([52])
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
random features: torch.Size([46, 96, 8, 8]) torch.Size([46])
random features: torch.Size([54, 96, 8, 8]) torch.Size([54])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
all data: 507
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.6855) feature loss: tensor(0.2976)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.7407) feature loss: tensor(0.3046)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.7228) feature loss: tensor(0.3002)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.7474) feature loss: tensor(0.3082)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.8456) feature loss: tensor(0.3000)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.6781) feature loss: tensor(0.3052)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.8283) feature loss: tensor(0.3052)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.7145) feature loss: tensor(0.3083)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.6880) feature loss: tensor(0.3057)
Local adapation with distilling: 0.0003340000000000001
training loss: tensor(0.7563) feature loss: tensor(0.3062)
Global Model Acc on global data: 0.4117 length of data: 10000
-------------Round number:  38  -------------
selected users: [40, 73, 49, 45, 64, 16, 69, 17, 72, 66]
random features: torch.Size([46, 96, 8, 8]) torch.Size([46])
random features: torch.Size([52, 96, 8, 8]) torch.Size([52])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([53, 96, 8, 8]) torch.Size([53])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([53, 96, 8, 8]) torch.Size([53])
random features: torch.Size([57, 96, 8, 8]) torch.Size([57])
random features: torch.Size([54, 96, 8, 8]) torch.Size([54])
all data: 512
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.7666) feature loss: tensor(0.3024)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.7742) feature loss: tensor(0.3052)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.6994) feature loss: tensor(0.2981)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.7487) feature loss: tensor(0.3051)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.8793) feature loss: tensor(0.3040)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.7904) feature loss: tensor(0.3014)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.7421) feature loss: tensor(0.2969)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.7138) feature loss: tensor(0.2988)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.7336) feature loss: tensor(0.3034)
Local adapation with distilling: 0.0003160000000000001
training loss: tensor(0.7313) feature loss: tensor(0.2949)
Global Model Acc on global data: 0.3949 length of data: 10000
-------------Round number:  39  -------------
selected users: [22, 53, 84, 57, 87, 58, 29, 21, 85, 79]
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
random features: torch.Size([57, 96, 8, 8]) torch.Size([57])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([54, 96, 8, 8]) torch.Size([54])
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
all data: 503
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(1.0427) feature loss: tensor(0.3341)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.7373) feature loss: tensor(0.3299)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.8566) feature loss: tensor(0.3373)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.8027) feature loss: tensor(0.3291)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.8434) feature loss: tensor(0.3322)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.7703) feature loss: tensor(0.3265)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.7402) feature loss: tensor(0.3333)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.8387) feature loss: tensor(0.3348)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.7373) feature loss: tensor(0.3209)
Local adapation with distilling: 0.00029800000000000003
training loss: tensor(0.8230) feature loss: tensor(0.3273)
Global Model Acc on global data: 0.3992 length of data: 10000
-------------Round number:  40  -------------
selected users: [79, 75, 63, 15, 38, 11, 40, 45, 39, 62]
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
random features: torch.Size([54, 96, 8, 8]) torch.Size([54])
random features: torch.Size([53, 96, 8, 8]) torch.Size([53])
random features: torch.Size([46, 96, 8, 8]) torch.Size([46])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
random features: torch.Size([46, 96, 8, 8]) torch.Size([46])
all data: 498
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.7038) feature loss: tensor(0.3233)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.7289) feature loss: tensor(0.3263)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.6867) feature loss: tensor(0.3199)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.9253) feature loss: tensor(0.3253)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.6700) feature loss: tensor(0.3329)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.7116) feature loss: tensor(0.3232)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.7193) feature loss: tensor(0.3301)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.6973) feature loss: tensor(0.3331)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.8149) feature loss: tensor(0.3347)
Local adapation with distilling: 0.00028000000000000003
training loss: tensor(0.8045) feature loss: tensor(0.3229)
Global Model Acc on global data: 0.4209 length of data: 10000
-------------Round number:  41  -------------
selected users: [42, 94, 37, 6, 79, 32, 24, 0, 33, 93]
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([52, 96, 8, 8]) torch.Size([52])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([52, 96, 8, 8]) torch.Size([52])
all data: 495
Local adapation with distilling: 0.000262
training loss: tensor(0.7931) feature loss: tensor(0.2892)
Local adapation with distilling: 0.000262
training loss: tensor(0.8067) feature loss: tensor(0.2878)
Local adapation with distilling: 0.000262
training loss: tensor(0.7389) feature loss: tensor(0.2827)
Local adapation with distilling: 0.000262
training loss: tensor(0.8091) feature loss: tensor(0.2850)
Local adapation with distilling: 0.000262
training loss: tensor(0.6874) feature loss: tensor(0.2813)
Local adapation with distilling: 0.000262
training loss: tensor(0.8519) feature loss: tensor(0.3014)
Local adapation with distilling: 0.000262
training loss: tensor(0.7530) feature loss: tensor(0.2866)
Local adapation with distilling: 0.000262
training loss: tensor(0.7274) feature loss: tensor(0.2805)
Local adapation with distilling: 0.000262
training loss: tensor(0.7330) feature loss: tensor(0.2927)
Local adapation with distilling: 0.000262
training loss: tensor(0.7712) feature loss: tensor(0.2849)
Global Model Acc on global data: 0.3796 length of data: 10000
-------------Round number:  42  -------------
selected users: [83, 53, 70, 45, 44, 39, 22, 80, 10, 0]
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([57, 96, 8, 8]) torch.Size([57])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([46, 96, 8, 8]) torch.Size([46])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
all data: 497
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.7328) feature loss: tensor(0.2849)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.6263) feature loss: tensor(0.2893)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.6486) feature loss: tensor(0.2897)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.6497) feature loss: tensor(0.2903)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.7842) feature loss: tensor(0.2805)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.6718) feature loss: tensor(0.2944)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.8757) feature loss: tensor(0.2900)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.7072) feature loss: tensor(0.2850)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.7006) feature loss: tensor(0.2871)
Local adapation with distilling: 0.0002440000000000001
training loss: tensor(0.6467) feature loss: tensor(0.2920)
Global Model Acc on global data: 0.361 length of data: 10000
-------------Round number:  43  -------------
selected users: [20, 2, 15, 22, 57, 91, 69, 55, 11, 79]
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([52, 96, 8, 8]) torch.Size([52])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([53, 96, 8, 8]) torch.Size([53])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
all data: 498
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.7648) feature loss: tensor(0.2731)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.6461) feature loss: tensor(0.2700)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.7101) feature loss: tensor(0.2703)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.7380) feature loss: tensor(0.2714)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.6839) feature loss: tensor(0.2759)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.6251) feature loss: tensor(0.2766)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.6373) feature loss: tensor(0.2688)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.6566) feature loss: tensor(0.2702)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.6654) feature loss: tensor(0.2713)
Local adapation with distilling: 0.0002260000000000001
training loss: tensor(0.6031) feature loss: tensor(0.2691)
Global Model Acc on global data: 0.3883 length of data: 10000
-------------Round number:  44  -------------
selected users: [42, 54, 27, 93, 39, 65, 7, 26, 24, 60]
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
random features: torch.Size([52, 96, 8, 8]) torch.Size([52])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([52, 96, 8, 8]) torch.Size([52])
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
random features: torch.Size([52, 96, 8, 8]) torch.Size([52])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
all data: 495
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.6904) feature loss: tensor(0.2562)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.8178) feature loss: tensor(0.2505)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.7286) feature loss: tensor(0.2567)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.6997) feature loss: tensor(0.2490)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.6102) feature loss: tensor(0.2471)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.6720) feature loss: tensor(0.2512)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.7406) feature loss: tensor(0.2550)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.6680) feature loss: tensor(0.2562)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.6638) feature loss: tensor(0.2491)
Local adapation with distilling: 0.00020800000000000007
training loss: tensor(0.6956) feature loss: tensor(0.2446)
Global Model Acc on global data: 0.3677 length of data: 10000
-------------Round number:  45  -------------
selected users: [0, 1, 62, 76, 37, 99, 78, 38, 2, 84]
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([52, 96, 8, 8]) torch.Size([52])
random features: torch.Size([46, 96, 8, 8]) torch.Size([46])
random features: torch.Size([53, 96, 8, 8]) torch.Size([53])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([46, 96, 8, 8]) torch.Size([46])
random features: torch.Size([52, 96, 8, 8]) torch.Size([52])
random features: torch.Size([54, 96, 8, 8]) torch.Size([54])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
all data: 498
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.6925) feature loss: tensor(0.3001)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.8104) feature loss: tensor(0.2963)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.7981) feature loss: tensor(0.2918)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.8271) feature loss: tensor(0.2979)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.7213) feature loss: tensor(0.2947)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.7917) feature loss: tensor(0.2850)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.7789) feature loss: tensor(0.3051)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.6815) feature loss: tensor(0.3011)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.7219) feature loss: tensor(0.2926)
Local adapation with distilling: 0.00019000000000000006
training loss: tensor(0.8198) feature loss: tensor(0.2945)
Global Model Acc on global data: 0.4337 length of data: 10000
save a model
-------------Round number:  46  -------------
selected users: [71, 33, 37, 10, 44, 34, 24, 98, 73, 95]
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([46, 96, 8, 8]) torch.Size([46])
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([52, 96, 8, 8]) torch.Size([52])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
all data: 487
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.5972) feature loss: tensor(0.2397)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.6234) feature loss: tensor(0.2383)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.5920) feature loss: tensor(0.2408)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.6270) feature loss: tensor(0.2403)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.6632) feature loss: tensor(0.2370)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.6661) feature loss: tensor(0.2430)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.5812) feature loss: tensor(0.2427)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.6430) feature loss: tensor(0.2364)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.6902) feature loss: tensor(0.2403)
Local adapation with distilling: 0.00017200000000000003
training loss: tensor(0.6412) feature loss: tensor(0.2434)
Global Model Acc on global data: 0.4235 length of data: 10000
-------------Round number:  47  -------------
selected users: [17, 90, 94, 86, 63, 5, 38, 14, 40, 47]
random features: torch.Size([53, 96, 8, 8]) torch.Size([53])
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([53, 96, 8, 8]) torch.Size([53])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
random features: torch.Size([54, 96, 8, 8]) torch.Size([54])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([46, 96, 8, 8]) torch.Size([46])
random features: torch.Size([46, 96, 8, 8]) torch.Size([46])
all data: 499
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.7256) feature loss: tensor(0.2757)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.7782) feature loss: tensor(0.2687)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.7826) feature loss: tensor(0.2619)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.7161) feature loss: tensor(0.2778)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.7192) feature loss: tensor(0.2737)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.8185) feature loss: tensor(0.2606)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.6511) feature loss: tensor(0.2749)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.7194) feature loss: tensor(0.2671)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.7040) feature loss: tensor(0.2674)
Local adapation with distilling: 0.00015400000000000003
training loss: tensor(0.7197) feature loss: tensor(0.2573)
Global Model Acc on global data: 0.4004 length of data: 10000
-------------Round number:  48  -------------
selected users: [93, 5, 71, 9, 11, 79, 69, 8, 59, 63]
random features: torch.Size([52, 96, 8, 8]) torch.Size([52])
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
random features: torch.Size([53, 96, 8, 8]) torch.Size([53])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
all data: 504
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.7691) feature loss: tensor(0.2928)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.7922) feature loss: tensor(0.3003)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.7033) feature loss: tensor(0.3012)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(1.1119) feature loss: tensor(0.2967)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.7444) feature loss: tensor(0.2993)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.7394) feature loss: tensor(0.3013)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.7474) feature loss: tensor(0.2874)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.7735) feature loss: tensor(0.2955)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.8677) feature loss: tensor(0.3073)
Local adapation with distilling: 0.00013600000000000013
training loss: tensor(0.7125) feature loss: tensor(0.2868)
Global Model Acc on global data: 0.44 length of data: 10000
save a model
-------------Round number:  49  -------------
selected users: [76, 25, 28, 75, 81, 47, 41, 22, 29, 1]
random features: torch.Size([53, 96, 8, 8]) torch.Size([53])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
random features: torch.Size([46, 96, 8, 8]) torch.Size([46])
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
random features: torch.Size([54, 96, 8, 8]) torch.Size([54])
random features: torch.Size([52, 96, 8, 8]) torch.Size([52])
all data: 503
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.7394) feature loss: tensor(0.2126)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.7647) feature loss: tensor(0.2214)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.7802) feature loss: tensor(0.2211)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.7625) feature loss: tensor(0.2243)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.9479) feature loss: tensor(0.2242)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.7255) feature loss: tensor(0.2233)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.7351) feature loss: tensor(0.2210)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.8285) feature loss: tensor(0.2174)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.6665) feature loss: tensor(0.2219)
Local adapation with distilling: 0.0001180000000000001
training loss: tensor(0.6785) feature loss: tensor(0.2231)
Global Model Acc on global data: 0.4545 length of data: 10000
save a model
-------------Round number:  50  -------------
selected users: [80, 79, 25, 15, 39, 40, 53, 17, 57, 50]
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
random features: torch.Size([46, 96, 8, 8]) torch.Size([46])
random features: torch.Size([57, 96, 8, 8]) torch.Size([57])
random features: torch.Size([53, 96, 8, 8]) torch.Size([53])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
all data: 504
Local adapation with distilling: 0.0001
training loss: tensor(0.6796) feature loss: tensor(0.1966)
Local adapation with distilling: 0.0001
training loss: tensor(0.5772) feature loss: tensor(0.1945)
Local adapation with distilling: 0.0001
training loss: tensor(0.6154) feature loss: tensor(0.1965)
Local adapation with distilling: 0.0001
training loss: tensor(0.7812) feature loss: tensor(0.1977)
Local adapation with distilling: 0.0001
training loss: tensor(0.6003) feature loss: tensor(0.2024)
Local adapation with distilling: 0.0001
training loss: tensor(0.6689) feature loss: tensor(0.1992)
Local adapation with distilling: 0.0001
training loss: tensor(0.5793) feature loss: tensor(0.2050)
Local adapation with distilling: 0.0001
training loss: tensor(0.5994) feature loss: tensor(0.2010)
Local adapation with distilling: 0.0001
training loss: tensor(0.6417) feature loss: tensor(0.1949)
Local adapation with distilling: 0.0001
training loss: tensor(0.7135) feature loss: tensor(0.2015)
Global Model Acc on global data: 0.4375 length of data: 10000
-------------Round number:  51  -------------
selected users: [71, 43, 11, 83, 78, 19, 80, 4, 79, 75]
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([53, 96, 8, 8]) torch.Size([53])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([52, 96, 8, 8]) torch.Size([52])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
all data: 498
Local adapation with distilling: 0.0001
training loss: tensor(0.6057) feature loss: tensor(0.2142)
Local adapation with distilling: 0.0001
training loss: tensor(0.6886) feature loss: tensor(0.2112)
Local adapation with distilling: 0.0001
training loss: tensor(0.6376) feature loss: tensor(0.2144)
Local adapation with distilling: 0.0001
training loss: tensor(0.7805) feature loss: tensor(0.2199)
Local adapation with distilling: 0.0001
training loss: tensor(0.6965) feature loss: tensor(0.2195)
Local adapation with distilling: 0.0001
training loss: tensor(0.7562) feature loss: tensor(0.2166)
Local adapation with distilling: 0.0001
training loss: tensor(0.6649) feature loss: tensor(0.2144)
Local adapation with distilling: 0.0001
training loss: tensor(0.7531) feature loss: tensor(0.2124)
Local adapation with distilling: 0.0001
training loss: tensor(0.6050) feature loss: tensor(0.2103)
Local adapation with distilling: 0.0001
training loss: tensor(0.6791) feature loss: tensor(0.2082)
Global Model Acc on global data: 0.4328 length of data: 10000
-------------Round number:  52  -------------
selected users: [82, 8, 44, 19, 2, 73, 37, 89, 67, 18]
random features: torch.Size([46, 96, 8, 8]) torch.Size([46])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([52, 96, 8, 8]) torch.Size([52])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([54, 96, 8, 8]) torch.Size([54])
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
all data: 491
Local adapation with distilling: 0.0001
training loss: tensor(0.7808) feature loss: tensor(0.2309)
Local adapation with distilling: 0.0001
training loss: tensor(0.7326) feature loss: tensor(0.2352)
Local adapation with distilling: 0.0001
training loss: tensor(0.7697) feature loss: tensor(0.2271)
Local adapation with distilling: 0.0001
training loss: tensor(0.6866) feature loss: tensor(0.2260)
Local adapation with distilling: 0.0001
training loss: tensor(0.6815) feature loss: tensor(0.2311)
Local adapation with distilling: 0.0001
training loss: tensor(0.7073) feature loss: tensor(0.2340)
Local adapation with distilling: 0.0001
training loss: tensor(0.6856) feature loss: tensor(0.2326)
Local adapation with distilling: 0.0001
training loss: tensor(0.6825) feature loss: tensor(0.2356)
Local adapation with distilling: 0.0001
training loss: tensor(0.7240) feature loss: tensor(0.2345)
Local adapation with distilling: 0.0001
training loss: tensor(0.8692) feature loss: tensor(0.2338)
Global Model Acc on global data: 0.4426 length of data: 10000
-------------Round number:  53  -------------
selected users: [19, 78, 64, 3, 71, 32, 68, 42, 55, 97]
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([52, 96, 8, 8]) torch.Size([52])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([53, 96, 8, 8]) torch.Size([53])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
all data: 496
Local adapation with distilling: 0.0001
training loss: tensor(0.7330) feature loss: tensor(0.2564)
Local adapation with distilling: 0.0001
training loss: tensor(0.8007) feature loss: tensor(0.2698)
Local adapation with distilling: 0.0001
training loss: tensor(1.0328) feature loss: tensor(0.2652)
Local adapation with distilling: 0.0001
training loss: tensor(0.8825) feature loss: tensor(0.2736)
Local adapation with distilling: 0.0001
training loss: tensor(0.6941) feature loss: tensor(0.2578)
Local adapation with distilling: 0.0001
training loss: tensor(0.9353) feature loss: tensor(0.2656)
Local adapation with distilling: 0.0001
training loss: tensor(0.8085) feature loss: tensor(0.2617)
Local adapation with distilling: 0.0001
training loss: tensor(0.7986) feature loss: tensor(0.2510)
Local adapation with distilling: 0.0001
training loss: tensor(0.8395) feature loss: tensor(0.2646)
Local adapation with distilling: 0.0001
training loss: tensor(0.8266) feature loss: tensor(0.2580)
Global Model Acc on global data: 0.4096 length of data: 10000
-------------Round number:  54  -------------
selected users: [36, 70, 48, 94, 81, 46, 38, 29, 34, 22]
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
random features: torch.Size([54, 96, 8, 8]) torch.Size([54])
random features: torch.Size([54, 96, 8, 8]) torch.Size([54])
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
all data: 503
Local adapation with distilling: 0.0001
training loss: tensor(0.8230) feature loss: tensor(0.2671)
Local adapation with distilling: 0.0001
training loss: tensor(0.7419) feature loss: tensor(0.2712)
Local adapation with distilling: 0.0001
training loss: tensor(0.9887) feature loss: tensor(0.2650)
Local adapation with distilling: 0.0001
training loss: tensor(0.7803) feature loss: tensor(0.2681)
Local adapation with distilling: 0.0001
training loss: tensor(0.9973) feature loss: tensor(0.2794)
Local adapation with distilling: 0.0001
training loss: tensor(0.8247) feature loss: tensor(0.2815)
Local adapation with distilling: 0.0001
training loss: tensor(0.6809) feature loss: tensor(0.2756)
Local adapation with distilling: 0.0001
training loss: tensor(0.7436) feature loss: tensor(0.2757)
Local adapation with distilling: 0.0001
training loss: tensor(0.7473) feature loss: tensor(0.2674)
Local adapation with distilling: 0.0001
training loss: tensor(0.8538) feature loss: tensor(0.2707)
Global Model Acc on global data: 0.4399 length of data: 10000
-------------Round number:  55  -------------
selected users: [28, 92, 98, 95, 84, 34, 38, 76, 17, 78]
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
random features: torch.Size([46, 96, 8, 8]) torch.Size([46])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
random features: torch.Size([54, 96, 8, 8]) torch.Size([54])
random features: torch.Size([53, 96, 8, 8]) torch.Size([53])
random features: torch.Size([53, 96, 8, 8]) torch.Size([53])
random features: torch.Size([52, 96, 8, 8]) torch.Size([52])
all data: 502
Local adapation with distilling: 0.0001
training loss: tensor(0.8531) feature loss: tensor(0.2429)
Local adapation with distilling: 0.0001
training loss: tensor(0.8560) feature loss: tensor(0.2458)
Local adapation with distilling: 0.0001
training loss: tensor(0.6482) feature loss: tensor(0.2437)
Local adapation with distilling: 0.0001
training loss: tensor(0.6609) feature loss: tensor(0.2339)
Local adapation with distilling: 0.0001
training loss: tensor(0.7353) feature loss: tensor(0.2442)
Local adapation with distilling: 0.0001
training loss: tensor(0.6304) feature loss: tensor(0.2386)
Local adapation with distilling: 0.0001
training loss: tensor(0.5557) feature loss: tensor(0.2410)
Local adapation with distilling: 0.0001
training loss: tensor(0.6901) feature loss: tensor(0.2348)
Local adapation with distilling: 0.0001
training loss: tensor(0.6339) feature loss: tensor(0.2307)
Local adapation with distilling: 0.0001
training loss: tensor(0.6486) feature loss: tensor(0.2465)
Global Model Acc on global data: 0.4511 length of data: 10000
-------------Round number:  56  -------------
selected users: [92, 79, 23, 68, 52, 38, 73, 9, 59, 27]
random features: torch.Size([46, 96, 8, 8]) torch.Size([46])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
random features: torch.Size([54, 96, 8, 8]) torch.Size([54])
random features: torch.Size([52, 96, 8, 8]) torch.Size([52])
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
all data: 502
Local adapation with distilling: 0.0001
training loss: tensor(0.7752) feature loss: tensor(0.2364)
Local adapation with distilling: 0.0001
training loss: tensor(0.6220) feature loss: tensor(0.2336)
Local adapation with distilling: 0.0001
training loss: tensor(0.8514) feature loss: tensor(0.2465)
Local adapation with distilling: 0.0001
training loss: tensor(0.6582) feature loss: tensor(0.2280)
Local adapation with distilling: 0.0001
training loss: tensor(0.7713) feature loss: tensor(0.2441)
Local adapation with distilling: 0.0001
training loss: tensor(0.5277) feature loss: tensor(0.2378)
Local adapation with distilling: 0.0001
training loss: tensor(0.6566) feature loss: tensor(0.2332)
Local adapation with distilling: 0.0001
training loss: tensor(0.8795) feature loss: tensor(0.2364)
Local adapation with distilling: 0.0001
training loss: tensor(0.7625) feature loss: tensor(0.2329)
Local adapation with distilling: 0.0001
training loss: tensor(0.7421) feature loss: tensor(0.2331)
Global Model Acc on global data: 0.4374 length of data: 10000
-------------Round number:  57  -------------
selected users: [52, 17, 41, 3, 8, 98, 59, 20, 67, 7]
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
random features: torch.Size([53, 96, 8, 8]) torch.Size([53])
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
random features: torch.Size([53, 96, 8, 8]) torch.Size([53])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
all data: 492
Local adapation with distilling: 0.0001
training loss: tensor(1.0287) feature loss: tensor(0.2468)
Local adapation with distilling: 0.0001
training loss: tensor(0.6782) feature loss: tensor(0.2597)
Local adapation with distilling: 0.0001
training loss: tensor(0.7353) feature loss: tensor(0.2630)
Local adapation with distilling: 0.0001
training loss: tensor(0.8055) feature loss: tensor(0.2605)
Local adapation with distilling: 0.0001
training loss: tensor(0.7172) feature loss: tensor(0.2652)
Local adapation with distilling: 0.0001
training loss: tensor(0.6824) feature loss: tensor(0.2615)
Local adapation with distilling: 0.0001
training loss: tensor(0.7185) feature loss: tensor(0.2617)
Local adapation with distilling: 0.0001
training loss: tensor(0.8898) feature loss: tensor(0.2562)
Local adapation with distilling: 0.0001
training loss: tensor(0.7459) feature loss: tensor(0.2618)
Local adapation with distilling: 0.0001
training loss: tensor(0.8121) feature loss: tensor(0.2634)
Global Model Acc on global data: 0.4279 length of data: 10000
-------------Round number:  58  -------------
selected users: [43, 58, 8, 31, 70, 45, 69, 95, 50, 4]
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
all data: 490
Local adapation with distilling: 0.0001
training loss: tensor(0.6878) feature loss: tensor(0.2363)
Local adapation with distilling: 0.0001
training loss: tensor(0.6906) feature loss: tensor(0.2308)
Local adapation with distilling: 0.0001
training loss: tensor(0.5764) feature loss: tensor(0.2247)
Local adapation with distilling: 0.0001
training loss: tensor(0.6922) feature loss: tensor(0.2215)
Local adapation with distilling: 0.0001
training loss: tensor(0.6195) feature loss: tensor(0.2309)
Local adapation with distilling: 0.0001
training loss: tensor(0.6355) feature loss: tensor(0.2225)
Local adapation with distilling: 0.0001
training loss: tensor(0.6700) feature loss: tensor(0.2291)
Local adapation with distilling: 0.0001
training loss: tensor(0.6034) feature loss: tensor(0.2292)
Local adapation with distilling: 0.0001
training loss: tensor(0.7179) feature loss: tensor(0.2287)
Local adapation with distilling: 0.0001
training loss: tensor(0.7348) feature loss: tensor(0.2283)
Global Model Acc on global data: 0.4424 length of data: 10000
-------------Round number:  59  -------------
selected users: [38, 46, 24, 87, 30, 85, 16, 96, 18, 99]
random features: torch.Size([54, 96, 8, 8]) torch.Size([54])
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([53, 96, 8, 8]) torch.Size([53])
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([46, 96, 8, 8]) torch.Size([46])
all data: 497
Local adapation with distilling: 0.0001
training loss: tensor(0.6933) feature loss: tensor(0.2708)
Local adapation with distilling: 0.0001
training loss: tensor(0.8092) feature loss: tensor(0.2602)
Local adapation with distilling: 0.0001
training loss: tensor(0.8137) feature loss: tensor(0.2634)
Local adapation with distilling: 0.0001
training loss: tensor(0.8962) feature loss: tensor(0.2456)
Local adapation with distilling: 0.0001
training loss: tensor(0.9847) feature loss: tensor(0.2599)
Local adapation with distilling: 0.0001
training loss: tensor(0.8273) feature loss: tensor(0.2601)
Local adapation with distilling: 0.0001
training loss: tensor(0.9239) feature loss: tensor(0.2572)
Local adapation with distilling: 0.0001
training loss: tensor(1.0710) feature loss: tensor(0.2692)
Local adapation with distilling: 0.0001
training loss: tensor(0.8934) feature loss: tensor(0.2606)
Local adapation with distilling: 0.0001
training loss: tensor(0.8165) feature loss: tensor(0.2661)
Global Model Acc on global data: 0.4618 length of data: 10000
save a model
-------------Round number:  60  -------------
selected users: [88, 4, 79, 14, 55, 3, 19, 28, 94, 25]
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([53, 96, 8, 8]) torch.Size([53])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
all data: 497
Local adapation with distilling: 0.0001
training loss: tensor(0.6642) feature loss: tensor(0.2126)
Local adapation with distilling: 0.0001
training loss: tensor(0.6208) feature loss: tensor(0.2117)
Local adapation with distilling: 0.0001
training loss: tensor(0.5778) feature loss: tensor(0.2146)
Local adapation with distilling: 0.0001
training loss: tensor(0.6472) feature loss: tensor(0.2134)
Local adapation with distilling: 0.0001
training loss: tensor(0.6426) feature loss: tensor(0.2144)
Local adapation with distilling: 0.0001
training loss: tensor(0.6446) feature loss: tensor(0.2100)
Local adapation with distilling: 0.0001
training loss: tensor(0.6186) feature loss: tensor(0.2126)
Local adapation with distilling: 0.0001
training loss: tensor(0.7567) feature loss: tensor(0.2156)
Local adapation with distilling: 0.0001
training loss: tensor(0.6433) feature loss: tensor(0.2094)
Local adapation with distilling: 0.0001
training loss: tensor(0.6261) feature loss: tensor(0.2134)
Global Model Acc on global data: 0.422 length of data: 10000
-------------Round number:  61  -------------
selected users: [83, 1, 55, 9, 31, 28, 96, 29, 86, 63]
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([52, 96, 8, 8]) torch.Size([52])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
random features: torch.Size([54, 96, 8, 8]) torch.Size([54])
random features: torch.Size([53, 96, 8, 8]) torch.Size([53])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
all data: 508
Local adapation with distilling: 0.0001
training loss: tensor(0.7820) feature loss: tensor(0.2642)
Local adapation with distilling: 0.0001
training loss: tensor(0.7255) feature loss: tensor(0.2568)
Local adapation with distilling: 0.0001
training loss: tensor(0.6769) feature loss: tensor(0.2655)
Local adapation with distilling: 0.0001
training loss: tensor(0.8160) feature loss: tensor(0.2619)
Local adapation with distilling: 0.0001
training loss: tensor(0.7019) feature loss: tensor(0.2580)
Local adapation with distilling: 0.0001
training loss: tensor(0.7959) feature loss: tensor(0.2553)
Local adapation with distilling: 0.0001
training loss: tensor(1.0043) feature loss: tensor(0.2712)
Local adapation with distilling: 0.0001
training loss: tensor(0.6347) feature loss: tensor(0.2641)
Local adapation with distilling: 0.0001
training loss: tensor(0.6635) feature loss: tensor(0.2597)
Local adapation with distilling: 0.0001
training loss: tensor(0.6543) feature loss: tensor(0.2571)
Global Model Acc on global data: 0.4082 length of data: 10000
-------------Round number:  62  -------------
selected users: [76, 48, 62, 80, 29, 99, 60, 89, 39, 69]
random features: torch.Size([53, 96, 8, 8]) torch.Size([53])
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
random features: torch.Size([46, 96, 8, 8]) torch.Size([46])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([54, 96, 8, 8]) torch.Size([54])
random features: torch.Size([46, 96, 8, 8]) torch.Size([46])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([54, 96, 8, 8]) torch.Size([54])
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
all data: 496
Local adapation with distilling: 0.0001
training loss: tensor(0.7063) feature loss: tensor(0.2447)
Local adapation with distilling: 0.0001
training loss: tensor(0.8352) feature loss: tensor(0.2501)
Local adapation with distilling: 0.0001
training loss: tensor(0.8104) feature loss: tensor(0.2499)
Local adapation with distilling: 0.0001
training loss: tensor(0.7294) feature loss: tensor(0.2516)
Local adapation with distilling: 0.0001
training loss: tensor(0.5840) feature loss: tensor(0.2432)
Local adapation with distilling: 0.0001
training loss: tensor(0.6896) feature loss: tensor(0.2484)
Local adapation with distilling: 0.0001
training loss: tensor(0.7696) feature loss: tensor(0.2513)
Local adapation with distilling: 0.0001
training loss: tensor(0.6265) feature loss: tensor(0.2384)
Local adapation with distilling: 0.0001
training loss: tensor(0.7259) feature loss: tensor(0.2414)
Local adapation with distilling: 0.0001
training loss: tensor(0.6486) feature loss: tensor(0.2387)
Global Model Acc on global data: 0.3949 length of data: 10000
-------------Round number:  63  -------------
selected users: [64, 59, 63, 2, 80, 20, 18, 48, 72, 51]
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
random features: torch.Size([57, 96, 8, 8]) torch.Size([57])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
all data: 494
Local adapation with distilling: 0.0001
training loss: tensor(0.9531) feature loss: tensor(0.3058)
Local adapation with distilling: 0.0001
training loss: tensor(0.7373) feature loss: tensor(0.2925)
Local adapation with distilling: 0.0001
training loss: tensor(0.6671) feature loss: tensor(0.2791)
Local adapation with distilling: 0.0001
training loss: tensor(0.7160) feature loss: tensor(0.2901)
Local adapation with distilling: 0.0001
training loss: tensor(0.7049) feature loss: tensor(0.2799)
Local adapation with distilling: 0.0001
training loss: tensor(0.8339) feature loss: tensor(0.2890)
Local adapation with distilling: 0.0001
training loss: tensor(0.7941) feature loss: tensor(0.2860)
Local adapation with distilling: 0.0001
training loss: tensor(0.7869) feature loss: tensor(0.2908)
Local adapation with distilling: 0.0001
training loss: tensor(0.7934) feature loss: tensor(0.2952)
Local adapation with distilling: 0.0001
training loss: tensor(0.7937) feature loss: tensor(0.2955)
Global Model Acc on global data: 0.4191 length of data: 10000
-------------Round number:  64  -------------
selected users: [17, 22, 60, 92, 23, 19, 71, 94, 40, 49]
random features: torch.Size([53, 96, 8, 8]) torch.Size([53])
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([46, 96, 8, 8]) torch.Size([46])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([46, 96, 8, 8]) torch.Size([46])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
all data: 492
Local adapation with distilling: 0.0001
training loss: tensor(0.6788) feature loss: tensor(0.2520)
Local adapation with distilling: 0.0001
training loss: tensor(0.7988) feature loss: tensor(0.2478)
Local adapation with distilling: 0.0001
training loss: tensor(0.6824) feature loss: tensor(0.2401)
Local adapation with distilling: 0.0001
training loss: tensor(0.8019) feature loss: tensor(0.2444)
Local adapation with distilling: 0.0001
training loss: tensor(0.8205) feature loss: tensor(0.2452)
Local adapation with distilling: 0.0001
training loss: tensor(0.6891) feature loss: tensor(0.2487)
Local adapation with distilling: 0.0001
training loss: tensor(0.6562) feature loss: tensor(0.2423)
Local adapation with distilling: 0.0001
training loss: tensor(0.7458) feature loss: tensor(0.2546)
Local adapation with distilling: 0.0001
training loss: tensor(0.7416) feature loss: tensor(0.2423)
Local adapation with distilling: 0.0001
training loss: tensor(0.6962) feature loss: tensor(0.2387)
Global Model Acc on global data: 0.4315 length of data: 10000
-------------Round number:  65  -------------
selected users: [37, 81, 39, 61, 76, 90, 27, 86, 28, 69]
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([53, 96, 8, 8]) torch.Size([53])
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([53, 96, 8, 8]) torch.Size([53])
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
all data: 503
Local adapation with distilling: 0.0001
training loss: tensor(0.5902) feature loss: tensor(0.2092)
Local adapation with distilling: 0.0001
training loss: tensor(0.9500) feature loss: tensor(0.2104)
Local adapation with distilling: 0.0001
training loss: tensor(0.6323) feature loss: tensor(0.2108)
Local adapation with distilling: 0.0001
training loss: tensor(0.6462) feature loss: tensor(0.2078)
Local adapation with distilling: 0.0001
training loss: tensor(0.6102) feature loss: tensor(0.2096)
Local adapation with distilling: 0.0001
training loss: tensor(0.6724) feature loss: tensor(0.2101)
Local adapation with distilling: 0.0001
training loss: tensor(0.6573) feature loss: tensor(0.2112)
Local adapation with distilling: 0.0001
training loss: tensor(0.5689) feature loss: tensor(0.2082)
Local adapation with distilling: 0.0001
training loss: tensor(0.8608) feature loss: tensor(0.2108)
Local adapation with distilling: 0.0001
training loss: tensor(0.5426) feature loss: tensor(0.2097)
Global Model Acc on global data: 0.4411 length of data: 10000
-------------Round number:  66  -------------
selected users: [8, 93, 4, 5, 52, 41, 0, 73, 88, 68]
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([52, 96, 8, 8]) torch.Size([52])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([52, 96, 8, 8]) torch.Size([52])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
all data: 498
Local adapation with distilling: 0.0001
training loss: tensor(0.6562) feature loss: tensor(0.2445)
Local adapation with distilling: 0.0001
training loss: tensor(0.7205) feature loss: tensor(0.2469)
Local adapation with distilling: 0.0001
training loss: tensor(0.6591) feature loss: tensor(0.2393)
Local adapation with distilling: 0.0001
training loss: tensor(0.7586) feature loss: tensor(0.2490)
Local adapation with distilling: 0.0001
training loss: tensor(0.8966) feature loss: tensor(0.2381)
Local adapation with distilling: 0.0001
training loss: tensor(0.6718) feature loss: tensor(0.2418)
Local adapation with distilling: 0.0001
training loss: tensor(0.6849) feature loss: tensor(0.2425)
Local adapation with distilling: 0.0001
training loss: tensor(0.6616) feature loss: tensor(0.2469)
Local adapation with distilling: 0.0001
training loss: tensor(0.6776) feature loss: tensor(0.2438)
Local adapation with distilling: 0.0001
training loss: tensor(0.6610) feature loss: tensor(0.2390)
Global Model Acc on global data: 0.417 length of data: 10000
-------------Round number:  67  -------------
selected users: [17, 24, 64, 93, 97, 29, 3, 70, 82, 11]
random features: torch.Size([53, 96, 8, 8]) torch.Size([53])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([52, 96, 8, 8]) torch.Size([52])
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
random features: torch.Size([54, 96, 8, 8]) torch.Size([54])
random features: torch.Size([53, 96, 8, 8]) torch.Size([53])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([46, 96, 8, 8]) torch.Size([46])
random features: torch.Size([53, 96, 8, 8]) torch.Size([53])
all data: 504
Local adapation with distilling: 0.0001
training loss: tensor(0.6377) feature loss: tensor(0.2527)
Local adapation with distilling: 0.0001
training loss: tensor(0.6986) feature loss: tensor(0.2573)
Local adapation with distilling: 0.0001
training loss: tensor(0.8470) feature loss: tensor(0.2460)
Local adapation with distilling: 0.0001
training loss: tensor(0.6763) feature loss: tensor(0.2569)
Local adapation with distilling: 0.0001
training loss: tensor(0.7513) feature loss: tensor(0.2586)
Local adapation with distilling: 0.0001
training loss: tensor(0.6447) feature loss: tensor(0.2658)
Local adapation with distilling: 0.0001
training loss: tensor(0.7103) feature loss: tensor(0.2662)
Local adapation with distilling: 0.0001
training loss: tensor(0.6802) feature loss: tensor(0.2544)
Local adapation with distilling: 0.0001
training loss: tensor(0.7880) feature loss: tensor(0.2655)
Local adapation with distilling: 0.0001
training loss: tensor(0.6696) feature loss: tensor(0.2621)
Global Model Acc on global data: 0.4425 length of data: 10000
-------------Round number:  68  -------------
selected users: [29, 30, 16, 5, 38, 71, 76, 94, 99, 95]
random features: torch.Size([54, 96, 8, 8]) torch.Size([54])
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
random features: torch.Size([53, 96, 8, 8]) torch.Size([53])
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
random features: torch.Size([54, 96, 8, 8]) torch.Size([54])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([53, 96, 8, 8]) torch.Size([53])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([46, 96, 8, 8]) torch.Size([46])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
all data: 508
Local adapation with distilling: 0.0001
training loss: tensor(0.5087) feature loss: tensor(0.2179)
Local adapation with distilling: 0.0001
training loss: tensor(0.7417) feature loss: tensor(0.2141)
Local adapation with distilling: 0.0001
training loss: tensor(0.6257) feature loss: tensor(0.2172)
Local adapation with distilling: 0.0001
training loss: tensor(0.6529) feature loss: tensor(0.2334)
Local adapation with distilling: 0.0001
training loss: tensor(0.5105) feature loss: tensor(0.2196)
Local adapation with distilling: 0.0001
training loss: tensor(0.5446) feature loss: tensor(0.2224)
Local adapation with distilling: 0.0001
training loss: tensor(0.5521) feature loss: tensor(0.2198)
Local adapation with distilling: 0.0001
training loss: tensor(0.5599) feature loss: tensor(0.2166)
Local adapation with distilling: 0.0001
training loss: tensor(0.6574) feature loss: tensor(0.2202)
Local adapation with distilling: 0.0001
training loss: tensor(0.5756) feature loss: tensor(0.2166)
Global Model Acc on global data: 0.4428 length of data: 10000
-------------Round number:  69  -------------
selected users: [72, 31, 13, 83, 33, 8, 26, 89, 64, 97]
random features: torch.Size([57, 96, 8, 8]) torch.Size([57])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([52, 96, 8, 8]) torch.Size([52])
random features: torch.Size([54, 96, 8, 8]) torch.Size([54])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
all data: 503
Local adapation with distilling: 0.0001
training loss: tensor(0.7112) feature loss: tensor(0.2594)
Local adapation with distilling: 0.0001
training loss: tensor(0.7720) feature loss: tensor(0.2472)
Local adapation with distilling: 0.0001
training loss: tensor(0.7700) feature loss: tensor(0.2517)
Local adapation with distilling: 0.0001
training loss: tensor(0.7592) feature loss: tensor(0.2583)
Local adapation with distilling: 0.0001
training loss: tensor(0.7716) feature loss: tensor(0.2504)
Local adapation with distilling: 0.0001
training loss: tensor(0.6714) feature loss: tensor(0.2532)
Local adapation with distilling: 0.0001
training loss: tensor(0.7066) feature loss: tensor(0.2518)
Local adapation with distilling: 0.0001
training loss: tensor(0.6410) feature loss: tensor(0.2516)
Local adapation with distilling: 0.0001
training loss: tensor(0.7978) feature loss: tensor(0.2506)
Local adapation with distilling: 0.0001
training loss: tensor(0.7260) feature loss: tensor(0.2552)
Global Model Acc on global data: 0.4035 length of data: 10000
-------------Round number:  70  -------------
selected users: [81, 43, 88, 32, 50, 71, 73, 55, 42, 2]
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([52, 96, 8, 8]) torch.Size([52])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
all data: 491
Local adapation with distilling: 0.0001
training loss: tensor(1.0468) feature loss: tensor(0.3093)
Local adapation with distilling: 0.0001
training loss: tensor(0.7574) feature loss: tensor(0.3054)
Local adapation with distilling: 0.0001
training loss: tensor(0.7422) feature loss: tensor(0.2994)
Local adapation with distilling: 0.0001
training loss: tensor(0.8839) feature loss: tensor(0.3005)
Local adapation with distilling: 0.0001
training loss: tensor(0.7845) feature loss: tensor(0.3085)
Local adapation with distilling: 0.0001
training loss: tensor(0.6903) feature loss: tensor(0.3047)
Local adapation with distilling: 0.0001
training loss: tensor(0.7072) feature loss: tensor(0.3007)
Local adapation with distilling: 0.0001
training loss: tensor(0.7707) feature loss: tensor(0.3069)
Local adapation with distilling: 0.0001
training loss: tensor(0.8527) feature loss: tensor(0.3046)
Local adapation with distilling: 0.0001
training loss: tensor(0.7498) feature loss: tensor(0.3111)
Global Model Acc on global data: 0.4058 length of data: 10000
-------------Round number:  71  -------------
selected users: [41, 84, 98, 42, 75, 25, 60, 19, 52, 29]
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
random features: torch.Size([54, 96, 8, 8]) torch.Size([54])
all data: 491
Local adapation with distilling: 0.0001
training loss: tensor(0.6175) feature loss: tensor(0.2197)
Local adapation with distilling: 0.0001
training loss: tensor(0.6964) feature loss: tensor(0.2183)
Local adapation with distilling: 0.0001
training loss: tensor(0.6239) feature loss: tensor(0.2234)
Local adapation with distilling: 0.0001
training loss: tensor(0.6546) feature loss: tensor(0.2238)
Local adapation with distilling: 0.0001
training loss: tensor(0.6654) feature loss: tensor(0.2288)
Local adapation with distilling: 0.0001
training loss: tensor(0.6795) feature loss: tensor(0.2369)
Local adapation with distilling: 0.0001
training loss: tensor(0.6359) feature loss: tensor(0.2196)
Local adapation with distilling: 0.0001
training loss: tensor(0.6296) feature loss: tensor(0.2263)
Local adapation with distilling: 0.0001
training loss: tensor(0.8596) feature loss: tensor(0.2311)
Local adapation with distilling: 0.0001
training loss: tensor(0.5706) feature loss: tensor(0.2310)
Global Model Acc on global data: 0.4298 length of data: 10000
-------------Round number:  72  -------------
selected users: [76, 82, 43, 16, 84, 95, 78, 91, 30, 22]
random features: torch.Size([53, 96, 8, 8]) torch.Size([53])
random features: torch.Size([46, 96, 8, 8]) torch.Size([46])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([53, 96, 8, 8]) torch.Size([53])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([52, 96, 8, 8]) torch.Size([52])
random features: torch.Size([52, 96, 8, 8]) torch.Size([52])
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
all data: 501
Local adapation with distilling: 0.0001
training loss: tensor(0.6304) feature loss: tensor(0.2387)
Local adapation with distilling: 0.0001
training loss: tensor(0.6632) feature loss: tensor(0.2355)
Local adapation with distilling: 0.0001
training loss: tensor(0.6443) feature loss: tensor(0.2360)
Local adapation with distilling: 0.0001
training loss: tensor(0.6756) feature loss: tensor(0.2426)
Local adapation with distilling: 0.0001
training loss: tensor(0.6456) feature loss: tensor(0.2331)
Local adapation with distilling: 0.0001
training loss: tensor(0.6243) feature loss: tensor(0.2333)
Local adapation with distilling: 0.0001
training loss: tensor(0.6842) feature loss: tensor(0.2411)
Local adapation with distilling: 0.0001
training loss: tensor(0.6820) feature loss: tensor(0.2389)
Local adapation with distilling: 0.0001
training loss: tensor(0.7590) feature loss: tensor(0.2343)
Local adapation with distilling: 0.0001
training loss: tensor(0.8561) feature loss: tensor(0.2383)
Global Model Acc on global data: 0.4141 length of data: 10000
-------------Round number:  73  -------------
selected users: [49, 14, 34, 70, 90, 35, 68, 76, 80, 9]
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
random features: torch.Size([53, 96, 8, 8]) torch.Size([53])
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
random features: torch.Size([53, 96, 8, 8]) torch.Size([53])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
all data: 496
Local adapation with distilling: 0.0001
training loss: tensor(0.6917) feature loss: tensor(0.2218)
Local adapation with distilling: 0.0001
training loss: tensor(0.6350) feature loss: tensor(0.2275)
Local adapation with distilling: 0.0001
training loss: tensor(0.6273) feature loss: tensor(0.2290)
Local adapation with distilling: 0.0001
training loss: tensor(0.6002) feature loss: tensor(0.2288)
Local adapation with distilling: 0.0001
training loss: tensor(0.6437) feature loss: tensor(0.2160)
Local adapation with distilling: 0.0001
training loss: tensor(0.7069) feature loss: tensor(0.2202)
Local adapation with distilling: 0.0001
training loss: tensor(0.6257) feature loss: tensor(0.2369)
Local adapation with distilling: 0.0001
training loss: tensor(0.5608) feature loss: tensor(0.2317)
Local adapation with distilling: 0.0001
training loss: tensor(0.5980) feature loss: tensor(0.2193)
Local adapation with distilling: 0.0001
training loss: tensor(0.6760) feature loss: tensor(0.2295)
Global Model Acc on global data: 0.4446 length of data: 10000
-------------Round number:  74  -------------
selected users: [85, 64, 63, 80, 6, 12, 43, 17, 7, 8]
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([52, 96, 8, 8]) torch.Size([52])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([53, 96, 8, 8]) torch.Size([53])
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
all data: 494
Local adapation with distilling: 0.0001
training loss: tensor(0.6197) feature loss: tensor(0.2123)
Local adapation with distilling: 0.0001
training loss: tensor(0.6830) feature loss: tensor(0.2188)
Local adapation with distilling: 0.0001
training loss: tensor(0.5660) feature loss: tensor(0.2096)
Local adapation with distilling: 0.0001
training loss: tensor(0.5427) feature loss: tensor(0.2083)
Local adapation with distilling: 0.0001
training loss: tensor(0.7404) feature loss: tensor(0.2163)
Local adapation with distilling: 0.0001
training loss: tensor(0.7490) feature loss: tensor(0.2088)
Local adapation with distilling: 0.0001
training loss: tensor(0.5597) feature loss: tensor(0.2131)
Local adapation with distilling: 0.0001
training loss: tensor(0.5674) feature loss: tensor(0.2182)
Local adapation with distilling: 0.0001
training loss: tensor(0.6780) feature loss: tensor(0.2126)
Local adapation with distilling: 0.0001
training loss: tensor(0.5731) feature loss: tensor(0.2134)
Global Model Acc on global data: 0.4664 length of data: 10000
save a model
-------------Round number:  75  -------------
selected users: [36, 7, 6, 45, 56, 54, 22, 37, 53, 68]
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
random features: torch.Size([52, 96, 8, 8]) torch.Size([52])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([55, 96, 8, 8]) torch.Size([55])
random features: torch.Size([52, 96, 8, 8]) torch.Size([52])
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([57, 96, 8, 8]) torch.Size([57])
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
all data: 515
Local adapation with distilling: 0.0001
training loss: tensor(0.7423) feature loss: tensor(0.2202)
Local adapation with distilling: 0.0001
training loss: tensor(0.7567) feature loss: tensor(0.2291)
Local adapation with distilling: 0.0001
training loss: tensor(0.7499) feature loss: tensor(0.2640)
Local adapation with distilling: 0.0001
training loss: tensor(0.7353) feature loss: tensor(0.2327)
Local adapation with distilling: 0.0001
training loss: tensor(0.7047) feature loss: tensor(0.2455)
Local adapation with distilling: 0.0001
training loss: tensor(0.8078) feature loss: tensor(0.2539)
Local adapation with distilling: 0.0001
training loss: tensor(0.8535) feature loss: tensor(0.2390)
Local adapation with distilling: 0.0001
training loss: tensor(0.6597) feature loss: tensor(0.2292)
Local adapation with distilling: 0.0001
training loss: tensor(0.7152) feature loss: tensor(0.2313)
Local adapation with distilling: 0.0001
training loss: tensor(0.7151) feature loss: tensor(0.2499)
Global Model Acc on global data: 0.417 length of data: 10000
-------------Round number:  76  -------------
selected users: [38, 37, 32, 50, 10, 94, 19, 44, 86, 23]
random features: torch.Size([54, 96, 8, 8]) torch.Size([54])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([46, 96, 8, 8]) torch.Size([46])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
random features: torch.Size([53, 96, 8, 8]) torch.Size([53])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
all data: 497
Local adapation with distilling: 0.0001
training loss: tensor(0.5450) feature loss: tensor(0.2364)
Local adapation with distilling: 0.0001
training loss: tensor(0.5593) feature loss: tensor(0.2357)
Local adapation with distilling: 0.0001
training loss: tensor(0.7121) feature loss: tensor(0.2551)
Local adapation with distilling: 0.0001
training loss: tensor(0.6424) feature loss: tensor(0.2423)
Local adapation with distilling: 0.0001
training loss: tensor(0.6762) feature loss: tensor(0.2388)
Local adapation with distilling: 0.0001
training loss: tensor(0.6100) feature loss: tensor(0.2328)
Local adapation with distilling: 0.0001
training loss: tensor(0.5802) feature loss: tensor(0.2408)
Local adapation with distilling: 0.0001
training loss: tensor(0.7409) feature loss: tensor(0.2360)
Local adapation with distilling: 0.0001
training loss: tensor(0.5788) feature loss: tensor(0.2322)
Local adapation with distilling: 0.0001
training loss: tensor(0.7522) feature loss: tensor(0.2461)
Global Model Acc on global data: 0.4346 length of data: 10000
-------------Round number:  77  -------------
selected users: [5, 93, 41, 96, 16, 42, 81, 91, 50, 58]
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
random features: torch.Size([52, 96, 8, 8]) torch.Size([52])
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
random features: torch.Size([53, 96, 8, 8]) torch.Size([53])
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
random features: torch.Size([52, 96, 8, 8]) torch.Size([52])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
all data: 503
Local adapation with distilling: 0.0001
training loss: tensor(0.7120) feature loss: tensor(0.2324)
Local adapation with distilling: 0.0001
training loss: tensor(0.6682) feature loss: tensor(0.2355)
Local adapation with distilling: 0.0001
training loss: tensor(0.6102) feature loss: tensor(0.2282)
Local adapation with distilling: 0.0001
training loss: tensor(0.8868) feature loss: tensor(0.2222)
Local adapation with distilling: 0.0001
training loss: tensor(0.6170) feature loss: tensor(0.2279)
Local adapation with distilling: 0.0001
training loss: tensor(0.6201) feature loss: tensor(0.2246)
Local adapation with distilling: 0.0001
training loss: tensor(0.9445) feature loss: tensor(0.2257)
Local adapation with distilling: 0.0001
training loss: tensor(0.6352) feature loss: tensor(0.2368)
Local adapation with distilling: 0.0001
training loss: tensor(0.5941) feature loss: tensor(0.2310)
Local adapation with distilling: 0.0001
training loss: tensor(0.6490) feature loss: tensor(0.2216)
Global Model Acc on global data: 0.4485 length of data: 10000
-------------Round number:  78  -------------
selected users: [9, 46, 7, 63, 15, 2, 74, 31, 5, 36]
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
all data: 495
Local adapation with distilling: 0.0001
training loss: tensor(0.6618) feature loss: tensor(0.2368)
Local adapation with distilling: 0.0001
training loss: tensor(0.6097) feature loss: tensor(0.2398)
Local adapation with distilling: 0.0001
training loss: tensor(0.6339) feature loss: tensor(0.2381)
Local adapation with distilling: 0.0001
training loss: tensor(0.5996) feature loss: tensor(0.2358)
Local adapation with distilling: 0.0001
training loss: tensor(0.6976) feature loss: tensor(0.2415)
Local adapation with distilling: 0.0001
training loss: tensor(0.6266) feature loss: tensor(0.2263)
Local adapation with distilling: 0.0001
training loss: tensor(0.6488) feature loss: tensor(0.2258)
Local adapation with distilling: 0.0001
training loss: tensor(0.6781) feature loss: tensor(0.2335)
Local adapation with distilling: 0.0001
training loss: tensor(0.6553) feature loss: tensor(0.2348)
Local adapation with distilling: 0.0001
training loss: tensor(0.6159) feature loss: tensor(0.2287)
Global Model Acc on global data: 0.4357 length of data: 10000
-------------Round number:  79  -------------
selected users: [68, 18, 86, 60, 56, 32, 30, 24, 45, 92]
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([53, 96, 8, 8]) torch.Size([53])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([55, 96, 8, 8]) torch.Size([55])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([46, 96, 8, 8]) torch.Size([46])
all data: 497
Local adapation with distilling: 0.0001
training loss: tensor(0.6104) feature loss: tensor(0.2474)
Local adapation with distilling: 0.0001
training loss: tensor(0.7616) feature loss: tensor(0.2422)
Local adapation with distilling: 0.0001
training loss: tensor(0.5973) feature loss: tensor(0.2514)
Local adapation with distilling: 0.0001
training loss: tensor(0.6522) feature loss: tensor(0.2554)
Local adapation with distilling: 0.0001
training loss: tensor(0.6199) feature loss: tensor(0.2485)
Local adapation with distilling: 0.0001
training loss: tensor(0.7370) feature loss: tensor(0.2549)
Local adapation with distilling: 0.0001
training loss: tensor(0.7177) feature loss: tensor(0.2484)
Local adapation with distilling: 0.0001
training loss: tensor(0.6526) feature loss: tensor(0.2453)
Local adapation with distilling: 0.0001
training loss: tensor(0.6346) feature loss: tensor(0.2493)
Local adapation with distilling: 0.0001
training loss: tensor(0.7549) feature loss: tensor(0.2533)
Global Model Acc on global data: 0.4356 length of data: 10000
-------------Round number:  80  -------------
selected users: [37, 65, 95, 53, 66, 30, 73, 85, 45, 36]
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([57, 96, 8, 8]) torch.Size([57])
random features: torch.Size([54, 96, 8, 8]) torch.Size([54])
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
random features: torch.Size([52, 96, 8, 8]) torch.Size([52])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
all data: 509
Local adapation with distilling: 0.0001
training loss: tensor(0.6234) feature loss: tensor(0.2639)
Local adapation with distilling: 0.0001
training loss: tensor(0.6912) feature loss: tensor(0.2634)
Local adapation with distilling: 0.0001
training loss: tensor(0.6257) feature loss: tensor(0.2660)
Local adapation with distilling: 0.0001
training loss: tensor(0.6479) feature loss: tensor(0.2657)
Local adapation with distilling: 0.0001
training loss: tensor(0.7043) feature loss: tensor(0.2714)
Local adapation with distilling: 0.0001
training loss: tensor(0.6730) feature loss: tensor(0.2507)
Local adapation with distilling: 0.0001
training loss: tensor(0.6784) feature loss: tensor(0.2684)
Local adapation with distilling: 0.0001
training loss: tensor(0.6667) feature loss: tensor(0.2598)
Local adapation with distilling: 0.0001
training loss: tensor(0.6058) feature loss: tensor(0.2635)
Local adapation with distilling: 0.0001
training loss: tensor(0.6305) feature loss: tensor(0.2630)
Global Model Acc on global data: 0.4521 length of data: 10000
-------------Round number:  81  -------------
selected users: [73, 89, 41, 78, 51, 21, 30, 69, 8, 5]
random features: torch.Size([52, 96, 8, 8]) torch.Size([52])
random features: torch.Size([54, 96, 8, 8]) torch.Size([54])
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
random features: torch.Size([52, 96, 8, 8]) torch.Size([52])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
all data: 495
Local adapation with distilling: 0.0001
training loss: tensor(0.5943) feature loss: tensor(0.2251)
Local adapation with distilling: 0.0001
training loss: tensor(0.5905) feature loss: tensor(0.2353)
Local adapation with distilling: 0.0001
training loss: tensor(0.5868) feature loss: tensor(0.2441)
Local adapation with distilling: 0.0001
training loss: tensor(0.6131) feature loss: tensor(0.2249)
Local adapation with distilling: 0.0001
training loss: tensor(0.6523) feature loss: tensor(0.2362)
Local adapation with distilling: 0.0001
training loss: tensor(0.6736) feature loss: tensor(0.2337)
Local adapation with distilling: 0.0001
training loss: tensor(0.6056) feature loss: tensor(0.2304)
Local adapation with distilling: 0.0001
training loss: tensor(0.5911) feature loss: tensor(0.2287)
Local adapation with distilling: 0.0001
training loss: tensor(0.5718) feature loss: tensor(0.2301)
Local adapation with distilling: 0.0001
training loss: tensor(0.6188) feature loss: tensor(0.2247)
Global Model Acc on global data: 0.4275 length of data: 10000
-------------Round number:  82  -------------
selected users: [72, 33, 58, 2, 55, 84, 54, 75, 28, 40]
random features: torch.Size([57, 96, 8, 8]) torch.Size([57])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([52, 96, 8, 8]) torch.Size([52])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
random features: torch.Size([46, 96, 8, 8]) torch.Size([46])
all data: 496
Local adapation with distilling: 0.0001
training loss: tensor(0.6113) feature loss: tensor(0.2432)
Local adapation with distilling: 0.0001
training loss: tensor(0.6414) feature loss: tensor(0.2407)
Local adapation with distilling: 0.0001
training loss: tensor(0.6261) feature loss: tensor(0.2445)
Local adapation with distilling: 0.0001
training loss: tensor(0.5961) feature loss: tensor(0.2412)
Local adapation with distilling: 0.0001
training loss: tensor(0.6520) feature loss: tensor(0.2476)
Local adapation with distilling: 0.0001
training loss: tensor(0.7026) feature loss: tensor(0.2457)
Local adapation with distilling: 0.0001
training loss: tensor(0.7394) feature loss: tensor(0.2544)
Local adapation with distilling: 0.0001
training loss: tensor(0.6545) feature loss: tensor(0.2481)
Local adapation with distilling: 0.0001
training loss: tensor(0.9414) feature loss: tensor(0.2430)
Local adapation with distilling: 0.0001
training loss: tensor(0.6582) feature loss: tensor(0.2400)
Global Model Acc on global data: 0.3794 length of data: 10000
-------------Round number:  83  -------------
selected users: [6, 65, 95, 84, 61, 12, 30, 69, 35, 1]
random features: torch.Size([52, 96, 8, 8]) torch.Size([52])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([53, 96, 8, 8]) torch.Size([53])
random features: torch.Size([52, 96, 8, 8]) torch.Size([52])
all data: 498
Local adapation with distilling: 0.0001
training loss: tensor(0.7519) feature loss: tensor(0.2848)
Local adapation with distilling: 0.0001
training loss: tensor(0.6731) feature loss: tensor(0.2666)
Local adapation with distilling: 0.0001
training loss: tensor(0.6370) feature loss: tensor(0.2738)
Local adapation with distilling: 0.0001
training loss: tensor(0.7054) feature loss: tensor(0.2722)
Local adapation with distilling: 0.0001
training loss: tensor(0.7333) feature loss: tensor(0.2738)
Local adapation with distilling: 0.0001
training loss: tensor(0.7607) feature loss: tensor(0.2621)
Local adapation with distilling: 0.0001
training loss: tensor(0.6446) feature loss: tensor(0.2679)
Local adapation with distilling: 0.0001
training loss: tensor(0.6586) feature loss: tensor(0.2749)
Local adapation with distilling: 0.0001
training loss: tensor(0.7716) feature loss: tensor(0.2766)
Local adapation with distilling: 0.0001
training loss: tensor(0.7442) feature loss: tensor(0.2759)
Global Model Acc on global data: 0.3945 length of data: 10000
-------------Round number:  84  -------------
selected users: [94, 55, 80, 1, 90, 11, 32, 8, 6, 82]
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([52, 96, 8, 8]) torch.Size([52])
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
random features: torch.Size([53, 96, 8, 8]) torch.Size([53])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([52, 96, 8, 8]) torch.Size([52])
random features: torch.Size([46, 96, 8, 8]) torch.Size([46])
all data: 493
Local adapation with distilling: 0.0001
training loss: tensor(0.7648) feature loss: tensor(0.2748)
Local adapation with distilling: 0.0001
training loss: tensor(0.6955) feature loss: tensor(0.2652)
Local adapation with distilling: 0.0001
training loss: tensor(0.7198) feature loss: tensor(0.2760)
Local adapation with distilling: 0.0001
training loss: tensor(0.7309) feature loss: tensor(0.2652)
Local adapation with distilling: 0.0001
training loss: tensor(0.7909) feature loss: tensor(0.2796)
Local adapation with distilling: 0.0001
training loss: tensor(0.7280) feature loss: tensor(0.2751)
Local adapation with distilling: 0.0001
training loss: tensor(0.8028) feature loss: tensor(0.2838)
Local adapation with distilling: 0.0001
training loss: tensor(0.6706) feature loss: tensor(0.2718)
Local adapation with distilling: 0.0001
training loss: tensor(0.7336) feature loss: tensor(0.2747)
Local adapation with distilling: 0.0001
training loss: tensor(0.7580) feature loss: tensor(0.2701)
Global Model Acc on global data: 0.4512 length of data: 10000
-------------Round number:  85  -------------
selected users: [81, 25, 40, 87, 41, 23, 10, 89, 50, 54]
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([46, 96, 8, 8]) torch.Size([46])
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([46, 96, 8, 8]) torch.Size([46])
random features: torch.Size([54, 96, 8, 8]) torch.Size([54])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([52, 96, 8, 8]) torch.Size([52])
all data: 491
Local adapation with distilling: 0.0001
training loss: tensor(0.8468) feature loss: tensor(0.2213)
Local adapation with distilling: 0.0001
training loss: tensor(0.6625) feature loss: tensor(0.2273)
Local adapation with distilling: 0.0001
training loss: tensor(0.6318) feature loss: tensor(0.2279)
Local adapation with distilling: 0.0001
training loss: tensor(0.7032) feature loss: tensor(0.2263)
Local adapation with distilling: 0.0001
training loss: tensor(0.5918) feature loss: tensor(0.2262)
Local adapation with distilling: 0.0001
training loss: tensor(0.7195) feature loss: tensor(0.2223)
Local adapation with distilling: 0.0001
training loss: tensor(0.6539) feature loss: tensor(0.2225)
Local adapation with distilling: 0.0001
training loss: tensor(0.5953) feature loss: tensor(0.2315)
Local adapation with distilling: 0.0001
training loss: tensor(0.6173) feature loss: tensor(0.2244)
Local adapation with distilling: 0.0001
training loss: tensor(0.7027) feature loss: tensor(0.2253)
Global Model Acc on global data: 0.4374 length of data: 10000
-------------Round number:  86  -------------
selected users: [69, 74, 34, 68, 42, 0, 32, 88, 8, 3]
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([53, 96, 8, 8]) torch.Size([53])
all data: 489
Local adapation with distilling: 0.0001
training loss: tensor(0.6427) feature loss: tensor(0.2568)
Local adapation with distilling: 0.0001
training loss: tensor(0.6809) feature loss: tensor(0.2566)
Local adapation with distilling: 0.0001
training loss: tensor(0.6413) feature loss: tensor(0.2516)
Local adapation with distilling: 0.0001
training loss: tensor(0.6939) feature loss: tensor(0.2572)
Local adapation with distilling: 0.0001
training loss: tensor(0.7036) feature loss: tensor(0.2538)
Local adapation with distilling: 0.0001
training loss: tensor(0.7140) feature loss: tensor(0.2490)
Local adapation with distilling: 0.0001
training loss: tensor(0.6693) feature loss: tensor(0.2520)
Local adapation with distilling: 0.0001
training loss: tensor(0.6892) feature loss: tensor(0.2579)
Local adapation with distilling: 0.0001
training loss: tensor(0.5768) feature loss: tensor(0.2518)
Local adapation with distilling: 0.0001
training loss: tensor(0.7036) feature loss: tensor(0.2551)
Global Model Acc on global data: 0.4132 length of data: 10000
-------------Round number:  87  -------------
selected users: [16, 81, 85, 32, 39, 25, 26, 29, 65, 7]
random features: torch.Size([53, 96, 8, 8]) torch.Size([53])
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([52, 96, 8, 8]) torch.Size([52])
random features: torch.Size([54, 96, 8, 8]) torch.Size([54])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
all data: 506
Local adapation with distilling: 0.0001
training loss: tensor(0.7067) feature loss: tensor(0.2945)
Local adapation with distilling: 0.0001
training loss: tensor(0.9175) feature loss: tensor(0.2848)
Local adapation with distilling: 0.0001
training loss: tensor(0.7123) feature loss: tensor(0.2762)
Local adapation with distilling: 0.0001
training loss: tensor(0.6732) feature loss: tensor(0.2860)
Local adapation with distilling: 0.0001
training loss: tensor(0.7488) feature loss: tensor(0.2927)
Local adapation with distilling: 0.0001
training loss: tensor(0.7045) feature loss: tensor(0.2860)
Local adapation with distilling: 0.0001
training loss: tensor(0.6715) feature loss: tensor(0.2800)
Local adapation with distilling: 0.0001
training loss: tensor(0.6725) feature loss: tensor(0.2875)
Local adapation with distilling: 0.0001
training loss: tensor(0.7181) feature loss: tensor(0.2894)
Local adapation with distilling: 0.0001
training loss: tensor(0.7119) feature loss: tensor(0.2778)
Global Model Acc on global data: 0.4061 length of data: 10000
-------------Round number:  88  -------------
selected users: [95, 53, 43, 84, 2, 74, 55, 31, 54, 97]
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([57, 96, 8, 8]) torch.Size([57])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([52, 96, 8, 8]) torch.Size([52])
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
all data: 495
Local adapation with distilling: 0.0001
training loss: tensor(0.6796) feature loss: tensor(0.3082)
Local adapation with distilling: 0.0001
training loss: tensor(0.6872) feature loss: tensor(0.3042)
Local adapation with distilling: 0.0001
training loss: tensor(0.7240) feature loss: tensor(0.3023)
Local adapation with distilling: 0.0001
training loss: tensor(0.7686) feature loss: tensor(0.3128)
Local adapation with distilling: 0.0001
training loss: tensor(0.7564) feature loss: tensor(0.3071)
Local adapation with distilling: 0.0001
training loss: tensor(0.7118) feature loss: tensor(0.3030)
Local adapation with distilling: 0.0001
training loss: tensor(0.7139) feature loss: tensor(0.3038)
Local adapation with distilling: 0.0001
training loss: tensor(0.7865) feature loss: tensor(0.2953)
Local adapation with distilling: 0.0001
training loss: tensor(0.8095) feature loss: tensor(0.3049)
Local adapation with distilling: 0.0001
training loss: tensor(0.7886) feature loss: tensor(0.3066)
Global Model Acc on global data: 0.4489 length of data: 10000
-------------Round number:  89  -------------
selected users: [65, 21, 87, 6, 46, 74, 44, 60, 72, 5]
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
random features: torch.Size([52, 96, 8, 8]) torch.Size([52])
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([57, 96, 8, 8]) torch.Size([57])
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
all data: 497
Local adapation with distilling: 0.0001
training loss: tensor(0.5193) feature loss: tensor(0.2074)
Local adapation with distilling: 0.0001
training loss: tensor(0.5622) feature loss: tensor(0.2041)
Local adapation with distilling: 0.0001
training loss: tensor(0.6233) feature loss: tensor(0.1983)
Local adapation with distilling: 0.0001
training loss: tensor(0.5581) feature loss: tensor(0.2140)
Local adapation with distilling: 0.0001
training loss: tensor(0.5711) feature loss: tensor(0.2136)
Local adapation with distilling: 0.0001
training loss: tensor(0.5148) feature loss: tensor(0.2091)
Local adapation with distilling: 0.0001
training loss: tensor(0.6463) feature loss: tensor(0.2046)
Local adapation with distilling: 0.0001
training loss: tensor(0.5493) feature loss: tensor(0.2009)
Local adapation with distilling: 0.0001
training loss: tensor(0.5632) feature loss: tensor(0.2060)
Local adapation with distilling: 0.0001
training loss: tensor(0.5981) feature loss: tensor(0.2092)
Global Model Acc on global data: 0.4214 length of data: 10000
-------------Round number:  90  -------------
selected users: [25, 85, 96, 89, 65, 94, 5, 35, 36, 92]
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
random features: torch.Size([54, 96, 8, 8]) torch.Size([54])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
random features: torch.Size([53, 96, 8, 8]) torch.Size([53])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([46, 96, 8, 8]) torch.Size([46])
all data: 504
Local adapation with distilling: 0.0001
training loss: tensor(0.5866) feature loss: tensor(0.2273)
Local adapation with distilling: 0.0001
training loss: tensor(0.5801) feature loss: tensor(0.2187)
Local adapation with distilling: 0.0001
training loss: tensor(0.8526) feature loss: tensor(0.2193)
Local adapation with distilling: 0.0001
training loss: tensor(0.5832) feature loss: tensor(0.2339)
Local adapation with distilling: 0.0001
training loss: tensor(0.5464) feature loss: tensor(0.2225)
Local adapation with distilling: 0.0001
training loss: tensor(0.6152) feature loss: tensor(0.2244)
Local adapation with distilling: 0.0001
training loss: tensor(0.5822) feature loss: tensor(0.2214)
Local adapation with distilling: 0.0001
training loss: tensor(0.7062) feature loss: tensor(0.2275)
Local adapation with distilling: 0.0001
training loss: tensor(0.6309) feature loss: tensor(0.2192)
Local adapation with distilling: 0.0001
training loss: tensor(0.6900) feature loss: tensor(0.2135)
Global Model Acc on global data: 0.4379 length of data: 10000
-------------Round number:  91  -------------
selected users: [75, 25, 3, 52, 78, 54, 59, 26, 62, 97]
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([53, 96, 8, 8]) torch.Size([53])
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
random features: torch.Size([52, 96, 8, 8]) torch.Size([52])
random features: torch.Size([52, 96, 8, 8]) torch.Size([52])
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
random features: torch.Size([52, 96, 8, 8]) torch.Size([52])
random features: torch.Size([46, 96, 8, 8]) torch.Size([46])
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
all data: 502
Local adapation with distilling: 0.0001
training loss: tensor(0.6077) feature loss: tensor(0.2228)
Local adapation with distilling: 0.0001
training loss: tensor(0.5624) feature loss: tensor(0.2223)
Local adapation with distilling: 0.0001
training loss: tensor(0.6511) feature loss: tensor(0.2331)
Local adapation with distilling: 0.0001
training loss: tensor(0.8814) feature loss: tensor(0.2248)
Local adapation with distilling: 0.0001
training loss: tensor(0.6616) feature loss: tensor(0.2245)
Local adapation with distilling: 0.0001
training loss: tensor(0.6069) feature loss: tensor(0.2298)
Local adapation with distilling: 0.0001
training loss: tensor(0.6632) feature loss: tensor(0.2233)
Local adapation with distilling: 0.0001
training loss: tensor(0.5792) feature loss: tensor(0.2283)
Local adapation with distilling: 0.0001
training loss: tensor(0.7201) feature loss: tensor(0.2360)
Local adapation with distilling: 0.0001
training loss: tensor(0.6464) feature loss: tensor(0.2370)
Global Model Acc on global data: 0.4462 length of data: 10000
-------------Round number:  92  -------------
selected users: [25, 99, 73, 61, 66, 36, 23, 83, 77, 6]
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([46, 96, 8, 8]) torch.Size([46])
random features: torch.Size([52, 96, 8, 8]) torch.Size([52])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([54, 96, 8, 8]) torch.Size([54])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([46, 96, 8, 8]) torch.Size([46])
random features: torch.Size([52, 96, 8, 8]) torch.Size([52])
all data: 499
Local adapation with distilling: 0.0001
training loss: tensor(0.5812) feature loss: tensor(0.2258)
Local adapation with distilling: 0.0001
training loss: tensor(0.7425) feature loss: tensor(0.2262)
Local adapation with distilling: 0.0001
training loss: tensor(0.6884) feature loss: tensor(0.2342)
Local adapation with distilling: 0.0001
training loss: tensor(0.6683) feature loss: tensor(0.2295)
Local adapation with distilling: 0.0001
training loss: tensor(0.6874) feature loss: tensor(0.2316)
Local adapation with distilling: 0.0001
training loss: tensor(0.6345) feature loss: tensor(0.2241)
Local adapation with distilling: 0.0001
training loss: tensor(0.7393) feature loss: tensor(0.2307)
Local adapation with distilling: 0.0001
training loss: tensor(0.7406) feature loss: tensor(0.2290)
Local adapation with distilling: 0.0001
training loss: tensor(0.7950) feature loss: tensor(0.2237)
Local adapation with distilling: 0.0001
training loss: tensor(0.6308) feature loss: tensor(0.2385)
Global Model Acc on global data: 0.4545 length of data: 10000
-------------Round number:  93  -------------
selected users: [75, 82, 56, 27, 42, 35, 1, 97, 66, 61]
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([46, 96, 8, 8]) torch.Size([46])
random features: torch.Size([55, 96, 8, 8]) torch.Size([55])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
random features: torch.Size([53, 96, 8, 8]) torch.Size([53])
random features: torch.Size([52, 96, 8, 8]) torch.Size([52])
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
random features: torch.Size([54, 96, 8, 8]) torch.Size([54])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
all data: 500
Local adapation with distilling: 0.0001
training loss: tensor(0.5897) feature loss: tensor(0.2234)
Local adapation with distilling: 0.0001
training loss: tensor(0.6569) feature loss: tensor(0.2267)
Local adapation with distilling: 0.0001
training loss: tensor(0.6013) feature loss: tensor(0.2301)
Local adapation with distilling: 0.0001
training loss: tensor(0.7507) feature loss: tensor(0.2267)
Local adapation with distilling: 0.0001
training loss: tensor(0.6563) feature loss: tensor(0.2264)
Local adapation with distilling: 0.0001
training loss: tensor(0.6437) feature loss: tensor(0.2288)
Local adapation with distilling: 0.0001
training loss: tensor(0.6620) feature loss: tensor(0.2269)
Local adapation with distilling: 0.0001
training loss: tensor(0.6087) feature loss: tensor(0.2284)
Local adapation with distilling: 0.0001
training loss: tensor(0.5978) feature loss: tensor(0.2237)
Local adapation with distilling: 0.0001
training loss: tensor(0.5949) feature loss: tensor(0.2261)
Global Model Acc on global data: 0.4435 length of data: 10000
-------------Round number:  94  -------------
selected users: [13, 73, 5, 18, 99, 48, 23, 4, 35, 17]
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([52, 96, 8, 8]) torch.Size([52])
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([46, 96, 8, 8]) torch.Size([46])
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([53, 96, 8, 8]) torch.Size([53])
random features: torch.Size([53, 96, 8, 8]) torch.Size([53])
all data: 499
Local adapation with distilling: 0.0001
training loss: tensor(0.6862) feature loss: tensor(0.2289)
Local adapation with distilling: 0.0001
training loss: tensor(0.5980) feature loss: tensor(0.2339)
Local adapation with distilling: 0.0001
training loss: tensor(0.6307) feature loss: tensor(0.2282)
Local adapation with distilling: 0.0001
training loss: tensor(0.8277) feature loss: tensor(0.2235)
Local adapation with distilling: 0.0001
training loss: tensor(0.6811) feature loss: tensor(0.2311)
Local adapation with distilling: 0.0001
training loss: tensor(0.8275) feature loss: tensor(0.2244)
Local adapation with distilling: 0.0001
training loss: tensor(0.6857) feature loss: tensor(0.2336)
Local adapation with distilling: 0.0001
training loss: tensor(0.7115) feature loss: tensor(0.2322)
Local adapation with distilling: 0.0001
training loss: tensor(0.5985) feature loss: tensor(0.2304)
Local adapation with distilling: 0.0001
training loss: tensor(0.6188) feature loss: tensor(0.2271)
Global Model Acc on global data: 0.4492 length of data: 10000
-------------Round number:  95  -------------
selected users: [88, 9, 1, 60, 95, 26, 45, 71, 44, 21]
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
random features: torch.Size([52, 96, 8, 8]) torch.Size([52])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([52, 96, 8, 8]) torch.Size([52])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
all data: 495
Local adapation with distilling: 0.0001
training loss: tensor(0.5433) feature loss: tensor(0.2074)
Local adapation with distilling: 0.0001
training loss: tensor(0.7521) feature loss: tensor(0.2158)
Local adapation with distilling: 0.0001
training loss: tensor(0.5358) feature loss: tensor(0.2130)
Local adapation with distilling: 0.0001
training loss: tensor(0.5612) feature loss: tensor(0.2137)
Local adapation with distilling: 0.0001
training loss: tensor(0.5203) feature loss: tensor(0.2132)
Local adapation with distilling: 0.0001
training loss: tensor(0.5141) feature loss: tensor(0.2128)
Local adapation with distilling: 0.0001
training loss: tensor(0.5303) feature loss: tensor(0.2149)
Local adapation with distilling: 0.0001
training loss: tensor(0.5129) feature loss: tensor(0.2104)
Local adapation with distilling: 0.0001
training loss: tensor(0.6456) feature loss: tensor(0.2192)
Local adapation with distilling: 0.0001
training loss: tensor(0.5536) feature loss: tensor(0.2147)
Global Model Acc on global data: 0.4186 length of data: 10000
-------------Round number:  96  -------------
selected users: [41, 28, 52, 15, 87, 17, 75, 42, 45, 49]
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
random features: torch.Size([53, 96, 8, 8]) torch.Size([53])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
all data: 494
Local adapation with distilling: 0.0001
training loss: tensor(0.6129) feature loss: tensor(0.2420)
Local adapation with distilling: 0.0001
training loss: tensor(0.7337) feature loss: tensor(0.2494)
Local adapation with distilling: 0.0001
training loss: tensor(0.8278) feature loss: tensor(0.2517)
Local adapation with distilling: 0.0001
training loss: tensor(0.7389) feature loss: tensor(0.2518)
Local adapation with distilling: 0.0001
training loss: tensor(0.7431) feature loss: tensor(0.2500)
Local adapation with distilling: 0.0001
training loss: tensor(0.6179) feature loss: tensor(0.2516)
Local adapation with distilling: 0.0001
training loss: tensor(0.6180) feature loss: tensor(0.2489)
Local adapation with distilling: 0.0001
training loss: tensor(0.6965) feature loss: tensor(0.2484)
Local adapation with distilling: 0.0001
training loss: tensor(0.5840) feature loss: tensor(0.2439)
Local adapation with distilling: 0.0001
training loss: tensor(0.6805) feature loss: tensor(0.2522)
Global Model Acc on global data: 0.4477 length of data: 10000
-------------Round number:  97  -------------
selected users: [31, 43, 64, 56, 85, 2, 70, 21, 34, 50]
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([55, 96, 8, 8]) torch.Size([55])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
all data: 490
Local adapation with distilling: 0.0001
training loss: tensor(0.6397) feature loss: tensor(0.2221)
Local adapation with distilling: 0.0001
training loss: tensor(0.6209) feature loss: tensor(0.2248)
Local adapation with distilling: 0.0001
training loss: tensor(0.6909) feature loss: tensor(0.2227)
Local adapation with distilling: 0.0001
training loss: tensor(0.5592) feature loss: tensor(0.2279)
Local adapation with distilling: 0.0001
training loss: tensor(0.5883) feature loss: tensor(0.2247)
Local adapation with distilling: 0.0001
training loss: tensor(0.6037) feature loss: tensor(0.2286)
Local adapation with distilling: 0.0001
training loss: tensor(0.5657) feature loss: tensor(0.2223)
Local adapation with distilling: 0.0001
training loss: tensor(0.6008) feature loss: tensor(0.2257)
Local adapation with distilling: 0.0001
training loss: tensor(0.5898) feature loss: tensor(0.2262)
Local adapation with distilling: 0.0001
training loss: tensor(0.6439) feature loss: tensor(0.2317)
Global Model Acc on global data: 0.4119 length of data: 10000
-------------Round number:  98  -------------
selected users: [11, 48, 97, 14, 22, 36, 99, 47, 33, 81]
random features: torch.Size([53, 96, 8, 8]) torch.Size([53])
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
random features: torch.Size([46, 96, 8, 8]) torch.Size([46])
random features: torch.Size([46, 96, 8, 8]) torch.Size([46])
random features: torch.Size([48, 96, 8, 8]) torch.Size([48])
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
all data: 488
Local adapation with distilling: 0.0001
training loss: tensor(0.7032) feature loss: tensor(0.2931)
Local adapation with distilling: 0.0001
training loss: tensor(0.7751) feature loss: tensor(0.2927)
Local adapation with distilling: 0.0001
training loss: tensor(0.7245) feature loss: tensor(0.3052)
Local adapation with distilling: 0.0001
training loss: tensor(0.7752) feature loss: tensor(0.2990)
Local adapation with distilling: 0.0001
training loss: tensor(0.9746) feature loss: tensor(0.3062)
Local adapation with distilling: 0.0001
training loss: tensor(0.7080) feature loss: tensor(0.2980)
Local adapation with distilling: 0.0001
training loss: tensor(0.7231) feature loss: tensor(0.2879)
Local adapation with distilling: 0.0001
training loss: tensor(0.7589) feature loss: tensor(0.2932)
Local adapation with distilling: 0.0001
training loss: tensor(0.7507) feature loss: tensor(0.2987)
Local adapation with distilling: 0.0001
training loss: tensor(0.8898) feature loss: tensor(0.2969)
Global Model Acc on global data: 0.4383 length of data: 10000
-------------Round number:  99  -------------
selected users: [14, 34, 30, 78, 16, 15, 91, 38, 10, 85]
random features: torch.Size([49, 96, 8, 8]) torch.Size([49])
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
random features: torch.Size([47, 96, 8, 8]) torch.Size([47])
random features: torch.Size([52, 96, 8, 8]) torch.Size([52])
random features: torch.Size([53, 96, 8, 8]) torch.Size([53])
random features: torch.Size([51, 96, 8, 8]) torch.Size([51])
random features: torch.Size([52, 96, 8, 8]) torch.Size([52])
random features: torch.Size([54, 96, 8, 8]) torch.Size([54])
random features: torch.Size([46, 96, 8, 8]) torch.Size([46])
random features: torch.Size([50, 96, 8, 8]) torch.Size([50])
all data: 501
Local adapation with distilling: 0.0001
training loss: tensor(0.5926) feature loss: tensor(0.2405)
Local adapation with distilling: 0.0001
training loss: tensor(0.5941) feature loss: tensor(0.2500)
Local adapation with distilling: 0.0001
training loss: tensor(0.6402) feature loss: tensor(0.2415)
Local adapation with distilling: 0.0001
training loss: tensor(0.6371) feature loss: tensor(0.2545)
Local adapation with distilling: 0.0001
training loss: tensor(0.6757) feature loss: tensor(0.2458)
Local adapation with distilling: 0.0001
training loss: tensor(0.7014) feature loss: tensor(0.2487)
Local adapation with distilling: 0.0001
training loss: tensor(0.6495) feature loss: tensor(0.2524)
Local adapation with distilling: 0.0001
training loss: tensor(0.5798) feature loss: tensor(0.2490)
Local adapation with distilling: 0.0001
training loss: tensor(0.6323) feature loss: tensor(0.2450)
Local adapation with distilling: 0.0001
training loss: tensor(0.5727) feature loss: tensor(0.2518)
Global Model Acc on global data: 0.4021 length of data: 10000
